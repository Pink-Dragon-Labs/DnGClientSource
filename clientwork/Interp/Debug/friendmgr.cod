	TITLE	C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0L@IPHK@?1listen?5?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@JPFN@?1pignore?5?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@BMG@Who?5would?5you?5like?5to?5add?$DP?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@IHHO@Add?5a?5friend?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09HHIM@Add?5a?5foe?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04BOMG@?1who?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareNoCase@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??M@YG_NABVCString@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BringWindowToTop@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CImageList@@QAEHPAUHICON__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LimitText@CRichEditCtrl@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPBI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Zconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Mconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Miterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@Vconst_iterator@12@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@_NV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nw@?$vector@_NV?$allocator@I@std@@@std@@KAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$vector@_NV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@_NV?$allocator@I@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDoubleButtonDlg@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemTextColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBounds@OCArray@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Data@OCArray@@QAEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ByteAt@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetByte@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetByte@CPackedData@@QAEXHE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutByte@CPackedData@@QAEXE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWord@CPackedData@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutWord@CPackedData@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LongAt@CPackedData@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Refresh@CTabDlgBtn@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabDlgBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTabDlgBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSelectedTab@CTabDlg@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AlertTab@CMainPanelWnd@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_TabDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPerson@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CFriendListCtrl@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnItemActivate@CFriendListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFriendListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFriendListCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CFoeListCtrl@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnItemActivate@CFoeListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFoeListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFoeListCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAddFriendBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnActivate@CAddFriendBtn@@UAEXFF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAddFriendBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAddFriendBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAddFriendDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAddFriendDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAddFoeBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnActivate@CAddFoeBtn@@UAEXFF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAddFoeBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAddFoeBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAddFoeDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAddFoeDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWhoBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnActivate@CWhoBtn@@UAEXFF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWhoBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWhoBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPeopleMgrWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFriendMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEnemyMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@ABU?$less@VCString@@@1@ABV?$allocator@VCPerson@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@V342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEIABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@ABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBVCString@@VCPerson@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAU?$pair@$$CBVCString@@VCPerson@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@ABU?$less@VCString@@@1@_NABV?$allocator@VCPerson@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEIABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABVCString@@ABVCPerson@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPerson@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@VCPerson@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@2@ABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QBEABVCString@@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@VCPerson@@@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@ABU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@ABU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$pair@$$CBVCString@@VCPerson@@@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCString@@VCPerson@@@2@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECFriendListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECFriendListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECFoeListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECFoeListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFoeListCtrl@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTabDlgBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFoeListCtrl@@6BCListCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFriendListCtrl@@6BCListCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CFoeListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CAddFriendBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CFoeListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CFriendMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPeopleMgrWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAddFoeDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFriendListCtrl@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFriendListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEnemyMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CFriendListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDoubleButtonDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAddFoeBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAddFriendDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CWhoBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPerson@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	?g_pFriendMgr@@3PAVCFriendMgr@@A		; g_pFriendMgr
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	?g_pEnemyMgr@@3PAVCEnemyMgr@@A			; g_pEnemyMgr
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?OnSetFocus@CAddFriendDlg@@QAEXPAVCWnd@@@Z	; CAddFriendDlg::OnSetFocus
PUBLIC	?_messageEntries@CAddFriendDlg@@0QBUAFX_MSGMAP_ENTRY@@B ; CAddFriendDlg::_messageEntries
PUBLIC	?messageMap@CAddFriendDlg@@1UAFX_MSGMAP@@B	; CAddFriendDlg::messageMap
PUBLIC	?_GetBaseMessageMap@CAddFriendDlg@@KGPBUAFX_MSGMAP@@XZ ; CAddFriendDlg::_GetBaseMessageMap
PUBLIC	?OnSetFocus@CAddFoeDlg@@QAEXPAVCWnd@@@Z		; CAddFoeDlg::OnSetFocus
PUBLIC	?_messageEntries@CAddFoeDlg@@0QBUAFX_MSGMAP_ENTRY@@B ; CAddFoeDlg::_messageEntries
PUBLIC	?messageMap@CAddFoeDlg@@1UAFX_MSGMAP@@B		; CAddFoeDlg::messageMap
PUBLIC	?_GetBaseMessageMap@CAddFoeDlg@@KGPBUAFX_MSGMAP@@XZ ; CAddFoeDlg::_GetBaseMessageMap
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A		; g_pPeopleMgrWnd
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
_BSS	SEGMENT
?g_pFriendMgr@@3PAVCFriendMgr@@A DD 01H DUP (?)		; g_pFriendMgr
?g_pEnemyMgr@@3PAVCEnemyMgr@@A DD 01H DUP (?)		; g_pEnemyMgr
?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A DD 01H DUP (?)	; g_pPeopleMgrWnd
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
CONST	SEGMENT
?messageMap@CAddFriendDlg@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CAddFriendDlg@@KGPBUAFX_MSGMAP@@XZ ; CAddFriendDlg::messageMap
	DD	FLAT:?_messageEntries@CAddFriendDlg@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CAddFriendDlg@@0QBUAFX_MSGMAP_ENTRY@@B DD 07H ; CAddFriendDlg::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	017H
	DD	FLAT:?OnSetFocus@CAddFriendDlg@@QAEXPAVCWnd@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@CAddFoeDlg@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CAddFoeDlg@@KGPBUAFX_MSGMAP@@XZ ; CAddFoeDlg::messageMap
	DD	FLAT:?_messageEntries@CAddFoeDlg@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CAddFoeDlg@@0QBUAFX_MSGMAP_ENTRY@@B DD 07H ; CAddFoeDlg::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	017H
	DD	FLAT:?OnSetFocus@CAddFoeDlg@@QAEXPAVCWnd@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	??0CPerson@@QAE@XZ				; CPerson::CPerson
PUBLIC	??_7CPerson@@6B@				; CPerson::`vftable'
PUBLIC	??_GCPerson@@UAEPAXI@Z				; CPerson::`scalar deleting destructor'
PUBLIC	??_ECPerson@@UAEPAXI@Z				; CPerson::`vector deleting destructor'
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
EXTRN	?Empty@CString@@QAEXXZ:NEAR			; CString::Empty
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
;	COMDAT ??_7CPerson@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CPerson@@6B@ DD FLAT:??_ECPerson@@UAEPAXI@Z		; CPerson::`vftable'
CONST	ENDS
xdata$x	SEGMENT
$T160786 DD	019930520H
	DD	01H
	DD	FLAT:$T160789
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160789 DD	0ffffffffH
	DD	FLAT:$L160782
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??0CPerson@@QAE@XZ PROC NEAR				; CPerson::CPerson

; 42   : CPerson::CPerson() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L160787
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 08	 add	 ecx, 8
  00022	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CPerson@@6B@ ; CPerson::`vftable'

; 43   : 	m_nFlags = 0;

  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	c6 41 04 00	 mov	 BYTE PTR [ecx+4], 0

; 44   : 	m_sName.Empty();

  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	83 c1 08	 add	 ecx, 8
  00044	e8 00 00 00 00	 call	 ?Empty@CString@@QAEXXZ	; CString::Empty

; 45   : }

  00049	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00050	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00056	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L160782:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0000b	c3		 ret	 0
$L160787:
  0000c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160786
  00011	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CPerson@@QAE@XZ ENDP					; CPerson::CPerson
PUBLIC	??1CPerson@@UAE@XZ				; CPerson::~CPerson
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??_GCPerson@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCPerson@@UAEPAXI@Z PROC NEAR			; CPerson::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CPerson@@UAE@XZ	; CPerson::~CPerson
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153592
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153592:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCPerson@@UAEPAXI@Z ENDP				; CPerson::`scalar deleting destructor'
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
??1CPerson@@UAE@XZ PROC NEAR				; CPerson::~CPerson

; 47   : CPerson::~CPerson() {

  00061	55		 push	 ebp
  00062	8b ec		 mov	 ebp, esp
  00064	51		 push	 ecx
  00065	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CPerson@@6B@ ; CPerson::`vftable'

; 48   : }

  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	83 c1 08	 add	 ecx, 8
  00077	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
??1CPerson@@UAE@XZ ENDP					; CPerson::~CPerson
_TEXT	ENDS
PUBLIC	?SetName@CPerson@@QAEXPBD@Z			; CPerson::SetName
EXTRN	??4CString@@QAEABV0@PBD@Z:NEAR			; CString::operator=
_TEXT	SEGMENT
_pName$ = 8
_this$ = -4
?SetName@CPerson@@QAEXPBD@Z PROC NEAR			; CPerson::SetName

; 51   : void CPerson::SetName ( LPCTSTR pName ) {

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	51		 push	 ecx
  00084	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 52   : 	m_sName = pName;

  00087	8b 45 08	 mov	 eax, DWORD PTR _pName$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	83 c1 08	 add	 ecx, 8
  00091	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 53   : }

  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 04 00	 ret	 4
?SetName@CPerson@@QAEXPBD@Z ENDP			; CPerson::SetName
_TEXT	ENDS
PUBLIC	?SetBusy@CPerson@@QAEHH@Z			; CPerson::SetBusy
_TEXT	SEGMENT
_bState$ = 8
_this$ = -4
?SetBusy@CPerson@@QAEHH@Z PROC NEAR			; CPerson::SetBusy

; 56   : BOOL CPerson::SetBusy ( BOOL bState ) {

  0009c	55		 push	 ebp
  0009d	8b ec		 mov	 ebp, esp
  0009f	51		 push	 ecx
  000a0	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 57   : 	if ( bState )

  000a3	83 7d 08 00	 cmp	 DWORD PTR _bState$[ebp], 0
  000a7	74 11		 je	 SHORT $L153604

; 58   : 		m_nFlags |= CPERSON_BUSY;

  000a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ac	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  000af	80 c9 01	 or	 cl, 1
  000b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	88 4a 04	 mov	 BYTE PTR [edx+4], cl

; 59   : 	else

  000b8	eb 0f		 jmp	 SHORT $L153605
$L153604:

; 60   : 		m_nFlags &= ~CPERSON_BUSY;

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  000c0	80 e1 fe	 and	 cl, 254			; 000000feH
  000c3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c6	88 4a 04	 mov	 BYTE PTR [edx+4], cl
$L153605:

; 61   : 
; 62   : 	return bState;

  000c9	8b 45 08	 mov	 eax, DWORD PTR _bState$[ebp]

; 63   : }

  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?SetBusy@CPerson@@QAEHH@Z ENDP				; CPerson::SetBusy
_TEXT	ENDS
PUBLIC	?SetOnline@CPerson@@QAEHH@Z			; CPerson::SetOnline
_TEXT	SEGMENT
_bState$ = 8
_this$ = -4
?SetOnline@CPerson@@QAEHH@Z PROC NEAR			; CPerson::SetOnline

; 66   : BOOL CPerson::SetOnline ( BOOL bState ) {

  000d2	55		 push	 ebp
  000d3	8b ec		 mov	 ebp, esp
  000d5	51		 push	 ecx
  000d6	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 67   : 	if ( bState )

  000d9	83 7d 08 00	 cmp	 DWORD PTR _bState$[ebp], 0
  000dd	74 11		 je	 SHORT $L153610

; 68   : 		m_nFlags |= CPERSON_ONLINE;

  000df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  000e5	80 c9 02	 or	 cl, 2
  000e8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000eb	88 4a 04	 mov	 BYTE PTR [edx+4], cl

; 69   : 	else

  000ee	eb 0f		 jmp	 SHORT $L153611
$L153610:

; 70   : 		m_nFlags &= ~CPERSON_ONLINE;

  000f0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  000f6	80 e1 fd	 and	 cl, 253			; 000000fdH
  000f9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fc	88 4a 04	 mov	 BYTE PTR [edx+4], cl
$L153611:

; 71   : 
; 72   : 	return bState;

  000ff	8b 45 08	 mov	 eax, DWORD PTR _bState$[ebp]

; 73   : }

  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c2 04 00	 ret	 4
?SetOnline@CPerson@@QAEHH@Z ENDP			; CPerson::SetOnline
_TEXT	ENDS
PUBLIC	?SetPermenant@CPerson@@QAEHH@Z			; CPerson::SetPermenant
_TEXT	SEGMENT
_bState$ = 8
_this$ = -4
?SetPermenant@CPerson@@QAEHH@Z PROC NEAR		; CPerson::SetPermenant

; 76   : BOOL CPerson::SetPermenant ( BOOL bState ) {

  00108	55		 push	 ebp
  00109	8b ec		 mov	 ebp, esp
  0010b	51		 push	 ecx
  0010c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 77   : 	if ( bState )

  0010f	83 7d 08 00	 cmp	 DWORD PTR _bState$[ebp], 0
  00113	74 11		 je	 SHORT $L153616

; 78   : 		m_nFlags |= CPERSON_PERMENANT;

  00115	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00118	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0011b	80 c9 04	 or	 cl, 4
  0011e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00121	88 4a 04	 mov	 BYTE PTR [edx+4], cl

; 79   : 	else

  00124	eb 0f		 jmp	 SHORT $L153617
$L153616:

; 80   : 		m_nFlags &= ~CPERSON_PERMENANT;

  00126	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00129	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0012c	80 e1 fb	 and	 cl, 251			; 000000fbH
  0012f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00132	88 4a 04	 mov	 BYTE PTR [edx+4], cl
$L153617:

; 81   : 
; 82   : 	return bState;

  00135	8b 45 08	 mov	 eax, DWORD PTR _bState$[ebp]

; 83   : }

  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 04 00	 ret	 4
?SetPermenant@CPerson@@QAEHH@Z ENDP			; CPerson::SetPermenant
_TEXT	ENDS
PUBLIC	?GetName@CPerson@@QAEXAAVCString@@@Z		; CPerson::GetName
EXTRN	??4CString@@QAEABV0@ABV0@@Z:NEAR		; CString::operator=
_TEXT	SEGMENT
_sName$ = 8
_this$ = -4
?GetName@CPerson@@QAEXAAVCString@@@Z PROC NEAR		; CPerson::GetName

; 86   : void CPerson::GetName ( CString &sName ) {

  0013e	55		 push	 ebp
  0013f	8b ec		 mov	 ebp, esp
  00141	51		 push	 ecx
  00142	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 87   : 	sName = m_sName;

  00145	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00148	83 c0 08	 add	 eax, 8
  0014b	50		 push	 eax
  0014c	8b 4d 08	 mov	 ecx, DWORD PTR _sName$[ebp]
  0014f	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@ABV0@@Z ; CString::operator=

; 88   : }

  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c2 04 00	 ret	 4
?GetName@CPerson@@QAEXAAVCString@@@Z ENDP		; CPerson::GetName
_TEXT	ENDS
PUBLIC	?GetBusy@CPerson@@QAEHXZ			; CPerson::GetBusy
_TEXT	SEGMENT
_this$ = -4
?GetBusy@CPerson@@QAEHXZ PROC NEAR			; CPerson::GetBusy

; 91   : BOOL CPerson::GetBusy ( void ) {

  0015a	55		 push	 ebp
  0015b	8b ec		 mov	 ebp, esp
  0015d	51		 push	 ecx
  0015e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 92   : 	return m_nFlags & CPERSON_BUSY;

  00161	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00164	33 c9		 xor	 ecx, ecx
  00166	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  00169	8b c1		 mov	 eax, ecx
  0016b	83 e0 01	 and	 eax, 1

; 93   : }

  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c3		 ret	 0
?GetBusy@CPerson@@QAEHXZ ENDP				; CPerson::GetBusy
_TEXT	ENDS
PUBLIC	?GetOnline@CPerson@@QAEHXZ			; CPerson::GetOnline
_TEXT	SEGMENT
_this$ = -4
?GetOnline@CPerson@@QAEHXZ PROC NEAR			; CPerson::GetOnline

; 96   : BOOL CPerson::GetOnline ( void ) {

  00172	55		 push	 ebp
  00173	8b ec		 mov	 ebp, esp
  00175	51		 push	 ecx
  00176	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 97   : 	return m_nFlags & CPERSON_ONLINE;

  00179	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017c	33 c9		 xor	 ecx, ecx
  0017e	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  00181	8b c1		 mov	 eax, ecx
  00183	83 e0 02	 and	 eax, 2

; 98   : }

  00186	8b e5		 mov	 esp, ebp
  00188	5d		 pop	 ebp
  00189	c3		 ret	 0
?GetOnline@CPerson@@QAEHXZ ENDP				; CPerson::GetOnline
_TEXT	ENDS
PUBLIC	?GetPermenant@CPerson@@QAEHXZ			; CPerson::GetPermenant
_TEXT	SEGMENT
_this$ = -4
?GetPermenant@CPerson@@QAEHXZ PROC NEAR			; CPerson::GetPermenant

; 101  : BOOL CPerson::GetPermenant( void ) {

  0018a	55		 push	 ebp
  0018b	8b ec		 mov	 ebp, esp
  0018d	51		 push	 ecx
  0018e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 102  : 	return m_nFlags & CPERSON_PERMENANT;

  00191	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00194	33 c9		 xor	 ecx, ecx
  00196	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  00199	8b c1		 mov	 eax, ecx
  0019b	83 e0 04	 and	 eax, 4

; 103  : }

  0019e	8b e5		 mov	 esp, ebp
  001a0	5d		 pop	 ebp
  001a1	c3		 ret	 0
?GetPermenant@CPerson@@QAEHXZ ENDP			; CPerson::GetPermenant
_TEXT	ENDS
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	?CompareNoCase@CString@@QBEHPBD@Z		; CString::CompareNoCase
PUBLIC	?Compare@CPerson@@QAEHPAV1@@Z			; CPerson::Compare
xdata$x	SEGMENT
$T160806 DD	019930520H
	DD	01H
	DD	FLAT:$T160808
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160808 DD	0ffffffffH
	DD	FLAT:$L160804
xdata$x	ENDS
_TEXT	SEGMENT
_pPerson$ = 8
$T160803 = -20
_this$ = -24
__$EHRec$ = -12
_sName$ = -16
?Compare@CPerson@@QAEHPAV1@@Z PROC NEAR			; CPerson::Compare

; 106  : int CPerson::Compare( CPerson* pPerson ) {

  001a2	55		 push	 ebp
  001a3	8b ec		 mov	 ebp, esp
  001a5	6a ff		 push	 -1
  001a7	68 00 00 00 00	 push	 $L160807
  001ac	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  001b2	50		 push	 eax
  001b3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  001ba	83 ec 0c	 sub	 esp, 12			; 0000000cH
  001bd	56		 push	 esi
  001be	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 107  : 	if ( GetOnline() != pPerson->GetOnline() ) {

  001c1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c4	e8 00 00 00 00	 call	 ?GetOnline@CPerson@@QAEHXZ ; CPerson::GetOnline
  001c9	8b f0		 mov	 esi, eax
  001cb	8b 4d 08	 mov	 ecx, DWORD PTR _pPerson$[ebp]
  001ce	e8 00 00 00 00	 call	 ?GetOnline@CPerson@@QAEHXZ ; CPerson::GetOnline
  001d3	3b f0		 cmp	 esi, eax
  001d5	74 18		 je	 SHORT $L153638

; 108  : 		if ( GetOnline() )

  001d7	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  001da	e8 00 00 00 00	 call	 ?GetOnline@CPerson@@QAEHXZ ; CPerson::GetOnline
  001df	85 c0		 test	 eax, eax
  001e1	74 05		 je	 SHORT $L153639

; 109  : 			return -1;

  001e3	83 c8 ff	 or	 eax, -1
  001e6	eb 4b		 jmp	 SHORT $L153637
$L153639:

; 110  : 
; 111  : 		return 1;

  001e8	b8 01 00 00 00	 mov	 eax, 1
  001ed	eb 44		 jmp	 SHORT $L153637
$L153638:

; 113  : 
; 114  : 	// compare names...
; 115  : 	CString sName;

  001ef	8d 4d f0	 lea	 ecx, DWORD PTR _sName$[ebp]
  001f2	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  001f7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 116  : 	pPerson->GetName ( sName );

  001fe	8d 45 f0	 lea	 eax, DWORD PTR _sName$[ebp]
  00201	50		 push	 eax
  00202	8b 4d 08	 mov	 ecx, DWORD PTR _pPerson$[ebp]
  00205	e8 00 00 00 00	 call	 ?GetName@CPerson@@QAEXAAVCString@@@Z ; CPerson::GetName

; 117  : 
; 118  : 	return m_sName.CompareNoCase( sName );

  0020a	8d 4d f0	 lea	 ecx, DWORD PTR _sName$[ebp]
  0020d	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00212	50		 push	 eax
  00213	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00216	83 c1 08	 add	 ecx, 8
  00219	e8 00 00 00 00	 call	 ?CompareNoCase@CString@@QBEHPBD@Z ; CString::CompareNoCase
  0021e	89 45 ec	 mov	 DWORD PTR $T160803[ebp], eax
  00221	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00228	8d 4d f0	 lea	 ecx, DWORD PTR _sName$[ebp]
  0022b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00230	8b 45 ec	 mov	 eax, DWORD PTR $T160803[ebp]
$L153637:

; 119  : }

  00233	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00236	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0023d	5e		 pop	 esi
  0023e	8b e5		 mov	 esp, ebp
  00240	5d		 pop	 ebp
  00241	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L160804:
  00016	8d 4d f0	 lea	 ecx, DWORD PTR _sName$[ebp]
  00019	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0001e	c3		 ret	 0
$L160807:
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160806
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Compare@CPerson@@QAEHPAV1@@Z ENDP			; CPerson::Compare
EXTRN	?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B:QWORD	; CSkinWnd::messageMap
_TEXT	SEGMENT
?_GetBaseMessageMap@CAddFriendDlg@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CAddFriendDlg::_GetBaseMessageMap

; 190  : BEGIN_MESSAGE_MAP ( CAddFriendDlg, CSkinWnd )

  00244	55		 push	 ebp
  00245	8b ec		 mov	 ebp, esp
  00247	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B ; CSkinWnd::messageMap
  0024c	5d		 pop	 ebp
  0024d	c3		 ret	 0
?_GetBaseMessageMap@CAddFriendDlg@@KGPBUAFX_MSGMAP@@XZ ENDP ; CAddFriendDlg::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CAddFriendDlg@@MBEPBUAFX_MSGMAP@@XZ ; CAddFriendDlg::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CAddFriendDlg@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CAddFriendDlg::GetMessageMap

; 190  : BEGIN_MESSAGE_MAP ( CAddFriendDlg, CSkinWnd )

  0024e	55		 push	 ebp
  0024f	8b ec		 mov	 ebp, esp
  00251	51		 push	 ecx
  00252	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00255	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CAddFriendDlg@@1UAFX_MSGMAP@@B ; CAddFriendDlg::messageMap
  0025a	8b e5		 mov	 esp, ebp
  0025c	5d		 pop	 ebp
  0025d	c3		 ret	 0
?GetMessageMap@CAddFriendDlg@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CAddFriendDlg::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CDoubleButtonDlg@@QAE@XZ			; CDoubleButtonDlg::CDoubleButtonDlg
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??0CAddFriendDlg@@QAE@XZ			; CAddFriendDlg::CAddFriendDlg
PUBLIC	?MakeSkinCtrl@CAddFriendDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CAddFriendDlg::MakeSkinCtrl
PUBLIC	?ExecuteButton@CAddFriendDlg@@UAEXH@Z		; CAddFriendDlg::ExecuteButton
PUBLIC	?Next@CAddFriendDlg@@UAEXXZ			; CAddFriendDlg::Next
PUBLIC	??_7CAddFriendDlg@@6B@				; CAddFriendDlg::`vftable'
PUBLIC	??_GCAddFriendDlg@@UAEPAXI@Z			; CAddFriendDlg::`scalar deleting destructor'
PUBLIC	??_ECAddFriendDlg@@UAEPAXI@Z			; CAddFriendDlg::`vector deleting destructor'
PUBLIC	?Previous@CSkinWnd@@UAEXXZ			; CSkinWnd::Previous
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?CloseSelf@CNoButtonDlg@@UAEX_N@Z:NEAR		; CNoButtonDlg::CloseSelf
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetProcessEvents@CSkinWnd@@MAE_NXZ:NEAR	; CSkinWnd::GetProcessEvents
EXTRN	?Disable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Disable
EXTRN	?Enable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Enable
EXTRN	?EnableGameModal@CSkinWnd@@UAEXHPAH@Z:NEAR	; CSkinWnd::EnableGameModal
EXTRN	?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z:NEAR	; CSkinWnd::DisableGameModal
EXTRN	?ProcessRefreshList@CSkinWnd@@UAEHXZ:NEAR	; CSkinWnd::ProcessRefreshList
EXTRN	?UpdateTracking@CSkinWnd@@UAEXXZ:NEAR		; CSkinWnd::UpdateTracking
EXTRN	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CSkinWnd::GetEventSinkMap
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
;	COMDAT ??_7CAddFriendDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CAddFriendDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CAddFriendDlg::`vftable'
	DD	FLAT:??_ECAddFriendDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CAddFriendDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CAddFriendDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CAddFriendDlg@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CAddFriendDlg@@UAEXH@Z
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CAddFriendDlg@@QAE@XZ PROC NEAR			; CAddFriendDlg::CAddFriendDlg

; 194  : CAddFriendDlg::CAddFriendDlg() : CDoubleButtonDlg() {

  0025e	55		 push	 ebp
  0025f	8b ec		 mov	 ebp, esp
  00261	51		 push	 ecx
  00262	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00265	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00268	e8 00 00 00 00	 call	 ??0CDoubleButtonDlg@@QAE@XZ ; CDoubleButtonDlg::CDoubleButtonDlg
  0026d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00270	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CAddFriendDlg@@6B@ ; CAddFriendDlg::`vftable'

; 195  : 	m_pEdit = NULL;

  00276	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00279	c7 81 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+184], 0

; 196  : 
; 197  : 	m_bResizing = false;

  00283	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00286	c7 82 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+156], 0

; 198  : }

  00290	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00293	8b e5		 mov	 esp, ebp
  00295	5d		 pop	 ebp
  00296	c3		 ret	 0
??0CAddFriendDlg@@QAE@XZ ENDP				; CAddFriendDlg::CAddFriendDlg
_TEXT	ENDS
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	??1CAddFriendDlg@@UAE@XZ			; CAddFriendDlg::~CAddFriendDlg
;	COMDAT ??_GCAddFriendDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCAddFriendDlg@@UAEPAXI@Z PROC NEAR			; CAddFriendDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CAddFriendDlg@@UAE@XZ ; CAddFriendDlg::~CAddFriendDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L153800
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L153800:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCAddFriendDlg@@UAEPAXI@Z ENDP			; CAddFriendDlg::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CDoubleButtonDlg@@UAE@XZ			; CDoubleButtonDlg::~CDoubleButtonDlg
;	COMDAT ??1CAddFriendDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CAddFriendDlg@@UAE@XZ PROC NEAR			; CAddFriendDlg::~CAddFriendDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CAddFriendDlg@@UAE@XZ ENDP				; CAddFriendDlg::~CAddFriendDlg
_TEXT	ENDS
PUBLIC	?get_TabDisplay@CToonSettings@@QAEHXZ		; CToonSettings::get_TabDisplay
PUBLIC	?IsFriend@CFriendMgr@@QAEHAAVCString@@@Z	; CFriendMgr::IsFriend
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	??0CPeopleMgrWnd@@QAE@XZ			; CPeopleMgrWnd::CPeopleMgrWnd
PUBLIC	?Create@CPeopleMgrWnd@@QAEHXZ			; CPeopleMgrWnd::Create
PUBLIC	?BringWindowToTop@CWnd@@QAEXXZ			; CWnd::BringWindowToTop
EXTRN	?MsgSendChat@@YAXPADZZ:NEAR			; MsgSendChat
EXTRN	?g_pToonSettings@@3PAVCToonSettings@@A:DWORD	; g_pToonSettings
EXTRN	?GetWindowTextA@CWnd@@QBEXAAVCString@@@Z:NEAR	; CWnd::GetWindowTextA
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
_DATA	SEGMENT
$SG153810 DB	'/addfriend %s', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T160824 DD	019930520H
	DD	02H
	DD	FLAT:$T160826
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160826 DD	0ffffffffH
	DD	FLAT:$L160821
	DD	00H
	DD	FLAT:$L160822
xdata$x	ENDS
_TEXT	SEGMENT
$T160817 = -20
$T160818 = -24
__$EHRec$ = -12
_nID$ = 8
_this$ = -28
_sResult$153808 = -16
?ExecuteButton@CAddFriendDlg@@UAEXH@Z PROC NEAR		; CAddFriendDlg::ExecuteButton

; 201  : void CAddFriendDlg::ExecuteButton( int nID ) {

  00297	55		 push	 ebp
  00298	8b ec		 mov	 ebp, esp
  0029a	6a ff		 push	 -1
  0029c	68 00 00 00 00	 push	 $L160825
  002a1	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  002a7	50		 push	 eax
  002a8	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  002af	83 ec 14	 sub	 esp, 20			; 00000014H
  002b2	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 202  : 	if ( m_pEdit && nID == 1 ) {

  002b5	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  002b8	83 b8 b8 00 00
	00 00		 cmp	 DWORD PTR [eax+184], 0
  002bf	0f 84 d2 00 00
	00		 je	 $L153807
  002c5	83 7d 08 01	 cmp	 DWORD PTR _nID$[ebp], 1
  002c9	0f 85 c8 00 00
	00		 jne	 $L153807

; 203  : 		CString sResult;

  002cf	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$153808[ebp]
  002d2	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  002d7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 204  : 
; 205  : 		m_pEdit->GetWindowText( sResult );

  002de	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$153808[ebp]
  002e1	51		 push	 ecx
  002e2	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  002e5	8b 8a b8 00 00
	00		 mov	 ecx, DWORD PTR [edx+184]
  002eb	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAVCString@@@Z ; CWnd::GetWindowTextA

; 206  : 	
; 207  : 		if ( !g_pFriendMgr->IsFriend( sResult ) ) {

  002f0	8d 45 f0	 lea	 eax, DWORD PTR _sResult$153808[ebp]
  002f3	50		 push	 eax
  002f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A ; g_pFriendMgr
  002fa	e8 00 00 00 00	 call	 ?IsFriend@CFriendMgr@@QAEHAAVCString@@@Z ; CFriendMgr::IsFriend
  002ff	85 c0		 test	 eax, eax
  00301	75 13		 jne	 SHORT $L153809

; 208  : 			MsgSendChat( "/addfriend %s", sResult );

  00303	8b 4d f0	 mov	 ecx, DWORD PTR _sResult$153808[ebp]
  00306	51		 push	 ecx
  00307	68 00 00 00 00	 push	 OFFSET FLAT:$SG153810
  0030c	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  00311	83 c4 08	 add	 esp, 8

; 209  : 		} else {

  00314	eb 72		 jmp	 SHORT $L153818
$L153809:

; 210  : 			if ( g_pPeopleMgrWnd ) {

  00316	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  0031d	74 0d		 je	 SHORT $L153812

; 211  : 				g_pPeopleMgrWnd->BringWindowToTop();

  0031f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  00325	e8 00 00 00 00	 call	 ?BringWindowToTop@CWnd@@QAEXXZ ; CWnd::BringWindowToTop

; 212  : 			} else {

  0032a	eb 5c		 jmp	 SHORT $L153818
$L153812:

; 213  : 				new CPeopleMgrWnd;

  0032c	68 a8 00 00 00	 push	 168			; 000000a8H
  00331	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00336	89 45 e8	 mov	 DWORD PTR $T160818[ebp], eax
  00339	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0033d	83 7d e8 00	 cmp	 DWORD PTR $T160818[ebp], 0
  00341	74 0d		 je	 SHORT $L160819
  00343	8b 4d e8	 mov	 ecx, DWORD PTR $T160818[ebp]
  00346	e8 00 00 00 00	 call	 ??0CPeopleMgrWnd@@QAE@XZ ; CPeopleMgrWnd::CPeopleMgrWnd
  0034b	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  0034e	eb 07		 jmp	 SHORT $L160820
$L160819:
  00350	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L160820:
  00357	8b 55 e0	 mov	 edx, DWORD PTR -32+[ebp]
  0035a	89 55 ec	 mov	 DWORD PTR $T160817[ebp], edx
  0035d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0

; 214  : 				g_pPeopleMgrWnd->Create();

  00361	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  00367	e8 00 00 00 00	 call	 ?Create@CPeopleMgrWnd@@QAEHXZ ; CPeopleMgrWnd::Create

; 215  : 			
; 216  : 				if ( !g_pToonSettings->get_TabDisplay() ) {

  0036c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00372	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  00377	85 c0		 test	 eax, eax
  00379	75 0d		 jne	 SHORT $L153818

; 217  : 					// show this dialog without activating it...
; 218  : 					g_pPeopleMgrWnd->ShowWindow ( SW_SHOW );

  0037b	6a 05		 push	 5
  0037d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  00383	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L153818:

; 222  : 	}

  00388	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0038f	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$153808[ebp]
  00392	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L153807:

; 223  : 
; 224  : 	// Close the dialog
; 225  : 	CloseSelf();

  00397	6a 00		 push	 0
  00399	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0039c	8b 10		 mov	 edx, DWORD PTR [eax]
  0039e	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  003a1	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 226  : }

  003a7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003b1	8b e5		 mov	 esp, ebp
  003b3	5d		 pop	 ebp
  003b4	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L160821:
  00029	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$153808[ebp]
  0002c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00031	c3		 ret	 0
$L160822:
  00032	8b 45 e8	 mov	 eax, DWORD PTR $T160818[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0003b	c3		 ret	 0
$L160825:
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160824
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ExecuteButton@CAddFriendDlg@@UAEXH@Z ENDP		; CAddFriendDlg::ExecuteButton
PUBLIC	?Create@CAddFriendDlg@@QAEHPAD0@Z		; CAddFriendDlg::Create
PUBLIC	?SetTransient@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetTransient
PUBLIC	?LimitText@CRichEditCtrl@@QAEXJ@Z		; CRichEditCtrl::LimitText
EXTRN	?CreateSkin@CDoubleButtonDlg@@QAEHPBDPAD111_N@Z:NEAR ; CDoubleButtonDlg::CreateSkin
EXTRN	?SetPriority@CSkinWnd@@QAEXH@Z:NEAR		; CSkinWnd::SetPriority
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:NEAR			; CWnd::SetFocus
_DATA	SEGMENT
	ORG $+2
$SG153825 DB	'Dlg_Password.skn', 00H
_DATA	ENDS
_TEXT	SEGMENT
_psTitle$ = 8
_psPrompt$ = 12
_this$ = -8
_bCreated$ = -4
?Create@CAddFriendDlg@@QAEHPAD0@Z PROC NEAR		; CAddFriendDlg::Create

; 229  : BOOL CAddFriendDlg::Create ( char* psTitle, char* psPrompt ) {

  003b7	55		 push	 ebp
  003b8	8b ec		 mov	 ebp, esp
  003ba	83 ec 08	 sub	 esp, 8
  003bd	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 230  : 	SetTransient( true );

  003c0	6a 01		 push	 1
  003c2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003c5	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 231  : 	SetPriority( swPriGameModal );

  003ca	6a 07		 push	 7
  003cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003cf	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 232  : 
; 233  : 	BOOL bCreated = CDoubleButtonDlg::CreateSkin( "Dlg_Password.skn", psTitle, psPrompt, NULL, NULL, true );

  003d4	6a 01		 push	 1
  003d6	6a 00		 push	 0
  003d8	6a 00		 push	 0
  003da	8b 45 0c	 mov	 eax, DWORD PTR _psPrompt$[ebp]
  003dd	50		 push	 eax
  003de	8b 4d 08	 mov	 ecx, DWORD PTR _psTitle$[ebp]
  003e1	51		 push	 ecx
  003e2	68 00 00 00 00	 push	 OFFSET FLAT:$SG153825
  003e7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003ea	e8 00 00 00 00	 call	 ?CreateSkin@CDoubleButtonDlg@@QAEHPBDPAD111_N@Z ; CDoubleButtonDlg::CreateSkin
  003ef	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 234  : 	
; 235  : 	if ( bCreated ) {

  003f2	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  003f6	74 28		 je	 SHORT $L153826

; 236  : 		assert( NULL != m_pEdit );
; 237  : 		m_pEdit->SetFocus();

  003f8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003fb	8b 8a b8 00 00
	00		 mov	 ecx, DWORD PTR [edx+184]
  00401	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 238  : 		m_pEdit->LimitText( 32 );

  00406	6a 20		 push	 32			; 00000020H
  00408	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0040b	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  00411	e8 00 00 00 00	 call	 ?LimitText@CRichEditCtrl@@QAEXJ@Z ; CRichEditCtrl::LimitText

; 239  : 
; 240  : 		ShowWindow( SW_SHOW );

  00416	6a 05		 push	 5
  00418	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0041b	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L153826:

; 242  : 
; 243  : 	return bCreated;

  00420	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 244  : }

  00423	8b e5		 mov	 esp, ebp
  00425	5d		 pop	 ebp
  00426	c2 08 00	 ret	 8
?Create@CAddFriendDlg@@QAEHPAD0@Z ENDP			; CAddFriendDlg::Create
_TEXT	ENDS
PUBLIC	??8@YG_NPBDABVCString@@@Z			; operator==
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
EXTRN	?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CNoButtonDlg::MakeSkinCtrl
EXTRN	?Left@CString@@QBE?AV1@H@Z:NEAR			; CString::Left
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	?Find@CString@@QBEHPBDH@Z:NEAR			; CString::Find
EXTRN	?GetName@CSkinObj@@QAE?AVCString@@XZ:NEAR	; CSkinObj::GetName
EXTRN	??0CSkinEditField@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N2@Z:NEAR ; CSkinEditField::CSkinEditField
_DATA	SEGMENT
	ORG $+3
$SG153836 DB	'_', 00H
	ORG $+2
$SG153838 DB	'ef', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T160846 DD	019930520H
	DD	04H
	DD	FLAT:$T160848
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160848 DD	0ffffffffH
	DD	FLAT:$L160839
	DD	00H
	DD	FLAT:$L160840
	DD	01H
	DD	FLAT:$L160841
	DD	02H
	DD	FLAT:$L160842
xdata$x	ENDS
_TEXT	SEGMENT
$T160829 = -24
$T160830 = -28
$T160831 = -32
$T160832 = -36
$T160837 = -40
$T160838 = -44
__$EHRec$ = -12
_obj$ = 8
_this$ = -48
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CAddFriendDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CAddFriendDlg::MakeSkinCtrl

; 247  : CSkinCtrl* CAddFriendDlg::MakeSkinCtrl ( CSkinObj obj ) {

  00429	55		 push	 ebp
  0042a	8b ec		 mov	 ebp, esp
  0042c	6a ff		 push	 -1
  0042e	68 00 00 00 00	 push	 $L160847
  00433	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00439	50		 push	 eax
  0043a	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00441	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00444	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx
  00447	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 248  : 	// the type of the control is specified by the left characters of the name up to the _
; 249  : 	CString name = obj.GetName();

  0044e	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  00451	50		 push	 eax
  00452	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00455	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  0045a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 250  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  0045e	6a 00		 push	 0
  00460	68 00 00 00 00	 push	 OFFSET FLAT:$SG153836
  00465	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00468	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  0046d	50		 push	 eax
  0046e	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00471	51		 push	 ecx
  00472	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00475	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  0047a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 251  : 
; 252  : 	// Make a password field for this
; 253  : 	if ( "ef" == id ) {

  0047e	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  00481	52		 push	 edx
  00482	68 00 00 00 00	 push	 OFFSET FLAT:$SG153838
  00487	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  0048c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00491	85 c0		 test	 eax, eax
  00493	0f 84 b7 00 00
	00		 je	 $L153837

; 254  : 		return m_pEdit = new CSkinEditField ( obj, this, 700, CSkinEdit::TABSTOP | ES_AUTOHSCROLL, false, true );

  00499	68 d8 00 00 00	 push	 216			; 000000d8H
  0049e	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  004a3	89 45 e0	 mov	 DWORD PTR $T160831[ebp], eax
  004a6	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  004aa	83 7d e0 00	 cmp	 DWORD PTR $T160831[ebp], 0
  004ae	74 39		 je	 SHORT $L160833
  004b0	6a 01		 push	 1
  004b2	6a 00		 push	 0
  004b4	68 80 00 01 00	 push	 65664			; 00010080H
  004b9	68 bc 02 00 00	 push	 700			; 000002bcH
  004be	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  004c1	50		 push	 eax
  004c2	83 ec 08	 sub	 esp, 8
  004c5	8b cc		 mov	 ecx, esp
  004c7	89 65 dc	 mov	 DWORD PTR $T160832[ebp], esp
  004ca	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  004cd	52		 push	 edx
  004ce	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  004d3	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  004d6	8b 4d e0	 mov	 ecx, DWORD PTR $T160831[ebp]
  004d9	e8 00 00 00 00	 call	 ??0CSkinEditField@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N2@Z ; CSkinEditField::CSkinEditField
  004de	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  004e1	8b 45 c8	 mov	 eax, DWORD PTR -56+[ebp]
  004e4	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  004e7	eb 07		 jmp	 SHORT $L160834
$L160833:
  004e9	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L160834:
  004f0	8b 4d c4	 mov	 ecx, DWORD PTR -60+[ebp]
  004f3	89 4d e4	 mov	 DWORD PTR $T160830[ebp], ecx
  004f6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  004fa	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  004fd	8b 45 e4	 mov	 eax, DWORD PTR $T160830[ebp]
  00500	89 82 b8 00 00
	00		 mov	 DWORD PTR [edx+184], eax
  00506	83 7d e4 00	 cmp	 DWORD PTR $T160830[ebp], 0
  0050a	74 0b		 je	 SHORT $L160835
  0050c	8b 4d e4	 mov	 ecx, DWORD PTR $T160830[ebp]
  0050f	83 c1 60	 add	 ecx, 96			; 00000060H
  00512	89 4d c0	 mov	 DWORD PTR -64+[ebp], ecx
  00515	eb 07		 jmp	 SHORT $L160836
$L160835:
  00517	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR -64+[ebp], 0
$L160836:
  0051e	8b 55 c0	 mov	 edx, DWORD PTR -64+[ebp]
  00521	89 55 e8	 mov	 DWORD PTR $T160829[ebp], edx
  00524	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00528	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0052b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00530	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00534	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00537	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0053c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00543	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00546	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0054b	8b 45 e8	 mov	 eax, DWORD PTR $T160829[ebp]
  0054e	eb 4f		 jmp	 SHORT $L153831
$L153837:

; 256  : 
; 257  : 	// Let the parent make the field
; 258  : 	return CDoubleButtonDlg::MakeSkinCtrl( obj );

  00550	83 ec 08	 sub	 esp, 8
  00553	8b cc		 mov	 ecx, esp
  00555	89 65 d4	 mov	 DWORD PTR $T160838[ebp], esp
  00558	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  0055b	50		 push	 eax
  0055c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00561	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  00564	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00567	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CNoButtonDlg::MakeSkinCtrl
  0056c	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  0056f	8b 4d b8	 mov	 ecx, DWORD PTR -72+[ebp]
  00572	89 4d d8	 mov	 DWORD PTR $T160837[ebp], ecx
  00575	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00579	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0057c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00581	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00585	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00588	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0058d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00594	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00597	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0059c	8b 45 d8	 mov	 eax, DWORD PTR $T160837[ebp]
$L153831:

; 259  : }

  0059f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  005a2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  005a9	8b e5		 mov	 esp, ebp
  005ab	5d		 pop	 ebp
  005ac	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L160839:
  00046	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00049	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0004e	c3		 ret	 0
$L160840:
  0004f	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00052	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00057	c3		 ret	 0
$L160841:
  00058	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0005b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00060	c3		 ret	 0
$L160842:
  00061	8b 45 e0	 mov	 eax, DWORD PTR $T160831[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0006a	c3		 ret	 0
$L160847:
  0006b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160846
  00070	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CAddFriendDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CAddFriendDlg::MakeSkinCtrl
_TEXT	SEGMENT
_this$ = -4
?Next@CAddFriendDlg@@UAEXXZ PROC NEAR			; CAddFriendDlg::Next

; 261  : void CAddFriendDlg::Next ( void ) {

  005af	55		 push	 ebp
  005b0	8b ec		 mov	 ebp, esp
  005b2	51		 push	 ecx
  005b3	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 262  : 	ExecuteButton ( 1 );

  005b6	6a 01		 push	 1
  005b8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  005bb	8b 10		 mov	 edx, DWORD PTR [eax]
  005bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005c0	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 263  : }

  005c6	8b e5		 mov	 esp, ebp
  005c8	5d		 pop	 ebp
  005c9	c3		 ret	 0
?Next@CAddFriendDlg@@UAEXXZ ENDP			; CAddFriendDlg::Next
_TEXT	ENDS
EXTRN	?OnSetFocus@CSkinWnd@@IAEXPAVCWnd@@@Z:NEAR	; CSkinWnd::OnSetFocus
_TEXT	SEGMENT
_pOldWnd$ = 8
_this$ = -4
?OnSetFocus@CAddFriendDlg@@QAEXPAVCWnd@@@Z PROC NEAR	; CAddFriendDlg::OnSetFocus

; 265  : void CAddFriendDlg::OnSetFocus ( CWnd *pOldWnd ) {

  005ca	55		 push	 ebp
  005cb	8b ec		 mov	 ebp, esp
  005cd	51		 push	 ecx
  005ce	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 266  :     CSkinWnd::OnSetFocus( pOldWnd );

  005d1	8b 45 08	 mov	 eax, DWORD PTR _pOldWnd$[ebp]
  005d4	50		 push	 eax
  005d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005d8	e8 00 00 00 00	 call	 ?OnSetFocus@CSkinWnd@@IAEXPAVCWnd@@@Z ; CSkinWnd::OnSetFocus

; 267  : 
; 268  :     if (m_pEdit)

  005dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005e0	83 b9 b8 00 00
	00 00		 cmp	 DWORD PTR [ecx+184], 0
  005e7	74 0e		 je	 SHORT $L153855

; 269  :         m_pEdit->SetFocus();

  005e9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  005ec	8b 8a b8 00 00
	00		 mov	 ecx, DWORD PTR [edx+184]
  005f2	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L153855:

; 270  : }

  005f7	8b e5		 mov	 esp, ebp
  005f9	5d		 pop	 ebp
  005fa	c2 04 00	 ret	 4
?OnSetFocus@CAddFriendDlg@@QAEXPAVCWnd@@@Z ENDP		; CAddFriendDlg::OnSetFocus
?_GetBaseMessageMap@CAddFoeDlg@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CAddFoeDlg::_GetBaseMessageMap

; 286  : BEGIN_MESSAGE_MAP ( CAddFoeDlg, CSkinWnd )

  005fd	55		 push	 ebp
  005fe	8b ec		 mov	 ebp, esp
  00600	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B ; CSkinWnd::messageMap
  00605	5d		 pop	 ebp
  00606	c3		 ret	 0
?_GetBaseMessageMap@CAddFoeDlg@@KGPBUAFX_MSGMAP@@XZ ENDP ; CAddFoeDlg::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CAddFoeDlg@@MBEPBUAFX_MSGMAP@@XZ	; CAddFoeDlg::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CAddFoeDlg@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CAddFoeDlg::GetMessageMap

; 286  : BEGIN_MESSAGE_MAP ( CAddFoeDlg, CSkinWnd )

  00607	55		 push	 ebp
  00608	8b ec		 mov	 ebp, esp
  0060a	51		 push	 ecx
  0060b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0060e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CAddFoeDlg@@1UAFX_MSGMAP@@B ; CAddFoeDlg::messageMap
  00613	8b e5		 mov	 esp, ebp
  00615	5d		 pop	 ebp
  00616	c3		 ret	 0
?GetMessageMap@CAddFoeDlg@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CAddFoeDlg::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CAddFoeDlg@@QAE@XZ				; CAddFoeDlg::CAddFoeDlg
PUBLIC	?MakeSkinCtrl@CAddFoeDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CAddFoeDlg::MakeSkinCtrl
PUBLIC	?ExecuteButton@CAddFoeDlg@@UAEXH@Z		; CAddFoeDlg::ExecuteButton
PUBLIC	?Next@CAddFoeDlg@@UAEXXZ			; CAddFoeDlg::Next
PUBLIC	??_7CAddFoeDlg@@6B@				; CAddFoeDlg::`vftable'
PUBLIC	??_GCAddFoeDlg@@UAEPAXI@Z			; CAddFoeDlg::`scalar deleting destructor'
PUBLIC	??_ECAddFoeDlg@@UAEPAXI@Z			; CAddFoeDlg::`vector deleting destructor'
;	COMDAT ??_7CAddFoeDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CAddFoeDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CAddFoeDlg::`vftable'
	DD	FLAT:??_ECAddFoeDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CAddFoeDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CAddFoeDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CAddFoeDlg@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CAddFoeDlg@@UAEXH@Z
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CAddFoeDlg@@QAE@XZ PROC NEAR				; CAddFoeDlg::CAddFoeDlg

; 290  : CAddFoeDlg::CAddFoeDlg() : CDoubleButtonDlg() {

  00617	55		 push	 ebp
  00618	8b ec		 mov	 ebp, esp
  0061a	51		 push	 ecx
  0061b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0061e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00621	e8 00 00 00 00	 call	 ??0CDoubleButtonDlg@@QAE@XZ ; CDoubleButtonDlg::CDoubleButtonDlg
  00626	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00629	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CAddFoeDlg@@6B@ ; CAddFoeDlg::`vftable'

; 291  : 	m_pEdit = NULL;

  0062f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00632	c7 81 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+184], 0

; 292  : 
; 293  : 	m_bResizing = false;

  0063c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0063f	c7 82 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+156], 0

; 294  : }

  00649	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0064c	8b e5		 mov	 esp, ebp
  0064e	5d		 pop	 ebp
  0064f	c3		 ret	 0
??0CAddFoeDlg@@QAE@XZ ENDP				; CAddFoeDlg::CAddFoeDlg
_TEXT	ENDS
PUBLIC	??1CAddFoeDlg@@UAE@XZ				; CAddFoeDlg::~CAddFoeDlg
;	COMDAT ??_GCAddFoeDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCAddFoeDlg@@UAEPAXI@Z PROC NEAR			; CAddFoeDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CAddFoeDlg@@UAE@XZ	; CAddFoeDlg::~CAddFoeDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L153907
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L153907:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCAddFoeDlg@@UAEPAXI@Z ENDP				; CAddFoeDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CAddFoeDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CAddFoeDlg@@UAE@XZ PROC NEAR				; CAddFoeDlg::~CAddFoeDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CAddFoeDlg@@UAE@XZ ENDP				; CAddFoeDlg::~CAddFoeDlg
_TEXT	ENDS
PUBLIC	?IsEnemy@CEnemyMgr@@QAEHAAVCString@@PA_N@Z	; CEnemyMgr::IsEnemy
_DATA	SEGMENT
	ORG $+1
$SG153917 DB	'/ignore %s', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T160866 DD	019930520H
	DD	02H
	DD	FLAT:$T160868
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160868 DD	0ffffffffH
	DD	FLAT:$L160863
	DD	00H
	DD	FLAT:$L160864
xdata$x	ENDS
_TEXT	SEGMENT
$T160859 = -20
$T160860 = -24
__$EHRec$ = -12
_nID$ = 8
_this$ = -28
_sResult$153915 = -16
?ExecuteButton@CAddFoeDlg@@UAEXH@Z PROC NEAR		; CAddFoeDlg::ExecuteButton

; 297  : void CAddFoeDlg::ExecuteButton( int nID ) {

  00650	55		 push	 ebp
  00651	8b ec		 mov	 ebp, esp
  00653	6a ff		 push	 -1
  00655	68 00 00 00 00	 push	 $L160867
  0065a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00660	50		 push	 eax
  00661	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00668	83 ec 14	 sub	 esp, 20			; 00000014H
  0066b	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 298  : 	if ( m_pEdit && nID == 1 ) {

  0066e	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00671	83 b8 b8 00 00
	00 00		 cmp	 DWORD PTR [eax+184], 0
  00678	0f 84 d4 00 00
	00		 je	 $L153914
  0067e	83 7d 08 01	 cmp	 DWORD PTR _nID$[ebp], 1
  00682	0f 85 ca 00 00
	00		 jne	 $L153914

; 299  : 		CString sResult;

  00688	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$153915[ebp]
  0068b	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00690	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 300  : 
; 301  : 		m_pEdit->GetWindowText( sResult );

  00697	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$153915[ebp]
  0069a	51		 push	 ecx
  0069b	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  0069e	8b 8a b8 00 00
	00		 mov	 ecx, DWORD PTR [edx+184]
  006a4	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAVCString@@@Z ; CWnd::GetWindowTextA

; 302  : 
; 303  : 		if ( !g_pEnemyMgr->IsEnemy( sResult ) ) {

  006a9	6a 00		 push	 0
  006ab	8d 45 f0	 lea	 eax, DWORD PTR _sResult$153915[ebp]
  006ae	50		 push	 eax
  006af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEnemyMgr@@3PAVCEnemyMgr@@A ; g_pEnemyMgr
  006b5	e8 00 00 00 00	 call	 ?IsEnemy@CEnemyMgr@@QAEHAAVCString@@PA_N@Z ; CEnemyMgr::IsEnemy
  006ba	85 c0		 test	 eax, eax
  006bc	75 13		 jne	 SHORT $L153916

; 304  : 			MsgSendChat( "/ignore %s", sResult );

  006be	8b 4d f0	 mov	 ecx, DWORD PTR _sResult$153915[ebp]
  006c1	51		 push	 ecx
  006c2	68 00 00 00 00	 push	 OFFSET FLAT:$SG153917
  006c7	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  006cc	83 c4 08	 add	 esp, 8

; 305  : 		} else {

  006cf	eb 72		 jmp	 SHORT $L153925
$L153916:

; 306  : 			if ( g_pPeopleMgrWnd ) {

  006d1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  006d8	74 0d		 je	 SHORT $L153919

; 307  : 				g_pPeopleMgrWnd->BringWindowToTop();

  006da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  006e0	e8 00 00 00 00	 call	 ?BringWindowToTop@CWnd@@QAEXXZ ; CWnd::BringWindowToTop

; 308  : 			} else {

  006e5	eb 5c		 jmp	 SHORT $L153925
$L153919:

; 309  : 				new CPeopleMgrWnd;

  006e7	68 a8 00 00 00	 push	 168			; 000000a8H
  006ec	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  006f1	89 45 e8	 mov	 DWORD PTR $T160860[ebp], eax
  006f4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  006f8	83 7d e8 00	 cmp	 DWORD PTR $T160860[ebp], 0
  006fc	74 0d		 je	 SHORT $L160861
  006fe	8b 4d e8	 mov	 ecx, DWORD PTR $T160860[ebp]
  00701	e8 00 00 00 00	 call	 ??0CPeopleMgrWnd@@QAE@XZ ; CPeopleMgrWnd::CPeopleMgrWnd
  00706	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  00709	eb 07		 jmp	 SHORT $L160862
$L160861:
  0070b	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L160862:
  00712	8b 55 e0	 mov	 edx, DWORD PTR -32+[ebp]
  00715	89 55 ec	 mov	 DWORD PTR $T160859[ebp], edx
  00718	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0

; 310  : 				g_pPeopleMgrWnd->Create();

  0071c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  00722	e8 00 00 00 00	 call	 ?Create@CPeopleMgrWnd@@QAEHXZ ; CPeopleMgrWnd::Create

; 311  : 			
; 312  : 				if ( !g_pToonSettings->get_TabDisplay() ) {

  00727	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0072d	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  00732	85 c0		 test	 eax, eax
  00734	75 0d		 jne	 SHORT $L153925

; 313  : 					// show this dialog without activating it...
; 314  : 					g_pPeopleMgrWnd->ShowWindow ( SW_SHOW );

  00736	6a 05		 push	 5
  00738	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  0073e	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L153925:

; 318  : 	}

  00743	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0074a	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$153915[ebp]
  0074d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L153914:

; 319  : 
; 320  : 	// Close the dialog
; 321  : 	CloseSelf();

  00752	6a 00		 push	 0
  00754	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0075c	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 322  : }

  00762	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00765	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0076c	8b e5		 mov	 esp, ebp
  0076e	5d		 pop	 ebp
  0076f	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L160863:
  00075	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$153915[ebp]
  00078	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0007d	c3		 ret	 0
$L160864:
  0007e	8b 45 e8	 mov	 eax, DWORD PTR $T160860[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00087	c3		 ret	 0
$L160867:
  00088	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160866
  0008d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ExecuteButton@CAddFoeDlg@@UAEXH@Z ENDP			; CAddFoeDlg::ExecuteButton
PUBLIC	?Create@CAddFoeDlg@@QAEHPAD0@Z			; CAddFoeDlg::Create
_DATA	SEGMENT
	ORG $+1
$SG153932 DB	'Dlg_Password.skn', 00H
_DATA	ENDS
_TEXT	SEGMENT
_psTitle$ = 8
_psPrompt$ = 12
_this$ = -8
_bCreated$ = -4
?Create@CAddFoeDlg@@QAEHPAD0@Z PROC NEAR		; CAddFoeDlg::Create

; 325  : BOOL CAddFoeDlg::Create ( char* psTitle, char* psPrompt ) {

  00772	55		 push	 ebp
  00773	8b ec		 mov	 ebp, esp
  00775	83 ec 08	 sub	 esp, 8
  00778	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 326  : 	SetTransient( true );

  0077b	6a 01		 push	 1
  0077d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00780	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 327  : 	SetPriority( swPriGameModal );

  00785	6a 07		 push	 7
  00787	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0078a	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 328  : 
; 329  : 	BOOL bCreated = CDoubleButtonDlg::CreateSkin( "Dlg_Password.skn", psTitle, psPrompt, NULL, NULL, true );

  0078f	6a 01		 push	 1
  00791	6a 00		 push	 0
  00793	6a 00		 push	 0
  00795	8b 45 0c	 mov	 eax, DWORD PTR _psPrompt$[ebp]
  00798	50		 push	 eax
  00799	8b 4d 08	 mov	 ecx, DWORD PTR _psTitle$[ebp]
  0079c	51		 push	 ecx
  0079d	68 00 00 00 00	 push	 OFFSET FLAT:$SG153932
  007a2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007a5	e8 00 00 00 00	 call	 ?CreateSkin@CDoubleButtonDlg@@QAEHPBDPAD111_N@Z ; CDoubleButtonDlg::CreateSkin
  007aa	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 330  : 	
; 331  : 	if ( bCreated ) {

  007ad	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  007b1	74 28		 je	 SHORT $L153933

; 332  : 		assert( NULL != m_pEdit );
; 333  : 		m_pEdit->SetFocus();

  007b3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  007b6	8b 8a b8 00 00
	00		 mov	 ecx, DWORD PTR [edx+184]
  007bc	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 334  : 		m_pEdit->LimitText( 32 );

  007c1	6a 20		 push	 32			; 00000020H
  007c3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  007c6	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  007cc	e8 00 00 00 00	 call	 ?LimitText@CRichEditCtrl@@QAEXJ@Z ; CRichEditCtrl::LimitText

; 335  : 
; 336  : 		ShowWindow( SW_SHOW );

  007d1	6a 05		 push	 5
  007d3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007d6	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L153933:

; 338  : 
; 339  : 	return bCreated;

  007db	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 340  : }

  007de	8b e5		 mov	 esp, ebp
  007e0	5d		 pop	 ebp
  007e1	c2 08 00	 ret	 8
?Create@CAddFoeDlg@@QAEHPAD0@Z ENDP			; CAddFoeDlg::Create
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+3
$SG153943 DB	'_', 00H
	ORG $+2
$SG153945 DB	'ef', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T160888 DD	019930520H
	DD	04H
	DD	FLAT:$T160890
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160890 DD	0ffffffffH
	DD	FLAT:$L160881
	DD	00H
	DD	FLAT:$L160882
	DD	01H
	DD	FLAT:$L160883
	DD	02H
	DD	FLAT:$L160884
xdata$x	ENDS
_TEXT	SEGMENT
$T160871 = -24
$T160872 = -28
$T160873 = -32
$T160874 = -36
$T160879 = -40
$T160880 = -44
__$EHRec$ = -12
_obj$ = 8
_this$ = -48
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CAddFoeDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CAddFoeDlg::MakeSkinCtrl

; 343  : CSkinCtrl* CAddFoeDlg::MakeSkinCtrl ( CSkinObj obj ) {

  007e4	55		 push	 ebp
  007e5	8b ec		 mov	 ebp, esp
  007e7	6a ff		 push	 -1
  007e9	68 00 00 00 00	 push	 $L160889
  007ee	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  007f4	50		 push	 eax
  007f5	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  007fc	83 ec 3c	 sub	 esp, 60			; 0000003cH
  007ff	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx
  00802	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 344  : 	// the type of the control is specified by the left characters of the name up to the _
; 345  : 	CString name = obj.GetName();

  00809	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  0080c	50		 push	 eax
  0080d	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00810	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  00815	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 346  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  00819	6a 00		 push	 0
  0081b	68 00 00 00 00	 push	 OFFSET FLAT:$SG153943
  00820	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00823	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  00828	50		 push	 eax
  00829	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0082c	51		 push	 ecx
  0082d	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00830	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  00835	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 347  : 
; 348  : 	// Make a password field for this
; 349  : 	if ( "ef" == id ) {

  00839	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  0083c	52		 push	 edx
  0083d	68 00 00 00 00	 push	 OFFSET FLAT:$SG153945
  00842	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00847	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0084c	85 c0		 test	 eax, eax
  0084e	0f 84 b7 00 00
	00		 je	 $L153944

; 350  : 		return m_pEdit = new CSkinEditField ( obj, this, 700, CSkinEdit::TABSTOP | ES_AUTOHSCROLL, false, true );

  00854	68 d8 00 00 00	 push	 216			; 000000d8H
  00859	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0085e	89 45 e0	 mov	 DWORD PTR $T160873[ebp], eax
  00861	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00865	83 7d e0 00	 cmp	 DWORD PTR $T160873[ebp], 0
  00869	74 39		 je	 SHORT $L160875
  0086b	6a 01		 push	 1
  0086d	6a 00		 push	 0
  0086f	68 80 00 01 00	 push	 65664			; 00010080H
  00874	68 bc 02 00 00	 push	 700			; 000002bcH
  00879	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  0087c	50		 push	 eax
  0087d	83 ec 08	 sub	 esp, 8
  00880	8b cc		 mov	 ecx, esp
  00882	89 65 dc	 mov	 DWORD PTR $T160874[ebp], esp
  00885	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00888	52		 push	 edx
  00889	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0088e	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  00891	8b 4d e0	 mov	 ecx, DWORD PTR $T160873[ebp]
  00894	e8 00 00 00 00	 call	 ??0CSkinEditField@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N2@Z ; CSkinEditField::CSkinEditField
  00899	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  0089c	8b 45 c8	 mov	 eax, DWORD PTR -56+[ebp]
  0089f	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  008a2	eb 07		 jmp	 SHORT $L160876
$L160875:
  008a4	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L160876:
  008ab	8b 4d c4	 mov	 ecx, DWORD PTR -60+[ebp]
  008ae	89 4d e4	 mov	 DWORD PTR $T160872[ebp], ecx
  008b1	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  008b5	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  008b8	8b 45 e4	 mov	 eax, DWORD PTR $T160872[ebp]
  008bb	89 82 b8 00 00
	00		 mov	 DWORD PTR [edx+184], eax
  008c1	83 7d e4 00	 cmp	 DWORD PTR $T160872[ebp], 0
  008c5	74 0b		 je	 SHORT $L160877
  008c7	8b 4d e4	 mov	 ecx, DWORD PTR $T160872[ebp]
  008ca	83 c1 60	 add	 ecx, 96			; 00000060H
  008cd	89 4d c0	 mov	 DWORD PTR -64+[ebp], ecx
  008d0	eb 07		 jmp	 SHORT $L160878
$L160877:
  008d2	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR -64+[ebp], 0
$L160878:
  008d9	8b 55 c0	 mov	 edx, DWORD PTR -64+[ebp]
  008dc	89 55 e8	 mov	 DWORD PTR $T160871[ebp], edx
  008df	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  008e3	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  008e6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  008eb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  008ef	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  008f2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  008f7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008fe	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00901	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00906	8b 45 e8	 mov	 eax, DWORD PTR $T160871[ebp]
  00909	eb 4f		 jmp	 SHORT $L153938
$L153944:

; 352  : 
; 353  : 	// Let the parent make the field
; 354  : 	return CDoubleButtonDlg::MakeSkinCtrl( obj );

  0090b	83 ec 08	 sub	 esp, 8
  0090e	8b cc		 mov	 ecx, esp
  00910	89 65 d4	 mov	 DWORD PTR $T160880[ebp], esp
  00913	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  00916	50		 push	 eax
  00917	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0091c	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  0091f	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00922	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CNoButtonDlg::MakeSkinCtrl
  00927	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  0092a	8b 4d b8	 mov	 ecx, DWORD PTR -72+[ebp]
  0092d	89 4d d8	 mov	 DWORD PTR $T160879[ebp], ecx
  00930	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00934	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00937	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0093c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00940	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00943	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00948	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0094f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00952	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00957	8b 45 d8	 mov	 eax, DWORD PTR $T160879[ebp]
$L153938:

; 355  : }

  0095a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0095d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00964	8b e5		 mov	 esp, ebp
  00966	5d		 pop	 ebp
  00967	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L160881:
  00092	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00095	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0009a	c3		 ret	 0
$L160882:
  0009b	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0009e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000a3	c3		 ret	 0
$L160883:
  000a4	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  000a7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000ac	c3		 ret	 0
$L160884:
  000ad	8b 45 e0	 mov	 eax, DWORD PTR $T160873[ebp]
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000b6	c3		 ret	 0
$L160889:
  000b7	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160888
  000bc	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CAddFoeDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CAddFoeDlg::MakeSkinCtrl
_TEXT	SEGMENT
_this$ = -4
?Next@CAddFoeDlg@@UAEXXZ PROC NEAR			; CAddFoeDlg::Next

; 357  : void CAddFoeDlg::Next ( void ) {

  0096a	55		 push	 ebp
  0096b	8b ec		 mov	 ebp, esp
  0096d	51		 push	 ecx
  0096e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 358  : 	ExecuteButton ( 1 );

  00971	6a 01		 push	 1
  00973	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00976	8b 10		 mov	 edx, DWORD PTR [eax]
  00978	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0097b	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 359  : }

  00981	8b e5		 mov	 esp, ebp
  00983	5d		 pop	 ebp
  00984	c3		 ret	 0
?Next@CAddFoeDlg@@UAEXXZ ENDP				; CAddFoeDlg::Next
_pOldWnd$ = 8
_this$ = -4
?OnSetFocus@CAddFoeDlg@@QAEXPAVCWnd@@@Z PROC NEAR	; CAddFoeDlg::OnSetFocus

; 361  : void CAddFoeDlg::OnSetFocus ( CWnd *pOldWnd ) {

  00985	55		 push	 ebp
  00986	8b ec		 mov	 ebp, esp
  00988	51		 push	 ecx
  00989	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 362  :     CSkinWnd::OnSetFocus( pOldWnd );

  0098c	8b 45 08	 mov	 eax, DWORD PTR _pOldWnd$[ebp]
  0098f	50		 push	 eax
  00990	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00993	e8 00 00 00 00	 call	 ?OnSetFocus@CSkinWnd@@IAEXPAVCWnd@@@Z ; CSkinWnd::OnSetFocus

; 363  : 
; 364  :     if (m_pEdit)

  00998	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0099b	83 b9 b8 00 00
	00 00		 cmp	 DWORD PTR [ecx+184], 0
  009a2	74 0e		 je	 SHORT $L153962

; 365  :         m_pEdit->SetFocus();

  009a4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  009a7	8b 8a b8 00 00
	00		 mov	 ecx, DWORD PTR [edx+184]
  009ad	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L153962:

; 366  : }

  009b2	8b e5		 mov	 esp, ebp
  009b4	5d		 pop	 ebp
  009b5	c2 04 00	 ret	 4
?OnSetFocus@CAddFoeDlg@@QAEXPAVCWnd@@@Z ENDP		; CAddFoeDlg::OnSetFocus
_TEXT	ENDS
PUBLIC	?CloseSelf@CPeopleMgrWnd@@UAEX_N@Z		; CPeopleMgrWnd::CloseSelf
PUBLIC	?MakeSkinCtrl@CPeopleMgrWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CPeopleMgrWnd::MakeSkinCtrl
PUBLIC	??_7CPeopleMgrWnd@@6B@				; CPeopleMgrWnd::`vftable'
PUBLIC	??_GCPeopleMgrWnd@@UAEPAXI@Z			; CPeopleMgrWnd::`scalar deleting destructor'
PUBLIC	??_ECPeopleMgrWnd@@UAEPAXI@Z			; CPeopleMgrWnd::`vector deleting destructor'
PUBLIC	?Next@CSkinWnd@@UAEXXZ				; CSkinWnd::Next
EXTRN	??0CSkinWnd@@QAE@XZ:NEAR			; CSkinWnd::CSkinWnd
EXTRN	?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinWnd::GetMessageMap
;	COMDAT ??_7CPeopleMgrWnd@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CPeopleMgrWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CPeopleMgrWnd::`vftable'
	DD	FLAT:??_ECPeopleMgrWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CPeopleMgrWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CPeopleMgrWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CPeopleMgrWnd@@QAE@XZ PROC NEAR			; CPeopleMgrWnd::CPeopleMgrWnd

; 385  : CPeopleMgrWnd::CPeopleMgrWnd() {

  009b8	55		 push	 ebp
  009b9	8b ec		 mov	 ebp, esp
  009bb	51		 push	 ecx
  009bc	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  009bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009c2	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  009c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009ca	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CPeopleMgrWnd@@6B@ ; CPeopleMgrWnd::`vftable'

; 386  : 	m_pFriendListCtrl = NULL;

  009d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009d3	c7 81 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+148], 0

; 387  : 	m_pFoeListCtrl = NULL;

  009dd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  009e0	c7 82 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+152], 0

; 388  : 	
; 389  : 	m_pFriendScrollBar = NULL;

  009ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009ed	c7 80 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+156], 0

; 390  : 	m_pFoeScrollBar = NULL;

  009f7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009fa	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0

; 391  : 	
; 392  : 	m_pImageList = NULL;

  00a04	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00a07	c7 82 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+164], 0

; 393  : 	
; 394  : 	assert( g_pPeopleMgrWnd == NULL );
; 395  : 	g_pPeopleMgrWnd = this;

  00a11	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a14	a3 00 00 00 00	 mov	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, eax ; g_pPeopleMgrWnd

; 396  : }

  00a19	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a1c	8b e5		 mov	 esp, ebp
  00a1e	5d		 pop	 ebp
  00a1f	c3		 ret	 0
??0CPeopleMgrWnd@@QAE@XZ ENDP				; CPeopleMgrWnd::CPeopleMgrWnd
_TEXT	ENDS
PUBLIC	??1CPeopleMgrWnd@@UAE@XZ			; CPeopleMgrWnd::~CPeopleMgrWnd
;	COMDAT ??_GCPeopleMgrWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCPeopleMgrWnd@@UAEPAXI@Z PROC NEAR			; CPeopleMgrWnd::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CPeopleMgrWnd@@UAE@XZ ; CPeopleMgrWnd::~CPeopleMgrWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L154001
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L154001:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCPeopleMgrWnd@@UAEPAXI@Z ENDP			; CPeopleMgrWnd::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSkinWnd@@UAE@XZ:NEAR			; CSkinWnd::~CSkinWnd
xdata$x	SEGMENT
$T160919 DD	019930520H
	DD	01H
	DD	FLAT:$T160921
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160921 DD	0ffffffffH
	DD	FLAT:$L160917
xdata$x	ENDS
_TEXT	SEGMENT
$T160897 = -16
$T160898 = -20
$T160901 = -24
$T160902 = -28
$T160905 = -32
$T160906 = -36
$T160909 = -40
$T160910 = -44
$T160913 = -48
$T160914 = -52
__$EHRec$ = -12
_this$ = -56
??1CPeopleMgrWnd@@UAE@XZ PROC NEAR			; CPeopleMgrWnd::~CPeopleMgrWnd

; 398  : CPeopleMgrWnd::~CPeopleMgrWnd() {

  00a20	55		 push	 ebp
  00a21	8b ec		 mov	 ebp, esp
  00a23	6a ff		 push	 -1
  00a25	68 00 00 00 00	 push	 $L160920
  00a2a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00a30	50		 push	 eax
  00a31	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00a38	83 ec 40	 sub	 esp, 64			; 00000040H
  00a3b	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx
  00a3e	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  00a41	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CPeopleMgrWnd@@6B@ ; CPeopleMgrWnd::`vftable'
  00a47	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 399  : 	if ( m_pFriendListCtrl ) {

  00a4e	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a51	83 b9 94 00 00
	00 00		 cmp	 DWORD PTR [ecx+148], 0
  00a58	74 3e		 je	 SHORT $L154005

; 400  : 		delete m_pFriendListCtrl;

  00a5a	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  00a5d	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00a63	89 45 ec	 mov	 DWORD PTR $T160898[ebp], eax
  00a66	8b 4d ec	 mov	 ecx, DWORD PTR $T160898[ebp]
  00a69	89 4d f0	 mov	 DWORD PTR $T160897[ebp], ecx
  00a6c	83 7d f0 00	 cmp	 DWORD PTR $T160897[ebp], 0
  00a70	74 12		 je	 SHORT $L160899
  00a72	6a 01		 push	 1
  00a74	8b 55 f0	 mov	 edx, DWORD PTR $T160897[ebp]
  00a77	8b 02		 mov	 eax, DWORD PTR [edx]
  00a79	8b 4d f0	 mov	 ecx, DWORD PTR $T160897[ebp]
  00a7c	ff 50 04	 call	 DWORD PTR [eax+4]
  00a7f	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  00a82	eb 07		 jmp	 SHORT $L160900
$L160899:
  00a84	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L160900:

; 401  : 		m_pFriendListCtrl = NULL;

  00a8b	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a8e	c7 81 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+148], 0
$L154005:

; 403  : 
; 404  : 	if ( m_pFoeListCtrl ) {

  00a98	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  00a9b	83 ba 98 00 00
	00 00		 cmp	 DWORD PTR [edx+152], 0
  00aa2	74 3e		 je	 SHORT $L154008

; 405  : 		delete m_pFoeListCtrl;

  00aa4	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  00aa7	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00aad	89 4d e4	 mov	 DWORD PTR $T160902[ebp], ecx
  00ab0	8b 55 e4	 mov	 edx, DWORD PTR $T160902[ebp]
  00ab3	89 55 e8	 mov	 DWORD PTR $T160901[ebp], edx
  00ab6	83 7d e8 00	 cmp	 DWORD PTR $T160901[ebp], 0
  00aba	74 12		 je	 SHORT $L160903
  00abc	6a 01		 push	 1
  00abe	8b 45 e8	 mov	 eax, DWORD PTR $T160901[ebp]
  00ac1	8b 10		 mov	 edx, DWORD PTR [eax]
  00ac3	8b 4d e8	 mov	 ecx, DWORD PTR $T160901[ebp]
  00ac6	ff 52 04	 call	 DWORD PTR [edx+4]
  00ac9	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  00acc	eb 07		 jmp	 SHORT $L160904
$L160903:
  00ace	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR -64+[ebp], 0
$L160904:

; 406  : 		m_pFoeListCtrl = NULL;

  00ad5	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  00ad8	c7 80 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+152], 0
$L154008:

; 408  : 
; 409  : 	if ( m_pFriendScrollBar ) {

  00ae2	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ae5	83 b9 9c 00 00
	00 00		 cmp	 DWORD PTR [ecx+156], 0
  00aec	74 3d		 je	 SHORT $L154011

; 410  : 		delete m_pFriendScrollBar;

  00aee	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  00af1	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00af7	89 45 dc	 mov	 DWORD PTR $T160906[ebp], eax
  00afa	8b 4d dc	 mov	 ecx, DWORD PTR $T160906[ebp]
  00afd	89 4d e0	 mov	 DWORD PTR $T160905[ebp], ecx
  00b00	83 7d e0 00	 cmp	 DWORD PTR $T160905[ebp], 0
  00b04	74 11		 je	 SHORT $L160907
  00b06	6a 01		 push	 1
  00b08	8b 55 e0	 mov	 edx, DWORD PTR $T160905[ebp]
  00b0b	8b 02		 mov	 eax, DWORD PTR [edx]
  00b0d	8b 4d e0	 mov	 ecx, DWORD PTR $T160905[ebp]
  00b10	ff 10		 call	 DWORD PTR [eax]
  00b12	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  00b15	eb 07		 jmp	 SHORT $L160908
$L160907:
  00b17	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR -68+[ebp], 0
$L160908:

; 411  : 		m_pFriendScrollBar = NULL;

  00b1e	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b21	c7 81 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+156], 0
$L154011:

; 413  : 
; 414  : 	if ( m_pFoeScrollBar ) {

  00b2b	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  00b2e	83 ba a0 00 00
	00 00		 cmp	 DWORD PTR [edx+160], 0
  00b35	74 3d		 je	 SHORT $L154014

; 415  : 		delete m_pFoeScrollBar;

  00b37	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  00b3a	8b 88 a0 00 00
	00		 mov	 ecx, DWORD PTR [eax+160]
  00b40	89 4d d4	 mov	 DWORD PTR $T160910[ebp], ecx
  00b43	8b 55 d4	 mov	 edx, DWORD PTR $T160910[ebp]
  00b46	89 55 d8	 mov	 DWORD PTR $T160909[ebp], edx
  00b49	83 7d d8 00	 cmp	 DWORD PTR $T160909[ebp], 0
  00b4d	74 11		 je	 SHORT $L160911
  00b4f	6a 01		 push	 1
  00b51	8b 45 d8	 mov	 eax, DWORD PTR $T160909[ebp]
  00b54	8b 10		 mov	 edx, DWORD PTR [eax]
  00b56	8b 4d d8	 mov	 ecx, DWORD PTR $T160909[ebp]
  00b59	ff 12		 call	 DWORD PTR [edx]
  00b5b	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  00b5e	eb 07		 jmp	 SHORT $L160912
$L160911:
  00b60	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR -72+[ebp], 0
$L160912:

; 416  : 		m_pFoeScrollBar = NULL;

  00b67	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  00b6a	c7 80 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+160], 0
$L154014:

; 418  : 
; 419  : 	if ( m_pImageList ) {

  00b74	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b77	83 b9 a4 00 00
	00 00		 cmp	 DWORD PTR [ecx+164], 0
  00b7e	74 3e		 je	 SHORT $L154017

; 420  : 		delete m_pImageList;

  00b80	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  00b83	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00b89	89 45 cc	 mov	 DWORD PTR $T160914[ebp], eax
  00b8c	8b 4d cc	 mov	 ecx, DWORD PTR $T160914[ebp]
  00b8f	89 4d d0	 mov	 DWORD PTR $T160913[ebp], ecx
  00b92	83 7d d0 00	 cmp	 DWORD PTR $T160913[ebp], 0
  00b96	74 12		 je	 SHORT $L160915
  00b98	6a 01		 push	 1
  00b9a	8b 55 d0	 mov	 edx, DWORD PTR $T160913[ebp]
  00b9d	8b 02		 mov	 eax, DWORD PTR [edx]
  00b9f	8b 4d d0	 mov	 ecx, DWORD PTR $T160913[ebp]
  00ba2	ff 50 04	 call	 DWORD PTR [eax+4]
  00ba5	89 45 b4	 mov	 DWORD PTR -76+[ebp], eax
  00ba8	eb 07		 jmp	 SHORT $L160916
$L160915:
  00baa	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR -76+[ebp], 0
$L160916:

; 421  : 		m_pImageList = NULL;

  00bb1	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00bb4	c7 81 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+164], 0
$L154017:

; 423  : }

  00bbe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00bc5	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00bc8	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00bcd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00bd0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00bd7	8b e5		 mov	 esp, ebp
  00bd9	5d		 pop	 ebp
  00bda	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L160917:
  000c1	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  000c9	c3		 ret	 0
$L160920:
  000ca	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160919
  000cf	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CPeopleMgrWnd@@UAE@XZ ENDP				; CPeopleMgrWnd::~CPeopleMgrWnd
EXTRN	?CloseSelf@CSkinWnd@@UAEX_N@Z:NEAR		; CSkinWnd::CloseSelf
_TEXT	SEGMENT
_bTransient$ = 8
_this$ = -4
?CloseSelf@CPeopleMgrWnd@@UAEX_N@Z PROC NEAR		; CPeopleMgrWnd::CloseSelf

; 426  : void CPeopleMgrWnd::CloseSelf( bool bTransient ) {

  00bdb	55		 push	 ebp
  00bdc	8b ec		 mov	 ebp, esp
  00bde	51		 push	 ecx
  00bdf	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 427  : 	assert ( g_pPeopleMgrWnd == this || g_pPeopleMgrWnd == NULL );
; 428  : 	g_pPeopleMgrWnd = NULL;

  00be2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd

; 429  : 
; 430  :     CSkinWnd::CloseSelf( bTransient );

  00bec	8a 45 08	 mov	 al, BYTE PTR _bTransient$[ebp]
  00bef	50		 push	 eax
  00bf0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bf3	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 431  : }

  00bf8	8b e5		 mov	 esp, ebp
  00bfa	5d		 pop	 ebp
  00bfb	c2 04 00	 ret	 4
?CloseSelf@CPeopleMgrWnd@@UAEX_N@Z ENDP			; CPeopleMgrWnd::CloseSelf
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z	; CMainPanelWnd::SetTabWindow
PUBLIC	?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ	; AfxGetInstanceHandle
PUBLIC	?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ; CListCtrl::SetImageList
PUBLIC	?Add@CImageList@@QAEHPAUHICON__@@@Z		; CImageList::Add
EXTRN	?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A:DWORD	; g_pMainPanelWnd
EXTRN	__imp__LoadIconA@8:NEAR
EXTRN	??0CImageList@@QAE@XZ:NEAR			; CImageList::CImageList
EXTRN	?Create@CImageList@@QAEHHHIHH@Z:NEAR		; CImageList::Create
EXTRN	?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CScrollable::SetScrollBar
EXTRN	?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z:NEAR ; CSkinWnd::CreateChild
EXTRN	?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z:NEAR ; CSkinWnd::CreatePopupChild
EXTRN	?RestoreLocation@CSkinWnd@@QAE_NXZ:NEAR		; CSkinWnd::RestoreLocation
EXTRN	?g_pMainWindow@@3PAVCMainWindow@@A:DWORD	; g_pMainWindow
_DATA	SEGMENT
	ORG $+1
$SG154032 DB	'People', 00H
	ORG $+1
$SG154033 DB	'Tab_people.skn', 00H
	ORG $+1
$SG154036 DB	'People', 00H
	ORG $+1
$SG154037 DB	'dlg_gsppeople.skn', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T160932 DD	019930520H
	DD	01H
	DD	FLAT:$T160934
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160934 DD	0ffffffffH
	DD	FLAT:$L160930
xdata$x	ENDS
_TEXT	SEGMENT
$T160924 = -36
$T160925 = -52
$T160926 = -56
$T160927 = -60
__$EHRec$ = -12
_this$ = -64
_bCreated$ = -20
_hInstance$ = -16
?Create@CPeopleMgrWnd@@QAEHXZ PROC NEAR			; CPeopleMgrWnd::Create

; 434  : BOOL CPeopleMgrWnd::Create ( void ) {

  00bfe	55		 push	 ebp
  00bff	8b ec		 mov	 ebp, esp
  00c01	6a ff		 push	 -1
  00c03	68 00 00 00 00	 push	 $L160933
  00c08	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00c0e	50		 push	 eax
  00c0f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00c16	83 ec 38	 sub	 esp, 56			; 00000038H
  00c19	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx

; 435  :     BOOL bCreated;
; 436  : 
; 437  : 	// set the priority of this window
; 438  : 	SetPriority ( swPriTell );

  00c1c	6a 04		 push	 4
  00c1e	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c21	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 439  : 
; 440  : 	// SNTODO: make skin path data-driven
; 441  :     if ( g_pToonSettings->get_TabDisplay() ) {

  00c26	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00c2c	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  00c31	85 c0		 test	 eax, eax
  00c33	74 30		 je	 SHORT $L154030

; 442  : 	    bCreated = CreateChild ( "Tab_people.skn", "People", CRect ( 0, 0, 0, 0 ), g_pMainPanelWnd);

  00c35	6a 01		 push	 1
  00c37	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  00c3c	50		 push	 eax
  00c3d	6a 00		 push	 0
  00c3f	6a 00		 push	 0
  00c41	6a 00		 push	 0
  00c43	6a 00		 push	 0
  00c45	8d 4d dc	 lea	 ecx, DWORD PTR $T160924[ebp]
  00c48	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  00c4d	50		 push	 eax
  00c4e	68 00 00 00 00	 push	 OFFSET FLAT:$SG154032
  00c53	68 00 00 00 00	 push	 OFFSET FLAT:$SG154033
  00c58	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c5b	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  00c60	89 45 ec	 mov	 DWORD PTR _bCreated$[ebp], eax

; 443  :     } else {

  00c63	eb 31		 jmp	 SHORT $L154034
$L154030:

; 444  : 	    bCreated = CreatePopupChild ( "dlg_gsppeople.skn", "People", CRect ( 0, 0, 0, 0 ), g_pMainWindow, FALSE );

  00c65	6a 01		 push	 1
  00c67	6a 00		 push	 0
  00c69	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  00c6f	51		 push	 ecx
  00c70	6a 00		 push	 0
  00c72	6a 00		 push	 0
  00c74	6a 00		 push	 0
  00c76	6a 00		 push	 0
  00c78	8d 4d cc	 lea	 ecx, DWORD PTR $T160925[ebp]
  00c7b	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  00c80	50		 push	 eax
  00c81	68 00 00 00 00	 push	 OFFSET FLAT:$SG154036
  00c86	68 00 00 00 00	 push	 OFFSET FLAT:$SG154037
  00c8b	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c8e	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  00c93	89 45 ec	 mov	 DWORD PTR _bCreated$[ebp], eax
$L154034:

; 446  : 
; 447  : 	if ( FALSE == bCreated ) {

  00c96	83 7d ec 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  00c9a	75 07		 jne	 SHORT $L154038

; 448  : 		return FALSE;

  00c9c	33 c0		 xor	 eax, eax
  00c9e	e9 6c 01 00 00	 jmp	 $L154028
$L154038:

; 453  : 
; 454  : 	assert( NULL != m_pFriendListCtrl );
; 455  : 	m_pFriendListCtrl->SetScrollBar( m_pFriendScrollBar );

  00ca3	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00ca6	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00cac	50		 push	 eax
  00cad	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00cb0	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  00cb6	83 c1 54	 add	 ecx, 84			; 00000054H
  00cb9	e8 00 00 00 00	 call	 ?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ; CScrollable::SetScrollBar

; 456  : 
; 457  : 	// find the foe scroll bar and hook it up!
; 458  : 	assert( m_pFoeScrollBar != NULL);
; 459  : 
; 460  : 	assert( NULL != m_pFoeListCtrl );
; 461  : 	m_pFoeListCtrl->SetScrollBar( m_pFoeScrollBar );

  00cbe	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00cc1	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  00cc7	50		 push	 eax
  00cc8	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ccb	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  00cd1	83 c1 54	 add	 ecx, 84			; 00000054H
  00cd4	e8 00 00 00 00	 call	 ?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ; CScrollable::SetScrollBar

; 462  : 
; 463  : 	// create the image list
; 464  : 	m_pImageList = new CImageList;

  00cd9	6a 08		 push	 8
  00cdb	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00ce0	89 45 c4	 mov	 DWORD PTR $T160927[ebp], eax
  00ce3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00cea	83 7d c4 00	 cmp	 DWORD PTR $T160927[ebp], 0
  00cee	74 0d		 je	 SHORT $L160928
  00cf0	8b 4d c4	 mov	 ecx, DWORD PTR $T160927[ebp]
  00cf3	e8 00 00 00 00	 call	 ??0CImageList@@QAE@XZ	; CImageList::CImageList
  00cf8	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  00cfb	eb 07		 jmp	 SHORT $L160929
$L160928:
  00cfd	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR -68+[ebp], 0
$L160929:
  00d04	8b 55 bc	 mov	 edx, DWORD PTR -68+[ebp]
  00d07	89 55 c8	 mov	 DWORD PTR $T160926[ebp], edx
  00d0a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d11	8b 45 c0	 mov	 eax, DWORD PTR _this$[ebp]
  00d14	8b 4d c8	 mov	 ecx, DWORD PTR $T160926[ebp]
  00d17	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 465  : 	m_pImageList->Create ( 16, 16, ILC_COLOR24, 3, 3 );

  00d1d	6a 03		 push	 3
  00d1f	6a 03		 push	 3
  00d21	6a 18		 push	 24			; 00000018H
  00d23	6a 10		 push	 16			; 00000010H
  00d25	6a 10		 push	 16			; 00000010H
  00d27	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00d2a	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  00d30	e8 00 00 00 00	 call	 ?Create@CImageList@@QAEHHHIHH@Z ; CImageList::Create

; 466  : 
; 467  : 	HINSTANCE hInstance = AfxGetInstanceHandle();

  00d35	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  00d3a	89 45 f0	 mov	 DWORD PTR _hInstance$[ebp], eax

; 468  : 
; 469  : 	m_pImageList->Add ( LoadIcon ( hInstance, MAKEINTRESOURCE ( IDI_FRIEND_STOP ) ) );

  00d3d	6a 70		 push	 112			; 00000070H
  00d3f	8b 45 f0	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00d42	50		 push	 eax
  00d43	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00d49	50		 push	 eax
  00d4a	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00d4d	8b 89 a4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+164]
  00d53	e8 00 00 00 00	 call	 ?Add@CImageList@@QAEHPAUHICON__@@@Z ; CImageList::Add

; 470  : 	m_pImageList->Add ( LoadIcon ( hInstance, MAKEINTRESOURCE ( IDI_FRIEND_GO ) ) );

  00d58	6a 71		 push	 113			; 00000071H
  00d5a	8b 55 f0	 mov	 edx, DWORD PTR _hInstance$[ebp]
  00d5d	52		 push	 edx
  00d5e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00d64	50		 push	 eax
  00d65	8b 45 c0	 mov	 eax, DWORD PTR _this$[ebp]
  00d68	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00d6e	e8 00 00 00 00	 call	 ?Add@CImageList@@QAEHPAUHICON__@@@Z ; CImageList::Add

; 471  : 	m_pImageList->Add ( LoadIcon ( hInstance, MAKEINTRESOURCE ( IDI_FRIEND_BUSY ) ) );

  00d73	6a 72		 push	 114			; 00000072H
  00d75	8b 4d f0	 mov	 ecx, DWORD PTR _hInstance$[ebp]
  00d78	51		 push	 ecx
  00d79	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00d7f	50		 push	 eax
  00d80	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00d83	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  00d89	e8 00 00 00 00	 call	 ?Add@CImageList@@QAEHPAUHICON__@@@Z ; CImageList::Add

; 472  : 	m_pImageList->Add ( LoadIcon ( hInstance, MAKEINTRESOURCE ( IDI_ENEMY_PERMENANT ) ) );

  00d8e	68 83 00 00 00	 push	 131			; 00000083H
  00d93	8b 45 f0	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00d96	50		 push	 eax
  00d97	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00d9d	50		 push	 eax
  00d9e	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00da1	8b 89 a4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+164]
  00da7	e8 00 00 00 00	 call	 ?Add@CImageList@@QAEHPAUHICON__@@@Z ; CImageList::Add

; 473  : 
; 474  : 	m_pFriendListCtrl->SetImageList ( m_pImageList, LVSIL_SMALL );

  00dac	6a 01		 push	 1
  00dae	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00db1	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00db7	50		 push	 eax
  00db8	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00dbb	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  00dc1	e8 00 00 00 00	 call	 ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ; CListCtrl::SetImageList

; 475  : 	m_pFoeListCtrl->SetImageList ( m_pImageList, LVSIL_SMALL );

  00dc6	6a 01		 push	 1
  00dc8	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00dcb	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00dd1	50		 push	 eax
  00dd2	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00dd5	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  00ddb	e8 00 00 00 00	 call	 ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ; CListCtrl::SetImageList

; 476  : 
; 477  :     if ( g_pToonSettings->get_TabDisplay() ) {

  00de0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00de6	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  00deb	85 c0		 test	 eax, eax
  00ded	74 13		 je	 SHORT $L154060

; 478  :         g_pMainPanelWnd->SetTabWindow( TID_FRIENDS, (CWnd *)this );

  00def	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00df2	52		 push	 edx
  00df3	6a 03		 push	 3
  00df5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  00dfb	e8 00 00 00 00	 call	 ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z ; CMainPanelWnd::SetTabWindow

; 479  :     } else {

  00e00	eb 08		 jmp	 SHORT $L154062
$L154060:

; 480  : 	    // restore the position of this window...
; 481  : 	    RestoreLocation();

  00e02	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00e05	e8 00 00 00 00	 call	 ?RestoreLocation@CSkinWnd@@QAE_NXZ ; CSkinWnd::RestoreLocation
$L154062:

; 483  : 
; 484  : 	return TRUE;

  00e0a	b8 01 00 00 00	 mov	 eax, 1
$L154028:

; 485  : }

  00e0f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00e12	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00e19	8b e5		 mov	 esp, ebp
  00e1b	5d		 pop	 ebp
  00e1c	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L160930:
  000d4	8b 45 c4	 mov	 eax, DWORD PTR $T160927[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000dd	c3		 ret	 0
$L160933:
  000de	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160932
  000e3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CPeopleMgrWnd@@QAEHXZ ENDP			; CPeopleMgrWnd::Create
PUBLIC	??0CFriendListCtrl@@QAE@XZ			; CFriendListCtrl::CFriendListCtrl
PUBLIC	??0CFoeListCtrl@@QAE@XZ				; CFoeListCtrl::CFoeListCtrl
PUBLIC	??0CAddFriendBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CAddFriendBtn::CAddFriendBtn
PUBLIC	??0CAddFoeBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CAddFoeBtn::CAddFoeBtn
PUBLIC	??0CWhoBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CWhoBtn::CWhoBtn
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinScrollBar::CSkinScrollBar
EXTRN	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::MakeSkinCtrl
EXTRN	?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z:NEAR ; CSkinListCtrl::Create
_DATA	SEGMENT
	ORG $+2
$SG154071 DB	'_', 00H
	ORG $+2
$SG154073 DB	'lcf', 00H
$SG154081 DB	'lce', 00H
$SG154089 DB	'sbf', 00H
$SG154097 DB	'sbe', 00H
$SG154105 DB	'vbf', 00H
$SG154113 DB	'vbe', 00H
$SG154121 DB	'vbw', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T161003 DD	019930520H
	DD	0aH
	DD	FLAT:$T161005
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161005 DD	0ffffffffH
	DD	FLAT:$L160984
	DD	00H
	DD	FLAT:$L160985
	DD	01H
	DD	FLAT:$L160986
	DD	02H
	DD	FLAT:$L160987
	DD	02H
	DD	FLAT:$L160989
	DD	02H
	DD	FLAT:$L160991
	DD	02H
	DD	FLAT:$L160993
	DD	02H
	DD	FLAT:$L160995
	DD	02H
	DD	FLAT:$L160997
	DD	02H
	DD	FLAT:$L160999
xdata$x	ENDS
_TEXT	SEGMENT
$T160936 = -24
$T160937 = -28
$T160940 = -32
$T160941 = -36
$T160944 = -40
$T160945 = -44
$T160948 = -48
$T160949 = -52
$T160952 = -56
$T160953 = -60
$T160954 = -64
$T160955 = -68
$T160958 = -72
$T160959 = -76
$T160960 = -80
$T160961 = -84
$T160964 = -88
$T160965 = -92
$T160966 = -96
$T160967 = -100
$T160970 = -104
$T160971 = -108
$T160972 = -112
$T160973 = -116
$T160976 = -120
$T160977 = -124
$T160978 = -128
$T160979 = -132
$T160982 = -136
$T160983 = -140
__$EHRec$ = -12
_obj$ = 8
_this$ = -144
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CPeopleMgrWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CPeopleMgrWnd::MakeSkinCtrl

; 488  : CSkinCtrl* CPeopleMgrWnd::MakeSkinCtrl ( CSkinObj obj ) {

  00e1d	55		 push	 ebp
  00e1e	8b ec		 mov	 ebp, esp
  00e20	6a ff		 push	 -1
  00e22	68 00 00 00 00	 push	 $L161004
  00e27	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00e2d	50		 push	 eax
  00e2e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00e35	81 ec e0 00 00
	00		 sub	 esp, 224		; 000000e0H
  00e3b	89 8d 70 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  00e41	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 489  : 	// the type of the control is specified by the 3 left characters of the name
; 490  : 	CString name = obj.GetName();

  00e48	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  00e4b	50		 push	 eax
  00e4c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00e4f	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  00e54	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 491  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  00e58	6a 00		 push	 0
  00e5a	68 00 00 00 00	 push	 OFFSET FLAT:$SG154071
  00e5f	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00e62	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  00e67	50		 push	 eax
  00e68	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00e6b	51		 push	 ecx
  00e6c	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00e6f	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  00e74	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 492  : 
; 493  : 	if ( "lcf" == id ) {

  00e78	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  00e7b	52		 push	 edx
  00e7c	68 00 00 00 00	 push	 OFFSET FLAT:$SG154073
  00e81	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00e86	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00e8b	85 c0		 test	 eax, eax
  00e8d	0f 84 ef 00 00
	00		 je	 $L154072

; 494  : 		m_pFriendListCtrl = new CFriendListCtrl();

  00e93	68 b4 00 00 00	 push	 180			; 000000b4H
  00e98	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00e9d	89 45 e4	 mov	 DWORD PTR $T160937[ebp], eax
  00ea0	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00ea4	83 7d e4 00	 cmp	 DWORD PTR $T160937[ebp], 0
  00ea8	74 10		 je	 SHORT $L160938
  00eaa	8b 4d e4	 mov	 ecx, DWORD PTR $T160937[ebp]
  00ead	e8 00 00 00 00	 call	 ??0CFriendListCtrl@@QAE@XZ ; CFriendListCtrl::CFriendListCtrl
  00eb2	89 85 6c ff ff
	ff		 mov	 DWORD PTR -148+[ebp], eax
  00eb8	eb 0a		 jmp	 SHORT $L160939
$L160938:
  00eba	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -148+[ebp], 0
$L160939:
  00ec4	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR -148+[ebp]
  00eca	89 45 e8	 mov	 DWORD PTR $T160936[ebp], eax
  00ecd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00ed1	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00ed7	8b 55 e8	 mov	 edx, DWORD PTR $T160936[ebp]
  00eda	89 91 94 00 00
	00		 mov	 DWORD PTR [ecx+148], edx

; 495  : 		m_pFriendListCtrl->Create( obj, this, 777 );

  00ee0	6a 00		 push	 0
  00ee2	6a 01		 push	 1
  00ee4	6a 01		 push	 1
  00ee6	68 09 03 00 00	 push	 777			; 00000309H
  00eeb	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00ef1	50		 push	 eax
  00ef2	83 ec 08	 sub	 esp, 8
  00ef5	8b cc		 mov	 ecx, esp
  00ef7	89 65 e0	 mov	 DWORD PTR $T160940[ebp], esp
  00efa	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00efd	52		 push	 edx
  00efe	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00f03	89 85 68 ff ff
	ff		 mov	 DWORD PTR -152+[ebp], eax
  00f09	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00f0f	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  00f15	e8 00 00 00 00	 call	 ?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z ; CSkinListCtrl::Create

; 496  : 		return m_pFriendListCtrl;

  00f1a	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00f20	83 b9 94 00 00
	00 00		 cmp	 DWORD PTR [ecx+148], 0
  00f27	74 17		 je	 SHORT $L160942
  00f29	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00f2f	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00f35	83 c0 40	 add	 eax, 64			; 00000040H
  00f38	89 85 64 ff ff
	ff		 mov	 DWORD PTR -156+[ebp], eax
  00f3e	eb 0a		 jmp	 SHORT $L160943
$L160942:
  00f40	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -156+[ebp], 0
$L160943:
  00f4a	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR -156+[ebp]
  00f50	89 4d dc	 mov	 DWORD PTR $T160941[ebp], ecx
  00f53	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00f57	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00f5a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00f5f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00f63	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00f66	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00f6b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00f72	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00f75	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00f7a	8b 45 dc	 mov	 eax, DWORD PTR $T160941[ebp]
  00f7d	e9 24 05 00 00	 jmp	 $L154066
$L154072:

; 498  : 
; 499  : 	if ( "lce" == id ) {

  00f82	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  00f85	52		 push	 edx
  00f86	68 00 00 00 00	 push	 OFFSET FLAT:$SG154081
  00f8b	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00f90	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00f95	85 c0		 test	 eax, eax
  00f97	0f 84 ef 00 00
	00		 je	 $L154080

; 500  : 		m_pFoeListCtrl = new CFoeListCtrl();

  00f9d	68 b4 00 00 00	 push	 180			; 000000b4H
  00fa2	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00fa7	89 45 d4	 mov	 DWORD PTR $T160945[ebp], eax
  00faa	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00fae	83 7d d4 00	 cmp	 DWORD PTR $T160945[ebp], 0
  00fb2	74 10		 je	 SHORT $L160946
  00fb4	8b 4d d4	 mov	 ecx, DWORD PTR $T160945[ebp]
  00fb7	e8 00 00 00 00	 call	 ??0CFoeListCtrl@@QAE@XZ	; CFoeListCtrl::CFoeListCtrl
  00fbc	89 85 60 ff ff
	ff		 mov	 DWORD PTR -160+[ebp], eax
  00fc2	eb 0a		 jmp	 SHORT $L160947
$L160946:
  00fc4	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -160+[ebp], 0
$L160947:
  00fce	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR -160+[ebp]
  00fd4	89 45 d8	 mov	 DWORD PTR $T160944[ebp], eax
  00fd7	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00fdb	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00fe1	8b 55 d8	 mov	 edx, DWORD PTR $T160944[ebp]
  00fe4	89 91 98 00 00
	00		 mov	 DWORD PTR [ecx+152], edx

; 501  : 		m_pFoeListCtrl->Create( obj, this, 778 );

  00fea	6a 00		 push	 0
  00fec	6a 01		 push	 1
  00fee	6a 01		 push	 1
  00ff0	68 0a 03 00 00	 push	 778			; 0000030aH
  00ff5	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00ffb	50		 push	 eax
  00ffc	83 ec 08	 sub	 esp, 8
  00fff	8b cc		 mov	 ecx, esp
  01001	89 65 d0	 mov	 DWORD PTR $T160948[ebp], esp
  01004	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01007	52		 push	 edx
  01008	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0100d	89 85 5c ff ff
	ff		 mov	 DWORD PTR -164+[ebp], eax
  01013	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  01019	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  0101f	e8 00 00 00 00	 call	 ?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z ; CSkinListCtrl::Create

; 502  : 		return m_pFoeListCtrl;

  01024	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0102a	83 b9 98 00 00
	00 00		 cmp	 DWORD PTR [ecx+152], 0
  01031	74 17		 je	 SHORT $L160950
  01033	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01039	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  0103f	83 c0 40	 add	 eax, 64			; 00000040H
  01042	89 85 58 ff ff
	ff		 mov	 DWORD PTR -168+[ebp], eax
  01048	eb 0a		 jmp	 SHORT $L160951
$L160950:
  0104a	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -168+[ebp], 0
$L160951:
  01054	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR -168+[ebp]
  0105a	89 4d cc	 mov	 DWORD PTR $T160949[ebp], ecx
  0105d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01061	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01064	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01069	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0106d	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01070	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01075	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0107c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0107f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01084	8b 45 cc	 mov	 eax, DWORD PTR $T160949[ebp]
  01087	e9 1a 04 00 00	 jmp	 $L154066
$L154080:

; 504  : 
; 505  : 	// Handle setting up a scroll bar - USUALLY moved to the actual window to save a pointer to it for linking.
; 506  : 	if ( "sbf" == id ) {

  0108c	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  0108f	52		 push	 edx
  01090	68 00 00 00 00	 push	 OFFSET FLAT:$SG154089
  01095	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  0109a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0109f	85 c0		 test	 eax, eax
  010a1	0f 84 ac 00 00
	00		 je	 $L154088

; 507  : 		return m_pFriendScrollBar = new CSkinScrollBar ( obj, this );

  010a7	6a 48		 push	 72			; 00000048H
  010a9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  010ae	83 c4 04	 add	 esp, 4
  010b1	89 45 c0	 mov	 DWORD PTR $T160954[ebp], eax
  010b4	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  010b8	83 7d c0 00	 cmp	 DWORD PTR $T160954[ebp], 0
  010bc	74 3a		 je	 SHORT $L160956
  010be	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  010c4	50		 push	 eax
  010c5	83 ec 08	 sub	 esp, 8
  010c8	8b cc		 mov	 ecx, esp
  010ca	89 65 bc	 mov	 DWORD PTR $T160955[ebp], esp
  010cd	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  010d0	52		 push	 edx
  010d1	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  010d6	89 85 54 ff ff
	ff		 mov	 DWORD PTR -172+[ebp], eax
  010dc	8b 4d c0	 mov	 ecx, DWORD PTR $T160954[ebp]
  010df	e8 00 00 00 00	 call	 ??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
  010e4	89 85 50 ff ff
	ff		 mov	 DWORD PTR -176+[ebp], eax
  010ea	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR -176+[ebp]
  010f0	89 85 4c ff ff
	ff		 mov	 DWORD PTR -180+[ebp], eax
  010f6	eb 0a		 jmp	 SHORT $L160957
$L160956:
  010f8	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -180+[ebp], 0
$L160957:
  01102	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR -180+[ebp]
  01108	89 4d c4	 mov	 DWORD PTR $T160953[ebp], ecx
  0110b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0110f	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01115	8b 45 c4	 mov	 eax, DWORD PTR $T160953[ebp]
  01118	89 82 9c 00 00
	00		 mov	 DWORD PTR [edx+156], eax
  0111e	8b 4d c4	 mov	 ecx, DWORD PTR $T160953[ebp]
  01121	89 4d c8	 mov	 DWORD PTR $T160952[ebp], ecx
  01124	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01128	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0112b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01130	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01134	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01137	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0113c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01143	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01146	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0114b	8b 45 c8	 mov	 eax, DWORD PTR $T160952[ebp]
  0114e	e9 53 03 00 00	 jmp	 $L154066
$L154088:

; 509  : 
; 510  : 	// Handle setting up a scroll bar - USUALLY moved to the actual window to save a pointer to it for linking.
; 511  : 	if ( "sbe" == id ) {

  01153	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  01156	52		 push	 edx
  01157	68 00 00 00 00	 push	 OFFSET FLAT:$SG154097
  0115c	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  01161	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01166	85 c0		 test	 eax, eax
  01168	0f 84 ac 00 00
	00		 je	 $L154096

; 512  : 		return m_pFoeScrollBar = new CSkinScrollBar ( obj, this );

  0116e	6a 48		 push	 72			; 00000048H
  01170	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01175	83 c4 04	 add	 esp, 4
  01178	89 45 b0	 mov	 DWORD PTR $T160960[ebp], eax
  0117b	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0117f	83 7d b0 00	 cmp	 DWORD PTR $T160960[ebp], 0
  01183	74 3a		 je	 SHORT $L160962
  01185	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0118b	50		 push	 eax
  0118c	83 ec 08	 sub	 esp, 8
  0118f	8b cc		 mov	 ecx, esp
  01191	89 65 ac	 mov	 DWORD PTR $T160961[ebp], esp
  01194	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01197	52		 push	 edx
  01198	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0119d	89 85 48 ff ff
	ff		 mov	 DWORD PTR -184+[ebp], eax
  011a3	8b 4d b0	 mov	 ecx, DWORD PTR $T160960[ebp]
  011a6	e8 00 00 00 00	 call	 ??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
  011ab	89 85 44 ff ff
	ff		 mov	 DWORD PTR -188+[ebp], eax
  011b1	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR -188+[ebp]
  011b7	89 85 40 ff ff
	ff		 mov	 DWORD PTR -192+[ebp], eax
  011bd	eb 0a		 jmp	 SHORT $L160963
$L160962:
  011bf	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -192+[ebp], 0
$L160963:
  011c9	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR -192+[ebp]
  011cf	89 4d b4	 mov	 DWORD PTR $T160959[ebp], ecx
  011d2	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  011d6	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  011dc	8b 45 b4	 mov	 eax, DWORD PTR $T160959[ebp]
  011df	89 82 a0 00 00
	00		 mov	 DWORD PTR [edx+160], eax
  011e5	8b 4d b4	 mov	 ecx, DWORD PTR $T160959[ebp]
  011e8	89 4d b8	 mov	 DWORD PTR $T160958[ebp], ecx
  011eb	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  011ef	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  011f2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  011f7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  011fb	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  011fe	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01203	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0120a	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0120d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01212	8b 45 b8	 mov	 eax, DWORD PTR $T160958[ebp]
  01215	e9 8c 02 00 00	 jmp	 $L154066
$L154096:

; 514  : 
; 515  : 	if ( "vbf" == id ) {

  0121a	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  0121d	52		 push	 edx
  0121e	68 00 00 00 00	 push	 OFFSET FLAT:$SG154105
  01223	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  01228	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0122d	85 c0		 test	 eax, eax
  0122f	0f 84 9d 00 00
	00		 je	 $L154104

; 516  : 		return new CAddFriendBtn( obj, this );

  01235	6a 14		 push	 20			; 00000014H
  01237	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0123c	83 c4 04	 add	 esp, 4
  0123f	89 45 a0	 mov	 DWORD PTR $T160966[ebp], eax
  01242	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  01246	83 7d a0 00	 cmp	 DWORD PTR $T160966[ebp], 0
  0124a	74 3a		 je	 SHORT $L160968
  0124c	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  01252	50		 push	 eax
  01253	83 ec 08	 sub	 esp, 8
  01256	8b cc		 mov	 ecx, esp
  01258	89 65 9c	 mov	 DWORD PTR $T160967[ebp], esp
  0125b	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0125e	52		 push	 edx
  0125f	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01264	89 85 3c ff ff
	ff		 mov	 DWORD PTR -196+[ebp], eax
  0126a	8b 4d a0	 mov	 ecx, DWORD PTR $T160966[ebp]
  0126d	e8 00 00 00 00	 call	 ??0CAddFriendBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CAddFriendBtn::CAddFriendBtn
  01272	89 85 38 ff ff
	ff		 mov	 DWORD PTR -200+[ebp], eax
  01278	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR -200+[ebp]
  0127e	89 85 34 ff ff
	ff		 mov	 DWORD PTR -204+[ebp], eax
  01284	eb 0a		 jmp	 SHORT $L160969
$L160968:
  01286	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -204+[ebp], 0
$L160969:
  01290	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR -204+[ebp]
  01296	89 4d a4	 mov	 DWORD PTR $T160965[ebp], ecx
  01299	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0129d	8b 55 a4	 mov	 edx, DWORD PTR $T160965[ebp]
  012a0	89 55 a8	 mov	 DWORD PTR $T160964[ebp], edx
  012a3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  012a7	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  012aa	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  012af	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  012b3	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  012b6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  012bb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  012c2	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  012c5	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  012ca	8b 45 a8	 mov	 eax, DWORD PTR $T160964[ebp]
  012cd	e9 d4 01 00 00	 jmp	 $L154066
$L154104:

; 518  : 
; 519  : 	if ( "vbe" == id ) {

  012d2	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  012d5	50		 push	 eax
  012d6	68 00 00 00 00	 push	 OFFSET FLAT:$SG154113
  012db	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  012e0	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  012e5	85 c0		 test	 eax, eax
  012e7	0f 84 9d 00 00
	00		 je	 $L154112

; 520  : 		return new CAddFoeBtn( obj, this );

  012ed	6a 14		 push	 20			; 00000014H
  012ef	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  012f4	83 c4 04	 add	 esp, 4
  012f7	89 45 90	 mov	 DWORD PTR $T160972[ebp], eax
  012fa	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  012fe	83 7d 90 00	 cmp	 DWORD PTR $T160972[ebp], 0
  01302	74 3a		 je	 SHORT $L160974
  01304	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0130a	51		 push	 ecx
  0130b	83 ec 08	 sub	 esp, 8
  0130e	8b cc		 mov	 ecx, esp
  01310	89 65 8c	 mov	 DWORD PTR $T160973[ebp], esp
  01313	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01316	52		 push	 edx
  01317	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0131c	89 85 30 ff ff
	ff		 mov	 DWORD PTR -208+[ebp], eax
  01322	8b 4d 90	 mov	 ecx, DWORD PTR $T160972[ebp]
  01325	e8 00 00 00 00	 call	 ??0CAddFoeBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CAddFoeBtn::CAddFoeBtn
  0132a	89 85 2c ff ff
	ff		 mov	 DWORD PTR -212+[ebp], eax
  01330	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR -212+[ebp]
  01336	89 85 28 ff ff
	ff		 mov	 DWORD PTR -216+[ebp], eax
  0133c	eb 0a		 jmp	 SHORT $L160975
$L160974:
  0133e	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -216+[ebp], 0
$L160975:
  01348	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR -216+[ebp]
  0134e	89 4d 94	 mov	 DWORD PTR $T160971[ebp], ecx
  01351	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01355	8b 55 94	 mov	 edx, DWORD PTR $T160971[ebp]
  01358	89 55 98	 mov	 DWORD PTR $T160970[ebp], edx
  0135b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0135f	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01362	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01367	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0136b	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0136e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01373	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0137a	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0137d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01382	8b 45 98	 mov	 eax, DWORD PTR $T160970[ebp]
  01385	e9 1c 01 00 00	 jmp	 $L154066
$L154112:

; 522  : 
; 523  : 	if ( "vbw" == id ) {

  0138a	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  0138d	50		 push	 eax
  0138e	68 00 00 00 00	 push	 OFFSET FLAT:$SG154121
  01393	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  01398	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0139d	85 c0		 test	 eax, eax
  0139f	0f 84 9d 00 00
	00		 je	 $L154120

; 524  : 		return new CWhoBtn( obj, this );

  013a5	6a 14		 push	 20			; 00000014H
  013a7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  013ac	83 c4 04	 add	 esp, 4
  013af	89 45 80	 mov	 DWORD PTR $T160978[ebp], eax
  013b2	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  013b6	83 7d 80 00	 cmp	 DWORD PTR $T160978[ebp], 0
  013ba	74 3d		 je	 SHORT $L160980
  013bc	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  013c2	51		 push	 ecx
  013c3	83 ec 08	 sub	 esp, 8
  013c6	8b cc		 mov	 ecx, esp
  013c8	89 a5 7c ff ff
	ff		 mov	 DWORD PTR $T160979[ebp], esp
  013ce	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  013d1	52		 push	 edx
  013d2	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  013d7	89 85 24 ff ff
	ff		 mov	 DWORD PTR -220+[ebp], eax
  013dd	8b 4d 80	 mov	 ecx, DWORD PTR $T160978[ebp]
  013e0	e8 00 00 00 00	 call	 ??0CWhoBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CWhoBtn::CWhoBtn
  013e5	89 85 20 ff ff
	ff		 mov	 DWORD PTR -224+[ebp], eax
  013eb	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR -224+[ebp]
  013f1	89 85 1c ff ff
	ff		 mov	 DWORD PTR -228+[ebp], eax
  013f7	eb 0a		 jmp	 SHORT $L160981
$L160980:
  013f9	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -228+[ebp], 0
$L160981:
  01403	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR -228+[ebp]
  01409	89 4d 84	 mov	 DWORD PTR $T160977[ebp], ecx
  0140c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01410	8b 55 84	 mov	 edx, DWORD PTR $T160977[ebp]
  01413	89 55 88	 mov	 DWORD PTR $T160976[ebp], edx
  01416	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0141a	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0141d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01422	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01426	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01429	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0142e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01435	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01438	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0143d	8b 45 88	 mov	 eax, DWORD PTR $T160976[ebp]
  01440	eb 64		 jmp	 SHORT $L154066
$L154120:

; 526  : 
; 527  : 	return CSkinWnd::MakeSkinCtrl( obj );

  01442	83 ec 08	 sub	 esp, 8
  01445	8b cc		 mov	 ecx, esp
  01447	89 a5 74 ff ff
	ff		 mov	 DWORD PTR $T160983[ebp], esp
  0144d	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  01450	50		 push	 eax
  01451	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01456	89 85 18 ff ff
	ff		 mov	 DWORD PTR -232+[ebp], eax
  0145c	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01462	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  01467	89 85 14 ff ff
	ff		 mov	 DWORD PTR -236+[ebp], eax
  0146d	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR -236+[ebp]
  01473	89 8d 78 ff ff
	ff		 mov	 DWORD PTR $T160982[ebp], ecx
  01479	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0147d	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01480	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01485	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01489	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0148c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01491	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01498	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0149b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  014a0	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR $T160982[ebp]
$L154066:

; 528  : }

  014a6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  014a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  014b0	8b e5		 mov	 esp, ebp
  014b2	5d		 pop	 ebp
  014b3	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L160984:
  000e8	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000eb	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000f0	c3		 ret	 0
$L160985:
  000f1	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  000f4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000f9	c3		 ret	 0
$L160986:
  000fa	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  000fd	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00102	c3		 ret	 0
$L160987:
  00103	8b 45 e4	 mov	 eax, DWORD PTR $T160937[ebp]
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0010c	c3		 ret	 0
$L160989:
  0010d	8b 45 d4	 mov	 eax, DWORD PTR $T160945[ebp]
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00116	c3		 ret	 0
$L160991:
  00117	8b 45 c0	 mov	 eax, DWORD PTR $T160954[ebp]
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00120	59		 pop	 ecx
  00121	c3		 ret	 0
$L160993:
  00122	8b 45 b0	 mov	 eax, DWORD PTR $T160960[ebp]
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0012b	59		 pop	 ecx
  0012c	c3		 ret	 0
$L160995:
  0012d	8b 45 a0	 mov	 eax, DWORD PTR $T160966[ebp]
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00136	59		 pop	 ecx
  00137	c3		 ret	 0
$L160997:
  00138	8b 45 90	 mov	 eax, DWORD PTR $T160972[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00141	59		 pop	 ecx
  00142	c3		 ret	 0
$L160999:
  00143	8b 45 80	 mov	 eax, DWORD PTR $T160978[ebp]
  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0014c	59		 pop	 ecx
  0014d	c3		 ret	 0
$L161004:
  0014e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161003
  00153	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CPeopleMgrWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CPeopleMgrWnd::MakeSkinCtrl
PUBLIC	?OnItemActivate@CFriendListCtrl@@UAEXH_N@Z	; CFriendListCtrl::OnItemActivate
PUBLIC	??_7CFriendListCtrl@@6BCListCtrl@@@		; CFriendListCtrl::`vftable'
PUBLIC	??_7CFriendListCtrl@@6BCSkinCtrl@@@		; CFriendListCtrl::`vftable'
PUBLIC	??_7CFriendListCtrl@@6BCScrollable@@@		; CFriendListCtrl::`vftable'
PUBLIC	??_7CFriendListCtrl@@6BCMouseWheelable@@@	; CFriendListCtrl::`vftable'
PUBLIC	??_GCFriendListCtrl@@UAEPAXI@Z			; CFriendListCtrl::`scalar deleting destructor'
PUBLIC	??_ECFriendListCtrl@@UAEPAXI@Z			; CFriendListCtrl::`vector deleting destructor'
PUBLIC	??_ECFriendListCtrl@@WEA@AEPAXI@Z		; CFriendListCtrl::`vector deleting destructor'
PUBLIC	??_ECFriendListCtrl@@WHE@AEPAXI@Z		; CFriendListCtrl::`vector deleting destructor'
PUBLIC	?GetItemTextColor@CSkinListCtrl@@MAEKH@Z	; CSkinListCtrl::GetItemTextColor
PUBLIC	?GetItemBGColor@CSkinListCtrl@@MAEKH@Z		; CSkinListCtrl::GetItemBGColor
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?Refresh@CSkinCtrl@@UAEXXZ:NEAR			; CSkinCtrl::Refresh
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ:NEAR ; CListCtrl::GetRuntimeClass
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
EXTRN	?OnMouseDown@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseDown
EXTRN	?OnMouseUp@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseUp
EXTRN	?OnActivate@CSkinCtrl@@UAEXFF@Z:NEAR		; CSkinCtrl::OnActivate
EXTRN	?SetLocation@CScrollable@@UAEXM@Z:NEAR		; CScrollable::SetLocation
EXTRN	?ChangeLocation@CScrollable@@UAEXH@Z:NEAR	; CScrollable::ChangeLocation
EXTRN	?ChangePage@CScrollable@@UAEXH@Z:NEAR		; CScrollable::ChangePage
EXTRN	?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:NEAR ; CListCtrl::DrawItem
EXTRN	?SetRange@CScrollable@@UAEXHH@Z:NEAR		; CScrollable::SetRange
EXTRN	?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z:NEAR	; CListCtrl::OnChildNotify
EXTRN	??0CSkinListCtrl@@QAE@H@Z:NEAR			; CSkinListCtrl::CSkinListCtrl
EXTRN	?UpdateMe@CSkinListCtrl@@UAEXXZ:NEAR		; CSkinListCtrl::UpdateMe
EXTRN	?UpdateScrollBar@CSkinListCtrl@@UAEXXZ:NEAR	; CSkinListCtrl::UpdateScrollBar
EXTRN	?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z:NEAR	; CSkinListCtrl::OnMouseWheel
EXTRN	?OnMouseOver@CSkinListCtrl@@UAEXVCPoint@@@Z:NEAR ; CSkinListCtrl::OnMouseOver
EXTRN	?GetMessageMap@CSkinListCtrl@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinListCtrl::GetMessageMap
;	COMDAT ??_7CFriendListCtrl@@6BCListCtrl@@@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CFriendListCtrl@@6BCListCtrl@@@ DD FLAT:?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ ; CFriendListCtrl::`vftable'
	DD	FLAT:??_ECFriendListCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinListCtrl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?GetItemTextColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?OnItemActivate@CFriendListCtrl@@UAEXH_N@Z
	DD	FLAT:?OnMouseOver@CSkinListCtrl@@UAEXVCPoint@@@Z
CONST	ENDS
;	COMDAT ??_7CFriendListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CFriendListCtrl@@6BCSkinCtrl@@@ DD FLAT:??_ECFriendListCtrl@@WEA@AEPAXI@Z ; CFriendListCtrl::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CFriendListCtrl@@6BCScrollable@@@
CONST	SEGMENT
??_7CFriendListCtrl@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinListCtrl@@UAEXXZ ; CFriendListCtrl::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CScrollable@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CSkinListCtrl@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CFriendListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CFriendListCtrl@@6BCMouseWheelable@@@ DD FLAT:??_ECFriendListCtrl@@WHE@AEPAXI@Z ; CFriendListCtrl::`vftable'
	DD	FLAT:?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z
CONST	ENDS
;	COMDAT ??0CFriendListCtrl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CFriendListCtrl@@QAE@XZ PROC NEAR			; CFriendListCtrl::CFriendListCtrl, COMDAT

; 126  : 	CFriendListCtrl() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 5a		 push	 90			; 0000005aH
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CSkinListCtrl@@QAE@H@Z ; CSkinListCtrl::CSkinListCtrl
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CFriendListCtrl@@6BCListCtrl@@@ ; CFriendListCtrl::`vftable'
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CFriendListCtrl@@6BCSkinCtrl@@@ ; CFriendListCtrl::`vftable'
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	c7 42 54 00 00
	00 00		 mov	 DWORD PTR [edx+84], OFFSET FLAT:??_7CFriendListCtrl@@6BCScrollable@@@ ; CFriendListCtrl::`vftable'
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CFriendListCtrl@@6BCMouseWheelable@@@ ; CFriendListCtrl::`vftable'
  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??0CFriendListCtrl@@QAE@XZ ENDP				; CFriendListCtrl::CFriendListCtrl
_TEXT	ENDS
EXTRN	?GetItemText@CListCtrl@@QBE?AVCString@@HH@Z:NEAR ; CListCtrl::GetItemText
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:NEAR
EXTRN	?Show@CVerbDialog@@QAEXXZ:NEAR			; CVerbDialog::Show
EXTRN	??0CChatVerbDialog@@QAE@XZ:NEAR			; CChatVerbDialog::CChatVerbDialog
EXTRN	__imp__stricmp:NEAR
EXTRN	?selectTell@CPrivateTellMgr@@QAEXPAD@Z:NEAR	; CPrivateTellMgr::selectTell
EXTRN	?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A:DWORD ; g_pPrivateTellMgr
EXTRN	?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; g_sCharacterName
;	COMDAT xdata$x
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
xdata$x	SEGMENT
$T161027 DD	019930520H
	DD	04H
	DD	FLAT:$T161029
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161029 DD	0ffffffffH
	DD	FLAT:$L161022
	DD	0ffffffffH
	DD	FLAT:$L161023
	DD	0ffffffffH
	DD	FLAT:$L161024
	DD	0ffffffffH
	DD	FLAT:$L161025
xdata$x	ENDS
;	COMDAT ?OnItemActivate@CFriendListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT
_nItemIndex$ = 8
_bDoubleClick$ = 12
_this$ = -56
_pVerbDialog$153675 = -16
$T161009 = -20
$T161010 = -24
$T161011 = -28
$T161012 = -32
$T161013 = -36
$T161016 = -40
$T161017 = -44
$T161018 = -48
$T161019 = -52
__$EHRec$ = -12
?OnItemActivate@CFriendListCtrl@@UAEXH_N@Z PROC NEAR	; CFriendListCtrl::OnItemActivate, COMDAT

; 129  : 	virtual void OnItemActivate ( int nItemIndex, bool bDoubleClick ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161028
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 4c	 sub	 esp, 76			; 0000004cH
  0001b	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx

; 130  : 		if ( bDoubleClick ) {

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _bDoubleClick$[ebp]
  00021	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00026	85 c0		 test	 eax, eax
  00028	0f 84 a2 00 00
	00		 je	 $L153665

; 131  : 			if ( stricmp( (char*) (LPCTSTR) GetItemText ( nItemIndex, 0 ), g_sCharacterName.c_str() ) )

  0002e	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  00039	50		 push	 eax
  0003a	6a 00		 push	 0
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _nItemIndex$[ebp]
  0003f	51		 push	 ecx
  00040	8d 55 e8	 lea	 edx, DWORD PTR $T161010[ebp]
  00043	52		 push	 edx
  00044	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?GetItemText@CListCtrl@@QBE?AVCString@@HH@Z ; CListCtrl::GetItemText
  0004c	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  0004f	8b 45 c4	 mov	 eax, DWORD PTR -60+[ebp]
  00052	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005c	8b 4d c0	 mov	 ecx, DWORD PTR -64+[ebp]
  0005f	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00064	50		 push	 eax
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__stricmp
  0006b	83 c4 08	 add	 esp, 8
  0006e	89 45 ec	 mov	 DWORD PTR $T161009[ebp], eax
  00071	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00078	8d 4d e8	 lea	 ecx, DWORD PTR $T161010[ebp]
  0007b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00080	83 7d ec 00	 cmp	 DWORD PTR $T161009[ebp], 0
  00084	74 45		 je	 SHORT $L153669

; 132  : 				g_pPrivateTellMgr->selectTell( (char*) (LPCTSTR) GetItemText ( nItemIndex, 0 ) );

  00086	6a 00		 push	 0
  00088	8b 4d 08	 mov	 ecx, DWORD PTR _nItemIndex$[ebp]
  0008b	51		 push	 ecx
  0008c	8d 55 e4	 lea	 edx, DWORD PTR $T161011[ebp]
  0008f	52		 push	 edx
  00090	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?GetItemText@CListCtrl@@QBE?AVCString@@HH@Z ; CListCtrl::GetItemText
  00098	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  0009b	8b 45 bc	 mov	 eax, DWORD PTR -68+[ebp]
  0009e	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  000a1	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000a8	8b 4d b8	 mov	 ecx, DWORD PTR -72+[ebp]
  000ab	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  000b0	50		 push	 eax
  000b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A ; g_pPrivateTellMgr
  000b7	e8 00 00 00 00	 call	 ?selectTell@CPrivateTellMgr@@QAEXPAD@Z ; CPrivateTellMgr::selectTell
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c3	8d 4d e4	 lea	 ecx, DWORD PTR $T161011[ebp]
  000c6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L153669:

; 133  : 		} else {

  000cb	e9 cb 00 00 00	 jmp	 $L161021
$L153665:

; 134  : 			CChatVerbDialog *pVerbDialog = new CChatVerbDialog;

  000d0	68 e8 00 00 00	 push	 232			; 000000e8H
  000d5	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  000da	89 45 dc	 mov	 DWORD PTR $T161013[ebp], eax
  000dd	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000e4	83 7d dc 00	 cmp	 DWORD PTR $T161013[ebp], 0
  000e8	74 0d		 je	 SHORT $L161014
  000ea	8b 4d dc	 mov	 ecx, DWORD PTR $T161013[ebp]
  000ed	e8 00 00 00 00	 call	 ??0CChatVerbDialog@@QAE@XZ ; CChatVerbDialog::CChatVerbDialog
  000f2	89 45 b4	 mov	 DWORD PTR -76+[ebp], eax
  000f5	eb 07		 jmp	 SHORT $L161015
$L161014:
  000f7	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR -76+[ebp], 0
$L161015:
  000fe	8b 4d b4	 mov	 ecx, DWORD PTR -76+[ebp]
  00101	89 4d e0	 mov	 DWORD PTR $T161012[ebp], ecx
  00104	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010b	8b 55 e0	 mov	 edx, DWORD PTR $T161012[ebp]
  0010e	89 55 f0	 mov	 DWORD PTR _pVerbDialog$153675[ebp], edx

; 135  : 			if ( pVerbDialog->Create ( GetItemText ( nItemIndex, 0 ), false ) )

  00111	6a 00		 push	 0
  00113	6a 00		 push	 0
  00115	6a 00		 push	 0
  00117	8b 45 08	 mov	 eax, DWORD PTR _nItemIndex$[ebp]
  0011a	50		 push	 eax
  0011b	8d 4d d4	 lea	 ecx, DWORD PTR $T161017[ebp]
  0011e	51		 push	 ecx
  0011f	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	e8 00 00 00 00	 call	 ?GetItemText@CListCtrl@@QBE?AVCString@@HH@Z ; CListCtrl::GetItemText
  00127	89 45 b0	 mov	 DWORD PTR -80+[ebp], eax
  0012a	8b 55 b0	 mov	 edx, DWORD PTR -80+[ebp]
  0012d	89 55 ac	 mov	 DWORD PTR -84+[ebp], edx
  00130	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00137	8b 4d ac	 mov	 ecx, DWORD PTR -84+[ebp]
  0013a	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0013f	50		 push	 eax
  00140	8b 45 f0	 mov	 eax, DWORD PTR _pVerbDialog$153675[ebp]
  00143	8b 10		 mov	 edx, DWORD PTR [eax]
  00145	8b 4d f0	 mov	 ecx, DWORD PTR _pVerbDialog$153675[ebp]
  00148	ff 92 fc 00 00
	00		 call	 DWORD PTR [edx+252]
  0014e	89 45 d8	 mov	 DWORD PTR $T161016[ebp], eax
  00151	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00158	8d 4d d4	 lea	 ecx, DWORD PTR $T161017[ebp]
  0015b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00160	83 7d d8 00	 cmp	 DWORD PTR $T161016[ebp], 0
  00164	74 0a		 je	 SHORT $L153681

; 136  : 				pVerbDialog->Show();

  00166	8b 4d f0	 mov	 ecx, DWORD PTR _pVerbDialog$153675[ebp]
  00169	e8 00 00 00 00	 call	 ?Show@CVerbDialog@@QAEXXZ ; CVerbDialog::Show

; 137  : 			else

  0016e	eb 2b		 jmp	 SHORT $L161021
$L153681:

; 138  : 				delete pVerbDialog;

  00170	8b 45 f0	 mov	 eax, DWORD PTR _pVerbDialog$153675[ebp]
  00173	89 45 cc	 mov	 DWORD PTR $T161019[ebp], eax
  00176	8b 4d cc	 mov	 ecx, DWORD PTR $T161019[ebp]
  00179	89 4d d0	 mov	 DWORD PTR $T161018[ebp], ecx
  0017c	83 7d d0 00	 cmp	 DWORD PTR $T161018[ebp], 0
  00180	74 12		 je	 SHORT $L161020
  00182	6a 01		 push	 1
  00184	8b 55 d0	 mov	 edx, DWORD PTR $T161018[ebp]
  00187	8b 02		 mov	 eax, DWORD PTR [edx]
  00189	8b 4d d0	 mov	 ecx, DWORD PTR $T161018[ebp]
  0018c	ff 50 04	 call	 DWORD PTR [eax+4]
  0018f	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  00192	eb 07		 jmp	 SHORT $L161021
$L161020:
  00194	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR -88+[ebp], 0
$L161021:

; 140  : 	};

  0019b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0019e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a5	8b e5		 mov	 esp, ebp
  001a7	5d		 pop	 ebp
  001a8	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161022:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR $T161010[ebp]
  00003	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00008	c3		 ret	 0
$L161023:
  00009	8d 4d e4	 lea	 ecx, DWORD PTR $T161011[ebp]
  0000c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00011	c3		 ret	 0
$L161024:
  00012	8b 45 dc	 mov	 eax, DWORD PTR $T161013[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0001b	c3		 ret	 0
$L161025:
  0001c	8d 4d d4	 lea	 ecx, DWORD PTR $T161017[ebp]
  0001f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00024	c3		 ret	 0
$L161028:
  00025	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161027
  0002a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnItemActivate@CFriendListCtrl@@UAEXH_N@Z ENDP		; CFriendListCtrl::OnItemActivate
PUBLIC	??1CFriendListCtrl@@UAE@XZ			; CFriendListCtrl::~CFriendListCtrl
;	COMDAT ??_GCFriendListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCFriendListCtrl@@UAEPAXI@Z PROC NEAR		; CFriendListCtrl::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CFriendListCtrl@@UAE@XZ ; CFriendListCtrl::~CFriendListCtrl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L153689
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L153689:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCFriendListCtrl@@UAEPAXI@Z ENDP			; CFriendListCtrl::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSkinListCtrl@@UAE@XZ:NEAR			; CSkinListCtrl::~CSkinListCtrl
;	COMDAT ??1CFriendListCtrl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CFriendListCtrl@@UAE@XZ PROC NEAR			; CFriendListCtrl::~CFriendListCtrl, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinListCtrl@@UAE@XZ ; CSkinListCtrl::~CSkinListCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CFriendListCtrl@@UAE@XZ ENDP				; CFriendListCtrl::~CFriendListCtrl
_TEXT	ENDS
PUBLIC	?OnItemActivate@CFoeListCtrl@@UAEXH_N@Z		; CFoeListCtrl::OnItemActivate
PUBLIC	??_7CFoeListCtrl@@6BCListCtrl@@@		; CFoeListCtrl::`vftable'
PUBLIC	??_7CFoeListCtrl@@6BCSkinCtrl@@@		; CFoeListCtrl::`vftable'
PUBLIC	??_7CFoeListCtrl@@6BCScrollable@@@		; CFoeListCtrl::`vftable'
PUBLIC	??_7CFoeListCtrl@@6BCMouseWheelable@@@		; CFoeListCtrl::`vftable'
PUBLIC	??_GCFoeListCtrl@@UAEPAXI@Z			; CFoeListCtrl::`scalar deleting destructor'
PUBLIC	??_ECFoeListCtrl@@UAEPAXI@Z			; CFoeListCtrl::`vector deleting destructor'
PUBLIC	??_ECFoeListCtrl@@WEA@AEPAXI@Z			; CFoeListCtrl::`vector deleting destructor'
PUBLIC	??_ECFoeListCtrl@@WHE@AEPAXI@Z			; CFoeListCtrl::`vector deleting destructor'
;	COMDAT ??_7CFoeListCtrl@@6BCListCtrl@@@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CFoeListCtrl@@6BCListCtrl@@@ DD FLAT:?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ ; CFoeListCtrl::`vftable'
	DD	FLAT:??_ECFoeListCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinListCtrl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?GetItemTextColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?OnItemActivate@CFoeListCtrl@@UAEXH_N@Z
	DD	FLAT:?OnMouseOver@CSkinListCtrl@@UAEXVCPoint@@@Z
CONST	ENDS
;	COMDAT ??_7CFoeListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CFoeListCtrl@@6BCSkinCtrl@@@ DD FLAT:??_ECFoeListCtrl@@WEA@AEPAXI@Z ; CFoeListCtrl::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CFoeListCtrl@@6BCScrollable@@@
CONST	SEGMENT
??_7CFoeListCtrl@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinListCtrl@@UAEXXZ ; CFoeListCtrl::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CScrollable@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CSkinListCtrl@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CFoeListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CFoeListCtrl@@6BCMouseWheelable@@@ DD FLAT:??_ECFoeListCtrl@@WHE@AEPAXI@Z ; CFoeListCtrl::`vftable'
	DD	FLAT:?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z
CONST	ENDS
;	COMDAT ??0CFoeListCtrl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CFoeListCtrl@@QAE@XZ PROC NEAR			; CFoeListCtrl::CFoeListCtrl, COMDAT

; 148  : 	CFoeListCtrl() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 5a		 push	 90			; 0000005aH
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CSkinListCtrl@@QAE@H@Z ; CSkinListCtrl::CSkinListCtrl
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CFoeListCtrl@@6BCListCtrl@@@ ; CFoeListCtrl::`vftable'
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CFoeListCtrl@@6BCSkinCtrl@@@ ; CFoeListCtrl::`vftable'
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	c7 42 54 00 00
	00 00		 mov	 DWORD PTR [edx+84], OFFSET FLAT:??_7CFoeListCtrl@@6BCScrollable@@@ ; CFoeListCtrl::`vftable'
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CFoeListCtrl@@6BCMouseWheelable@@@ ; CFoeListCtrl::`vftable'
  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??0CFoeListCtrl@@QAE@XZ ENDP				; CFoeListCtrl::CFoeListCtrl
_TEXT	ENDS
PUBLIC	??_C@_0L@IPHK@?1listen?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_0M@JPFN@?1pignore?5?$CFs?$AA@		; `string'
PUBLIC	?IsEnemy@CEnemyMgr@@QAEHPADPA_N@Z		; CEnemyMgr::IsEnemy
;	COMDAT ??_C@_0L@IPHK@?1listen?5?$CFs?$AA@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
_DATA	SEGMENT
??_C@_0L@IPHK@?1listen?5?$CFs?$AA@ DB '/listen %s', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0M@JPFN@?1pignore?5?$CFs?$AA@
_DATA	SEGMENT
??_C@_0M@JPFN@?1pignore?5?$CFs?$AA@ DB '/pignore %s', 00H ; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T161057 DD	019930520H
	DD	05H
	DD	FLAT:$T161059
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161059 DD	0ffffffffH
	DD	FLAT:$L161051
	DD	0ffffffffH
	DD	FLAT:$L161052
	DD	0ffffffffH
	DD	FLAT:$L161053
	DD	0ffffffffH
	DD	FLAT:$L161054
	DD	0ffffffffH
	DD	FLAT:$L161055
xdata$x	ENDS
;	COMDAT ?OnItemActivate@CFoeListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT
_nItemIndex$ = 8
_bDoubleClick$ = 12
_this$ = -60
_bPerm$153716 = -16
_pVerbDialog$153731 = -20
$T161038 = -24
$T161039 = -28
$T161040 = -32
$T161041 = -36
$T161042 = -40
$T161045 = -44
$T161046 = -48
$T161047 = -52
$T161048 = -56
__$EHRec$ = -12
?OnItemActivate@CFoeListCtrl@@UAEXH_N@Z PROC NEAR	; CFoeListCtrl::OnItemActivate, COMDAT

; 151  : 	virtual void OnItemActivate ( int nItemIndex, bool bDoubleClick ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161058
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 58	 sub	 esp, 88			; 00000058H
  0001b	89 4d c4	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 		if ( bDoubleClick ) {

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _bDoubleClick$[ebp]
  00021	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00026	85 c0		 test	 eax, eax
  00028	0f 84 ef 00 00
	00		 je	 $L153715

; 153  : 			bool bPerm = false;

  0002e	c6 45 f0 00	 mov	 BYTE PTR _bPerm$153716[ebp], 0

; 154  : 
; 155  : 			g_pEnemyMgr->IsEnemy( (char*) (LPCTSTR) GetItemText ( nItemIndex, 0 ), &bPerm );

  00032	8d 4d f0	 lea	 ecx, DWORD PTR _bPerm$153716[ebp]
  00035	51		 push	 ecx
  00036	6a 00		 push	 0
  00038	8b 55 08	 mov	 edx, DWORD PTR _nItemIndex$[ebp]
  0003b	52		 push	 edx
  0003c	8d 45 e8	 lea	 eax, DWORD PTR $T161038[ebp]
  0003f	50		 push	 eax
  00040	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?GetItemText@CListCtrl@@QBE?AVCString@@HH@Z ; CListCtrl::GetItemText
  00048	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  0004b	8b 4d c0	 mov	 ecx, DWORD PTR -64+[ebp]
  0004e	89 4d bc	 mov	 DWORD PTR -68+[ebp], ecx
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00058	8b 4d bc	 mov	 ecx, DWORD PTR -68+[ebp]
  0005b	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00060	50		 push	 eax
  00061	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEnemyMgr@@3PAVCEnemyMgr@@A ; g_pEnemyMgr
  00067	e8 00 00 00 00	 call	 ?IsEnemy@CEnemyMgr@@QAEHPADPA_N@Z ; CEnemyMgr::IsEnemy
  0006c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00073	8d 4d e8	 lea	 ecx, DWORD PTR $T161038[ebp]
  00076	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 156  : 
; 157  : 			if ( bPerm ) {

  0007b	8b 55 f0	 mov	 edx, DWORD PTR _bPerm$153716[ebp]
  0007e	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00084	85 d2		 test	 edx, edx
  00086	74 49		 je	 SHORT $L153720

; 158  : 				// register the enemy with the server...
; 159  : 				MsgSendChat ( "/listen %s", (char*) (LPCTSTR) GetItemText ( nItemIndex, 0 ) );

  00088	6a 00		 push	 0
  0008a	8b 45 08	 mov	 eax, DWORD PTR _nItemIndex$[ebp]
  0008d	50		 push	 eax
  0008e	8d 4d e4	 lea	 ecx, DWORD PTR $T161039[ebp]
  00091	51		 push	 ecx
  00092	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	e8 00 00 00 00	 call	 ?GetItemText@CListCtrl@@QBE?AVCString@@HH@Z ; CListCtrl::GetItemText
  0009a	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  0009d	8b 55 b8	 mov	 edx, DWORD PTR -72+[ebp]
  000a0	89 55 b4	 mov	 DWORD PTR -76+[ebp], edx
  000a3	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000aa	8b 4d b4	 mov	 ecx, DWORD PTR -76+[ebp]
  000ad	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  000b2	50		 push	 eax
  000b3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@IPHK@?1listen?5?$CFs?$AA@ ; `string'
  000b8	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  000bd	83 c4 08	 add	 esp, 8
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d e4	 lea	 ecx, DWORD PTR $T161039[ebp]
  000ca	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 160  : 			} else {

  000cf	eb 47		 jmp	 SHORT $L153725
$L153720:

; 161  : 				// register the enemy with the server...
; 162  : 				MsgSendChat ( "/pignore %s", (char*) (LPCTSTR) GetItemText ( nItemIndex, 0 ) );

  000d1	6a 00		 push	 0
  000d3	8b 45 08	 mov	 eax, DWORD PTR _nItemIndex$[ebp]
  000d6	50		 push	 eax
  000d7	8d 4d e0	 lea	 ecx, DWORD PTR $T161040[ebp]
  000da	51		 push	 ecx
  000db	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  000de	e8 00 00 00 00	 call	 ?GetItemText@CListCtrl@@QBE?AVCString@@HH@Z ; CListCtrl::GetItemText
  000e3	89 45 b0	 mov	 DWORD PTR -80+[ebp], eax
  000e6	8b 55 b0	 mov	 edx, DWORD PTR -80+[ebp]
  000e9	89 55 ac	 mov	 DWORD PTR -84+[ebp], edx
  000ec	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000f3	8b 4d ac	 mov	 ecx, DWORD PTR -84+[ebp]
  000f6	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  000fb	50		 push	 eax
  000fc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@JPFN@?1pignore?5?$CFs?$AA@ ; `string'
  00101	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  00106	83 c4 08	 add	 esp, 8
  00109	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00110	8d 4d e0	 lea	 ecx, DWORD PTR $T161040[ebp]
  00113	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L153725:

; 164  : 		} else {

  00118	e9 cb 00 00 00	 jmp	 $L161050
$L153715:

; 165  : 			CChatVerbDialog *pVerbDialog = new CChatVerbDialog;

  0011d	68 e8 00 00 00	 push	 232			; 000000e8H
  00122	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00127	89 45 d8	 mov	 DWORD PTR $T161042[ebp], eax
  0012a	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00131	83 7d d8 00	 cmp	 DWORD PTR $T161042[ebp], 0
  00135	74 0d		 je	 SHORT $L161043
  00137	8b 4d d8	 mov	 ecx, DWORD PTR $T161042[ebp]
  0013a	e8 00 00 00 00	 call	 ??0CChatVerbDialog@@QAE@XZ ; CChatVerbDialog::CChatVerbDialog
  0013f	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  00142	eb 07		 jmp	 SHORT $L161044
$L161043:
  00144	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR -88+[ebp], 0
$L161044:
  0014b	8b 45 a8	 mov	 eax, DWORD PTR -88+[ebp]
  0014e	89 45 dc	 mov	 DWORD PTR $T161041[ebp], eax
  00151	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00158	8b 4d dc	 mov	 ecx, DWORD PTR $T161041[ebp]
  0015b	89 4d ec	 mov	 DWORD PTR _pVerbDialog$153731[ebp], ecx

; 166  : 			if ( pVerbDialog->Create ( GetItemText ( nItemIndex, 0 ), true, true ) )

  0015e	6a 01		 push	 1
  00160	6a 01		 push	 1
  00162	6a 00		 push	 0
  00164	8b 55 08	 mov	 edx, DWORD PTR _nItemIndex$[ebp]
  00167	52		 push	 edx
  00168	8d 45 d0	 lea	 eax, DWORD PTR $T161046[ebp]
  0016b	50		 push	 eax
  0016c	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	e8 00 00 00 00	 call	 ?GetItemText@CListCtrl@@QBE?AVCString@@HH@Z ; CListCtrl::GetItemText
  00174	89 45 a4	 mov	 DWORD PTR -92+[ebp], eax
  00177	8b 4d a4	 mov	 ecx, DWORD PTR -92+[ebp]
  0017a	89 4d a0	 mov	 DWORD PTR -96+[ebp], ecx
  0017d	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00184	8b 4d a0	 mov	 ecx, DWORD PTR -96+[ebp]
  00187	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0018c	50		 push	 eax
  0018d	8b 55 ec	 mov	 edx, DWORD PTR _pVerbDialog$153731[ebp]
  00190	8b 02		 mov	 eax, DWORD PTR [edx]
  00192	8b 4d ec	 mov	 ecx, DWORD PTR _pVerbDialog$153731[ebp]
  00195	ff 90 fc 00 00
	00		 call	 DWORD PTR [eax+252]
  0019b	89 45 d4	 mov	 DWORD PTR $T161045[ebp], eax
  0019e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001a5	8d 4d d0	 lea	 ecx, DWORD PTR $T161046[ebp]
  001a8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  001ad	83 7d d4 00	 cmp	 DWORD PTR $T161045[ebp], 0
  001b1	74 0a		 je	 SHORT $L153737

; 167  : 				pVerbDialog->Show();

  001b3	8b 4d ec	 mov	 ecx, DWORD PTR _pVerbDialog$153731[ebp]
  001b6	e8 00 00 00 00	 call	 ?Show@CVerbDialog@@QAEXXZ ; CVerbDialog::Show

; 168  : 			else

  001bb	eb 2b		 jmp	 SHORT $L161050
$L153737:

; 169  : 				delete pVerbDialog;

  001bd	8b 4d ec	 mov	 ecx, DWORD PTR _pVerbDialog$153731[ebp]
  001c0	89 4d c8	 mov	 DWORD PTR $T161048[ebp], ecx
  001c3	8b 55 c8	 mov	 edx, DWORD PTR $T161048[ebp]
  001c6	89 55 cc	 mov	 DWORD PTR $T161047[ebp], edx
  001c9	83 7d cc 00	 cmp	 DWORD PTR $T161047[ebp], 0
  001cd	74 12		 je	 SHORT $L161049
  001cf	6a 01		 push	 1
  001d1	8b 45 cc	 mov	 eax, DWORD PTR $T161047[ebp]
  001d4	8b 10		 mov	 edx, DWORD PTR [eax]
  001d6	8b 4d cc	 mov	 ecx, DWORD PTR $T161047[ebp]
  001d9	ff 52 04	 call	 DWORD PTR [edx+4]
  001dc	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  001df	eb 07		 jmp	 SHORT $L161050
$L161049:
  001e1	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR -100+[ebp], 0
$L161050:

; 171  : 	};

  001e8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001eb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001f2	8b e5		 mov	 esp, ebp
  001f4	5d		 pop	 ebp
  001f5	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161051:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR $T161038[ebp]
  00003	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00008	c3		 ret	 0
$L161052:
  00009	8d 4d e4	 lea	 ecx, DWORD PTR $T161039[ebp]
  0000c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00011	c3		 ret	 0
$L161053:
  00012	8d 4d e0	 lea	 ecx, DWORD PTR $T161040[ebp]
  00015	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0001a	c3		 ret	 0
$L161054:
  0001b	8b 45 d8	 mov	 eax, DWORD PTR $T161042[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00024	c3		 ret	 0
$L161055:
  00025	8d 4d d0	 lea	 ecx, DWORD PTR $T161046[ebp]
  00028	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0002d	c3		 ret	 0
$L161058:
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161057
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnItemActivate@CFoeListCtrl@@UAEXH_N@Z ENDP		; CFoeListCtrl::OnItemActivate
PUBLIC	??1CFoeListCtrl@@UAE@XZ				; CFoeListCtrl::~CFoeListCtrl
;	COMDAT ??_GCFoeListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCFoeListCtrl@@UAEPAXI@Z PROC NEAR			; CFoeListCtrl::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CFoeListCtrl@@UAE@XZ	; CFoeListCtrl::~CFoeListCtrl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L153745
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L153745:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCFoeListCtrl@@UAEPAXI@Z ENDP			; CFoeListCtrl::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CFoeListCtrl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CFoeListCtrl@@UAE@XZ PROC NEAR			; CFoeListCtrl::~CFoeListCtrl, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinListCtrl@@UAE@XZ ; CSkinListCtrl::~CSkinListCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CFoeListCtrl@@UAE@XZ ENDP				; CFoeListCtrl::~CFoeListCtrl
_TEXT	ENDS
PUBLIC	?OnActivate@CAddFriendBtn@@UAEXFF@Z		; CAddFriendBtn::OnActivate
PUBLIC	??_7CAddFriendBtn@@6B@				; CAddFriendBtn::`vftable'
PUBLIC	??_GCAddFriendBtn@@UAEPAXI@Z			; CAddFriendBtn::`scalar deleting destructor'
PUBLIC	??_ECAddFriendBtn@@UAEPAXI@Z			; CAddFriendBtn::`vector deleting destructor'
EXTRN	??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinBtn::CSkinBtn
EXTRN	?OnMouseDown@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseDown
EXTRN	?OnMouseUp@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseUp
EXTRN	?Refresh@CSkinBtn@@UAEXXZ:NEAR			; CSkinBtn::Refresh
;	COMDAT ??_7CAddFriendBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CAddFriendBtn@@6B@ DD FLAT:??_ECAddFriendBtn@@UAEPAXI@Z ; CAddFriendBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CAddFriendBtn@@UAEXFF@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T161071 DD	019930520H
	DD	01H
	DD	FLAT:$T161073
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161073 DD	0ffffffffH
	DD	FLAT:$L161067
xdata$x	ENDS
;	COMDAT ??0CAddFriendBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T161066 = -16
__$EHRec$ = -12
??0CAddFriendBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CAddFriendBtn::CAddFriendBtn, COMDAT

; 179  : 	CAddFriendBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn( obj, pParent ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161072
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00025	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00028	50		 push	 eax
  00029	83 ec 08	 sub	 esp, 8
  0002c	8b cc		 mov	 ecx, esp
  0002e	89 65 f0	 mov	 DWORD PTR $T161066[ebp], esp
  00031	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0003a	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  00045	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00048	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CAddFriendBtn@@6B@ ; CAddFriendBtn::`vftable'
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0005b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161067:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00008	c3		 ret	 0
$L161072:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161071
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CAddFriendBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CAddFriendBtn::CAddFriendBtn
PUBLIC	??_C@_0BL@BMG@Who?5would?5you?5like?5to?5add?$DP?$AA@ ; `string'
PUBLIC	??_C@_0N@IHHO@Add?5a?5friend?$AA@		; `string'
;	COMDAT ??_C@_0BL@BMG@Who?5would?5you?5like?5to?5add?$DP?$AA@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
_DATA	SEGMENT
??_C@_0BL@BMG@Who?5would?5you?5like?5to?5add?$DP?$AA@ DB 'Who would you l'
	DB	'ike to add?', 00H				; `string'
_DATA	ENDS
;	COMDAT ??_C@_0N@IHHO@Add?5a?5friend?$AA@
_DATA	SEGMENT
??_C@_0N@IHHO@Add?5a?5friend?$AA@ DB 'Add a friend', 00H ; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T161083 DD	019930520H
	DD	01H
	DD	FLAT:$T161085
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161085 DD	0ffffffffH
	DD	FLAT:$L161081
xdata$x	ENDS
;	COMDAT ?OnActivate@CAddFriendBtn@@UAEXFF@Z
_TEXT	SEGMENT
_this$ = -24
$T161077 = -16
$T161078 = -20
__$EHRec$ = -12
?OnActivate@CAddFriendBtn@@UAEXFF@Z PROC NEAR		; CAddFriendBtn::OnActivate, COMDAT

; 182  : 	virtual void OnActivate ( short x, short y ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161084
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 183  : 		(new CAddFriendDlg())->Create( "Add a friend", "Who would you like to add?" );

  0001e	68 bc 00 00 00	 push	 188			; 000000bcH
  00023	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00028	89 45 ec	 mov	 DWORD PTR $T161078[ebp], eax
  0002b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00032	83 7d ec 00	 cmp	 DWORD PTR $T161078[ebp], 0
  00036	74 0d		 je	 SHORT $L161079
  00038	8b 4d ec	 mov	 ecx, DWORD PTR $T161078[ebp]
  0003b	e8 00 00 00 00	 call	 ??0CAddFriendDlg@@QAE@XZ ; CAddFriendDlg::CAddFriendDlg
  00040	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00043	eb 07		 jmp	 SHORT $L161080
$L161079:
  00045	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR -28+[ebp], 0
$L161080:
  0004c	8b 45 e4	 mov	 eax, DWORD PTR -28+[ebp]
  0004f	89 45 f0	 mov	 DWORD PTR $T161077[ebp], eax
  00052	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00059	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@BMG@Who?5would?5you?5like?5to?5add?$DP?$AA@ ; `string'
  0005e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@IHHO@Add?5a?5friend?$AA@ ; `string'
  00063	8b 4d f0	 mov	 ecx, DWORD PTR $T161077[ebp]
  00066	e8 00 00 00 00	 call	 ?Create@CAddFriendDlg@@QAEHPAD0@Z ; CAddFriendDlg::Create

; 184  : 	}

  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161081:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T161078[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00009	c3		 ret	 0
$L161084:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161083
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@CAddFriendBtn@@UAEXFF@Z ENDP		; CAddFriendBtn::OnActivate
PUBLIC	??1CAddFriendBtn@@UAE@XZ			; CAddFriendBtn::~CAddFriendBtn
;	COMDAT ??_GCAddFriendBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCAddFriendBtn@@UAEPAXI@Z PROC NEAR			; CAddFriendBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CAddFriendBtn@@UAE@XZ ; CAddFriendBtn::~CAddFriendBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153781
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153781:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCAddFriendBtn@@UAEPAXI@Z ENDP			; CAddFriendBtn::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CSkinBtn@@UAE@XZ				; CSkinBtn::~CSkinBtn
;	COMDAT ??1CAddFriendBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CAddFriendBtn@@UAE@XZ PROC NEAR			; CAddFriendBtn::~CAddFriendBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CAddFriendBtn@@UAE@XZ ENDP				; CAddFriendBtn::~CAddFriendBtn
_TEXT	ENDS
PUBLIC	?OnActivate@CAddFoeBtn@@UAEXFF@Z		; CAddFoeBtn::OnActivate
PUBLIC	??_7CAddFoeBtn@@6B@				; CAddFoeBtn::`vftable'
PUBLIC	??_GCAddFoeBtn@@UAEPAXI@Z			; CAddFoeBtn::`scalar deleting destructor'
PUBLIC	??_ECAddFoeBtn@@UAEPAXI@Z			; CAddFoeBtn::`vector deleting destructor'
;	COMDAT ??_7CAddFoeBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CAddFoeBtn@@6B@ DD FLAT:??_ECAddFoeBtn@@UAEPAXI@Z	; CAddFoeBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CAddFoeBtn@@UAEXFF@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T161097 DD	019930520H
	DD	01H
	DD	FLAT:$T161099
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161099 DD	0ffffffffH
	DD	FLAT:$L161093
xdata$x	ENDS
;	COMDAT ??0CAddFoeBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T161092 = -16
__$EHRec$ = -12
??0CAddFoeBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CAddFoeBtn::CAddFoeBtn, COMDAT

; 277  : 	CAddFoeBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn( obj, pParent ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161098
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00025	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00028	50		 push	 eax
  00029	83 ec 08	 sub	 esp, 8
  0002c	8b cc		 mov	 ecx, esp
  0002e	89 65 f0	 mov	 DWORD PTR $T161092[ebp], esp
  00031	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0003a	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  00045	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00048	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CAddFoeBtn@@6B@ ; CAddFoeBtn::`vftable'
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0005b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161093:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00008	c3		 ret	 0
$L161098:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161097
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CAddFoeBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CAddFoeBtn::CAddFoeBtn
PUBLIC	??_C@_09HHIM@Add?5a?5foe?$AA@			; `string'
;	COMDAT ??_C@_09HHIM@Add?5a?5foe?$AA@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
_DATA	SEGMENT
??_C@_09HHIM@Add?5a?5foe?$AA@ DB 'Add a foe', 00H	; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T161109 DD	019930520H
	DD	01H
	DD	FLAT:$T161111
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161111 DD	0ffffffffH
	DD	FLAT:$L161107
xdata$x	ENDS
;	COMDAT ?OnActivate@CAddFoeBtn@@UAEXFF@Z
_TEXT	SEGMENT
_this$ = -24
$T161103 = -16
$T161104 = -20
__$EHRec$ = -12
?OnActivate@CAddFoeBtn@@UAEXFF@Z PROC NEAR		; CAddFoeBtn::OnActivate, COMDAT

; 280  : 	virtual void OnActivate ( short x, short y ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161110
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 281  : 		(new CAddFoeDlg())->Create( "Add a foe", "Who would you like to add?" );

  0001e	68 bc 00 00 00	 push	 188			; 000000bcH
  00023	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00028	89 45 ec	 mov	 DWORD PTR $T161104[ebp], eax
  0002b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00032	83 7d ec 00	 cmp	 DWORD PTR $T161104[ebp], 0
  00036	74 0d		 je	 SHORT $L161105
  00038	8b 4d ec	 mov	 ecx, DWORD PTR $T161104[ebp]
  0003b	e8 00 00 00 00	 call	 ??0CAddFoeDlg@@QAE@XZ	; CAddFoeDlg::CAddFoeDlg
  00040	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00043	eb 07		 jmp	 SHORT $L161106
$L161105:
  00045	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR -28+[ebp], 0
$L161106:
  0004c	8b 45 e4	 mov	 eax, DWORD PTR -28+[ebp]
  0004f	89 45 f0	 mov	 DWORD PTR $T161103[ebp], eax
  00052	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00059	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@BMG@Who?5would?5you?5like?5to?5add?$DP?$AA@ ; `string'
  0005e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09HHIM@Add?5a?5foe?$AA@ ; `string'
  00063	8b 4d f0	 mov	 ecx, DWORD PTR $T161103[ebp]
  00066	e8 00 00 00 00	 call	 ?Create@CAddFoeDlg@@QAEHPAD0@Z ; CAddFoeDlg::Create

; 282  : 	}

  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161107:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T161104[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00009	c3		 ret	 0
$L161110:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161109
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@CAddFoeBtn@@UAEXFF@Z ENDP			; CAddFoeBtn::OnActivate
PUBLIC	??1CAddFoeBtn@@UAE@XZ				; CAddFoeBtn::~CAddFoeBtn
;	COMDAT ??_GCAddFoeBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCAddFoeBtn@@UAEPAXI@Z PROC NEAR			; CAddFoeBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CAddFoeBtn@@UAE@XZ	; CAddFoeBtn::~CAddFoeBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153888
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153888:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCAddFoeBtn@@UAEPAXI@Z ENDP				; CAddFoeBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CAddFoeBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CAddFoeBtn@@UAE@XZ PROC NEAR				; CAddFoeBtn::~CAddFoeBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CAddFoeBtn@@UAE@XZ ENDP				; CAddFoeBtn::~CAddFoeBtn
_TEXT	ENDS
PUBLIC	?OnActivate@CWhoBtn@@UAEXFF@Z			; CWhoBtn::OnActivate
PUBLIC	??_7CWhoBtn@@6B@				; CWhoBtn::`vftable'
PUBLIC	??_GCWhoBtn@@UAEPAXI@Z				; CWhoBtn::`scalar deleting destructor'
PUBLIC	??_ECWhoBtn@@UAEPAXI@Z				; CWhoBtn::`vector deleting destructor'
;	COMDAT ??_7CWhoBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CWhoBtn@@6B@ DD FLAT:??_ECWhoBtn@@UAEPAXI@Z		; CWhoBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CWhoBtn@@UAEXFF@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T161123 DD	019930520H
	DD	01H
	DD	FLAT:$T161125
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161125 DD	0ffffffffH
	DD	FLAT:$L161119
xdata$x	ENDS
;	COMDAT ??0CWhoBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z
_TEXT	SEGMENT
$T161118 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CWhoBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CWhoBtn::CWhoBtn, COMDAT

; 373  : 	CWhoBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn( obj, pParent ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161124
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 10	 sub	 esp, 16			; 00000010H
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00025	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00028	50		 push	 eax
  00029	83 ec 08	 sub	 esp, 8
  0002c	8b cc		 mov	 ecx, esp
  0002e	89 65 f0	 mov	 DWORD PTR $T161118[ebp], esp
  00031	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0003a	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  00045	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00048	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CWhoBtn@@6B@ ; CWhoBtn::`vftable'
  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0005b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161119:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00008	c3		 ret	 0
$L161124:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161123
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CWhoBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP		; CWhoBtn::CWhoBtn
PUBLIC	??_C@_04BOMG@?1who?$AA@				; `string'
;	COMDAT ??_C@_04BOMG@?1who?$AA@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
_DATA	SEGMENT
??_C@_04BOMG@?1who?$AA@ DB '/who', 00H			; `string'
_DATA	ENDS
;	COMDAT ?OnActivate@CWhoBtn@@UAEXFF@Z
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CWhoBtn@@UAEXFF@Z PROC NEAR			; CWhoBtn::OnActivate, COMDAT

; 376  : 	virtual void OnActivate ( short x, short y ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 377  : 		MsgSendChat ( "/who" );

  00007	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_04BOMG@?1who?$AA@ ; `string'
  0000c	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  00011	83 c4 04	 add	 esp, 4

; 378  : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?OnActivate@CWhoBtn@@UAEXFF@Z ENDP			; CWhoBtn::OnActivate
_TEXT	ENDS
PUBLIC	??1CWhoBtn@@UAE@XZ				; CWhoBtn::~CWhoBtn
;	COMDAT ??_GCWhoBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCWhoBtn@@UAEPAXI@Z PROC NEAR			; CWhoBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWhoBtn@@UAE@XZ	; CWhoBtn::~CWhoBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153991
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153991:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCWhoBtn@@UAEPAXI@Z ENDP				; CWhoBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CWhoBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CWhoBtn@@UAE@XZ PROC NEAR				; CWhoBtn::~CWhoBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CWhoBtn@@UAE@XZ ENDP					; CWhoBtn::~CWhoBtn
_TEXT	ENDS
PUBLIC	?ClearFriends@CPeopleMgrWnd@@QAEXXZ		; CPeopleMgrWnd::ClearFriends
EXTRN	?DeleteAllItems@CSkinListCtrl@@QAEHXZ:NEAR	; CSkinListCtrl::DeleteAllItems
_TEXT	SEGMENT
_this$ = -4
?ClearFriends@CPeopleMgrWnd@@QAEXXZ PROC NEAR		; CPeopleMgrWnd::ClearFriends

; 531  : void CPeopleMgrWnd::ClearFriends() {

  014b6	55		 push	 ebp
  014b7	8b ec		 mov	 ebp, esp
  014b9	51		 push	 ecx
  014ba	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 532  : 	if ( m_pFriendListCtrl )

  014bd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  014c0	83 b8 94 00 00
	00 00		 cmp	 DWORD PTR [eax+148], 0
  014c7	74 0e		 je	 SHORT $L154133

; 533  : 		m_pFriendListCtrl->DeleteAllItems();

  014c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  014cc	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  014d2	e8 00 00 00 00	 call	 ?DeleteAllItems@CSkinListCtrl@@QAEHXZ ; CSkinListCtrl::DeleteAllItems
$L154133:

; 534  : }

  014d7	8b e5		 mov	 esp, ebp
  014d9	5d		 pop	 ebp
  014da	c3		 ret	 0
?ClearFriends@CPeopleMgrWnd@@QAEXXZ ENDP		; CPeopleMgrWnd::ClearFriends
_TEXT	ENDS
PUBLIC	?AddFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z	; CPeopleMgrWnd::AddFriend
PUBLIC	?UpdateFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::UpdateFriend
EXTRN	?AddLine@CSkinListCtrl@@QAAHHHZZ:NEAR		; CSkinListCtrl::AddLine
EXTRN	?FindItem@CSkinListCtrl@@QAEHH@Z:NEAR		; CSkinListCtrl::FindItem
xdata$x	SEGMENT
$T161136 DD	019930520H
	DD	01H
	DD	FLAT:$T161138
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161138 DD	0ffffffffH
	DD	FLAT:$L161134
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_pPerson$ = 8
_boAlert$ = 12
_this$ = -24
_nIndex$ = -16
_sName$154142 = -20
?AddFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z PROC NEAR	; CPeopleMgrWnd::AddFriend

; 537  : void CPeopleMgrWnd::AddFriend( CPerson* pPerson, BOOL boAlert ) {

  014db	55		 push	 ebp
  014dc	8b ec		 mov	 ebp, esp
  014de	6a ff		 push	 -1
  014e0	68 00 00 00 00	 push	 $L161137
  014e5	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  014eb	50		 push	 eax
  014ec	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  014f3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  014f6	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 538  : 	int nIndex = m_pFriendListCtrl->FindItem ( (int) pPerson );

  014f9	8b 45 08	 mov	 eax, DWORD PTR _pPerson$[ebp]
  014fc	50		 push	 eax
  014fd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01500	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  01506	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  0150b	89 45 f0	 mov	 DWORD PTR _nIndex$[ebp], eax

; 539  : 
; 540  : 	if ( nIndex == -1 ) {

  0150e	83 7d f0 ff	 cmp	 DWORD PTR _nIndex$[ebp], -1
  01512	75 4b		 jne	 SHORT $L154141

; 541  : 		CString sName;

  01514	8d 4d ec	 lea	 ecx, DWORD PTR _sName$154142[ebp]
  01517	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0151c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 542  : 		pPerson->GetName( sName );

  01523	8d 55 ec	 lea	 edx, DWORD PTR _sName$154142[ebp]
  01526	52		 push	 edx
  01527	8b 4d 08	 mov	 ecx, DWORD PTR _pPerson$[ebp]
  0152a	e8 00 00 00 00	 call	 ?GetName@CPerson@@QAEXAAVCString@@@Z ; CPerson::GetName

; 543  : 
; 544  : 		m_pFriendListCtrl->AddLine ( (int)pPerson, 1, (LPCTSTR)sName );

  0152f	8d 4d ec	 lea	 ecx, DWORD PTR _sName$154142[ebp]
  01532	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01537	50		 push	 eax
  01538	6a 01		 push	 1
  0153a	8b 45 08	 mov	 eax, DWORD PTR _pPerson$[ebp]
  0153d	50		 push	 eax
  0153e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01541	8b 91 94 00 00
	00		 mov	 edx, DWORD PTR [ecx+148]
  01547	52		 push	 edx
  01548	e8 00 00 00 00	 call	 ?AddLine@CSkinListCtrl@@QAAHHHZZ ; CSkinListCtrl::AddLine
  0154d	83 c4 10	 add	 esp, 16			; 00000010H

; 545  : 	}

  01550	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01557	8d 4d ec	 lea	 ecx, DWORD PTR _sName$154142[ebp]
  0155a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L154141:

; 546  : 
; 547  : 	UpdateFriend ( pPerson, boAlert);

  0155f	8b 45 0c	 mov	 eax, DWORD PTR _boAlert$[ebp]
  01562	50		 push	 eax
  01563	8b 4d 08	 mov	 ecx, DWORD PTR _pPerson$[ebp]
  01566	51		 push	 ecx
  01567	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0156a	e8 00 00 00 00	 call	 ?UpdateFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::UpdateFriend

; 548  : }

  0156f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01572	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01579	8b e5		 mov	 esp, ebp
  0157b	5d		 pop	 ebp
  0157c	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L161134:
  00158	8d 4d ec	 lea	 ecx, DWORD PTR _sName$154142[ebp]
  0015b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00160	c3		 ret	 0
$L161137:
  00161	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161136
  00166	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ENDP	; CPeopleMgrWnd::AddFriend
PUBLIC	?AlertTab@CMainPanelWnd@@QAEXH@Z		; CMainPanelWnd::AlertTab
PUBLIC	?DelFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z	; CPeopleMgrWnd::DelFriend
EXTRN	?DeleteItem@CSkinListCtrl@@QAEHH@Z:NEAR		; CSkinListCtrl::DeleteItem
_TEXT	SEGMENT
_pPerson$ = 8
_boAlert$ = 12
_this$ = -8
_nIndex$ = -4
?DelFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z PROC NEAR	; CPeopleMgrWnd::DelFriend

; 551  : void CPeopleMgrWnd::DelFriend( CPerson* pPerson, BOOL boAlert ) {

  0157f	55		 push	 ebp
  01580	8b ec		 mov	 ebp, esp
  01582	83 ec 08	 sub	 esp, 8
  01585	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 552  : 	int nIndex = m_pFriendListCtrl->FindItem ( (int) pPerson );

  01588	8b 45 08	 mov	 eax, DWORD PTR _pPerson$[ebp]
  0158b	50		 push	 eax
  0158c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0158f	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  01595	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  0159a	89 45 fc	 mov	 DWORD PTR _nIndex$[ebp], eax

; 553  : 
; 554  : 	if ( nIndex != -1 ) {

  0159d	83 7d fc ff	 cmp	 DWORD PTR _nIndex$[ebp], -1
  015a1	74 3d		 je	 SHORT $L154154

; 555  : 		m_pFriendListCtrl->DeleteItem ( nIndex );

  015a3	8b 55 fc	 mov	 edx, DWORD PTR _nIndex$[ebp]
  015a6	52		 push	 edx
  015a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  015aa	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  015b0	e8 00 00 00 00	 call	 ?DeleteItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::DeleteItem

; 556  : 
; 557  :         if ( g_pToonSettings->get_TabDisplay() ) {

  015b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  015bb	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  015c0	85 c0		 test	 eax, eax
  015c2	74 1c		 je	 SHORT $L154154

; 558  :             if ( g_pMainPanelWnd && boAlert ) {

  015c4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A, 0 ; g_pMainPanelWnd
  015cb	74 13		 je	 SHORT $L154154
  015cd	83 7d 0c 00	 cmp	 DWORD PTR _boAlert$[ebp], 0
  015d1	74 0d		 je	 SHORT $L154154

; 559  :                 g_pMainPanelWnd->AlertTab( TID_FRIENDS );

  015d3	6a 03		 push	 3
  015d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  015db	e8 00 00 00 00	 call	 ?AlertTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::AlertTab
$L154154:

; 563  : }

  015e0	8b e5		 mov	 esp, ebp
  015e2	5d		 pop	 ebp
  015e3	c2 08 00	 ret	 8
?DelFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ENDP	; CPeopleMgrWnd::DelFriend
_TEXT	ENDS
EXTRN	?SetItemText@CListCtrl@@QAEHHHPBD@Z:NEAR	; CListCtrl::SetItemText
EXTRN	?SetItemIcon@CSkinListCtrl@@QAEXHH@Z:NEAR	; CSkinListCtrl::SetItemIcon
xdata$x	SEGMENT
$T161143 DD	019930520H
	DD	01H
	DD	FLAT:$T161145
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161145 DD	0ffffffffH
	DD	FLAT:$L161141
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_pPerson$ = 8
_boAlert$ = 12
_this$ = -28
_nIndex$ = -16
_nIconNumber$154163 = -20
_sName$154167 = -24
?UpdateFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z PROC NEAR ; CPeopleMgrWnd::UpdateFriend

; 566  : void CPeopleMgrWnd::UpdateFriend ( CPerson* pPerson, BOOL boAlert ) {

  015e6	55		 push	 ebp
  015e7	8b ec		 mov	 ebp, esp
  015e9	6a ff		 push	 -1
  015eb	68 00 00 00 00	 push	 $L161144
  015f0	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  015f6	50		 push	 eax
  015f7	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  015fe	83 ec 10	 sub	 esp, 16			; 00000010H
  01601	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 567  : 	int nIndex = m_pFriendListCtrl->FindItem ( (int) pPerson );

  01604	8b 45 08	 mov	 eax, DWORD PTR _pPerson$[ebp]
  01607	50		 push	 eax
  01608	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0160b	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  01611	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  01616	89 45 f0	 mov	 DWORD PTR _nIndex$[ebp], eax

; 568  : 
; 569  : 	if ( nIndex != -1 ) {

  01619	83 7d f0 ff	 cmp	 DWORD PTR _nIndex$[ebp], -1
  0161d	0f 84 b9 00 00
	00		 je	 $L154162

; 570  : 		int nIconNumber = 0;

  01623	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nIconNumber$154163[ebp], 0

; 571  : 
; 572  : 		if ( pPerson->GetBusy() )

  0162a	8b 4d 08	 mov	 ecx, DWORD PTR _pPerson$[ebp]
  0162d	e8 00 00 00 00	 call	 ?GetBusy@CPerson@@QAEHXZ ; CPerson::GetBusy
  01632	85 c0		 test	 eax, eax
  01634	74 09		 je	 SHORT $L154164

; 573  : 			nIconNumber = 2;

  01636	c7 45 ec 02 00
	00 00		 mov	 DWORD PTR _nIconNumber$154163[ebp], 2

; 574  : 
; 575  : 		else if ( pPerson->GetOnline() )

  0163d	eb 13		 jmp	 SHORT $L154166
$L154164:
  0163f	8b 4d 08	 mov	 ecx, DWORD PTR _pPerson$[ebp]
  01642	e8 00 00 00 00	 call	 ?GetOnline@CPerson@@QAEHXZ ; CPerson::GetOnline
  01647	85 c0		 test	 eax, eax
  01649	74 07		 je	 SHORT $L154166

; 576  : 			nIconNumber = 1;

  0164b	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _nIconNumber$154163[ebp], 1
$L154166:

; 577  : 
; 578  : 		CString sName;

  01652	8d 4d e8	 lea	 ecx, DWORD PTR _sName$154167[ebp]
  01655	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0165a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 579  : 		pPerson->GetName( sName );

  01661	8d 55 e8	 lea	 edx, DWORD PTR _sName$154167[ebp]
  01664	52		 push	 edx
  01665	8b 4d 08	 mov	 ecx, DWORD PTR _pPerson$[ebp]
  01668	e8 00 00 00 00	 call	 ?GetName@CPerson@@QAEXAAVCString@@@Z ; CPerson::GetName

; 580  : 
; 581  : 		m_pFriendListCtrl->SetItemIcon ( nIndex, nIconNumber );

  0166d	8b 45 ec	 mov	 eax, DWORD PTR _nIconNumber$154163[ebp]
  01670	50		 push	 eax
  01671	8b 4d f0	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  01674	51		 push	 ecx
  01675	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  01678	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  0167e	e8 00 00 00 00	 call	 ?SetItemIcon@CSkinListCtrl@@QAEXHH@Z ; CSkinListCtrl::SetItemIcon

; 582  : 		m_pFriendListCtrl->SetItemText( nIndex, 0, sName );

  01683	8d 4d e8	 lea	 ecx, DWORD PTR _sName$154167[ebp]
  01686	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0168b	50		 push	 eax
  0168c	6a 00		 push	 0
  0168e	8b 45 f0	 mov	 eax, DWORD PTR _nIndex$[ebp]
  01691	50		 push	 eax
  01692	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  01695	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  0169b	e8 00 00 00 00	 call	 ?SetItemText@CListCtrl@@QAEHHHPBD@Z ; CListCtrl::SetItemText

; 583  :         
; 584  :         if ( g_pToonSettings->get_TabDisplay() ) {

  016a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  016a6	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  016ab	85 c0		 test	 eax, eax
  016ad	74 1c		 je	 SHORT $L154169

; 585  :             if ( g_pMainPanelWnd && boAlert ) {

  016af	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A, 0 ; g_pMainPanelWnd
  016b6	74 13		 je	 SHORT $L154169
  016b8	83 7d 0c 00	 cmp	 DWORD PTR _boAlert$[ebp], 0
  016bc	74 0d		 je	 SHORT $L154169

; 586  :                 g_pMainPanelWnd->AlertTab( TID_FRIENDS );

  016be	6a 03		 push	 3
  016c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  016c6	e8 00 00 00 00	 call	 ?AlertTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::AlertTab
$L154169:

; 589  : 	} else {

  016cb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  016d2	8d 4d e8	 lea	 ecx, DWORD PTR _sName$154167[ebp]
  016d5	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  016da	eb 10		 jmp	 SHORT $L154170
$L154162:

; 590  : 		AddFriend( pPerson, boAlert );

  016dc	8b 55 0c	 mov	 edx, DWORD PTR _boAlert$[ebp]
  016df	52		 push	 edx
  016e0	8b 45 08	 mov	 eax, DWORD PTR _pPerson$[ebp]
  016e3	50		 push	 eax
  016e4	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  016e7	e8 00 00 00 00	 call	 ?AddFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::AddFriend
$L154170:

; 592  : }

  016ec	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  016ef	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  016f6	8b e5		 mov	 esp, ebp
  016f8	5d		 pop	 ebp
  016f9	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L161141:
  0016b	8d 4d e8	 lea	 ecx, DWORD PTR _sName$154167[ebp]
  0016e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00173	c3		 ret	 0
$L161144:
  00174	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161143
  00179	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UpdateFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ENDP	; CPeopleMgrWnd::UpdateFriend
PUBLIC	?ClearFoes@CPeopleMgrWnd@@QAEXXZ		; CPeopleMgrWnd::ClearFoes
_TEXT	SEGMENT
_this$ = -4
?ClearFoes@CPeopleMgrWnd@@QAEXXZ PROC NEAR		; CPeopleMgrWnd::ClearFoes

; 595  : void CPeopleMgrWnd::ClearFoes() {

  016fc	55		 push	 ebp
  016fd	8b ec		 mov	 ebp, esp
  016ff	51		 push	 ecx
  01700	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 596  : 	if ( m_pFoeListCtrl )

  01703	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01706	83 b8 98 00 00
	00 00		 cmp	 DWORD PTR [eax+152], 0
  0170d	74 0e		 je	 SHORT $L154174

; 597  : 		m_pFoeListCtrl->DeleteAllItems();

  0170f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01712	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  01718	e8 00 00 00 00	 call	 ?DeleteAllItems@CSkinListCtrl@@QAEHXZ ; CSkinListCtrl::DeleteAllItems
$L154174:

; 598  : }

  0171d	8b e5		 mov	 esp, ebp
  0171f	5d		 pop	 ebp
  01720	c3		 ret	 0
?ClearFoes@CPeopleMgrWnd@@QAEXXZ ENDP			; CPeopleMgrWnd::ClearFoes
_TEXT	ENDS
PUBLIC	?AddFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z	; CPeopleMgrWnd::AddFoe
PUBLIC	?UpdateFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z	; CPeopleMgrWnd::UpdateFoe
xdata$x	SEGMENT
$T161150 DD	019930520H
	DD	01H
	DD	FLAT:$T161152
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161152 DD	0ffffffffH
	DD	FLAT:$L161148
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_pPerson$ = 8
_boAlert$ = 12
_this$ = -24
_nIndex$ = -16
_sName$154183 = -20
?AddFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z PROC NEAR	; CPeopleMgrWnd::AddFoe

; 601  : void CPeopleMgrWnd::AddFoe( CPerson* pPerson, BOOL boAlert ) {

  01721	55		 push	 ebp
  01722	8b ec		 mov	 ebp, esp
  01724	6a ff		 push	 -1
  01726	68 00 00 00 00	 push	 $L161151
  0172b	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01731	50		 push	 eax
  01732	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01739	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0173c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 602  : 	int nIndex = m_pFoeListCtrl->FindItem ( (int) pPerson );

  0173f	8b 45 08	 mov	 eax, DWORD PTR _pPerson$[ebp]
  01742	50		 push	 eax
  01743	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01746	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  0174c	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  01751	89 45 f0	 mov	 DWORD PTR _nIndex$[ebp], eax

; 603  : 
; 604  : 	if ( nIndex == -1 ) {

  01754	83 7d f0 ff	 cmp	 DWORD PTR _nIndex$[ebp], -1
  01758	75 46		 jne	 SHORT $L154182

; 605  : 		CString sName;

  0175a	8d 4d ec	 lea	 ecx, DWORD PTR _sName$154183[ebp]
  0175d	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  01762	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 606  : 		pPerson->GetName( sName );

  01769	8d 55 ec	 lea	 edx, DWORD PTR _sName$154183[ebp]
  0176c	52		 push	 edx
  0176d	8b 4d 08	 mov	 ecx, DWORD PTR _pPerson$[ebp]
  01770	e8 00 00 00 00	 call	 ?GetName@CPerson@@QAEXAAVCString@@@Z ; CPerson::GetName

; 607  : 
; 608  : 		m_pFoeListCtrl->AddLine( (int) pPerson, 1, sName );

  01775	8b 45 ec	 mov	 eax, DWORD PTR _sName$154183[ebp]
  01778	50		 push	 eax
  01779	6a 01		 push	 1
  0177b	8b 4d 08	 mov	 ecx, DWORD PTR _pPerson$[ebp]
  0177e	51		 push	 ecx
  0177f	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  01782	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  01788	50		 push	 eax
  01789	e8 00 00 00 00	 call	 ?AddLine@CSkinListCtrl@@QAAHHHZZ ; CSkinListCtrl::AddLine
  0178e	83 c4 10	 add	 esp, 16			; 00000010H

; 609  : 	}

  01791	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01798	8d 4d ec	 lea	 ecx, DWORD PTR _sName$154183[ebp]
  0179b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L154182:

; 610  : 
; 611  : 	UpdateFoe( pPerson, boAlert);

  017a0	8b 4d 0c	 mov	 ecx, DWORD PTR _boAlert$[ebp]
  017a3	51		 push	 ecx
  017a4	8b 55 08	 mov	 edx, DWORD PTR _pPerson$[ebp]
  017a7	52		 push	 edx
  017a8	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  017ab	e8 00 00 00 00	 call	 ?UpdateFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::UpdateFoe

; 612  : }

  017b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  017b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  017ba	8b e5		 mov	 esp, ebp
  017bc	5d		 pop	 ebp
  017bd	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L161148:
  0017e	8d 4d ec	 lea	 ecx, DWORD PTR _sName$154183[ebp]
  00181	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00186	c3		 ret	 0
$L161151:
  00187	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161150
  0018c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ENDP		; CPeopleMgrWnd::AddFoe
PUBLIC	?DelFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z	; CPeopleMgrWnd::DelFoe
_TEXT	SEGMENT
_pPerson$ = 8
_boAlert$ = 12
_this$ = -8
_nIndex$ = -4
?DelFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z PROC NEAR	; CPeopleMgrWnd::DelFoe

; 615  : void CPeopleMgrWnd::DelFoe( CPerson* pPerson, BOOL boAlert ) {

  017c0	55		 push	 ebp
  017c1	8b ec		 mov	 ebp, esp
  017c3	83 ec 08	 sub	 esp, 8
  017c6	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 616  : 	int nIndex = m_pFoeListCtrl->FindItem ( (int) pPerson );

  017c9	8b 45 08	 mov	 eax, DWORD PTR _pPerson$[ebp]
  017cc	50		 push	 eax
  017cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  017d0	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  017d6	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  017db	89 45 fc	 mov	 DWORD PTR _nIndex$[ebp], eax

; 617  : 
; 618  : 	if ( nIndex != -1 ) {

  017de	83 7d fc ff	 cmp	 DWORD PTR _nIndex$[ebp], -1
  017e2	74 3d		 je	 SHORT $L154194

; 619  : 		m_pFoeListCtrl->DeleteItem ( nIndex );

  017e4	8b 55 fc	 mov	 edx, DWORD PTR _nIndex$[ebp]
  017e7	52		 push	 edx
  017e8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  017eb	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  017f1	e8 00 00 00 00	 call	 ?DeleteItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::DeleteItem

; 620  : 
; 621  :         if ( g_pToonSettings->get_TabDisplay() ) {

  017f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  017fc	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  01801	85 c0		 test	 eax, eax
  01803	74 1c		 je	 SHORT $L154194

; 622  :             if ( g_pMainPanelWnd && boAlert ) {

  01805	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A, 0 ; g_pMainPanelWnd
  0180c	74 13		 je	 SHORT $L154194
  0180e	83 7d 0c 00	 cmp	 DWORD PTR _boAlert$[ebp], 0
  01812	74 0d		 je	 SHORT $L154194

; 623  :                 g_pMainPanelWnd->AlertTab( TID_FRIENDS );

  01814	6a 03		 push	 3
  01816	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  0181c	e8 00 00 00 00	 call	 ?AlertTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::AlertTab
$L154194:

; 627  : }

  01821	8b e5		 mov	 esp, ebp
  01823	5d		 pop	 ebp
  01824	c2 08 00	 ret	 8
?DelFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ENDP		; CPeopleMgrWnd::DelFoe
_pPerson$ = 8
_boAlert$ = 12
_this$ = -12
_nIndex$ = -4
_nIconNumber$154203 = -8
?UpdateFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z PROC NEAR	; CPeopleMgrWnd::UpdateFoe

; 630  : void CPeopleMgrWnd::UpdateFoe( CPerson* pPerson, BOOL boAlert ) {

  01827	55		 push	 ebp
  01828	8b ec		 mov	 ebp, esp
  0182a	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0182d	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 631  : 	int nIndex = m_pFoeListCtrl->FindItem ( (int) pPerson );

  01830	8b 45 08	 mov	 eax, DWORD PTR _pPerson$[ebp]
  01833	50		 push	 eax
  01834	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01837	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  0183d	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  01842	89 45 fc	 mov	 DWORD PTR _nIndex$[ebp], eax

; 632  : 
; 633  : 	if ( nIndex != -1 ) {

  01845	83 7d fc ff	 cmp	 DWORD PTR _nIndex$[ebp], -1
  01849	74 5d		 je	 SHORT $L154202

; 634  : 		int nIconNumber = 0;

  0184b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nIconNumber$154203[ebp], 0

; 635  : 
; 636  : 		if ( pPerson->GetPermenant() )

  01852	8b 4d 08	 mov	 ecx, DWORD PTR _pPerson$[ebp]
  01855	e8 00 00 00 00	 call	 ?GetPermenant@CPerson@@QAEHXZ ; CPerson::GetPermenant
  0185a	85 c0		 test	 eax, eax
  0185c	74 07		 je	 SHORT $L154204

; 637  : 			nIconNumber = 3;

  0185e	c7 45 f8 03 00
	00 00		 mov	 DWORD PTR _nIconNumber$154203[ebp], 3
$L154204:

; 638  : 
; 639  : 		m_pFoeListCtrl->SetItemIcon ( nIndex, nIconNumber );

  01865	8b 55 f8	 mov	 edx, DWORD PTR _nIconNumber$154203[ebp]
  01868	52		 push	 edx
  01869	8b 45 fc	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0186c	50		 push	 eax
  0186d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01870	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  01876	e8 00 00 00 00	 call	 ?SetItemIcon@CSkinListCtrl@@QAEXHH@Z ; CSkinListCtrl::SetItemIcon

; 640  :         
; 641  :         if ( g_pToonSettings->get_TabDisplay() ) {

  0187b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  01881	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  01886	85 c0		 test	 eax, eax
  01888	74 1c		 je	 SHORT $L154206

; 642  :             if ( g_pMainPanelWnd && boAlert ) {

  0188a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A, 0 ; g_pMainPanelWnd
  01891	74 13		 je	 SHORT $L154206
  01893	83 7d 0c 00	 cmp	 DWORD PTR _boAlert$[ebp], 0
  01897	74 0d		 je	 SHORT $L154206

; 643  :                 g_pMainPanelWnd->AlertTab( TID_FRIENDS );

  01899	6a 03		 push	 3
  0189b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  018a1	e8 00 00 00 00	 call	 ?AlertTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::AlertTab
$L154206:

; 646  : 	} else {

  018a6	eb 10		 jmp	 SHORT $L154207
$L154202:

; 647  : 		AddFoe( pPerson, boAlert );

  018a8	8b 55 0c	 mov	 edx, DWORD PTR _boAlert$[ebp]
  018ab	52		 push	 edx
  018ac	8b 45 08	 mov	 eax, DWORD PTR _pPerson$[ebp]
  018af	50		 push	 eax
  018b0	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  018b3	e8 00 00 00 00	 call	 ?AddFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::AddFoe
$L154207:

; 649  : }

  018b8	8b e5		 mov	 esp, ebp
  018ba	5d		 pop	 ebp
  018bb	c2 08 00	 ret	 8
?UpdateFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ENDP	; CPeopleMgrWnd::UpdateFoe
_TEXT	ENDS
PUBLIC	?CompareFriends@CPeopleMgrWnd@@KGHPAVCPerson@@0PAVCSkinListCtrl@@@Z ; CPeopleMgrWnd::CompareFriends
_TEXT	SEGMENT
_pPersonA$ = 8
_pPersonB$ = 12
?CompareFriends@CPeopleMgrWnd@@KGHPAVCPerson@@0PAVCSkinListCtrl@@@Z PROC NEAR ; CPeopleMgrWnd::CompareFriends

; 652  : int CALLBACK CPeopleMgrWnd::CompareFriends ( CPerson* pPersonA, CPerson* pPersonB, CSkinListCtrl* pListCtrl ) {

  018be	55		 push	 ebp
  018bf	8b ec		 mov	 ebp, esp

; 653  : 	// trivial comparison...
; 654  : 	if ( pPersonA == pPersonB )

  018c1	8b 45 08	 mov	 eax, DWORD PTR _pPersonA$[ebp]
  018c4	3b 45 0c	 cmp	 eax, DWORD PTR _pPersonB$[ebp]
  018c7	75 04		 jne	 SHORT $L154213

; 655  : 		return 0;

  018c9	33 c0		 xor	 eax, eax
  018cb	eb 0c		 jmp	 SHORT $L154212
$L154213:

; 656  : 
; 657  : 	return pPersonA->Compare( pPersonB );

  018cd	8b 4d 0c	 mov	 ecx, DWORD PTR _pPersonB$[ebp]
  018d0	51		 push	 ecx
  018d1	8b 4d 08	 mov	 ecx, DWORD PTR _pPersonA$[ebp]
  018d4	e8 00 00 00 00	 call	 ?Compare@CPerson@@QAEHPAV1@@Z ; CPerson::Compare
$L154212:

; 658  : }

  018d9	5d		 pop	 ebp
  018da	c2 0c 00	 ret	 12			; 0000000cH
?CompareFriends@CPeopleMgrWnd@@KGHPAVCPerson@@0PAVCSkinListCtrl@@@Z ENDP ; CPeopleMgrWnd::CompareFriends
_TEXT	ENDS
PUBLIC	?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z		; CListCtrl::SortItems
PUBLIC	?Sort@CPeopleMgrWnd@@QAEXXZ			; CPeopleMgrWnd::Sort
_TEXT	SEGMENT
_this$ = -4
?Sort@CPeopleMgrWnd@@QAEXXZ PROC NEAR			; CPeopleMgrWnd::Sort

; 661  : void CPeopleMgrWnd::Sort ( void ) {

  018dd	55		 push	 ebp
  018de	8b ec		 mov	 ebp, esp
  018e0	51		 push	 ecx
  018e1	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 662  : 	m_pFriendListCtrl->SortItems ( (PFNLVCOMPARE)CPeopleMgrWnd::CompareFriends, (int)m_pFriendListCtrl );

  018e4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  018e7	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  018ed	51		 push	 ecx
  018ee	68 00 00 00 00	 push	 OFFSET FLAT:?CompareFriends@CPeopleMgrWnd@@KGHPAVCPerson@@0PAVCSkinListCtrl@@@Z ; CPeopleMgrWnd::CompareFriends
  018f3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  018f6	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  018fc	e8 00 00 00 00	 call	 ?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z ; CListCtrl::SortItems

; 663  : 	m_pFoeListCtrl->SortItems ( (PFNLVCOMPARE)CPeopleMgrWnd::CompareFriends, (int)m_pFoeListCtrl );

  01901	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01904	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  0190a	51		 push	 ecx
  0190b	68 00 00 00 00	 push	 OFFSET FLAT:?CompareFriends@CPeopleMgrWnd@@KGHPAVCPerson@@0PAVCSkinListCtrl@@@Z ; CPeopleMgrWnd::CompareFriends
  01910	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01913	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  01919	e8 00 00 00 00	 call	 ?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z ; CListCtrl::SortItems

; 664  : }

  0191e	8b e5		 mov	 esp, ebp
  01920	5d		 pop	 ebp
  01921	c3		 ret	 0
?Sort@CPeopleMgrWnd@@QAEXXZ ENDP			; CPeopleMgrWnd::Sort
_TEXT	ENDS
PUBLIC	??0?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@ABU?$less@VCString@@@1@ABV?$allocator@VCPerson@@@1@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >
PUBLIC	??0CFriendMgr@@QAE@XZ				; CFriendMgr::CFriendMgr
PUBLIC	??_7CFriendMgr@@6B@				; CFriendMgr::`vftable'
PUBLIC	??_GCFriendMgr@@UAEPAXI@Z			; CFriendMgr::`scalar deleting destructor'
PUBLIC	??_ECFriendMgr@@UAEPAXI@Z			; CFriendMgr::`vector deleting destructor'
;	COMDAT ??_7CFriendMgr@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CFriendMgr@@6B@ DD FLAT:??_ECFriendMgr@@UAEPAXI@Z	; CFriendMgr::`vftable'
CONST	ENDS
_TEXT	SEGMENT
$T161158 = -4
$T161159 = -8
_this$ = -12
??0CFriendMgr@@QAE@XZ PROC NEAR				; CFriendMgr::CFriendMgr

; 670  : CFriendMgr::CFriendMgr() {

  01922	55		 push	 ebp
  01923	8b ec		 mov	 ebp, esp
  01925	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01928	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  0192b	8d 45 fc	 lea	 eax, DWORD PTR $T161158[ebp]
  0192e	50		 push	 eax
  0192f	8d 4d f8	 lea	 ecx, DWORD PTR $T161159[ebp]
  01932	51		 push	 ecx
  01933	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01936	83 c1 04	 add	 ecx, 4
  01939	e8 00 00 00 00	 call	 ??0?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@ABU?$less@VCString@@@1@ABV?$allocator@VCPerson@@@1@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >
  0193e	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  01941	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7CFriendMgr@@6B@ ; CFriendMgr::`vftable'

; 671  : 	assert ( g_pFriendMgr == NULL );
; 672  : 	g_pFriendMgr = this;

  01947	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0194a	a3 00 00 00 00	 mov	 DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A, eax ; g_pFriendMgr

; 673  : }

  0194f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  01952	8b e5		 mov	 esp, ebp
  01954	5d		 pop	 ebp
  01955	c3		 ret	 0
??0CFriendMgr@@QAE@XZ ENDP				; CFriendMgr::CFriendMgr
_TEXT	ENDS
PUBLIC	??1CFriendMgr@@UAE@XZ				; CFriendMgr::~CFriendMgr
;	COMDAT ??_GCFriendMgr@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCFriendMgr@@UAEPAXI@Z PROC NEAR			; CFriendMgr::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CFriendMgr@@UAE@XZ	; CFriendMgr::~CFriendMgr
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L154233
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L154233:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCFriendMgr@@UAEPAXI@Z ENDP				; CFriendMgr::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::~map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >
xdata$x	SEGMENT
$T161165 DD	019930520H
	DD	01H
	DD	FLAT:$T161167
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161167 DD	0ffffffffH
	DD	FLAT:$L161163
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??1CFriendMgr@@UAE@XZ PROC NEAR				; CFriendMgr::~CFriendMgr

; 675  : CFriendMgr::~CFriendMgr() {

  01956	55		 push	 ebp
  01957	8b ec		 mov	 ebp, esp
  01959	6a ff		 push	 -1
  0195b	68 00 00 00 00	 push	 $L161166
  01960	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01966	50		 push	 eax
  01967	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0196e	51		 push	 ecx
  0196f	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  01972	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01975	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CFriendMgr@@6B@ ; CFriendMgr::`vftable'
  0197b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 676  : 	if ( g_pPeopleMgrWnd )

  01982	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  01989	74 16		 je	 SHORT $L154239

; 677  : 		g_pPeopleMgrWnd->CloseSelf( false );

  0198b	6a 00		 push	 0
  0198d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01993	8b 11		 mov	 edx, DWORD PTR [ecx]
  01995	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  0199b	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L154239:

; 680  : 	g_pFriendMgr = NULL;

  019a1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A, 0 ; g_pFriendMgr

; 681  : }

  019ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  019b2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  019b5	83 c1 04	 add	 ecx, 4
  019b8	e8 00 00 00 00	 call	 ??1?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::~map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >
  019bd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  019c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  019c7	8b e5		 mov	 esp, ebp
  019c9	5d		 pop	 ebp
  019ca	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L161163:
  00191	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	83 c1 04	 add	 ecx, 4
  00197	e8 00 00 00 00	 call	 ??1?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::~map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >
  0019c	c3		 ret	 0
$L161166:
  0019d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161165
  001a2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CFriendMgr@@UAE@XZ ENDP				; CFriendMgr::~CFriendMgr
PUBLIC	??1?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::~_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >
;	COMDAT ??1?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@XZ PROC NEAR ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::~map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::~_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@XZ ENDP ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::~map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >
_TEXT	ENDS
PUBLIC	??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::operator[]
PUBLIC	?LoadFriends@CFriendMgr@@QAEXXZ			; CFriendMgr::LoadFriends
PUBLIC	??DTextID@@QAEPADXZ				; TextID::operator*
EXTRN	?g_pCurrentServer@@3PAUServerInfo@@A:DWORD	; g_pCurrentServer
EXTRN	??0CString@@QAE@PBD@Z:NEAR			; CString::CString
EXTRN	__imp__fclose:NEAR
EXTRN	__imp__fgets:NEAR
EXTRN	__imp__fopen:NEAR
EXTRN	?MakeLower@CString@@QAEXXZ:NEAR			; CString::MakeLower
EXTRN	?Format@CString@@QAAXPBDZZ:NEAR			; CString::Format
EXTRN	__imp__isalnum:NEAR
EXTRN	__imp__unlink:NEAR
EXTRN	_memset:NEAR
EXTRN	_strlen:NEAR
EXTRN	?g_sConfigDir@@3PADA:BYTE			; g_sConfigDir
_DATA	SEGMENT
$SG154246 DB	'%s\realm.friends.%s.%s', 00H
	ORG $+1
$SG154249 DB	'rb', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T161174 DD	019930520H
	DD	02H
	DD	FLAT:$T161176
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161176 DD	0ffffffffH
	DD	FLAT:$L161171
	DD	00H
	DD	FLAT:$L161172
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -112
_sFilename$ = -16
_pFile$ = -20
_achFriendName$154251 = -100
_pPtr$154257 = -104
_sName$154262 = -108
?LoadFriends@CFriendMgr@@QAEXXZ PROC NEAR		; CFriendMgr::LoadFriends

; 684  : void CFriendMgr::LoadFriends ( void ) {

  019cb	55		 push	 ebp
  019cc	8b ec		 mov	 ebp, esp
  019ce	6a ff		 push	 -1
  019d0	68 00 00 00 00	 push	 $L161175
  019d5	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  019db	50		 push	 eax
  019dc	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  019e3	83 ec 64	 sub	 esp, 100		; 00000064H
  019e6	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx

; 685  : 	CString sFilename;

  019e9	8d 4d f0	 lea	 ecx, DWORD PTR _sFilename$[ebp]
  019ec	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  019f1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 686  : 	sFilename.Format ( "%s\\realm.friends.%s.%s", g_sConfigDir, *g_pCurrentServer->m_hName, g_sCharacterName.c_str() );

  019f8	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  019fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  01a03	50		 push	 eax
  01a04	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  01a0a	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
  01a0f	50		 push	 eax
  01a10	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  01a15	68 00 00 00 00	 push	 OFFSET FLAT:$SG154246
  01a1a	8d 45 f0	 lea	 eax, DWORD PTR _sFilename$[ebp]
  01a1d	50		 push	 eax
  01a1e	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  01a23	83 c4 14	 add	 esp, 20			; 00000014H

; 687  : 
; 688  : 	// SNTODO: calculate the file name from the logged in character and server...
; 689  : 	FILE *pFile = fopen ( (LPCTSTR)sFilename, "rb" );

  01a26	68 00 00 00 00	 push	 OFFSET FLAT:$SG154249
  01a2b	8d 4d f0	 lea	 ecx, DWORD PTR _sFilename$[ebp]
  01a2e	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01a33	50		 push	 eax
  01a34	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  01a3a	83 c4 08	 add	 esp, 8
  01a3d	89 45 ec	 mov	 DWORD PTR _pFile$[ebp], eax

; 690  : 
; 691  : 	if ( NULL != pFile ) {

  01a40	83 7d ec 00	 cmp	 DWORD PTR _pFile$[ebp], 0
  01a44	0f 84 d8 00 00
	00		 je	 $L154250

; 692  : 		char achFriendName[80];
; 693  : 		memset ( achFriendName, 0, sizeof ( achFriendName ) );

  01a4a	6a 50		 push	 80			; 00000050H
  01a4c	6a 00		 push	 0
  01a4e	8d 4d 9c	 lea	 ecx, DWORD PTR _achFriendName$154251[ebp]
  01a51	51		 push	 ecx
  01a52	e8 00 00 00 00	 call	 _memset
  01a57	83 c4 0c	 add	 esp, 12			; 0000000cH
$L154253:

; 696  : 			if ( NULL == fgets ( achFriendName, sizeof ( achFriendName ), pFile ) ) {

  01a5a	8b 55 ec	 mov	 edx, DWORD PTR _pFile$[ebp]
  01a5d	52		 push	 edx
  01a5e	6a 50		 push	 80			; 00000050H
  01a60	8d 45 9c	 lea	 eax, DWORD PTR _achFriendName$154251[ebp]
  01a63	50		 push	 eax
  01a64	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fgets
  01a6a	83 c4 0c	 add	 esp, 12			; 0000000cH
  01a6d	85 c0		 test	 eax, eax
  01a6f	75 05		 jne	 SHORT $L154255

; 697  : 				break;

  01a71	e9 8d 00 00 00	 jmp	 $L154254
$L154255:

; 699  : 
; 700  : 			// stop loading as soon as any names are too long...
; 701  : 			if ( strlen ( achFriendName ) > 18 )

  01a76	8d 4d 9c	 lea	 ecx, DWORD PTR _achFriendName$154251[ebp]
  01a79	51		 push	 ecx
  01a7a	e8 00 00 00 00	 call	 _strlen
  01a7f	83 c4 04	 add	 esp, 4
  01a82	83 f8 12	 cmp	 eax, 18			; 00000012H
  01a85	76 02		 jbe	 SHORT $L154256

; 702  : 				break;

  01a87	eb 7a		 jmp	 SHORT $L154254
$L154256:

; 703  : 
; 704  : 			// toss the first non-alpha character...
; 705  : 			char *pPtr = achFriendName;

  01a89	8d 55 9c	 lea	 edx, DWORD PTR _achFriendName$154251[ebp]
  01a8c	89 55 98	 mov	 DWORD PTR _pPtr$154257[ebp], edx
$L154259:

; 706  : 
; 707  : 			while ( *pPtr ) {

  01a8f	8b 45 98	 mov	 eax, DWORD PTR _pPtr$154257[ebp]
  01a92	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  01a95	85 c9		 test	 ecx, ecx
  01a97	74 27		 je	 SHORT $L154260

; 708  : 				if ( !isalnum ( *pPtr ) ) {

  01a99	8b 55 98	 mov	 edx, DWORD PTR _pPtr$154257[ebp]
  01a9c	0f be 02	 movsx	 eax, BYTE PTR [edx]
  01a9f	50		 push	 eax
  01aa0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isalnum
  01aa6	83 c4 04	 add	 esp, 4
  01aa9	85 c0		 test	 eax, eax
  01aab	75 08		 jne	 SHORT $L154261

; 709  : 					*pPtr = 0;

  01aad	8b 4d 98	 mov	 ecx, DWORD PTR _pPtr$154257[ebp]
  01ab0	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 710  : 					break;

  01ab3	eb 0b		 jmp	 SHORT $L154260
$L154261:

; 712  : 
; 713  : 				pPtr++;

  01ab5	8b 55 98	 mov	 edx, DWORD PTR _pPtr$154257[ebp]
  01ab8	83 c2 01	 add	 edx, 1
  01abb	89 55 98	 mov	 DWORD PTR _pPtr$154257[ebp], edx

; 714  : 			}

  01abe	eb cf		 jmp	 SHORT $L154259
$L154260:

; 715  : 
; 716  : 			CString sName = achFriendName;

  01ac0	8d 45 9c	 lea	 eax, DWORD PTR _achFriendName$154251[ebp]
  01ac3	50		 push	 eax
  01ac4	8d 4d 94	 lea	 ecx, DWORD PTR _sName$154262[ebp]
  01ac7	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  01acc	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 717  : 			sName.MakeLower();

  01ad0	8d 4d 94	 lea	 ecx, DWORD PTR _sName$154262[ebp]
  01ad3	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 718  : 
; 719  : 			m_friendMap[sName].SetName( achFriendName );

  01ad8	8d 4d 9c	 lea	 ecx, DWORD PTR _achFriendName$154251[ebp]
  01adb	51		 push	 ecx
  01adc	8d 55 94	 lea	 edx, DWORD PTR _sName$154262[ebp]
  01adf	52		 push	 edx
  01ae0	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  01ae3	83 c1 04	 add	 ecx, 4
  01ae6	e8 00 00 00 00	 call	 ??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::operator[]
  01aeb	8b c8		 mov	 ecx, eax
  01aed	e8 00 00 00 00	 call	 ?SetName@CPerson@@QAEXPBD@Z ; CPerson::SetName

; 720  : 		}

  01af2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01af6	8d 4d 94	 lea	 ecx, DWORD PTR _sName$154262[ebp]
  01af9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01afe	e9 57 ff ff ff	 jmp	 $L154253
$L154254:

; 721  : 
; 722  : 		fclose ( pFile );

  01b03	8b 45 ec	 mov	 eax, DWORD PTR _pFile$[ebp]
  01b06	50		 push	 eax
  01b07	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  01b0d	83 c4 04	 add	 esp, 4

; 723  : 
; 724  : 		unlink( sFilename );

  01b10	8d 4d f0	 lea	 ecx, DWORD PTR _sFilename$[ebp]
  01b13	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01b18	50		 push	 eax
  01b19	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__unlink
  01b1f	83 c4 04	 add	 esp, 4
$L154250:

; 726  : }

  01b22	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01b29	8d 4d f0	 lea	 ecx, DWORD PTR _sFilename$[ebp]
  01b2c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01b31	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01b34	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01b3b	8b e5		 mov	 esp, ebp
  01b3d	5d		 pop	 ebp
  01b3e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L161171:
  001a7	8d 4d f0	 lea	 ecx, DWORD PTR _sFilename$[ebp]
  001aa	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  001af	c3		 ret	 0
$L161172:
  001b0	8d 4d 94	 lea	 ecx, DWORD PTR _sName$154262[ebp]
  001b3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  001b8	c3		 ret	 0
$L161175:
  001b9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161174
  001be	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?LoadFriends@CFriendMgr@@QAEXXZ ENDP			; CFriendMgr::LoadFriends
PUBLIC	?begin@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::begin
PUBLIC	?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end
PUBLIC	?UnregisterFriends@CFriendMgr@@QAEXXZ		; CFriendMgr::UnregisterFriends
PUBLIC	??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator*
PUBLIC	??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++
PUBLIC	??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
EXTRN	??YCString@@QAEABV0@ABV0@@Z:NEAR		; CString::operator+=
EXTRN	??YCString@@QAEABV0@PBD@Z:NEAR			; CString::operator+=
_DATA	SEGMENT
	ORG $+1
$SG154279 DB	'/delfriend ', 00H
$SG154280 DB	' ', 00H
	ORG $+2
$SG154283 DB	'%s', 00H
	ORG $+1
$SG154286 DB	'%s', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T161184 DD	019930520H
	DD	02H
	DD	FLAT:$T161186
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161186 DD	0ffffffffH
	DD	FLAT:$L161181
	DD	00H
	DD	FLAT:$L161182
xdata$x	ENDS
_TEXT	SEGMENT
$T161178 = -36
$T161179 = -40
$T161180 = -44
__$EHRec$ = -12
_this$ = -48
_nPlayerCount$ = -24
_bCmdSent$ = -20
_sCommand$ = -32
_sName$ = -28
_friendMapIter$ = -16
?UnregisterFriends@CFriendMgr@@QAEXXZ PROC NEAR		; CFriendMgr::UnregisterFriends

; 729  : void CFriendMgr::UnregisterFriends ( void ) {

  01b3f	55		 push	 ebp
  01b40	8b ec		 mov	 ebp, esp
  01b42	6a ff		 push	 -1
  01b44	68 00 00 00 00	 push	 $L161185
  01b49	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01b4f	50		 push	 eax
  01b50	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01b57	83 ec 24	 sub	 esp, 36			; 00000024H
  01b5a	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 730  : 	int nPlayerCount = 0;

  01b5d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _nPlayerCount$[ebp], 0

; 731  : 	BOOL bCmdSent = FALSE;

  01b64	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _bCmdSent$[ebp], 0

; 732  : 	CString sCommand, sName;

  01b6b	8d 4d e0	 lea	 ecx, DWORD PTR _sCommand$[ebp]
  01b6e	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  01b73	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01b7a	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  01b7d	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  01b82	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 733  : 	
; 734  : 	// step through and build a command for the server (max of 25 per send)
; 735  : 	for (FriendMapIter friendMapIter = m_friendMap.begin();friendMapIter != m_friendMap.end();friendMapIter++) {

  01b86	8d 45 dc	 lea	 eax, DWORD PTR $T161178[ebp]
  01b89	50		 push	 eax
  01b8a	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01b8d	83 c1 04	 add	 ecx, 4
  01b90	e8 00 00 00 00	 call	 ?begin@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::begin
  01b95	8b 08		 mov	 ecx, DWORD PTR [eax]
  01b97	89 4d f0	 mov	 DWORD PTR _friendMapIter$[ebp], ecx
  01b9a	eb 0e		 jmp	 SHORT $L154275
$L154276:
  01b9c	6a 00		 push	 0
  01b9e	8d 55 d8	 lea	 edx, DWORD PTR $T161179[ebp]
  01ba1	52		 push	 edx
  01ba2	8d 4d f0	 lea	 ecx, DWORD PTR _friendMapIter$[ebp]
  01ba5	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++
$L154275:
  01baa	8d 45 d4	 lea	 eax, DWORD PTR $T161180[ebp]
  01bad	50		 push	 eax
  01bae	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01bb1	83 c1 04	 add	 ecx, 4
  01bb4	e8 00 00 00 00	 call	 ?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end
  01bb9	50		 push	 eax
  01bba	8d 4d f0	 lea	 ecx, DWORD PTR _friendMapIter$[ebp]
  01bbd	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
  01bc2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01bc7	85 c0		 test	 eax, eax
  01bc9	0f 84 81 00 00
	00		 je	 $L154277

; 736  : 		(*friendMapIter).second.GetName ( sName );

  01bcf	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  01bd2	51		 push	 ecx
  01bd3	8d 4d f0	 lea	 ecx, DWORD PTR _friendMapIter$[ebp]
  01bd6	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator*
  01bdb	8b c8		 mov	 ecx, eax
  01bdd	83 c1 04	 add	 ecx, 4
  01be0	e8 00 00 00 00	 call	 ?GetName@CPerson@@QAEXAAVCString@@@Z ; CPerson::GetName

; 737  : 
; 738  : 		// set the command string if we're starting over
; 739  : 		if ( nPlayerCount == 0 ) {

  01be5	83 7d e8 00	 cmp	 DWORD PTR _nPlayerCount$[ebp], 0
  01be9	75 14		 jne	 SHORT $L154278

; 740  : 			sCommand = "/delfriend ";

  01beb	68 00 00 00 00	 push	 OFFSET FLAT:$SG154279
  01bf0	8d 4d e0	 lea	 ecx, DWORD PTR _sCommand$[ebp]
  01bf3	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 741  : 			bCmdSent = FALSE;

  01bf8	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _bCmdSent$[ebp], 0
$L154278:

; 743  : 
; 744  : 		sCommand += sName;

  01bff	8d 55 e4	 lea	 edx, DWORD PTR _sName$[ebp]
  01c02	52		 push	 edx
  01c03	8d 4d e0	 lea	 ecx, DWORD PTR _sCommand$[ebp]
  01c06	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@ABV0@@Z ; CString::operator+=

; 745  : 		sCommand += " ";

  01c0b	68 00 00 00 00	 push	 OFFSET FLAT:$SG154280
  01c10	8d 4d e0	 lea	 ecx, DWORD PTR _sCommand$[ebp]
  01c13	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=

; 746  : 
; 747  : 		nPlayerCount++;

  01c18	8b 45 e8	 mov	 eax, DWORD PTR _nPlayerCount$[ebp]
  01c1b	83 c0 01	 add	 eax, 1
  01c1e	89 45 e8	 mov	 DWORD PTR _nPlayerCount$[ebp], eax

; 748  : 
; 749  : 		if ( nPlayerCount == 25 ) {

  01c21	83 7d e8 19	 cmp	 DWORD PTR _nPlayerCount$[ebp], 25 ; 00000019H
  01c25	75 24		 jne	 SHORT $L154281

; 750  : 			MsgSendChat ( "%s", (LPCTSTR)sCommand );

  01c27	8d 4d e0	 lea	 ecx, DWORD PTR _sCommand$[ebp]
  01c2a	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01c2f	50		 push	 eax
  01c30	68 00 00 00 00	 push	 OFFSET FLAT:$SG154283
  01c35	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  01c3a	83 c4 08	 add	 esp, 8

; 751  : 			nPlayerCount = 0;

  01c3d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _nPlayerCount$[ebp], 0

; 752  : 			bCmdSent = TRUE;

  01c44	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _bCmdSent$[ebp], 1
$L154281:

; 754  : 	}

  01c4b	e9 4c ff ff ff	 jmp	 $L154276
$L154277:

; 755  : 
; 756  : 	if ( FALSE == bCmdSent ) {

  01c50	83 7d ec 00	 cmp	 DWORD PTR _bCmdSent$[ebp], 0
  01c54	75 16		 jne	 SHORT $L154284

; 757  : 		MsgSendChat ( "%s", (LPCTSTR)sCommand );

  01c56	8d 4d e0	 lea	 ecx, DWORD PTR _sCommand$[ebp]
  01c59	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01c5e	50		 push	 eax
  01c5f	68 00 00 00 00	 push	 OFFSET FLAT:$SG154286
  01c64	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  01c69	83 c4 08	 add	 esp, 8
$L154284:

; 759  : }

  01c6c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01c70	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  01c73	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01c78	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01c7f	8d 4d e0	 lea	 ecx, DWORD PTR _sCommand$[ebp]
  01c82	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01c87	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01c8a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01c91	8b e5		 mov	 esp, ebp
  01c93	5d		 pop	 ebp
  01c94	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L161181:
  001c3	8d 4d e0	 lea	 ecx, DWORD PTR _sCommand$[ebp]
  001c6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  001cb	c3		 ret	 0
$L161182:
  001cc	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  001cf	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  001d4	c3		 ret	 0
$L161185:
  001d5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161184
  001da	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UnregisterFriends@CFriendMgr@@QAEXXZ ENDP		; CFriendMgr::UnregisterFriends
PUBLIC	?ShowFriends@CFriendMgr@@QAEXXZ			; CFriendMgr::ShowFriends
xdata$x	SEGMENT
$T161197 DD	019930520H
	DD	01H
	DD	FLAT:$T161199
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161199 DD	0ffffffffH
	DD	FLAT:$L161195
xdata$x	ENDS
_TEXT	SEGMENT
$T161188 = -20
$T161189 = -24
$T161192 = -28
$T161193 = -32
$T161194 = -36
__$EHRec$ = -12
_this$ = -40
_friendMapIter$ = -16
?ShowFriends@CFriendMgr@@QAEXXZ PROC NEAR		; CFriendMgr::ShowFriends

; 762  : void CFriendMgr::ShowFriends ( void ) {

  01c95	55		 push	 ebp
  01c96	8b ec		 mov	 ebp, esp
  01c98	6a ff		 push	 -1
  01c9a	68 00 00 00 00	 push	 $L161198
  01c9f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01ca5	50		 push	 eax
  01ca6	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01cad	83 ec 20	 sub	 esp, 32			; 00000020H
  01cb0	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 763  : 	// bring the window to the top if it's there...
; 764  : 	if ( g_pPeopleMgrWnd ) {

  01cb3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  01cba	74 0d		 je	 SHORT $L154291

; 765  : 		g_pPeopleMgrWnd->BringWindowToTop();

  01cbc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01cc2	e8 00 00 00 00	 call	 ?BringWindowToTop@CWnd@@QAEXXZ ; CWnd::BringWindowToTop

; 766  : 	} else {

  01cc7	eb 62		 jmp	 SHORT $L154297
$L154291:

; 767  : 		new CPeopleMgrWnd;

  01cc9	68 a8 00 00 00	 push	 168			; 000000a8H
  01cce	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01cd3	89 45 e8	 mov	 DWORD PTR $T161189[ebp], eax
  01cd6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01cdd	83 7d e8 00	 cmp	 DWORD PTR $T161189[ebp], 0
  01ce1	74 0d		 je	 SHORT $L161190
  01ce3	8b 4d e8	 mov	 ecx, DWORD PTR $T161189[ebp]
  01ce6	e8 00 00 00 00	 call	 ??0CPeopleMgrWnd@@QAE@XZ ; CPeopleMgrWnd::CPeopleMgrWnd
  01ceb	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  01cee	eb 07		 jmp	 SHORT $L161191
$L161190:
  01cf0	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L161191:
  01cf7	8b 45 d4	 mov	 eax, DWORD PTR -44+[ebp]
  01cfa	89 45 ec	 mov	 DWORD PTR $T161188[ebp], eax
  01cfd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 768  : 		g_pPeopleMgrWnd->Create();

  01d04	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01d0a	e8 00 00 00 00	 call	 ?Create@CPeopleMgrWnd@@QAEHXZ ; CPeopleMgrWnd::Create

; 769  : 	
; 770  :         if ( !g_pToonSettings->get_TabDisplay() ) {

  01d0f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  01d15	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  01d1a	85 c0		 test	 eax, eax
  01d1c	75 0d		 jne	 SHORT $L154297

; 771  : 		    // show this dialog without activating it...
; 772  : 		    g_pPeopleMgrWnd->ShowWindow ( SW_SHOWNA );

  01d1e	6a 08		 push	 8
  01d20	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01d26	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L154297:

; 775  : 
; 776  : 	g_pPeopleMgrWnd->ClearFriends();

  01d2b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01d31	e8 00 00 00 00	 call	 ?ClearFriends@CPeopleMgrWnd@@QAEXXZ ; CPeopleMgrWnd::ClearFriends

; 777  : 
; 778  : 	// step through and add each friend to the window...
; 779  : 	for (FriendMapIter friendMapIter = m_friendMap.begin();friendMapIter != m_friendMap.end();friendMapIter++) {

  01d36	8d 4d e4	 lea	 ecx, DWORD PTR $T161192[ebp]
  01d39	51		 push	 ecx
  01d3a	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01d3d	83 c1 04	 add	 ecx, 4
  01d40	e8 00 00 00 00	 call	 ?begin@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::begin
  01d45	8b 10		 mov	 edx, DWORD PTR [eax]
  01d47	89 55 f0	 mov	 DWORD PTR _friendMapIter$[ebp], edx
  01d4a	eb 0e		 jmp	 SHORT $L154302
$L154303:
  01d4c	6a 00		 push	 0
  01d4e	8d 45 e0	 lea	 eax, DWORD PTR $T161193[ebp]
  01d51	50		 push	 eax
  01d52	8d 4d f0	 lea	 ecx, DWORD PTR _friendMapIter$[ebp]
  01d55	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++
$L154302:
  01d5a	8d 4d dc	 lea	 ecx, DWORD PTR $T161194[ebp]
  01d5d	51		 push	 ecx
  01d5e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01d61	83 c1 04	 add	 ecx, 4
  01d64	e8 00 00 00 00	 call	 ?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end
  01d69	50		 push	 eax
  01d6a	8d 4d f0	 lea	 ecx, DWORD PTR _friendMapIter$[ebp]
  01d6d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
  01d72	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01d77	85 c0		 test	 eax, eax
  01d79	74 1b		 je	 SHORT $L154304

; 780  : 		g_pPeopleMgrWnd->AddFriend( &(*friendMapIter).second, false);

  01d7b	6a 00		 push	 0
  01d7d	8d 4d f0	 lea	 ecx, DWORD PTR _friendMapIter$[ebp]
  01d80	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator*
  01d85	83 c0 04	 add	 eax, 4
  01d88	50		 push	 eax
  01d89	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01d8f	e8 00 00 00 00	 call	 ?AddFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::AddFriend

; 781  : 	}

  01d94	eb b6		 jmp	 SHORT $L154303
$L154304:

; 782  : }

  01d96	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01d99	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01da0	8b e5		 mov	 esp, ebp
  01da2	5d		 pop	 ebp
  01da3	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L161195:
  001df	8b 45 e8	 mov	 eax, DWORD PTR $T161189[ebp]
  001e2	50		 push	 eax
  001e3	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001e8	c3		 ret	 0
$L161198:
  001e9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161197
  001ee	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ShowFriends@CFriendMgr@@QAEXXZ ENDP			; CFriendMgr::ShowFriends
PUBLIC	?HideFriends@CFriendMgr@@QAEXXZ			; CFriendMgr::HideFriends
_TEXT	SEGMENT
_this$ = -4
?HideFriends@CFriendMgr@@QAEXXZ PROC NEAR		; CFriendMgr::HideFriends

; 784  : void CFriendMgr::HideFriends ( void ) {

  01da4	55		 push	 ebp
  01da5	8b ec		 mov	 ebp, esp
  01da7	51		 push	 ecx
  01da8	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 785  :     if (g_pPeopleMgrWnd)     {

  01dab	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  01db2	74 15		 je	 SHORT $L154309

; 786  :         g_pPeopleMgrWnd->CloseSelf( false );

  01db4	6a 00		 push	 0
  01db6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01dbb	8b 10		 mov	 edx, DWORD PTR [eax]
  01dbd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01dc3	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L154309:

; 788  : }

  01dc9	8b e5		 mov	 esp, ebp
  01dcb	5d		 pop	 ebp
  01dcc	c3		 ret	 0
?HideFriends@CFriendMgr@@QAEXXZ ENDP			; CFriendMgr::HideFriends
_TEXT	ENDS
PUBLIC	?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEIABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::erase
PUBLIC	?IsEmpty@CString@@QBEHXZ			; CString::IsEmpty
PUBLIC	?HandleMessage@CFriendMgr@@QAEXPBD@Z		; CFriendMgr::HandleMessage
EXTRN	??0CString@@QAE@ABV0@@Z:NEAR			; CString::CString
xdata$x	SEGMENT
$T161206 DD	019930520H
	DD	03H
	DD	FLAT:$T161210
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161210 DD	0ffffffffH
	DD	FLAT:$L161202
	DD	00H
	DD	FLAT:$L161203
	DD	01H
	DD	FLAT:$L161204
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_pMessage$ = 8
_this$ = -36
_chCmd$ = -20
_sName$ = -24
_sLowerName$ = -28
_pFriend$ = -16
_sCurName$154328 = -32
?HandleMessage@CFriendMgr@@QAEXPBD@Z PROC NEAR		; CFriendMgr::HandleMessage

; 791  : void CFriendMgr::HandleMessage ( LPCTSTR pMessage ) {

  01dcd	55		 push	 ebp
  01dce	8b ec		 mov	 ebp, esp
  01dd0	6a ff		 push	 -1
  01dd2	68 00 00 00 00	 push	 $L161207
  01dd7	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01ddd	50		 push	 eax
  01dde	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01de5	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01de8	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx

; 792  : 	if ( NULL == pMessage )

  01deb	83 7d 08 00	 cmp	 DWORD PTR _pMessage$[ebp], 0
  01def	75 05		 jne	 SHORT $L154314

; 793  : 		return;

  01df1	e9 f3 01 00 00	 jmp	 $L154313
$L154314:

; 794  : 
; 795  : 	// skip the '-f' part...
; 796  : 	pMessage += 2;

  01df6	8b 45 08	 mov	 eax, DWORD PTR _pMessage$[ebp]
  01df9	83 c0 02	 add	 eax, 2
  01dfc	89 45 08	 mov	 DWORD PTR _pMessage$[ebp], eax

; 797  : 
; 798  : 	// get the command character....html
; 799  : 	char chCmd = *pMessage++;

  01dff	8b 4d 08	 mov	 ecx, DWORD PTR _pMessage$[ebp]
  01e02	8a 11		 mov	 dl, BYTE PTR [ecx]
  01e04	88 55 ec	 mov	 BYTE PTR _chCmd$[ebp], dl
  01e07	8b 45 08	 mov	 eax, DWORD PTR _pMessage$[ebp]
  01e0a	83 c0 01	 add	 eax, 1
  01e0d	89 45 08	 mov	 DWORD PTR _pMessage$[ebp], eax

; 800  : 
; 801  : 	// name for comparison...
; 802  : 	CString sName = pMessage;

  01e10	8b 4d 08	 mov	 ecx, DWORD PTR _pMessage$[ebp]
  01e13	51		 push	 ecx
  01e14	8d 4d e8	 lea	 ecx, DWORD PTR _sName$[ebp]
  01e17	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  01e1c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 803  : 	CString sLowerName = sName;

  01e23	8d 55 e8	 lea	 edx, DWORD PTR _sName$[ebp]
  01e26	52		 push	 edx
  01e27	8d 4d e4	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  01e2a	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  01e2f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 804  : 	sLowerName.MakeLower();

  01e33	8d 4d e4	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  01e36	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 805  : 
; 806  : 	// find the friend that represents the name
; 807  : 	CPerson& pFriend = m_friendMap[sLowerName];

  01e3b	8d 45 e4	 lea	 eax, DWORD PTR _sLowerName$[ebp]
  01e3e	50		 push	 eax
  01e3f	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  01e42	83 c1 04	 add	 ecx, 4
  01e45	e8 00 00 00 00	 call	 ??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::operator[]
  01e4a	89 45 f0	 mov	 DWORD PTR _pFriend$[ebp], eax

; 808  : 
; 809  : 	// handle the command for this friend...
; 810  : 	switch ( chCmd ) {

  01e4d	0f be 4d ec	 movsx	 ecx, BYTE PTR _chCmd$[ebp]
  01e51	89 4d d8	 mov	 DWORD PTR -40+[ebp], ecx
  01e54	8b 55 d8	 mov	 edx, DWORD PTR -40+[ebp]
  01e57	83 ea 20	 sub	 edx, 32			; 00000020H
  01e5a	89 55 d8	 mov	 DWORD PTR -40+[ebp], edx
  01e5d	83 7d d8 55	 cmp	 DWORD PTR -40+[ebp], 85	; 00000055H
  01e61	0f 87 42 01 00
	00		 ja	 $L154320
  01e67	8b 4d d8	 mov	 ecx, DWORD PTR -40+[ebp]
  01e6a	33 c0		 xor	 eax, eax
  01e6c	8a 81 00 00 00
	00		 mov	 al, BYTE PTR $L161208[ecx]
  01e72	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L161209[eax*4]
$L154323:

; 812  : 			pFriend.SetOnline( TRUE );

  01e79	6a 01		 push	 1
  01e7b	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01e7e	e8 00 00 00 00	 call	 ?SetOnline@CPerson@@QAEHH@Z ; CPerson::SetOnline

; 813  : 			pFriend.SetBusy( TRUE );

  01e83	6a 01		 push	 1
  01e85	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01e88	e8 00 00 00 00	 call	 ?SetBusy@CPerson@@QAEHH@Z ; CPerson::SetBusy

; 814  : 			pFriend.SetName( sName );

  01e8d	8d 4d e8	 lea	 ecx, DWORD PTR _sName$[ebp]
  01e90	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01e95	50		 push	 eax
  01e96	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01e99	e8 00 00 00 00	 call	 ?SetName@CPerson@@QAEXPBD@Z ; CPerson::SetName

; 816  : 
; 817  : 		break;

  01e9e	e9 06 01 00 00	 jmp	 $L154320
$L154324:

; 820  : 			pFriend.SetOnline( TRUE );

  01ea3	6a 01		 push	 1
  01ea5	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01ea8	e8 00 00 00 00	 call	 ?SetOnline@CPerson@@QAEHH@Z ; CPerson::SetOnline

; 821  : 			pFriend.SetBusy( FALSE );

  01ead	6a 00		 push	 0
  01eaf	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01eb2	e8 00 00 00 00	 call	 ?SetBusy@CPerson@@QAEHH@Z ; CPerson::SetBusy

; 822  : 			pFriend.SetName( sName );

  01eb7	8d 4d e8	 lea	 ecx, DWORD PTR _sName$[ebp]
  01eba	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01ebf	50		 push	 eax
  01ec0	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01ec3	e8 00 00 00 00	 call	 ?SetName@CPerson@@QAEXPBD@Z ; CPerson::SetName

; 824  : 
; 825  : 		break;

  01ec8	e9 dc 00 00 00	 jmp	 $L154320
$L154325:

; 828  : 			pFriend.SetOnline( TRUE );

  01ecd	6a 01		 push	 1
  01ecf	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01ed2	e8 00 00 00 00	 call	 ?SetOnline@CPerson@@QAEHH@Z ; CPerson::SetOnline

; 829  : 			pFriend.SetName( sName );

  01ed7	8d 4d e8	 lea	 ecx, DWORD PTR _sName$[ebp]
  01eda	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01edf	50		 push	 eax
  01ee0	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01ee3	e8 00 00 00 00	 call	 ?SetName@CPerson@@QAEXPBD@Z ; CPerson::SetName

; 831  : 
; 832  : 		break;

  01ee8	e9 bc 00 00 00	 jmp	 $L154320
$L154326:

; 835  : 			pFriend.SetOnline( FALSE );

  01eed	6a 00		 push	 0
  01eef	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01ef2	e8 00 00 00 00	 call	 ?SetOnline@CPerson@@QAEHH@Z ; CPerson::SetOnline

; 836  : 			pFriend.SetBusy( FALSE );

  01ef7	6a 00		 push	 0
  01ef9	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01efc	e8 00 00 00 00	 call	 ?SetBusy@CPerson@@QAEHH@Z ; CPerson::SetBusy

; 838  : 
; 839  : 		break;

  01f01	e9 a3 00 00 00	 jmp	 $L154320
$L154327:

; 842  : 			CString sCurName;

  01f06	8d 4d e0	 lea	 ecx, DWORD PTR _sCurName$154328[ebp]
  01f09	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  01f0e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 843  : 
; 844  : 			pFriend.GetName( sCurName );

  01f12	8d 55 e0	 lea	 edx, DWORD PTR _sCurName$154328[ebp]
  01f15	52		 push	 edx
  01f16	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01f19	e8 00 00 00 00	 call	 ?GetName@CPerson@@QAEXAAVCString@@@Z ; CPerson::GetName

; 845  : 
; 846  : 			if ( sCurName.IsEmpty() )

  01f1e	8d 4d e0	 lea	 ecx, DWORD PTR _sCurName$154328[ebp]
  01f21	e8 00 00 00 00	 call	 ?IsEmpty@CString@@QBEHXZ ; CString::IsEmpty
  01f26	85 c0		 test	 eax, eax
  01f28	74 11		 je	 SHORT $L154329

; 847  : 				pFriend.SetName( sName );

  01f2a	8d 4d e8	 lea	 ecx, DWORD PTR _sName$[ebp]
  01f2d	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01f32	50		 push	 eax
  01f33	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01f36	e8 00 00 00 00	 call	 ?SetName@CPerson@@QAEXPBD@Z ; CPerson::SetName
$L154329:

; 848  : 
; 849  : 			if ( g_pPeopleMgrWnd )

  01f3b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  01f42	74 11		 je	 SHORT $L154330

; 850  : 				g_pPeopleMgrWnd->AddFriend( &pFriend );

  01f44	6a 01		 push	 1
  01f46	8b 45 f0	 mov	 eax, DWORD PTR _pFriend$[ebp]
  01f49	50		 push	 eax
  01f4a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01f50	e8 00 00 00 00	 call	 ?AddFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::AddFriend
$L154330:

; 851  : 		}

  01f55	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01f59	8d 4d e0	 lea	 ecx, DWORD PTR _sCurName$154328[ebp]
  01f5c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 852  : 
; 853  : 		break;

  01f61	eb 46		 jmp	 SHORT $L154320
$L154331:

; 856  : 			if ( g_pPeopleMgrWnd )

  01f63	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  01f6a	74 11		 je	 SHORT $L154332

; 857  : 				g_pPeopleMgrWnd->DelFriend( &pFriend );

  01f6c	6a 01		 push	 1
  01f6e	8b 4d f0	 mov	 ecx, DWORD PTR _pFriend$[ebp]
  01f71	51		 push	 ecx
  01f72	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01f78	e8 00 00 00 00	 call	 ?DelFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::DelFriend
$L154332:

; 858  : 
; 859  : 			// unlink the friend...
; 860  : 			m_friendMap.erase( sLowerName );

  01f7d	8d 55 e4	 lea	 edx, DWORD PTR _sLowerName$[ebp]
  01f80	52		 push	 edx
  01f81	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  01f84	83 c1 04	 add	 ecx, 4
  01f87	e8 00 00 00 00	 call	 ?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEIABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::erase

; 861  : 
; 862  : 			return;

  01f8c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01f90	8d 4d e4	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  01f93	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01f98	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01f9f	8d 4d e8	 lea	 ecx, DWORD PTR _sName$[ebp]
  01fa2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01fa7	eb 40		 jmp	 SHORT $L154313
$L154320:

; 867  : 
; 868  : 	// update the display of our friend...
; 869  : 	if ( g_pPeopleMgrWnd ) {

  01fa9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  01fb0	74 1c		 je	 SHORT $L154333

; 870  : 		g_pPeopleMgrWnd->UpdateFriend( &pFriend );

  01fb2	6a 01		 push	 1
  01fb4	8b 45 f0	 mov	 eax, DWORD PTR _pFriend$[ebp]
  01fb7	50		 push	 eax
  01fb8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01fbe	e8 00 00 00 00	 call	 ?UpdateFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::UpdateFriend

; 871  : 		g_pPeopleMgrWnd->Sort();

  01fc3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  01fc9	e8 00 00 00 00	 call	 ?Sort@CPeopleMgrWnd@@QAEXXZ ; CPeopleMgrWnd::Sort
$L154333:

; 873  : }

  01fce	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01fd2	8d 4d e4	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  01fd5	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01fda	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01fe1	8d 4d e8	 lea	 ecx, DWORD PTR _sName$[ebp]
  01fe4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L154313:
  01fe9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01fec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01ff3	8b e5		 mov	 esp, ebp
  01ff5	5d		 pop	 ebp
  01ff6	c2 04 00	 ret	 4
$L161209:
  01ff9	00 00 00 00	 DD	 $L154327
  01ffd	00 00 00 00	 DD	 $L154325
  02001	00 00 00 00	 DD	 $L154326
  02005	00 00 00 00	 DD	 $L154323
  02009	00 00 00 00	 DD	 $L154331
  0200d	00 00 00 00	 DD	 $L154324
  02011	00 00 00 00	 DD	 $L154320
$L161208:
  02015	00		 DB	 0
  02016	06		 DB	 6
  02017	06		 DB	 6
  02018	06		 DB	 6
  02019	06		 DB	 6
  0201a	06		 DB	 6
  0201b	06		 DB	 6
  0201c	06		 DB	 6
  0201d	06		 DB	 6
  0201e	06		 DB	 6
  0201f	06		 DB	 6
  02020	01		 DB	 1
  02021	06		 DB	 6
  02022	02		 DB	 2
  02023	06		 DB	 6
  02024	06		 DB	 6
  02025	06		 DB	 6
  02026	06		 DB	 6
  02027	06		 DB	 6
  02028	06		 DB	 6
  02029	06		 DB	 6
  0202a	06		 DB	 6
  0202b	06		 DB	 6
  0202c	06		 DB	 6
  0202d	06		 DB	 6
  0202e	06		 DB	 6
  0202f	06		 DB	 6
  02030	06		 DB	 6
  02031	06		 DB	 6
  02032	06		 DB	 6
  02033	06		 DB	 6
  02034	06		 DB	 6
  02035	06		 DB	 6
  02036	06		 DB	 6
  02037	06		 DB	 6
  02038	06		 DB	 6
  02039	06		 DB	 6
  0203a	06		 DB	 6
  0203b	06		 DB	 6
  0203c	06		 DB	 6
  0203d	06		 DB	 6
  0203e	06		 DB	 6
  0203f	06		 DB	 6
  02040	06		 DB	 6
  02041	06		 DB	 6
  02042	06		 DB	 6
  02043	06		 DB	 6
  02044	06		 DB	 6
  02045	06		 DB	 6
  02046	06		 DB	 6
  02047	06		 DB	 6
  02048	06		 DB	 6
  02049	06		 DB	 6
  0204a	06		 DB	 6
  0204b	06		 DB	 6
  0204c	06		 DB	 6
  0204d	06		 DB	 6
  0204e	06		 DB	 6
  0204f	06		 DB	 6
  02050	06		 DB	 6
  02051	06		 DB	 6
  02052	06		 DB	 6
  02053	06		 DB	 6
  02054	06		 DB	 6
  02055	06		 DB	 6
  02056	06		 DB	 6
  02057	03		 DB	 3
  02058	06		 DB	 6
  02059	06		 DB	 6
  0205a	06		 DB	 6
  0205b	06		 DB	 6
  0205c	06		 DB	 6
  0205d	06		 DB	 6
  0205e	06		 DB	 6
  0205f	06		 DB	 6
  02060	06		 DB	 6
  02061	06		 DB	 6
  02062	06		 DB	 6
  02063	06		 DB	 6
  02064	06		 DB	 6
  02065	06		 DB	 6
  02066	06		 DB	 6
  02067	04		 DB	 4
  02068	06		 DB	 6
  02069	06		 DB	 6
  0206a	05		 DB	 5
_TEXT	ENDS
text$x	SEGMENT
$L161202:
  001f3	8d 4d e8	 lea	 ecx, DWORD PTR _sName$[ebp]
  001f6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  001fb	c3		 ret	 0
$L161203:
  001fc	8d 4d e4	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  001ff	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00204	c3		 ret	 0
$L161204:
  00205	8d 4d e0	 lea	 ecx, DWORD PTR _sCurName$154328[ebp]
  00208	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0020d	c3		 ret	 0
$L161207:
  0020e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161206
  00213	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HandleMessage@CFriendMgr@@QAEXPBD@Z ENDP		; CFriendMgr::HandleMessage
PUBLIC	?find@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::find
xdata$x	SEGMENT
$T161217 DD	019930520H
	DD	01H
	DD	FLAT:$T161219
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161219 DD	0ffffffffH
	DD	FLAT:$L161215
xdata$x	ENDS
_TEXT	SEGMENT
$T161212 = -20
$T161213 = -24
$T161214 = -28
__$EHRec$ = -12
_sName$ = 8
_this$ = -32
_sLowerName$ = -16
?IsFriend@CFriendMgr@@QAEHAAVCString@@@Z PROC NEAR	; CFriendMgr::IsFriend

; 876  : BOOL CFriendMgr::IsFriend ( CString &sName ) {

  0206b	55		 push	 ebp
  0206c	8b ec		 mov	 ebp, esp
  0206e	6a ff		 push	 -1
  02070	68 00 00 00 00	 push	 $L161218
  02075	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0207b	50		 push	 eax
  0207c	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02083	83 ec 14	 sub	 esp, 20			; 00000014H
  02086	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 877  : 	CString sLowerName = sName;

  02089	8b 45 08	 mov	 eax, DWORD PTR _sName$[ebp]
  0208c	50		 push	 eax
  0208d	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  02090	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  02095	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 878  : 
; 879  : 	sLowerName.MakeLower();

  0209c	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  0209f	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 880  : 
; 881  : 	return m_friendMap.find( sLowerName ) != m_friendMap.end();

  020a4	8d 4d e4	 lea	 ecx, DWORD PTR $T161214[ebp]
  020a7	51		 push	 ecx
  020a8	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  020ab	83 c1 04	 add	 ecx, 4
  020ae	e8 00 00 00 00	 call	 ?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end
  020b3	50		 push	 eax
  020b4	8d 55 f0	 lea	 edx, DWORD PTR _sLowerName$[ebp]
  020b7	52		 push	 edx
  020b8	8d 45 e8	 lea	 eax, DWORD PTR $T161213[ebp]
  020bb	50		 push	 eax
  020bc	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  020bf	83 c1 04	 add	 ecx, 4
  020c2	e8 00 00 00 00	 call	 ?find@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::find
  020c7	8b c8		 mov	 ecx, eax
  020c9	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
  020ce	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  020d3	89 45 ec	 mov	 DWORD PTR $T161212[ebp], eax
  020d6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  020dd	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  020e0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  020e5	8b 45 ec	 mov	 eax, DWORD PTR $T161212[ebp]

; 882  : }

  020e8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  020eb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  020f2	8b e5		 mov	 esp, ebp
  020f4	5d		 pop	 ebp
  020f5	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L161215:
  00218	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  0021b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00220	c3		 ret	 0
$L161218:
  00221	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161217
  00226	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?IsFriend@CFriendMgr@@QAEHAAVCString@@@Z ENDP		; CFriendMgr::IsFriend
PUBLIC	?AddFriend@CFriendMgr@@QAEXAAVCString@@@Z	; CFriendMgr::AddFriend
xdata$x	SEGMENT
$T161223 DD	019930520H
	DD	01H
	DD	FLAT:$T161225
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161225 DD	0ffffffffH
	DD	FLAT:$L161221
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_sName$ = 8
_this$ = -20
_sLowerName$ = -16
?AddFriend@CFriendMgr@@QAEXAAVCString@@@Z PROC NEAR	; CFriendMgr::AddFriend

; 885  : void CFriendMgr::AddFriend ( CString &sName ) {

  020f8	55		 push	 ebp
  020f9	8b ec		 mov	 ebp, esp
  020fb	6a ff		 push	 -1
  020fd	68 00 00 00 00	 push	 $L161224
  02102	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02108	50		 push	 eax
  02109	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02110	83 ec 08	 sub	 esp, 8
  02113	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 886  : 	if ( IsFriend ( sName ) )

  02116	8b 45 08	 mov	 eax, DWORD PTR _sName$[ebp]
  02119	50		 push	 eax
  0211a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0211d	e8 00 00 00 00	 call	 ?IsFriend@CFriendMgr@@QAEHAAVCString@@@Z ; CFriendMgr::IsFriend
  02122	85 c0		 test	 eax, eax
  02124	74 02		 je	 SHORT $L154346

; 887  : 		return;

  02126	eb 6f		 jmp	 SHORT $L154345
$L154346:

; 888  : 
; 889  : 	CString sLowerName = sName;

  02128	8b 4d 08	 mov	 ecx, DWORD PTR _sName$[ebp]
  0212b	51		 push	 ecx
  0212c	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  0212f	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  02134	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 890  : 
; 891  : 	sLowerName.MakeLower();

  0213b	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  0213e	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 892  : 
; 893  : 	m_friendMap[sLowerName].SetName( sName );

  02143	8b 4d 08	 mov	 ecx, DWORD PTR _sName$[ebp]
  02146	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0214b	50		 push	 eax
  0214c	8d 55 f0	 lea	 edx, DWORD PTR _sLowerName$[ebp]
  0214f	52		 push	 edx
  02150	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  02153	83 c1 04	 add	 ecx, 4
  02156	e8 00 00 00 00	 call	 ??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::operator[]
  0215b	8b c8		 mov	 ecx, eax
  0215d	e8 00 00 00 00	 call	 ?SetName@CPerson@@QAEXPBD@Z ; CPerson::SetName

; 894  : 
; 895  : 	// if we have a friend window open, let it know that a new friend is here...
; 896  : 	if ( g_pPeopleMgrWnd ) {

  02162	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  02169	74 1d		 je	 SHORT $L154348

; 897  : 		g_pPeopleMgrWnd->AddFriend ( &m_friendMap[sLowerName] );

  0216b	6a 01		 push	 1
  0216d	8d 45 f0	 lea	 eax, DWORD PTR _sLowerName$[ebp]
  02170	50		 push	 eax
  02171	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  02174	83 c1 04	 add	 ecx, 4
  02177	e8 00 00 00 00	 call	 ??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::operator[]
  0217c	50		 push	 eax
  0217d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  02183	e8 00 00 00 00	 call	 ?AddFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::AddFriend
$L154348:

; 899  : }

  02188	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0218f	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  02192	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L154345:
  02197	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0219a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  021a1	8b e5		 mov	 esp, ebp
  021a3	5d		 pop	 ebp
  021a4	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L161221:
  0022b	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  0022e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00233	c3		 ret	 0
$L161224:
  00234	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161223
  00239	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddFriend@CFriendMgr@@QAEXAAVCString@@@Z ENDP		; CFriendMgr::AddFriend
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
PUBLIC	?DelFriend@CFriendMgr@@QAEXAAVCString@@@Z	; CFriendMgr::DelFriend
PUBLIC	??8iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator==
_DATA	SEGMENT
	ORG $+1
$SG154359 DB	'/delfriend %s', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T161233 DD	019930520H
	DD	01H
	DD	FLAT:$T161235
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161235 DD	0ffffffffH
	DD	FLAT:$L161231
xdata$x	ENDS
_TEXT	SEGMENT
$T161229 = -20
$T161230 = -24
__$EHRec$ = -12
_sName$ = 8
_this$ = -28
_sLowerName$ = -16
?DelFriend@CFriendMgr@@QAEXAAVCString@@@Z PROC NEAR	; CFriendMgr::DelFriend

; 902  : void CFriendMgr::DelFriend ( CString &sName ) {

  021a7	55		 push	 ebp
  021a8	8b ec		 mov	 ebp, esp
  021aa	6a ff		 push	 -1
  021ac	68 00 00 00 00	 push	 $L161234
  021b1	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  021b7	50		 push	 eax
  021b8	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  021bf	83 ec 10	 sub	 esp, 16			; 00000010H
  021c2	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 903  : 	CString sLowerName = sName;

  021c5	8b 45 08	 mov	 eax, DWORD PTR _sName$[ebp]
  021c8	50		 push	 eax
  021c9	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  021cc	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  021d1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 904  : 
; 905  : 	sLowerName.MakeLower();

  021d8	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  021db	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 906  : 
; 907  : 	if ( m_friendMap.find( sLowerName ) == m_friendMap.end() )

  021e0	8d 4d e8	 lea	 ecx, DWORD PTR $T161230[ebp]
  021e3	51		 push	 ecx
  021e4	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  021e7	83 c1 04	 add	 ecx, 4
  021ea	e8 00 00 00 00	 call	 ?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end
  021ef	50		 push	 eax
  021f0	8d 55 f0	 lea	 edx, DWORD PTR _sLowerName$[ebp]
  021f3	52		 push	 edx
  021f4	8d 45 ec	 lea	 eax, DWORD PTR $T161229[ebp]
  021f7	50		 push	 eax
  021f8	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  021fb	83 c1 04	 add	 ecx, 4
  021fe	e8 00 00 00 00	 call	 ?find@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::find
  02203	8b c8		 mov	 ecx, eax
  02205	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator==
  0220a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0220f	85 c0		 test	 eax, eax
  02211	74 11		 je	 SHORT $L154356

; 908  : 		return;

  02213	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0221a	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  0221d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02222	eb 5a		 jmp	 SHORT $L154352
$L154356:

; 909  : 
; 910  : 	// if we have a friend window open, let it know that this friend is gone..
; 911  : 	if ( g_pPeopleMgrWnd ) {

  02224	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  0222b	74 33		 je	 SHORT $L154357

; 912  : 		g_pPeopleMgrWnd->DelFriend( &m_friendMap[sLowerName] );

  0222d	6a 01		 push	 1
  0222f	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  02232	51		 push	 ecx
  02233	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  02236	83 c1 04	 add	 ecx, 4
  02239	e8 00 00 00 00	 call	 ??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::operator[]
  0223e	50		 push	 eax
  0223f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  02245	e8 00 00 00 00	 call	 ?DelFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::DelFriend

; 913  : 
; 914  : 		// tell the server that we're a goner...
; 915  : 		MsgSendChat ( "/delfriend %s", (LPCTSTR)sName );

  0224a	8b 4d 08	 mov	 ecx, DWORD PTR _sName$[ebp]
  0224d	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  02252	50		 push	 eax
  02253	68 00 00 00 00	 push	 OFFSET FLAT:$SG154359
  02258	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  0225d	83 c4 08	 add	 esp, 8
$L154357:

; 917  : 
; 918  : 	m_friendMap.erase( sLowerName );

  02260	8d 55 f0	 lea	 edx, DWORD PTR _sLowerName$[ebp]
  02263	52		 push	 edx
  02264	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  02267	83 c1 04	 add	 ecx, 4
  0226a	e8 00 00 00 00	 call	 ?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEIABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::erase

; 919  : }

  0226f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02276	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  02279	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L154352:
  0227e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02281	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02288	8b e5		 mov	 esp, ebp
  0228a	5d		 pop	 ebp
  0228b	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L161231:
  0023e	8d 4d f0	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  00241	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00246	c3		 ret	 0
$L161234:
  00247	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161233
  0024c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?DelFriend@CFriendMgr@@QAEXAAVCString@@@Z ENDP		; CFriendMgr::DelFriend
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
PUBLIC	??0CEnemyMgr@@QAE@XZ				; CEnemyMgr::CEnemyMgr
PUBLIC	??_7CEnemyMgr@@6B@				; CEnemyMgr::`vftable'
PUBLIC	??_GCEnemyMgr@@UAEPAXI@Z			; CEnemyMgr::`scalar deleting destructor'
PUBLIC	??_ECEnemyMgr@@UAEPAXI@Z			; CEnemyMgr::`vector deleting destructor'
;	COMDAT ??_7CEnemyMgr@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\friendmgr.cpp
CONST	SEGMENT
??_7CEnemyMgr@@6B@ DD FLAT:??_ECEnemyMgr@@UAEPAXI@Z	; CEnemyMgr::`vftable'
CONST	ENDS
_TEXT	SEGMENT
$T161240 = -4
$T161241 = -8
_this$ = -12
??0CEnemyMgr@@QAE@XZ PROC NEAR				; CEnemyMgr::CEnemyMgr

; 925  : CEnemyMgr::CEnemyMgr() {

  0228e	55		 push	 ebp
  0228f	8b ec		 mov	 ebp, esp
  02291	83 ec 0c	 sub	 esp, 12			; 0000000cH
  02294	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  02297	8d 45 fc	 lea	 eax, DWORD PTR $T161240[ebp]
  0229a	50		 push	 eax
  0229b	8d 4d f8	 lea	 ecx, DWORD PTR $T161241[ebp]
  0229e	51		 push	 ecx
  0229f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  022a2	83 c1 04	 add	 ecx, 4
  022a5	e8 00 00 00 00	 call	 ??0?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@ABU?$less@VCString@@@1@ABV?$allocator@VCPerson@@@1@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >
  022aa	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  022ad	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7CEnemyMgr@@6B@ ; CEnemyMgr::`vftable'

; 926  : 	assert ( g_pEnemyMgr == NULL );
; 927  : 	g_pEnemyMgr = this;

  022b3	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  022b6	a3 00 00 00 00	 mov	 DWORD PTR ?g_pEnemyMgr@@3PAVCEnemyMgr@@A, eax ; g_pEnemyMgr

; 928  : }

  022bb	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  022be	8b e5		 mov	 esp, ebp
  022c0	5d		 pop	 ebp
  022c1	c3		 ret	 0
??0CEnemyMgr@@QAE@XZ ENDP				; CEnemyMgr::CEnemyMgr
_TEXT	ENDS
PUBLIC	??1CEnemyMgr@@UAE@XZ				; CEnemyMgr::~CEnemyMgr
;	COMDAT ??_GCEnemyMgr@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCEnemyMgr@@UAEPAXI@Z PROC NEAR			; CEnemyMgr::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CEnemyMgr@@UAE@XZ	; CEnemyMgr::~CEnemyMgr
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L154369
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L154369:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCEnemyMgr@@UAEPAXI@Z ENDP				; CEnemyMgr::`scalar deleting destructor'
_TEXT	ENDS
xdata$x	SEGMENT
$T161247 DD	019930520H
	DD	01H
	DD	FLAT:$T161249
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161249 DD	0ffffffffH
	DD	FLAT:$L161245
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??1CEnemyMgr@@UAE@XZ PROC NEAR				; CEnemyMgr::~CEnemyMgr

; 930  : CEnemyMgr::~CEnemyMgr() {

  022c2	55		 push	 ebp
  022c3	8b ec		 mov	 ebp, esp
  022c5	6a ff		 push	 -1
  022c7	68 00 00 00 00	 push	 $L161248
  022cc	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  022d2	50		 push	 eax
  022d3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  022da	51		 push	 ecx
  022db	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  022de	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  022e1	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CEnemyMgr@@6B@ ; CEnemyMgr::`vftable'
  022e7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 931  : 	if ( g_pPeopleMgrWnd )

  022ee	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  022f5	74 16		 je	 SHORT $L154373

; 932  : 		g_pPeopleMgrWnd->CloseSelf( false );

  022f7	6a 00		 push	 0
  022f9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  022ff	8b 11		 mov	 edx, DWORD PTR [ecx]
  02301	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  02307	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L154373:

; 935  : 	g_pEnemyMgr = NULL;

  0230d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pEnemyMgr@@3PAVCEnemyMgr@@A, 0 ; g_pEnemyMgr

; 936  : }

  02317	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0231e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  02321	83 c1 04	 add	 ecx, 4
  02324	e8 00 00 00 00	 call	 ??1?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::~map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >
  02329	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0232c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02333	8b e5		 mov	 esp, ebp
  02335	5d		 pop	 ebp
  02336	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L161245:
  00251	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00254	83 c1 04	 add	 ecx, 4
  00257	e8 00 00 00 00	 call	 ??1?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::~map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >
  0025c	c3		 ret	 0
$L161248:
  0025d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161247
  00262	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CEnemyMgr@@UAE@XZ ENDP				; CEnemyMgr::~CEnemyMgr
PUBLIC	?ShowEnemies@CEnemyMgr@@QAEXXZ			; CEnemyMgr::ShowEnemies
xdata$x	SEGMENT
$T161260 DD	019930520H
	DD	01H
	DD	FLAT:$T161262
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161262 DD	0ffffffffH
	DD	FLAT:$L161258
xdata$x	ENDS
_TEXT	SEGMENT
$T161251 = -20
$T161252 = -24
$T161255 = -28
$T161256 = -32
$T161257 = -36
__$EHRec$ = -12
_this$ = -40
_enemyMapIter$ = -16
?ShowEnemies@CEnemyMgr@@QAEXXZ PROC NEAR		; CEnemyMgr::ShowEnemies

; 939  : void CEnemyMgr::ShowEnemies ( void ) {

  02337	55		 push	 ebp
  02338	8b ec		 mov	 ebp, esp
  0233a	6a ff		 push	 -1
  0233c	68 00 00 00 00	 push	 $L161261
  02341	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02347	50		 push	 eax
  02348	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0234f	83 ec 20	 sub	 esp, 32			; 00000020H
  02352	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 940  : 	// bring the window to the top if it's there...
; 941  : 	if ( g_pPeopleMgrWnd ) {

  02355	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  0235c	74 0d		 je	 SHORT $L154379

; 942  : 		g_pPeopleMgrWnd->BringWindowToTop();

  0235e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  02364	e8 00 00 00 00	 call	 ?BringWindowToTop@CWnd@@QAEXXZ ; CWnd::BringWindowToTop

; 943  : 	} else {

  02369	eb 62		 jmp	 SHORT $L154385
$L154379:

; 944  : 		new CPeopleMgrWnd;

  0236b	68 a8 00 00 00	 push	 168			; 000000a8H
  02370	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  02375	89 45 e8	 mov	 DWORD PTR $T161252[ebp], eax
  02378	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0237f	83 7d e8 00	 cmp	 DWORD PTR $T161252[ebp], 0
  02383	74 0d		 je	 SHORT $L161253
  02385	8b 4d e8	 mov	 ecx, DWORD PTR $T161252[ebp]
  02388	e8 00 00 00 00	 call	 ??0CPeopleMgrWnd@@QAE@XZ ; CPeopleMgrWnd::CPeopleMgrWnd
  0238d	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  02390	eb 07		 jmp	 SHORT $L161254
$L161253:
  02392	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L161254:
  02399	8b 45 d4	 mov	 eax, DWORD PTR -44+[ebp]
  0239c	89 45 ec	 mov	 DWORD PTR $T161251[ebp], eax
  0239f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 945  : 		g_pPeopleMgrWnd->Create();

  023a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  023ac	e8 00 00 00 00	 call	 ?Create@CPeopleMgrWnd@@QAEHXZ ; CPeopleMgrWnd::Create

; 946  : 	
; 947  :         if ( !g_pToonSettings->get_TabDisplay() ) {

  023b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  023b7	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  023bc	85 c0		 test	 eax, eax
  023be	75 0d		 jne	 SHORT $L154385

; 948  : 		    // show this dialog without activating it...
; 949  : 		    g_pPeopleMgrWnd->ShowWindow ( SW_SHOWNA );

  023c0	6a 08		 push	 8
  023c2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  023c8	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L154385:

; 952  : 
; 953  : 	g_pPeopleMgrWnd->ClearFoes();

  023cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  023d3	e8 00 00 00 00	 call	 ?ClearFoes@CPeopleMgrWnd@@QAEXXZ ; CPeopleMgrWnd::ClearFoes

; 954  : 
; 955  : 	// step through and add each enemy to the window...
; 956  : 	for (EnemyMapIter enemyMapIter = m_enemyMap.begin();enemyMapIter != m_enemyMap.end();enemyMapIter++ ) {

  023d8	8d 4d e4	 lea	 ecx, DWORD PTR $T161255[ebp]
  023db	51		 push	 ecx
  023dc	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  023df	83 c1 04	 add	 ecx, 4
  023e2	e8 00 00 00 00	 call	 ?begin@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::begin
  023e7	8b 10		 mov	 edx, DWORD PTR [eax]
  023e9	89 55 f0	 mov	 DWORD PTR _enemyMapIter$[ebp], edx
  023ec	eb 0e		 jmp	 SHORT $L154390
$L154391:
  023ee	6a 00		 push	 0
  023f0	8d 45 e0	 lea	 eax, DWORD PTR $T161256[ebp]
  023f3	50		 push	 eax
  023f4	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  023f7	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++
$L154390:
  023fc	8d 4d dc	 lea	 ecx, DWORD PTR $T161257[ebp]
  023ff	51		 push	 ecx
  02400	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  02403	83 c1 04	 add	 ecx, 4
  02406	e8 00 00 00 00	 call	 ?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end
  0240b	50		 push	 eax
  0240c	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  0240f	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
  02414	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02419	85 c0		 test	 eax, eax
  0241b	74 1b		 je	 SHORT $L154392

; 957  : 		g_pPeopleMgrWnd->AddFoe( &(*enemyMapIter).second, false);

  0241d	6a 00		 push	 0
  0241f	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  02422	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator*
  02427	83 c0 04	 add	 eax, 4
  0242a	50		 push	 eax
  0242b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  02431	e8 00 00 00 00	 call	 ?AddFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::AddFoe

; 958  : 	}

  02436	eb b6		 jmp	 SHORT $L154391
$L154392:

; 959  : }

  02438	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0243b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02442	8b e5		 mov	 esp, ebp
  02444	5d		 pop	 ebp
  02445	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L161258:
  00267	8b 45 e8	 mov	 eax, DWORD PTR $T161252[ebp]
  0026a	50		 push	 eax
  0026b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00270	c3		 ret	 0
$L161261:
  00271	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161260
  00276	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ShowEnemies@CEnemyMgr@@QAEXXZ ENDP			; CEnemyMgr::ShowEnemies
PUBLIC	?HideEnemies@CEnemyMgr@@QAEXXZ			; CEnemyMgr::HideEnemies
_TEXT	SEGMENT
_this$ = -4
?HideEnemies@CEnemyMgr@@QAEXXZ PROC NEAR		; CEnemyMgr::HideEnemies

; 961  : void CEnemyMgr::HideEnemies ( void ) {

  02446	55		 push	 ebp
  02447	8b ec		 mov	 ebp, esp
  02449	51		 push	 ecx
  0244a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 962  :     if (g_pPeopleMgrWnd)     {

  0244d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  02454	74 15		 je	 SHORT $L154397

; 963  :         g_pPeopleMgrWnd->CloseSelf( false );

  02456	6a 00		 push	 0
  02458	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  0245d	8b 10		 mov	 edx, DWORD PTR [eax]
  0245f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  02465	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L154397:

; 965  : }

  0246b	8b e5		 mov	 esp, ebp
  0246d	5d		 pop	 ebp
  0246e	c3		 ret	 0
?HideEnemies@CEnemyMgr@@QAEXXZ ENDP			; CEnemyMgr::HideEnemies
_TEXT	ENDS
PUBLIC	?HandleMessage@CEnemyMgr@@QAEXPBD@Z		; CEnemyMgr::HandleMessage
xdata$x	SEGMENT
$T161269 DD	019930520H
	DD	03H
	DD	FLAT:$T161271
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161271 DD	0ffffffffH
	DD	FLAT:$L161265
	DD	00H
	DD	FLAT:$L161266
	DD	01H
	DD	FLAT:$L161267
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_pMessage$ = 8
_this$ = -36
_chCmd$ = -16
_sName$ = -20
_sLowerName$ = -28
_pEnemy$ = -24
_sCurName$154413 = -32
?HandleMessage@CEnemyMgr@@QAEXPBD@Z PROC NEAR		; CEnemyMgr::HandleMessage

; 968  : void CEnemyMgr::HandleMessage ( LPCTSTR pMessage ) {

  0246f	55		 push	 ebp
  02470	8b ec		 mov	 ebp, esp
  02472	6a ff		 push	 -1
  02474	68 00 00 00 00	 push	 $L161270
  02479	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0247f	50		 push	 eax
  02480	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02487	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0248a	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx

; 969  : 	if ( NULL == pMessage )

  0248d	83 7d 08 00	 cmp	 DWORD PTR _pMessage$[ebp], 0
  02491	75 05		 jne	 SHORT $L154402

; 970  : 		return;

  02493	e9 7b 01 00 00	 jmp	 $L154401
$L154402:

; 971  : 
; 972  : 	// skip the '-f' part...
; 973  : 	pMessage += 2;

  02498	8b 45 08	 mov	 eax, DWORD PTR _pMessage$[ebp]
  0249b	83 c0 02	 add	 eax, 2
  0249e	89 45 08	 mov	 DWORD PTR _pMessage$[ebp], eax

; 974  : 
; 975  : 	// get the command character....html
; 976  : 	char chCmd = *pMessage++;

  024a1	8b 4d 08	 mov	 ecx, DWORD PTR _pMessage$[ebp]
  024a4	8a 11		 mov	 dl, BYTE PTR [ecx]
  024a6	88 55 f0	 mov	 BYTE PTR _chCmd$[ebp], dl
  024a9	8b 45 08	 mov	 eax, DWORD PTR _pMessage$[ebp]
  024ac	83 c0 01	 add	 eax, 1
  024af	89 45 08	 mov	 DWORD PTR _pMessage$[ebp], eax

; 977  : 
; 978  : 	// name for comparison...
; 979  : 	CString sName = pMessage;

  024b2	8b 4d 08	 mov	 ecx, DWORD PTR _pMessage$[ebp]
  024b5	51		 push	 ecx
  024b6	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  024b9	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  024be	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 980  : 
; 981  : 	CString sLowerName = sName;

  024c5	8d 55 ec	 lea	 edx, DWORD PTR _sName$[ebp]
  024c8	52		 push	 edx
  024c9	8d 4d e4	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  024cc	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  024d1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 982  : 	sLowerName.MakeLower();

  024d5	8d 4d e4	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  024d8	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 983  : 
; 984  : 	// find the friend that represents the name
; 985  : 	CPerson& pEnemy = m_enemyMap[sLowerName];

  024dd	8d 45 e4	 lea	 eax, DWORD PTR _sLowerName$[ebp]
  024e0	50		 push	 eax
  024e1	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  024e4	83 c1 04	 add	 ecx, 4
  024e7	e8 00 00 00 00	 call	 ??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::operator[]
  024ec	89 45 e8	 mov	 DWORD PTR _pEnemy$[ebp], eax

; 986  : 
; 987  : 	// handle the command for this enemy...
; 988  : 	switch ( chCmd ) {

  024ef	8a 4d f0	 mov	 cl, BYTE PTR _chCmd$[ebp]
  024f2	88 4d d8	 mov	 BYTE PTR -40+[ebp], cl
  024f5	80 7d d8 20	 cmp	 BYTE PTR -40+[ebp], 32	; 00000020H
  024f9	74 35		 je	 SHORT $L154412
  024fb	80 7d d8 70	 cmp	 BYTE PTR -40+[ebp], 112	; 00000070H
  024ff	74 0f		 je	 SHORT $L154411
  02501	80 7d d8 72	 cmp	 BYTE PTR -40+[ebp], 114	; 00000072H
  02505	0f 84 82 00 00
	00		 je	 $L154416
  0250b	e9 c3 00 00 00	 jmp	 $L154408
$L154411:

; 989  : 		case 'p':
; 990  : 			pEnemy.SetPermenant( true );

  02510	6a 01		 push	 1
  02512	8b 4d e8	 mov	 ecx, DWORD PTR _pEnemy$[ebp]
  02515	e8 00 00 00 00	 call	 ?SetPermenant@CPerson@@QAEHH@Z ; CPerson::SetPermenant

; 991  : 			pEnemy.SetName( sName );

  0251a	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  0251d	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  02522	50		 push	 eax
  02523	8b 4d e8	 mov	 ecx, DWORD PTR _pEnemy$[ebp]
  02526	e8 00 00 00 00	 call	 ?SetName@CPerson@@QAEXPBD@Z ; CPerson::SetName

; 992  : 
; 993  : 			break;

  0252b	e9 a3 00 00 00	 jmp	 $L154408
$L154412:

; 996  : 			CString sCurName;

  02530	8d 4d e0	 lea	 ecx, DWORD PTR _sCurName$154413[ebp]
  02533	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  02538	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 997  : 
; 998  : 			pEnemy.GetName( sCurName );

  0253c	8d 55 e0	 lea	 edx, DWORD PTR _sCurName$154413[ebp]
  0253f	52		 push	 edx
  02540	8b 4d e8	 mov	 ecx, DWORD PTR _pEnemy$[ebp]
  02543	e8 00 00 00 00	 call	 ?GetName@CPerson@@QAEXAAVCString@@@Z ; CPerson::GetName

; 999  : 
; 1000 : 			if ( sCurName.IsEmpty() )

  02548	8d 4d e0	 lea	 ecx, DWORD PTR _sCurName$154413[ebp]
  0254b	e8 00 00 00 00	 call	 ?IsEmpty@CString@@QBEHXZ ; CString::IsEmpty
  02550	85 c0		 test	 eax, eax
  02552	74 11		 je	 SHORT $L154414

; 1001 : 				pEnemy.SetName( sName );

  02554	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  02557	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0255c	50		 push	 eax
  0255d	8b 4d e8	 mov	 ecx, DWORD PTR _pEnemy$[ebp]
  02560	e8 00 00 00 00	 call	 ?SetName@CPerson@@QAEXPBD@Z ; CPerson::SetName
$L154414:

; 1002 : 
; 1003 : 			if ( g_pPeopleMgrWnd )

  02565	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  0256c	74 11		 je	 SHORT $L154415

; 1004 : 				g_pPeopleMgrWnd->AddFoe( &pEnemy );

  0256e	6a 01		 push	 1
  02570	8b 45 e8	 mov	 eax, DWORD PTR _pEnemy$[ebp]
  02573	50		 push	 eax
  02574	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  0257a	e8 00 00 00 00	 call	 ?AddFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::AddFoe
$L154415:

; 1005 : 
; 1006 : 			}

  0257f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02583	8d 4d e0	 lea	 ecx, DWORD PTR _sCurName$154413[ebp]
  02586	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 1007 : 
; 1008 : 			break;

  0258b	eb 46		 jmp	 SHORT $L154408
$L154416:

; 1009 : 
; 1010 : 		case 'r':
; 1011 : 			if ( g_pPeopleMgrWnd )

  0258d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  02594	74 11		 je	 SHORT $L154417

; 1012 : 				g_pPeopleMgrWnd->DelFoe( &pEnemy );

  02596	6a 01		 push	 1
  02598	8b 4d e8	 mov	 ecx, DWORD PTR _pEnemy$[ebp]
  0259b	51		 push	 ecx
  0259c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  025a2	e8 00 00 00 00	 call	 ?DelFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::DelFoe
$L154417:

; 1013 : 
; 1014 : 			// unlink the foe...
; 1015 : 			m_enemyMap.erase( sLowerName );

  025a7	8d 55 e4	 lea	 edx, DWORD PTR _sLowerName$[ebp]
  025aa	52		 push	 edx
  025ab	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  025ae	83 c1 04	 add	 ecx, 4
  025b1	e8 00 00 00 00	 call	 ?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEIABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::erase

; 1016 : 
; 1017 : 			return;

  025b6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  025ba	8d 4d e4	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  025bd	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  025c2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  025c9	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  025cc	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  025d1	eb 40		 jmp	 SHORT $L154401
$L154408:

; 1019 : 
; 1020 : 	// update the display of our enemy...
; 1021 : 	if ( g_pPeopleMgrWnd ) {

  025d3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  025da	74 1c		 je	 SHORT $L154418

; 1022 : 		g_pPeopleMgrWnd->UpdateFoe( &pEnemy );

  025dc	6a 01		 push	 1
  025de	8b 45 e8	 mov	 eax, DWORD PTR _pEnemy$[ebp]
  025e1	50		 push	 eax
  025e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  025e8	e8 00 00 00 00	 call	 ?UpdateFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::UpdateFoe

; 1023 : 		g_pPeopleMgrWnd->Sort();

  025ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  025f3	e8 00 00 00 00	 call	 ?Sort@CPeopleMgrWnd@@QAEXXZ ; CPeopleMgrWnd::Sort
$L154418:

; 1025 : }

  025f8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  025fc	8d 4d e4	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  025ff	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02604	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0260b	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  0260e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L154401:
  02613	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02616	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0261d	8b e5		 mov	 esp, ebp
  0261f	5d		 pop	 ebp
  02620	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L161265:
  0027b	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  0027e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00283	c3		 ret	 0
$L161266:
  00284	8d 4d e4	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  00287	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0028c	c3		 ret	 0
$L161267:
  0028d	8d 4d e0	 lea	 ecx, DWORD PTR _sCurName$154413[ebp]
  00290	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00295	c3		 ret	 0
$L161270:
  00296	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161269
  0029b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HandleMessage@CEnemyMgr@@QAEXPBD@Z ENDP		; CEnemyMgr::HandleMessage
PUBLIC	??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator
xdata$x	SEGMENT
$T161279 DD	019930520H
	DD	01H
	DD	FLAT:$T161281
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161281 DD	0ffffffffH
	DD	FLAT:$L161277
xdata$x	ENDS
_TEXT	SEGMENT
$T161273 = -24
$T161274 = -28
$T161275 = -32
$T161276 = -36
__$EHRec$ = -12
_sName$ = 8
_bPerm$ = 12
_this$ = -40
_sLowerName$ = -20
_enemyMapIter$ = -16
?IsEnemy@CEnemyMgr@@QAEHAAVCString@@PA_N@Z PROC NEAR	; CEnemyMgr::IsEnemy

; 1028 : BOOL CEnemyMgr::IsEnemy ( CString &sName, bool* bPerm ) {

  02623	55		 push	 ebp
  02624	8b ec		 mov	 ebp, esp
  02626	6a ff		 push	 -1
  02628	68 00 00 00 00	 push	 $L161280
  0262d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02633	50		 push	 eax
  02634	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0263b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0263e	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 1029 : 	CString sLowerName = sName;

  02641	8b 45 08	 mov	 eax, DWORD PTR _sName$[ebp]
  02644	50		 push	 eax
  02645	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  02648	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  0264d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1030 : 	sLowerName.MakeLower();

  02654	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  02657	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 1031 : 
; 1032 : 	EnemyMapIter enemyMapIter;

  0265c	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  0265f	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator

; 1033 : 
; 1034 : 	if ( ( enemyMapIter = m_enemyMap.find( sLowerName ) ) != m_enemyMap.end() ) {

  02664	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  02667	51		 push	 ecx
  02668	8d 55 e8	 lea	 edx, DWORD PTR $T161273[ebp]
  0266b	52		 push	 edx
  0266c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0266f	83 c1 04	 add	 ecx, 4
  02672	e8 00 00 00 00	 call	 ?find@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::find
  02677	8b 00		 mov	 eax, DWORD PTR [eax]
  02679	89 45 f0	 mov	 DWORD PTR _enemyMapIter$[ebp], eax
  0267c	8d 4d e4	 lea	 ecx, DWORD PTR $T161274[ebp]
  0267f	51		 push	 ecx
  02680	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  02683	83 c1 04	 add	 ecx, 4
  02686	e8 00 00 00 00	 call	 ?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end
  0268b	50		 push	 eax
  0268c	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  0268f	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
  02694	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02699	85 c0		 test	 eax, eax
  0269b	74 3e		 je	 SHORT $L154428

; 1035 : 		if ( bPerm )

  0269d	83 7d 0c 00	 cmp	 DWORD PTR _bPerm$[ebp], 0
  026a1	74 1d		 je	 SHORT $L154429

; 1036 : 			*bPerm = (*enemyMapIter).second.GetPermenant();

  026a3	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  026a6	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator*
  026ab	8b c8		 mov	 ecx, eax
  026ad	83 c1 04	 add	 ecx, 4
  026b0	e8 00 00 00 00	 call	 ?GetPermenant@CPerson@@QAEHXZ ; CPerson::GetPermenant
  026b5	f7 d8		 neg	 eax
  026b7	1b c0		 sbb	 eax, eax
  026b9	f7 d8		 neg	 eax
  026bb	8b 55 0c	 mov	 edx, DWORD PTR _bPerm$[ebp]
  026be	88 02		 mov	 BYTE PTR [edx], al
$L154429:

; 1037 : 
; 1038 : 		return TRUE;

  026c0	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR $T161275[ebp], 1
  026c7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  026ce	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  026d1	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  026d6	8b 45 e0	 mov	 eax, DWORD PTR $T161275[ebp]
  026d9	eb 19		 jmp	 SHORT $L154423
$L154428:

; 1040 : 
; 1041 : 	return FALSE;

  026db	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T161276[ebp], 0
  026e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  026e9	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  026ec	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  026f1	8b 45 dc	 mov	 eax, DWORD PTR $T161276[ebp]
$L154423:

; 1042 : }

  026f4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  026f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  026fe	8b e5		 mov	 esp, ebp
  02700	5d		 pop	 ebp
  02701	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L161277:
  002a0	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  002a3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002a8	c3		 ret	 0
$L161280:
  002a9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161279
  002ae	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?IsEnemy@CEnemyMgr@@QAEHAAVCString@@PA_N@Z ENDP		; CEnemyMgr::IsEnemy
xdata$x	SEGMENT
$T161289 DD	019930520H
	DD	01H
	DD	FLAT:$T161291
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161291 DD	0ffffffffH
	DD	FLAT:$L161287
xdata$x	ENDS
_TEXT	SEGMENT
$T161283 = -24
$T161284 = -28
$T161285 = -32
$T161286 = -36
__$EHRec$ = -12
_pName$ = 8
_bPerm$ = 12
_this$ = -40
_sName$ = -20
_enemyMapIter$ = -16
?IsEnemy@CEnemyMgr@@QAEHPADPA_N@Z PROC NEAR		; CEnemyMgr::IsEnemy

; 1045 : BOOL CEnemyMgr::IsEnemy( char* pName, bool* bPerm ) {

  02704	55		 push	 ebp
  02705	8b ec		 mov	 ebp, esp
  02707	6a ff		 push	 -1
  02709	68 00 00 00 00	 push	 $L161290
  0270e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02714	50		 push	 eax
  02715	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0271c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0271f	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 1046 : 	CString sName = pName;

  02722	8b 45 08	 mov	 eax, DWORD PTR _pName$[ebp]
  02725	50		 push	 eax
  02726	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  02729	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  0272e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1047 : 	sName.MakeLower();

  02735	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  02738	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 1048 : 
; 1049 : 	EnemyMapIter enemyMapIter;

  0273d	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  02740	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator

; 1050 : 
; 1051 : 	if ( ( enemyMapIter = m_enemyMap.find( sName ) ) != m_enemyMap.end() ) {

  02745	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  02748	51		 push	 ecx
  02749	8d 55 e8	 lea	 edx, DWORD PTR $T161283[ebp]
  0274c	52		 push	 edx
  0274d	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  02750	83 c1 04	 add	 ecx, 4
  02753	e8 00 00 00 00	 call	 ?find@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::find
  02758	8b 00		 mov	 eax, DWORD PTR [eax]
  0275a	89 45 f0	 mov	 DWORD PTR _enemyMapIter$[ebp], eax
  0275d	8d 4d e4	 lea	 ecx, DWORD PTR $T161284[ebp]
  02760	51		 push	 ecx
  02761	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  02764	83 c1 04	 add	 ecx, 4
  02767	e8 00 00 00 00	 call	 ?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end
  0276c	50		 push	 eax
  0276d	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  02770	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
  02775	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0277a	85 c0		 test	 eax, eax
  0277c	74 3e		 je	 SHORT $L154441

; 1052 : 		if ( bPerm )

  0277e	83 7d 0c 00	 cmp	 DWORD PTR _bPerm$[ebp], 0
  02782	74 1d		 je	 SHORT $L154442

; 1053 : 			*bPerm = (*enemyMapIter).second.GetPermenant();

  02784	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  02787	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator*
  0278c	8b c8		 mov	 ecx, eax
  0278e	83 c1 04	 add	 ecx, 4
  02791	e8 00 00 00 00	 call	 ?GetPermenant@CPerson@@QAEHXZ ; CPerson::GetPermenant
  02796	f7 d8		 neg	 eax
  02798	1b c0		 sbb	 eax, eax
  0279a	f7 d8		 neg	 eax
  0279c	8b 55 0c	 mov	 edx, DWORD PTR _bPerm$[ebp]
  0279f	88 02		 mov	 BYTE PTR [edx], al
$L154442:

; 1054 : 
; 1055 : 		return TRUE;

  027a1	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR $T161285[ebp], 1
  027a8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  027af	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  027b2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  027b7	8b 45 e0	 mov	 eax, DWORD PTR $T161285[ebp]
  027ba	eb 19		 jmp	 SHORT $L154436
$L154441:

; 1057 : 
; 1058 : 	return FALSE;

  027bc	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T161286[ebp], 0
  027c3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  027ca	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  027cd	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  027d2	8b 45 dc	 mov	 eax, DWORD PTR $T161286[ebp]
$L154436:

; 1059 : }

  027d5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  027d8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  027df	8b e5		 mov	 esp, ebp
  027e1	5d		 pop	 ebp
  027e2	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L161287:
  002b3	8d 4d ec	 lea	 ecx, DWORD PTR _sName$[ebp]
  002b6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002bb	c3		 ret	 0
$L161290:
  002bc	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161289
  002c1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?IsEnemy@CEnemyMgr@@QAEHPADPA_N@Z ENDP			; CEnemyMgr::IsEnemy
PUBLIC	?AddEnemy@CEnemyMgr@@QAEXAAVCString@@_N@Z	; CEnemyMgr::AddEnemy
xdata$x	SEGMENT
$T161295 DD	019930520H
	DD	01H
	DD	FLAT:$T161297
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161297 DD	0ffffffffH
	DD	FLAT:$L161293
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_sName$ = 8
_bPerm$ = 12
_this$ = -24
_sLowerName$ = -20
_pEnemy$ = -16
?AddEnemy@CEnemyMgr@@QAEXAAVCString@@_N@Z PROC NEAR	; CEnemyMgr::AddEnemy

; 1062 : void CEnemyMgr::AddEnemy ( CString &sName, bool bPerm ) {

  027e5	55		 push	 ebp
  027e6	8b ec		 mov	 ebp, esp
  027e8	6a ff		 push	 -1
  027ea	68 00 00 00 00	 push	 $L161296
  027ef	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  027f5	50		 push	 eax
  027f6	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  027fd	83 ec 0c	 sub	 esp, 12			; 0000000cH
  02800	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 1063 : 	if ( IsEnemy( sName ) )

  02803	6a 00		 push	 0
  02805	8b 45 08	 mov	 eax, DWORD PTR _sName$[ebp]
  02808	50		 push	 eax
  02809	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0280c	e8 00 00 00 00	 call	 ?IsEnemy@CEnemyMgr@@QAEHAAVCString@@PA_N@Z ; CEnemyMgr::IsEnemy
  02811	85 c0		 test	 eax, eax
  02813	74 02		 je	 SHORT $L154450

; 1064 : 		return;

  02815	eb 78		 jmp	 SHORT $L154449
$L154450:

; 1065 : 
; 1066 : 	CString sLowerName = sName;

  02817	8b 4d 08	 mov	 ecx, DWORD PTR _sName$[ebp]
  0281a	51		 push	 ecx
  0281b	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  0281e	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  02823	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1067 : 	sLowerName.MakeLower();

  0282a	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  0282d	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 1068 : 
; 1069 : 	CPerson& pEnemy = m_enemyMap[sLowerName];

  02832	8d 55 ec	 lea	 edx, DWORD PTR _sLowerName$[ebp]
  02835	52		 push	 edx
  02836	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  02839	83 c1 04	 add	 ecx, 4
  0283c	e8 00 00 00 00	 call	 ??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::operator[]
  02841	89 45 f0	 mov	 DWORD PTR _pEnemy$[ebp], eax

; 1070 : 	
; 1071 : 	pEnemy.SetName( sName );

  02844	8b 4d 08	 mov	 ecx, DWORD PTR _sName$[ebp]
  02847	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0284c	50		 push	 eax
  0284d	8b 4d f0	 mov	 ecx, DWORD PTR _pEnemy$[ebp]
  02850	e8 00 00 00 00	 call	 ?SetName@CPerson@@QAEXPBD@Z ; CPerson::SetName

; 1072 : 	pEnemy.SetPermenant( bPerm );

  02855	8b 45 0c	 mov	 eax, DWORD PTR _bPerm$[ebp]
  02858	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0285d	50		 push	 eax
  0285e	8b 4d f0	 mov	 ecx, DWORD PTR _pEnemy$[ebp]
  02861	e8 00 00 00 00	 call	 ?SetPermenant@CPerson@@QAEHH@Z ; CPerson::SetPermenant

; 1073 : 
; 1074 : 	// if we have a enemy window open, let it know that a new enemy is here...
; 1075 : 	if ( g_pPeopleMgrWnd ) {

  02866	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  0286d	74 11		 je	 SHORT $L154453

; 1076 : 		g_pPeopleMgrWnd->AddFoe( &pEnemy );

  0286f	6a 01		 push	 1
  02871	8b 4d f0	 mov	 ecx, DWORD PTR _pEnemy$[ebp]
  02874	51		 push	 ecx
  02875	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  0287b	e8 00 00 00 00	 call	 ?AddFoe@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::AddFoe
$L154453:

; 1078 : }

  02880	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02887	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  0288a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L154449:
  0288f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02892	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02899	8b e5		 mov	 esp, ebp
  0289b	5d		 pop	 ebp
  0289c	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L161293:
  002c6	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  002c9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002ce	c3		 ret	 0
$L161296:
  002cf	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161295
  002d4	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddEnemy@CEnemyMgr@@QAEXAAVCString@@_N@Z ENDP		; CEnemyMgr::AddEnemy
PUBLIC	?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@V342@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::erase
PUBLIC	?DelEnemy@CEnemyMgr@@QAEXAAVCString@@@Z		; CEnemyMgr::DelEnemy
_DATA	SEGMENT
	ORG $+2
$SG154465 DB	'/listen %s', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T161304 DD	019930520H
	DD	01H
	DD	FLAT:$T161306
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161306 DD	0ffffffffH
	DD	FLAT:$L161302
xdata$x	ENDS
_TEXT	SEGMENT
$T161299 = -24
$T161300 = -28
$T161301 = -32
__$EHRec$ = -12
_sName$ = 8
_this$ = -36
_sLowerName$ = -20
_enemyMapIter$ = -16
?DelEnemy@CEnemyMgr@@QAEXAAVCString@@@Z PROC NEAR	; CEnemyMgr::DelEnemy

; 1081 : void CEnemyMgr::DelEnemy ( CString &sName ) {

  0289f	55		 push	 ebp
  028a0	8b ec		 mov	 ebp, esp
  028a2	6a ff		 push	 -1
  028a4	68 00 00 00 00	 push	 $L161305
  028a9	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  028af	50		 push	 eax
  028b0	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  028b7	83 ec 18	 sub	 esp, 24			; 00000018H
  028ba	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx

; 1082 : 	CString sLowerName = sName;

  028bd	8b 45 08	 mov	 eax, DWORD PTR _sName$[ebp]
  028c0	50		 push	 eax
  028c1	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  028c4	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  028c9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1083 : 	sLowerName.MakeLower();

  028d0	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  028d3	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 1084 : 
; 1085 : 	EnemyMapIter enemyMapIter;

  028d8	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  028db	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator

; 1086 : 
; 1087 : 	if ( ( enemyMapIter = m_enemyMap.find( sLowerName ) ) == m_enemyMap.end() )

  028e0	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  028e3	51		 push	 ecx
  028e4	8d 55 e8	 lea	 edx, DWORD PTR $T161299[ebp]
  028e7	52		 push	 edx
  028e8	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  028eb	83 c1 04	 add	 ecx, 4
  028ee	e8 00 00 00 00	 call	 ?find@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@ABVCString@@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::find
  028f3	8b 00		 mov	 eax, DWORD PTR [eax]
  028f5	89 45 f0	 mov	 DWORD PTR _enemyMapIter$[ebp], eax
  028f8	8d 4d e4	 lea	 ecx, DWORD PTR $T161300[ebp]
  028fb	51		 push	 ecx
  028fc	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  028ff	83 c1 04	 add	 ecx, 4
  02902	e8 00 00 00 00	 call	 ?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end
  02907	50		 push	 eax
  02908	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  0290b	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator==
  02910	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02915	85 c0		 test	 eax, eax
  02917	74 11		 je	 SHORT $L154462

; 1088 : 		return;

  02919	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02920	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  02923	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02928	eb 5a		 jmp	 SHORT $L154457
$L154462:

; 1089 : 
; 1090 : 	// if we have a enemy window open, let it know that this enemy is gone..
; 1091 : 	if ( g_pPeopleMgrWnd ) {

  0292a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A, 0 ; g_pPeopleMgrWnd
  02931	74 2f		 je	 SHORT $L154463

; 1092 : 		g_pPeopleMgrWnd->DelFriend( &(*enemyMapIter).second );

  02933	6a 01		 push	 1
  02935	8d 4d f0	 lea	 ecx, DWORD PTR _enemyMapIter$[ebp]
  02938	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator*
  0293d	83 c0 04	 add	 eax, 4
  02940	50		 push	 eax
  02941	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPeopleMgrWnd@@3PAVCPeopleMgrWnd@@A ; g_pPeopleMgrWnd
  02947	e8 00 00 00 00	 call	 ?DelFriend@CPeopleMgrWnd@@QAEXPAVCPerson@@H@Z ; CPeopleMgrWnd::DelFriend

; 1093 : 
; 1094 : 		// tell the server that we're a goner...
; 1095 : 		MsgSendChat ( "/listen %s", (LPCTSTR)sName );

  0294c	8b 4d 08	 mov	 ecx, DWORD PTR _sName$[ebp]
  0294f	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  02954	50		 push	 eax
  02955	68 00 00 00 00	 push	 OFFSET FLAT:$SG154465
  0295a	e8 00 00 00 00	 call	 ?MsgSendChat@@YAXPADZZ	; MsgSendChat
  0295f	83 c4 08	 add	 esp, 8
$L154463:

; 1097 : 
; 1098 : 	// unlink the friend...
; 1099 : 	m_enemyMap.erase( enemyMapIter );

  02962	8b 55 f0	 mov	 edx, DWORD PTR _enemyMapIter$[ebp]
  02965	52		 push	 edx
  02966	8d 45 e0	 lea	 eax, DWORD PTR $T161301[ebp]
  02969	50		 push	 eax
  0296a	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0296d	83 c1 04	 add	 ecx, 4
  02970	e8 00 00 00 00	 call	 ?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@V342@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::erase

; 1100 : }

  02975	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0297c	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  0297f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L154457:
  02984	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02987	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0298e	8b e5		 mov	 esp, ebp
  02990	5d		 pop	 ebp
  02991	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L161302:
  002d9	8d 4d ec	 lea	 ecx, DWORD PTR _sLowerName$[ebp]
  002dc	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002e1	c3		 ret	 0
$L161305:
  002e2	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161304
  002e7	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?DelEnemy@CEnemyMgr@@QAEXAAVCString@@@Z ENDP		; CEnemyMgr::DelEnemy
PUBLIC	?GetData@CString@@IBEPAUCStringData@@XZ		; CString::GetData
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsEmpty@CString@@QBEHXZ PROC NEAR			; CString::IsEmpty, COMDAT

; 149  : 	{ return GetData()->nDataLength == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetData@CString@@IBEPAUCStringData@@XZ ; CString::GetData
  0000f	33 c9		 xor	 ecx, ecx
  00011	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00015	0f 94 c1	 sete	 cl
  00018	8b c1		 mov	 eax, ecx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?IsEmpty@CString@@QBEHXZ ENDP				; CString::IsEmpty
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetData@CString@@IBEPAUCStringData@@XZ PROC NEAR	; CString::GetData, COMDAT

; 122  : 	{ ASSERT(m_pchData != NULL); return ((CStringData*)m_pchData)-1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?GetData@CString@@IBEPAUCStringData@@XZ ENDP		; CString::GetData
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
PUBLIC	__tcsicmp
;	COMDAT ?CompareNoCase@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?CompareNoCase@CString@@QBEHPBD@Z PROC NEAR		; CString::CompareNoCase, COMDAT

; 159  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcsicmp(m_pchData, lpsz); }   // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcsicmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?CompareNoCase@CString@@QBEHPBD@Z ENDP			; CString::CompareNoCase
_TEXT	ENDS
EXTRN	__imp___mbsicmp:NEAR
;	COMDAT __tcsicmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcsicmp PROC NEAR					; COMDAT

; 798  : __inline int _tcsicmp(_CPC _s1,_CPC _s2) {return _mbsicmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbsicmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcsicmp ENDP
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NPBDABVCString@@@Z PROC NEAR			; operator==, COMDAT

; 185  : 	{ return s2.Compare(s1) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _s1$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _s2$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NPBDABVCString@@@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:NEAR ; AfxGetModuleState
;	COMDAT ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ PROC NEAR	; AfxGetInstanceHandle, COMDAT

; 19   : 	{ ASSERT(afxCurrentInstanceHandle != NULL);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 20   : 		return afxCurrentInstanceHandle; }

  00003	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00008	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ENDP	; AfxGetInstanceHandle
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
PUBLIC	??0?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@ABU?$less@VCString@@@1@_NABV?$allocator@VCPerson@@@1@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >
;	COMDAT ??0?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@ABU?$less@VCString@@@1@ABV?$allocator@VCPerson@@@1@@Z
_TEXT	SEGMENT
__Pred$ = 8
__Al$ = 12
_this$ = -4
??0?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@ABU?$less@VCString@@@1@ABV?$allocator@VCPerson@@@1@@Z PROC NEAR ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >, COMDAT

; 57   : 	explicit map(const _Pr& _Pred = _Pr(), const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@ABU?$less@VCString@@@1@_NABV?$allocator@VCPerson@@@1@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
??0?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE@ABU?$less@VCString@@@1@ABV?$allocator@VCPerson@@@1@@Z ENDP ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::begin
;	COMDAT ?begin@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ
_TEXT	SEGMENT
$T161320 = -4
___$ReturnUdt$ = 8
_this$ = -8
?begin@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ PROC NEAR ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::begin, COMDAT

; 69   : 		{return (_Tr.begin()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T161320[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::begin
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?begin@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ENDP ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::end
;	COMDAT ?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ
_TEXT	SEGMENT
$T161322 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ PROC NEAR ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end, COMDAT

; 73   : 		{return (_Tr.end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T161322[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?end@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@XZ ENDP ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::end
_TEXT	ENDS
PUBLIC	?insert@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::insert
PUBLIC	??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABVCString@@ABVCPerson@@@Z ; std::pair<CString const ,CPerson>::pair<CString const ,CPerson>
PUBLIC	??1?$pair@$$CBVCString@@VCPerson@@@std@@QAE@XZ	; std::pair<CString const ,CPerson>::~pair<CString const ,CPerson>
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\map
xdata$x	SEGMENT
$T161330 DD	019930520H
	DD	02H
	DD	FLAT:$T161332
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161332 DD	0ffffffffH
	DD	FLAT:$L161327
	DD	00H
	DD	FLAT:$L161328
xdata$x	ENDS
;	COMDAT ??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z
_TEXT	SEGMENT
__Kv$ = 8
$T161324 = -32
$T161325 = -44
$T161326 = -52
__$EHRec$ = -12
_this$ = -56
__P$ = -16
??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z PROC NEAR ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::operator[], COMDAT

; 93   : 		{iterator _P = insert(value_type(_Kv, _Ty())).first;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161331
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 3c	 sub	 esp, 60			; 0000003cH
  0001b	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d d4	 lea	 ecx, DWORD PTR $T161325[ebp]
  00021	e8 00 00 00 00	 call	 ??0CPerson@@QAE@XZ	; CPerson::CPerson
  00026	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  00029	8b 45 c4	 mov	 eax, DWORD PTR -60+[ebp]
  0002c	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  0002f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00036	8b 4d c0	 mov	 ecx, DWORD PTR -64+[ebp]
  00039	51		 push	 ecx
  0003a	8b 55 08	 mov	 edx, DWORD PTR __Kv$[ebp]
  0003d	52		 push	 edx
  0003e	8d 4d e0	 lea	 ecx, DWORD PTR $T161324[ebp]
  00041	e8 00 00 00 00	 call	 ??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABVCString@@ABVCPerson@@@Z ; std::pair<CString const ,CPerson>::pair<CString const ,CPerson>
  00046	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  00049	8b 45 bc	 mov	 eax, DWORD PTR -68+[ebp]
  0004c	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  0004f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00053	8b 4d b8	 mov	 ecx, DWORD PTR -72+[ebp]
  00056	51		 push	 ecx
  00057	8d 55 cc	 lea	 edx, DWORD PTR $T161326[ebp]
  0005a	52		 push	 edx
  0005b	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?insert@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::insert
  00063	8b 00		 mov	 eax, DWORD PTR [eax]
  00065	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax
  00068	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0006c	8d 4d e0	 lea	 ecx, DWORD PTR $T161324[ebp]
  0006f	e8 00 00 00 00	 call	 ??1?$pair@$$CBVCString@@VCPerson@@@std@@QAE@XZ ; std::pair<CString const ,CPerson>::~pair<CString const ,CPerson>
  00074	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007b	8d 4d d4	 lea	 ecx, DWORD PTR $T161325[ebp]
  0007e	e8 00 00 00 00	 call	 ??1CPerson@@UAE@XZ	; CPerson::~CPerson

; 94   : 		return ((*_P).second); }

  00083	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00086	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator*
  0008b	83 c0 04	 add	 eax, 4
  0008e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00091	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161327:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T161325[ebp]
  00003	e8 00 00 00 00	 call	 ??1CPerson@@UAE@XZ	; CPerson::~CPerson
  00008	c3		 ret	 0
$L161328:
  00009	8d 4d e0	 lea	 ecx, DWORD PTR $T161324[ebp]
  0000c	e8 00 00 00 00	 call	 ??1?$pair@$$CBVCString@@VCPerson@@@std@@QAE@XZ ; std::pair<CString const ,CPerson>::~pair<CString const ,CPerson>
  00011	c3		 ret	 0
$L161331:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161330
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??A?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEAAVCPerson@@ABVCString@@@Z ENDP ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::operator[]
PUBLIC	?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase
;	COMDAT ?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@V342@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__P$ = 12
$T161336 = -4
?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@V342@@Z PROC NEAR ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::erase, COMDAT

; 104  : 		{return (_Tr.erase((_Imp::iterator&)_P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T161336[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@V342@@Z ENDP ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEIABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase
;	COMDAT ?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEIABVCString@@@Z
_TEXT	SEGMENT
_this$ = -4
__Kv$ = 8
?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEIABVCString@@@Z PROC NEAR ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::erase, COMDAT

; 109  : 		{return (_Tr.erase(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEIABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?erase@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAEIABVCString@@@Z ENDP ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::erase
_TEXT	ENDS
PUBLIC	?find@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::find
;	COMDAT ?find@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@ABVCString@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
$T161339 = -4
?find@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@ABVCString@@@Z PROC NEAR ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::find, COMDAT

; 121  : 		{return (_Tr.find(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T161339[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::find
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?find@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@2@ABVCString@@@Z ENDP ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::find
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase
PUBLIC	?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
PUBLIC	?_Nilrefs@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1IA ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nilrefs
PUBLIC	?_Freenode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Freenode
EXTRN	__imp_??0_Lockit@std@@QAE@XZ:NEAR
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:NEAR
;	COMDAT ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
_BSS	SEGMENT
?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A DD 01H DUP (?) ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
_BSS	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1IA
_BSS	SEGMENT
?_Nilrefs@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1IA DD 01H DUP (?) ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nilrefs
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T161346 DD	019930520H
	DD	01H
	DD	FLAT:$T161348
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161348 DD	0ffffffffH
	DD	FLAT:$L161344
xdata$x	ENDS
;	COMDAT ??1?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -32
__Lk$155684 = -16
$T161341 = -20
$T161342 = -24
$T161343 = -28
__$EHRec$ = -12
??1?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::~_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >, COMDAT

; 176  :                 {erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161347
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 ec	 lea	 eax, DWORD PTR $T161341[ebp]
  00021	50		 push	 eax
  00022	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::end
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	8d 55 e8	 lea	 edx, DWORD PTR $T161342[ebp]
  00030	52		 push	 edx
  00031	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::begin
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	50		 push	 eax
  0003c	8d 4d e4	 lea	 ecx, DWORD PTR $T161343[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase

; 177  :                 _Freenode(_Head);

  00048	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	50		 push	 eax
  0004f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Freenode

; 178  :                 _Head = 0, _Size = 0;

  00057	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00061	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 179  :                         {_Lockit _Lk;

  0006b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$155684[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 180  :                         if (--_Nilrefs == 0)

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nilrefs@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1IA ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nilrefs
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?_Nilrefs@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1IA, eax ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nilrefs
  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nilrefs@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1IA, 0 ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nilrefs
  0008f	75 19		 jne	 SHORT $L155685

; 181  :                                 {_Freenode(_Nil);

  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00097	51		 push	 ecx
  00098	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Freenode

; 182  :                                 _Nil = 0; }}}

  000a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
$L155685:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$155684[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161344:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$155684[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161347:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161346
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::~_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >
PUBLIC	??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator, COMDAT

; 122  :                 iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::const_iterator
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Value@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAU?$pair@$$CBVCString@@VCPerson@@@2@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Value
;	COMDAT ??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator*, COMDAT

; 127  :                         {return (_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAU?$pair@$$CBVCString@@VCPerson@@@2@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEAAU?$pair@$$CBVCString@@VCPerson@@@2@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++
;	COMDAT ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++, COMDAT

; 134  :                         {iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 135  :                         ++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++

; 136  :                         return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??8iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator==, COMDAT

; 145  :                         {return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator==
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=, COMDAT

; 147  :                         {return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T161362 DD	019930520H
	DD	01H
	DD	FLAT:$T161364
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161364 DD	0ffffffffH
	DD	FLAT:$L161359
xdata$x	ENDS
;	COMDAT ??1?$pair@$$CBVCString@@VCPerson@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??1?$pair@$$CBVCString@@VCPerson@@@std@@QAE@XZ PROC NEAR ; std::pair<CString const ,CPerson>::~pair<CString const ,CPerson>, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161363
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00023	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 04	 add	 ecx, 4
  00029	e8 00 00 00 00	 call	 ??1CPerson@@UAE@XZ	; CPerson::~CPerson
  0002e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00035	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161359:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00008	c3		 ret	 0
$L161363:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161362
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$pair@$$CBVCString@@VCPerson@@@std@@QAE@XZ ENDP	; std::pair<CString const ,CPerson>::~pair<CString const ,CPerson>
EXTRN	__imp__BringWindowToTop@4:NEAR
;	COMDAT ?BringWindowToTop@CWnd@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BringWindowToTop@CWnd@@QAEXXZ PROC NEAR		; CWnd::BringWindowToTop, COMDAT

; 94   : 	{ ASSERT(::IsWindow(m_hWnd)); ::BringWindowToTop(m_hWnd); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BringWindowToTop@4
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?BringWindowToTop@CWnd@@QAEXXZ ENDP			; CWnd::BringWindowToTop
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>
PUBLIC	?insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::insert
;	COMDAT ?insert@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z
_TEXT	SEGMENT
__X$ = 12
___$ReturnUdt$ = 8
_this$ = -28
__Ans$ = -8
$T161369 = -16
$T161370 = -24
?insert@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z PROC NEAR ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::insert, COMDAT

; 96   : 		{_Imp::_Pairib _Ans = _Tr.insert(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f0	 lea	 ecx, DWORD PTR $T161369[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::insert
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __Ans$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __Ans$[ebp+4], eax

; 97   : 		return (_Pairib(_Ans.first, _Ans.second)); }

  00024	8d 4d fc	 lea	 ecx, DWORD PTR __Ans$[ebp+4]
  00027	51		 push	 ecx
  00028	8d 55 f8	 lea	 edx, DWORD PTR __Ans$[ebp]
  0002b	52		 push	 edx
  0002c	8d 4d e8	 lea	 ecx, DWORD PTR $T161370[ebp]
  0002f	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
  0003e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?insert@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ENDP ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::insert
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAU?$pair@$$CBVCString@@VCPerson@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAU?$pair@$$CBVCString@@VCPerson@@@2@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Value, COMDAT

; 46   :                 {return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAU?$pair@$$CBVCString@@VCPerson@@@2@PAU_Node@12@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Value
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXXZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Init
;	COMDAT ??0?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@ABU?$less@VCString@@@1@_NABV?$allocator@VCPerson@@@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Parg$ = 8
__Marg$ = 12
__Al$ = 16
??0?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@ABU?$less@VCString@@@1@_NABV?$allocator@VCPerson@@@1@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >, COMDAT

; 162  :                 {_Init(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	88 4a 01	 mov	 BYTE PTR [edx+1], cl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8a 4d 0c	 mov	 cl, BYTE PTR __Marg$[ebp]
  00022	88 48 08	 mov	 BYTE PTR [eax+8], cl
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Init@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXXZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Init
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??0?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@ABU?$less@VCString@@@1@_NABV?$allocator@VCPerson@@@1@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost
PUBLIC	??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator
;	COMDAT ?begin@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T161374 = -4
?begin@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::begin, COMDAT

; 190  :                 {return (iterator(_Lmost())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T161374[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 0a		 mov	 DWORD PTR [edx], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?begin@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T161376 = -4
?end@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::end, COMDAT

; 194  :                 {return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T161376[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::end
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lrotate
PUBLIC	?_Max@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Max
PUBLIC	?_Min@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Min
PUBLIC	?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost
PUBLIC	?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
PUBLIC	?_Rrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rrotate
PUBLIC	?_Destval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Destval
PUBLIC	?swap@std@@YAXAAW4_Redbl@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z ; std::swap
PUBLIC	?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
PUBLIC	?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
PUBLIC	?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
PUBLIC	?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
PUBLIC	?_Mynode@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Mynode
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161381 DD	019930520H
	DD	01H
	DD	FLAT:$T161383
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161383 DD	0ffffffffH
	DD	FLAT:$L161379
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -44
__X$ = -16
__Y$ = -20
__Z$ = -28
__Lk$ = -24
__W$156994 = -32
__W$157000 = -36
$T161378 = -40
__$EHRec$ = -12
__P$ = 12
?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase, COMDAT

; 264  :                 {_Nodeptr _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161382
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	56		 push	 esi
  0001c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 265  :                 _Nodeptr _Y = (_P++)._Mynode();

  0001f	6a 00		 push	 0
  00021	8d 45 d8	 lea	 eax, DWORD PTR $T161378[ebp]
  00024	50		 push	 eax
  00025	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00028	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Mynode
  00034	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax

; 266  :                 _Nodeptr _Z = _Y;

  00037	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0003a	89 4d e4	 mov	 DWORD PTR __Z$[ebp], ecx

; 267  :                 _Lockit _Lk;

  0003d	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  :                 if (_Left(_Y) == _Nil)

  0004d	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00056	83 c4 04	 add	 esp, 4
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00061	75 13		 jne	 SHORT $L156960

; 269  :                         _X = _Right(_Y);

  00063	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 270  :                 else if (_Right(_Y) == _Nil)

  00074	eb 54		 jmp	 SHORT $L156963
$L156960:
  00076	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  0008a	75 13		 jne	 SHORT $L156962

; 271  :                         _X = _Left(_Y);

  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00095	83 c4 04	 add	 esp, 4
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 272  :                 else

  0009d	eb 2b		 jmp	 SHORT $L156963
$L156962:

; 273  :                         _Y = _Min(_Right(_Y)), _X = _Right(_Y);

  0009f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Min
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  000b9	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L156963:

; 274  :                 if (_Y != _Z)

  000ca	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000cd	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  000d0	0f 84 95 01 00
	00		 je	 $L156964

; 275  :                         {_Parent(_Left(_Z)) = _Y;

  000d6	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  000df	83 c4 04	 add	 esp, 4
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  000ea	83 c4 04	 add	 esp, 4
  000ed	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000f0	89 10		 mov	 DWORD PTR [eax], edx

; 276  :                         _Left(_Y) = _Left(_Z);

  000f2	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  000fb	83 c4 04	 add	 esp, 4
  000fe	8b f0		 mov	 esi, eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00109	83 c4 04	 add	 esp, 4
  0010c	8b 16		 mov	 edx, DWORD PTR [esi]
  0010e	89 10		 mov	 DWORD PTR [eax], edx

; 277  :                         if (_Y == _Right(_Z))

  00110	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00119	83 c4 04	 add	 esp, 4
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0011f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00121	75 13		 jne	 SHORT $L156965

; 278  :                                 _Parent(_X) = _Y;

  00123	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0012c	83 c4 04	 add	 esp, 4
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx

; 279  :                         else

  00134	eb 74		 jmp	 SHORT $L156966
$L156965:

; 280  :                                 {_Parent(_X) = _Parent(_Y);

  00136	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0013f	83 c4 04	 add	 esp, 4
  00142	8b f0		 mov	 esi, eax
  00144	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0014d	83 c4 04	 add	 esp, 4
  00150	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00152	89 08		 mov	 DWORD PTR [eax], ecx

; 281  :                                 _Left(_Parent(_Y)) = _X;

  00154	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00157	52		 push	 edx
  00158	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0015d	83 c4 04	 add	 esp, 4
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00168	83 c4 04	 add	 esp, 4
  0016b	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0016e	89 08		 mov	 DWORD PTR [eax], ecx

; 282  :                                 _Right(_Y) = _Right(_Z);

  00170	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00179	83 c4 04	 add	 esp, 4
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00187	83 c4 04	 add	 esp, 4
  0018a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0018c	89 08		 mov	 DWORD PTR [eax], ecx

; 283  :                                 _Parent(_Right(_Z)) = _Y; }

  0018e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00197	83 c4 04	 add	 esp, 4
  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  001a2	83 c4 04	 add	 esp, 4
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
$L156966:

; 284  :                         if (_Root() == _Z)

  001aa	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  001b2	8b 10		 mov	 edx, DWORD PTR [eax]
  001b4	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  001b7	75 0f		 jne	 SHORT $L156967

; 285  :                                 _Root() = _Y;

  001b9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001c4	89 08		 mov	 DWORD PTR [eax], ecx

; 286  :                         else if (_Left(_Parent(_Z)) == _Z)

  001c6	eb 58		 jmp	 SHORT $L156970
$L156967:
  001c8	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  001d1	83 c4 04	 add	 esp, 4
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  001dc	83 c4 04	 add	 esp, 4
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  001e4	75 1e		 jne	 SHORT $L156969

; 287  :                                 _Left(_Parent(_Z)) = _Y;

  001e6	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001e9	52		 push	 edx
  001ea	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  001ef	83 c4 04	 add	 esp, 4
  001f2	8b 00		 mov	 eax, DWORD PTR [eax]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  001fa	83 c4 04	 add	 esp, 4
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00200	89 08		 mov	 DWORD PTR [eax], ecx

; 288  :                         else

  00202	eb 1c		 jmp	 SHORT $L156970
$L156969:

; 289  :                                 _Right(_Parent(_Z)) = _Y;

  00204	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 00		 mov	 eax, DWORD PTR [eax]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00218	83 c4 04	 add	 esp, 4
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0021e	89 08		 mov	 DWORD PTR [eax], ecx
$L156970:

; 290  :                         _Parent(_Y) = _Parent(_Z);

  00220	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00237	83 c4 04	 add	 esp, 4
  0023a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023c	89 08		 mov	 DWORD PTR [eax], ecx

; 291  :                         std::swap(_Color(_Y), _Color(_Z));

  0023e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00247	83 c4 04	 add	 esp, 4
  0024a	50		 push	 eax
  0024b	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00254	83 c4 04	 add	 esp, 4
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z ; std::swap
  0025d	83 c4 08	 add	 esp, 8

; 292  :                         _Y = _Z; }

  00260	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  00263	89 4d ec	 mov	 DWORD PTR __Y$[ebp], ecx

; 293  :                 else

  00266	e9 4a 01 00 00	 jmp	 $L156988
$L156964:

; 294  :                         {_Parent(_X) = _Parent(_Y);

  0026b	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00274	83 c4 04	 add	 esp, 4
  00277	8b f0		 mov	 esi, eax
  00279	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00282	83 c4 04	 add	 esp, 4
  00285	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00287	89 08		 mov	 DWORD PTR [eax], ecx

; 295  :                         if (_Root() == _Z)

  00289	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  00296	75 0f		 jne	 SHORT $L156977

; 296  :                                 _Root() = _X;

  00298	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 297  :                         else if (_Left(_Parent(_Z)) == _Z)

  002a5	eb 58		 jmp	 SHORT $L156980
$L156977:
  002a7	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002aa	52		 push	 edx
  002ab	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  002b0	83 c4 04	 add	 esp, 4
  002b3	8b 00		 mov	 eax, DWORD PTR [eax]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  002bb	83 c4 04	 add	 esp, 4
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  002c3	75 1e		 jne	 SHORT $L156979

; 298  :                                 _Left(_Parent(_Z)) = _X;

  002c5	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  002ce	83 c4 04	 add	 esp, 4
  002d1	8b 00		 mov	 eax, DWORD PTR [eax]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002df	89 08		 mov	 DWORD PTR [eax], ecx

; 299  :                         else

  002e1	eb 1c		 jmp	 SHORT $L156980
$L156979:

; 300  :                                 _Right(_Parent(_Z)) = _X;

  002e3	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  002ec	83 c4 04	 add	 esp, 4
  002ef	8b 00		 mov	 eax, DWORD PTR [eax]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  002f7	83 c4 04	 add	 esp, 4
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	89 08		 mov	 DWORD PTR [eax], ecx
$L156980:

; 301  :                         if (_Lmost() != _Z)

  002ff	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost
  00307	8b 10		 mov	 edx, DWORD PTR [eax]
  00309	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  0030c	74 02		 je	 SHORT $L156981

; 303  :                         else if (_Right(_Z) == _Nil)

  0030e	eb 4a		 jmp	 SHORT $L156984
$L156981:
  00310	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00319	83 c4 04	 add	 esp, 4
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00324	75 1c		 jne	 SHORT $L156983

; 304  :                                 _Lmost() = _Parent(_Z);

  00326	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0032f	83 c4 04	 add	 esp, 4
  00332	8b f0		 mov	 esi, eax
  00334	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost
  0033c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0033e	89 08		 mov	 DWORD PTR [eax], ecx

; 305  :                         else

  00340	eb 18		 jmp	 SHORT $L156984
$L156983:

; 306  :                                 _Lmost() = _Min(_X);

  00342	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00345	52		 push	 edx
  00346	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Min
  0034b	83 c4 04	 add	 esp, 4
  0034e	8b f0		 mov	 esi, eax
  00350	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost
  00358	89 30		 mov	 DWORD PTR [eax], esi
$L156984:

; 307  :                         if (_Rmost() != _Z)

  0035a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	3b 45 e4	 cmp	 eax, DWORD PTR __Z$[ebp]
  00367	74 02		 je	 SHORT $L156985

; 309  :                         else if (_Left(_Z) == _Nil)

  00369	eb 4a		 jmp	 SHORT $L156988
$L156985:
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00374	83 c4 04	 add	 esp, 4
  00377	8b 10		 mov	 edx, DWORD PTR [eax]
  00379	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  0037f	75 1c		 jne	 SHORT $L156987

; 310  :                                 _Rmost() = _Parent(_Z);

  00381	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0038a	83 c4 04	 add	 esp, 4
  0038d	8b f0		 mov	 esi, eax
  0038f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost
  00397	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00399	89 08		 mov	 DWORD PTR [eax], ecx

; 311  :                         else

  0039b	eb 18		 jmp	 SHORT $L156988
$L156987:

; 312  :                                 _Rmost() = _Max(_X); }

  0039d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?_Max@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Max
  003a6	83 c4 04	 add	 esp, 4
  003a9	8b f0		 mov	 esi, eax
  003ab	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ae	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost
  003b3	89 30		 mov	 DWORD PTR [eax], esi
$L156988:

; 313  :                 if (_Color(_Y) == _Black)

  003b5	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  003be	83 c4 04	 add	 esp, 4
  003c1	83 38 01	 cmp	 DWORD PTR [eax], 1
  003c4	0f 85 25 04 00
	00		 jne	 $L156989
$L156991:

; 314  :                         {while (_X != _Root() && _Color(_X) == _Black)

  003ca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  003d2	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  003d5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d7	0f 84 00 04 00
	00		 je	 $L156992
  003dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  003e6	83 c4 04	 add	 esp, 4
  003e9	83 38 01	 cmp	 DWORD PTR [eax], 1
  003ec	0f 85 eb 03 00
	00		 jne	 $L156992

; 315  :                                 if (_X == _Left(_Parent(_X)))

  003f2	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  003fb	83 c4 04	 add	 esp, 4
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	51		 push	 ecx
  00401	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00406	83 c4 04	 add	 esp, 4
  00409	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0040c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0040e	0f 85 e6 01 00
	00		 jne	 $L156993

; 316  :                                         {_Nodeptr _W = _Right(_Parent(_X));

  00414	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0041d	83 c4 04	 add	 esp, 4
  00420	8b 08		 mov	 ecx, DWORD PTR [eax]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 10		 mov	 edx, DWORD PTR [eax]
  0042d	89 55 e0	 mov	 DWORD PTR __W$156994[ebp], edx

; 317  :                                         if (_Color(_W) == _Red)

  00430	8b 45 e0	 mov	 eax, DWORD PTR __W$156994[ebp]
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0043f	75 62		 jne	 SHORT $L156995

; 318  :                                                 {_Color(_W) = _Black;

  00441	8b 4d e0	 mov	 ecx, DWORD PTR __W$156994[ebp]
  00444	51		 push	 ecx
  00445	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  0044a	83 c4 04	 add	 esp, 4
  0044d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 319  :                                                 _Color(_Parent(_X)) = _Red;

  00453	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0045c	83 c4 04	 add	 esp, 4
  0045f	8b 00		 mov	 eax, DWORD PTR [eax]
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00467	83 c4 04	 add	 esp, 4
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 320  :                                                 _Lrotate(_Parent(_X));

  00470	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00473	51		 push	 ecx
  00474	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00479	83 c4 04	 add	 esp, 4
  0047c	8b 10		 mov	 edx, DWORD PTR [eax]
  0047e	52		 push	 edx
  0047f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lrotate

; 321  :                                                 _W = _Right(_Parent(_X)); }

  00487	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00490	83 c4 04	 add	 esp, 4
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	51		 push	 ecx
  00496	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0049b	83 c4 04	 add	 esp, 4
  0049e	8b 10		 mov	 edx, DWORD PTR [eax]
  004a0	89 55 e0	 mov	 DWORD PTR __W$156994[ebp], edx
$L156995:

; 323  :                                                 && _Color(_Right(_W)) == _Black)

  004a3	8b 45 e0	 mov	 eax, DWORD PTR __W$156994[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  004ac	83 c4 04	 add	 esp, 4
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  004b7	83 c4 04	 add	 esp, 4
  004ba	83 38 01	 cmp	 DWORD PTR [eax], 1
  004bd	75 44		 jne	 SHORT $L156996
  004bf	8b 55 e0	 mov	 edx, DWORD PTR __W$156994[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  004c8	83 c4 04	 add	 esp, 4
  004cb	8b 00		 mov	 eax, DWORD PTR [eax]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  004d3	83 c4 04	 add	 esp, 4
  004d6	83 38 01	 cmp	 DWORD PTR [eax], 1
  004d9	75 28		 jne	 SHORT $L156996

; 324  :                                                 {_Color(_W) = _Red;

  004db	8b 4d e0	 mov	 ecx, DWORD PTR __W$156994[ebp]
  004de	51		 push	 ecx
  004df	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  004e4	83 c4 04	 add	 esp, 4
  004e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  :                                                 _X = _Parent(_X); }

  004ed	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  004f0	52		 push	 edx
  004f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  004f6	83 c4 04	 add	 esp, 4
  004f9	8b 00		 mov	 eax, DWORD PTR [eax]
  004fb	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 326  :                                         else

  004fe	e9 f2 00 00 00	 jmp	 $L156997
$L156996:

; 327  :                                                 {if (_Color(_Right(_W)) == _Black)

  00503	8b 4d e0	 mov	 ecx, DWORD PTR __W$156994[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0050c	83 c4 04	 add	 esp, 4
  0050f	8b 10		 mov	 edx, DWORD PTR [eax]
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00517	83 c4 04	 add	 esp, 4
  0051a	83 38 01	 cmp	 DWORD PTR [eax], 1
  0051d	75 57		 jne	 SHORT $L156998

; 328  :                                                         {_Color(_Left(_W)) = _Black;

  0051f	8b 45 e0	 mov	 eax, DWORD PTR __W$156994[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00528	83 c4 04	 add	 esp, 4
  0052b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052d	51		 push	 ecx
  0052e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00533	83 c4 04	 add	 esp, 4
  00536	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 329  :                                                         _Color(_W) = _Red;

  0053c	8b 55 e0	 mov	 edx, DWORD PTR __W$156994[ebp]
  0053f	52		 push	 edx
  00540	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00545	83 c4 04	 add	 esp, 4
  00548	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 330  :                                                         _Rrotate(_W);

  0054e	8b 45 e0	 mov	 eax, DWORD PTR __W$156994[ebp]
  00551	50		 push	 eax
  00552	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rrotate

; 331  :                                                         _W = _Right(_Parent(_X)); }

  0055a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0055d	51		 push	 ecx
  0055e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00563	83 c4 04	 add	 esp, 4
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	52		 push	 edx
  00569	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0056e	83 c4 04	 add	 esp, 4
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	89 45 e0	 mov	 DWORD PTR __W$156994[ebp], eax
$L156998:

; 332  :                                                 _Color(_W) = _Color(_Parent(_X));

  00576	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0057f	83 c4 04	 add	 esp, 4
  00582	8b 10		 mov	 edx, DWORD PTR [eax]
  00584	52		 push	 edx
  00585	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  0058a	83 c4 04	 add	 esp, 4
  0058d	8b f0		 mov	 esi, eax
  0058f	8b 45 e0	 mov	 eax, DWORD PTR __W$156994[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0059d	89 08		 mov	 DWORD PTR [eax], ecx

; 333  :                                                 _Color(_Parent(_X)) = _Black;

  0059f	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005a2	52		 push	 edx
  005a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  005a8	83 c4 04	 add	 esp, 4
  005ab	8b 00		 mov	 eax, DWORD PTR [eax]
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  005b3	83 c4 04	 add	 esp, 4
  005b6	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 334  :                                                 _Color(_Right(_W)) = _Black;

  005bc	8b 4d e0	 mov	 ecx, DWORD PTR __W$156994[ebp]
  005bf	51		 push	 ecx
  005c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  005c5	83 c4 04	 add	 esp, 4
  005c8	8b 10		 mov	 edx, DWORD PTR [eax]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 335  :                                                 _Lrotate(_Parent(_X));

  005d9	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	51		 push	 ecx
  005e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lrotate

; 336  :                                                 break; }}

  005f0	e9 e8 01 00 00	 jmp	 $L156992
$L156997:

; 337  :                                 else

  005f5	e9 de 01 00 00	 jmp	 $L157003
$L156993:

; 338  :                                         {_Nodeptr _W = _Left(_Parent(_X));

  005fa	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005fd	52		 push	 edx
  005fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00603	83 c4 04	 add	 esp, 4
  00606	8b 00		 mov	 eax, DWORD PTR [eax]
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  0060e	83 c4 04	 add	 esp, 4
  00611	8b 08		 mov	 ecx, DWORD PTR [eax]
  00613	89 4d dc	 mov	 DWORD PTR __W$157000[ebp], ecx

; 339  :                                         if (_Color(_W) == _Red)

  00616	8b 55 dc	 mov	 edx, DWORD PTR __W$157000[ebp]
  00619	52		 push	 edx
  0061a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  0061f	83 c4 04	 add	 esp, 4
  00622	83 38 00	 cmp	 DWORD PTR [eax], 0
  00625	75 62		 jne	 SHORT $L157001

; 340  :                                                 {_Color(_W) = _Black;

  00627	8b 45 dc	 mov	 eax, DWORD PTR __W$157000[ebp]
  0062a	50		 push	 eax
  0062b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00630	83 c4 04	 add	 esp, 4
  00633	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 341  :                                                 _Color(_Parent(_X)) = _Red;

  00639	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0063c	51		 push	 ecx
  0063d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00642	83 c4 04	 add	 esp, 4
  00645	8b 10		 mov	 edx, DWORD PTR [eax]
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  0064d	83 c4 04	 add	 esp, 4
  00650	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 342  :                                                 _Rrotate(_Parent(_X));

  00656	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00659	50		 push	 eax
  0065a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0065f	83 c4 04	 add	 esp, 4
  00662	8b 08		 mov	 ecx, DWORD PTR [eax]
  00664	51		 push	 ecx
  00665	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rrotate

; 343  :                                                 _W = _Left(_Parent(_X)); }

  0066d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00670	52		 push	 edx
  00671	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00676	83 c4 04	 add	 esp, 4
  00679	8b 00		 mov	 eax, DWORD PTR [eax]
  0067b	50		 push	 eax
  0067c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00681	83 c4 04	 add	 esp, 4
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 4d dc	 mov	 DWORD PTR __W$157000[ebp], ecx
$L157001:

; 345  :                                                 && _Color(_Left(_W)) == _Black)

  00689	8b 55 dc	 mov	 edx, DWORD PTR __W$157000[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00692	83 c4 04	 add	 esp, 4
  00695	8b 00		 mov	 eax, DWORD PTR [eax]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  0069d	83 c4 04	 add	 esp, 4
  006a0	83 38 01	 cmp	 DWORD PTR [eax], 1
  006a3	75 44		 jne	 SHORT $L157002
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR __W$157000[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  006ae	83 c4 04	 add	 esp, 4
  006b1	8b 10		 mov	 edx, DWORD PTR [eax]
  006b3	52		 push	 edx
  006b4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  006b9	83 c4 04	 add	 esp, 4
  006bc	83 38 01	 cmp	 DWORD PTR [eax], 1
  006bf	75 28		 jne	 SHORT $L157002

; 346  :                                                 {_Color(_W) = _Red;

  006c1	8b 45 dc	 mov	 eax, DWORD PTR __W$157000[ebp]
  006c4	50		 push	 eax
  006c5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  006ca	83 c4 04	 add	 esp, 4
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 347  :                                                 _X = _Parent(_X); }

  006d3	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  006d6	51		 push	 ecx
  006d7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  006dc	83 c4 04	 add	 esp, 4
  006df	8b 10		 mov	 edx, DWORD PTR [eax]
  006e1	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 348  :                                         else

  006e4	e9 ef 00 00 00	 jmp	 $L157003
$L157002:

; 349  :                                                 {if (_Color(_Left(_W)) == _Black)

  006e9	8b 45 dc	 mov	 eax, DWORD PTR __W$157000[ebp]
  006ec	50		 push	 eax
  006ed	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  006f2	83 c4 04	 add	 esp, 4
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  006fd	83 c4 04	 add	 esp, 4
  00700	83 38 01	 cmp	 DWORD PTR [eax], 1
  00703	75 57		 jne	 SHORT $L157004

; 350  :                                                         {_Color(_Right(_W)) = _Black;

  00705	8b 55 dc	 mov	 edx, DWORD PTR __W$157000[ebp]
  00708	52		 push	 edx
  00709	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0070e	83 c4 04	 add	 esp, 4
  00711	8b 00		 mov	 eax, DWORD PTR [eax]
  00713	50		 push	 eax
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 351  :                                                         _Color(_W) = _Red;

  00722	8b 4d dc	 mov	 ecx, DWORD PTR __W$157000[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  0072b	83 c4 04	 add	 esp, 4
  0072e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 352  :                                                         _Lrotate(_W);

  00734	8b 55 dc	 mov	 edx, DWORD PTR __W$157000[ebp]
  00737	52		 push	 edx
  00738	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lrotate

; 353  :                                                         _W = _Left(_Parent(_X)); }

  00740	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00749	83 c4 04	 add	 esp, 4
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	51		 push	 ecx
  0074f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00754	83 c4 04	 add	 esp, 4
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	89 55 dc	 mov	 DWORD PTR __W$157000[ebp], edx
$L157004:

; 354  :                                                 _Color(_W) = _Color(_Parent(_X));

  0075c	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00765	83 c4 04	 add	 esp, 4
  00768	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00770	83 c4 04	 add	 esp, 4
  00773	8b f0		 mov	 esi, eax
  00775	8b 55 dc	 mov	 edx, DWORD PTR __W$157000[ebp]
  00778	52		 push	 edx
  00779	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  0077e	83 c4 04	 add	 esp, 4
  00781	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00783	89 08		 mov	 DWORD PTR [eax], ecx

; 355  :                                                 _Color(_Parent(_X)) = _Black;

  00785	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0078e	83 c4 04	 add	 esp, 4
  00791	8b 00		 mov	 eax, DWORD PTR [eax]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00799	83 c4 04	 add	 esp, 4
  0079c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 356  :                                                 _Color(_Left(_W)) = _Black;

  007a2	8b 4d dc	 mov	 ecx, DWORD PTR __W$157000[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  007ab	83 c4 04	 add	 esp, 4
  007ae	8b 10		 mov	 edx, DWORD PTR [eax]
  007b0	52		 push	 edx
  007b1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  007b6	83 c4 04	 add	 esp, 4
  007b9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 357  :                                                 _Rrotate(_Parent(_X));

  007bf	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  007c8	83 c4 04	 add	 esp, 4
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	51		 push	 ecx
  007ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rrotate

; 358  :                                                 break; }}

  007d6	eb 05		 jmp	 SHORT $L156992
$L157003:
  007d8	e9 ed fb ff ff	 jmp	 $L156991
$L156992:

; 359  :                         _Color(_X) = _Black; }

  007dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  007e0	52		 push	 edx
  007e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  007e6	83 c4 04	 add	 esp, 4
  007e9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L156989:

; 360  :                 _Destval(&_Value(_Y));

  007ef	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAU?$pair@$$CBVCString@@VCPerson@@@2@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Value
  007f8	83 c4 04	 add	 esp, 4
  007fb	50		 push	 eax
  007fc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Destval

; 361  :                 _Freenode(_Y);

  00804	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00807	51		 push	 ecx
  00808	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Freenode

; 362  :                 --_Size;

  00810	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00813	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00816	83 e8 01	 sub	 eax, 1
  00819	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 363  :                 return (_P); }

  0081f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00822	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00825	89 02		 mov	 DWORD PTR [edx], eax
  00827	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0082e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00831	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00837	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0083a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0083d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00844	5e		 pop	 esi
  00845	8b e5		 mov	 esp, ebp
  00847	5d		 pop	 ebp
  00848	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161379:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161382:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161381
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase
PUBLIC	?_Erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Erase
PUBLIC	?size@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEIXZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::size
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161394 DD	019930520H
	DD	01H
	DD	FLAT:$T161396
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161396 DD	0ffffffffH
	DD	FLAT:$L161392
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
__F$ = 12
__L$ = 16
___$ReturnUdt$ = 8
_this$ = -40
_Lk$157018 = -16
$T161387 = -20
$T161388 = -24
$T161389 = -28
$T161390 = -32
$T161391 = -36
__$EHRec$ = -12
?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase, COMDAT

; 365  :                 {if (size() == 0 || _F != begin() || _L != end())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161395
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?size@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEIXZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::size
  00026	85 c0		 test	 eax, eax
  00028	74 3c		 je	 SHORT $L157011
  0002a	8d 45 ec	 lea	 eax, DWORD PTR $T161387[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::begin
  00036	50		 push	 eax
  00037	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
  0003f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00044	85 c0		 test	 eax, eax
  00046	75 1e		 jne	 SHORT $L157011
  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T161388[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?end@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::end
  00054	50		 push	 eax
  00055	8d 4d 10	 lea	 ecx, DWORD PTR __L$[ebp]
  00058	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	74 44		 je	 SHORT $L157010
$L157011:

; 366  :                         {while (_F != _L)

  00066	8d 55 10	 lea	 edx, DWORD PTR __L$[ebp]
  00069	52		 push	 edx
  0006a	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0006d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
  00072	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00077	85 c0		 test	 eax, eax
  00079	74 1f		 je	 SHORT $L157014

; 367  :                                 erase(_F++);

  0007b	6a 00		 push	 0
  0007d	8d 45 e4	 lea	 eax, DWORD PTR $T161389[ebp]
  00080	50		 push	 eax
  00081	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00084	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	51		 push	 ecx
  0008c	8d 55 e0	 lea	 edx, DWORD PTR $T161390[ebp]
  0008f	52		 push	 edx
  00090	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase
  00098	eb cc		 jmp	 SHORT $L157011
$L157014:

; 368  :                         return (_F); }

  0009a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR __F$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a5	e9 83 00 00 00	 jmp	 $L157017
$L157010:

; 370  :                         {_Lockit Lk;

  000aa	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$157018[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 371  :                         _Erase(_Root());

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	52		 push	 edx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Erase

; 372  :                         _Root() = _Nil, _Size = 0;

  000cd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  000db	89 08		 mov	 DWORD PTR [eax], ecx
  000dd	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 373  :                         _Lmost() = _Head, _Rmost() = _Head;

  000e7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost
  000ef	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f5	89 10		 mov	 DWORD PTR [eax], edx
  000f7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost
  000ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00105	89 10		 mov	 DWORD PTR [eax], edx

; 374  :                         return (begin()); }}

  00107	8d 45 dc	 lea	 eax, DWORD PTR $T161391[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::begin
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	89 0a		 mov	 DWORD PTR [edx], ecx
  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$157018[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L157017:
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161392:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$157018[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161395:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161394
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase
PUBLIC	?equal_range@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@2@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::equal_range
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAI@Z ; std::_Distance
;	COMDAT ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEIABVCString@@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -28
__P$ = -8
__N$ = -12
$T161400 = -20
$T161401 = -24
?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEIABVCString@@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase, COMDAT

; 376  :                 {_Pairii _P = equal_range(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d ec	 lea	 ecx, DWORD PTR $T161400[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@2@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::equal_range
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __P$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __P$[ebp+4], eax

; 377  :                 size_type _N = 0;

  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0

; 378  :                 _Distance(_P.first, _P.second, _N);

  0002b	8d 4d f4	 lea	 ecx, DWORD PTR __N$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 fc	 mov	 edx, DWORD PTR __P$[ebp+4]
  00032	52		 push	 edx
  00033	8b 45 f8	 mov	 eax, DWORD PTR __P$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAI@Z ; std::_Distance
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 379  :                 erase(_P.first, _P.second);

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __P$[ebp+4]
  00042	51		 push	 ecx
  00043	8b 55 f8	 mov	 edx, DWORD PTR __P$[ebp]
  00046	52		 push	 edx
  00047	8d 45 e8	 lea	 eax, DWORD PTR $T161401[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase

; 380  :                 return (_N); }

  00053	8b 45 f4	 mov	 eax, DWORD PTR __N$[ebp]
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEIABVCString@@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::lower_bound
PUBLIC	??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z	; std::less<CString>::operator()
PUBLIC	?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Key
;	COMDAT ?find@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z
_TEXT	SEGMENT
__Kv$ = 12
___$ReturnUdt$ = 8
_this$ = -24
__P$ = -4
$T161403 = -8
$T161404 = -12
$T161405 = -16
$T161407 = -20
?find@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::find, COMDAT

; 387  :                 {iterator _P = lower_bound(_Kv);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR $T161403[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::lower_bound
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	89 55 fc	 mov	 DWORD PTR __P$[ebp], edx

; 388  :                 return (_P == end()
; 389  :                         || key_compare(_Kv, _Key(_P._Mynode()))
; 390  :                                 ? end() : _P); }

  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T161405[ebp]
  00021	50		 push	 eax
  00022	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::end
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0002e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator==
  00033	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00038	85 c0		 test	 eax, eax
  0003a	75 32		 jne	 SHORT $L161406
  0003c	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Mynode
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Key
  0004a	83 c4 04	 add	 esp, 4
  0004d	50		 push	 eax
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00051	51		 push	 ecx
  00052	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 01	 add	 ecx, 1
  00058	e8 00 00 00 00	 call	 ??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z ; std::less<CString>::operator()
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	75 08		 jne	 SHORT $L161406
  00066	8d 55 fc	 lea	 edx, DWORD PTR __P$[ebp]
  00069	89 55 e4	 mov	 DWORD PTR -28+[ebp], edx
  0006c	eb 0f		 jmp	 SHORT $L161408
$L161406:
  0006e	8d 45 ec	 lea	 eax, DWORD PTR $T161407[ebp]
  00071	50		 push	 eax
  00072	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?end@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::end
  0007a	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
$L161408:
  0007d	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  00080	89 4d f4	 mov	 DWORD PTR $T161404[ebp], ecx
  00083	8b 55 f4	 mov	 edx, DWORD PTR $T161404[ebp]
  00086	8b 02		 mov	 eax, DWORD PTR [edx]
  00088	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0008b	89 01		 mov	 DWORD PTR [ecx], eax
  0008d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 08 00	 ret	 8
?find@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::find
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@VCPerson@@@std@@QAEXPAXI@Z ; std::allocator<CPerson>::deallocate
;	COMDAT ?_Freenode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__S$ = 8
_this$ = -4
?_Freenode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Freenode, COMDAT

; 596  :                 {allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@VCPerson@@@std@@QAEXPAXI@Z ; std::allocator<CPerson>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Freenode
_TEXT	ENDS
PUBLIC	??0CPerson@@QAE@ABV0@@Z				; CPerson::CPerson
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\utility
xdata$x	SEGMENT
$T161414 DD	019930520H
	DD	01H
	DD	FLAT:$T161416
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161416 DD	0ffffffffH
	DD	FLAT:$L161411
xdata$x	ENDS
;	COMDAT ??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABVCString@@ABVCPerson@@@Z
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
__V1$ = 8
__V2$ = 12
??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABVCString@@ABVCPerson@@@Z PROC NEAR ; std::pair<CString const ,CPerson>::pair<CString const ,CPerson>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161415
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00032	51		 push	 ecx
  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	83 c1 04	 add	 ecx, 4
  00039	e8 00 00 00 00	 call	 ??0CPerson@@QAE@ABV0@@Z	; CPerson::CPerson
  0003e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00045	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161411:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00008	c3		 ret	 0
$L161415:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161414
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABVCString@@ABVCPerson@@@Z ENDP ; std::pair<CString const ,CPerson>::pair<CString const ,CPerson>
;	COMDAT ??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::const_iterator, COMDAT

; 63   :                 const_iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Inc
;	COMDAT ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++, COMDAT

; 131  :                         {_Inc();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Inc

; 132  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??0CPerson@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CPerson@@QAE@ABV0@@Z PROC NEAR			; CPerson::CPerson, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8a 51 04	 mov	 dl, BYTE PTR [ecx+4]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl
  00013	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00016	83 c0 08	 add	 eax, 8
  00019	50		 push	 eax
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 08	 add	 ecx, 8
  00020	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CPerson@@6B@ ; CPerson::`vftable'
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
??0CPerson@@QAE@ABV0@@Z ENDP				; CPerson::CPerson
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
PUBLIC	??M@YG_NABVCString@@0@Z				; operator<
;	COMDAT ??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__Y$ = 12
??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z PROC NEAR ; std::less<CString>::operator(), COMDAT

; 86   : 		{return (_X < _Y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??M@YG_NABVCString@@0@Z	; operator<
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z ENDP	; std::less<CString>::operator()
_TEXT	ENDS
;	COMDAT ??M@YG_NABVCString@@0@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??M@YG_NABVCString@@0@Z PROC NEAR			; operator<, COMDAT

; 193  : 	{ return s1.Compare(s2) < 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _s2$[ebp]
  00006	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0000b	50		 push	 eax
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  00014	33 c9		 xor	 ecx, ecx
  00016	85 c0		 test	 eax, eax
  00018	0f 9c c1	 setl	 cl
  0001b	8a c1		 mov	 al, cl
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??M@YG_NABVCString@@0@Z ENDP				; operator<
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@VCPerson@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?deallocate@?$allocator@VCPerson@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CPerson>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@VCPerson@@@std@@QAEXPAXI@Z ENDP	; std::allocator<CPerson>::deallocate
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color, COMDAT

; 36   :                 {return ((_Rbref)(*_P)._Color); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 1c	 add	 eax, 28			; 0000001cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
_TEXT	ENDS
PUBLIC	??R_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QBEABVCString@@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn::operator()
;	COMDAT ?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z
_TEXT	SEGMENT
$T161431 = -4
__P$ = 8
?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Key, COMDAT

; 38   :                 {return (_Kfn()(_Value(_P))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAU?$pair@$$CBVCString@@VCPerson@@@2@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Value
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T161431[ebp]
  00014	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QBEABVCString@@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn::operator()
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Key
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left, COMDAT

; 40   :                 {return ((_Nodepref)(*_P)._Left); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent, COMDAT

; 42   :                 {return ((_Nodepref)(*_P)._Parent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right, COMDAT

; 44   :                 {return ((_Nodepref)(*_P)._Right); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEIXZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::size, COMDAT

; 206  :                 {return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEIXZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::size
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Insert
PUBLIC	??Fiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator--
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161456 DD	019930520H
	DD	01H
	DD	FLAT:$T161458
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161458 DD	0ffffffffH
	DD	FLAT:$L161454
xdata$x	ENDS
;	COMDAT ?insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -112
__X$ = -24
__Y$ = -28
__Ans$ = -20
_Lk$157300 = -32
__P$ = -16
$T161437 = -36
$T161440 = -44
$T161441 = -48
$T161442 = -52
$T161443 = -56
$T161444 = -60
$T161445 = -68
$T161446 = -72
$T161447 = -76
$T161448 = -80
$T161449 = -88
$T161450 = -92
$T161451 = -96
$T161452 = -104
$T161453 = -108
__$EHRec$ = -12
__V$ = 12
?insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::insert, COMDAT

; 216  :                 {_Nodeptr _X = _Root();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161457
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 68	 sub	 esp, 104		; 00000068H
  0001b	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax

; 217  :                 _Nodeptr _Y = _Head;

  0002b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	89 55 e4	 mov	 DWORD PTR __Y$[ebp], edx

; 218  :                 bool _Ans = true;

  00034	c6 45 ec 01	 mov	 BYTE PTR __Ans$[ebp], 1

; 219  :                 { _Lockit Lk;

  00038	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$157300[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L157302:

; 220  :                         while (_X != _Nil)

  00048	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  0004b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00051	74 67		 je	 SHORT $L157303

; 221  :                                 {_Y = _X;

  00053	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  00056	89 4d e4	 mov	 DWORD PTR __Y$[ebp], ecx

; 222  :                                 _Ans = key_compare(_Kfn()(_V), _Key(_X));

  00059	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Key
  00062	83 c4 04	 add	 esp, 4
  00065	50		 push	 eax
  00066	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d dc	 lea	 ecx, DWORD PTR $T161437[ebp]
  0006d	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QBEABVCString@@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn::operator()
  00072	50		 push	 eax
  00073	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 01	 add	 ecx, 1
  00079	e8 00 00 00 00	 call	 ??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z ; std::less<CString>::operator()
  0007e	88 45 ec	 mov	 BYTE PTR __Ans$[ebp], al

; 223  :                                 _X = _Ans ? _Left(_X) : _Right(_X); }

  00081	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	85 c9		 test	 ecx, ecx
  0008c	74 13		 je	 SHORT $L161438
  0008e	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 00		 mov	 eax, DWORD PTR [eax]
  0009c	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0009f	eb 11		 jmp	 SHORT $L161439
$L161438:
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	89 55 8c	 mov	 DWORD PTR -116+[ebp], edx
$L161439:
  000b2	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  000b5	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax
  000b8	eb 8e		 jmp	 SHORT $L157302
$L157303:

; 224  :                 }

  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$157300[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 225  :                 if (_Multi)

  000ca	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  000d2	85 d2		 test	 edx, edx
  000d4	74 3e		 je	 SHORT $L157305

; 226  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  000d6	c6 45 d0 01	 mov	 BYTE PTR $T161441[ebp], 1
  000da	8d 45 d0	 lea	 eax, DWORD PTR $T161441[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d cc	 lea	 ecx, DWORD PTR $T161442[ebp]
  000ed	51		 push	 ecx
  000ee	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Insert
  000f6	50		 push	 eax
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T161440[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	89 11		 mov	 DWORD PTR [ecx], edx
  00109	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0010f	e9 16 01 00 00	 jmp	 $L157296
$L157305:

; 227  :                 iterator _P = iterator(_Y);

  00114	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00117	52		 push	 edx
  00118	8d 4d c8	 lea	 ecx, DWORD PTR $T161443[ebp]
  0011b	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator
  00120	8b 00		 mov	 eax, DWORD PTR [eax]
  00122	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax

; 228  :                 if (!_Ans)

  00125	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00128	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0012e	85 c9		 test	 ecx, ecx
  00130	75 02		 jne	 SHORT $L157315

; 230  :                 else if (_P == begin())

  00132	eb 64		 jmp	 SHORT $L157326
$L157315:
  00134	8d 55 c4	 lea	 edx, DWORD PTR $T161444[ebp]
  00137	52		 push	 edx
  00138	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::begin
  00140	50		 push	 eax
  00141	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00144	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator==
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	85 c0		 test	 eax, eax
  00150	74 3e		 je	 SHORT $L157318

; 231  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  00152	c6 45 b8 01	 mov	 BYTE PTR $T161446[ebp], 1
  00156	8d 45 b8	 lea	 eax, DWORD PTR $T161446[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00161	52		 push	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  00165	50		 push	 eax
  00166	8d 4d b4	 lea	 ecx, DWORD PTR $T161447[ebp]
  00169	51		 push	 ecx
  0016a	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Insert
  00172	50		 push	 eax
  00173	8d 4d bc	 lea	 ecx, DWORD PTR $T161445[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00180	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00183	89 11		 mov	 DWORD PTR [ecx], edx
  00185	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00188	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018b	e9 9a 00 00 00	 jmp	 $L157296
$L157318:

; 233  :                         --_P;

  00190	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00193	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator--
$L157326:

; 234  :                 if (key_compare(_Key(_P._Mynode()), _Kfn()(_V)))

  00198	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  0019b	52		 push	 edx
  0019c	8d 4d b0	 lea	 ecx, DWORD PTR $T161448[ebp]
  0019f	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QBEABVCString@@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn::operator()
  001a4	50		 push	 eax
  001a5	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Mynode
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Key
  001b3	83 c4 04	 add	 esp, 4
  001b6	50		 push	 eax
  001b7	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	e8 00 00 00 00	 call	 ??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z ; std::less<CString>::operator()
  001c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c7	85 c0		 test	 eax, eax
  001c9	74 3b		 je	 SHORT $L157328

; 235  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  001cb	c6 45 a4 01	 mov	 BYTE PTR $T161450[ebp], 1
  001cf	8d 45 a4	 lea	 eax, DWORD PTR $T161450[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  001d6	51		 push	 ecx
  001d7	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  001da	52		 push	 edx
  001db	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  001de	50		 push	 eax
  001df	8d 4d a0	 lea	 ecx, DWORD PTR $T161451[ebp]
  001e2	51		 push	 ecx
  001e3	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Insert
  001eb	50		 push	 eax
  001ec	8d 4d a8	 lea	 ecx, DWORD PTR $T161449[ebp]
  001ef	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001fc	89 11		 mov	 DWORD PTR [ecx], edx
  001fe	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00201	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00204	eb 24		 jmp	 SHORT $L157296
$L157328:

; 236  :                 return (_Pairib(_P, false)); }

  00206	c6 45 94 00	 mov	 BYTE PTR $T161453[ebp], 0
  0020a	8d 55 94	 lea	 edx, DWORD PTR $T161453[ebp]
  0020d	52		 push	 edx
  0020e	8d 45 f0	 lea	 eax, DWORD PTR __P$[ebp]
  00211	50		 push	 eax
  00212	8d 4d 98	 lea	 ecx, DWORD PTR $T161452[ebp]
  00215	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00222	89 08		 mov	 DWORD PTR [eax], ecx
  00224	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00227	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L157296:
  0022a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161454:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$157300[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161457:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161456
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@2@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::insert
PUBLIC	?_Lbound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lbound
;	COMDAT ?lower_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z
_TEXT	SEGMENT
__Kv$ = 12
___$ReturnUdt$ = 8
_this$ = -8
$T161462 = -4
?lower_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::lower_bound, COMDAT

; 402  :                 {return (iterator(_Lbound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lbound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T161462[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?lower_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::lower_bound
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::upper_bound
PUBLIC	??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator>
;	COMDAT ?equal_range@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@2@ABVCString@@@Z
_TEXT	SEGMENT
__Kv$ = 12
___$ReturnUdt$ = 8
_this$ = -20
$T161464 = -8
$T161465 = -12
$T161466 = -16
?equal_range@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@2@ABVCString@@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::equal_range, COMDAT

; 410  :                 {return (_Pairii(lower_bound(_Kv), upper_bound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f4	 lea	 ecx, DWORD PTR $T161465[ebp]
  00010	51		 push	 ecx
  00011	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?upper_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::upper_bound
  00019	50		 push	 eax
  0001a	8b 55 0c	 mov	 edx, DWORD PTR __Kv$[ebp]
  0001d	52		 push	 edx
  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T161466[ebp]
  00021	50		 push	 eax
  00022	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::lower_bound
  0002a	50		 push	 eax
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR $T161464[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator>
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	89 08		 mov	 DWORD PTR [eax], ecx
  0003d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00040	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?equal_range@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@2@ABVCString@@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::equal_range
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161470 DD	019930520H
	DD	01H
	DD	FLAT:$T161472
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161472 DD	0ffffffffH
	DD	FLAT:$L161468
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -24
__Lk$ = -20
__Y$ = -16
__$EHRec$ = -12
?_Erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Erase, COMDAT

; 449  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161471
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 450  :                 for (_Nodeptr _Y = _X; _Y != _Nil; _X = _Y)

  0002e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax
  00034	eb 06		 jmp	 SHORT $L157360
$L157361:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00039	89 4d 08	 mov	 DWORD PTR __X$[ebp], ecx
$L157360:
  0003c	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  0003f	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00045	74 4b		 je	 SHORT $L157362

; 451  :                         {_Erase(_Right(_Y));

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Erase

; 452  :                         _Y = _Left(_Y);

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax

; 453  :                         _Destval(&_Value(_X));

  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAU?$pair@$$CBVCString@@VCPerson@@@2@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Value
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Destval

; 454  :                         _Freenode(_X); }}

  00084	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00087	52		 push	 edx
  00088	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Freenode
  00090	eb a4		 jmp	 SHORT $L157361
$L157362:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161468:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161471:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161470
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Erase@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Erase
PUBLIC	?_Buynode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Buynode
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161478 DD	019930520H
	DD	01H
	DD	FLAT:$T161480
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161480 DD	0ffffffffH
	DD	FLAT:$L161476
xdata$x	ENDS
;	COMDAT ?_Init@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -20
__Lk$ = -16
__$EHRec$ = -12
?_Init@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXXZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Init, COMDAT

; 456  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161479
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :                 if (_Nil == 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00035	75 3a		 jne	 SHORT $L157366

; 458  :                         {_Nil = _Buynode(0, _Black);

  00037	6a 01		 push	 1
  00039	6a 00		 push	 0
  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Buynode
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A, eax ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil

; 459  :                         _Left(_Nil) = 0, _Right(_Nil) = 0; }

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00068	83 c4 04	 add	 esp, 4
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L157366:

; 460  :                 ++_Nilrefs;

  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nilrefs@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1IA ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nilrefs
  00077	83 c2 01	 add	 edx, 1
  0007a	89 15 00 00 00
	00		 mov	 DWORD PTR ?_Nilrefs@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1IA, edx ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nilrefs

; 461  :                 _Head = _Buynode(_Nil, _Red), _Size = 0;

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Buynode
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00096	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00099	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 462  :                 _Lmost() = _Head, _Rmost() = _Head; }

  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	89 10		 mov	 DWORD PTR [eax], edx
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost
  000b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	89 10		 mov	 DWORD PTR [eax], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161476:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161479:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161478
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Init@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXXZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Init
;	COMDAT ?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost, COMDAT

; 524  :                 {return (_Left(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161487 DD	019930520H
	DD	01H
	DD	FLAT:$T161489
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161489 DD	0ffffffffH
	DD	FLAT:$L161485
xdata$x	ENDS
;	COMDAT ?_Lrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -24
__Lk$ = -20
__Y$ = -16
__$EHRec$ = -12
?_Lrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lrotate, COMDAT

; 528  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161488
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 529  :                 _Nodeptr _Y = _Right(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 530  :                 _Right(_X) = _Left(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 531  :                 if (_Left(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00072	74 1c		 je	 SHORT $L157373

; 532  :                         _Parent(_Left(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L157373:

; 533  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 534  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L157374

; 535  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 536  :                 else if (_X == _Left(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L157377
$L157374:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L157376

; 537  :                         _Left(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 538  :                 else

  00106	eb 1c		 jmp	 SHORT $L157377
$L157376:

; 539  :                         _Right(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L157377:

; 540  :                 _Left(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161485:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161488:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161487
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lrotate
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161496 DD	019930520H
	DD	01H
	DD	FLAT:$T161498
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161498 DD	0ffffffffH
	DD	FLAT:$L161494
xdata$x	ENDS
;	COMDAT ?_Max@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
__Lk$ = -16
$T161493 = -20
__$EHRec$ = -12
?_Max@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Max, COMDAT

; 543  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161497
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L157381:

; 544  :                 while (_Right(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  0003f	74 13		 je	 SHORT $L157382

; 545  :                         _P = _Right(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L157381
$L157382:

; 546  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T161493[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T161493[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161494:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161497:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161496
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Max@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Max
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161505 DD	019930520H
	DD	01H
	DD	FLAT:$T161507
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161507 DD	0ffffffffH
	DD	FLAT:$L161503
xdata$x	ENDS
;	COMDAT ?_Min@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
__Lk$ = -16
$T161502 = -20
__$EHRec$ = -12
?_Min@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Min, COMDAT

; 548  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161506
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L157387:

; 549  :                 while (_Left(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  0003f	74 13		 je	 SHORT $L157388

; 550  :                         _P = _Left(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L157387
$L157388:

; 551  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T161502[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T161502[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161503:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161506:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161505
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Min@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Min
;	COMDAT ?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost, COMDAT

; 553  :                 {return (_Right(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root, COMDAT

; 557  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161515 DD	019930520H
	DD	01H
	DD	FLAT:$T161517
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161517 DD	0ffffffffH
	DD	FLAT:$L161513
xdata$x	ENDS
;	COMDAT ?_Rrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -24
__Lk$ = -20
__Y$ = -16
__$EHRec$ = -12
?_Rrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rrotate, COMDAT

; 561  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161516
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :                 _Nodeptr _Y = _Left(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 563  :                 _Left(_X) = _Right(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 564  :                 if (_Right(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00072	74 1c		 je	 SHORT $L157398

; 565  :                         _Parent(_Right(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L157398:

; 566  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 567  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L157399

; 568  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 569  :                 else if (_X == _Right(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L157402
$L157399:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L157401

; 570  :                         _Right(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 571  :                 else

  00106	eb 1c		 jmp	 SHORT $L157402
$L157401:

; 572  :                         _Left(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L157402:

; 573  :                 _Right(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 574  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161513:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161516:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161515
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Rrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rrotate
PUBLIC	?_Destroy@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@@Z ; std::_Destroy
;	COMDAT ?_Destval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
?_Destval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Destval, COMDAT

; 594  :                 {_Destroy(&*_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Destval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Destval
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161524 DD	019930520H
	DD	01H
	DD	FLAT:$T161526
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161526 DD	0ffffffffH
	DD	FLAT:$L161522
xdata$x	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -16
__P$157414 = -20
__$EHRec$ = -12
?_Inc@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Inc, COMDAT

; 104  :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161525
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  :                         if (_Right(_Ptr) != _Nil)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00044	74 20		 je	 SHORT $L157412

; 106  :                                 _Ptr = _Min(_Right(_Ptr));

  00046	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 107  :                         else

  00064	eb 4f		 jmp	 SHORT $L157418
$L157412:

; 109  :                                 while (_Ptr == _Right(_P = _Parent(_Ptr)))

  00066	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d ec	 mov	 DWORD PTR __P$157414[ebp], ecx
  00079	8b 55 ec	 mov	 edx, DWORD PTR __P$157414[ebp]
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00082	83 c4 04	 add	 esp, 4
  00085	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0008c	75 0a		 jne	 SHORT $L157417

; 110  :                                         _Ptr = _P;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __P$157414[ebp]
  00094	89 08		 mov	 DWORD PTR [eax], ecx
  00096	eb ce		 jmp	 SHORT $L157412
$L157417:

; 111  :                                 if (_Right(_Ptr) != _P)

  00098	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	3b 4d ec	 cmp	 ecx, DWORD PTR __P$157414[ebp]
  000ab	74 08		 je	 SHORT $L157418

; 112  :                                         _Ptr = _P; }}

  000ad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __P$157414[ebp]
  000b3	89 02		 mov	 DWORD PTR [edx], eax
$L157418:
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161522:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161525:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161524
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Inc@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Inc
;	COMDAT ?_Mynode@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Mynode, COMDAT

; 114  :                         {return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBEPAU_Node@23@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator, COMDAT

; 124  :                 iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@AB_N@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@AB_N@Z ENDP ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,bool>
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QBEABVCString@@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??R_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QBEABVCString@@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z PROC NEAR ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn::operator(), COMDAT

; 26   : 		{return (_X.first); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??R_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QBEABVCString@@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ENDP ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn::operator()
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Ubound
;	COMDAT ?upper_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z
_TEXT	SEGMENT
__Kv$ = 12
$T161534 = -4
___$ReturnUdt$ = 8
_this$ = -8
?upper_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::upper_bound, COMDAT

; 406  :                 {return (iterator(_Ubound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Ubound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Ubound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T161534[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?upper_bound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE?AViterator@12@ABVCString@@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Consval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@ABU32@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Consval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161540 DD	019930520H
	DD	01H
	DD	FLAT:$T161542
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161542 DD	0ffffffffH
	DD	FLAT:$L161538
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z
_TEXT	SEGMENT
__X$ = 12
__Y$ = 16
__V$ = 20
$T161536 = -24
$T161537 = -28
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -32
__Lk$ = -20
__Z$ = -16
?_Insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Insert, COMDAT

; 464  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161541
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	56		 push	 esi
  0001c	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 465  :                 _Nodeptr _Z = _Buynode(_Y, _Red);

  0002f	6a 00		 push	 0
  00031	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  00034	50		 push	 eax
  00035	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Buynode
  0003d	89 45 f0	 mov	 DWORD PTR __Z$[ebp], eax

; 466  :                 _Left(_Z) = _Nil, _Right(_Z) = _Nil;

  00040	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00052	89 10		 mov	 DWORD PTR [eax], edx
  00054	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00066	89 08		 mov	 DWORD PTR [eax], ecx

; 467  :                 _Consval(&_Value(_Z), _V);

  00068	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAU?$pair@$$CBVCString@@VCPerson@@@2@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Value
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Consval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@ABU32@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Consval

; 468  :                 ++_Size;

  00081	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00087	83 c2 01	 add	 edx, 1
  0008a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 470  :                         || key_compare(_Kfn()(_V), _Key(_Y)))

  00090	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00096	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00099	74 39		 je	 SHORT $L157512
  0009b	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0009e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  000a4	75 2e		 jne	 SHORT $L157512
  000a6	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Key
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  000b6	52		 push	 edx
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR $T161536[ebp]
  000ba	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@std@@QBEABVCString@@ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ; std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn::operator()
  000bf	50		 push	 eax
  000c0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 01	 add	 ecx, 1
  000c6	e8 00 00 00 00	 call	 ??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z ; std::less<CString>::operator()
  000cb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000d0	85 c0		 test	 eax, eax
  000d2	74 56		 je	 SHORT $L157511
$L157512:

; 471  :                         {_Left(_Y) = _Z;

  000d4	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000e3	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :                         if (_Y == _Head)

  000e5	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000eb	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000ee	75 1c		 jne	 SHORT $L157513

; 473  :                                 {_Root() = _Z;

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx

; 474  :                                 _Rmost() = _Z; }

  000fd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost
  00105	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00108	89 10		 mov	 DWORD PTR [eax], edx

; 475  :                         else if (_Y == _Lmost())

  0010a	eb 1c		 jmp	 SHORT $L157515
$L157513:
  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost
  00114	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00117	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00119	75 0d		 jne	 SHORT $L157515

; 476  :                                 _Lmost() = _Z; }

  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lmost
  00123	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00126	89 10		 mov	 DWORD PTR [eax], edx
$L157515:

; 477  :                 else

  00128	eb 2d		 jmp	 SHORT $L157517
$L157511:

; 478  :                         {_Right(_Y) = _Z;

  0012a	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00139	89 08		 mov	 DWORD PTR [eax], ecx

; 479  :                         if (_Y == _Rmost())

  0013b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost
  00143	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00146	3b 10		 cmp	 edx, DWORD PTR [eax]
  00148	75 0d		 jne	 SHORT $L157517

; 480  :                                 _Rmost() = _Z; }

  0014a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rmost
  00152	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00155	89 08		 mov	 DWORD PTR [eax], ecx
$L157517:

; 481  :                 for (_X = _Z; _X != _Root()

  00157	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  0015a	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx
$L157519:

; 482  :                         && _Color(_Parent(_X)) == _Red; )

  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00168	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016a	0f 84 08 03 00
	00		 je	 $L157520
  00170	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00179	83 c4 04	 add	 esp, 4
  0017c	8b 00		 mov	 eax, DWORD PTR [eax]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00184	83 c4 04	 add	 esp, 4
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	0f 85 e8 02 00
	00		 jne	 $L157520

; 483  :                         if (_Parent(_X) == _Left(_Parent(_Parent(_X))))

  00190	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00199	83 c4 04	 add	 esp, 4
  0019c	8b f0		 mov	 esi, eax
  0019e	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  001a7	83 c4 04	 add	 esp, 4
  001aa	8b 00		 mov	 eax, DWORD PTR [eax]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  001b2	83 c4 04	 add	 esp, 4
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  001bd	83 c4 04	 add	 esp, 4
  001c0	8b 16		 mov	 edx, DWORD PTR [esi]
  001c2	3b 10		 cmp	 edx, DWORD PTR [eax]
  001c4	0f 85 57 01 00
	00		 jne	 $L157521

; 484  :                                 {_Y = _Right(_Parent(_Parent(_X)));

  001ca	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  001d3	83 c4 04	 add	 esp, 4
  001d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  001de	83 c4 04	 add	 esp, 4
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  001e9	83 c4 04	 add	 esp, 4
  001ec	8b 00		 mov	 eax, DWORD PTR [eax]
  001ee	89 45 10	 mov	 DWORD PTR __Y$[ebp], eax

; 485  :                                 if (_Color(_Y) == _Red)

  001f1	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  001fa	83 c4 04	 add	 esp, 4
  001fd	83 38 00	 cmp	 DWORD PTR [eax], 0
  00200	75 78		 jne	 SHORT $L157522

; 486  :                                         {_Color(_Parent(_X)) = _Black;

  00202	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0020b	83 c4 04	 add	 esp, 4
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00216	83 c4 04	 add	 esp, 4
  00219	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 487  :                                         _Color(_Y) = _Black;

  0021f	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00228	83 c4 04	 add	 esp, 4
  0022b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 488  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00231	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0023a	83 c4 04	 add	 esp, 4
  0023d	8b 00		 mov	 eax, DWORD PTR [eax]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00245	83 c4 04	 add	 esp, 4
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00250	83 c4 04	 add	 esp, 4
  00253	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 489  :                                         _X = _Parent(_Parent(_X)); }

  00259	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00262	83 c4 04	 add	 esp, 4
  00265	8b 00		 mov	 eax, DWORD PTR [eax]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0026d	83 c4 04	 add	 esp, 4
  00270	8b 08		 mov	 ecx, DWORD PTR [eax]
  00272	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 490  :                                 else

  00275	e9 a2 00 00 00	 jmp	 $L157523
$L157522:

; 491  :                                         {if (_X == _Right(_Parent(_X)))

  0027a	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 00		 mov	 eax, DWORD PTR [eax]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0028e	83 c4 04	 add	 esp, 4
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00294	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00296	75 1d		 jne	 SHORT $L157524

; 492  :                                                 {_X = _Parent(_X);

  00298	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0029b	52		 push	 edx
  0029c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 00		 mov	 eax, DWORD PTR [eax]
  002a6	89 45 0c	 mov	 DWORD PTR __X$[ebp], eax

; 493  :                                                 _Lrotate(_X); }

  002a9	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002ac	51		 push	 ecx
  002ad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lrotate
$L157524:

; 494  :                                         _Color(_Parent(_X)) = _Black;

  002b5	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  002be	83 c4 04	 add	 esp, 4
  002c1	8b 00		 mov	 eax, DWORD PTR [eax]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  002c9	83 c4 04	 add	 esp, 4
  002cc	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 495  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  002d2	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  002db	83 c4 04	 add	 esp, 4
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  002e6	83 c4 04	 add	 esp, 4
  002e9	8b 00		 mov	 eax, DWORD PTR [eax]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  002f1	83 c4 04	 add	 esp, 4
  002f4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 496  :                                         _Rrotate(_Parent(_Parent(_X))); }}

  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00303	83 c4 04	 add	 esp, 4
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0030e	83 c4 04	 add	 esp, 4
  00311	8b 00		 mov	 eax, DWORD PTR [eax]
  00313	50		 push	 eax
  00314	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rrotate
$L157523:

; 497  :                         else

  0031c	e9 52 01 00 00	 jmp	 $L157527
$L157521:

; 498  :                                 {_Y = _Left(_Parent(_Parent(_X)));

  00321	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0032a	83 c4 04	 add	 esp, 4
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00340	83 c4 04	 add	 esp, 4
  00343	8b 08		 mov	 ecx, DWORD PTR [eax]
  00345	89 4d 10	 mov	 DWORD PTR __Y$[ebp], ecx

; 499  :                                 if (_Color(_Y) == _Red)

  00348	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  0034b	52		 push	 edx
  0034c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00351	83 c4 04	 add	 esp, 4
  00354	83 38 00	 cmp	 DWORD PTR [eax], 0
  00357	75 78		 jne	 SHORT $L157526

; 500  :                                         {_Color(_Parent(_X)) = _Black;

  00359	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00362	83 c4 04	 add	 esp, 4
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  0036d	83 c4 04	 add	 esp, 4
  00370	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 501  :                                         _Color(_Y) = _Black;

  00376	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00379	52		 push	 edx
  0037a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  0037f	83 c4 04	 add	 esp, 4
  00382	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 502  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00388	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00391	83 c4 04	 add	 esp, 4
  00394	8b 08		 mov	 ecx, DWORD PTR [eax]
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0039c	83 c4 04	 add	 esp, 4
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  003a7	83 c4 04	 add	 esp, 4
  003aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 503  :                                         _X = _Parent(_Parent(_X)); }

  003b0	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	51		 push	 ecx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 10		 mov	 edx, DWORD PTR [eax]
  003c9	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx

; 504  :                                 else

  003cc	e9 a2 00 00 00	 jmp	 $L157527
$L157526:

; 505  :                                         {if (_X == _Left(_Parent(_X)))

  003d1	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  003da	83 c4 04	 add	 esp, 4
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	51		 push	 ecx
  003e0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  003e5	83 c4 04	 add	 esp, 4
  003e8	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  003eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ed	75 1d		 jne	 SHORT $L157528

; 506  :                                                 {_X = _Parent(_X);

  003ef	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  003f8	83 c4 04	 add	 esp, 4
  003fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fd	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 507  :                                                 _Rrotate(_X); }

  00400	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00403	52		 push	 edx
  00404	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00407	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Rrotate
$L157528:

; 508  :                                         _Color(_Parent(_X)) = _Black;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00415	83 c4 04	 add	 esp, 4
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00420	83 c4 04	 add	 esp, 4
  00423	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 509  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00429	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00432	83 c4 04	 add	 esp, 4
  00435	8b 00		 mov	 eax, DWORD PTR [eax]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0043d	83 c4 04	 add	 esp, 4
  00440	8b 08		 mov	 ecx, DWORD PTR [eax]
  00442	51		 push	 ecx
  00443	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00448	83 c4 04	 add	 esp, 4
  0044b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 510  :                                         _Lrotate(_Parent(_Parent(_X))); }}

  00451	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0045a	83 c4 04	 add	 esp, 4
  0045d	8b 00		 mov	 eax, DWORD PTR [eax]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00465	83 c4 04	 add	 esp, 4
  00468	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046a	51		 push	 ecx
  0046b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lrotate
$L157527:
  00473	e9 e5 fc ff ff	 jmp	 $L157519
$L157520:

; 511  :                 _Color(_Root()) = _Black;

  00478	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  00480	8b 10		 mov	 edx, DWORD PTR [eax]
  00482	52		 push	 edx
  00483	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00488	83 c4 04	 add	 esp, 4
  0048b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 512  :                 return (iterator(_Z)); }

  00491	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e4	 lea	 ecx, DWORD PTR $T161537[ebp]
  00498	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::iterator
  0049d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  004a2	89 0a		 mov	 DWORD PTR [edx], ecx
  004a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ab	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  004b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	5e		 pop	 esi
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161538:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161541:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161540
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCString@@VCPerson@@@2@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Insert
PUBLIC	?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161549 DD	019930520H
	DD	01H
	DD	FLAT:$T161551
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161551 DD	0ffffffffH
	DD	FLAT:$L161547
xdata$x	ENDS
;	COMDAT ?_Lbound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z
_TEXT	SEGMENT
__Kv$ = 8
$T161546 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
?_Lbound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lbound, COMDAT

; 514  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161550
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 515  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 516  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L157536:

; 517  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  0004d	74 51		 je	 SHORT $L157537

; 518  :                         if (key_compare(_Key(_X), _Kv))

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Key
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z ; std::less<CString>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 13		 je	 SHORT $L157538

; 519  :                                 _X = _Right(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx

; 520  :                         else

  00085	eb 17		 jmp	 SHORT $L157539
$L157538:

; 521  :                                 _Y = _X, _X = _Left(_X);

  00087	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0008a	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L157539:
  0009e	eb a4		 jmp	 SHORT $L157536
$L157537:

; 522  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T161546[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T161546[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161547:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161550:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161549
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lbound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Lbound
PUBLIC	?_Charalloc@?$allocator@VCPerson@@@std@@QAEPADI@Z ; std::allocator<CPerson>::_Charalloc
;	COMDAT ?_Buynode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT
__Parg$ = 8
__Carg$ = 12
_this$ = -8
__S$ = -4
?_Buynode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Buynode, COMDAT

; 586  :                 {_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  :                         1 * sizeof (_Node));

  00009	6a 20		 push	 32			; 00000020H
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@VCPerson@@@std@@QAEPADI@Z ; std::allocator<CPerson>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 588  :                 _Parent(_S) = _Parg;

  00016	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 589  :                 _Color(_S) = _Carg;

  00027	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00030	83 c4 04	 add	 esp, 4
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Carg$[ebp]
  00036	89 08		 mov	 DWORD PTR [eax], ecx

; 590  :                 return (_S); }

  00038	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?_Buynode@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Buynode
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::const_iterator, COMDAT

; 65   :                 const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Dec
;	COMDAT ??Fiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator--, COMDAT

; 138  :                         {_Dec();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Dec

; 139  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator--
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z PROC NEAR ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 0c	 mov	 eax, DWORD PTR __V2$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z ENDP ; std::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator>::pair<std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator,std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator>
_TEXT	ENDS
PUBLIC	?_Allocate@std@@YAPADHPAD@Z			; std::_Allocate
;	COMDAT ?_Charalloc@?$allocator@VCPerson@@@std@@QAEPADI@Z
_TEXT	SEGMENT
__N$ = 8
_this$ = -4
?_Charalloc@?$allocator@VCPerson@@@std@@QAEPADI@Z PROC NEAR ; std::allocator<CPerson>::_Charalloc, COMDAT

; 61   : 		{return (_Allocate((difference_type)_N,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 			(char _FARQ *)0)); }

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPADHPAD@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Charalloc@?$allocator@VCPerson@@@std@@QAEPADI@Z ENDP	; std::allocator<CPerson>::_Charalloc
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root, COMDAT

; 559  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEAAPAU_Node@12@XZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161564 DD	019930520H
	DD	01H
	DD	FLAT:$T161566
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161566 DD	0ffffffffH
	DD	FLAT:$L161562
xdata$x	ENDS
;	COMDAT ?_Ubound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z
_TEXT	SEGMENT
__Kv$ = 8
$T161561 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
?_Ubound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Ubound, COMDAT

; 576  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161565
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 577  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 578  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L157605:

; 579  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  0004d	74 51		 je	 SHORT $L157606

; 580  :                         if (key_compare(_Kv, _Key(_X)))

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAABVCString@@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Key
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 55 08	 mov	 edx, DWORD PTR __Kv$[ebp]
  0005f	52		 push	 edx
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@VCString@@@std@@QBE_NABVCString@@0@Z ; std::less<CString>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 19		 je	 SHORT $L157607

; 581  :                                 _Y = _X, _X = _Left(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00083	83 c4 04	 add	 esp, 4
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 582  :                         else

  0008b	eb 11		 jmp	 SHORT $L157608
$L157607:

; 583  :                                 _X = _Right(_X);

  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L157608:
  0009e	eb a4		 jmp	 SHORT $L157605
$L157606:

; 584  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T161561[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T161561[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161562:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161565:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161564
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Ubound@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IBEPAU_Node@12@ABVCString@@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Ubound
PUBLIC	?_Construct@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@ABU21@@Z ; std::_Construct
;	COMDAT ?_Consval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@ABU32@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
_this$ = -4
?_Consval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@ABU32@@Z PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Consval, COMDAT

; 592  :                 {_Construct(&*_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@ABU21@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Consval@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@IAEXPAU?$pair@$$CBVCString@@VCPerson@@@2@ABU32@@Z ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Consval
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161573 DD	019930520H
	DD	01H
	DD	FLAT:$T161575
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161575 DD	0ffffffffH
	DD	FLAT:$L161571
xdata$x	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$157625 = -20
?_Dec@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Dec, COMDAT

; 92   :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161574
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :                                 && _Parent(_Parent(_Ptr)) == _Ptr)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Color
  00039	83 c4 04	 add	 esp, 4
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 39		 jne	 SHORT $L157621
  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 02		 mov	 eax, DWORD PTR [edx]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 00		 mov	 eax, DWORD PTR [eax]
  0005f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00061	75 17		 jne	 SHORT $L157621

; 95   :                                 _Ptr = _Right(_Ptr);

  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 11		 mov	 DWORD PTR [ecx], edx

; 96   :                         else if (_Left(_Ptr) != _Nil)

  00078	eb 72		 jmp	 SHORT $L157624
$L157621:
  0007a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  00085	83 c4 04	 add	 esp, 4
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Nil
  00090	74 20		 je	 SHORT $L157623

; 97   :                                 _Ptr = _Max(_Left(_Ptr));

  00092	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?_Max@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Max
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :                         else

  000b0	eb 3a		 jmp	 SHORT $L157624
$L157623:

; 100  :                                 while (_Ptr == _Left(_P = _Parent(_Ptr)))

  000b2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Parent
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ec	 mov	 DWORD PTR __P$157625[ebp], ecx
  000c5	8b 55 ec	 mov	 edx, DWORD PTR __P$157625[ebp]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::_Left
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d8	75 0a		 jne	 SHORT $L157628

; 101  :                                         _Ptr = _P;

  000da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __P$157625[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx
  000e2	eb ce		 jmp	 SHORT $L157623
$L157628:

; 102  :                                 _Ptr = _P; }}

  000e4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 45 ec	 mov	 eax, DWORD PTR __P$157625[ebp]
  000ea	89 02		 mov	 DWORD PTR [edx], eax
$L157624:
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161571:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161574:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161573
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Dec@const_iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEXXZ ENDP ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::const_iterator::_Dec
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
__Tmp$ = -4
?swap@std@@YAXAAW4_Redbl@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z PROC NEAR ; std::swap, COMDAT

; 100  : 	{_Ty _Tmp = _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 101  : 	_X = _Y, _Y = _Tmp; }

  0000c	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Y$[ebp]
  00019	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?swap@std@@YAXAAW4_Redbl@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0@Z ENDP ; std::swap
_TEXT	ENDS
PUBLIC	?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCString@@VCPerson@@@2@H@1@@Z ; std::_Iter_cat
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAI@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
$T161580 = -4
?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAI@Z PROC NEAR ; std::_Distance, COMDAT

; 106  : 	{_Distance(_F, _L, _N, _Iter_cat(_F)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8d 45 08	 lea	 eax, DWORD PTR __F$[ebp]
  00007	50		 push	 eax
  00008	8d 4d fc	 lea	 ecx, DWORD PTR $T161580[ebp]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCString@@VCPerson@@@2@H@1@@Z ; std::_Iter_cat
  00011	83 c4 08	 add	 esp, 8
  00014	8a 10		 mov	 dl, BYTE PTR [eax]
  00016	52		 push	 edx
  00017	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAI@Z ENDP ; std::_Distance
_TEXT	ENDS
PUBLIC	??_G?$pair@$$CBVCString@@VCPerson@@@std@@QAEPAXI@Z ; std::pair<CString const ,CPerson>::`scalar deleting destructor'
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@@Z
_TEXT	SEGMENT
__P$ = 8
?_Destroy@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@@Z PROC NEAR ; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a 00		 push	 0
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00008	e8 00 00 00 00	 call	 ??_G?$pair@$$CBVCString@@VCPerson@@@std@@QAEPAXI@Z ; std::pair<CString const ,CPerson>::`scalar deleting destructor'
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?_Destroy@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@@Z ENDP ; std::_Destroy
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT
__N$ = 8
?_Allocate@std@@YAPADHPAD@Z PROC NEAR			; std::_Allocate, COMDAT

; 27   : 	{if (_N < 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 08 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	7d 07		 jge	 SHORT $L158088

; 28   : 		_N = 0;

  00009	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0
$L158088:

; 30   : 		(_SIZT)_N * sizeof (_Ty))); }

  00010	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00019	83 c4 04	 add	 esp, 4
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Allocate@std@@YAPADHPAD@Z ENDP			; std::_Allocate
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABU01@@Z ; std::pair<CString const ,CPerson>::pair<CString const ,CPerson>
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xmemory
xdata$x	SEGMENT
$T161590 DD	019930520H
	DD	01H
	DD	FLAT:$T161592
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161592 DD	0ffffffffH
	DD	FLAT:$L161588
xdata$x	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@ABU21@@Z
_TEXT	SEGMENT
$T161584 = -16
$T161585 = -20
__$EHRec$ = -12
__P$ = 8
__V$ = 12
?_Construct@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@ABU21@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161591
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001e	50		 push	 eax
  0001f	6a 10		 push	 16			; 00000010H
  00021	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00026	83 c4 08	 add	 esp, 8
  00029	89 45 ec	 mov	 DWORD PTR $T161585[ebp], eax
  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00033	83 7d ec 00	 cmp	 DWORD PTR $T161585[ebp], 0
  00037	74 11		 je	 SHORT $L161586
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR $T161585[ebp]
  00040	e8 00 00 00 00	 call	 ??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABU01@@Z ; std::pair<CString const ,CPerson>::pair<CString const ,CPerson>
  00045	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  00048	eb 07		 jmp	 SHORT $L161587
$L161586:
  0004a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L161587:
  00051	8b 55 e8	 mov	 edx, DWORD PTR -24+[ebp]
  00054	89 55 f0	 mov	 DWORD PTR $T161584[ebp], edx
  00057	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161588:
  00000	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ec	 mov	 ecx, DWORD PTR $T161585[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
$L161591:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161590
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Construct@std@@YAXPAU?$pair@$$CBVCString@@VCPerson@@@1@ABU21@@Z ENDP ; std::_Construct
;	COMDAT ??_G?$pair@$$CBVCString@@VCPerson@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_G?$pair@$$CBVCString@@VCPerson@@@std@@QAEPAXI@Z PROC NEAR ; std::pair<CString const ,CPerson>::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$pair@$$CBVCString@@VCPerson@@@std@@QAE@XZ ; std::pair<CString const ,CPerson>::~pair<CString const ,CPerson>
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L158112
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L158112:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$pair@$$CBVCString@@VCPerson@@@std@@QAEPAXI@Z ENDP	; std::pair<CString const ,CPerson>::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T161600 DD	019930520H
	DD	01H
	DD	FLAT:$T161602
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161602 DD	0ffffffffH
	DD	FLAT:$L161597
xdata$x	ENDS
;	COMDAT ??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -16
__$EHRec$ = -12
??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABU01@@Z PROC NEAR ; std::pair<CString const ,CPerson>::pair<CString const ,CPerson>, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161601
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00032	83 c1 04	 add	 ecx, 4
  00035	51		 push	 ecx
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 04	 add	 ecx, 4
  0003c	e8 00 00 00 00	 call	 ??0CPerson@@QAE@ABV0@@Z	; CPerson::CPerson
  00041	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00048	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161597:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00008	c3		 ret	 0
$L161601:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161600
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0?$pair@$$CBVCString@@VCPerson@@@std@@QAE@ABU01@@Z ENDP ; std::pair<CString const ,CPerson>::pair<CString const ,CPerson>
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCString@@VCPerson@@@2@H@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
__IterCatTag$ = -4
__pIterCatTag$ = -8
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCString@@VCPerson@@@2@H@1@@Z PROC NEAR ; std::_Iter_cat, COMDAT

; 88   : 	{_C _IterCatTag;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 89   : 	 _C* _pIterCatTag;
; 90   : 	_pIterCatTag = &_IterCatTag;	// Workaround for C4700 warning

  00006	8d 45 fc	 lea	 eax, DWORD PTR __IterCatTag$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __pIterCatTag$[ebp], eax

; 91   : 	return (_IterCatTag); }

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	8a 55 fc	 mov	 dl, BYTE PTR __IterCatTag$[ebp]
  00012	88 11		 mov	 BYTE PTR [ecx], dl
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCString@@VCPerson@@@2@H@1@@Z ENDP ; std::_Iter_cat
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z PROC NEAR ; std::_Distance, COMDAT

; 118  : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 08		 jmp	 SHORT $L158248
$L158249:
  00005	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00008	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator++
$L158248:
  0000d	8d 45 0c	 lea	 eax, DWORD PTR __L$[ebp]
  00010	50		 push	 eax
  00011	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00014	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CString,std::pair<CString const ,CPerson>,std::map<CString,CPerson,std::less<CString>,std::allocator<CPerson> >::_Kfn,std::less<CString>,std::allocator<CPerson> >::iterator::operator!=
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $L158250

; 119  : 		++_N; }

  00022	8b 4d 10	 mov	 ecx, DWORD PTR __N$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	83 c2 01	 add	 edx, 1
  0002a	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	eb d4		 jmp	 SHORT $L158249
$L158250:
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@VCString@@U?$pair@$$CBVCString@@VCPerson@@@std@@U_Kfn@?$map@VCString@@VCPerson@@U?$less@VCString@@@std@@V?$allocator@VCPerson@@@4@@3@U?$less@VCString@@@3@V?$allocator@VCPerson@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ENDP ; std::_Distance
_TEXT	ENDS
;	COMDAT ??_ECFriendListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT
??_ECFriendListCtrl@@WEA@AEPAXI@Z PROC NEAR		; CFriendListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 40	 sub	 ecx, 64			; 00000040H
  00003	e9 00 00 00 00	 jmp	 ??_ECFriendListCtrl@@UAEPAXI@Z ; CFriendListCtrl::`vector deleting destructor'
??_ECFriendListCtrl@@WEA@AEPAXI@Z ENDP			; CFriendListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECFriendListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECFriendListCtrl@@WHE@AEPAXI@Z PROC NEAR		; CFriendListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECFriendListCtrl@@UAEPAXI@Z ; CFriendListCtrl::`vector deleting destructor'
??_ECFriendListCtrl@@WHE@AEPAXI@Z ENDP			; CFriendListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECFoeListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT
??_ECFoeListCtrl@@WEA@AEPAXI@Z PROC NEAR		; CFoeListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 40	 sub	 ecx, 64			; 00000040H
  00003	e9 00 00 00 00	 jmp	 ??_ECFoeListCtrl@@UAEPAXI@Z ; CFoeListCtrl::`vector deleting destructor'
??_ECFoeListCtrl@@WEA@AEPAXI@Z ENDP			; CFoeListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECFoeListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECFoeListCtrl@@WHE@AEPAXI@Z PROC NEAR		; CFoeListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECFoeListCtrl@@UAEPAXI@Z ; CFoeListCtrl::`vector deleting destructor'
??_ECFoeListCtrl@@WHE@AEPAXI@Z ENDP			; CFoeListCtrl::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ	; CImageList::GetSafeHandle
EXTRN	__imp__SendMessageA@16:NEAR
EXTRN	?FromHandle@CImageList@@SGPAV1@PAU_IMAGELIST@@@Z:NEAR ; CImageList::FromHandle
;	COMDAT ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z
_TEXT	SEGMENT
_pImageList$ = 8
_nImageList$ = 12
_this$ = -4
?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z PROC NEAR ; CListCtrl::SetImageList, COMDAT

; 130  : 	{ ASSERT(::IsWindow(m_hWnd)); return CImageList::FromHandle((HIMAGELIST) ::SendMessage(m_hWnd, LVM_SETIMAGELIST, nImageList, (LPARAM)pImageList->GetSafeHandle())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pImageList$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ ; CImageList::GetSafeHandle
  0000f	50		 push	 eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _nImageList$[ebp]
  00013	50		 push	 eax
  00014	68 03 10 00 00	 push	 4099			; 00001003H
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0001f	52		 push	 edx
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?FromHandle@CImageList@@SGPAV1@PAU_IMAGELIST@@@Z ; CImageList::FromHandle
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ENDP ; CListCtrl::SetImageList
_TEXT	ENDS
;	COMDAT ?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z
_TEXT	SEGMENT
_pfnCompare$ = 8
_dwData$ = 12
_this$ = -4
?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z PROC NEAR	; CListCtrl::SortItems, COMDAT

; 218  : 	{ ASSERT(::IsWindow(m_hWnd)); ASSERT((GetStyle() & LVS_OWNERDATA)==0); return (BOOL) ::SendMessage(m_hWnd, LVM_SORTITEMS, dwData, (LPARAM)pfnCompare); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _pfnCompare$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _dwData$[ebp]
  0000e	51		 push	 ecx
  0000f	68 30 10 00 00	 push	 4144			; 00001030H
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z ENDP		; CListCtrl::SortItems
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ PROC NEAR ; CImageList::GetSafeHandle, COMDAT

; 473  : 	{ return (this == NULL) ? NULL : m_hImageList; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L161614
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00016	eb 09		 jmp	 SHORT $L161615
$L161614:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001e	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
$L161615:
  00021	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ ENDP	; CImageList::GetSafeHandle
_TEXT	ENDS
EXTRN	__imp__ImageList_ReplaceIcon@12:NEAR
;	COMDAT ?Add@CImageList@@QAEHPAUHICON__@@@Z
_TEXT	SEGMENT
_hIcon$ = 8
_this$ = -4
?Add@CImageList@@QAEHPAUHICON__@@@Z PROC NEAR		; CImageList::Add, COMDAT

; 485  : 	{ ASSERT(m_hImageList != NULL); return ImageList_AddIcon(m_hImageList, hIcon); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _hIcon$[ebp]
  0000a	50		 push	 eax
  0000b	6a ff		 push	 -1
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00013	52		 push	 edx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_ReplaceIcon@12
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?Add@CImageList@@QAEHPAUHICON__@@@Z ENDP		; CImageList::Add
_TEXT	ENDS
;	COMDAT ?LimitText@CRichEditCtrl@@QAEXJ@Z
_TEXT	SEGMENT
_nChars$ = 8
_this$ = -4
?LimitText@CRichEditCtrl@@QAEXJ@Z PROC NEAR		; CRichEditCtrl::LimitText, COMDAT

; 642  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_EXLIMITTEXT, 0, nChars); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _nChars$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 35 04 00 00	 push	 1077			; 00000435H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?LimitText@CRichEditCtrl@@QAEXJ@Z ENDP			; CRichEditCtrl::LimitText
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__P$ = 12
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 42   : 	{return (_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 45   : 	{return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_C@_00A@?$AA@					; `string'
PUBLIC	??DMemID@@QBEPAXXZ				; MemID::operator*
;	COMDAT ??_C@_00A@?$AA@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\textid.hpp
_BSS	SEGMENT
??_C@_00A@?$AA@ DB 01H DUP (?)				; `string'
_BSS	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4
??DTextID@@QAEPADXZ PROC NEAR				; TextID::operator*, COMDAT

; 24   : 	char	*operator *() { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 		return handle ? (char *)MemID::operator*() : ""; 

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	33 c9		 xor	 ecx, ecx
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	85 c9		 test	 ecx, ecx
  00013	74 0d		 je	 SHORT $L161621
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0001d	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  00020	eb 07		 jmp	 SHORT $L161622
$L161621:
  00022	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
$L161622:
  00029	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 26   : 	}

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??DTextID@@QAEPADXZ ENDP				; TextID::operator*
_TEXT	ENDS
PUBLIC	?GetAddr@MemoryMgr@@QAEPAXG@Z			; MemoryMgr::GetAddr
EXTRN	_memMgr:DWORD
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4
??DMemID@@QBEPAXXZ PROC NEAR				; MemID::operator*, COMDAT

; 98   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		return memMgr->GetAddr(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?GetAddr@MemoryMgr@@QAEPAXG@Z ; MemoryMgr::GetAddr

; 100  : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??DMemID@@QBEPAXXZ ENDP					; MemID::operator*
_TEXT	ENDS
EXTRN	__descPtrTable:BYTE
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -4
?GetAddr@MemoryMgr@@QAEPAXG@Z PROC NEAR			; MemoryMgr::GetAddr, COMDAT

; 462  : 	inline void* MemoryMgr::GetAddr(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : //		CheckValid(theID);
; 464  : 		return _descPtrTable[(unsigned int)((unsigned short)theID)];

  00007	8b 45 08	 mov	 eax, DWORD PTR _theID$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR __descPtrTable[eax*4]

; 465  : 	}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?GetAddr@MemoryMgr@@QAEPAXG@Z ENDP			; MemoryMgr::GetAddr
_TEXT	ENDS
PUBLIC	??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z	; std::bitset<6>::reference::operator=
PUBLIC	??A?$bitset@$05@std@@QAE?AVreference@01@I@Z	; std::bitset<6>::operator[]
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_bValue$ = 8
_this$ = -12
$T161627 = -8
?SetTransient@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetTransient, COMDAT

; 150  : 	void SetTransient ( bool bValue ) { m_state[sknWndTransient] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 04		 push	 4
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T161627[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetTransient@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetTransient
_TEXT	ENDS
PUBLIC	??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z	; std::bitset<6>::reference::reference
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
__P$ = 12
$T161629 = -8
___$ReturnUdt$ = 8
_this$ = -12
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z PROC NEAR	; std::bitset<6>::operator[], COMDAT

; 54   : 		{return (reference(*this, _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	8d 4d f8	 lea	 ecx, DWORD PTR $T161629[ebp]
  00014	e8 00 00 00 00	 call	 ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ; std::bitset<6>::reference::reference
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx
  00023	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ENDP	; std::bitset<6>::operator[]
_TEXT	ENDS
PUBLIC	?set@?$bitset@$05@std@@QAEAAV12@I_N@Z		; std::bitset<6>::set
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z PROC NEAR	; std::bitset<6>::reference::operator=, COMDAT

; 24   : 			{_Pbs->set(_Off, _X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8a 45 08	 mov	 al, BYTE PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ; std::bitset<6>::set

; 25   : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ENDP	; std::bitset<6>::reference::operator=
_TEXT	ENDS
PUBLIC	?_Xran@?$bitset@$05@std@@ABEXXZ			; std::bitset<6>::_Xran
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__X$ = 12
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z PROC NEAR		; std::bitset<6>::set, COMDAT

; 119  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 06	 cmp	 DWORD PTR __P$[ebp], 6
  0000c	72 08		 jb	 SHORT $L156823

; 120  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$05@std@@ABEXXZ ; std::bitset<6>::_Xran
$L156823:

; 121  : 		if (_X)

  00016	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 31		 je	 SHORT $L156824

; 122  : 			_A[_P / _Nb] |= (_Ty)1 << _P % _Nb;

  00022	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00025	c1 ee 05	 shr	 esi, 5
  00028	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002b	33 d2		 xor	 edx, edx
  0002d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00032	f7 f1		 div	 ecx
  00034	8b ca		 mov	 ecx, edx
  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	d3 e2		 shl	 edx, cl
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00043	0b ca		 or	 ecx, edx
  00045	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00048	c1 ea 05	 shr	 edx, 5
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 123  : 		else

  00051	eb 31		 jmp	 SHORT $L156826
$L156824:

; 124  : 			_A[_P / _Nb] &= ~((_Ty)1 << _P % _Nb);

  00053	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00056	c1 ee 05	 shr	 esi, 5
  00059	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0005c	33 d2		 xor	 edx, edx
  0005e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00063	f7 f1		 div	 ecx
  00065	8b ca		 mov	 ecx, edx
  00067	ba 01 00 00 00	 mov	 edx, 1
  0006c	d3 e2		 shl	 edx, cl
  0006e	f7 d2		 not	 edx
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00076	23 ca		 and	 ecx, edx
  00078	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0007b	c1 ea 05	 shr	 edx, 5
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx
$L156826:

; 125  : 		return (*this); }

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ENDP		; std::bitset<6>::set
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__P$ = 12
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z PROC NEAR	; std::bitset<6>::reference::reference, COMDAT

; 37   : 		reference(bitset<_N>& _X, size_t _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ENDP	; std::bitset<6>::reference::reference
_TEXT	ENDS
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
PUBLIC	??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	__imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0logic_error@std@@QAE@ABV01@@Z:NEAR		; std::logic_error::logic_error
EXTRN	??1out_of_range@std@@UAE@XZ:NEAR		; std::out_of_range::~out_of_range
EXTRN	??0out_of_range@std@@QAE@ABV01@@Z:NEAR		; std::out_of_range::out_of_range
;	COMDAT ??_R0?AVexception@@@8
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\bitset
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT
??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ DB 'invalid bitset'
	DB	'<N> position', 00H				; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T161640 DD	019930520H
	DD	01H
	DD	FLAT:$T161642
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161642 DD	0ffffffffH
	DD	FLAT:$L161638
xdata$x	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT
_this$ = -64
$T161634 = -40
$T161635 = -56
$T161636 = -60
__$EHRec$ = -12
?_Xran@?$bitset@$05@std@@ABEXXZ PROC NEAR		; std::bitset<6>::_Xran, COMDAT

; 250  : 		{_THROW(out_of_range, "invalid bitset<N> position"); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161641
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 c4	 lea	 eax, DWORD PTR $T161636[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
  00027	8d 4d c8	 lea	 ecx, DWORD PTR $T161635[ebp]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8d 4d c8	 lea	 ecx, DWORD PTR $T161635[ebp]
  0003a	51		 push	 ecx
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T161634[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00044	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00049	8d 55 d8	 lea	 edx, DWORD PTR $T161634[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$L157258:
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161638:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T161635[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00009	c3		 ret	 0
$L161641:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161640
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$bitset@$05@std@@ABEXXZ ENDP			; std::bitset<6>::_Xran
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Next, COMDAT

; 275  : 	virtual void Next ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Next
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Previous, COMDAT

; 276  : 	virtual void Previous ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Previous
_TEXT	ENDS
PUBLIC	??_7CDoubleButtonDlg@@6B@			; CDoubleButtonDlg::`vftable'
PUBLIC	??_GCDoubleButtonDlg@@UAEPAXI@Z			; CDoubleButtonDlg::`scalar deleting destructor'
PUBLIC	??_ECDoubleButtonDlg@@UAEPAXI@Z			; CDoubleButtonDlg::`vector deleting destructor'
EXTRN	??0CNoButtonDlg@@QAE@XZ:NEAR			; CNoButtonDlg::CNoButtonDlg
EXTRN	?ExecuteButton@CNoButtonDlg@@UAEXH@Z:NEAR	; CNoButtonDlg::ExecuteButton
EXTRN	?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CNoButtonDlg::GetMessageMap
;	COMDAT ??_7CDoubleButtonDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\genericdlg.hpp
CONST	SEGMENT
??_7CDoubleButtonDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CDoubleButtonDlg::`vftable'
	DD	FLAT:??_ECDoubleButtonDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CNoButtonDlg@@UAEXH@Z
CONST	ENDS
;	COMDAT ??0CDoubleButtonDlg@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CDoubleButtonDlg@@QAE@XZ PROC NEAR			; CDoubleButtonDlg::CDoubleButtonDlg, COMDAT

; 129  : 	CDoubleButtonDlg() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CNoButtonDlg@@QAE@XZ	; CNoButtonDlg::CNoButtonDlg
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDoubleButtonDlg@@6B@ ; CDoubleButtonDlg::`vftable'
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CDoubleButtonDlg@@QAE@XZ ENDP			; CDoubleButtonDlg::CDoubleButtonDlg
_TEXT	ENDS
;	COMDAT ??_GCDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCDoubleButtonDlg@@UAEPAXI@Z PROC NEAR		; CDoubleButtonDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L146716
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L146716:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCDoubleButtonDlg@@UAEPAXI@Z ENDP			; CDoubleButtonDlg::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CNoButtonDlg@@UAE@XZ:NEAR			; CNoButtonDlg::~CNoButtonDlg
;	COMDAT ??1CDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CDoubleButtonDlg@@UAE@XZ PROC NEAR			; CDoubleButtonDlg::~CDoubleButtonDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CNoButtonDlg@@UAE@XZ	; CNoButtonDlg::~CNoButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CDoubleButtonDlg@@UAE@XZ ENDP			; CDoubleButtonDlg::~CDoubleButtonDlg
_TEXT	ENDS
;	COMDAT ?GetItemTextColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT
_this$ = -4
?GetItemTextColor@CSkinListCtrl@@MAEKH@Z PROC NEAR	; CSkinListCtrl::GetItemTextColor, COMDAT

; 90   : 	virtual COLORREF GetItemTextColor( int nItem ) { return colItemText; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [eax+168]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?GetItemTextColor@CSkinListCtrl@@MAEKH@Z ENDP		; CSkinListCtrl::GetItemTextColor
_TEXT	ENDS
;	COMDAT ?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT
_this$ = -4
?GetItemBGColor@CSkinListCtrl@@MAEKH@Z PROC NEAR	; CSkinListCtrl::GetItemBGColor, COMDAT

; 91   : 	virtual COLORREF GetItemBGColor( int nItem ) { return colItemBG; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?GetItemBGColor@CSkinListCtrl@@MAEKH@Z ENDP		; CSkinListCtrl::GetItemBGColor
_TEXT	ENDS
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinBtn@@UAE@XZ PROC NEAR				; CSkinBtn::~CSkinBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinBtn@@UAE@XZ ENDP				; CSkinBtn::~CSkinBtn
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L151724
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L151724:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?SetTabWindow@CTabDlg@@QAEXHPAVCWnd@@@Z:NEAR	; CTabDlg::SetTabWindow
;	COMDAT ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z
_TEXT	SEGMENT
_nID$ = 8
_pWin$ = 12
_this$ = -4
?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z PROC NEAR	; CMainPanelWnd::SetTabWindow, COMDAT

; 260  :     void SetTabWindow( int nID, CWnd *pWin )    { if (m_pTabDlg) m_pTabDlg->SetTabWindow( nID, pWin ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 16		 je	 SHORT $L152685
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pWin$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR _nID$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00024	e8 00 00 00 00	 call	 ?SetTabWindow@CTabDlg@@QAEXHPAVCWnd@@@Z ; CTabDlg::SetTabWindow
$L152685:
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z ENDP	; CMainPanelWnd::SetTabWindow
_TEXT	ENDS
EXTRN	?AlertTab@CTabDlg@@QAEXH@Z:NEAR			; CTabDlg::AlertTab
;	COMDAT ?AlertTab@CMainPanelWnd@@QAEXH@Z
_TEXT	SEGMENT
_nID$ = 8
_this$ = -4
?AlertTab@CMainPanelWnd@@QAEXH@Z PROC NEAR		; CMainPanelWnd::AlertTab, COMDAT

; 262  :     void AlertTab( int nID )                    { if (m_pTabDlg) m_pTabDlg->AlertTab( nID ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 12		 je	 SHORT $L152691
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 8a b0 00 00
	00		 mov	 ecx, DWORD PTR [edx+176]
  00020	e8 00 00 00 00	 call	 ?AlertTab@CTabDlg@@QAEXH@Z ; CTabDlg::AlertTab
$L152691:
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?AlertTab@CMainPanelWnd@@QAEXH@Z ENDP			; CMainPanelWnd::AlertTab
_TEXT	ENDS
;	COMDAT ?get_TabDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?get_TabDisplay@CToonSettings@@QAEHXZ PROC NEAR		; CToonSettings::get_TabDisplay, COMDAT

; 81   : 	BOOL	get_TabDisplay() { return m_bTabDisplay; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 40	 mov	 eax, DWORD PTR [eax+64]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?get_TabDisplay@CToonSettings@@QAEHXZ ENDP		; CToonSettings::get_TabDisplay
_TEXT	ENDS
END
