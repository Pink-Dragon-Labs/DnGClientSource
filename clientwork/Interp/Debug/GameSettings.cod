	TITLE	C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BringWindowToTop@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGlobal@PMachine@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBounds@OCArray@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Data@OCArray@@QAEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ByteAt@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetByte@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetByte@CPackedData@@QAEXHE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutByte@CPackedData@@QAEXE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWord@CPackedData@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutWord@CPackedData@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LongAt@CPackedData@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_AutoAccept@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_LagDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_AltEnter@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_TabDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getCombat_Speed@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getSound_MidiOn@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getSound_MidiVolume@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getSound_SfxOn@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getSound_SfxVolume@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPBI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Zconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Mconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Miterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@Vconst_iterator@12@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@_NV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nw@?$vector@_NV?$allocator@I@std@@@std@@KAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$vector@_NV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@_NV?$allocator@I@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Refresh@CTabDlgBtn@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabDlgBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTabDlgBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSelectedTab@CTabDlg@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMidiBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinToggleBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMidiBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSfxBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSfxBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAcceptBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAcceptBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCLagBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CLagBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAltEnterBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAltEnterBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFullScreenBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFullScreenBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabDispBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTabDispBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpeedBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSpeedBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSetPasswordBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSetPasswordBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGameSettingsDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGameSettingsDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?flip@?$bitset@$04@std@@QAEAAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$04@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$04@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$04@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$04@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTabDispBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTabDlgBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAcceptBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAltEnterBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSfxVolume@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpeedBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CGameSettingsDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMidiBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFullScreenBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CLagBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMidiVolume@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSfxBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSetPasswordBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?g_pGameSettings@@3PAVCGameSettingsDlg@@A	; g_pGameSettings
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
_BSS	SEGMENT
?g_pGameSettings@@3PAVCGameSettingsDlg@@A DD 01H DUP (?) ; g_pGameSettings
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
PUBLIC	??0CSfxVolume@@QAE@XZ				; CSfxVolume::CSfxVolume
PUBLIC	?UpdateMe@CSfxVolume@@UAEXXZ			; CSfxVolume::UpdateMe
PUBLIC	??_7CSfxVolume@@6B@				; CSfxVolume::`vftable'
EXTRN	??0CScrollable@@QAE@XZ:NEAR			; CScrollable::CScrollable
EXTRN	?SetLocation@CScrollable@@UAEXM@Z:NEAR		; CScrollable::SetLocation
EXTRN	?ChangeLocation@CScrollable@@UAEXH@Z:NEAR	; CScrollable::ChangeLocation
EXTRN	?ChangePage@CScrollable@@UAEXH@Z:NEAR		; CScrollable::ChangePage
EXTRN	?SetRange@CScrollable@@UAEXHH@Z:NEAR		; CScrollable::SetRange
EXTRN	?UpdateScrollBar@CScrollable@@UAEXXZ:NEAR	; CScrollable::UpdateScrollBar
;	COMDAT ??_7CSfxVolume@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CSfxVolume@@6B@ DD FLAT:?UpdateMe@CSfxVolume@@UAEXXZ ; CSfxVolume::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CScrollable@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CScrollable@@UAEXXZ
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CSfxVolume@@QAE@XZ PROC NEAR				; CSfxVolume::CSfxVolume

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CScrollable@@QAE@XZ	; CScrollable::CScrollable
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSfxVolume@@6B@ ; CSfxVolume::`vftable'

; 22   : 	m_nMin = 0;

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 23   : 	m_nMax = 127;

  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	c7 42 0c 7f 00
	00 00		 mov	 DWORD PTR [edx+12], 127	; 0000007fH

; 24   : 	
; 25   : 	m_nPageSize = 0;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 26   : }

  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??0CSfxVolume@@QAE@XZ ENDP				; CSfxVolume::CSfxVolume
_TEXT	ENDS
PUBLIC	?getSound_SfxOn@CToonSettings@@QAEHXZ		; CToonSettings::getSound_SfxOn
EXTRN	?setSfxMasterVolume@SoundMgr@@QAEHH@Z:NEAR	; SoundMgr::setSfxMasterVolume
EXTRN	?soundMgr@@3PAVSoundMgr@@A:DWORD		; soundMgr
EXTRN	?setSound_SfxVolume@CToonSettings@@QAEXH@Z:NEAR	; CToonSettings::setSound_SfxVolume
EXTRN	?g_pToonSettings@@3PAVCToonSettings@@A:DWORD	; g_pToonSettings
_TEXT	SEGMENT
_this$ = -4
?UpdateMe@CSfxVolume@@UAEXXZ PROC NEAR			; CSfxVolume::UpdateMe

; 30   : {

  0003d	55		 push	 ebp
  0003e	8b ec		 mov	 ebp, esp
  00040	51		 push	 ecx
  00041	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 31   : 	g_pToonSettings->setSound_SfxVolume( m_nFirstVisibleLine );

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004a	51		 push	 ecx
  0004b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00051	e8 00 00 00 00	 call	 ?setSound_SfxVolume@CToonSettings@@QAEXH@Z ; CToonSettings::setSound_SfxVolume

; 32   : 
; 33   : 	if ( g_pToonSettings->getSound_SfxOn() )

  00056	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0005c	e8 00 00 00 00	 call	 ?getSound_SfxOn@CToonSettings@@QAEHXZ ; CToonSettings::getSound_SfxOn
  00061	85 c0		 test	 eax, eax
  00063	74 12		 je	 SHORT $L153838

; 34   : 		soundMgr->setSfxMasterVolume( m_nFirstVisibleLine );

  00065	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00068	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0006b	50		 push	 eax
  0006c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?soundMgr@@3PAVSoundMgr@@A ; soundMgr
  00072	e8 00 00 00 00	 call	 ?setSfxMasterVolume@SoundMgr@@QAEHH@Z ; SoundMgr::setSfxMasterVolume
$L153838:

; 35   : }

  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
?UpdateMe@CSfxVolume@@UAEXXZ ENDP			; CSfxVolume::UpdateMe
_TEXT	ENDS
PUBLIC	??0CMidiVolume@@QAE@XZ				; CMidiVolume::CMidiVolume
PUBLIC	?UpdateMe@CMidiVolume@@UAEXXZ			; CMidiVolume::UpdateMe
PUBLIC	??_7CMidiVolume@@6B@				; CMidiVolume::`vftable'
;	COMDAT ??_7CMidiVolume@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CMidiVolume@@6B@ DD FLAT:?UpdateMe@CMidiVolume@@UAEXXZ ; CMidiVolume::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CScrollable@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CScrollable@@UAEXXZ
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CMidiVolume@@QAE@XZ PROC NEAR			; CMidiVolume::CMidiVolume

; 38   : {

  0007b	55		 push	 ebp
  0007c	8b ec		 mov	 ebp, esp
  0007e	51		 push	 ecx
  0007f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	e8 00 00 00 00	 call	 ??0CScrollable@@QAE@XZ	; CScrollable::CScrollable
  0008a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMidiVolume@@6B@ ; CMidiVolume::`vftable'

; 39   : 	m_nMin = 0;

  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 40   : 	m_nMax = 127;

  0009d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a0	c7 42 0c 7f 00
	00 00		 mov	 DWORD PTR [edx+12], 127	; 0000007fH

; 41   : 	
; 42   : 	m_nPageSize = 0;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 43   : }

  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
??0CMidiVolume@@QAE@XZ ENDP				; CMidiVolume::CMidiVolume
_TEXT	ENDS
PUBLIC	?getSound_MidiOn@CToonSettings@@QAEHXZ		; CToonSettings::getSound_MidiOn
EXTRN	?setMidiMasterVolume@SoundMgr@@QAEHH@Z:NEAR	; SoundMgr::setMidiMasterVolume
EXTRN	?setSound_MidiVolume@CToonSettings@@QAEXH@Z:NEAR ; CToonSettings::setSound_MidiVolume
_TEXT	SEGMENT
_this$ = -4
?UpdateMe@CMidiVolume@@UAEXXZ PROC NEAR			; CMidiVolume::UpdateMe

; 47   : {

  000b8	55		 push	 ebp
  000b9	8b ec		 mov	 ebp, esp
  000bb	51		 push	 ecx
  000bc	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 48   : 	g_pToonSettings->setSound_MidiVolume( m_nFirstVisibleLine );

  000bf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000c5	51		 push	 ecx
  000c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  000cc	e8 00 00 00 00	 call	 ?setSound_MidiVolume@CToonSettings@@QAEXH@Z ; CToonSettings::setSound_MidiVolume

; 49   : 		
; 50   : 	if ( g_pToonSettings->getSound_MidiOn() )

  000d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  000d7	e8 00 00 00 00	 call	 ?getSound_MidiOn@CToonSettings@@QAEHXZ ; CToonSettings::getSound_MidiOn
  000dc	85 c0		 test	 eax, eax
  000de	74 12		 je	 SHORT $L153845

; 51   : 		soundMgr->setMidiMasterVolume( m_nFirstVisibleLine );

  000e0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e3	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000e6	50		 push	 eax
  000e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?soundMgr@@3PAVSoundMgr@@A ; soundMgr
  000ed	e8 00 00 00 00	 call	 ?setMidiMasterVolume@SoundMgr@@QAEHH@Z ; SoundMgr::setMidiMasterVolume
$L153845:

; 52   : }

  000f2	8b e5		 mov	 esp, ebp
  000f4	5d		 pop	 ebp
  000f5	c3		 ret	 0
?UpdateMe@CMidiVolume@@UAEXXZ ENDP			; CMidiVolume::UpdateMe
_TEXT	ENDS
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
PUBLIC	??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z	; std::bitset<5>::reference::operator=
PUBLIC	??A?$bitset@$04@std@@QAE?AVreference@01@I@Z	; std::bitset<5>::operator[]
PUBLIC	??1CSkinToggleBtn@@UAE@XZ			; CSkinToggleBtn::~CSkinToggleBtn
PUBLIC	??0CMidiBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CMidiBtn::CMidiBtn
PUBLIC	?OnActivate@CMidiBtn@@UAEXFF@Z			; CMidiBtn::OnActivate
PUBLIC	??_7CMidiBtn@@6B@				; CMidiBtn::`vftable'
PUBLIC	??_GCMidiBtn@@UAEPAXI@Z				; CMidiBtn::`scalar deleting destructor'
PUBLIC	??_ECMidiBtn@@UAEPAXI@Z				; CMidiBtn::`vector deleting destructor'
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
EXTRN	?OnMouseDown@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseDown
EXTRN	?OnMouseUp@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseUp
EXTRN	?Refresh@CSkinBtn@@UAEXXZ:NEAR			; CSkinBtn::Refresh
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	??0CSkinToggleBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinToggleBtn::CSkinToggleBtn
EXTRN	?ShowNormal@CSkinToggleBtn@@UAEXXZ:NEAR		; CSkinToggleBtn::ShowNormal
EXTRN	?ShowHighlighted@CSkinToggleBtn@@UAEXXZ:NEAR	; CSkinToggleBtn::ShowHighlighted
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
;	COMDAT ??_7CMidiBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CMidiBtn@@6B@ DD FLAT:??_ECMidiBtn@@UAEPAXI@Z	; CMidiBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CMidiBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T159923 DD	019930520H
	DD	02H
	DD	FLAT:$T159926
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159926 DD	0ffffffffH
	DD	FLAT:$L159917
	DD	00H
	DD	FLAT:$L159919
xdata$x	ENDS
_TEXT	SEGMENT
$T159915 = -16
$T159916 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
??0CMidiBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CMidiBtn::CMidiBtn

; 56   : {

  000f6	55		 push	 ebp
  000f7	8b ec		 mov	 ebp, esp
  000f9	6a ff		 push	 -1
  000fb	68 00 00 00 00	 push	 $L159924
  00100	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00106	50		 push	 eax
  00107	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0010e	83 ec 18	 sub	 esp, 24			; 00000018H
  00111	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00114	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0011b	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0011e	50		 push	 eax
  0011f	83 ec 08	 sub	 esp, 8
  00122	8b cc		 mov	 ecx, esp
  00124	89 65 f0	 mov	 DWORD PTR $T159915[ebp], esp
  00127	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0012a	52		 push	 edx
  0012b	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00130	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  00133	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00136	e8 00 00 00 00	 call	 ??0CSkinToggleBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToggleBtn::CSkinToggleBtn
  0013b	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  0013e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00142	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00145	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMidiBtn@@6B@ ; CMidiBtn::`vftable'

; 57   : 	m_state[sknCtrlActivated] = g_pToonSettings->getSound_MidiOn();

  0014b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00151	e8 00 00 00 00	 call	 ?getSound_MidiOn@CToonSettings@@QAEHXZ ; CToonSettings::getSound_MidiOn
  00156	f7 d8		 neg	 eax
  00158	1b c0		 sbb	 eax, eax
  0015a	f7 d8		 neg	 eax
  0015c	50		 push	 eax
  0015d	6a 02		 push	 2
  0015f	8d 4d e8	 lea	 ecx, DWORD PTR $T159916[ebp]
  00162	51		 push	 ecx
  00163	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00166	83 c1 08	 add	 ecx, 8
  00169	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  0016e	8b c8		 mov	 ecx, eax
  00170	e8 00 00 00 00	 call	 ??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z ; std::bitset<5>::reference::operator=

; 58   : 	Refresh();

  00175	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00178	e8 00 00 00 00	 call	 ?Refresh@CSkinBtn@@UAEXXZ ; CSkinBtn::Refresh

; 59   : }

  0017d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00184	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00187	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0018c	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0018f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00192	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00199	8b e5		 mov	 esp, ebp
  0019b	5d		 pop	 ebp
  0019c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L159917:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00008	c3		 ret	 0
$L159919:
  00009	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  00011	c3		 ret	 0
$L159924:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159923
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CMidiBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CMidiBtn::CMidiBtn
PUBLIC	??1CMidiBtn@@UAE@XZ				; CMidiBtn::~CMidiBtn
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??_GCMidiBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMidiBtn@@UAEPAXI@Z PROC NEAR			; CMidiBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMidiBtn@@UAE@XZ	; CMidiBtn::~CMidiBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153856
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153856:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMidiBtn@@UAEPAXI@Z ENDP				; CMidiBtn::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CSkinBtn@@UAE@XZ				; CSkinBtn::~CSkinBtn
;	COMDAT ??1CSkinToggleBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinToggleBtn@@UAE@XZ PROC NEAR			; CSkinToggleBtn::~CSkinToggleBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinToggleBtn@@UAE@XZ ENDP				; CSkinToggleBtn::~CSkinToggleBtn
_TEXT	ENDS
;	COMDAT ??1CMidiBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMidiBtn@@UAE@XZ PROC NEAR				; CMidiBtn::~CMidiBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CMidiBtn@@UAE@XZ ENDP				; CMidiBtn::~CMidiBtn
_TEXT	ENDS
PUBLIC	?getSound_MidiVolume@CToonSettings@@QAEHXZ	; CToonSettings::getSound_MidiVolume
PUBLIC	??Breference@?$bitset@$04@std@@QBE_NXZ		; std::bitset<5>::reference::operator bool
PUBLIC	?flip@?$bitset@$04@std@@QAEAAV12@I@Z		; std::bitset<5>::flip
EXTRN	?setSound_MidiOn@CToonSettings@@QAEXH@Z:NEAR	; CToonSettings::setSound_MidiOn
EXTRN	?AddToRefreshList@CSkinCtrl@@QAEXXZ:NEAR	; CSkinCtrl::AddToRefreshList
_TEXT	SEGMENT
$T159934 = -8
_this$ = -12
?OnActivate@CMidiBtn@@UAEXFF@Z PROC NEAR		; CMidiBtn::OnActivate

; 62   : {

  0019f	55		 push	 ebp
  001a0	8b ec		 mov	 ebp, esp
  001a2	83 ec 0c	 sub	 esp, 12			; 0000000cH
  001a5	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 	// toggle the activated bit
; 64   : 	m_state.flip ( sknCtrlActivated );

  001a8	6a 02		 push	 2
  001aa	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	83 c1 08	 add	 ecx, 8
  001b0	e8 00 00 00 00	 call	 ?flip@?$bitset@$04@std@@QAEAAV12@I@Z ; std::bitset<5>::flip

; 65   : 	AddToRefreshList();

  001b5	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  001b8	e8 00 00 00 00	 call	 ?AddToRefreshList@CSkinCtrl@@QAEXXZ ; CSkinCtrl::AddToRefreshList

; 66   : 
; 67   : 	if ( m_state[sknCtrlActivated] ) {

  001bd	6a 02		 push	 2
  001bf	8d 45 f8	 lea	 eax, DWORD PTR $T159934[ebp]
  001c2	50		 push	 eax
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  001c6	83 c1 08	 add	 ecx, 8
  001c9	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  001ce	8b c8		 mov	 ecx, eax
  001d0	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  001d5	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001da	85 c0		 test	 eax, eax
  001dc	74 26		 je	 SHORT $L153867

; 68   : 		g_pToonSettings->setSound_MidiOn( true );

  001de	6a 01		 push	 1
  001e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  001e6	e8 00 00 00 00	 call	 ?setSound_MidiOn@CToonSettings@@QAEXH@Z ; CToonSettings::setSound_MidiOn

; 69   : 		soundMgr->setMidiMasterVolume( g_pToonSettings->getSound_MidiVolume() );

  001eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  001f1	e8 00 00 00 00	 call	 ?getSound_MidiVolume@CToonSettings@@QAEHXZ ; CToonSettings::getSound_MidiVolume
  001f6	50		 push	 eax
  001f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?soundMgr@@3PAVSoundMgr@@A ; soundMgr
  001fd	e8 00 00 00 00	 call	 ?setMidiMasterVolume@SoundMgr@@QAEHH@Z ; SoundMgr::setMidiMasterVolume

; 70   : 	} else {

  00202	eb 1a		 jmp	 SHORT $L153868
$L153867:

; 71   : 		g_pToonSettings->setSound_MidiOn( false );

  00204	6a 00		 push	 0
  00206	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0020c	e8 00 00 00 00	 call	 ?setSound_MidiOn@CToonSettings@@QAEXH@Z ; CToonSettings::setSound_MidiOn

; 72   : 		soundMgr->setMidiMasterVolume( 0 );

  00211	6a 00		 push	 0
  00213	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?soundMgr@@3PAVSoundMgr@@A ; soundMgr
  00219	e8 00 00 00 00	 call	 ?setMidiMasterVolume@SoundMgr@@QAEHH@Z ; SoundMgr::setMidiMasterVolume
$L153868:

; 74   : }

  0021e	8b e5		 mov	 esp, ebp
  00220	5d		 pop	 ebp
  00221	c2 08 00	 ret	 8
?OnActivate@CMidiBtn@@UAEXFF@Z ENDP			; CMidiBtn::OnActivate
_TEXT	ENDS
PUBLIC	??_7CSfxBtn@@6B@				; CSfxBtn::`vftable'
PUBLIC	??_GCSfxBtn@@UAEPAXI@Z				; CSfxBtn::`scalar deleting destructor'
PUBLIC	??_ECSfxBtn@@UAEPAXI@Z				; CSfxBtn::`vector deleting destructor'
PUBLIC	??0CSfxBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CSfxBtn::CSfxBtn
PUBLIC	?OnActivate@CSfxBtn@@UAEXFF@Z			; CSfxBtn::OnActivate
;	COMDAT ??_7CSfxBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CSfxBtn@@6B@ DD FLAT:??_ECSfxBtn@@UAEPAXI@Z		; CSfxBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSfxBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T159942 DD	019930520H
	DD	02H
	DD	FLAT:$T159944
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159944 DD	0ffffffffH
	DD	FLAT:$L159938
	DD	00H
	DD	FLAT:$L159940
xdata$x	ENDS
_TEXT	SEGMENT
$T159936 = -16
$T159937 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
??0CSfxBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CSfxBtn::CSfxBtn

; 78   : {

  00224	55		 push	 ebp
  00225	8b ec		 mov	 ebp, esp
  00227	6a ff		 push	 -1
  00229	68 00 00 00 00	 push	 $L159943
  0022e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00234	50		 push	 eax
  00235	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0023c	83 ec 18	 sub	 esp, 24			; 00000018H
  0023f	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00242	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00249	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0024c	50		 push	 eax
  0024d	83 ec 08	 sub	 esp, 8
  00250	8b cc		 mov	 ecx, esp
  00252	89 65 f0	 mov	 DWORD PTR $T159936[ebp], esp
  00255	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00258	52		 push	 edx
  00259	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0025e	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  00261	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00264	e8 00 00 00 00	 call	 ??0CSkinToggleBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToggleBtn::CSkinToggleBtn
  00269	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  0026c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00270	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00273	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSfxBtn@@6B@ ; CSfxBtn::`vftable'

; 79   : 	m_state[sknCtrlActivated] = g_pToonSettings->getSound_SfxOn();

  00279	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0027f	e8 00 00 00 00	 call	 ?getSound_SfxOn@CToonSettings@@QAEHXZ ; CToonSettings::getSound_SfxOn
  00284	f7 d8		 neg	 eax
  00286	1b c0		 sbb	 eax, eax
  00288	f7 d8		 neg	 eax
  0028a	50		 push	 eax
  0028b	6a 02		 push	 2
  0028d	8d 4d e8	 lea	 ecx, DWORD PTR $T159937[ebp]
  00290	51		 push	 ecx
  00291	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00294	83 c1 08	 add	 ecx, 8
  00297	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  0029c	8b c8		 mov	 ecx, eax
  0029e	e8 00 00 00 00	 call	 ??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z ; std::bitset<5>::reference::operator=

; 80   : 	Refresh();

  002a3	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  002a6	e8 00 00 00 00	 call	 ?Refresh@CSkinBtn@@UAEXXZ ; CSkinBtn::Refresh

; 81   : }

  002ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002b2	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  002b5	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002ba	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  002bd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002c7	8b e5		 mov	 esp, ebp
  002c9	5d		 pop	 ebp
  002ca	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L159938:
  0001c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0001f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00024	c3		 ret	 0
$L159940:
  00025	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  0002d	c3		 ret	 0
$L159943:
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159942
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSfxBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP		; CSfxBtn::CSfxBtn
PUBLIC	??1CSfxBtn@@UAE@XZ				; CSfxBtn::~CSfxBtn
;	COMDAT ??_GCSfxBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSfxBtn@@UAEPAXI@Z PROC NEAR			; CSfxBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSfxBtn@@UAE@XZ	; CSfxBtn::~CSfxBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153879
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153879:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSfxBtn@@UAEPAXI@Z ENDP				; CSfxBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSfxBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSfxBtn@@UAE@XZ PROC NEAR				; CSfxBtn::~CSfxBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSfxBtn@@UAE@XZ ENDP					; CSfxBtn::~CSfxBtn
_TEXT	ENDS
PUBLIC	?getSound_SfxVolume@CToonSettings@@QAEHXZ	; CToonSettings::getSound_SfxVolume
EXTRN	?setSound_SfxOn@CToonSettings@@QAEXH@Z:NEAR	; CToonSettings::setSound_SfxOn
_TEXT	SEGMENT
$T159949 = -8
_this$ = -12
?OnActivate@CSfxBtn@@UAEXFF@Z PROC NEAR			; CSfxBtn::OnActivate

; 84   : {

  002cd	55		 push	 ebp
  002ce	8b ec		 mov	 ebp, esp
  002d0	83 ec 0c	 sub	 esp, 12			; 0000000cH
  002d3	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 85   : 	// toggle the activated bit
; 86   : 	m_state.flip ( sknCtrlActivated );

  002d6	6a 02		 push	 2
  002d8	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002db	83 c1 08	 add	 ecx, 8
  002de	e8 00 00 00 00	 call	 ?flip@?$bitset@$04@std@@QAEAAV12@I@Z ; std::bitset<5>::flip

; 87   : 	AddToRefreshList();

  002e3	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002e6	e8 00 00 00 00	 call	 ?AddToRefreshList@CSkinCtrl@@QAEXXZ ; CSkinCtrl::AddToRefreshList

; 88   : 
; 89   : 	if ( m_state[sknCtrlActivated] ) {

  002eb	6a 02		 push	 2
  002ed	8d 45 f8	 lea	 eax, DWORD PTR $T159949[ebp]
  002f0	50		 push	 eax
  002f1	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002f4	83 c1 08	 add	 ecx, 8
  002f7	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  002fc	8b c8		 mov	 ecx, eax
  002fe	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  00303	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00308	85 c0		 test	 eax, eax
  0030a	74 26		 je	 SHORT $L153888

; 90   : 		g_pToonSettings->setSound_SfxOn( true );

  0030c	6a 01		 push	 1
  0030e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00314	e8 00 00 00 00	 call	 ?setSound_SfxOn@CToonSettings@@QAEXH@Z ; CToonSettings::setSound_SfxOn

; 91   : 		soundMgr->setSfxMasterVolume( g_pToonSettings->getSound_SfxVolume() );

  00319	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0031f	e8 00 00 00 00	 call	 ?getSound_SfxVolume@CToonSettings@@QAEHXZ ; CToonSettings::getSound_SfxVolume
  00324	50		 push	 eax
  00325	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?soundMgr@@3PAVSoundMgr@@A ; soundMgr
  0032b	e8 00 00 00 00	 call	 ?setSfxMasterVolume@SoundMgr@@QAEHH@Z ; SoundMgr::setSfxMasterVolume

; 92   : 	} else {

  00330	eb 1a		 jmp	 SHORT $L153889
$L153888:

; 93   : 		g_pToonSettings->setSound_SfxOn( false );

  00332	6a 00		 push	 0
  00334	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0033a	e8 00 00 00 00	 call	 ?setSound_SfxOn@CToonSettings@@QAEXH@Z ; CToonSettings::setSound_SfxOn

; 94   : 		soundMgr->setSfxMasterVolume( 0 );

  0033f	6a 00		 push	 0
  00341	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?soundMgr@@3PAVSoundMgr@@A ; soundMgr
  00347	e8 00 00 00 00	 call	 ?setSfxMasterVolume@SoundMgr@@QAEHH@Z ; SoundMgr::setSfxMasterVolume
$L153889:

; 96   : }

  0034c	8b e5		 mov	 esp, ebp
  0034e	5d		 pop	 ebp
  0034f	c2 08 00	 ret	 8
?OnActivate@CSfxBtn@@UAEXFF@Z ENDP			; CSfxBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CAcceptBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CAcceptBtn::CAcceptBtn
PUBLIC	?OnActivate@CAcceptBtn@@UAEXFF@Z		; CAcceptBtn::OnActivate
PUBLIC	??_7CAcceptBtn@@6B@				; CAcceptBtn::`vftable'
PUBLIC	??_GCAcceptBtn@@UAEPAXI@Z			; CAcceptBtn::`scalar deleting destructor'
PUBLIC	??_ECAcceptBtn@@UAEPAXI@Z			; CAcceptBtn::`vector deleting destructor'
PUBLIC	?get_AutoAccept@CToonSettings@@QAEHXZ		; CToonSettings::get_AutoAccept
;	COMDAT ??_7CAcceptBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CAcceptBtn@@6B@ DD FLAT:??_ECAcceptBtn@@UAEPAXI@Z	; CAcceptBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CAcceptBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T159957 DD	019930520H
	DD	02H
	DD	FLAT:$T159959
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159959 DD	0ffffffffH
	DD	FLAT:$L159953
	DD	00H
	DD	FLAT:$L159955
xdata$x	ENDS
_TEXT	SEGMENT
$T159951 = -16
$T159952 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
??0CAcceptBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CAcceptBtn::CAcceptBtn

; 100  : {

  00352	55		 push	 ebp
  00353	8b ec		 mov	 ebp, esp
  00355	6a ff		 push	 -1
  00357	68 00 00 00 00	 push	 $L159958
  0035c	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00362	50		 push	 eax
  00363	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0036a	83 ec 18	 sub	 esp, 24			; 00000018H
  0036d	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00370	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00377	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0037a	50		 push	 eax
  0037b	83 ec 08	 sub	 esp, 8
  0037e	8b cc		 mov	 ecx, esp
  00380	89 65 f0	 mov	 DWORD PTR $T159951[ebp], esp
  00383	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00386	52		 push	 edx
  00387	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0038c	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  0038f	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ??0CSkinToggleBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToggleBtn::CSkinToggleBtn
  00397	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  0039a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0039e	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  003a1	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CAcceptBtn@@6B@ ; CAcceptBtn::`vftable'

; 101  : 	m_state[sknCtrlActivated] = g_pToonSettings->get_AutoAccept();

  003a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  003ad	e8 00 00 00 00	 call	 ?get_AutoAccept@CToonSettings@@QAEHXZ ; CToonSettings::get_AutoAccept
  003b2	f7 d8		 neg	 eax
  003b4	1b c0		 sbb	 eax, eax
  003b6	f7 d8		 neg	 eax
  003b8	50		 push	 eax
  003b9	6a 02		 push	 2
  003bb	8d 4d e8	 lea	 ecx, DWORD PTR $T159952[ebp]
  003be	51		 push	 ecx
  003bf	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  003c2	83 c1 08	 add	 ecx, 8
  003c5	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  003ca	8b c8		 mov	 ecx, eax
  003cc	e8 00 00 00 00	 call	 ??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z ; std::bitset<5>::reference::operator=

; 102  : 	Refresh();

  003d1	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  003d4	e8 00 00 00 00	 call	 ?Refresh@CSkinBtn@@UAEXXZ ; CSkinBtn::Refresh

; 103  : }

  003d9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003e0	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  003e3	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  003e8	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  003eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  003f5	8b e5		 mov	 esp, ebp
  003f7	5d		 pop	 ebp
  003f8	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L159953:
  00038	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0003b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00040	c3		 ret	 0
$L159955:
  00041	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  00049	c3		 ret	 0
$L159958:
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159957
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CAcceptBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CAcceptBtn::CAcceptBtn
PUBLIC	??1CAcceptBtn@@UAE@XZ				; CAcceptBtn::~CAcceptBtn
;	COMDAT ??_GCAcceptBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCAcceptBtn@@UAEPAXI@Z PROC NEAR			; CAcceptBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CAcceptBtn@@UAE@XZ	; CAcceptBtn::~CAcceptBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153900
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153900:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCAcceptBtn@@UAEPAXI@Z ENDP				; CAcceptBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CAcceptBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CAcceptBtn@@UAE@XZ PROC NEAR				; CAcceptBtn::~CAcceptBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CAcceptBtn@@UAE@XZ ENDP				; CAcceptBtn::~CAcceptBtn
_TEXT	ENDS
EXTRN	?set_AutoAccept@CToonSettings@@QAEXH@Z:NEAR	; CToonSettings::set_AutoAccept
_TEXT	SEGMENT
$T159964 = -8
_this$ = -12
?OnActivate@CAcceptBtn@@UAEXFF@Z PROC NEAR		; CAcceptBtn::OnActivate

; 106  : {

  003fb	55		 push	 ebp
  003fc	8b ec		 mov	 ebp, esp
  003fe	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00401	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 107  : 	// toggle the activated bit
; 108  : 	m_state.flip ( sknCtrlActivated );

  00404	6a 02		 push	 2
  00406	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00409	83 c1 08	 add	 ecx, 8
  0040c	e8 00 00 00 00	 call	 ?flip@?$bitset@$04@std@@QAEAAV12@I@Z ; std::bitset<5>::flip

; 109  : 	AddToRefreshList();

  00411	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00414	e8 00 00 00 00	 call	 ?AddToRefreshList@CSkinCtrl@@QAEXXZ ; CSkinCtrl::AddToRefreshList

; 110  : 
; 111  : 	if ( m_state[sknCtrlActivated] ) {

  00419	6a 02		 push	 2
  0041b	8d 45 f8	 lea	 eax, DWORD PTR $T159964[ebp]
  0041e	50		 push	 eax
  0041f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00422	83 c1 08	 add	 ecx, 8
  00425	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  0042a	8b c8		 mov	 ecx, eax
  0042c	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  00431	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00436	85 c0		 test	 eax, eax
  00438	74 0f		 je	 SHORT $L153909

; 112  : 		g_pToonSettings->set_AutoAccept( true );

  0043a	6a 01		 push	 1
  0043c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00442	e8 00 00 00 00	 call	 ?set_AutoAccept@CToonSettings@@QAEXH@Z ; CToonSettings::set_AutoAccept

; 113  : 	} else {

  00447	eb 0d		 jmp	 SHORT $L153910
$L153909:

; 114  : 		g_pToonSettings->set_AutoAccept( false );

  00449	6a 00		 push	 0
  0044b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00451	e8 00 00 00 00	 call	 ?set_AutoAccept@CToonSettings@@QAEXH@Z ; CToonSettings::set_AutoAccept
$L153910:

; 116  : }

  00456	8b e5		 mov	 esp, ebp
  00458	5d		 pop	 ebp
  00459	c2 08 00	 ret	 8
?OnActivate@CAcceptBtn@@UAEXFF@Z ENDP			; CAcceptBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CLagBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CLagBtn::CLagBtn
PUBLIC	?OnActivate@CLagBtn@@UAEXFF@Z			; CLagBtn::OnActivate
PUBLIC	??_7CLagBtn@@6B@				; CLagBtn::`vftable'
PUBLIC	??_GCLagBtn@@UAEPAXI@Z				; CLagBtn::`scalar deleting destructor'
PUBLIC	??_ECLagBtn@@UAEPAXI@Z				; CLagBtn::`vector deleting destructor'
PUBLIC	?get_LagDisplay@CToonSettings@@QAEHXZ		; CToonSettings::get_LagDisplay
;	COMDAT ??_7CLagBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CLagBtn@@6B@ DD FLAT:??_ECLagBtn@@UAEPAXI@Z		; CLagBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CLagBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T159972 DD	019930520H
	DD	02H
	DD	FLAT:$T159974
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159974 DD	0ffffffffH
	DD	FLAT:$L159968
	DD	00H
	DD	FLAT:$L159970
xdata$x	ENDS
_TEXT	SEGMENT
$T159966 = -16
$T159967 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
??0CLagBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CLagBtn::CLagBtn

; 120  : {

  0045c	55		 push	 ebp
  0045d	8b ec		 mov	 ebp, esp
  0045f	6a ff		 push	 -1
  00461	68 00 00 00 00	 push	 $L159973
  00466	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0046c	50		 push	 eax
  0046d	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00474	83 ec 18	 sub	 esp, 24			; 00000018H
  00477	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  0047a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00481	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00484	50		 push	 eax
  00485	83 ec 08	 sub	 esp, 8
  00488	8b cc		 mov	 ecx, esp
  0048a	89 65 f0	 mov	 DWORD PTR $T159966[ebp], esp
  0048d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00490	52		 push	 edx
  00491	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00496	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  00499	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0049c	e8 00 00 00 00	 call	 ??0CSkinToggleBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToggleBtn::CSkinToggleBtn
  004a1	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  004a4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  004a8	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  004ab	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CLagBtn@@6B@ ; CLagBtn::`vftable'

; 121  : 	m_state[sknCtrlActivated] = g_pToonSettings->get_LagDisplay();

  004b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  004b7	e8 00 00 00 00	 call	 ?get_LagDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_LagDisplay
  004bc	f7 d8		 neg	 eax
  004be	1b c0		 sbb	 eax, eax
  004c0	f7 d8		 neg	 eax
  004c2	50		 push	 eax
  004c3	6a 02		 push	 2
  004c5	8d 4d e8	 lea	 ecx, DWORD PTR $T159967[ebp]
  004c8	51		 push	 ecx
  004c9	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  004cc	83 c1 08	 add	 ecx, 8
  004cf	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  004d4	8b c8		 mov	 ecx, eax
  004d6	e8 00 00 00 00	 call	 ??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z ; std::bitset<5>::reference::operator=

; 122  : 	Refresh();

  004db	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  004de	e8 00 00 00 00	 call	 ?Refresh@CSkinBtn@@UAEXXZ ; CSkinBtn::Refresh

; 123  : }

  004e3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ea	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  004ed	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  004f2	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  004f5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004f8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004ff	8b e5		 mov	 esp, ebp
  00501	5d		 pop	 ebp
  00502	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L159968:
  00054	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00057	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0005c	c3		 ret	 0
$L159970:
  0005d	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  00065	c3		 ret	 0
$L159973:
  00066	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159972
  0006b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CLagBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP		; CLagBtn::CLagBtn
PUBLIC	??1CLagBtn@@UAE@XZ				; CLagBtn::~CLagBtn
;	COMDAT ??_GCLagBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCLagBtn@@UAEPAXI@Z PROC NEAR			; CLagBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CLagBtn@@UAE@XZ	; CLagBtn::~CLagBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153921
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153921:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCLagBtn@@UAEPAXI@Z ENDP				; CLagBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CLagBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CLagBtn@@UAE@XZ PROC NEAR				; CLagBtn::~CLagBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CLagBtn@@UAE@XZ ENDP					; CLagBtn::~CLagBtn
_TEXT	ENDS
EXTRN	?set_LagDisplay@CToonSettings@@QAEXH@Z:NEAR	; CToonSettings::set_LagDisplay
_TEXT	SEGMENT
$T159979 = -8
_this$ = -12
?OnActivate@CLagBtn@@UAEXFF@Z PROC NEAR			; CLagBtn::OnActivate

; 126  : {

  00505	55		 push	 ebp
  00506	8b ec		 mov	 ebp, esp
  00508	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0050b	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 127  : 	// toggle the activated bit
; 128  : 	m_state.flip ( sknCtrlActivated );

  0050e	6a 02		 push	 2
  00510	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00513	83 c1 08	 add	 ecx, 8
  00516	e8 00 00 00 00	 call	 ?flip@?$bitset@$04@std@@QAEAAV12@I@Z ; std::bitset<5>::flip

; 129  : 	AddToRefreshList();

  0051b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0051e	e8 00 00 00 00	 call	 ?AddToRefreshList@CSkinCtrl@@QAEXXZ ; CSkinCtrl::AddToRefreshList

; 130  : 
; 131  : 	if ( m_state[sknCtrlActivated] ) {

  00523	6a 02		 push	 2
  00525	8d 45 f8	 lea	 eax, DWORD PTR $T159979[ebp]
  00528	50		 push	 eax
  00529	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0052c	83 c1 08	 add	 ecx, 8
  0052f	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  00534	8b c8		 mov	 ecx, eax
  00536	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  0053b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00540	85 c0		 test	 eax, eax
  00542	74 0f		 je	 SHORT $L153930

; 132  : 		g_pToonSettings->set_LagDisplay( true );

  00544	6a 01		 push	 1
  00546	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0054c	e8 00 00 00 00	 call	 ?set_LagDisplay@CToonSettings@@QAEXH@Z ; CToonSettings::set_LagDisplay

; 133  : 	} else {

  00551	eb 0d		 jmp	 SHORT $L153931
$L153930:

; 134  : 		g_pToonSettings->set_LagDisplay( false );

  00553	6a 00		 push	 0
  00555	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0055b	e8 00 00 00 00	 call	 ?set_LagDisplay@CToonSettings@@QAEXH@Z ; CToonSettings::set_LagDisplay
$L153931:

; 136  : }

  00560	8b e5		 mov	 esp, ebp
  00562	5d		 pop	 ebp
  00563	c2 08 00	 ret	 8
?OnActivate@CLagBtn@@UAEXFF@Z ENDP			; CLagBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CAltEnterBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CAltEnterBtn::CAltEnterBtn
PUBLIC	?OnActivate@CAltEnterBtn@@UAEXFF@Z		; CAltEnterBtn::OnActivate
PUBLIC	??_7CAltEnterBtn@@6B@				; CAltEnterBtn::`vftable'
PUBLIC	??_GCAltEnterBtn@@UAEPAXI@Z			; CAltEnterBtn::`scalar deleting destructor'
PUBLIC	??_ECAltEnterBtn@@UAEPAXI@Z			; CAltEnterBtn::`vector deleting destructor'
PUBLIC	?get_AltEnter@CToonSettings@@QAEHXZ		; CToonSettings::get_AltEnter
;	COMDAT ??_7CAltEnterBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CAltEnterBtn@@6B@ DD FLAT:??_ECAltEnterBtn@@UAEPAXI@Z ; CAltEnterBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CAltEnterBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T159987 DD	019930520H
	DD	02H
	DD	FLAT:$T159989
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159989 DD	0ffffffffH
	DD	FLAT:$L159983
	DD	00H
	DD	FLAT:$L159985
xdata$x	ENDS
_TEXT	SEGMENT
$T159981 = -16
$T159982 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
??0CAltEnterBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CAltEnterBtn::CAltEnterBtn

; 140  : {

  00566	55		 push	 ebp
  00567	8b ec		 mov	 ebp, esp
  00569	6a ff		 push	 -1
  0056b	68 00 00 00 00	 push	 $L159988
  00570	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00576	50		 push	 eax
  00577	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0057e	83 ec 18	 sub	 esp, 24			; 00000018H
  00581	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00584	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0058b	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0058e	50		 push	 eax
  0058f	83 ec 08	 sub	 esp, 8
  00592	8b cc		 mov	 ecx, esp
  00594	89 65 f0	 mov	 DWORD PTR $T159981[ebp], esp
  00597	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0059a	52		 push	 edx
  0059b	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  005a0	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  005a3	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  005a6	e8 00 00 00 00	 call	 ??0CSkinToggleBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToggleBtn::CSkinToggleBtn
  005ab	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  005ae	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  005b2	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  005b5	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CAltEnterBtn@@6B@ ; CAltEnterBtn::`vftable'

; 141  : 	m_state[sknCtrlActivated] = g_pToonSettings->get_AltEnter();

  005bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  005c1	e8 00 00 00 00	 call	 ?get_AltEnter@CToonSettings@@QAEHXZ ; CToonSettings::get_AltEnter
  005c6	f7 d8		 neg	 eax
  005c8	1b c0		 sbb	 eax, eax
  005ca	f7 d8		 neg	 eax
  005cc	50		 push	 eax
  005cd	6a 02		 push	 2
  005cf	8d 4d e8	 lea	 ecx, DWORD PTR $T159982[ebp]
  005d2	51		 push	 ecx
  005d3	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  005d6	83 c1 08	 add	 ecx, 8
  005d9	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  005de	8b c8		 mov	 ecx, eax
  005e0	e8 00 00 00 00	 call	 ??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z ; std::bitset<5>::reference::operator=

; 142  : 	Refresh();

  005e5	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  005e8	e8 00 00 00 00	 call	 ?Refresh@CSkinBtn@@UAEXXZ ; CSkinBtn::Refresh

; 143  : }

  005ed	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005f4	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  005f7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  005fc	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  005ff	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00602	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00609	8b e5		 mov	 esp, ebp
  0060b	5d		 pop	 ebp
  0060c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L159983:
  00070	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00073	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00078	c3		 ret	 0
$L159985:
  00079	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  00081	c3		 ret	 0
$L159988:
  00082	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159987
  00087	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CAltEnterBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CAltEnterBtn::CAltEnterBtn
PUBLIC	??1CAltEnterBtn@@UAE@XZ				; CAltEnterBtn::~CAltEnterBtn
;	COMDAT ??_GCAltEnterBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCAltEnterBtn@@UAEPAXI@Z PROC NEAR			; CAltEnterBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CAltEnterBtn@@UAE@XZ	; CAltEnterBtn::~CAltEnterBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153942
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153942:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCAltEnterBtn@@UAEPAXI@Z ENDP			; CAltEnterBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CAltEnterBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CAltEnterBtn@@UAE@XZ PROC NEAR			; CAltEnterBtn::~CAltEnterBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CAltEnterBtn@@UAE@XZ ENDP				; CAltEnterBtn::~CAltEnterBtn
_TEXT	ENDS
EXTRN	?set_AltEnter@CToonSettings@@QAEXH@Z:NEAR	; CToonSettings::set_AltEnter
_TEXT	SEGMENT
$T159994 = -8
_this$ = -12
?OnActivate@CAltEnterBtn@@UAEXFF@Z PROC NEAR		; CAltEnterBtn::OnActivate

; 146  : {

  0060f	55		 push	 ebp
  00610	8b ec		 mov	 ebp, esp
  00612	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00615	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 147  : 	// toggle the activated bit
; 148  : 	m_state.flip ( sknCtrlActivated );

  00618	6a 02		 push	 2
  0061a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0061d	83 c1 08	 add	 ecx, 8
  00620	e8 00 00 00 00	 call	 ?flip@?$bitset@$04@std@@QAEAAV12@I@Z ; std::bitset<5>::flip

; 149  : 	AddToRefreshList();

  00625	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00628	e8 00 00 00 00	 call	 ?AddToRefreshList@CSkinCtrl@@QAEXXZ ; CSkinCtrl::AddToRefreshList

; 150  : 
; 151  : 	if ( m_state[sknCtrlActivated] ) {

  0062d	6a 02		 push	 2
  0062f	8d 45 f8	 lea	 eax, DWORD PTR $T159994[ebp]
  00632	50		 push	 eax
  00633	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00636	83 c1 08	 add	 ecx, 8
  00639	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  0063e	8b c8		 mov	 ecx, eax
  00640	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  00645	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0064a	85 c0		 test	 eax, eax
  0064c	74 0f		 je	 SHORT $L153951

; 152  : 		g_pToonSettings->set_AltEnter( true );

  0064e	6a 01		 push	 1
  00650	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00656	e8 00 00 00 00	 call	 ?set_AltEnter@CToonSettings@@QAEXH@Z ; CToonSettings::set_AltEnter

; 153  : 	} else {

  0065b	eb 0d		 jmp	 SHORT $L153952
$L153951:

; 154  : 		g_pToonSettings->set_AltEnter( false );

  0065d	6a 00		 push	 0
  0065f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00665	e8 00 00 00 00	 call	 ?set_AltEnter@CToonSettings@@QAEXH@Z ; CToonSettings::set_AltEnter
$L153952:

; 156  : }

  0066a	8b e5		 mov	 esp, ebp
  0066c	5d		 pop	 ebp
  0066d	c2 08 00	 ret	 8
?OnActivate@CAltEnterBtn@@UAEXFF@Z ENDP			; CAltEnterBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CFullScreenBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CFullScreenBtn::CFullScreenBtn
PUBLIC	?OnActivate@CFullScreenBtn@@UAEXFF@Z		; CFullScreenBtn::OnActivate
PUBLIC	??_7CFullScreenBtn@@6B@				; CFullScreenBtn::`vftable'
PUBLIC	??_GCFullScreenBtn@@UAEPAXI@Z			; CFullScreenBtn::`scalar deleting destructor'
PUBLIC	??_ECFullScreenBtn@@UAEPAXI@Z			; CFullScreenBtn::`vector deleting destructor'
EXTRN	?GetFullScreen@CWindowMgr@@QAEHXZ:NEAR		; CWindowMgr::GetFullScreen
EXTRN	?g_pWindowMgr@@3PAVCWindowMgr@@A:DWORD		; g_pWindowMgr
;	COMDAT ??_7CFullScreenBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CFullScreenBtn@@6B@ DD FLAT:??_ECFullScreenBtn@@UAEPAXI@Z ; CFullScreenBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CFullScreenBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T160003 DD	019930520H
	DD	02H
	DD	FLAT:$T160005
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160005 DD	0ffffffffH
	DD	FLAT:$L159999
	DD	00H
	DD	FLAT:$L160001
xdata$x	ENDS
_TEXT	SEGMENT
$T159996 = -16
$T159997 = -24
$T159998 = -32
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -36
??0CFullScreenBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CFullScreenBtn::CFullScreenBtn

; 160  : {

  00670	55		 push	 ebp
  00671	8b ec		 mov	 ebp, esp
  00673	6a ff		 push	 -1
  00675	68 00 00 00 00	 push	 $L160004
  0067a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00680	50		 push	 eax
  00681	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00688	83 ec 20	 sub	 esp, 32			; 00000020H
  0068b	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx
  0068e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00695	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00698	50		 push	 eax
  00699	83 ec 08	 sub	 esp, 8
  0069c	8b cc		 mov	 ecx, esp
  0069e	89 65 f0	 mov	 DWORD PTR $T159996[ebp], esp
  006a1	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  006a4	52		 push	 edx
  006a5	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  006aa	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  006ad	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  006b0	e8 00 00 00 00	 call	 ??0CSkinToggleBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToggleBtn::CSkinToggleBtn
  006b5	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  006b8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  006bc	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  006bf	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CFullScreenBtn@@6B@ ; CFullScreenBtn::`vftable'

; 161  :     if ( g_pWindowMgr )

  006c5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  006cc	74 2c		 je	 SHORT $L153959

; 162  : 	    m_state[sknCtrlActivated] = g_pWindowMgr->GetFullScreen();

  006ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  006d4	e8 00 00 00 00	 call	 ?GetFullScreen@CWindowMgr@@QAEHXZ ; CWindowMgr::GetFullScreen
  006d9	f7 d8		 neg	 eax
  006db	1b c0		 sbb	 eax, eax
  006dd	f7 d8		 neg	 eax
  006df	50		 push	 eax
  006e0	6a 02		 push	 2
  006e2	8d 4d e8	 lea	 ecx, DWORD PTR $T159997[ebp]
  006e5	51		 push	 ecx
  006e6	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  006e9	83 c1 08	 add	 ecx, 8
  006ec	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  006f1	8b c8		 mov	 ecx, eax
  006f3	e8 00 00 00 00	 call	 ??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z ; std::bitset<5>::reference::operator=

; 163  :     else

  006f8	eb 1a		 jmp	 SHORT $L153961
$L153959:

; 164  :         m_state[sknCtrlActivated] = false;

  006fa	6a 00		 push	 0
  006fc	6a 02		 push	 2
  006fe	8d 55 e0	 lea	 edx, DWORD PTR $T159998[ebp]
  00701	52		 push	 edx
  00702	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00705	83 c1 08	 add	 ecx, 8
  00708	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  0070d	8b c8		 mov	 ecx, eax
  0070f	e8 00 00 00 00	 call	 ??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z ; std::bitset<5>::reference::operator=
$L153961:

; 165  :     
; 166  :     Refresh();

  00714	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00717	e8 00 00 00 00	 call	 ?Refresh@CSkinBtn@@UAEXXZ ; CSkinBtn::Refresh

; 167  : }

  0071c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00723	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00726	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0072b	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  0072e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00731	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00738	8b e5		 mov	 esp, ebp
  0073a	5d		 pop	 ebp
  0073b	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L159999:
  0008c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0008f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00094	c3		 ret	 0
$L160001:
  00095	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  0009d	c3		 ret	 0
$L160004:
  0009e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160003
  000a3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CFullScreenBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CFullScreenBtn::CFullScreenBtn
PUBLIC	??1CFullScreenBtn@@UAE@XZ			; CFullScreenBtn::~CFullScreenBtn
;	COMDAT ??_GCFullScreenBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCFullScreenBtn@@UAEPAXI@Z PROC NEAR			; CFullScreenBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CFullScreenBtn@@UAE@XZ ; CFullScreenBtn::~CFullScreenBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153966
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153966:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCFullScreenBtn@@UAEPAXI@Z ENDP			; CFullScreenBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CFullScreenBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CFullScreenBtn@@UAE@XZ PROC NEAR			; CFullScreenBtn::~CFullScreenBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CFullScreenBtn@@UAE@XZ ENDP				; CFullScreenBtn::~CFullScreenBtn
_TEXT	ENDS
EXTRN	?SetFullScreen@CWindowMgr@@QAEXH@Z:NEAR		; CWindowMgr::SetFullScreen
_TEXT	SEGMENT
$T160010 = -8
_this$ = -12
?OnActivate@CFullScreenBtn@@UAEXFF@Z PROC NEAR		; CFullScreenBtn::OnActivate

; 170  : {

  0073e	55		 push	 ebp
  0073f	8b ec		 mov	 ebp, esp
  00741	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00744	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 	// toggle the activated bit
; 172  : 	m_state.flip ( sknCtrlActivated );

  00747	6a 02		 push	 2
  00749	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0074c	83 c1 08	 add	 ecx, 8
  0074f	e8 00 00 00 00	 call	 ?flip@?$bitset@$04@std@@QAEAAV12@I@Z ; std::bitset<5>::flip

; 173  : 	AddToRefreshList();

  00754	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00757	e8 00 00 00 00	 call	 ?AddToRefreshList@CSkinCtrl@@QAEXXZ ; CSkinCtrl::AddToRefreshList

; 174  : 
; 175  :     if (g_pWindowMgr)

  0075c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  00763	74 29		 je	 SHORT $L153974

; 177  : 	    g_pWindowMgr->SetFullScreen( m_state[sknCtrlActivated] );

  00765	6a 02		 push	 2
  00767	8d 45 f8	 lea	 eax, DWORD PTR $T160010[ebp]
  0076a	50		 push	 eax
  0076b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0076e	83 c1 08	 add	 ecx, 8
  00771	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  00776	8b c8		 mov	 ecx, eax
  00778	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  0077d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00782	50		 push	 eax
  00783	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  00789	e8 00 00 00 00	 call	 ?SetFullScreen@CWindowMgr@@QAEXH@Z ; CWindowMgr::SetFullScreen
$L153974:

; 179  : }

  0078e	8b e5		 mov	 esp, ebp
  00790	5d		 pop	 ebp
  00791	c2 08 00	 ret	 8
?OnActivate@CFullScreenBtn@@UAEXFF@Z ENDP		; CFullScreenBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CTabDispBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CTabDispBtn::CTabDispBtn
PUBLIC	?OnActivate@CTabDispBtn@@UAEXFF@Z		; CTabDispBtn::OnActivate
PUBLIC	??_7CTabDispBtn@@6B@				; CTabDispBtn::`vftable'
PUBLIC	??_GCTabDispBtn@@UAEPAXI@Z			; CTabDispBtn::`scalar deleting destructor'
PUBLIC	??_ECTabDispBtn@@UAEPAXI@Z			; CTabDispBtn::`vector deleting destructor'
PUBLIC	?get_TabDisplay@CToonSettings@@QAEHXZ		; CToonSettings::get_TabDisplay
;	COMDAT ??_7CTabDispBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CTabDispBtn@@6B@ DD FLAT:??_ECTabDispBtn@@UAEPAXI@Z	; CTabDispBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinToggleBtn@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CTabDispBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T160018 DD	019930520H
	DD	02H
	DD	FLAT:$T160020
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160020 DD	0ffffffffH
	DD	FLAT:$L160014
	DD	00H
	DD	FLAT:$L160016
xdata$x	ENDS
_TEXT	SEGMENT
$T160012 = -16
$T160013 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
??0CTabDispBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CTabDispBtn::CTabDispBtn

; 183  : {

  00794	55		 push	 ebp
  00795	8b ec		 mov	 ebp, esp
  00797	6a ff		 push	 -1
  00799	68 00 00 00 00	 push	 $L160019
  0079e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  007a4	50		 push	 eax
  007a5	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  007ac	83 ec 18	 sub	 esp, 24			; 00000018H
  007af	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  007b2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  007b9	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  007bc	50		 push	 eax
  007bd	83 ec 08	 sub	 esp, 8
  007c0	8b cc		 mov	 ecx, esp
  007c2	89 65 f0	 mov	 DWORD PTR $T160012[ebp], esp
  007c5	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  007c8	52		 push	 edx
  007c9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  007ce	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  007d1	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d4	e8 00 00 00 00	 call	 ??0CSkinToggleBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToggleBtn::CSkinToggleBtn
  007d9	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  007dc	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  007e0	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  007e3	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTabDispBtn@@6B@ ; CTabDispBtn::`vftable'

; 184  : 	m_state[sknCtrlActivated] = g_pToonSettings->get_TabDisplay();

  007e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  007ef	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  007f4	f7 d8		 neg	 eax
  007f6	1b c0		 sbb	 eax, eax
  007f8	f7 d8		 neg	 eax
  007fa	50		 push	 eax
  007fb	6a 02		 push	 2
  007fd	8d 4d e8	 lea	 ecx, DWORD PTR $T160013[ebp]
  00800	51		 push	 ecx
  00801	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00804	83 c1 08	 add	 ecx, 8
  00807	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  0080c	8b c8		 mov	 ecx, eax
  0080e	e8 00 00 00 00	 call	 ??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z ; std::bitset<5>::reference::operator=

; 185  : 	Refresh();

  00813	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00816	e8 00 00 00 00	 call	 ?Refresh@CSkinBtn@@UAEXXZ ; CSkinBtn::Refresh

; 186  : }

  0081b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00822	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00825	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0082a	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0082d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00830	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00837	8b e5		 mov	 esp, ebp
  00839	5d		 pop	 ebp
  0083a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L160014:
  000a8	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000ab	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000b0	c3		 ret	 0
$L160016:
  000b1	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  000b9	c3		 ret	 0
$L160019:
  000ba	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160018
  000bf	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTabDispBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CTabDispBtn::CTabDispBtn
PUBLIC	??1CTabDispBtn@@UAE@XZ				; CTabDispBtn::~CTabDispBtn
;	COMDAT ??_GCTabDispBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCTabDispBtn@@UAEPAXI@Z PROC NEAR			; CTabDispBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CTabDispBtn@@UAE@XZ	; CTabDispBtn::~CTabDispBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153986
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153986:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCTabDispBtn@@UAEPAXI@Z ENDP				; CTabDispBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CTabDispBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CTabDispBtn@@UAE@XZ PROC NEAR			; CTabDispBtn::~CTabDispBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinToggleBtn@@UAE@XZ ; CSkinToggleBtn::~CSkinToggleBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CTabDispBtn@@UAE@XZ ENDP				; CTabDispBtn::~CTabDispBtn
_TEXT	ENDS
EXTRN	?set_TabDisplay@CToonSettings@@QAEXH@Z:NEAR	; CToonSettings::set_TabDisplay
_TEXT	SEGMENT
$T160025 = -8
_this$ = -12
?OnActivate@CTabDispBtn@@UAEXFF@Z PROC NEAR		; CTabDispBtn::OnActivate

; 189  : {

  0083d	55		 push	 ebp
  0083e	8b ec		 mov	 ebp, esp
  00840	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00843	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 190  : 	// toggle the activated bit
; 191  : 	m_state.flip ( sknCtrlActivated );

  00846	6a 02		 push	 2
  00848	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0084b	83 c1 08	 add	 ecx, 8
  0084e	e8 00 00 00 00	 call	 ?flip@?$bitset@$04@std@@QAEAAV12@I@Z ; std::bitset<5>::flip

; 192  : 	AddToRefreshList();

  00853	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00856	e8 00 00 00 00	 call	 ?AddToRefreshList@CSkinCtrl@@QAEXXZ ; CSkinCtrl::AddToRefreshList

; 193  : 
; 194  : 	if ( m_state[sknCtrlActivated] ) 

  0085b	6a 02		 push	 2
  0085d	8d 45 f8	 lea	 eax, DWORD PTR $T160025[ebp]
  00860	50		 push	 eax
  00861	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00864	83 c1 08	 add	 ecx, 8
  00867	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  0086c	8b c8		 mov	 ecx, eax
  0086e	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  00873	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00878	85 c0		 test	 eax, eax
  0087a	74 0f		 je	 SHORT $L153995

; 196  : 		g_pToonSettings->set_TabDisplay( true );

  0087c	6a 01		 push	 1
  0087e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00884	e8 00 00 00 00	 call	 ?set_TabDisplay@CToonSettings@@QAEXH@Z ; CToonSettings::set_TabDisplay

; 198  :     else 

  00889	eb 0d		 jmp	 SHORT $L153996
$L153995:

; 200  : 		g_pToonSettings->set_TabDisplay( false );

  0088b	6a 00		 push	 0
  0088d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00893	e8 00 00 00 00	 call	 ?set_TabDisplay@CToonSettings@@QAEXH@Z ; CToonSettings::set_TabDisplay
$L153996:

; 202  : }

  00898	8b e5		 mov	 esp, ebp
  0089a	5d		 pop	 ebp
  0089b	c2 08 00	 ret	 8
?OnActivate@CTabDispBtn@@UAEXFF@Z ENDP			; CTabDispBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CSpeedBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CSpeedBtn::CSpeedBtn
PUBLIC	?OnActivate@CSpeedBtn@@UAEXFF@Z			; CSpeedBtn::OnActivate
PUBLIC	??_7CSpeedBtn@@6B@				; CSpeedBtn::`vftable'
PUBLIC	??_GCSpeedBtn@@UAEPAXI@Z			; CSpeedBtn::`scalar deleting destructor'
PUBLIC	??_ECSpeedBtn@@UAEPAXI@Z			; CSpeedBtn::`vector deleting destructor'
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	?getCombat_Speed@CToonSettings@@QAEHXZ		; CToonSettings::getCombat_Speed
EXTRN	??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinBtn::CSkinBtn
EXTRN	?Right@CString@@QBE?AV1@H@Z:NEAR		; CString::Right
EXTRN	?GetName@CSkinObj@@QAE?AVCString@@XZ:NEAR	; CSkinObj::GetName
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
EXTRN	__imp__atoi:NEAR
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
;	COMDAT ??_7CSpeedBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CSpeedBtn@@6B@ DD FLAT:??_ECSpeedBtn@@UAEPAXI@Z	; CSpeedBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSpeedBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T160035 DD	019930520H
	DD	04H
	DD	FLAT:$T160037
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160037 DD	0ffffffffH
	DD	FLAT:$L160029
	DD	00H
	DD	FLAT:$L160031
	DD	01H
	DD	FLAT:$L160032
	DD	02H
	DD	FLAT:$L160033
xdata$x	ENDS
_TEXT	SEGMENT
$T160027 = -20
$T160028 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
_sName$ = -16
??0CSpeedBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CSpeedBtn::CSpeedBtn

; 206  : {

  0089e	55		 push	 ebp
  0089f	8b ec		 mov	 ebp, esp
  008a1	6a ff		 push	 -1
  008a3	68 00 00 00 00	 push	 $L160036
  008a8	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  008ae	50		 push	 eax
  008af	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  008b6	83 ec 20	 sub	 esp, 32			; 00000020H
  008b9	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  008bc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  008c3	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  008c6	50		 push	 eax
  008c7	83 ec 08	 sub	 esp, 8
  008ca	8b cc		 mov	 ecx, esp
  008cc	89 65 ec	 mov	 DWORD PTR $T160027[ebp], esp
  008cf	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  008d2	52		 push	 edx
  008d3	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  008d8	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  008db	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  008de	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  008e3	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  008e6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  008ea	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  008ed	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSpeedBtn@@6B@ ; CSpeedBtn::`vftable'

; 207  : 	CString sName = obj.GetName();

  008f3	8d 4d f0	 lea	 ecx, DWORD PTR _sName$[ebp]
  008f6	51		 push	 ecx
  008f7	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  008fa	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  008ff	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 208  : 
; 209  : 	m_nSpeed = atoi( sName.Right( 2 ) );

  00903	6a 02		 push	 2
  00905	8d 55 e8	 lea	 edx, DWORD PTR $T160028[ebp]
  00908	52		 push	 edx
  00909	8d 4d f0	 lea	 ecx, DWORD PTR _sName$[ebp]
  0090c	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  00911	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  00914	8b 45 d8	 mov	 eax, DWORD PTR -40+[ebp]
  00917	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  0091a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0091e	8b 4d d4	 mov	 ecx, DWORD PTR -44+[ebp]
  00921	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00926	50		 push	 eax
  00927	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0092d	83 c4 04	 add	 esp, 4
  00930	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00933	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00936	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0093a	8d 4d e8	 lea	 ecx, DWORD PTR $T160028[ebp]
  0093d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 210  : 
; 211  : 	if ( m_nSpeed == g_pToonSettings->getCombat_Speed() )

  00942	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00948	e8 00 00 00 00	 call	 ?getCombat_Speed@CToonSettings@@QAEHXZ ; CToonSettings::getCombat_Speed
  0094d	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  00950	39 42 14	 cmp	 DWORD PTR [edx+20], eax
  00953	75 08		 jne	 SHORT $L154006

; 212  : 		ShowPressed();

  00955	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00958	e8 00 00 00 00	 call	 ?ShowPressed@CSkinCtrl@@UAEXXZ ; CSkinCtrl::ShowPressed
$L154006:

; 213  : }

  0095d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00961	8d 4d f0	 lea	 ecx, DWORD PTR _sName$[ebp]
  00964	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00969	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00970	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00973	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00978	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0097b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0097e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00985	8b e5		 mov	 esp, ebp
  00987	5d		 pop	 ebp
  00988	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L160029:
  000c4	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000c7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000cc	c3		 ret	 0
$L160031:
  000cd	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  000d5	c3		 ret	 0
$L160032:
  000d6	8d 4d f0	 lea	 ecx, DWORD PTR _sName$[ebp]
  000d9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000de	c3		 ret	 0
$L160033:
  000df	8d 4d e8	 lea	 ecx, DWORD PTR $T160028[ebp]
  000e2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000e7	c3		 ret	 0
$L160036:
  000e8	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160035
  000ed	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSpeedBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CSpeedBtn::CSpeedBtn
PUBLIC	??1CSpeedBtn@@UAE@XZ				; CSpeedBtn::~CSpeedBtn
;	COMDAT ??_GCSpeedBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSpeedBtn@@UAEPAXI@Z PROC NEAR			; CSpeedBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSpeedBtn@@UAE@XZ	; CSpeedBtn::~CSpeedBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L154010
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L154010:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSpeedBtn@@UAEPAXI@Z ENDP				; CSpeedBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSpeedBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSpeedBtn@@UAE@XZ PROC NEAR				; CSpeedBtn::~CSpeedBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSpeedBtn@@UAE@XZ ENDP				; CSpeedBtn::~CSpeedBtn
_TEXT	ENDS
EXTRN	?setCombat_Speed@CToonSettings@@QAEXH@Z:NEAR	; CToonSettings::setCombat_Speed
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CSpeedBtn@@UAEXFF@Z PROC NEAR		; CSpeedBtn::OnActivate

; 217  : {

  0098b	55		 push	 ebp
  0098c	8b ec		 mov	 ebp, esp
  0098e	51		 push	 ecx
  0098f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 218  : 	g_pToonSettings->setCombat_Speed( m_nSpeed );

  00992	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00995	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00998	51		 push	 ecx
  00999	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0099f	e8 00 00 00 00	 call	 ?setCombat_Speed@CToonSettings@@QAEXH@Z ; CToonSettings::setCombat_Speed

; 219  : }

  009a4	8b e5		 mov	 esp, ebp
  009a6	5d		 pop	 ebp
  009a7	c2 08 00	 ret	 8
?OnActivate@CSpeedBtn@@UAEXFF@Z ENDP			; CSpeedBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CSetPasswordBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSetPasswordBtn::CSetPasswordBtn
PUBLIC	?OnActivate@CSetPasswordBtn@@UAEXFF@Z		; CSetPasswordBtn::OnActivate
PUBLIC	??_7CSetPasswordBtn@@6B@			; CSetPasswordBtn::`vftable'
PUBLIC	??_GCSetPasswordBtn@@UAEPAXI@Z			; CSetPasswordBtn::`scalar deleting destructor'
PUBLIC	??_ECSetPasswordBtn@@UAEPAXI@Z			; CSetPasswordBtn::`vector deleting destructor'
;	COMDAT ??_7CSetPasswordBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CSetPasswordBtn@@6B@ DD FLAT:??_ECSetPasswordBtn@@UAEPAXI@Z ; CSetPasswordBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSetPasswordBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T160048 DD	019930520H
	DD	01H
	DD	FLAT:$T160050
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160050 DD	0ffffffffH
	DD	FLAT:$L160044
xdata$x	ENDS
_TEXT	SEGMENT
$T160043 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -20
??0CSetPasswordBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSetPasswordBtn::CSetPasswordBtn

; 222  : CSetPasswordBtn::CSetPasswordBtn( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn( obj, pParent ) {}

  009aa	55		 push	 ebp
  009ab	8b ec		 mov	 ebp, esp
  009ad	6a ff		 push	 -1
  009af	68 00 00 00 00	 push	 $L160049
  009b4	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  009ba	50		 push	 eax
  009bb	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  009c2	83 ec 10	 sub	 esp, 16			; 00000010H
  009c5	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  009c8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  009cf	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  009d2	50		 push	 eax
  009d3	83 ec 08	 sub	 esp, 8
  009d6	8b cc		 mov	 ecx, esp
  009d8	89 65 f0	 mov	 DWORD PTR $T160043[ebp], esp
  009db	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  009de	52		 push	 edx
  009df	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  009e4	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  009e7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  009ea	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  009ef	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  009f2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  009f5	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSetPasswordBtn@@6B@ ; CSetPasswordBtn::`vftable'
  009fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a02	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00a05	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00a0a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00a0d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00a10	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00a17	8b e5		 mov	 esp, ebp
  00a19	5d		 pop	 ebp
  00a1a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L160044:
  000f2	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000f5	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000fa	c3		 ret	 0
$L160049:
  000fb	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160048
  00100	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSetPasswordBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CSetPasswordBtn::CSetPasswordBtn
PUBLIC	??1CSetPasswordBtn@@UAE@XZ			; CSetPasswordBtn::~CSetPasswordBtn
;	COMDAT ??_GCSetPasswordBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSetPasswordBtn@@UAEPAXI@Z PROC NEAR		; CSetPasswordBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSetPasswordBtn@@UAE@XZ ; CSetPasswordBtn::~CSetPasswordBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L154027
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L154027:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSetPasswordBtn@@UAEPAXI@Z ENDP			; CSetPasswordBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSetPasswordBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSetPasswordBtn@@UAE@XZ PROC NEAR			; CSetPasswordBtn::~CSetPasswordBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSetPasswordBtn@@UAE@XZ ENDP				; CSetPasswordBtn::~CSetPasswordBtn
_TEXT	ENDS
PUBLIC	?GetGlobal@PMachine@@QAEFH@Z			; PMachine::GetGlobal
PUBLIC	??0CSCI_WorldEgo@@QAE@G@Z			; CSCI_WorldEgo::CSCI_WorldEgo
EXTRN	?pm@@3VPMachine@@A:BYTE				; pm
EXTRN	?setPassword@CSCI_WorldEgo@@QAEXXZ:NEAR		; CSCI_WorldEgo::setPassword
_TEXT	SEGMENT
$T160055 = -4
_this$ = -8
?OnActivate@CSetPasswordBtn@@UAEXFF@Z PROC NEAR		; CSetPasswordBtn::OnActivate

; 226  : {

  00a1d	55		 push	 ebp
  00a1e	8b ec		 mov	 ebp, esp
  00a20	83 ec 08	 sub	 esp, 8
  00a23	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 227  : 	((CSCI_WorldEgo) pm.GetGlobal( gSCI_ego )).setPassword();

  00a26	6a 01		 push	 1
  00a28	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?pm@@3VPMachine@@A
  00a2d	e8 00 00 00 00	 call	 ?GetGlobal@PMachine@@QAEFH@Z ; PMachine::GetGlobal
  00a32	50		 push	 eax
  00a33	8d 4d fc	 lea	 ecx, DWORD PTR $T160055[ebp]
  00a36	e8 00 00 00 00	 call	 ??0CSCI_WorldEgo@@QAE@G@Z ; CSCI_WorldEgo::CSCI_WorldEgo
  00a3b	8b c8		 mov	 ecx, eax
  00a3d	e8 00 00 00 00	 call	 ?setPassword@CSCI_WorldEgo@@QAEXXZ ; CSCI_WorldEgo::setPassword

; 228  : 
; 229  : 	if ( m_pParentWnd ) 

  00a42	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00a45	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00a49	74 16		 je	 SHORT $L154037

; 230  : 		m_pParentWnd->CloseSelf();

  00a4b	6a 00		 push	 0
  00a4d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a50	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00a53	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00a56	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00a59	8b 10		 mov	 edx, DWORD PTR [eax]
  00a5b	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L154037:

; 231  : }

  00a61	8b e5		 mov	 esp, ebp
  00a63	5d		 pop	 ebp
  00a64	c2 08 00	 ret	 8
?OnActivate@CSetPasswordBtn@@UAEXFF@Z ENDP		; CSetPasswordBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CGameSettingsDlg@@QAE@XZ			; CGameSettingsDlg::CGameSettingsDlg
PUBLIC	?CloseSelf@CGameSettingsDlg@@UAEX_N@Z		; CGameSettingsDlg::CloseSelf
PUBLIC	?MakeSkinCtrl@CGameSettingsDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CGameSettingsDlg::MakeSkinCtrl
PUBLIC	?EnableGameModal@CGameSettingsDlg@@UAEXHPAH@Z	; CGameSettingsDlg::EnableGameModal
PUBLIC	?DisableGameModal@CGameSettingsDlg@@UAEXHPAH_N@Z ; CGameSettingsDlg::DisableGameModal
PUBLIC	??_7CGameSettingsDlg@@6B@			; CGameSettingsDlg::`vftable'
PUBLIC	??_GCGameSettingsDlg@@UAEPAXI@Z			; CGameSettingsDlg::`scalar deleting destructor'
PUBLIC	??_ECGameSettingsDlg@@UAEPAXI@Z			; CGameSettingsDlg::`vector deleting destructor'
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?Next@CSkinWnd@@UAEXXZ				; CSkinWnd::Next
PUBLIC	?Previous@CSkinWnd@@UAEXXZ			; CSkinWnd::Previous
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetProcessEvents@CSkinWnd@@MAE_NXZ:NEAR	; CSkinWnd::GetProcessEvents
EXTRN	??0CSkinWnd@@QAE@XZ:NEAR			; CSkinWnd::CSkinWnd
EXTRN	?Disable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Disable
EXTRN	?Enable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Enable
EXTRN	?ProcessRefreshList@CSkinWnd@@UAEHXZ:NEAR	; CSkinWnd::ProcessRefreshList
EXTRN	?UpdateTracking@CSkinWnd@@UAEXXZ:NEAR		; CSkinWnd::UpdateTracking
EXTRN	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CSkinWnd::GetEventSinkMap
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinWnd::GetMessageMap
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
;	COMDAT ??_7CGameSettingsDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
??_7CGameSettingsDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CGameSettingsDlg::`vftable'
	DD	FLAT:??_ECGameSettingsDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CGameSettingsDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CGameSettingsDlg@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CGameSettingsDlg@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CGameSettingsDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CGameSettingsDlg@@QAE@XZ PROC NEAR			; CGameSettingsDlg::CGameSettingsDlg

; 236  : {

  00a67	55		 push	 ebp
  00a68	8b ec		 mov	 ebp, esp
  00a6a	51		 push	 ecx
  00a6b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00a6e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a71	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  00a76	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a79	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGameSettingsDlg@@6B@ ; CGameSettingsDlg::`vftable'

; 237  : 	g_pGameSettings  = this;

  00a7f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00a82	89 0d 00 00 00
	00		 mov	 DWORD PTR ?g_pGameSettings@@3PAVCGameSettingsDlg@@A, ecx ; g_pGameSettings

; 238  : 	m_pMidiBar       = NULL;

  00a88	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00a8b	c7 82 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+152], 0

; 239  : 	m_pSfxBar        = NULL;

  00a95	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a98	c7 80 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+156], 0

; 240  : 	m_pMidiVolume    = NULL;

  00aa2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00aa5	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0

; 241  : 	m_pSfxVolume     = NULL;

  00aaf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00ab2	c7 82 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+164], 0

; 242  :     m_pTabDispBtn    = NULL;

  00abc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00abf	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+168], 0

; 243  :     m_pFullScreenBtn = NULL;

  00ac9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00acc	c7 81 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+172], 0

; 244  : }

  00ad6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00ad9	8b e5		 mov	 esp, ebp
  00adb	5d		 pop	 ebp
  00adc	c3		 ret	 0
??0CGameSettingsDlg@@QAE@XZ ENDP			; CGameSettingsDlg::CGameSettingsDlg
_TEXT	ENDS
PUBLIC	??1CGameSettingsDlg@@UAE@XZ			; CGameSettingsDlg::~CGameSettingsDlg
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
;	COMDAT ??_GCGameSettingsDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGameSettingsDlg@@UAEPAXI@Z PROC NEAR		; CGameSettingsDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGameSettingsDlg@@UAE@XZ ; CGameSettingsDlg::~CGameSettingsDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L154044
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L154044:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCGameSettingsDlg@@UAEPAXI@Z ENDP			; CGameSettingsDlg::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSkinWnd@@UAE@XZ:NEAR			; CSkinWnd::~CSkinWnd
;	COMDAT ??1CGameSettingsDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGameSettingsDlg@@UAE@XZ PROC NEAR			; CGameSettingsDlg::~CGameSettingsDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CGameSettingsDlg@@UAE@XZ ENDP			; CGameSettingsDlg::~CGameSettingsDlg
_TEXT	ENDS
EXTRN	?CloseSelf@CSkinWnd@@UAEX_N@Z:NEAR		; CSkinWnd::CloseSelf
_TEXT	SEGMENT
$T160062 = -4
$T160063 = -8
_bTransient$ = 8
_this$ = -12
?CloseSelf@CGameSettingsDlg@@UAEX_N@Z PROC NEAR		; CGameSettingsDlg::CloseSelf

; 248  : {

  00add	55		 push	 ebp
  00ade	8b ec		 mov	 ebp, esp
  00ae0	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00ae3	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 249  : 	g_pGameSettings = NULL;

  00ae6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGameSettings@@3PAVCGameSettingsDlg@@A, 0 ; g_pGameSettings

; 250  : 
; 251  : 	if ( m_pMidiVolume ) {

  00af0	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00af3	83 b8 a0 00 00
	00 00		 cmp	 DWORD PTR [eax+160], 0
  00afa	74 25		 je	 SHORT $L154051

; 252  : 		delete m_pMidiVolume;

  00afc	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00aff	8b 91 a0 00 00
	00		 mov	 edx, DWORD PTR [ecx+160]
  00b05	89 55 fc	 mov	 DWORD PTR $T160062[ebp], edx
  00b08	8b 45 fc	 mov	 eax, DWORD PTR $T160062[ebp]
  00b0b	50		 push	 eax
  00b0c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00b11	83 c4 04	 add	 esp, 4

; 253  : 		m_pMidiVolume = NULL;

  00b14	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00b17	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0
$L154051:

; 255  : 
; 256  : 	if ( m_pSfxVolume ) {

  00b21	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00b24	83 ba a4 00 00
	00 00		 cmp	 DWORD PTR [edx+164], 0
  00b2b	74 25		 je	 SHORT $L154053

; 257  : 		delete m_pSfxVolume;

  00b2d	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00b30	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00b36	89 4d f8	 mov	 DWORD PTR $T160063[ebp], ecx
  00b39	8b 55 f8	 mov	 edx, DWORD PTR $T160063[ebp]
  00b3c	52		 push	 edx
  00b3d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00b42	83 c4 04	 add	 esp, 4

; 258  : 		m_pSfxVolume = NULL;

  00b45	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00b48	c7 80 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+164], 0
$L154053:

; 260  : 
; 261  : 	CSkinWnd::CloseSelf( bTransient );

  00b52	8a 4d 08	 mov	 cl, BYTE PTR _bTransient$[ebp]
  00b55	51		 push	 ecx
  00b56	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00b59	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 262  : }

  00b5e	8b e5		 mov	 esp, ebp
  00b60	5d		 pop	 ebp
  00b61	c2 04 00	 ret	 4
?CloseSelf@CGameSettingsDlg@@UAEX_N@Z ENDP		; CGameSettingsDlg::CloseSelf
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	?Create@CGameSettingsDlg@@QAEHXZ		; CGameSettingsDlg::Create
PUBLIC	__real@4@4005fe00000000000000
PUBLIC	?SetTransient@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetTransient
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CScrollable::SetScrollBar
EXTRN	?g_pMainWindow@@3PAVCMainWindow@@A:DWORD	; g_pMainWindow
EXTRN	__fltused:NEAR
EXTRN	?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z:NEAR ; CSkinWnd::CreatePopupChild
EXTRN	?SetPriority@CSkinWnd@@QAEXH@Z:NEAR		; CSkinWnd::SetPriority
EXTRN	?RestoreLocation@CSkinWnd@@QAE_NXZ:NEAR		; CSkinWnd::RestoreLocation
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
_DATA	SEGMENT
$SG154060 DB	'Game Settings', 00H
	ORG $+2
$SG154061 DB	'Dlg_GameOptions.skn', 00H
_DATA	ENDS
;	COMDAT __real@4@4005fe00000000000000
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GameSettings.cpp
CONST	SEGMENT
__real@4@4005fe00000000000000 DD 042fe0000r	; 127
CONST	ENDS
xdata$x	SEGMENT
$T160077 DD	019930520H
	DD	02H
	DD	FLAT:$T160082
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160082 DD	0ffffffffH
	DD	FLAT:$L160074
	DD	0ffffffffH
	DD	FLAT:$L160075
xdata$x	ENDS
_TEXT	SEGMENT
$T160065 = -32
$T160066 = -36
$T160067 = -40
$T160070 = -44
$T160071 = -48
__$EHRec$ = -12
_this$ = -52
_bCreated$ = -16
?Create@CGameSettingsDlg@@QAEHXZ PROC NEAR		; CGameSettingsDlg::Create

; 266  : {

  00b64	55		 push	 ebp
  00b65	8b ec		 mov	 ebp, esp
  00b67	6a ff		 push	 -1
  00b69	68 00 00 00 00	 push	 $L160080
  00b6e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00b74	50		 push	 eax
  00b75	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00b7c	83 ec 38	 sub	 esp, 56			; 00000038H
  00b7f	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 267  : 	SetPriority( swPriGameModal );

  00b82	6a 07		 push	 7
  00b84	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b87	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 268  : 	SetTransient( false );

  00b8c	6a 00		 push	 0
  00b8e	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b91	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 269  : 
; 270  : 	BOOL bCreated = CSkinWnd::CreatePopupChild ( "Dlg_GameOptions.skn", "Game Settings", CRect( 0, 0, 0, 0 ), g_pMainWindow, FALSE );

  00b96	6a 01		 push	 1
  00b98	6a 00		 push	 0
  00b9a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  00b9f	50		 push	 eax
  00ba0	6a 00		 push	 0
  00ba2	6a 00		 push	 0
  00ba4	6a 00		 push	 0
  00ba6	6a 00		 push	 0
  00ba8	8d 4d e0	 lea	 ecx, DWORD PTR $T160065[ebp]
  00bab	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  00bb0	50		 push	 eax
  00bb1	68 00 00 00 00	 push	 OFFSET FLAT:$SG154060
  00bb6	68 00 00 00 00	 push	 OFFSET FLAT:$SG154061
  00bbb	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bbe	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  00bc3	89 45 f0	 mov	 DWORD PTR _bCreated$[ebp], eax

; 271  : 
; 272  : 	if ( bCreated ) {

  00bc6	83 7d f0 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  00bca	0f 84 68 01 00
	00		 je	 $L154079

; 273  : 		assert ( NULL != m_pMidiBar );
; 274  : 		assert ( NULL != m_pSfxBar );
; 275  : 
; 276  : 		m_pMidiVolume = new CMidiVolume();

  00bd0	6a 20		 push	 32			; 00000020H
  00bd2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00bd7	83 c4 04	 add	 esp, 4
  00bda	89 45 d8	 mov	 DWORD PTR $T160067[ebp], eax
  00bdd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00be4	83 7d d8 00	 cmp	 DWORD PTR $T160067[ebp], 0
  00be8	74 0d		 je	 SHORT $L160068
  00bea	8b 4d d8	 mov	 ecx, DWORD PTR $T160067[ebp]
  00bed	e8 00 00 00 00	 call	 ??0CMidiVolume@@QAE@XZ	; CMidiVolume::CMidiVolume
  00bf2	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  00bf5	eb 07		 jmp	 SHORT $L160069
$L160068:
  00bf7	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR -56+[ebp], 0
$L160069:
  00bfe	8b 4d c8	 mov	 ecx, DWORD PTR -56+[ebp]
  00c01	89 4d dc	 mov	 DWORD PTR $T160066[ebp], ecx
  00c04	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c0b	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00c0e	8b 45 dc	 mov	 eax, DWORD PTR $T160066[ebp]
  00c11	89 82 a0 00 00
	00		 mov	 DWORD PTR [edx+160], eax

; 277  : 		m_pSfxVolume = new CSfxVolume();

  00c17	6a 20		 push	 32			; 00000020H
  00c19	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c1e	83 c4 04	 add	 esp, 4
  00c21	89 45 d0	 mov	 DWORD PTR $T160071[ebp], eax
  00c24	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00c2b	83 7d d0 00	 cmp	 DWORD PTR $T160071[ebp], 0
  00c2f	74 0d		 je	 SHORT $L160072
  00c31	8b 4d d0	 mov	 ecx, DWORD PTR $T160071[ebp]
  00c34	e8 00 00 00 00	 call	 ??0CSfxVolume@@QAE@XZ	; CSfxVolume::CSfxVolume
  00c39	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  00c3c	eb 07		 jmp	 SHORT $L160073
$L160072:
  00c3e	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L160073:
  00c45	8b 4d c4	 mov	 ecx, DWORD PTR -60+[ebp]
  00c48	89 4d d4	 mov	 DWORD PTR $T160070[ebp], ecx
  00c4b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c52	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00c55	8b 45 d4	 mov	 eax, DWORD PTR $T160070[ebp]
  00c58	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax

; 278  : 
; 279  : 		m_pMidiVolume->SetScrollBar( m_pMidiBar );

  00c5e	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c61	8b 91 98 00 00
	00		 mov	 edx, DWORD PTR [ecx+152]
  00c67	52		 push	 edx
  00c68	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00c6b	8b 88 a0 00 00
	00		 mov	 ecx, DWORD PTR [eax+160]
  00c71	e8 00 00 00 00	 call	 ?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ; CScrollable::SetScrollBar

; 280  : 		m_pSfxVolume->SetScrollBar( m_pSfxBar );

  00c76	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c79	8b 91 9c 00 00
	00		 mov	 edx, DWORD PTR [ecx+156]
  00c7f	52		 push	 edx
  00c80	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00c83	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00c89	e8 00 00 00 00	 call	 ?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ; CScrollable::SetScrollBar

; 281  : 
; 282  : 		m_pMidiVolume->SetLocation( (float) ( (float) g_pToonSettings->getSound_MidiVolume() / (float) 127 ) );

  00c8e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00c94	e8 00 00 00 00	 call	 ?getSound_MidiVolume@CToonSettings@@QAEHXZ ; CToonSettings::getSound_MidiVolume
  00c99	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  00c9c	db 45 c0	 fild	 DWORD PTR -64+[ebp]
  00c9f	d8 35 00 00 00
	00		 fdiv	 DWORD PTR __real@4@4005fe00000000000000
  00ca5	51		 push	 ecx
  00ca6	d9 1c 24	 fstp	 DWORD PTR [esp]
  00ca9	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00cac	8b 89 a0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+160]
  00cb2	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00cb5	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  00cbb	8b 10		 mov	 edx, DWORD PTR [eax]
  00cbd	ff 52 04	 call	 DWORD PTR [edx+4]

; 283  : 		m_pSfxVolume->SetLocation( (float) ( (float) g_pToonSettings->getSound_SfxVolume() / (float) 127 ) );

  00cc0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00cc6	e8 00 00 00 00	 call	 ?getSound_SfxVolume@CToonSettings@@QAEHXZ ; CToonSettings::getSound_SfxVolume
  00ccb	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  00cce	db 45 bc	 fild	 DWORD PTR -68+[ebp]
  00cd1	d8 35 00 00 00
	00		 fdiv	 DWORD PTR __real@4@4005fe00000000000000
  00cd7	51		 push	 ecx
  00cd8	d9 1c 24	 fstp	 DWORD PTR [esp]
  00cdb	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00cde	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00ce4	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00ce7	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00ced	8b 10		 mov	 edx, DWORD PTR [eax]
  00cef	ff 52 04	 call	 DWORD PTR [edx+4]

; 284  : 
; 285  :         if (g_pWindowMgr && g_pWindowMgr->GetFullScreen() )

  00cf2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  00cf9	74 3d		 je	 SHORT $L154079
  00cfb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  00d01	e8 00 00 00 00	 call	 ?GetFullScreen@CWindowMgr@@QAEHXZ ; CWindowMgr::GetFullScreen
  00d06	85 c0		 test	 eax, eax
  00d08	74 2e		 je	 SHORT $L154079

; 287  :             m_pTabDispBtn->Disable();

  00d0a	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00d0d	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  00d13	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00d16	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  00d1c	8b 10		 mov	 edx, DWORD PTR [eax]
  00d1e	ff 52 0c	 call	 DWORD PTR [edx+12]

; 288  :             m_pTabDispBtn->Refresh();

  00d21	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00d24	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  00d2a	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00d2d	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  00d33	8b 10		 mov	 edx, DWORD PTR [eax]
  00d35	ff 52 08	 call	 DWORD PTR [edx+8]
$L154079:

; 291  : 
; 292  : 	RestoreLocation();

  00d38	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d3b	e8 00 00 00 00	 call	 ?RestoreLocation@CSkinWnd@@QAE_NXZ ; CSkinWnd::RestoreLocation

; 293  : 	ShowWindow( SW_SHOW );

  00d40	6a 05		 push	 5
  00d42	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00d45	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 294  : 
; 295  : 	return bCreated;

  00d4a	8b 45 f0	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 296  : }

  00d4d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00d50	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00d57	8b e5		 mov	 esp, ebp
  00d59	5d		 pop	 ebp
  00d5a	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L160074:
  00105	8b 45 d8	 mov	 eax, DWORD PTR $T160067[ebp]
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0010e	59		 pop	 ecx
  0010f	c3		 ret	 0
$L160075:
  00110	8b 45 d0	 mov	 eax, DWORD PTR $T160071[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00119	59		 pop	 ecx
  0011a	c3		 ret	 0
$L160080:
  0011b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160077
  00120	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CGameSettingsDlg@@QAEHXZ ENDP			; CGameSettingsDlg::Create
PUBLIC	??8@YG_NABVCString@@PBD@Z			; operator==
PUBLIC	??8@YG_NPBDABVCString@@@Z			; operator==
EXTRN	??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinScrollBar::CSkinScrollBar
EXTRN	?Left@CString@@QBE?AV1@H@Z:NEAR			; CString::Left
EXTRN	?Find@CString@@QBEHPBDH@Z:NEAR			; CString::Find
EXTRN	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::MakeSkinCtrl
_DATA	SEGMENT
$SG154088 DB	'_', 00H
	ORG $+2
$SG154090 DB	'at', 00H
	ORG $+1
$SG154098 DB	'lt', 00H
	ORG $+1
$SG154106 DB	'ae', 00H
	ORG $+1
$SG154114 DB	'ft', 00H
	ORG $+1
$SG154122 DB	'st', 00H
	ORG $+1
$SG154130 DB	'mt', 00H
	ORG $+1
$SG154138 DB	'tt', 00H
	ORG $+1
$SG154146 DB	'tb', 00H
	ORG $+1
$SG154154 DB	'sb', 00H
	ORG $+1
$SG154156 DB	'sb_Midi', 00H
$SG154164 DB	'sb_Sfx', 00H
	ORG $+1
$SG154172 DB	'pcb', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T160179 DD	019930520H
	DD	0eH
	DD	FLAT:$T160181
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160181 DD	0ffffffffH
	DD	FLAT:$L160152
	DD	00H
	DD	FLAT:$L160153
	DD	01H
	DD	FLAT:$L160154
	DD	02H
	DD	FLAT:$L160155
	DD	02H
	DD	FLAT:$L160157
	DD	02H
	DD	FLAT:$L160159
	DD	02H
	DD	FLAT:$L160161
	DD	02H
	DD	FLAT:$L160163
	DD	02H
	DD	FLAT:$L160165
	DD	02H
	DD	FLAT:$L160167
	DD	02H
	DD	FLAT:$L160169
	DD	02H
	DD	FLAT:$L160171
	DD	02H
	DD	FLAT:$L160173
	DD	02H
	DD	FLAT:$L160175
xdata$x	ENDS
_TEXT	SEGMENT
$T160084 = -24
$T160085 = -28
$T160086 = -32
$T160087 = -36
$T160090 = -40
$T160091 = -44
$T160092 = -48
$T160093 = -52
$T160096 = -56
$T160097 = -60
$T160098 = -64
$T160099 = -68
$T160102 = -72
$T160103 = -76
$T160104 = -80
$T160105 = -84
$T160108 = -88
$T160109 = -92
$T160110 = -96
$T160111 = -100
$T160114 = -104
$T160115 = -108
$T160116 = -112
$T160117 = -116
$T160120 = -120
$T160121 = -124
$T160122 = -128
$T160123 = -132
$T160126 = -136
$T160127 = -140
$T160128 = -144
$T160129 = -148
$T160132 = -152
$T160133 = -156
$T160134 = -160
$T160135 = -164
$T160138 = -168
$T160139 = -172
$T160140 = -176
$T160141 = -180
$T160144 = -184
$T160145 = -188
$T160146 = -192
$T160147 = -196
$T160150 = -200
$T160151 = -204
__$EHRec$ = -12
_obj$ = 8
_this$ = -208
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CGameSettingsDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CGameSettingsDlg::MakeSkinCtrl

; 300  : {

  00d5b	55		 push	 ebp
  00d5c	8b ec		 mov	 ebp, esp
  00d5e	6a ff		 push	 -1
  00d60	68 00 00 00 00	 push	 $L160180
  00d65	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00d6b	50		 push	 eax
  00d6c	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00d73	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H
  00d79	89 8d 30 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  00d7f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 301  : 	// the type of the control is specified by the left characters of the name up to the _
; 302  : 	CString name = obj.GetName();

  00d86	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  00d89	50		 push	 eax
  00d8a	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00d8d	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  00d92	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 303  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  00d96	6a 00		 push	 0
  00d98	68 00 00 00 00	 push	 OFFSET FLAT:$SG154088
  00d9d	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00da0	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  00da5	50		 push	 eax
  00da6	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00da9	51		 push	 ecx
  00daa	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00dad	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  00db2	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 304  : 
; 305  : 	if ( "at" == id )

  00db6	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  00db9	52		 push	 edx
  00dba	68 00 00 00 00	 push	 OFFSET FLAT:$SG154090
  00dbf	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00dc4	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00dc9	85 c0		 test	 eax, eax
  00dcb	0f 84 9d 00 00
	00		 je	 $L154089

; 306  : 		return new CAcceptBtn( obj, this );

  00dd1	6a 14		 push	 20			; 00000014H
  00dd3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00dd8	83 c4 04	 add	 esp, 4
  00ddb	89 45 e0	 mov	 DWORD PTR $T160086[ebp], eax
  00dde	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00de2	83 7d e0 00	 cmp	 DWORD PTR $T160086[ebp], 0
  00de6	74 3a		 je	 SHORT $L160088
  00de8	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00dee	50		 push	 eax
  00def	83 ec 08	 sub	 esp, 8
  00df2	8b cc		 mov	 ecx, esp
  00df4	89 65 dc	 mov	 DWORD PTR $T160087[ebp], esp
  00df7	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00dfa	52		 push	 edx
  00dfb	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00e00	89 85 2c ff ff
	ff		 mov	 DWORD PTR -212+[ebp], eax
  00e06	8b 4d e0	 mov	 ecx, DWORD PTR $T160086[ebp]
  00e09	e8 00 00 00 00	 call	 ??0CAcceptBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CAcceptBtn::CAcceptBtn
  00e0e	89 85 28 ff ff
	ff		 mov	 DWORD PTR -216+[ebp], eax
  00e14	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR -216+[ebp]
  00e1a	89 85 24 ff ff
	ff		 mov	 DWORD PTR -220+[ebp], eax
  00e20	eb 0a		 jmp	 SHORT $L160089
$L160088:
  00e22	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -220+[ebp], 0
$L160089:
  00e2c	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR -220+[ebp]
  00e32	89 4d e4	 mov	 DWORD PTR $T160085[ebp], ecx
  00e35	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00e39	8b 55 e4	 mov	 edx, DWORD PTR $T160085[ebp]
  00e3c	89 55 e8	 mov	 DWORD PTR $T160084[ebp], edx
  00e3f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e43	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00e46	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00e4b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00e4f	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00e52	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00e57	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e5e	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00e61	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00e66	8b 45 e8	 mov	 eax, DWORD PTR $T160084[ebp]
  00e69	e9 51 08 00 00	 jmp	 $L154083
$L154089:

; 307  : 
; 308  : 	if ( "lt" == id )

  00e6e	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00e71	50		 push	 eax
  00e72	68 00 00 00 00	 push	 OFFSET FLAT:$SG154098
  00e77	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00e7c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00e81	85 c0		 test	 eax, eax
  00e83	0f 84 9d 00 00
	00		 je	 $L154097

; 309  : 		return new CLagBtn( obj, this );

  00e89	6a 14		 push	 20			; 00000014H
  00e8b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00e90	83 c4 04	 add	 esp, 4
  00e93	89 45 d0	 mov	 DWORD PTR $T160092[ebp], eax
  00e96	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00e9a	83 7d d0 00	 cmp	 DWORD PTR $T160092[ebp], 0
  00e9e	74 3a		 je	 SHORT $L160094
  00ea0	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00ea6	51		 push	 ecx
  00ea7	83 ec 08	 sub	 esp, 8
  00eaa	8b cc		 mov	 ecx, esp
  00eac	89 65 cc	 mov	 DWORD PTR $T160093[ebp], esp
  00eaf	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00eb2	52		 push	 edx
  00eb3	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00eb8	89 85 20 ff ff
	ff		 mov	 DWORD PTR -224+[ebp], eax
  00ebe	8b 4d d0	 mov	 ecx, DWORD PTR $T160092[ebp]
  00ec1	e8 00 00 00 00	 call	 ??0CLagBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CLagBtn::CLagBtn
  00ec6	89 85 1c ff ff
	ff		 mov	 DWORD PTR -228+[ebp], eax
  00ecc	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR -228+[ebp]
  00ed2	89 85 18 ff ff
	ff		 mov	 DWORD PTR -232+[ebp], eax
  00ed8	eb 0a		 jmp	 SHORT $L160095
$L160094:
  00eda	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -232+[ebp], 0
$L160095:
  00ee4	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR -232+[ebp]
  00eea	89 4d d4	 mov	 DWORD PTR $T160091[ebp], ecx
  00eed	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00ef1	8b 55 d4	 mov	 edx, DWORD PTR $T160091[ebp]
  00ef4	89 55 d8	 mov	 DWORD PTR $T160090[ebp], edx
  00ef7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00efb	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00efe	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00f03	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00f07	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00f0a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00f0f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00f16	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00f19	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00f1e	8b 45 d8	 mov	 eax, DWORD PTR $T160090[ebp]
  00f21	e9 99 07 00 00	 jmp	 $L154083
$L154097:

; 310  : 
; 311  : 	if ( "ae" == id )

  00f26	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00f29	50		 push	 eax
  00f2a	68 00 00 00 00	 push	 OFFSET FLAT:$SG154106
  00f2f	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00f34	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00f39	85 c0		 test	 eax, eax
  00f3b	0f 84 9d 00 00
	00		 je	 $L154105

; 312  : 		return new CAltEnterBtn( obj, this );

  00f41	6a 14		 push	 20			; 00000014H
  00f43	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00f48	83 c4 04	 add	 esp, 4
  00f4b	89 45 c0	 mov	 DWORD PTR $T160098[ebp], eax
  00f4e	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00f52	83 7d c0 00	 cmp	 DWORD PTR $T160098[ebp], 0
  00f56	74 3a		 je	 SHORT $L160100
  00f58	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00f5e	51		 push	 ecx
  00f5f	83 ec 08	 sub	 esp, 8
  00f62	8b cc		 mov	 ecx, esp
  00f64	89 65 bc	 mov	 DWORD PTR $T160099[ebp], esp
  00f67	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00f6a	52		 push	 edx
  00f6b	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00f70	89 85 14 ff ff
	ff		 mov	 DWORD PTR -236+[ebp], eax
  00f76	8b 4d c0	 mov	 ecx, DWORD PTR $T160098[ebp]
  00f79	e8 00 00 00 00	 call	 ??0CAltEnterBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CAltEnterBtn::CAltEnterBtn
  00f7e	89 85 10 ff ff
	ff		 mov	 DWORD PTR -240+[ebp], eax
  00f84	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR -240+[ebp]
  00f8a	89 85 0c ff ff
	ff		 mov	 DWORD PTR -244+[ebp], eax
  00f90	eb 0a		 jmp	 SHORT $L160101
$L160100:
  00f92	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -244+[ebp], 0
$L160101:
  00f9c	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR -244+[ebp]
  00fa2	89 4d c4	 mov	 DWORD PTR $T160097[ebp], ecx
  00fa5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00fa9	8b 55 c4	 mov	 edx, DWORD PTR $T160097[ebp]
  00fac	89 55 c8	 mov	 DWORD PTR $T160096[ebp], edx
  00faf	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00fb3	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00fb6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00fbb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00fbf	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00fc2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00fc7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00fce	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00fd1	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00fd6	8b 45 c8	 mov	 eax, DWORD PTR $T160096[ebp]
  00fd9	e9 e1 06 00 00	 jmp	 $L154083
$L154105:

; 313  : 	
; 314  : 	if ( "ft" == id )

  00fde	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00fe1	50		 push	 eax
  00fe2	68 00 00 00 00	 push	 OFFSET FLAT:$SG154114
  00fe7	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00fec	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00ff1	85 c0		 test	 eax, eax
  00ff3	0f 84 ac 00 00
	00		 je	 $L154113

; 315  : 		return m_pFullScreenBtn = new CFullScreenBtn( obj, this );

  00ff9	6a 14		 push	 20			; 00000014H
  00ffb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01000	83 c4 04	 add	 esp, 4
  01003	89 45 b0	 mov	 DWORD PTR $T160104[ebp], eax
  01006	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0100a	83 7d b0 00	 cmp	 DWORD PTR $T160104[ebp], 0
  0100e	74 3a		 je	 SHORT $L160106
  01010	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01016	51		 push	 ecx
  01017	83 ec 08	 sub	 esp, 8
  0101a	8b cc		 mov	 ecx, esp
  0101c	89 65 ac	 mov	 DWORD PTR $T160105[ebp], esp
  0101f	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01022	52		 push	 edx
  01023	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01028	89 85 08 ff ff
	ff		 mov	 DWORD PTR -248+[ebp], eax
  0102e	8b 4d b0	 mov	 ecx, DWORD PTR $T160104[ebp]
  01031	e8 00 00 00 00	 call	 ??0CFullScreenBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CFullScreenBtn::CFullScreenBtn
  01036	89 85 04 ff ff
	ff		 mov	 DWORD PTR -252+[ebp], eax
  0103c	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR -252+[ebp]
  01042	89 85 00 ff ff
	ff		 mov	 DWORD PTR -256+[ebp], eax
  01048	eb 0a		 jmp	 SHORT $L160107
$L160106:
  0104a	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -256+[ebp], 0
$L160107:
  01054	8b 8d 00 ff ff
	ff		 mov	 ecx, DWORD PTR -256+[ebp]
  0105a	89 4d b4	 mov	 DWORD PTR $T160103[ebp], ecx
  0105d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01061	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01067	8b 45 b4	 mov	 eax, DWORD PTR $T160103[ebp]
  0106a	89 82 ac 00 00
	00		 mov	 DWORD PTR [edx+172], eax
  01070	8b 4d b4	 mov	 ecx, DWORD PTR $T160103[ebp]
  01073	89 4d b8	 mov	 DWORD PTR $T160102[ebp], ecx
  01076	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0107a	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0107d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01082	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01086	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01089	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0108e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01095	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01098	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0109d	8b 45 b8	 mov	 eax, DWORD PTR $T160102[ebp]
  010a0	e9 1a 06 00 00	 jmp	 $L154083
$L154113:

; 316  : 	
; 317  : 	if ( "st" == id )

  010a5	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  010a8	52		 push	 edx
  010a9	68 00 00 00 00	 push	 OFFSET FLAT:$SG154122
  010ae	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  010b3	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  010b8	85 c0		 test	 eax, eax
  010ba	0f 84 9d 00 00
	00		 je	 $L154121

; 318  : 		return new CSfxBtn( obj, this );

  010c0	6a 14		 push	 20			; 00000014H
  010c2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  010c7	83 c4 04	 add	 esp, 4
  010ca	89 45 a0	 mov	 DWORD PTR $T160110[ebp], eax
  010cd	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  010d1	83 7d a0 00	 cmp	 DWORD PTR $T160110[ebp], 0
  010d5	74 3a		 je	 SHORT $L160112
  010d7	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  010dd	50		 push	 eax
  010de	83 ec 08	 sub	 esp, 8
  010e1	8b cc		 mov	 ecx, esp
  010e3	89 65 9c	 mov	 DWORD PTR $T160111[ebp], esp
  010e6	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  010e9	52		 push	 edx
  010ea	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  010ef	89 85 fc fe ff
	ff		 mov	 DWORD PTR -260+[ebp], eax
  010f5	8b 4d a0	 mov	 ecx, DWORD PTR $T160110[ebp]
  010f8	e8 00 00 00 00	 call	 ??0CSfxBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSfxBtn::CSfxBtn
  010fd	89 85 f8 fe ff
	ff		 mov	 DWORD PTR -264+[ebp], eax
  01103	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR -264+[ebp]
  01109	89 85 f4 fe ff
	ff		 mov	 DWORD PTR -268+[ebp], eax
  0110f	eb 0a		 jmp	 SHORT $L160113
$L160112:
  01111	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -268+[ebp], 0
$L160113:
  0111b	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR -268+[ebp]
  01121	89 4d a4	 mov	 DWORD PTR $T160109[ebp], ecx
  01124	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01128	8b 55 a4	 mov	 edx, DWORD PTR $T160109[ebp]
  0112b	89 55 a8	 mov	 DWORD PTR $T160108[ebp], edx
  0112e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01132	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01135	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0113a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0113e	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01141	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0114d	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01150	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01155	8b 45 a8	 mov	 eax, DWORD PTR $T160108[ebp]
  01158	e9 62 05 00 00	 jmp	 $L154083
$L154121:

; 319  : 	
; 320  : 	if ( "mt" == id )

  0115d	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01160	50		 push	 eax
  01161	68 00 00 00 00	 push	 OFFSET FLAT:$SG154130
  01166	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  0116b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01170	85 c0		 test	 eax, eax
  01172	0f 84 9d 00 00
	00		 je	 $L154129

; 321  : 		return new CMidiBtn( obj, this );

  01178	6a 14		 push	 20			; 00000014H
  0117a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0117f	83 c4 04	 add	 esp, 4
  01182	89 45 90	 mov	 DWORD PTR $T160116[ebp], eax
  01185	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  01189	83 7d 90 00	 cmp	 DWORD PTR $T160116[ebp], 0
  0118d	74 3a		 je	 SHORT $L160118
  0118f	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01195	51		 push	 ecx
  01196	83 ec 08	 sub	 esp, 8
  01199	8b cc		 mov	 ecx, esp
  0119b	89 65 8c	 mov	 DWORD PTR $T160117[ebp], esp
  0119e	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  011a1	52		 push	 edx
  011a2	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  011a7	89 85 f0 fe ff
	ff		 mov	 DWORD PTR -272+[ebp], eax
  011ad	8b 4d 90	 mov	 ecx, DWORD PTR $T160116[ebp]
  011b0	e8 00 00 00 00	 call	 ??0CMidiBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CMidiBtn::CMidiBtn
  011b5	89 85 ec fe ff
	ff		 mov	 DWORD PTR -276+[ebp], eax
  011bb	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR -276+[ebp]
  011c1	89 85 e8 fe ff
	ff		 mov	 DWORD PTR -280+[ebp], eax
  011c7	eb 0a		 jmp	 SHORT $L160119
$L160118:
  011c9	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -280+[ebp], 0
$L160119:
  011d3	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR -280+[ebp]
  011d9	89 4d 94	 mov	 DWORD PTR $T160115[ebp], ecx
  011dc	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  011e0	8b 55 94	 mov	 edx, DWORD PTR $T160115[ebp]
  011e3	89 55 98	 mov	 DWORD PTR $T160114[ebp], edx
  011e6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  011ea	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  011ed	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  011f2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  011f6	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  011f9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  011fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01205	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01208	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0120d	8b 45 98	 mov	 eax, DWORD PTR $T160114[ebp]
  01210	e9 aa 04 00 00	 jmp	 $L154083
$L154129:

; 322  : 
; 323  : 	if ( "tt" == id )

  01215	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01218	50		 push	 eax
  01219	68 00 00 00 00	 push	 OFFSET FLAT:$SG154138
  0121e	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  01223	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01228	85 c0		 test	 eax, eax
  0122a	0f 84 af 00 00
	00		 je	 $L154137

; 324  : 		return m_pTabDispBtn = new CTabDispBtn( obj, this );

  01230	6a 14		 push	 20			; 00000014H
  01232	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01237	83 c4 04	 add	 esp, 4
  0123a	89 45 80	 mov	 DWORD PTR $T160122[ebp], eax
  0123d	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  01241	83 7d 80 00	 cmp	 DWORD PTR $T160122[ebp], 0
  01245	74 3d		 je	 SHORT $L160124
  01247	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0124d	51		 push	 ecx
  0124e	83 ec 08	 sub	 esp, 8
  01251	8b cc		 mov	 ecx, esp
  01253	89 a5 7c ff ff
	ff		 mov	 DWORD PTR $T160123[ebp], esp
  01259	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0125c	52		 push	 edx
  0125d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01262	89 85 e4 fe ff
	ff		 mov	 DWORD PTR -284+[ebp], eax
  01268	8b 4d 80	 mov	 ecx, DWORD PTR $T160122[ebp]
  0126b	e8 00 00 00 00	 call	 ??0CTabDispBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CTabDispBtn::CTabDispBtn
  01270	89 85 e0 fe ff
	ff		 mov	 DWORD PTR -288+[ebp], eax
  01276	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR -288+[ebp]
  0127c	89 85 dc fe ff
	ff		 mov	 DWORD PTR -292+[ebp], eax
  01282	eb 0a		 jmp	 SHORT $L160125
$L160124:
  01284	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -292+[ebp], 0
$L160125:
  0128e	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR -292+[ebp]
  01294	89 4d 84	 mov	 DWORD PTR $T160121[ebp], ecx
  01297	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0129b	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  012a1	8b 45 84	 mov	 eax, DWORD PTR $T160121[ebp]
  012a4	89 82 a8 00 00
	00		 mov	 DWORD PTR [edx+168], eax
  012aa	8b 4d 84	 mov	 ecx, DWORD PTR $T160121[ebp]
  012ad	89 4d 88	 mov	 DWORD PTR $T160120[ebp], ecx
  012b0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  012b4	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  012b7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  012bc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  012c0	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  012c3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  012c8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  012cf	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  012d2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  012d7	8b 45 88	 mov	 eax, DWORD PTR $T160120[ebp]
  012da	e9 e0 03 00 00	 jmp	 $L154083
$L154137:

; 325  : 
; 326  : 	if ( "tb" == id )

  012df	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  012e2	52		 push	 edx
  012e3	68 00 00 00 00	 push	 OFFSET FLAT:$SG154146
  012e8	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  012ed	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  012f2	85 c0		 test	 eax, eax
  012f4	0f 84 b5 00 00
	00		 je	 $L154145

; 327  : 		return new CSpeedBtn( obj, this );

  012fa	6a 18		 push	 24			; 00000018H
  012fc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01301	83 c4 04	 add	 esp, 4
  01304	89 85 70 ff ff
	ff		 mov	 DWORD PTR $T160128[ebp], eax
  0130a	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  0130e	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR $T160128[ebp], 0
  01315	74 40		 je	 SHORT $L160130
  01317	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0131d	50		 push	 eax
  0131e	83 ec 08	 sub	 esp, 8
  01321	8b cc		 mov	 ecx, esp
  01323	89 a5 6c ff ff
	ff		 mov	 DWORD PTR $T160129[ebp], esp
  01329	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0132c	52		 push	 edx
  0132d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01332	89 85 d8 fe ff
	ff		 mov	 DWORD PTR -296+[ebp], eax
  01338	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T160128[ebp]
  0133e	e8 00 00 00 00	 call	 ??0CSpeedBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSpeedBtn::CSpeedBtn
  01343	89 85 d4 fe ff
	ff		 mov	 DWORD PTR -300+[ebp], eax
  01349	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR -300+[ebp]
  0134f	89 85 d0 fe ff
	ff		 mov	 DWORD PTR -304+[ebp], eax
  01355	eb 0a		 jmp	 SHORT $L160131
$L160130:
  01357	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -304+[ebp], 0
$L160131:
  01361	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR -304+[ebp]
  01367	89 8d 74 ff ff
	ff		 mov	 DWORD PTR $T160127[ebp], ecx
  0136d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01371	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR $T160127[ebp]
  01377	89 95 78 ff ff
	ff		 mov	 DWORD PTR $T160126[ebp], edx
  0137d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01381	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01384	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01389	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0138d	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01390	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01395	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0139c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0139f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  013a4	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR $T160126[ebp]
  013aa	e9 10 03 00 00	 jmp	 $L154083
$L154145:

; 328  : 
; 329  : 	if ( "sb" == id ) {

  013af	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  013b2	50		 push	 eax
  013b3	68 00 00 00 00	 push	 OFFSET FLAT:$SG154154
  013b8	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  013bd	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  013c2	85 c0		 test	 eax, eax
  013c4	0f 84 c4 01 00
	00		 je	 $L154163

; 330  : 		if ( name == "sb_Midi" )

  013ca	68 00 00 00 00	 push	 OFFSET FLAT:$SG154156
  013cf	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  013d2	51		 push	 ecx
  013d3	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  013d8	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  013dd	85 c0		 test	 eax, eax
  013df	0f 84 c7 00 00
	00		 je	 $L154155

; 331  : 			return m_pMidiBar = new CSkinScrollBar( obj, this );

  013e5	6a 48		 push	 72			; 00000048H
  013e7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  013ec	83 c4 04	 add	 esp, 4
  013ef	89 85 60 ff ff
	ff		 mov	 DWORD PTR $T160134[ebp], eax
  013f5	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  013f9	83 bd 60 ff ff
	ff 00		 cmp	 DWORD PTR $T160134[ebp], 0
  01400	74 40		 je	 SHORT $L160136
  01402	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01408	52		 push	 edx
  01409	83 ec 08	 sub	 esp, 8
  0140c	8b cc		 mov	 ecx, esp
  0140e	89 a5 5c ff ff
	ff		 mov	 DWORD PTR $T160135[ebp], esp
  01414	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  01417	50		 push	 eax
  01418	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0141d	89 85 cc fe ff
	ff		 mov	 DWORD PTR -308+[ebp], eax
  01423	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR $T160134[ebp]
  01429	e8 00 00 00 00	 call	 ??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
  0142e	89 85 c8 fe ff
	ff		 mov	 DWORD PTR -312+[ebp], eax
  01434	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR -312+[ebp]
  0143a	89 8d c4 fe ff
	ff		 mov	 DWORD PTR -316+[ebp], ecx
  01440	eb 0a		 jmp	 SHORT $L160137
$L160136:
  01442	c7 85 c4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -316+[ebp], 0
$L160137:
  0144c	8b 95 c4 fe ff
	ff		 mov	 edx, DWORD PTR -316+[ebp]
  01452	89 95 64 ff ff
	ff		 mov	 DWORD PTR $T160133[ebp], edx
  01458	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0145c	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  01462	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR $T160133[ebp]
  01468	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx
  0146e	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR $T160133[ebp]
  01474	89 95 68 ff ff
	ff		 mov	 DWORD PTR $T160132[ebp], edx
  0147a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0147e	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01481	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01486	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0148a	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0148d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01492	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01499	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0149c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  014a1	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR $T160132[ebp]
  014a7	e9 13 02 00 00	 jmp	 $L154083
$L154155:

; 332  : 
; 333  : 		if ( name == "sb_Sfx" )

  014ac	68 00 00 00 00	 push	 OFFSET FLAT:$SG154164
  014b1	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  014b4	50		 push	 eax
  014b5	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  014ba	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  014bf	85 c0		 test	 eax, eax
  014c1	0f 84 c7 00 00
	00		 je	 $L154163

; 334  : 			return m_pSfxBar = new CSkinScrollBar( obj, this );

  014c7	6a 48		 push	 72			; 00000048H
  014c9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  014ce	83 c4 04	 add	 esp, 4
  014d1	89 85 50 ff ff
	ff		 mov	 DWORD PTR $T160140[ebp], eax
  014d7	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  014db	83 bd 50 ff ff
	ff 00		 cmp	 DWORD PTR $T160140[ebp], 0
  014e2	74 40		 je	 SHORT $L160142
  014e4	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  014ea	51		 push	 ecx
  014eb	83 ec 08	 sub	 esp, 8
  014ee	8b cc		 mov	 ecx, esp
  014f0	89 a5 4c ff ff
	ff		 mov	 DWORD PTR $T160141[ebp], esp
  014f6	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  014f9	52		 push	 edx
  014fa	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  014ff	89 85 c0 fe ff
	ff		 mov	 DWORD PTR -320+[ebp], eax
  01505	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR $T160140[ebp]
  0150b	e8 00 00 00 00	 call	 ??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
  01510	89 85 bc fe ff
	ff		 mov	 DWORD PTR -324+[ebp], eax
  01516	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR -324+[ebp]
  0151c	89 85 b8 fe ff
	ff		 mov	 DWORD PTR -328+[ebp], eax
  01522	eb 0a		 jmp	 SHORT $L160143
$L160142:
  01524	c7 85 b8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -328+[ebp], 0
$L160143:
  0152e	8b 8d b8 fe ff
	ff		 mov	 ecx, DWORD PTR -328+[ebp]
  01534	89 8d 54 ff ff
	ff		 mov	 DWORD PTR $T160139[ebp], ecx
  0153a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0153e	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01544	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR $T160139[ebp]
  0154a	89 82 9c 00 00
	00		 mov	 DWORD PTR [edx+156], eax
  01550	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR $T160139[ebp]
  01556	89 8d 58 ff ff
	ff		 mov	 DWORD PTR $T160138[ebp], ecx
  0155c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01560	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01563	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01568	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0156c	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0156f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01574	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0157b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0157e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01583	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR $T160138[ebp]
  01589	e9 31 01 00 00	 jmp	 $L154083
$L154163:

; 336  : 
; 337  : 	if ( "pcb" == id ) {

  0158e	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  01591	52		 push	 edx
  01592	68 00 00 00 00	 push	 OFFSET FLAT:$SG154172
  01597	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  0159c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  015a1	85 c0		 test	 eax, eax
  015a3	0f 84 b2 00 00
	00		 je	 $L154171

; 338  : 		return new CSetPasswordBtn( obj, this );

  015a9	6a 14		 push	 20			; 00000014H
  015ab	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  015b0	83 c4 04	 add	 esp, 4
  015b3	89 85 40 ff ff
	ff		 mov	 DWORD PTR $T160146[ebp], eax
  015b9	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  015bd	83 bd 40 ff ff
	ff 00		 cmp	 DWORD PTR $T160146[ebp], 0
  015c4	74 40		 je	 SHORT $L160148
  015c6	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  015cc	50		 push	 eax
  015cd	83 ec 08	 sub	 esp, 8
  015d0	8b cc		 mov	 ecx, esp
  015d2	89 a5 3c ff ff
	ff		 mov	 DWORD PTR $T160147[ebp], esp
  015d8	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  015db	52		 push	 edx
  015dc	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  015e1	89 85 b4 fe ff
	ff		 mov	 DWORD PTR -332+[ebp], eax
  015e7	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR $T160146[ebp]
  015ed	e8 00 00 00 00	 call	 ??0CSetPasswordBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSetPasswordBtn::CSetPasswordBtn
  015f2	89 85 b0 fe ff
	ff		 mov	 DWORD PTR -336+[ebp], eax
  015f8	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR -336+[ebp]
  015fe	89 85 ac fe ff
	ff		 mov	 DWORD PTR -340+[ebp], eax
  01604	eb 0a		 jmp	 SHORT $L160149
$L160148:
  01606	c7 85 ac fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -340+[ebp], 0
$L160149:
  01610	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR -340+[ebp]
  01616	89 8d 44 ff ff
	ff		 mov	 DWORD PTR $T160145[ebp], ecx
  0161c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01620	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR $T160145[ebp]
  01626	89 95 48 ff ff
	ff		 mov	 DWORD PTR $T160144[ebp], edx
  0162c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01630	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01633	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01638	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0163c	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0163f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01644	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0164b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0164e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01653	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR $T160144[ebp]
  01659	eb 64		 jmp	 SHORT $L154083
$L154171:

; 340  : 
; 341  : 	return CSkinWnd::MakeSkinCtrl( obj );

  0165b	83 ec 08	 sub	 esp, 8
  0165e	8b cc		 mov	 ecx, esp
  01660	89 a5 34 ff ff
	ff		 mov	 DWORD PTR $T160151[ebp], esp
  01666	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  01669	50		 push	 eax
  0166a	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0166f	89 85 a8 fe ff
	ff		 mov	 DWORD PTR -344+[ebp], eax
  01675	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0167b	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  01680	89 85 a4 fe ff
	ff		 mov	 DWORD PTR -348+[ebp], eax
  01686	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR -348+[ebp]
  0168c	89 8d 38 ff ff
	ff		 mov	 DWORD PTR $T160150[ebp], ecx
  01692	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01696	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01699	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0169e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  016a2	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  016a5	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  016aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  016b1	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  016b4	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  016b9	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR $T160150[ebp]
$L154083:

; 342  : }

  016bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  016c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  016c9	8b e5		 mov	 esp, ebp
  016cb	5d		 pop	 ebp
  016cc	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L160152:
  00125	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00128	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0012d	c3		 ret	 0
$L160153:
  0012e	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00131	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00136	c3		 ret	 0
$L160154:
  00137	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0013a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0013f	c3		 ret	 0
$L160155:
  00140	8b 45 e0	 mov	 eax, DWORD PTR $T160086[ebp]
  00143	50		 push	 eax
  00144	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00149	59		 pop	 ecx
  0014a	c3		 ret	 0
$L160157:
  0014b	8b 45 d0	 mov	 eax, DWORD PTR $T160092[ebp]
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00154	59		 pop	 ecx
  00155	c3		 ret	 0
$L160159:
  00156	8b 45 c0	 mov	 eax, DWORD PTR $T160098[ebp]
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0015f	59		 pop	 ecx
  00160	c3		 ret	 0
$L160161:
  00161	8b 45 b0	 mov	 eax, DWORD PTR $T160104[ebp]
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0016a	59		 pop	 ecx
  0016b	c3		 ret	 0
$L160163:
  0016c	8b 45 a0	 mov	 eax, DWORD PTR $T160110[ebp]
  0016f	50		 push	 eax
  00170	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00175	59		 pop	 ecx
  00176	c3		 ret	 0
$L160165:
  00177	8b 45 90	 mov	 eax, DWORD PTR $T160116[ebp]
  0017a	50		 push	 eax
  0017b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00180	59		 pop	 ecx
  00181	c3		 ret	 0
$L160167:
  00182	8b 45 80	 mov	 eax, DWORD PTR $T160122[ebp]
  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0018b	59		 pop	 ecx
  0018c	c3		 ret	 0
$L160169:
  0018d	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR $T160128[ebp]
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00199	59		 pop	 ecx
  0019a	c3		 ret	 0
$L160171:
  0019b	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR $T160134[ebp]
  001a1	50		 push	 eax
  001a2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001a7	59		 pop	 ecx
  001a8	c3		 ret	 0
$L160173:
  001a9	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T160140[ebp]
  001af	50		 push	 eax
  001b0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001b5	59		 pop	 ecx
  001b6	c3		 ret	 0
$L160175:
  001b7	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR $T160146[ebp]
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001c3	59		 pop	 ecx
  001c4	c3		 ret	 0
$L160180:
  001c5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160179
  001ca	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CGameSettingsDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CGameSettingsDlg::MakeSkinCtrl
PUBLIC	?EnableTabOption@CGameSettingsDlg@@QAEX_N@Z	; CGameSettingsDlg::EnableTabOption
_TEXT	SEGMENT
_bEnable$ = 8
_this$ = -4
?EnableTabOption@CGameSettingsDlg@@QAEX_N@Z PROC NEAR	; CGameSettingsDlg::EnableTabOption

; 346  : { 

  016cf	55		 push	 ebp
  016d0	8b ec		 mov	 ebp, esp
  016d2	51		 push	 ecx
  016d3	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 347  :     if ( !m_pTabDispBtn )

  016d6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  016d9	83 b8 a8 00 00
	00 00		 cmp	 DWORD PTR [eax+168], 0
  016e0	75 02		 jne	 SHORT $L154185

; 348  :         return;

  016e2	eb 54		 jmp	 SHORT $L154184
$L154185:

; 349  : 
; 350  :     if (bEnable)

  016e4	8b 4d 08	 mov	 ecx, DWORD PTR _bEnable$[ebp]
  016e7	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  016ed	85 c9		 test	 ecx, ecx
  016ef	74 19		 je	 SHORT $L154186

; 352  :         m_pTabDispBtn->Enable();

  016f1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  016f4	8b 8a a8 00 00
	00		 mov	 ecx, DWORD PTR [edx+168]
  016fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  016fd	8b 90 a8 00 00
	00		 mov	 edx, DWORD PTR [eax+168]
  01703	8b 02		 mov	 eax, DWORD PTR [edx]
  01705	ff 50 14	 call	 DWORD PTR [eax+20]

; 354  :     else

  01708	eb 17		 jmp	 SHORT $L154187
$L154186:

; 356  :         m_pTabDispBtn->Disable(); 

  0170a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0170d	8b 89 a8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+168]
  01713	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01716	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  0171c	8b 10		 mov	 edx, DWORD PTR [eax]
  0171e	ff 52 0c	 call	 DWORD PTR [edx+12]
$L154187:

; 358  : 
; 359  :     m_pTabDispBtn->Refresh();

  01721	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01724	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  0172a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0172d	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  01733	8b 10		 mov	 edx, DWORD PTR [eax]
  01735	ff 52 08	 call	 DWORD PTR [edx+8]
$L154184:

; 360  : }

  01738	8b e5		 mov	 esp, ebp
  0173a	5d		 pop	 ebp
  0173b	c2 04 00	 ret	 4
?EnableTabOption@CGameSettingsDlg@@QAEX_N@Z ENDP	; CGameSettingsDlg::EnableTabOption
_TEXT	ENDS
PUBLIC	?SetFullScreenOption@CGameSettingsDlg@@QAEX_N@Z	; CGameSettingsDlg::SetFullScreenOption
EXTRN	?SetState@CSkinCtrl@@QAEXW4sknCtrlFlags@@_N@Z:NEAR ; CSkinCtrl::SetState
_TEXT	SEGMENT
_boSet$ = 8
_this$ = -4
?SetFullScreenOption@CGameSettingsDlg@@QAEX_N@Z PROC NEAR ; CGameSettingsDlg::SetFullScreenOption

; 364  : {

  0173e	55		 push	 ebp
  0173f	8b ec		 mov	 ebp, esp
  01741	51		 push	 ecx
  01742	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 365  :     if ( !m_pFullScreenBtn )

  01745	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01748	83 b8 ac 00 00
	00 00		 cmp	 DWORD PTR [eax+172], 0
  0174f	75 02		 jne	 SHORT $L154192

; 366  :         return;

  01751	eb 76		 jmp	 SHORT $L154191
$L154192:

; 367  : 
; 368  :     if (boSet)

  01753	8b 4d 08	 mov	 ecx, DWORD PTR _boSet$[ebp]
  01756	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0175c	85 c9		 test	 ecx, ecx
  0175e	74 19		 je	 SHORT $L154193

; 370  :         m_pFullScreenBtn->Activate(); 

  01760	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01763	8b 8a ac 00 00
	00		 mov	 ecx, DWORD PTR [edx+172]
  01769	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0176c	8b 90 ac 00 00
	00		 mov	 edx, DWORD PTR [eax+172]
  01772	8b 02		 mov	 eax, DWORD PTR [edx]
  01774	ff 50 18	 call	 DWORD PTR [eax+24]

; 372  :     else

  01777	eb 17		 jmp	 SHORT $L154194
$L154193:

; 374  :         m_pFullScreenBtn->Deactivate();

  01779	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0177c	8b 89 ac 00 00
	00		 mov	 ecx, DWORD PTR [ecx+172]
  01782	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01785	8b 82 ac 00 00
	00		 mov	 eax, DWORD PTR [edx+172]
  0178b	8b 10		 mov	 edx, DWORD PTR [eax]
  0178d	ff 52 1c	 call	 DWORD PTR [edx+28]
$L154194:

; 376  : 
; 377  : 	m_pTabDispBtn->SetState( sknCtrlActivated, g_pToonSettings->get_TabDisplay() );

  01790	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  01796	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  0179b	f7 d8		 neg	 eax
  0179d	1b c0		 sbb	 eax, eax
  0179f	f7 d8		 neg	 eax
  017a1	50		 push	 eax
  017a2	6a 02		 push	 2
  017a4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  017a7	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]
  017ad	e8 00 00 00 00	 call	 ?SetState@CSkinCtrl@@QAEXW4sknCtrlFlags@@_N@Z ; CSkinCtrl::SetState

; 378  :     m_pTabDispBtn->Refresh();

  017b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  017b5	8b 89 a8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+168]
  017bb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  017be	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  017c4	8b 10		 mov	 edx, DWORD PTR [eax]
  017c6	ff 52 08	 call	 DWORD PTR [edx+8]
$L154191:

; 379  : }

  017c9	8b e5		 mov	 esp, ebp
  017cb	5d		 pop	 ebp
  017cc	c2 04 00	 ret	 4
?SetFullScreenOption@CGameSettingsDlg@@QAEX_N@Z ENDP	; CGameSettingsDlg::SetFullScreenOption
_nMode$ = 8
_nGameModalCount$ = 12
_this$ = -4
?EnableGameModal@CGameSettingsDlg@@UAEXHPAH@Z PROC NEAR	; CGameSettingsDlg::EnableGameModal

; 383  : {

  017cf	55		 push	 ebp
  017d0	8b ec		 mov	 ebp, esp
  017d2	51		 push	 ecx
  017d3	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 384  :     if (nMode == gmCombatModal && !nGameModalCount[gmCombatModal])

  017d6	83 7d 08 01	 cmp	 DWORD PTR _nMode$[ebp], 1
  017da	75 13		 jne	 SHORT $L154200
  017dc	8b 45 0c	 mov	 eax, DWORD PTR _nGameModalCount$[ebp]
  017df	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  017e3	75 0a		 jne	 SHORT $L154200

; 386  :         EnableTabOption( true );

  017e5	6a 01		 push	 1
  017e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  017ea	e8 00 00 00 00	 call	 ?EnableTabOption@CGameSettingsDlg@@QAEX_N@Z ; CGameSettingsDlg::EnableTabOption
$L154200:

; 388  : }

  017ef	8b e5		 mov	 esp, ebp
  017f1	5d		 pop	 ebp
  017f2	c2 08 00	 ret	 8
?EnableGameModal@CGameSettingsDlg@@UAEXHPAH@Z ENDP	; CGameSettingsDlg::EnableGameModal
_nMode$ = 8
_nGameModalCount$ = 12
_this$ = -4
?DisableGameModal@CGameSettingsDlg@@UAEXHPAH_N@Z PROC NEAR ; CGameSettingsDlg::DisableGameModal

; 392  : {

  017f5	55		 push	 ebp
  017f6	8b ec		 mov	 ebp, esp
  017f8	51		 push	 ecx
  017f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 393  :     if (nMode == gmCombatModal && !nGameModalCount[gmCombatModal])

  017fc	83 7d 08 01	 cmp	 DWORD PTR _nMode$[ebp], 1
  01800	75 13		 jne	 SHORT $L154207
  01802	8b 45 0c	 mov	 eax, DWORD PTR _nGameModalCount$[ebp]
  01805	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  01809	75 0a		 jne	 SHORT $L154207

; 395  :         EnableTabOption( false );        

  0180b	6a 00		 push	 0
  0180d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01810	e8 00 00 00 00	 call	 ?EnableTabOption@CGameSettingsDlg@@QAEX_N@Z ; CGameSettingsDlg::EnableTabOption
$L154207:

; 397  : }

  01815	8b e5		 mov	 esp, ebp
  01817	5d		 pop	 ebp
  01818	c2 0c 00	 ret	 12			; 0000000cH
?DisableGameModal@CGameSettingsDlg@@UAEXHPAH_N@Z ENDP	; CGameSettingsDlg::DisableGameModal
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NABVCString@@PBD@Z PROC NEAR			; operator==, COMDAT

; 183  : 	{ return s1.Compare(s2) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NABVCString@@PBD@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NPBDABVCString@@@Z PROC NEAR			; operator==, COMDAT

; 185  : 	{ return s2.Compare(s1) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _s1$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _s2$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NPBDABVCString@@@Z ENDP				; operator==
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
PUBLIC	??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z	; std::bitset<5>::reference::reference
;	COMDAT ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
$T160197 = -8
___$ReturnUdt$ = 8
_this$ = -12
__P$ = 12
??A?$bitset@$04@std@@QAE?AVreference@01@I@Z PROC NEAR	; std::bitset<5>::operator[], COMDAT

; 54   : 		{return (reference(*this, _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	8d 4d f8	 lea	 ecx, DWORD PTR $T160197[ebp]
  00014	e8 00 00 00 00	 call	 ??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z ; std::bitset<5>::reference::reference
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx
  00023	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ENDP	; std::bitset<5>::operator[]
_TEXT	ENDS
PUBLIC	?_Xran@?$bitset@$04@std@@ABEXXZ			; std::bitset<5>::_Xran
;	COMDAT ?flip@?$bitset@$04@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?flip@?$bitset@$04@std@@QAEAAV12@I@Z PROC NEAR		; std::bitset<5>::flip, COMDAT

; 139  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 05	 cmp	 DWORD PTR __P$[ebp], 5
  0000c	72 08		 jb	 SHORT $L155285

; 140  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$04@std@@ABEXXZ ; std::bitset<5>::_Xran
$L155285:

; 141  : 		_A[_P / _Nb] ^= (_Ty)1 << _P % _Nb;

  00016	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00019	c1 ee 05	 shr	 esi, 5
  0001c	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001f	33 d2		 xor	 edx, edx
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	f7 f1		 div	 ecx
  00028	8b ca		 mov	 ecx, edx
  0002a	ba 01 00 00 00	 mov	 edx, 1
  0002f	d3 e2		 shl	 edx, cl
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00037	33 ca		 xor	 ecx, edx
  00039	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0003c	c1 ea 05	 shr	 edx, 5
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 142  : 		return (*this); }

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	5e		 pop	 esi
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?flip@?$bitset@$04@std@@QAEAAV12@I@Z ENDP		; std::bitset<5>::flip
_TEXT	ENDS
PUBLIC	?set@?$bitset@$04@std@@QAEAAV12@I_N@Z		; std::bitset<5>::set
;	COMDAT ??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z PROC NEAR	; std::bitset<5>::reference::operator=, COMDAT

; 24   : 			{_Pbs->set(_Off, _X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8a 45 08	 mov	 al, BYTE PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?set@?$bitset@$04@std@@QAEAAV12@I_N@Z ; std::bitset<5>::set

; 25   : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??4reference@?$bitset@$04@std@@QAEAAV012@_N@Z ENDP	; std::bitset<5>::reference::operator=
_TEXT	ENDS
PUBLIC	?test@?$bitset@$04@std@@QBE_NI@Z		; std::bitset<5>::test
;	COMDAT ??Breference@?$bitset@$04@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4
??Breference@?$bitset@$04@std@@QBE_NXZ PROC NEAR	; std::bitset<5>::reference::operator bool, COMDAT

; 35   : 			{return (_Pbs->test(_Off)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00011	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00013	e8 00 00 00 00	 call	 ?test@?$bitset@$04@std@@QBE_NI@Z ; std::bitset<5>::test
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??Breference@?$bitset@$04@std@@QBE_NXZ ENDP		; std::bitset<5>::reference::operator bool
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$04@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__X$ = 12
?set@?$bitset@$04@std@@QAEAAV12@I_N@Z PROC NEAR		; std::bitset<5>::set, COMDAT

; 119  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 05	 cmp	 DWORD PTR __P$[ebp], 5
  0000c	72 08		 jb	 SHORT $L156519

; 120  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$04@std@@ABEXXZ ; std::bitset<5>::_Xran
$L156519:

; 121  : 		if (_X)

  00016	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 31		 je	 SHORT $L156520

; 122  : 			_A[_P / _Nb] |= (_Ty)1 << _P % _Nb;

  00022	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00025	c1 ee 05	 shr	 esi, 5
  00028	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002b	33 d2		 xor	 edx, edx
  0002d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00032	f7 f1		 div	 ecx
  00034	8b ca		 mov	 ecx, edx
  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	d3 e2		 shl	 edx, cl
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00043	0b ca		 or	 ecx, edx
  00045	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00048	c1 ea 05	 shr	 edx, 5
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 123  : 		else

  00051	eb 31		 jmp	 SHORT $L156522
$L156520:

; 124  : 			_A[_P / _Nb] &= ~((_Ty)1 << _P % _Nb);

  00053	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00056	c1 ee 05	 shr	 esi, 5
  00059	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0005c	33 d2		 xor	 edx, edx
  0005e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00063	f7 f1		 div	 ecx
  00065	8b ca		 mov	 ecx, edx
  00067	ba 01 00 00 00	 mov	 edx, 1
  0006c	d3 e2		 shl	 edx, cl
  0006e	f7 d2		 not	 edx
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00076	23 ca		 and	 ecx, edx
  00078	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0007b	c1 ea 05	 shr	 edx, 5
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx
$L156522:

; 125  : 		return (*this); }

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
?set@?$bitset@$04@std@@QAEAAV12@I_N@Z ENDP		; std::bitset<5>::set
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$04@std@@QBE_NI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?test@?$bitset@$04@std@@QBE_NI@Z PROC NEAR		; std::bitset<5>::test, COMDAT

; 177  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 05	 cmp	 DWORD PTR __P$[ebp], 5
  0000c	72 08		 jb	 SHORT $L156526

; 178  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$04@std@@ABEXXZ ; std::bitset<5>::_Xran
$L156526:

; 179  : 		return ((_A[_P / _Nb] & ((_Ty)1 << _P % _Nb)) != 0); }

  00016	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00019	c1 ee 05	 shr	 esi, 5
  0001c	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001f	33 d2		 xor	 edx, edx
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	f7 f1		 div	 ecx
  00028	8b ca		 mov	 ecx, edx
  0002a	ba 01 00 00 00	 mov	 edx, 1
  0002f	d3 e2		 shl	 edx, cl
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  00037	23 c2		 and	 eax, edx
  00039	f7 d8		 neg	 eax
  0003b	1b c0		 sbb	 eax, eax
  0003d	f7 d8		 neg	 eax
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?test@?$bitset@$04@std@@QBE_NI@Z ENDP			; std::bitset<5>::test
_TEXT	ENDS
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
PUBLIC	??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
EXTRN	??0logic_error@std@@QAE@ABV01@@Z:NEAR		; std::logic_error::logic_error
EXTRN	??1out_of_range@std@@UAE@XZ:NEAR		; std::out_of_range::~out_of_range
EXTRN	??0out_of_range@std@@QAE@ABV01@@Z:NEAR		; std::out_of_range::out_of_range
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	__imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT ??_R0?AVexception@@@8
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\bitset
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT
??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ DB 'invalid bitset'
	DB	'<N> position', 00H				; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T160210 DD	019930520H
	DD	01H
	DD	FLAT:$T160212
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160212 DD	0ffffffffH
	DD	FLAT:$L160208
xdata$x	ENDS
;	COMDAT ?_Xran@?$bitset@$04@std@@ABEXXZ
_TEXT	SEGMENT
$T160204 = -40
$T160205 = -56
$T160206 = -60
__$EHRec$ = -12
_this$ = -64
?_Xran@?$bitset@$04@std@@ABEXXZ PROC NEAR		; std::bitset<5>::_Xran, COMDAT

; 250  : 		{_THROW(out_of_range, "invalid bitset<N> position"); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L160211
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 c4	 lea	 eax, DWORD PTR $T160206[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
  00027	8d 4d c8	 lea	 ecx, DWORD PTR $T160205[ebp]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8d 4d c8	 lea	 ecx, DWORD PTR $T160205[ebp]
  0003a	51		 push	 ecx
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T160204[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00044	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00049	8d 55 d8	 lea	 edx, DWORD PTR $T160204[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$L156529:
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160208:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T160205[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00009	c3		 ret	 0
$L160211:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160210
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$bitset@$04@std@@ABEXXZ ENDP			; std::bitset<5>::_Xran
;	COMDAT ??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT
__X$ = 8
__P$ = 12
_this$ = -4
??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z PROC NEAR	; std::bitset<5>::reference::reference, COMDAT

; 37   : 		reference(bitset<_N>& _X, size_t _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z ENDP	; std::bitset<5>::reference::reference
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
PUBLIC	??0CSCI_WorldActor@@QAE@G@Z			; CSCI_WorldActor::CSCI_WorldActor
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldEgo@@QAE@G@Z PROC NEAR			; CSCI_WorldEgo::CSCI_WorldEgo, COMDAT

; 5038 : 	CSCI_WorldEgo(SOL_Handle h) : CSCI_WorldActor(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldActor@@QAE@G@Z ; CSCI_WorldActor::CSCI_WorldActor
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldEgo@@QAE@G@Z ENDP				; CSCI_WorldEgo::CSCI_WorldEgo
_TEXT	ENDS
PUBLIC	??0CSCI_WorldObject@@QAE@G@Z			; CSCI_WorldObject::CSCI_WorldObject
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldActor@@QAE@G@Z PROC NEAR			; CSCI_WorldActor::CSCI_WorldActor, COMDAT

; 4932 : 	CSCI_WorldActor(SOL_Handle h) : CSCI_WorldObject(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@G@Z ; CSCI_WorldObject::CSCI_WorldObject
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldActor@@QAE@G@Z ENDP			; CSCI_WorldActor::CSCI_WorldActor
_TEXT	ENDS
PUBLIC	??0CSCI_Actor@@QAE@G@Z				; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldObject@@QAE@G@Z PROC NEAR			; CSCI_WorldObject::CSCI_WorldObject, COMDAT

; 4475 : 	CSCI_WorldObject(SOL_Handle h) : CSCI_Actor(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@G@Z	; CSCI_Actor::CSCI_Actor
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@G@Z ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@G@Z				; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@G@Z PROC NEAR			; CSCI_Actor::CSCI_Actor, COMDAT

; 1596 : 	CSCI_Actor(SOL_Handle h) : CSCI_Prop(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@G@Z	; CSCI_Prop::CSCI_Prop
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@G@Z ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@G@Z				; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@G@Z PROC NEAR				; CSCI_Prop::CSCI_Prop, COMDAT

; 1560 : 	CSCI_Prop(SOL_Handle h) : CSCI_View(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@G@Z	; CSCI_View::CSCI_View
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@G@Z ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@G@Z			; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_View@@QAE@G@Z PROC NEAR				; CSCI_View::CSCI_View, COMDAT

; 1515 : 	CSCI_View(SOL_Handle h) : CSCI_Feature(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@G@Z ; CSCI_Feature::CSCI_Feature
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_View@@QAE@G@Z ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@G@Z				; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@G@Z PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT

; 1437 : 	CSCI_Feature(SOL_Handle h) : CSCI_BitMap(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@G@Z	; CSCI_BitMap::CSCI_BitMap
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@G@Z ENDP				; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@G@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@G@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT

; 1358 : 	CSCI_BitMap(SOL_Handle h) : CSCI_Rectangle(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@G@Z ; CSCI_Rectangle::CSCI_Rectangle
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@G@Z ENDP				; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@G@Z				; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@G@Z PROC NEAR			; CSCI_Rectangle::CSCI_Rectangle, COMDAT

; 517  : 	CSCI_Rectangle(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@G@Z ENDP				; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@G@Z				; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Object@@QAE@G@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 13   : 	CSCI_Object(SOL_Handle h) : ObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@G@Z ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@G@Z			; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0ObjectID@@QAE@G@Z PROC NEAR				; ObjectID::ObjectID, COMDAT

; 230  : 	ObjectID(SOL_Handle h) : FakeObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@G@Z ; FakeObjectID::FakeObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0ObjectID@@QAE@G@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@G@Z				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0FakeObjectID@@QAE@G@Z PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@G@Z ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0MemID@@QAE@G@Z PROC NEAR				; MemID::MemID, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _h$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 24   : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0MemID@@QAE@G@Z ENDP					; MemID::MemID
_TEXT	ENDS
;	COMDAT ?GetGlobal@PMachine@@QAEFH@Z
_TEXT	SEGMENT
_nGlobal$ = 8
_this$ = -4
?GetGlobal@PMachine@@QAEFH@Z PROC NEAR			; PMachine::GetGlobal, COMDAT

; 74   : 	Property	GetGlobal( int nGlobal ) { return GlobalPtr[ nGlobal ]; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0000d	8b 55 08	 mov	 edx, DWORD PTR _nGlobal$[ebp]
  00010	66 8b 04 51	 mov	 ax, WORD PTR [ecx+edx*2]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?GetGlobal@PMachine@@QAEFH@Z ENDP			; PMachine::GetGlobal
_TEXT	ENDS
PUBLIC	??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z	; std::bitset<6>::reference::operator=
PUBLIC	??A?$bitset@$05@std@@QAE?AVreference@01@I@Z	; std::bitset<6>::operator[]
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
$T160234 = -8
_bValue$ = 8
_this$ = -12
?SetTransient@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetTransient, COMDAT

; 150  : 	void SetTransient ( bool bValue ) { m_state[sknWndTransient] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 04		 push	 4
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T160234[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetTransient@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetTransient
_TEXT	ENDS
PUBLIC	??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z	; std::bitset<6>::reference::reference
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
__P$ = 12
$T160236 = -8
___$ReturnUdt$ = 8
_this$ = -12
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z PROC NEAR	; std::bitset<6>::operator[], COMDAT

; 54   : 		{return (reference(*this, _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	8d 4d f8	 lea	 ecx, DWORD PTR $T160236[ebp]
  00014	e8 00 00 00 00	 call	 ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ; std::bitset<6>::reference::reference
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx
  00023	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ENDP	; std::bitset<6>::operator[]
_TEXT	ENDS
PUBLIC	?set@?$bitset@$05@std@@QAEAAV12@I_N@Z		; std::bitset<6>::set
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z PROC NEAR	; std::bitset<6>::reference::operator=, COMDAT

; 24   : 			{_Pbs->set(_Off, _X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8a 45 08	 mov	 al, BYTE PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ; std::bitset<6>::set

; 25   : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ENDP	; std::bitset<6>::reference::operator=
_TEXT	ENDS
PUBLIC	?_Xran@?$bitset@$05@std@@ABEXXZ			; std::bitset<6>::_Xran
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT
__P$ = 8
__X$ = 12
_this$ = -4
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z PROC NEAR		; std::bitset<6>::set, COMDAT

; 119  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 06	 cmp	 DWORD PTR __P$[ebp], 6
  0000c	72 08		 jb	 SHORT $L156506

; 120  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$05@std@@ABEXXZ ; std::bitset<6>::_Xran
$L156506:

; 121  : 		if (_X)

  00016	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 31		 je	 SHORT $L156507

; 122  : 			_A[_P / _Nb] |= (_Ty)1 << _P % _Nb;

  00022	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00025	c1 ee 05	 shr	 esi, 5
  00028	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002b	33 d2		 xor	 edx, edx
  0002d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00032	f7 f1		 div	 ecx
  00034	8b ca		 mov	 ecx, edx
  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	d3 e2		 shl	 edx, cl
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00043	0b ca		 or	 ecx, edx
  00045	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00048	c1 ea 05	 shr	 edx, 5
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 123  : 		else

  00051	eb 31		 jmp	 SHORT $L156509
$L156507:

; 124  : 			_A[_P / _Nb] &= ~((_Ty)1 << _P % _Nb);

  00053	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00056	c1 ee 05	 shr	 esi, 5
  00059	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0005c	33 d2		 xor	 edx, edx
  0005e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00063	f7 f1		 div	 ecx
  00065	8b ca		 mov	 ecx, edx
  00067	ba 01 00 00 00	 mov	 edx, 1
  0006c	d3 e2		 shl	 edx, cl
  0006e	f7 d2		 not	 edx
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00076	23 ca		 and	 ecx, edx
  00078	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0007b	c1 ea 05	 shr	 edx, 5
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx
$L156509:

; 125  : 		return (*this); }

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ENDP		; std::bitset<6>::set
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT
__X$ = 8
__P$ = 12
_this$ = -4
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z PROC NEAR	; std::bitset<6>::reference::reference, COMDAT

; 37   : 		reference(bitset<_N>& _X, size_t _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ENDP	; std::bitset<6>::reference::reference
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\bitset
xdata$x	SEGMENT
$T160246 DD	019930520H
	DD	01H
	DD	FLAT:$T160248
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160248 DD	0ffffffffH
	DD	FLAT:$L160244
xdata$x	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT
_this$ = -64
$T160241 = -40
$T160242 = -56
$T160243 = -60
__$EHRec$ = -12
?_Xran@?$bitset@$05@std@@ABEXXZ PROC NEAR		; std::bitset<6>::_Xran, COMDAT

; 250  : 		{_THROW(out_of_range, "invalid bitset<N> position"); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L160247
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 c4	 lea	 eax, DWORD PTR $T160243[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
  00027	8d 4d c8	 lea	 ecx, DWORD PTR $T160242[ebp]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8d 4d c8	 lea	 ecx, DWORD PTR $T160242[ebp]
  0003a	51		 push	 ecx
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T160241[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00044	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00049	8d 55 d8	 lea	 edx, DWORD PTR $T160241[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$L156809:
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160244:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T160242[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00009	c3		 ret	 0
$L160247:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160246
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$bitset@$05@std@@ABEXXZ ENDP			; std::bitset<6>::_Xran
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Next, COMDAT

; 275  : 	virtual void Next ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Next
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Previous, COMDAT

; 276  : 	virtual void Previous ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Previous
_TEXT	ENDS
;	COMDAT ?get_AutoAccept@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?get_AutoAccept@CToonSettings@@QAEHXZ PROC NEAR		; CToonSettings::get_AutoAccept, COMDAT

; 72   : 	BOOL	get_AutoAccept() { return m_bAccept; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?get_AutoAccept@CToonSettings@@QAEHXZ ENDP		; CToonSettings::get_AutoAccept
_TEXT	ENDS
;	COMDAT ?get_LagDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?get_LagDisplay@CToonSettings@@QAEHXZ PROC NEAR		; CToonSettings::get_LagDisplay, COMDAT

; 75   : 	BOOL	get_LagDisplay() { return m_bLagDisplay; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?get_LagDisplay@CToonSettings@@QAEHXZ ENDP		; CToonSettings::get_LagDisplay
_TEXT	ENDS
;	COMDAT ?get_AltEnter@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?get_AltEnter@CToonSettings@@QAEHXZ PROC NEAR		; CToonSettings::get_AltEnter, COMDAT

; 78   : 	BOOL	get_AltEnter() { return m_bAltEnter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 5c	 mov	 eax, DWORD PTR [eax+92]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?get_AltEnter@CToonSettings@@QAEHXZ ENDP		; CToonSettings::get_AltEnter
_TEXT	ENDS
;	COMDAT ?get_TabDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?get_TabDisplay@CToonSettings@@QAEHXZ PROC NEAR		; CToonSettings::get_TabDisplay, COMDAT

; 81   : 	BOOL	get_TabDisplay() { return m_bTabDisplay; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 40	 mov	 eax, DWORD PTR [eax+64]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?get_TabDisplay@CToonSettings@@QAEHXZ ENDP		; CToonSettings::get_TabDisplay
_TEXT	ENDS
;	COMDAT ?getCombat_Speed@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?getCombat_Speed@CToonSettings@@QAEHXZ PROC NEAR	; CToonSettings::getCombat_Speed, COMDAT

; 84   : 	int		getCombat_Speed() { return m_nCombat_Speed; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?getCombat_Speed@CToonSettings@@QAEHXZ ENDP		; CToonSettings::getCombat_Speed
_TEXT	ENDS
;	COMDAT ?getSound_MidiOn@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?getSound_MidiOn@CToonSettings@@QAEHXZ PROC NEAR	; CToonSettings::getSound_MidiOn, COMDAT

; 117  : 	BOOL	getSound_MidiOn() { return m_bMidiOn; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 48	 mov	 eax, DWORD PTR [eax+72]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?getSound_MidiOn@CToonSettings@@QAEHXZ ENDP		; CToonSettings::getSound_MidiOn
_TEXT	ENDS
;	COMDAT ?getSound_MidiVolume@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?getSound_MidiVolume@CToonSettings@@QAEHXZ PROC NEAR	; CToonSettings::getSound_MidiVolume, COMDAT

; 120  : 	int		getSound_MidiVolume() { return m_nMidiVolume; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 4c	 mov	 eax, DWORD PTR [eax+76]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?getSound_MidiVolume@CToonSettings@@QAEHXZ ENDP		; CToonSettings::getSound_MidiVolume
_TEXT	ENDS
;	COMDAT ?getSound_SfxOn@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?getSound_SfxOn@CToonSettings@@QAEHXZ PROC NEAR		; CToonSettings::getSound_SfxOn, COMDAT

; 123  : 	BOOL	getSound_SfxOn() { return m_bSfxOn; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 50	 mov	 eax, DWORD PTR [eax+80]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?getSound_SfxOn@CToonSettings@@QAEHXZ ENDP		; CToonSettings::getSound_SfxOn
_TEXT	ENDS
;	COMDAT ?getSound_SfxVolume@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?getSound_SfxVolume@CToonSettings@@QAEHXZ PROC NEAR	; CToonSettings::getSound_SfxVolume, COMDAT

; 126  : 	int		getSound_SfxVolume() { return m_nSfxVolume; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 54	 mov	 eax, DWORD PTR [eax+84]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?getSound_SfxVolume@CToonSettings@@QAEHXZ ENDP		; CToonSettings::getSound_SfxVolume
_TEXT	ENDS
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinBtn@@UAE@XZ PROC NEAR				; CSkinBtn::~CSkinBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinBtn@@UAE@XZ ENDP				; CSkinBtn::~CSkinBtn
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L152768
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L152768:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
END
