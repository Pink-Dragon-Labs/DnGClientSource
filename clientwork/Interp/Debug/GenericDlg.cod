	TITLE	C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPBI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Zconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Mconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Miterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@Vconst_iterator@12@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@_NV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nw@?$vector@_NV?$allocator@I@std@@@std@@KAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$vector@_NV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@_NV?$allocator@I@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LimitText@CEdit@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LimitText@CRichEditCtrl@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestResize@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetEventMask@CRichEditCtrl@@QAEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DStringID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAllowResize@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAllowMove@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getObject@CSCIObjectMethodPair@@QAE?AVCSCI_Object@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDoubleButtonDlg@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProcessEvents@CNetworkErrorDlg@@UAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBounds@OCArray@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Data@OCArray@@QAEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ByteAt@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetByte@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetByte@CPackedData@@QAEXHE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutByte@CPackedData@@QAEXE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWord@CPackedData@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutWord@CPackedData@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LongAt@CPackedData@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSCIButtonBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSCIButtonBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSingleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSingleButtonDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTextDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTextDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPasswordDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPasswordDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGroupQuestionDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGroupQuestionDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinEditField@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinEditField@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGenericDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGenericDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCQuestDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CQuestDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDeadDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDeadDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPerformBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPerformBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCueBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCueBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCLeaveBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CLeaveBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNetworkErrorDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNetworkErrorDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethodPair@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEAAPAVCSCIObjectMethodPair@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXABQAVCSCIObjectMethodPair@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@ABU?$less@VCSCI_Object@@@1@ABV?$allocator@PAVCNoButtonDlg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAEAAPAVCNoButtonDlg@@ABVCSCI_Object@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@V342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@ABVCSCI_Object@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@ABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@ABU?$less@VCSCI_Object@@@1@_NABV?$allocator@PAVCNoButtonDlg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABVCSCI_Object@@ABQAVCNoButtonDlg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@VCSCI_Object@@@std@@QBE_NABVCSCI_Object@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCNoButtonDlg@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAABVCSCI_Object@@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEPAPAVCSCIObjectMethodPair@@PBQAV3@0PAPAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEPAPAVCSCIObjectMethodPair@@IPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QBEABVCSCI_Object@@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_Object@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@ABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@PAVCNoButtonDlg@@@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@ABU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAPAVCSCIObjectMethodPair@@0ABQAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCSCIObjectMethodPair@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAPAVCSCIObjectMethodPair@@HPAPAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAPAVCSCIObjectMethodPair@@ABQAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@ABU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSkinEditField@@WGA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSkinEditField@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGroupQuestionDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSingleButtonDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinEditField@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSkinEditField@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCueBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDeadDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSCIButtonBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinEditField@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CLeaveBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPasswordDoubleButtonDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGenericDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinEditField@@6BCRichEditCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CQuestDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNetworkErrorDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPerformBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNoButtonDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDoubleButtonDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTextDoubleButtonDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCA, CRT$XCU, CRT$XCL, CRT$XCC, CRT$XCZ, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A ; CNoButtonDlg::m_Dialogs
PUBLIC	?OnResize@CNoButtonDlg@@QAEXPAUtagNMHDR@@PAJ@Z	; CNoButtonDlg::OnResize
PUBLIC	?_messageEntries@CNoButtonDlg@@0QBUAFX_MSGMAP_ENTRY@@B ; CNoButtonDlg::_messageEntries
PUBLIC	?messageMap@CNoButtonDlg@@1UAFX_MSGMAP@@B	; CNoButtonDlg::messageMap
PUBLIC	?_GetBaseMessageMap@CNoButtonDlg@@KGPBUAFX_MSGMAP@@XZ ; CNoButtonDlg::_GetBaseMessageMap
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?OnSetFocus@CTextDoubleButtonDlg@@QAEXPAVCWnd@@@Z ; CTextDoubleButtonDlg::OnSetFocus
PUBLIC	?_messageEntries@CTextDoubleButtonDlg@@0QBUAFX_MSGMAP_ENTRY@@B ; CTextDoubleButtonDlg::_messageEntries
PUBLIC	?messageMap@CTextDoubleButtonDlg@@1UAFX_MSGMAP@@B ; CTextDoubleButtonDlg::messageMap
PUBLIC	?_GetBaseMessageMap@CTextDoubleButtonDlg@@KGPBUAFX_MSGMAP@@XZ ; CTextDoubleButtonDlg::_GetBaseMessageMap
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	?OnSetFocus@CPasswordDoubleButtonDlg@@QAEXPAVCWnd@@@Z ; CPasswordDoubleButtonDlg::OnSetFocus
PUBLIC	?_messageEntries@CPasswordDoubleButtonDlg@@0QBUAFX_MSGMAP_ENTRY@@B ; CPasswordDoubleButtonDlg::_messageEntries
PUBLIC	?messageMap@CPasswordDoubleButtonDlg@@1UAFX_MSGMAP@@B ; CPasswordDoubleButtonDlg::messageMap
PUBLIC	?_GetBaseMessageMap@CPasswordDoubleButtonDlg@@KGPBUAFX_MSGMAP@@XZ ; CPasswordDoubleButtonDlg::_GetBaseMessageMap
PUBLIC	?g_pGroupQuestion@@3PAVCGroupQuestionDlg@@A	; g_pGroupQuestion
PUBLIC	?OnResize@CGenericDlg@@QAEXPAUtagNMHDR@@PAJ@Z	; CGenericDlg::OnResize
PUBLIC	?_messageEntries@CGenericDlg@@0QBUAFX_MSGMAP_ENTRY@@B ; CGenericDlg::_messageEntries
PUBLIC	?messageMap@CGenericDlg@@1UAFX_MSGMAP@@B	; CGenericDlg::messageMap
PUBLIC	?_GetBaseMessageMap@CGenericDlg@@KGPBUAFX_MSGMAP@@XZ ; CGenericDlg::_GetBaseMessageMap
PUBLIC	?g_pQuests@@3PAVCQuestDlg@@A			; g_pQuests
PUBLIC	?g_pNetworkError@@3PAVCNetworkErrorDlg@@A	; g_pNetworkError
PUBLIC	_IID_IInternalConnection
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
_BSS	SEGMENT
?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A DB 010H DUP (?) ; CNoButtonDlg::m_Dialogs
?g_pGroupQuestion@@3PAVCGroupQuestionDlg@@A DD 01H DUP (?) ; g_pGroupQuestion
?g_pQuests@@3PAVCQuestDlg@@A DD 01H DUP (?)		; g_pQuests
?g_pNetworkError@@3PAVCNetworkErrorDlg@@A DD 01H DUP (?) ; g_pNetworkError
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
CONST	SEGMENT
?messageMap@CNoButtonDlg@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CNoButtonDlg@@KGPBUAFX_MSGMAP@@XZ ; CNoButtonDlg::messageMap
	DD	FLAT:?_messageEntries@CNoButtonDlg@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CNoButtonDlg@@0QBUAFX_MSGMAP_ENTRY@@B DD 04eH ; CNoButtonDlg::_messageEntries
	DD	0701H
	DD	02bcH
	DD	02bcH
	DD	026H
	DD	FLAT:?OnResize@CNoButtonDlg@@QAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
CRT$XCU	SEGMENT
_$S335	DD	FLAT:_$E334
CRT$XCU	ENDS
CONST	SEGMENT
?messageMap@CTextDoubleButtonDlg@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CTextDoubleButtonDlg@@KGPBUAFX_MSGMAP@@XZ ; CTextDoubleButtonDlg::messageMap
	DD	FLAT:?_messageEntries@CTextDoubleButtonDlg@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CTextDoubleButtonDlg@@0QBUAFX_MSGMAP_ENTRY@@B DD 07H ; CTextDoubleButtonDlg::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	017H
	DD	FLAT:?OnSetFocus@CTextDoubleButtonDlg@@QAEXPAVCWnd@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@CPasswordDoubleButtonDlg@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CPasswordDoubleButtonDlg@@KGPBUAFX_MSGMAP@@XZ ; CPasswordDoubleButtonDlg::messageMap
	DD	FLAT:?_messageEntries@CPasswordDoubleButtonDlg@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CPasswordDoubleButtonDlg@@0QBUAFX_MSGMAP_ENTRY@@B DD 07H ; CPasswordDoubleButtonDlg::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	017H
	DD	FLAT:?OnSetFocus@CPasswordDoubleButtonDlg@@QAEXPAVCWnd@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@CGenericDlg@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CGenericDlg@@KGPBUAFX_MSGMAP@@XZ ; CGenericDlg::messageMap
	DD	FLAT:?_messageEntries@CGenericDlg@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CGenericDlg@@0QBUAFX_MSGMAP_ENTRY@@B DD 04eH ; CGenericDlg::_messageEntries
	DD	0701H
	DD	029aH
	DD	029aH
	DD	026H
	DD	FLAT:?OnResize@CGenericDlg@@QAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	??1CSkinBtn@@UAE@XZ				; CSkinBtn::~CSkinBtn
PUBLIC	??0CSCIButtonBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSCIButtonBtn::CSCIButtonBtn
PUBLIC	?OnActivate@CSCIButtonBtn@@UAEXFF@Z		; CSCIButtonBtn::OnActivate
PUBLIC	??_7CSCIButtonBtn@@6B@				; CSCIButtonBtn::`vftable'
PUBLIC	??_GCSCIButtonBtn@@UAEPAXI@Z			; CSCIButtonBtn::`scalar deleting destructor'
PUBLIC	??_ECSCIButtonBtn@@UAEPAXI@Z			; CSCIButtonBtn::`vector deleting destructor'
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
EXTRN	__imp__atoi:NEAR
EXTRN	??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinBtn::CSkinBtn
EXTRN	?OnMouseDown@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseDown
EXTRN	?OnMouseUp@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseUp
EXTRN	?Refresh@CSkinBtn@@UAEXXZ:NEAR			; CSkinBtn::Refresh
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	?GetName@CSkinObj@@QAE?AVCString@@XZ:NEAR	; CSkinObj::GetName
EXTRN	?Right@CString@@QBE?AV1@H@Z:NEAR		; CString::Right
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
;	COMDAT ??_7CSCIButtonBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CSCIButtonBtn@@6B@ DD FLAT:??_ECSCIButtonBtn@@UAEPAXI@Z ; CSCIButtonBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSCIButtonBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T156027 DD	019930520H
	DD	05H
	DD	FLAT:$T156030
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156030 DD	0ffffffffH
	DD	FLAT:$L156019
	DD	00H
	DD	FLAT:$L156021
	DD	01H
	DD	FLAT:$L156022
	DD	02H
	DD	FLAT:$L156023
	DD	01H
	DD	FLAT:$L156023
xdata$x	ENDS
_TEXT	SEGMENT
$T156017 = -20
$T156018 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
_idStr$ = -16
??0CSCIButtonBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSCIButtonBtn::CSCIButtonBtn

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156028
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00025	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00028	50		 push	 eax
  00029	83 ec 08	 sub	 esp, 8
  0002c	8b cc		 mov	 ecx, esp
  0002e	89 65 ec	 mov	 DWORD PTR $T156017[ebp], esp
  00031	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0003a	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  0003d	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  00045	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  00048	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0004c	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSCIButtonBtn@@6B@ ; CSCIButtonBtn::`vftable'

; 21   : 	// setup our internal properties based on this control's name
; 22   : 	CString idStr = GetName().Right ( 2 );

  00055	6a 02		 push	 2
  00057	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  0005a	51		 push	 ecx
  0005b	8d 55 e8	 lea	 edx, DWORD PTR $T156018[ebp]
  0005e	52		 push	 edx
  0005f	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  00067	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  0006a	8b 45 d8	 mov	 eax, DWORD PTR -40+[ebp]
  0006d	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  00070	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00074	8b 4d d4	 mov	 ecx, DWORD PTR -44+[ebp]
  00077	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  0007c	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00080	8d 4d e8	 lea	 ecx, DWORD PTR $T156018[ebp]
  00083	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 23   : 
; 24   : 	// determine which feature this is for
; 25   : 	m_nID = atoi ( idStr );

  00088	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  0008b	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00090	50		 push	 eax
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 26   : }

  000a0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a4	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  000a7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000ac	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b3	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000b6	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000bb	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  000be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L156019:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00008	c3		 ret	 0
$L156021:
  00009	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  00011	c3		 ret	 0
$L156022:
  00012	8d 4d e8	 lea	 ecx, DWORD PTR $T156018[ebp]
  00015	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0001a	c3		 ret	 0
$L156023:
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  0001e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00023	c3		 ret	 0
$L156028:
  00024	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156027
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSCIButtonBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CSCIButtonBtn::CSCIButtonBtn
PUBLIC	??1CSCIButtonBtn@@UAE@XZ			; CSCIButtonBtn::~CSCIButtonBtn
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??_GCSCIButtonBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSCIButtonBtn@@UAEPAXI@Z PROC NEAR			; CSCIButtonBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSCIButtonBtn@@UAE@XZ ; CSCIButtonBtn::~CSCIButtonBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L148891
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L148891:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSCIButtonBtn@@UAEPAXI@Z ENDP			; CSCIButtonBtn::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinBtn@@UAE@XZ PROC NEAR				; CSkinBtn::~CSkinBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinBtn@@UAE@XZ ENDP				; CSkinBtn::~CSkinBtn
_TEXT	ENDS
;	COMDAT ??1CSCIButtonBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSCIButtonBtn@@UAE@XZ PROC NEAR			; CSCIButtonBtn::~CSCIButtonBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSCIButtonBtn@@UAE@XZ ENDP				; CSCIButtonBtn::~CSCIButtonBtn
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L148901
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L148901:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CSCIButtonBtn@@UAEXFF@Z PROC NEAR		; CSCIButtonBtn::OnActivate

; 30   : {

  000ce	55		 push	 ebp
  000cf	8b ec		 mov	 ebp, esp
  000d1	51		 push	 ecx
  000d2	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 31   : 	// If there is a parent, tell it to press button m_nPosition
; 32   : 	if ( m_pParentWnd )

  000d5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  000dc	74 1b		 je	 SHORT $L148907

; 33   : 		((CNoButtonDlg*) m_pParentWnd)->ExecuteButton( m_nID );

  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000e4	52		 push	 edx
  000e5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e8	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000eb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ee	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000f1	8b 10		 mov	 edx, DWORD PTR [eax]
  000f3	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]
$L148907:

; 34   : }

  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c2 08 00	 ret	 8
?OnActivate@CSCIButtonBtn@@UAEXFF@Z ENDP		; CSCIButtonBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CSCIObjectMethodPair@@QAE@VCSCI_Object@@F@Z	; CSCIObjectMethodPair::CSCIObjectMethodPair
PUBLIC	??0CSCI_Object@@QAE@XZ				; CSCI_Object::CSCI_Object
_TEXT	SEGMENT
_Object$ = 8
_nMethod$ = 12
_this$ = -4
??0CSCIObjectMethodPair@@QAE@VCSCI_Object@@F@Z PROC NEAR ; CSCIObjectMethodPair::CSCIObjectMethodPair

; 38   : {

  000ff	55		 push	 ebp
  00100	8b ec		 mov	 ebp, esp
  00102	51		 push	 ecx
  00103	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00106	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@XZ	; CSCI_Object::CSCI_Object

; 39   : 	m_Object = Object;

  0010e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00111	66 8b 4d 08	 mov	 cx, WORD PTR _Object$[ebp]
  00115	66 89 08	 mov	 WORD PTR [eax], cx

; 40   : 	m_nMethod = nMethod;

  00118	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0011b	66 8b 45 0c	 mov	 ax, WORD PTR _nMethod$[ebp]
  0011f	66 89 42 02	 mov	 WORD PTR [edx+2], ax

; 41   : }

  00123	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
??0CSCIObjectMethodPair@@QAE@VCSCI_Object@@F@Z ENDP	; CSCIObjectMethodPair::CSCIObjectMethodPair
_TEXT	ENDS
PUBLIC	?Execute@CSCIObjectMethodPair@@QAEXXZ		; CSCIObjectMethodPair::Execute
PUBLIC	??BMemID@@QBEGXZ				; MemID::operator unsigned short
EXTRN	?CallMethod@CSCI_Object@@QAEXF@Z:NEAR		; CSCI_Object::CallMethod
_TEXT	SEGMENT
_this$ = -4
?Execute@CSCIObjectMethodPair@@QAEXXZ PROC NEAR		; CSCIObjectMethodPair::Execute

; 45   : {

  0012c	55		 push	 ebp
  0012d	8b ec		 mov	 ebp, esp
  0012f	51		 push	 ecx
  00130	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 46   : 	if ( m_Object )

  00133	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00136	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0013b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00140	85 c0		 test	 eax, eax
  00142	74 10		 je	 SHORT $L148917

; 47   : 		m_Object.CallMethod( m_nMethod );

  00144	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00147	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  0014b	51		 push	 ecx
  0014c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014f	e8 00 00 00 00	 call	 ?CallMethod@CSCI_Object@@QAEXF@Z ; CSCI_Object::CallMethod
$L148917:

; 48   : }

  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c3		 ret	 0
?Execute@CSCIObjectMethodPair@@QAEXXZ ENDP		; CSCIObjectMethodPair::Execute
_TEXT	ENDS
EXTRN	?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B:QWORD	; CSkinWnd::messageMap
_TEXT	SEGMENT
?_GetBaseMessageMap@CNoButtonDlg@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CNoButtonDlg::_GetBaseMessageMap

; 51   : BEGIN_MESSAGE_MAP ( CNoButtonDlg, CSkinWnd )

  00158	55		 push	 ebp
  00159	8b ec		 mov	 ebp, esp
  0015b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B ; CSkinWnd::messageMap
  00160	5d		 pop	 ebp
  00161	c3		 ret	 0
?_GetBaseMessageMap@CNoButtonDlg@@KGPBUAFX_MSGMAP@@XZ ENDP ; CNoButtonDlg::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ ; CNoButtonDlg::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CNoButtonDlg::GetMessageMap

; 51   : BEGIN_MESSAGE_MAP ( CNoButtonDlg, CSkinWnd )

  00162	55		 push	 ebp
  00163	8b ec		 mov	 ebp, esp
  00165	51		 push	 ecx
  00166	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00169	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CNoButtonDlg@@1UAFX_MSGMAP@@B ; CNoButtonDlg::messageMap
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c3		 ret	 0
?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CNoButtonDlg::GetMessageMap
_$E334	PROC NEAR
  00172	55		 push	 ebp
  00173	8b ec		 mov	 ebp, esp
  00175	e8 00 00 00 00	 call	 _$E330
  0017a	e8 00 00 00 00	 call	 _$E333
  0017f	5d		 pop	 ebp
  00180	c3		 ret	 0
_$E334	ENDP
_TEXT	ENDS
PUBLIC	??0?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@ABU?$less@VCSCI_Object@@@1@ABV?$allocator@PAVCNoButtonDlg@@@1@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
_TEXT	SEGMENT
$T156046 = -4
$T156047 = -8
_$E330	PROC NEAR

; 55   : std::map<CSCI_Object, CNoButtonDlg*>	CNoButtonDlg::m_Dialogs;

  00181	55		 push	 ebp
  00182	8b ec		 mov	 ebp, esp
  00184	83 ec 08	 sub	 esp, 8
  00187	8d 45 fc	 lea	 eax, DWORD PTR $T156046[ebp]
  0018a	50		 push	 eax
  0018b	8d 4d f8	 lea	 ecx, DWORD PTR $T156047[ebp]
  0018e	51		 push	 ecx
  0018f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A
  00194	e8 00 00 00 00	 call	 ??0?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@ABU?$less@VCSCI_Object@@@1@ABV?$allocator@PAVCNoButtonDlg@@@1@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
  00199	8b e5		 mov	 esp, ebp
  0019b	5d		 pop	 ebp
  0019c	c3		 ret	 0
_$E330	ENDP
_TEXT	ENDS
EXTRN	_atexit:NEAR
_TEXT	SEGMENT
_$E333	PROC NEAR
  0019d	55		 push	 ebp
  0019e	8b ec		 mov	 ebp, esp
  001a0	68 00 00 00 00	 push	 OFFSET FLAT:_$E331
  001a5	e8 00 00 00 00	 call	 _atexit
  001aa	83 c4 04	 add	 esp, 4
  001ad	5d		 pop	 ebp
  001ae	c3		 ret	 0
_$E333	ENDP
_TEXT	ENDS
PUBLIC	??1?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@XZ ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::~map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
_BSS	SEGMENT
_$S332	DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_$E331	PROC NEAR
  001af	55		 push	 ebp
  001b0	8b ec		 mov	 ebp, esp
  001b2	33 c0		 xor	 eax, eax
  001b4	a0 00 00 00 00	 mov	 al, BYTE PTR _$S332
  001b9	83 e0 01	 and	 eax, 1
  001bc	85 c0		 test	 eax, eax
  001be	75 19		 jne	 SHORT $L148946
  001c0	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR _$S332
  001c6	80 c9 01	 or	 cl, 1
  001c9	88 0d 00 00 00
	00		 mov	 BYTE PTR _$S332, cl
  001cf	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A
  001d4	e8 00 00 00 00	 call	 ??1?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@XZ ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::~map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
$L148946:
  001d9	5d		 pop	 ebp
  001da	c3		 ret	 0
_$E331	ENDP
_TEXT	ENDS
PUBLIC	??1?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::~_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
;	COMDAT ??1?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@XZ PROC NEAR ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::~map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::~_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@XZ ENDP ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::~map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
_TEXT	ENDS
PUBLIC	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z		; CWnd::MoveWindow
PUBLIC	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetWindowRect
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	?Height@CRect@@QBEHXZ				; CRect::Height
EXTRN	?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z:NEAR	; CWnd::ScreenToClient
_TEXT	SEGMENT
_pNMHDR$ = 8
_this$ = -44
_prr$ = -40
_promptRect$ = -16
_myRect$ = -32
_nAdjust$ = -36
?OnResize@CNoButtonDlg@@QAEXPAUtagNMHDR@@PAJ@Z PROC NEAR ; CNoButtonDlg::OnResize

; 58   : {

  001db	55		 push	 ebp
  001dc	8b ec		 mov	 ebp, esp
  001de	83 ec 2c	 sub	 esp, 44			; 0000002cH
  001e1	56		 push	 esi
  001e2	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 59   : 	REQRESIZE* prr = (REQRESIZE*)pNMHDR;

  001e5	8b 45 08	 mov	 eax, DWORD PTR _pNMHDR$[ebp]
  001e8	89 45 d8	 mov	 DWORD PTR _prr$[ebp], eax

; 60   : 
; 61   : 	CRect	promptRect;

  001eb	8d 4d f0	 lea	 ecx, DWORD PTR _promptRect$[ebp]
  001ee	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 62   : 	CRect	myRect;

  001f3	8d 4d e0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  001f6	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 63   : 	int		nAdjust;
; 64   : 
; 65   : 	m_pPrompt->GetWindowRect( &promptRect );

  001fb	8d 4d f0	 lea	 ecx, DWORD PTR _promptRect$[ebp]
  001fe	51		 push	 ecx
  001ff	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00202	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  00208	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 66   : 	ScreenToClient( &promptRect );

  0020d	8d 45 f0	 lea	 eax, DWORD PTR _promptRect$[ebp]
  00210	50		 push	 eax
  00211	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00214	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 67   : 
; 68   : 	CWnd::GetWindowRect( &myRect );

  00219	8d 4d e0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  0021c	51		 push	 ecx
  0021d	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00220	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 69   : 
; 70   : 	nAdjust = ( prr->rc.bottom - prr->rc.top ) - promptRect.Height();

  00225	8b 55 d8	 mov	 edx, DWORD PTR _prr$[ebp]
  00228	8b 45 d8	 mov	 eax, DWORD PTR _prr$[ebp]
  0022b	8b 72 18	 mov	 esi, DWORD PTR [edx+24]
  0022e	2b 70 10	 sub	 esi, DWORD PTR [eax+16]
  00231	8d 4d f0	 lea	 ecx, DWORD PTR _promptRect$[ebp]
  00234	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00239	2b f0		 sub	 esi, eax
  0023b	89 75 dc	 mov	 DWORD PTR _nAdjust$[ebp], esi

; 71   : 
; 72   : 	promptRect.bottom += nAdjust;

  0023e	8b 4d fc	 mov	 ecx, DWORD PTR _promptRect$[ebp+12]
  00241	03 4d dc	 add	 ecx, DWORD PTR _nAdjust$[ebp]
  00244	89 4d fc	 mov	 DWORD PTR _promptRect$[ebp+12], ecx

; 73   : 
; 74   : 	m_pPrompt->MoveWindow( &promptRect, false );

  00247	6a 00		 push	 0
  00249	8d 55 f0	 lea	 edx, DWORD PTR _promptRect$[ebp]
  0024c	52		 push	 edx
  0024d	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  00250	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  00256	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow

; 75   : 
; 76   : 	myRect.bottom += nAdjust;

  0025b	8b 4d ec	 mov	 ecx, DWORD PTR _myRect$[ebp+12]
  0025e	03 4d dc	 add	 ecx, DWORD PTR _nAdjust$[ebp]
  00261	89 4d ec	 mov	 DWORD PTR _myRect$[ebp+12], ecx

; 77   : 
; 78   : 	MoveWindow( &myRect, true );

  00264	6a 01		 push	 1
  00266	8d 55 e0	 lea	 edx, DWORD PTR _myRect$[ebp]
  00269	52		 push	 edx
  0026a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0026d	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow

; 79   : }

  00272	5e		 pop	 esi
  00273	8b e5		 mov	 esp, ebp
  00275	5d		 pop	 ebp
  00276	c2 08 00	 ret	 8
?OnResize@CNoButtonDlg@@QAEXPAUtagNMHDR@@PAJ@Z ENDP	; CNoButtonDlg::OnResize
_TEXT	ENDS
PUBLIC	?Next@CSkinWnd@@UAEXXZ				; CSkinWnd::Next
PUBLIC	?Previous@CSkinWnd@@UAEXXZ			; CSkinWnd::Previous
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??0CNoButtonDlg@@QAE@XZ				; CNoButtonDlg::CNoButtonDlg
PUBLIC	?CloseSelf@CNoButtonDlg@@UAEX_N@Z		; CNoButtonDlg::CloseSelf
PUBLIC	?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CNoButtonDlg::MakeSkinCtrl
PUBLIC	?ExecuteButton@CNoButtonDlg@@UAEXH@Z		; CNoButtonDlg::ExecuteButton
PUBLIC	??_7CNoButtonDlg@@6B@				; CNoButtonDlg::`vftable'
PUBLIC	??_GCNoButtonDlg@@UAEPAXI@Z			; CNoButtonDlg::`scalar deleting destructor'
PUBLIC	??_ECNoButtonDlg@@UAEPAXI@Z			; CNoButtonDlg::`vector deleting destructor'
PUBLIC	??0?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethodPair@@@1@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CSkinWnd::GetEventSinkMap
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?GetProcessEvents@CSkinWnd@@MAE_NXZ:NEAR	; CSkinWnd::GetProcessEvents
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	??0CSkinWnd@@QAE@XZ:NEAR			; CSkinWnd::CSkinWnd
EXTRN	??1CSkinWnd@@UAE@XZ:NEAR			; CSkinWnd::~CSkinWnd
EXTRN	?Disable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Disable
EXTRN	?Enable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Enable
EXTRN	?EnableGameModal@CSkinWnd@@UAEXHPAH@Z:NEAR	; CSkinWnd::EnableGameModal
EXTRN	?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z:NEAR	; CSkinWnd::DisableGameModal
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?ProcessRefreshList@CSkinWnd@@UAEHXZ:NEAR	; CSkinWnd::ProcessRefreshList
EXTRN	?UpdateTracking@CSkinWnd@@UAEXXZ:NEAR		; CSkinWnd::UpdateTracking
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
;	COMDAT ??_7CNoButtonDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CNoButtonDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CNoButtonDlg::`vftable'
	DD	FLAT:??_ECNoButtonDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CNoButtonDlg@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T156058 DD	019930520H
	DD	01H
	DD	FLAT:$T156060
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156060 DD	0ffffffffH
	DD	FLAT:$L156055
xdata$x	ENDS
_TEXT	SEGMENT
$T156054 = -16
__$EHRec$ = -12
_this$ = -20
??0CNoButtonDlg@@QAE@XZ PROC NEAR			; CNoButtonDlg::CNoButtonDlg

; 83   : {

  00279	55		 push	 ebp
  0027a	8b ec		 mov	 ebp, esp
  0027c	6a ff		 push	 -1
  0027e	68 00 00 00 00	 push	 $L156059
  00283	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00289	50		 push	 eax
  0028a	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00291	83 ec 08	 sub	 esp, 8
  00294	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00297	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0029a	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  0029f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  002a6	8d 45 f0	 lea	 eax, DWORD PTR $T156054[ebp]
  002a9	50		 push	 eax
  002aa	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002ad	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  002b3	e8 00 00 00 00	 call	 ??0?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethodPair@@@1@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >
  002b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002bb	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CNoButtonDlg@@6B@ ; CNoButtonDlg::`vftable'

; 84   : 	// Set that no button has been pressed
; 85   : 	m_bExecuted = false;

  002c1	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  002c4	c7 82 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+176], 0

; 86   : 	m_bDisposed = false;

  002ce	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002d1	c7 80 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+180], 0

; 87   : 
; 88   : 	m_bResizing = true;

  002db	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002de	c7 81 9c 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+156], 1

; 89   : 
; 90   : 	m_pPrompt = NULL;

  002e8	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  002eb	c7 82 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+148], 0

; 91   : }

  002f5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002fc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002ff	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00302	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00309	8b e5		 mov	 esp, ebp
  0030b	5d		 pop	 ebp
  0030c	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L156055:
  0002e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00036	c3		 ret	 0
$L156059:
  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156058
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CNoButtonDlg@@QAE@XZ ENDP				; CNoButtonDlg::CNoButtonDlg
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	??1CNoButtonDlg@@UAE@XZ				; CNoButtonDlg::~CNoButtonDlg
;	COMDAT ??_GCNoButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCNoButtonDlg@@UAEPAXI@Z PROC NEAR			; CNoButtonDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CNoButtonDlg@@UAE@XZ	; CNoButtonDlg::~CNoButtonDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L148977
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L148977:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCNoButtonDlg@@UAEPAXI@Z ENDP			; CNoButtonDlg::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?end@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@XZ ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
PUBLIC	?erase@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@V342@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase
PUBLIC	?find@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@ABVCSCI_Object@@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::find
PUBLIC	?getObject@CSCIObjectMethodPair@@QAE?AVCSCI_Object@@XZ ; CSCIObjectMethodPair::getObject
PUBLIC	??1?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::~vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >
PUBLIC	?begin@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::begin
PUBLIC	?end@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::end
PUBLIC	?clear@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXXZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::clear
PUBLIC	??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator
PUBLIC	??9iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator!=
xdata$x	SEGMENT
$T156075 DD	019930520H
	DD	02H
	DD	FLAT:$T156077
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156077 DD	0ffffffffH
	DD	FLAT:$L156072
	DD	00H
	DD	FLAT:$L156073
xdata$x	ENDS
_TEXT	SEGMENT
$T156063 = -28
$T156064 = -32
$T156065 = -36
$T156066 = -40
$T156067 = -44
$T156068 = -48
$T156069 = -52
__$EHRec$ = -12
_this$ = -56
_it$ = -20
_pDialog$ = -16
_pPair$148992 = -24
??1CNoButtonDlg@@UAE@XZ PROC NEAR			; CNoButtonDlg::~CNoButtonDlg

; 94   : {

  0030d	55		 push	 ebp
  0030e	8b ec		 mov	 ebp, esp
  00310	6a ff		 push	 -1
  00312	68 00 00 00 00	 push	 $L156076
  00317	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0031d	50		 push	 eax
  0031e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00325	83 ec 30	 sub	 esp, 48			; 00000030H
  00328	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx
  0032b	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  0032e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CNoButtonDlg@@6B@ ; CNoButtonDlg::`vftable'
  00334	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 95   : 	std::vector<CSCIObjectMethodPair*>::iterator it;
; 96   : 	std::map<CSCI_Object, CNoButtonDlg*>::iterator pDialog;

  0033b	8d 4d f0	 lea	 ecx, DWORD PTR _pDialog$[ebp]
  0033e	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator

; 97   : 
; 98   : 	for (it = m_ButtonVector.begin();it != m_ButtonVector.end();it++) {

  00343	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00346	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  0034c	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::begin
  00351	89 45 ec	 mov	 DWORD PTR _it$[ebp], eax
  00354	eb 09		 jmp	 SHORT $L148989
$L148990:
  00356	8b 4d ec	 mov	 ecx, DWORD PTR _it$[ebp]
  00359	83 c1 04	 add	 ecx, 4
  0035c	89 4d ec	 mov	 DWORD PTR _it$[ebp], ecx
$L148989:
  0035f	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00362	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  00368	e8 00 00 00 00	 call	 ?end@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::end
  0036d	39 45 ec	 cmp	 DWORD PTR _it$[ebp], eax
  00370	74 71		 je	 SHORT $L148991

; 99   : 		CSCIObjectMethodPair* pPair = *it;

  00372	8b 55 ec	 mov	 edx, DWORD PTR _it$[ebp]
  00375	8b 02		 mov	 eax, DWORD PTR [edx]
  00377	89 45 e8	 mov	 DWORD PTR _pPair$148992[ebp], eax

; 100  : 
; 101  : 		pDialog = m_Dialogs.find( pPair->getObject() );

  0037a	8d 4d e4	 lea	 ecx, DWORD PTR $T156063[ebp]
  0037d	51		 push	 ecx
  0037e	8b 4d e8	 mov	 ecx, DWORD PTR _pPair$148992[ebp]
  00381	e8 00 00 00 00	 call	 ?getObject@CSCIObjectMethodPair@@QAE?AVCSCI_Object@@XZ ; CSCIObjectMethodPair::getObject
  00386	50		 push	 eax
  00387	8d 55 e0	 lea	 edx, DWORD PTR $T156064[ebp]
  0038a	52		 push	 edx
  0038b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A
  00390	e8 00 00 00 00	 call	 ?find@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@ABVCSCI_Object@@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::find
  00395	8b 00		 mov	 eax, DWORD PTR [eax]
  00397	89 45 f0	 mov	 DWORD PTR _pDialog$[ebp], eax

; 102  : 
; 103  : 		if ( pDialog != m_Dialogs.end() ) {

  0039a	8d 4d dc	 lea	 ecx, DWORD PTR $T156065[ebp]
  0039d	51		 push	 ecx
  0039e	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A
  003a3	e8 00 00 00 00	 call	 ?end@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@XZ ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
  003a8	50		 push	 eax
  003a9	8d 4d f0	 lea	 ecx, DWORD PTR _pDialog$[ebp]
  003ac	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator!=
  003b1	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  003b6	85 c0		 test	 eax, eax
  003b8	74 12		 je	 SHORT $L148996

; 104  : 			m_Dialogs.erase( pDialog );

  003ba	8b 55 f0	 mov	 edx, DWORD PTR _pDialog$[ebp]
  003bd	52		 push	 edx
  003be	8d 45 d8	 lea	 eax, DWORD PTR $T156066[ebp]
  003c1	50		 push	 eax
  003c2	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A
  003c7	e8 00 00 00 00	 call	 ?erase@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@V342@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase
$L148996:

; 106  : 
; 107  : 		delete pPair;

  003cc	8b 4d e8	 mov	 ecx, DWORD PTR _pPair$148992[ebp]
  003cf	89 4d d4	 mov	 DWORD PTR $T156067[ebp], ecx
  003d2	8b 55 d4	 mov	 edx, DWORD PTR $T156067[ebp]
  003d5	52		 push	 edx
  003d6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003db	83 c4 04	 add	 esp, 4

; 108  : 	}

  003de	e9 73 ff ff ff	 jmp	 $L148990
$L148991:

; 109  : 
; 110  : 	m_ButtonVector.clear();

  003e3	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  003e6	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  003ec	e8 00 00 00 00	 call	 ?clear@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXXZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::clear

; 111  : 
; 112  : 	if (m_pPrompt)

  003f1	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  003f4	83 b8 94 00 00
	00 00		 cmp	 DWORD PTR [eax+148], 0
  003fb	74 31		 je	 SHORT $L156071

; 114  : 		delete m_pPrompt;

  003fd	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00400	8b 91 94 00 00
	00		 mov	 edx, DWORD PTR [ecx+148]
  00406	89 55 cc	 mov	 DWORD PTR $T156069[ebp], edx
  00409	8b 45 cc	 mov	 eax, DWORD PTR $T156069[ebp]
  0040c	89 45 d0	 mov	 DWORD PTR $T156068[ebp], eax
  0040f	83 7d d0 00	 cmp	 DWORD PTR $T156068[ebp], 0
  00413	74 12		 je	 SHORT $L156070
  00415	6a 01		 push	 1
  00417	8b 4d d0	 mov	 ecx, DWORD PTR $T156068[ebp]
  0041a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0041c	8b 4d d0	 mov	 ecx, DWORD PTR $T156068[ebp]
  0041f	ff 52 04	 call	 DWORD PTR [edx+4]
  00422	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  00425	eb 07		 jmp	 SHORT $L156071
$L156070:
  00427	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L156071:

; 116  : }

  0042e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00432	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00435	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  0043b	e8 00 00 00 00	 call	 ??1?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::~vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >
  00440	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00447	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  0044a	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0044f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00452	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00459	8b e5		 mov	 esp, ebp
  0045b	5d		 pop	 ebp
  0045c	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L156072:
  00041	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00049	c3		 ret	 0
$L156073:
  0004a	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  00053	e8 00 00 00 00	 call	 ??1?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::~vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >
  00058	c3		 ret	 0
$L156076:
  00059	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156075
  0005e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CNoButtonDlg@@UAE@XZ ENDP				; CNoButtonDlg::~CNoButtonDlg
PUBLIC	?size@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::size
PUBLIC	??A?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEAAPAVCSCIObjectMethodPair@@I@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::operator[]
EXTRN	?CloseSelf@CSkinWnd@@UAEX_N@Z:NEAR		; CSkinWnd::CloseSelf
_TEXT	SEGMENT
_bTransient$ = 8
_this$ = -4
?CloseSelf@CNoButtonDlg@@UAEX_N@Z PROC NEAR		; CNoButtonDlg::CloseSelf

; 120  : {

  0045d	55		 push	 ebp
  0045e	8b ec		 mov	 ebp, esp
  00460	51		 push	 ecx
  00461	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 	// Call Button 0 if no buttons pressed (or button was pressed early and it was delayed until now)
; 122  : 	if ( !m_bDisposed && ! m_bExecuted && m_ButtonVector.size() && m_ButtonVector[0]) {

  00464	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00467	83 b8 b4 00 00
	00 00		 cmp	 DWORD PTR [eax+180], 0
  0046e	75 57		 jne	 SHORT $L149006
  00470	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00473	83 b9 b0 00 00
	00 00		 cmp	 DWORD PTR [ecx+176], 0
  0047a	75 4b		 jne	 SHORT $L149006
  0047c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0047f	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  00485	e8 00 00 00 00	 call	 ?size@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::size
  0048a	85 c0		 test	 eax, eax
  0048c	74 39		 je	 SHORT $L149006
  0048e	6a 00		 push	 0
  00490	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00493	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  00499	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEAAPAVCSCIObjectMethodPair@@I@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::operator[]
  0049e	83 38 00	 cmp	 DWORD PTR [eax], 0
  004a1	74 24		 je	 SHORT $L149006

; 123  : 		m_bExecuted = true;

  004a3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004a6	c7 82 b0 00 00
	00 01 00 00 00	 mov	 DWORD PTR [edx+176], 1

; 124  : 		m_ButtonVector [ 0 ] -> Execute();

  004b0	6a 00		 push	 0
  004b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004b5	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  004bb	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEAAPAVCSCIObjectMethodPair@@I@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::operator[]
  004c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  004c2	e8 00 00 00 00	 call	 ?Execute@CSCIObjectMethodPair@@QAEXXZ ; CSCIObjectMethodPair::Execute
$L149006:

; 126  : 
; 127  : 	CSkinWnd::CloseSelf( bTransient );

  004c7	8a 45 08	 mov	 al, BYTE PTR _bTransient$[ebp]
  004ca	50		 push	 eax
  004cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004ce	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 128  : }

  004d3	8b e5		 mov	 esp, ebp
  004d5	5d		 pop	 ebp
  004d6	c2 04 00	 ret	 4
?CloseSelf@CNoButtonDlg@@UAEX_N@Z ENDP			; CNoButtonDlg::CloseSelf
_TEXT	ENDS
PUBLIC	??A?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAEAAPAVCNoButtonDlg@@ABVCSCI_Object@@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::operator[]
PUBLIC	?push_back@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXABQAVCSCIObjectMethodPair@@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::push_back
PUBLIC	?AddButton@CNoButtonDlg@@IAEXVCSCI_Object@@F@Z	; CNoButtonDlg::AddButton
PUBLIC	??0CSCI_Object@@QAE@ABV0@@Z			; CSCI_Object::CSCI_Object
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
xdata$x	SEGMENT
$T156087 DD	019930520H
	DD	01H
	DD	FLAT:$T156089
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156089 DD	0ffffffffH
	DD	FLAT:$L156085
xdata$x	ENDS
_TEXT	SEGMENT
$T156080 = -20
$T156081 = -24
$T156082 = -28
__$EHRec$ = -12
_Object$ = 8
_nMethod$ = 12
_this$ = -32
_pObject$ = -16
?AddButton@CNoButtonDlg@@IAEXVCSCI_Object@@F@Z PROC NEAR ; CNoButtonDlg::AddButton

; 132  : {

  004d9	55		 push	 ebp
  004da	8b ec		 mov	 ebp, esp
  004dc	6a ff		 push	 -1
  004de	68 00 00 00 00	 push	 $L156088
  004e3	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  004e9	50		 push	 eax
  004ea	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  004f1	83 ec 18	 sub	 esp, 24			; 00000018H
  004f4	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 133  : 	// Create the button object
; 134  : 	CSCIObjectMethodPair* pObject = new CSCIObjectMethodPair( Object, nMethod );

  004f7	6a 04		 push	 4
  004f9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  004fe	83 c4 04	 add	 esp, 4
  00501	89 45 e8	 mov	 DWORD PTR $T156081[ebp], eax
  00504	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0050b	83 7d e8 00	 cmp	 DWORD PTR $T156081[ebp], 0
  0050f	74 21		 je	 SHORT $L156083
  00511	66 8b 45 0c	 mov	 ax, WORD PTR _nMethod$[ebp]
  00515	50		 push	 eax
  00516	51		 push	 ecx
  00517	8b cc		 mov	 ecx, esp
  00519	89 65 e4	 mov	 DWORD PTR $T156082[ebp], esp
  0051c	8d 55 08	 lea	 edx, DWORD PTR _Object$[ebp]
  0051f	52		 push	 edx
  00520	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00525	8b 4d e8	 mov	 ecx, DWORD PTR $T156081[ebp]
  00528	e8 00 00 00 00	 call	 ??0CSCIObjectMethodPair@@QAE@VCSCI_Object@@F@Z ; CSCIObjectMethodPair::CSCIObjectMethodPair
  0052d	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  00530	eb 07		 jmp	 SHORT $L156084
$L156083:
  00532	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L156084:
  00539	8b 45 dc	 mov	 eax, DWORD PTR -36+[ebp]
  0053c	89 45 ec	 mov	 DWORD PTR $T156080[ebp], eax
  0053f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00546	8b 4d ec	 mov	 ecx, DWORD PTR $T156080[ebp]
  00549	89 4d f0	 mov	 DWORD PTR _pObject$[ebp], ecx

; 135  : 
; 136  : 	// link it to the id of the button
; 137  : 	m_ButtonVector.push_back( pObject );

  0054c	8d 55 f0	 lea	 edx, DWORD PTR _pObject$[ebp]
  0054f	52		 push	 edx
  00550	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00553	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  00559	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXABQAVCSCIObjectMethodPair@@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::push_back

; 138  : 
; 139  : 	m_Dialogs[ Object ] = this;

  0055e	8d 45 08	 lea	 eax, DWORD PTR _Object$[ebp]
  00561	50		 push	 eax
  00562	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A
  00567	e8 00 00 00 00	 call	 ??A?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAEAAPAVCNoButtonDlg@@ABVCSCI_Object@@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::operator[]
  0056c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0056f	89 08		 mov	 DWORD PTR [eax], ecx

; 140  : }

  00571	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00574	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0057b	8b e5		 mov	 esp, ebp
  0057d	5d		 pop	 ebp
  0057e	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L156085:
  00063	8b 45 e8	 mov	 eax, DWORD PTR $T156081[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006c	59		 pop	 ecx
  0006d	c3		 ret	 0
$L156088:
  0006e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156087
  00073	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddButton@CNoButtonDlg@@IAEXVCSCI_Object@@F@Z ENDP	; CNoButtonDlg::AddButton
PUBLIC	?Dispose@CNoButtonDlg@@SAXVCSCI_Object@@@Z	; CNoButtonDlg::Dispose
_TEXT	SEGMENT
$T156091 = -12
$T156092 = -16
_hObject$ = 8
_pDialog$ = -4
_pDlg$149030 = -8
?Dispose@CNoButtonDlg@@SAXVCSCI_Object@@@Z PROC NEAR	; CNoButtonDlg::Dispose

; 142  : void CNoButtonDlg::Dispose( CSCI_Object hObject ) {

  00581	55		 push	 ebp
  00582	8b ec		 mov	 ebp, esp
  00584	83 ec 10	 sub	 esp, 16			; 00000010H

; 143  : 	std::map<CSCI_Object, CNoButtonDlg*>::iterator pDialog;

  00587	8d 4d fc	 lea	 ecx, DWORD PTR _pDialog$[ebp]
  0058a	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator

; 144  : 
; 145  : 	pDialog = m_Dialogs.find( hObject );

  0058f	8d 45 08	 lea	 eax, DWORD PTR _hObject$[ebp]
  00592	50		 push	 eax
  00593	8d 4d f4	 lea	 ecx, DWORD PTR $T156091[ebp]
  00596	51		 push	 ecx
  00597	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A
  0059c	e8 00 00 00 00	 call	 ?find@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@ABVCSCI_Object@@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::find
  005a1	8b 10		 mov	 edx, DWORD PTR [eax]
  005a3	89 55 fc	 mov	 DWORD PTR _pDialog$[ebp], edx

; 146  : 
; 147  : 	if ( pDialog != m_Dialogs.end() ) {

  005a6	8d 45 f0	 lea	 eax, DWORD PTR $T156092[ebp]
  005a9	50		 push	 eax
  005aa	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A
  005af	e8 00 00 00 00	 call	 ?end@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@XZ ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
  005b4	50		 push	 eax
  005b5	8d 4d fc	 lea	 ecx, DWORD PTR _pDialog$[ebp]
  005b8	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator!=
  005bd	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  005c2	85 c0		 test	 eax, eax
  005c4	74 30		 je	 SHORT $L149029

; 148  : 		CNoButtonDlg* pDlg = m_Dialogs[ hObject ];

  005c6	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  005c9	51		 push	 ecx
  005ca	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_Dialogs@CNoButtonDlg@@1V?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@A
  005cf	e8 00 00 00 00	 call	 ??A?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAEAAPAVCNoButtonDlg@@ABVCSCI_Object@@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::operator[]
  005d4	8b 10		 mov	 edx, DWORD PTR [eax]
  005d6	89 55 f8	 mov	 DWORD PTR _pDlg$149030[ebp], edx

; 149  : 
; 150  : 		pDlg->m_bDisposed = true;

  005d9	8b 45 f8	 mov	 eax, DWORD PTR _pDlg$149030[ebp]
  005dc	c7 80 b4 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+180], 1

; 151  : 		pDlg->CloseSelf();

  005e6	6a 00		 push	 0
  005e8	8b 4d f8	 mov	 ecx, DWORD PTR _pDlg$149030[ebp]
  005eb	8b 11		 mov	 edx, DWORD PTR [ecx]
  005ed	8b 4d f8	 mov	 ecx, DWORD PTR _pDlg$149030[ebp]
  005f0	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L149029:

; 153  : }

  005f6	8b e5		 mov	 esp, ebp
  005f8	5d		 pop	 ebp
  005f9	c3		 ret	 0
?Dispose@CNoButtonDlg@@SAXVCSCI_Object@@@Z ENDP		; CNoButtonDlg::Dispose
_TEXT	ENDS
PUBLIC	?CreatePopup@CNoButtonDlg@@QAEHPBDPAD1@Z	; CNoButtonDlg::CreatePopup
PUBLIC	?SetEventMask@CRichEditCtrl@@QAEKK@Z		; CRichEditCtrl::SetEventMask
PUBLIC	?RequestResize@CRichEditCtrl@@QAEXXZ		; CRichEditCtrl::RequestResize
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	?SetAllowResize@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetAllowResize
PUBLIC	?SetAllowMove@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetAllowMove
EXTRN	?SetText@CSkinEdit@@QAEHPBD@Z:NEAR		; CSkinEdit::SetText
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
EXTRN	?CenterWindow@CWnd@@QAEXPAV1@@Z:NEAR		; CWnd::CenterWindow
EXTRN	?g_pMainWindow@@3PAVCMainWindow@@A:DWORD	; g_pMainWindow
EXTRN	?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z:NEAR ; CSkinWnd::CreatePopupChild
_TEXT	SEGMENT
$T156094 = -20
_pSkinPath$ = 8
_psTitle$ = 12
_psPrompt$ = 16
_this$ = -24
_bCreated$ = -4
?CreatePopup@CNoButtonDlg@@QAEHPBDPAD1@Z PROC NEAR	; CNoButtonDlg::CreatePopup

; 157  : {

  005fa	55		 push	 ebp
  005fb	8b ec		 mov	 ebp, esp
  005fd	83 ec 18	 sub	 esp, 24			; 00000018H
  00600	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 158  : 	BOOL bCreated = CSkinWnd::CreatePopupChild ( pSkinPath, psTitle, CRect( 0, 0, 0, 0 ), g_pMainWindow, FALSE );

  00603	6a 01		 push	 1
  00605	6a 00		 push	 0
  00607	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  0060c	50		 push	 eax
  0060d	6a 00		 push	 0
  0060f	6a 00		 push	 0
  00611	6a 00		 push	 0
  00613	6a 00		 push	 0
  00615	8d 4d ec	 lea	 ecx, DWORD PTR $T156094[ebp]
  00618	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  0061d	50		 push	 eax
  0061e	8b 4d 0c	 mov	 ecx, DWORD PTR _psTitle$[ebp]
  00621	51		 push	 ecx
  00622	8b 55 08	 mov	 edx, DWORD PTR _pSkinPath$[ebp]
  00625	52		 push	 edx
  00626	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00629	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  0062e	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 159  : 
; 160  : 	if ( bCreated ) {

  00631	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  00635	74 45		 je	 SHORT $L149042

; 161  : 		if ( psPrompt ) {

  00637	83 7d 10 00	 cmp	 DWORD PTR _psPrompt$[ebp], 0
  0063b	74 3f		 je	 SHORT $L149042

; 162  : 			assert( NULL != m_pPrompt );
; 163  : 
; 164  : 			m_pPrompt->SetText( psPrompt );

  0063d	8b 45 10	 mov	 eax, DWORD PTR _psPrompt$[ebp]
  00640	50		 push	 eax
  00641	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00644	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  0064a	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 165  : 
; 166  : 			if ( m_bResizing ) {

  0064f	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00652	83 ba 9c 00 00
	00 00		 cmp	 DWORD PTR [edx+156], 0
  00659	74 21		 je	 SHORT $L149042

; 167  : 				m_pPrompt->SetEventMask( ENM_REQUESTRESIZE ); 

  0065b	68 00 00 04 00	 push	 262144			; 00040000H
  00660	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00663	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  00669	e8 00 00 00 00	 call	 ?SetEventMask@CRichEditCtrl@@QAEKK@Z ; CRichEditCtrl::SetEventMask

; 168  : 				m_pPrompt->RequestResize();

  0066e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00671	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  00677	e8 00 00 00 00	 call	 ?RequestResize@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::RequestResize
$L149042:

; 172  : 
; 173  : 	CenterWindow( g_pMainWindow );

  0067c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  00682	52		 push	 edx
  00683	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00686	e8 00 00 00 00	 call	 ?CenterWindow@CWnd@@QAEXPAV1@@Z ; CWnd::CenterWindow

; 174  : 	SetAllowMove( false );

  0068b	6a 00		 push	 0
  0068d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00690	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove

; 175  : 	SetAllowResize( false );

  00695	6a 00		 push	 0
  00697	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0069a	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 176  : 
; 177  : 	ShowWindow( SW_SHOW );

  0069f	6a 05		 push	 5
  006a1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  006a4	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 178  : 
; 179  : 	return bCreated;

  006a9	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 180  : }

  006ac	8b e5		 mov	 esp, ebp
  006ae	5d		 pop	 ebp
  006af	c2 0c 00	 ret	 12			; 0000000cH
?CreatePopup@CNoButtonDlg@@QAEHPBDPAD1@Z ENDP		; CNoButtonDlg::CreatePopup
_TEXT	ENDS
PUBLIC	?Create@CNoButtonDlg@@QAEHPBDPAD1_N@Z		; CNoButtonDlg::Create
EXTRN	?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z:NEAR ; CSkinWnd::CreateChild
EXTRN	?CenterInParent@CSkinWnd@@QAEXXZ:NEAR		; CSkinWnd::CenterInParent
_TEXT	SEGMENT
$T156096 = -20
$T156097 = -36
_pSkinPath$ = 8
_psTitle$ = 12
_psPrompt$ = 16
_boPopup$ = 20
_this$ = -40
_bCreated$ = -4
?Create@CNoButtonDlg@@QAEHPBDPAD1_N@Z PROC NEAR		; CNoButtonDlg::Create

; 184  : {

  006b2	55		 push	 ebp
  006b3	8b ec		 mov	 ebp, esp
  006b5	83 ec 28	 sub	 esp, 40			; 00000028H
  006b8	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 185  : 	BOOL bCreated;
; 186  : 
; 187  : 	if (boPopup)

  006bb	8b 45 14	 mov	 eax, DWORD PTR _boPopup$[ebp]
  006be	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  006c3	85 c0		 test	 eax, eax
  006c5	74 31		 je	 SHORT $L149051

; 189  : 		bCreated = CSkinWnd::CreatePopupChild( pSkinPath, psTitle, CRect( 0, 0, 0, 0 ), g_pMainWindow );

  006c7	6a 01		 push	 1
  006c9	6a 01		 push	 1
  006cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  006d1	51		 push	 ecx
  006d2	6a 00		 push	 0
  006d4	6a 00		 push	 0
  006d6	6a 00		 push	 0
  006d8	6a 00		 push	 0
  006da	8d 4d ec	 lea	 ecx, DWORD PTR $T156096[ebp]
  006dd	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  006e2	50		 push	 eax
  006e3	8b 55 0c	 mov	 edx, DWORD PTR _psTitle$[ebp]
  006e6	52		 push	 edx
  006e7	8b 45 08	 mov	 eax, DWORD PTR _pSkinPath$[ebp]
  006ea	50		 push	 eax
  006eb	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  006ee	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  006f3	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 191  : 	else

  006f6	eb 2d		 jmp	 SHORT $L149053
$L149051:

; 193  : 		bCreated = CSkinWnd::CreateChild( pSkinPath, psTitle, CRect( 0, 0, 0, 0 ), g_pMainWindow );

  006f8	6a 01		 push	 1
  006fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  00700	51		 push	 ecx
  00701	6a 00		 push	 0
  00703	6a 00		 push	 0
  00705	6a 00		 push	 0
  00707	6a 00		 push	 0
  00709	8d 4d dc	 lea	 ecx, DWORD PTR $T156097[ebp]
  0070c	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  00711	50		 push	 eax
  00712	8b 55 0c	 mov	 edx, DWORD PTR _psTitle$[ebp]
  00715	52		 push	 edx
  00716	8b 45 08	 mov	 eax, DWORD PTR _pSkinPath$[ebp]
  00719	50		 push	 eax
  0071a	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0071d	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  00722	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax
$L149053:

; 195  : 
; 196  : 	if ( bCreated ) {

  00725	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  00729	74 45		 je	 SHORT $L149058

; 197  : 		if ( psPrompt ) {

  0072b	83 7d 10 00	 cmp	 DWORD PTR _psPrompt$[ebp], 0
  0072f	74 3f		 je	 SHORT $L149058

; 198  : 			assert( NULL != m_pPrompt );
; 199  : 
; 200  : 			m_pPrompt->SetText( psPrompt );

  00731	8b 4d 10	 mov	 ecx, DWORD PTR _psPrompt$[ebp]
  00734	51		 push	 ecx
  00735	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  00738	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  0073e	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 201  : 
; 202  : 			if ( m_bResizing ) {

  00743	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  00746	83 b8 9c 00 00
	00 00		 cmp	 DWORD PTR [eax+156], 0
  0074d	74 21		 je	 SHORT $L149058

; 203  : 				m_pPrompt->SetEventMask( ENM_REQUESTRESIZE ); 

  0074f	68 00 00 04 00	 push	 262144			; 00040000H
  00754	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00757	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  0075d	e8 00 00 00 00	 call	 ?SetEventMask@CRichEditCtrl@@QAEKK@Z ; CRichEditCtrl::SetEventMask

; 204  : 				m_pPrompt->RequestResize();

  00762	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  00765	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  0076b	e8 00 00 00 00	 call	 ?RequestResize@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::RequestResize
$L149058:

; 208  : 
; 209  : 	// Restore the previous location.
; 210  : 	//RestoreLocation
; 211  : 	CenterInParent();

  00770	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00773	e8 00 00 00 00	 call	 ?CenterInParent@CSkinWnd@@QAEXXZ ; CSkinWnd::CenterInParent

; 212  : 	SetAllowMove( false );

  00778	6a 00		 push	 0
  0077a	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0077d	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove

; 213  : 	SetAllowResize( false );

  00782	6a 00		 push	 0
  00784	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00787	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 214  : 
; 215  : 	ShowWindow( SW_SHOW );

  0078c	6a 05		 push	 5
  0078e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00791	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 216  : 
; 217  : 	return bCreated;

  00796	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 218  : }

  00799	8b e5		 mov	 esp, ebp
  0079b	5d		 pop	 ebp
  0079c	c2 10 00	 ret	 16			; 00000010H
?Create@CNoButtonDlg@@QAEHPBDPAD1_N@Z ENDP		; CNoButtonDlg::Create
_TEXT	ENDS
PUBLIC	?Create@CNoButtonDlg@@QAEHPAD0_N@Z		; CNoButtonDlg::Create
EXTRN	?Cut@CSkinObj@@QAEHXZ:NEAR			; CSkinObj::Cut
_DATA	SEGMENT
$SG149068 DB	'Dlg_Message.skn', 00H
$SG149071 DB	'Dlg_Message.skn', 00H
_DATA	ENDS
_TEXT	SEGMENT
$T156099 = -20
$T156100 = -36
_psTitle$ = 8
_psPrompt$ = 12
_boPopup$ = 16
_this$ = -40
_bCreated$ = -4
?Create@CNoButtonDlg@@QAEHPAD0_N@Z PROC NEAR		; CNoButtonDlg::Create

; 222  : {

  0079f	55		 push	 ebp
  007a0	8b ec		 mov	 ebp, esp
  007a2	83 ec 28	 sub	 esp, 40			; 00000028H
  007a5	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 223  : 	BOOL bCreated;
; 224  : 
; 225  : 	if (boPopup)

  007a8	8b 45 10	 mov	 eax, DWORD PTR _boPopup$[ebp]
  007ab	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  007b0	85 c0		 test	 eax, eax
  007b2	74 32		 je	 SHORT $L149066

; 227  : 		bCreated = CSkinWnd::CreatePopupChild( "Dlg_Message.skn", psTitle, CRect( 0, 0, 0, 0 ), g_pMainWindow);

  007b4	6a 01		 push	 1
  007b6	6a 01		 push	 1
  007b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  007be	51		 push	 ecx
  007bf	6a 00		 push	 0
  007c1	6a 00		 push	 0
  007c3	6a 00		 push	 0
  007c5	6a 00		 push	 0
  007c7	8d 4d ec	 lea	 ecx, DWORD PTR $T156099[ebp]
  007ca	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  007cf	50		 push	 eax
  007d0	8b 55 08	 mov	 edx, DWORD PTR _psTitle$[ebp]
  007d3	52		 push	 edx
  007d4	68 00 00 00 00	 push	 OFFSET FLAT:$SG149068
  007d9	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  007dc	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  007e1	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 229  : 	else

  007e4	eb 2d		 jmp	 SHORT $L149069
$L149066:

; 231  : 		bCreated = CSkinWnd::CreateChild( "Dlg_Message.skn", psTitle, CRect( 0, 0, 0, 0 ), g_pMainWindow);

  007e6	6a 01		 push	 1
  007e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  007ed	50		 push	 eax
  007ee	6a 00		 push	 0
  007f0	6a 00		 push	 0
  007f2	6a 00		 push	 0
  007f4	6a 00		 push	 0
  007f6	8d 4d dc	 lea	 ecx, DWORD PTR $T156100[ebp]
  007f9	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  007fe	50		 push	 eax
  007ff	8b 4d 08	 mov	 ecx, DWORD PTR _psTitle$[ebp]
  00802	51		 push	 ecx
  00803	68 00 00 00 00	 push	 OFFSET FLAT:$SG149071
  00808	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  00810	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax
$L149069:

; 233  : 
; 234  : 	SetAllowMove( true );

  00813	6a 01		 push	 1
  00815	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00818	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove

; 235  : 	SetAllowResize( true );

  0081d	6a 01		 push	 1
  0081f	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00822	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 236  : 
; 237  : 	if ( bCreated ) {

  00827	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  0082b	74 56		 je	 SHORT $L149075

; 238  : 		if ( psPrompt ) {

  0082d	83 7d 0c 00	 cmp	 DWORD PTR _psPrompt$[ebp], 0
  00831	74 50		 je	 SHORT $L149075

; 239  : 			assert( NULL != m_pPrompt );
; 240  : 
; 241  : 			m_pPrompt->CSkinObj::Cut();

  00833	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  00836	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  0083c	83 c1 60	 add	 ecx, 96			; 00000060H
  0083f	e8 00 00 00 00	 call	 ?Cut@CSkinObj@@QAEHXZ	; CSkinObj::Cut

; 242  : 
; 243  : 			m_pPrompt->SetText( psPrompt );

  00844	8b 45 0c	 mov	 eax, DWORD PTR _psPrompt$[ebp]
  00847	50		 push	 eax
  00848	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0084b	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  00851	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 244  : 
; 245  : 			if ( m_bResizing ) {

  00856	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  00859	83 ba 9c 00 00
	00 00		 cmp	 DWORD PTR [edx+156], 0
  00860	74 21		 je	 SHORT $L149075

; 246  : 				m_pPrompt->SetEventMask( ENM_REQUESTRESIZE ); 

  00862	68 00 00 04 00	 push	 262144			; 00040000H
  00867	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  0086a	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  00870	e8 00 00 00 00	 call	 ?SetEventMask@CRichEditCtrl@@QAEKK@Z ; CRichEditCtrl::SetEventMask

; 247  : 				m_pPrompt->RequestResize();

  00875	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00878	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  0087e	e8 00 00 00 00	 call	 ?RequestResize@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::RequestResize
$L149075:

; 251  : 
; 252  : 	// Restore the previous location.
; 253  : 	//RestoreLocation
; 254  : 	CenterInParent();

  00883	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00886	e8 00 00 00 00	 call	 ?CenterInParent@CSkinWnd@@QAEXXZ ; CSkinWnd::CenterInParent

; 255  : 	SetAllowMove( false );

  0088b	6a 00		 push	 0
  0088d	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00890	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove

; 256  : 	SetAllowResize( false );

  00895	6a 00		 push	 0
  00897	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0089a	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 257  : 
; 258  : 	ShowWindow( SW_SHOW );

  0089f	6a 05		 push	 5
  008a1	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  008a4	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 259  : 
; 260  : 	return bCreated;

  008a9	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 261  : }

  008ac	8b e5		 mov	 esp, ebp
  008ae	5d		 pop	 ebp
  008af	c2 0c 00	 ret	 12			; 0000000cH
?Create@CNoButtonDlg@@QAEHPAD0_N@Z ENDP			; CNoButtonDlg::Create
_TEXT	ENDS
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	??8@YG_NABVCString@@PBD@Z			; operator==
PUBLIC	??8@YG_NPBDABVCString@@@Z			; operator==
EXTRN	??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z:NEAR ; CSkinEdit::CSkinEdit
EXTRN	?Left@CString@@QBE?AV1@H@Z:NEAR			; CString::Left
EXTRN	?Find@CString@@QBEHPBDH@Z:NEAR			; CString::Find
EXTRN	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::MakeSkinCtrl
_DATA	SEGMENT
$SG149084 DB	'_', 00H
	ORG $+2
$SG149086 DB	'prompt', 00H
	ORG $+1
$SG149094 DB	'bn', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T156127 DD	019930520H
	DD	05H
	DD	FLAT:$T156129
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156129 DD	0ffffffffH
	DD	FLAT:$L156118
	DD	00H
	DD	FLAT:$L156119
	DD	01H
	DD	FLAT:$L156120
	DD	02H
	DD	FLAT:$L156121
	DD	02H
	DD	FLAT:$L156123
xdata$x	ENDS
_TEXT	SEGMENT
$T156102 = -24
$T156103 = -28
$T156104 = -32
$T156107 = -36
$T156110 = -40
$T156111 = -44
$T156112 = -48
$T156113 = -52
$T156116 = -56
$T156117 = -60
__$EHRec$ = -12
_obj$ = 8
_this$ = -64
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CNoButtonDlg::MakeSkinCtrl

; 265  : {

  008b2	55		 push	 ebp
  008b3	8b ec		 mov	 ebp, esp
  008b5	6a ff		 push	 -1
  008b7	68 00 00 00 00	 push	 $L156128
  008bc	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  008c2	50		 push	 eax
  008c3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  008ca	83 ec 58	 sub	 esp, 88			; 00000058H
  008cd	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  008d0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 266  : 	// the type of the control is specified by the left characters of the name up to the _
; 267  : 	CString name = obj.GetName();

  008d7	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  008da	50		 push	 eax
  008db	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  008de	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  008e3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 268  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  008e7	6a 00		 push	 0
  008e9	68 00 00 00 00	 push	 OFFSET FLAT:$SG149084
  008ee	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  008f1	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  008f6	50		 push	 eax
  008f7	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  008fa	51		 push	 ecx
  008fb	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  008fe	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  00903	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 269  : 
; 270  : 	if ( name == "prompt" ) {

  00907	68 00 00 00 00	 push	 OFFSET FLAT:$SG149086
  0090c	8d 55 f0	 lea	 edx, DWORD PTR _name$[ebp]
  0090f	52		 push	 edx
  00910	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00915	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0091a	85 c0		 test	 eax, eax
  0091c	0f 84 c8 00 00
	00		 je	 $L149085

; 271  : 		m_pPrompt = new CSkinEdit ( obj, this, 700, CSkinEdit::CENTER | CSkinEdit::MULTILINE | CSkinEdit::READONLY, false, false );

  00922	68 d8 00 00 00	 push	 216			; 000000d8H
  00927	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0092c	89 45 e4	 mov	 DWORD PTR $T156103[ebp], eax
  0092f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00933	83 7d e4 00	 cmp	 DWORD PTR $T156103[ebp], 0
  00937	74 3b		 je	 SHORT $L156105
  00939	6a 00		 push	 0
  0093b	6a 00		 push	 0
  0093d	6a 00		 push	 0
  0093f	68 05 08 00 00	 push	 2053			; 00000805H
  00944	68 bc 02 00 00	 push	 700			; 000002bcH
  00949	8b 45 c0	 mov	 eax, DWORD PTR _this$[ebp]
  0094c	50		 push	 eax
  0094d	83 ec 08	 sub	 esp, 8
  00950	8b cc		 mov	 ecx, esp
  00952	89 65 e0	 mov	 DWORD PTR $T156104[ebp], esp
  00955	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00958	52		 push	 edx
  00959	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0095e	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  00961	8b 4d e4	 mov	 ecx, DWORD PTR $T156103[ebp]
  00964	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  00969	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  0096c	8b 45 b8	 mov	 eax, DWORD PTR -72+[ebp]
  0096f	89 45 b4	 mov	 DWORD PTR -76+[ebp], eax
  00972	eb 07		 jmp	 SHORT $L156106
$L156105:
  00974	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR -76+[ebp], 0
$L156106:
  0097b	8b 4d b4	 mov	 ecx, DWORD PTR -76+[ebp]
  0097e	89 4d e8	 mov	 DWORD PTR $T156102[ebp], ecx
  00981	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00985	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00988	8b 45 e8	 mov	 eax, DWORD PTR $T156102[ebp]
  0098b	89 82 94 00 00
	00		 mov	 DWORD PTR [edx+148], eax

; 272  : 		return m_pPrompt;

  00991	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00994	83 b9 94 00 00
	00 00		 cmp	 DWORD PTR [ecx+148], 0
  0099b	74 11		 je	 SHORT $L156108
  0099d	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  009a0	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  009a6	83 c0 60	 add	 eax, 96			; 00000060H
  009a9	89 45 b0	 mov	 DWORD PTR -80+[ebp], eax
  009ac	eb 07		 jmp	 SHORT $L156109
$L156108:
  009ae	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR -80+[ebp], 0
$L156109:
  009b5	8b 4d b0	 mov	 ecx, DWORD PTR -80+[ebp]
  009b8	89 4d dc	 mov	 DWORD PTR $T156107[ebp], ecx
  009bb	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  009bf	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  009c2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  009c7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  009cb	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  009ce	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  009d3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  009da	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  009dd	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  009e2	8b 45 dc	 mov	 eax, DWORD PTR $T156107[ebp]
  009e5	e9 ef 00 00 00	 jmp	 $L149079
$L149085:

; 274  : 
; 275  : 	// Make a SCI button
; 276  : 	if ( "bn" == id ) {

  009ea	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  009ed	52		 push	 edx
  009ee	68 00 00 00 00	 push	 OFFSET FLAT:$SG149094
  009f3	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  009f8	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  009fd	85 c0		 test	 eax, eax
  009ff	0f 84 85 00 00
	00		 je	 $L149093

; 277  : 		return new CSCIButtonBtn( obj, this );

  00a05	6a 18		 push	 24			; 00000018H
  00a07	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00a0c	83 c4 04	 add	 esp, 4
  00a0f	89 45 d0	 mov	 DWORD PTR $T156112[ebp], eax
  00a12	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00a16	83 7d d0 00	 cmp	 DWORD PTR $T156112[ebp], 0
  00a1a	74 2b		 je	 SHORT $L156114
  00a1c	8b 45 c0	 mov	 eax, DWORD PTR _this$[ebp]
  00a1f	50		 push	 eax
  00a20	83 ec 08	 sub	 esp, 8
  00a23	8b cc		 mov	 ecx, esp
  00a25	89 65 cc	 mov	 DWORD PTR $T156113[ebp], esp
  00a28	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00a2b	52		 push	 edx
  00a2c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00a31	89 45 ac	 mov	 DWORD PTR -84+[ebp], eax
  00a34	8b 4d d0	 mov	 ecx, DWORD PTR $T156112[ebp]
  00a37	e8 00 00 00 00	 call	 ??0CSCIButtonBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSCIButtonBtn::CSCIButtonBtn
  00a3c	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  00a3f	8b 45 a8	 mov	 eax, DWORD PTR -88+[ebp]
  00a42	89 45 a4	 mov	 DWORD PTR -92+[ebp], eax
  00a45	eb 07		 jmp	 SHORT $L156115
$L156114:
  00a47	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR -92+[ebp], 0
$L156115:
  00a4e	8b 4d a4	 mov	 ecx, DWORD PTR -92+[ebp]
  00a51	89 4d d4	 mov	 DWORD PTR $T156111[ebp], ecx
  00a54	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00a58	8b 55 d4	 mov	 edx, DWORD PTR $T156111[ebp]
  00a5b	89 55 d8	 mov	 DWORD PTR $T156110[ebp], edx
  00a5e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00a62	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00a65	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00a6a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00a6e	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00a71	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00a76	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a7d	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00a80	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00a85	8b 45 d8	 mov	 eax, DWORD PTR $T156110[ebp]
  00a88	eb 4f		 jmp	 SHORT $L149079
$L149093:

; 279  : 
; 280  : 	// Let the parent make the field
; 281  : 	return CSkinWnd::MakeSkinCtrl( obj );

  00a8a	83 ec 08	 sub	 esp, 8
  00a8d	8b cc		 mov	 ecx, esp
  00a8f	89 65 c4	 mov	 DWORD PTR $T156117[ebp], esp
  00a92	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  00a95	50		 push	 eax
  00a96	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00a9b	89 45 a0	 mov	 DWORD PTR -96+[ebp], eax
  00a9e	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00aa1	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  00aa6	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  00aa9	8b 4d 9c	 mov	 ecx, DWORD PTR -100+[ebp]
  00aac	89 4d c8	 mov	 DWORD PTR $T156116[ebp], ecx
  00aaf	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ab3	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00ab6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00abb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00abf	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00ac2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00ac7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ace	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00ad1	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00ad6	8b 45 c8	 mov	 eax, DWORD PTR $T156116[ebp]
$L149079:

; 282  : }

  00ad9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00adc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00ae3	8b e5		 mov	 esp, ebp
  00ae5	5d		 pop	 ebp
  00ae6	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L156118:
  00078	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0007b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00080	c3		 ret	 0
$L156119:
  00081	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00084	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00089	c3		 ret	 0
$L156120:
  0008a	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0008d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00092	c3		 ret	 0
$L156121:
  00093	8b 45 e4	 mov	 eax, DWORD PTR $T156103[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009c	c3		 ret	 0
$L156123:
  0009d	8b 45 d0	 mov	 eax, DWORD PTR $T156112[ebp]
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a6	59		 pop	 ecx
  000a7	c3		 ret	 0
$L156128:
  000a8	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156127
  000ad	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CNoButtonDlg::MakeSkinCtrl
_TEXT	SEGMENT
_nID$ = 8
_this$ = -4
?ExecuteButton@CNoButtonDlg@@UAEXH@Z PROC NEAR		; CNoButtonDlg::ExecuteButton

; 286  : {

  00ae9	55		 push	 ebp
  00aea	8b ec		 mov	 ebp, esp
  00aec	51		 push	 ecx
  00aed	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 287  : 	// Only process button presses (let a press of button 0 fall through to the deconstructor)
; 288  : 	if ( nID ) {

  00af0	83 7d 08 00	 cmp	 DWORD PTR _nID$[ebp], 0
  00af4	74 26		 je	 SHORT $L149107

; 289  : 		m_bExecuted = true;

  00af6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00af9	c7 80 b0 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+176], 1

; 290  : 
; 291  : 		m_ButtonVector [ nID ] -> Execute();

  00b03	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  00b06	51		 push	 ecx
  00b07	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b0a	81 c1 a0 00 00
	00		 add	 ecx, 160		; 000000a0H
  00b10	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEAAPAVCSCIObjectMethodPair@@I@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::operator[]
  00b15	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b17	e8 00 00 00 00	 call	 ?Execute@CSCIObjectMethodPair@@QAEXXZ ; CSCIObjectMethodPair::Execute
$L149107:

; 293  : 
; 294  : 	// Close the dialog
; 295  : 	CloseSelf();

  00b1c	6a 00		 push	 0
  00b1e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00b21	8b 02		 mov	 eax, DWORD PTR [edx]
  00b23	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b26	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]

; 296  : }

  00b2c	8b e5		 mov	 esp, ebp
  00b2e	5d		 pop	 ebp
  00b2f	c2 04 00	 ret	 4
?ExecuteButton@CNoButtonDlg@@UAEXH@Z ENDP		; CNoButtonDlg::ExecuteButton
_TEXT	ENDS
PUBLIC	??0CSingleButtonDlg@@QAE@VCSCI_Object@@F@Z	; CSingleButtonDlg::CSingleButtonDlg
PUBLIC	??_7CSingleButtonDlg@@6B@			; CSingleButtonDlg::`vftable'
PUBLIC	??_GCSingleButtonDlg@@UAEPAXI@Z			; CSingleButtonDlg::`scalar deleting destructor'
PUBLIC	??_ECSingleButtonDlg@@UAEPAXI@Z			; CSingleButtonDlg::`vector deleting destructor'
;	COMDAT ??_7CSingleButtonDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CSingleButtonDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CSingleButtonDlg::`vftable'
	DD	FLAT:??_ECSingleButtonDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CNoButtonDlg@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T156135 DD	019930520H
	DD	01H
	DD	FLAT:$T156137
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156137 DD	0ffffffffH
	DD	FLAT:$L156133
xdata$x	ENDS
_TEXT	SEGMENT
$T156132 = -16
__$EHRec$ = -12
_Object$ = 8
_nMethod$ = 12
_this$ = -20
??0CSingleButtonDlg@@QAE@VCSCI_Object@@F@Z PROC NEAR	; CSingleButtonDlg::CSingleButtonDlg

; 300  : {

  00b32	55		 push	 ebp
  00b33	8b ec		 mov	 ebp, esp
  00b35	6a ff		 push	 -1
  00b37	68 00 00 00 00	 push	 $L156136
  00b3c	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00b42	50		 push	 eax
  00b43	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00b4a	83 ec 08	 sub	 esp, 8
  00b4d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00b50	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00b53	e8 00 00 00 00	 call	 ??0CNoButtonDlg@@QAE@XZ	; CNoButtonDlg::CNoButtonDlg
  00b58	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00b5f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00b62	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSingleButtonDlg@@6B@ ; CSingleButtonDlg::`vftable'

; 301  : 	AddButton( Object, nMethod );

  00b68	66 8b 4d 0c	 mov	 cx, WORD PTR _nMethod$[ebp]
  00b6c	51		 push	 ecx
  00b6d	51		 push	 ecx
  00b6e	8b cc		 mov	 ecx, esp
  00b70	89 65 f0	 mov	 DWORD PTR $T156132[ebp], esp
  00b73	8d 55 08	 lea	 edx, DWORD PTR _Object$[ebp]
  00b76	52		 push	 edx
  00b77	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00b7c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00b7f	e8 00 00 00 00	 call	 ?AddButton@CNoButtonDlg@@IAEXVCSCI_Object@@F@Z ; CNoButtonDlg::AddButton

; 302  : 	m_bResizing = true;

  00b84	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00b87	c7 80 9c 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+156], 1

; 303  : }

  00b91	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b98	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00b9b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00b9e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00ba5	8b e5		 mov	 esp, ebp
  00ba7	5d		 pop	 ebp
  00ba8	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L156133:
  000b2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	e8 00 00 00 00	 call	 ??1CNoButtonDlg@@UAE@XZ	; CNoButtonDlg::~CNoButtonDlg
  000ba	c3		 ret	 0
$L156136:
  000bb	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156135
  000c0	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSingleButtonDlg@@QAE@VCSCI_Object@@F@Z ENDP		; CSingleButtonDlg::CSingleButtonDlg
PUBLIC	??1CSingleButtonDlg@@UAE@XZ			; CSingleButtonDlg::~CSingleButtonDlg
;	COMDAT ??_GCSingleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSingleButtonDlg@@UAEPAXI@Z PROC NEAR		; CSingleButtonDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSingleButtonDlg@@UAE@XZ ; CSingleButtonDlg::~CSingleButtonDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L149117
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L149117:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCSingleButtonDlg@@UAEPAXI@Z ENDP			; CSingleButtonDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSingleButtonDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSingleButtonDlg@@UAE@XZ PROC NEAR			; CSingleButtonDlg::~CSingleButtonDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CNoButtonDlg@@UAE@XZ	; CNoButtonDlg::~CNoButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSingleButtonDlg@@UAE@XZ ENDP			; CSingleButtonDlg::~CSingleButtonDlg
_TEXT	ENDS
PUBLIC	?Create@CSingleButtonDlg@@QAEHPAD00_N@Z		; CSingleButtonDlg::Create
PUBLIC	?SetTransient@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetTransient
EXTRN	?SetText@CSkinObj@@QAAHPADZZ:NEAR		; CSkinObj::SetText
EXTRN	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z:NEAR ; CSkinWnd::FindControl
EXTRN	?SetPriority@CSkinWnd@@QAEXH@Z:NEAR		; CSkinWnd::SetPriority
_DATA	SEGMENT
	ORG $+1
$SG149128 DB	'Dlg_err.skn', 00H
$SG149132 DB	'bn_Button00', 00H
_DATA	ENDS
_TEXT	SEGMENT
_psTitle$ = 8
_psPrompt$ = 12
_psObject1Name$ = 16
_boPopup$ = 20
_this$ = -12
_bCreated$ = -4
_pCtrl$149131 = -8
?Create@CSingleButtonDlg@@QAEHPAD00_N@Z PROC NEAR	; CSingleButtonDlg::Create

; 307  : {

  00bab	55		 push	 ebp
  00bac	8b ec		 mov	 ebp, esp
  00bae	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00bb1	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 308  : 	SetTransient( true );

  00bb4	6a 01		 push	 1
  00bb6	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00bb9	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 309  : 	SetPriority( swPriGameModal );

  00bbe	6a 07		 push	 7
  00bc0	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00bc3	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 310  : 
; 311  : 	BOOL bCreated = CNoButtonDlg::Create( "Dlg_err.skn", psTitle, psPrompt, boPopup);

  00bc8	8a 45 14	 mov	 al, BYTE PTR _boPopup$[ebp]
  00bcb	50		 push	 eax
  00bcc	8b 4d 0c	 mov	 ecx, DWORD PTR _psPrompt$[ebp]
  00bcf	51		 push	 ecx
  00bd0	8b 55 08	 mov	 edx, DWORD PTR _psTitle$[ebp]
  00bd3	52		 push	 edx
  00bd4	68 00 00 00 00	 push	 OFFSET FLAT:$SG149128
  00bd9	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00bdc	e8 00 00 00 00	 call	 ?Create@CNoButtonDlg@@QAEHPBDPAD1_N@Z ; CNoButtonDlg::Create
  00be1	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 312  : 
; 313  : 	if ( bCreated ) {

  00be4	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  00be8	74 30		 je	 SHORT $L149129

; 314  : 		if ( psObject1Name ) {

  00bea	83 7d 10 00	 cmp	 DWORD PTR _psObject1Name$[ebp], 0
  00bee	74 20		 je	 SHORT $L149130

; 315  : 			CSkinCtrl* pCtrl = FindControl( "bn_Button00" );

  00bf0	68 00 00 00 00	 push	 OFFSET FLAT:$SG149132
  00bf5	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00bf8	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  00bfd	89 45 f8	 mov	 DWORD PTR _pCtrl$149131[ebp], eax

; 316  : 			assert( NULL != pCtrl );
; 317  : 
; 318  : 			pCtrl->SetText( psObject1Name );

  00c00	8b 45 10	 mov	 eax, DWORD PTR _psObject1Name$[ebp]
  00c03	50		 push	 eax
  00c04	8b 4d f8	 mov	 ecx, DWORD PTR _pCtrl$149131[ebp]
  00c07	51		 push	 ecx
  00c08	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  00c0d	83 c4 08	 add	 esp, 8
$L149130:

; 320  : 
; 321  : 		ShowWindow( SW_SHOW );

  00c10	6a 05		 push	 5
  00c12	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00c15	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L149129:

; 323  : 
; 324  : 	return bCreated;

  00c1a	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 325  : }

  00c1d	8b e5		 mov	 esp, ebp
  00c1f	5d		 pop	 ebp
  00c20	c2 10 00	 ret	 16			; 00000010H
?Create@CSingleButtonDlg@@QAEHPAD00_N@Z ENDP		; CSingleButtonDlg::Create
_TEXT	ENDS
PUBLIC	??0CDoubleButtonDlg@@QAE@VCSCI_Object@@F0F@Z	; CDoubleButtonDlg::CDoubleButtonDlg
PUBLIC	??_7CDoubleButtonDlg@@6B@			; CDoubleButtonDlg::`vftable'
PUBLIC	??_GCDoubleButtonDlg@@UAEPAXI@Z			; CDoubleButtonDlg::`scalar deleting destructor'
PUBLIC	??_ECDoubleButtonDlg@@UAEPAXI@Z			; CDoubleButtonDlg::`vector deleting destructor'
;	COMDAT ??_7CDoubleButtonDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CDoubleButtonDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CDoubleButtonDlg::`vftable'
	DD	FLAT:??_ECDoubleButtonDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CNoButtonDlg@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T156147 DD	019930520H
	DD	01H
	DD	FLAT:$T156149
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156149 DD	0ffffffffH
	DD	FLAT:$L156145
xdata$x	ENDS
_TEXT	SEGMENT
$T156143 = -16
$T156144 = -20
__$EHRec$ = -12
_Object1$ = 8
_nMethod1$ = 12
_Object2$ = 16
_nMethod2$ = 20
_this$ = -24
??0CDoubleButtonDlg@@QAE@VCSCI_Object@@F0F@Z PROC NEAR	; CDoubleButtonDlg::CDoubleButtonDlg

; 329  : {

  00c23	55		 push	 ebp
  00c24	8b ec		 mov	 ebp, esp
  00c26	6a ff		 push	 -1
  00c28	68 00 00 00 00	 push	 $L156148
  00c2d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00c33	50		 push	 eax
  00c34	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00c3b	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00c3e	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00c41	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c44	e8 00 00 00 00	 call	 ??0CNoButtonDlg@@QAE@XZ	; CNoButtonDlg::CNoButtonDlg
  00c49	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00c50	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00c53	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDoubleButtonDlg@@6B@ ; CDoubleButtonDlg::`vftable'

; 330  : 	AddButton( Object1, nMethod1 );

  00c59	66 8b 4d 0c	 mov	 cx, WORD PTR _nMethod1$[ebp]
  00c5d	51		 push	 ecx
  00c5e	51		 push	 ecx
  00c5f	8b cc		 mov	 ecx, esp
  00c61	89 65 f0	 mov	 DWORD PTR $T156143[ebp], esp
  00c64	8d 55 08	 lea	 edx, DWORD PTR _Object1$[ebp]
  00c67	52		 push	 edx
  00c68	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00c6d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c70	e8 00 00 00 00	 call	 ?AddButton@CNoButtonDlg@@IAEXVCSCI_Object@@F@Z ; CNoButtonDlg::AddButton

; 331  : 	AddButton( Object2, nMethod2 );

  00c75	66 8b 45 14	 mov	 ax, WORD PTR _nMethod2$[ebp]
  00c79	50		 push	 eax
  00c7a	51		 push	 ecx
  00c7b	8b cc		 mov	 ecx, esp
  00c7d	89 65 ec	 mov	 DWORD PTR $T156144[ebp], esp
  00c80	8d 55 10	 lea	 edx, DWORD PTR _Object2$[ebp]
  00c83	52		 push	 edx
  00c84	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00c89	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c8c	e8 00 00 00 00	 call	 ?AddButton@CNoButtonDlg@@IAEXVCSCI_Object@@F@Z ; CNoButtonDlg::AddButton

; 332  : 	m_bResizing = true;

  00c91	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00c94	c7 80 9c 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+156], 1

; 333  : }

  00c9e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ca5	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00ca8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00cab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00cb2	8b e5		 mov	 esp, ebp
  00cb4	5d		 pop	 ebp
  00cb5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L156145:
  000c5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ??1CNoButtonDlg@@UAE@XZ	; CNoButtonDlg::~CNoButtonDlg
  000cd	c3		 ret	 0
$L156148:
  000ce	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156147
  000d3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CDoubleButtonDlg@@QAE@VCSCI_Object@@F0F@Z ENDP	; CDoubleButtonDlg::CDoubleButtonDlg
PUBLIC	?Create@CDoubleButtonDlg@@QAEHPAD000_N1@Z	; CDoubleButtonDlg::Create
_DATA	SEGMENT
$SG149154 DB	'Dlg_choice.skn', 00H
	ORG $+1
$SG149156 DB	'Dlg_choice.skn', 00H
	ORG $+1
$SG149160 DB	'bn_Button00', 00H
$SG149164 DB	'bn_Button01', 00H
_DATA	ENDS
_TEXT	SEGMENT
_psTitle$ = 8
_psPrompt$ = 12
_psObject1Name$ = 16
_psObject2Name$ = 20
_boPopup$ = 24
_bAlert$ = 28
_this$ = -16
_bCreated$ = -4
_pCtrl$149159 = -8
_pCtrl$149163 = -12
?Create@CDoubleButtonDlg@@QAEHPAD000_N1@Z PROC NEAR	; CDoubleButtonDlg::Create

; 337  : {

  00cb8	55		 push	 ebp
  00cb9	8b ec		 mov	 ebp, esp
  00cbb	83 ec 10	 sub	 esp, 16			; 00000010H
  00cbe	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 338  : 	SetTransient( false );

  00cc1	6a 00		 push	 0
  00cc3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00cc6	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 339  : 
; 340  : 	BOOL bCreated;
; 341  : 
; 342  : 	if ( bAlert ) {

  00ccb	8b 45 1c	 mov	 eax, DWORD PTR _bAlert$[ebp]
  00cce	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00cd3	85 c0		 test	 eax, eax
  00cd5	74 24		 je	 SHORT $L149153

; 343  : 		SetPriority( swPriModal );

  00cd7	6a 06		 push	 6
  00cd9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00cdc	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 344  : 		bCreated = CNoButtonDlg::CreatePopup ( "Dlg_choice.skn", psTitle, psPrompt);

  00ce1	8b 4d 0c	 mov	 ecx, DWORD PTR _psPrompt$[ebp]
  00ce4	51		 push	 ecx
  00ce5	8b 55 08	 mov	 edx, DWORD PTR _psTitle$[ebp]
  00ce8	52		 push	 edx
  00ce9	68 00 00 00 00	 push	 OFFSET FLAT:$SG149154
  00cee	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00cf1	e8 00 00 00 00	 call	 ?CreatePopup@CNoButtonDlg@@QAEHPBDPAD1@Z ; CNoButtonDlg::CreatePopup
  00cf6	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 345  : 	} else {

  00cf9	eb 26		 jmp	 SHORT $L149155
$L149153:

; 346  : 		SetPriority( swPriDefault );

  00cfb	6a 01		 push	 1
  00cfd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00d00	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 347  : 		bCreated = CNoButtonDlg::Create( "Dlg_choice.skn", psTitle, psPrompt, boPopup);

  00d05	8a 45 18	 mov	 al, BYTE PTR _boPopup$[ebp]
  00d08	50		 push	 eax
  00d09	8b 4d 0c	 mov	 ecx, DWORD PTR _psPrompt$[ebp]
  00d0c	51		 push	 ecx
  00d0d	8b 55 08	 mov	 edx, DWORD PTR _psTitle$[ebp]
  00d10	52		 push	 edx
  00d11	68 00 00 00 00	 push	 OFFSET FLAT:$SG149156
  00d16	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00d19	e8 00 00 00 00	 call	 ?Create@CNoButtonDlg@@QAEHPBDPAD1_N@Z ; CNoButtonDlg::Create
  00d1e	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax
$L149155:

; 349  : 
; 350  : 	if ( bCreated ) {

  00d21	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  00d25	74 56		 je	 SHORT $L149157

; 351  : 		if ( psObject1Name ) {

  00d27	83 7d 10 00	 cmp	 DWORD PTR _psObject1Name$[ebp], 0
  00d2b	74 20		 je	 SHORT $L149158

; 352  : 			CSkinCtrl* pCtrl = FindControl( "bn_Button00" );

  00d2d	68 00 00 00 00	 push	 OFFSET FLAT:$SG149160
  00d32	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00d35	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  00d3a	89 45 f8	 mov	 DWORD PTR _pCtrl$149159[ebp], eax

; 353  : 			assert( NULL != pCtrl );
; 354  : 
; 355  : 			pCtrl->SetText( psObject1Name );

  00d3d	8b 45 10	 mov	 eax, DWORD PTR _psObject1Name$[ebp]
  00d40	50		 push	 eax
  00d41	8b 4d f8	 mov	 ecx, DWORD PTR _pCtrl$149159[ebp]
  00d44	51		 push	 ecx
  00d45	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  00d4a	83 c4 08	 add	 esp, 8
$L149158:

; 357  : 
; 358  : 		if ( psObject2Name ) {

  00d4d	83 7d 14 00	 cmp	 DWORD PTR _psObject2Name$[ebp], 0
  00d51	74 20		 je	 SHORT $L149162

; 359  : 			CSkinCtrl* pCtrl = FindControl( "bn_Button01" );

  00d53	68 00 00 00 00	 push	 OFFSET FLAT:$SG149164
  00d58	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00d5b	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  00d60	89 45 f4	 mov	 DWORD PTR _pCtrl$149163[ebp], eax

; 360  : 			assert( NULL != pCtrl );
; 361  : 
; 362  : 			pCtrl->SetText( psObject2Name );

  00d63	8b 55 14	 mov	 edx, DWORD PTR _psObject2Name$[ebp]
  00d66	52		 push	 edx
  00d67	8b 45 f4	 mov	 eax, DWORD PTR _pCtrl$149163[ebp]
  00d6a	50		 push	 eax
  00d6b	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  00d70	83 c4 08	 add	 esp, 8
$L149162:

; 364  : 
; 365  : 		ShowWindow( SW_SHOW );

  00d73	6a 05		 push	 5
  00d75	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00d78	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L149157:

; 367  : 
; 368  : 	return bCreated;

  00d7d	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 369  : }

  00d80	8b e5		 mov	 esp, ebp
  00d82	5d		 pop	 ebp
  00d83	c2 18 00	 ret	 24			; 00000018H
?Create@CDoubleButtonDlg@@QAEHPAD000_N1@Z ENDP		; CDoubleButtonDlg::Create
_TEXT	ENDS
PUBLIC	?CreateSkin@CDoubleButtonDlg@@QAEHPBDPAD111_N@Z	; CDoubleButtonDlg::CreateSkin
_DATA	SEGMENT
$SG149179 DB	'bn_Button00', 00H
$SG149183 DB	'bn_Button01', 00H
_DATA	ENDS
_TEXT	SEGMENT
_pSkinPath$ = 8
_psTitle$ = 12
_psPrompt$ = 16
_psObject1Name$ = 20
_psObject2Name$ = 24
_boPopup$ = 28
_this$ = -16
_bCreated$ = -4
_pCtrl$149178 = -8
_pCtrl$149182 = -12
?CreateSkin@CDoubleButtonDlg@@QAEHPBDPAD111_N@Z PROC NEAR ; CDoubleButtonDlg::CreateSkin

; 373  : {

  00d86	55		 push	 ebp
  00d87	8b ec		 mov	 ebp, esp
  00d89	83 ec 10	 sub	 esp, 16			; 00000010H
  00d8c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 374  : 	BOOL bCreated = CNoButtonDlg::Create( pSkinPath, psTitle, psPrompt, boPopup);

  00d8f	8a 45 1c	 mov	 al, BYTE PTR _boPopup$[ebp]
  00d92	50		 push	 eax
  00d93	8b 4d 10	 mov	 ecx, DWORD PTR _psPrompt$[ebp]
  00d96	51		 push	 ecx
  00d97	8b 55 0c	 mov	 edx, DWORD PTR _psTitle$[ebp]
  00d9a	52		 push	 edx
  00d9b	8b 45 08	 mov	 eax, DWORD PTR _pSkinPath$[ebp]
  00d9e	50		 push	 eax
  00d9f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00da2	e8 00 00 00 00	 call	 ?Create@CNoButtonDlg@@QAEHPBDPAD1_N@Z ; CNoButtonDlg::Create
  00da7	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 375  : 
; 376  : 	if ( bCreated ) {

  00daa	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  00dae	74 56		 je	 SHORT $L149176

; 377  : 		if ( psObject1Name ) {

  00db0	83 7d 14 00	 cmp	 DWORD PTR _psObject1Name$[ebp], 0
  00db4	74 20		 je	 SHORT $L149177

; 378  : 			CSkinCtrl* pCtrl = FindControl( "bn_Button00" );

  00db6	68 00 00 00 00	 push	 OFFSET FLAT:$SG149179
  00dbb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00dbe	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  00dc3	89 45 f8	 mov	 DWORD PTR _pCtrl$149178[ebp], eax

; 379  : 			assert( NULL != pCtrl );
; 380  : 
; 381  : 			pCtrl->SetText( psObject1Name );

  00dc6	8b 4d 14	 mov	 ecx, DWORD PTR _psObject1Name$[ebp]
  00dc9	51		 push	 ecx
  00dca	8b 55 f8	 mov	 edx, DWORD PTR _pCtrl$149178[ebp]
  00dcd	52		 push	 edx
  00dce	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  00dd3	83 c4 08	 add	 esp, 8
$L149177:

; 383  : 
; 384  : 		if ( psObject2Name ) {

  00dd6	83 7d 18 00	 cmp	 DWORD PTR _psObject2Name$[ebp], 0
  00dda	74 20		 je	 SHORT $L149181

; 385  : 			CSkinCtrl* pCtrl = FindControl( "bn_Button01" );

  00ddc	68 00 00 00 00	 push	 OFFSET FLAT:$SG149183
  00de1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00de4	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  00de9	89 45 f4	 mov	 DWORD PTR _pCtrl$149182[ebp], eax

; 386  : 			assert( NULL != pCtrl );
; 387  : 
; 388  : 			pCtrl->SetText( psObject2Name );

  00dec	8b 45 18	 mov	 eax, DWORD PTR _psObject2Name$[ebp]
  00def	50		 push	 eax
  00df0	8b 4d f4	 mov	 ecx, DWORD PTR _pCtrl$149182[ebp]
  00df3	51		 push	 ecx
  00df4	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  00df9	83 c4 08	 add	 esp, 8
$L149181:

; 390  : 
; 391  : 		ShowWindow( SW_SHOW );

  00dfc	6a 05		 push	 5
  00dfe	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00e01	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L149176:

; 393  : 
; 394  : 	return bCreated;

  00e06	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 395  : }

  00e09	8b e5		 mov	 esp, ebp
  00e0b	5d		 pop	 ebp
  00e0c	c2 18 00	 ret	 24			; 00000018H
?CreateSkin@CDoubleButtonDlg@@QAEHPBDPAD111_N@Z ENDP	; CDoubleButtonDlg::CreateSkin
?_GetBaseMessageMap@CTextDoubleButtonDlg@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CTextDoubleButtonDlg::_GetBaseMessageMap

; 399  : BEGIN_MESSAGE_MAP ( CTextDoubleButtonDlg, CSkinWnd )

  00e0f	55		 push	 ebp
  00e10	8b ec		 mov	 ebp, esp
  00e12	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B ; CSkinWnd::messageMap
  00e17	5d		 pop	 ebp
  00e18	c3		 ret	 0
?_GetBaseMessageMap@CTextDoubleButtonDlg@@KGPBUAFX_MSGMAP@@XZ ENDP ; CTextDoubleButtonDlg::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CTextDoubleButtonDlg@@MBEPBUAFX_MSGMAP@@XZ ; CTextDoubleButtonDlg::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CTextDoubleButtonDlg@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CTextDoubleButtonDlg::GetMessageMap

; 399  : BEGIN_MESSAGE_MAP ( CTextDoubleButtonDlg, CSkinWnd )

  00e19	55		 push	 ebp
  00e1a	8b ec		 mov	 ebp, esp
  00e1c	51		 push	 ecx
  00e1d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00e20	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CTextDoubleButtonDlg@@1UAFX_MSGMAP@@B ; CTextDoubleButtonDlg::messageMap
  00e25	8b e5		 mov	 esp, ebp
  00e27	5d		 pop	 ebp
  00e28	c3		 ret	 0
?GetMessageMap@CTextDoubleButtonDlg@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CTextDoubleButtonDlg::GetMessageMap
_TEXT	ENDS
PUBLIC	??1CDoubleButtonDlg@@UAE@XZ			; CDoubleButtonDlg::~CDoubleButtonDlg
PUBLIC	??0CTextDoubleButtonDlg@@QAE@VStringID@@VCSCI_Object@@F1F@Z ; CTextDoubleButtonDlg::CTextDoubleButtonDlg
PUBLIC	?MakeSkinCtrl@CTextDoubleButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CTextDoubleButtonDlg::MakeSkinCtrl
PUBLIC	?ExecuteButton@CTextDoubleButtonDlg@@UAEXH@Z	; CTextDoubleButtonDlg::ExecuteButton
PUBLIC	?Next@CTextDoubleButtonDlg@@UAEXXZ		; CTextDoubleButtonDlg::Next
PUBLIC	??_7CTextDoubleButtonDlg@@6B@			; CTextDoubleButtonDlg::`vftable'
PUBLIC	??_GCTextDoubleButtonDlg@@UAEPAXI@Z		; CTextDoubleButtonDlg::`scalar deleting destructor'
PUBLIC	??_ECTextDoubleButtonDlg@@UAEPAXI@Z		; CTextDoubleButtonDlg::`vector deleting destructor'
PUBLIC	??0StringID@@QAE@ABV0@@Z			; StringID::StringID
;	COMDAT ??_7CTextDoubleButtonDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CTextDoubleButtonDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CTextDoubleButtonDlg::`vftable'
	DD	FLAT:??_ECTextDoubleButtonDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CTextDoubleButtonDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CTextDoubleButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CTextDoubleButtonDlg@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CTextDoubleButtonDlg@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T156159 DD	019930520H
	DD	01H
	DD	FLAT:$T156161
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156161 DD	0ffffffffH
	DD	FLAT:$L156157
xdata$x	ENDS
_TEXT	SEGMENT
$T156155 = -16
$T156156 = -20
__$EHRec$ = -12
_sValue$ = 8
_Object1$ = 12
_nMethod1$ = 16
_Object2$ = 20
_nMethod2$ = 24
_this$ = -24
??0CTextDoubleButtonDlg@@QAE@VStringID@@VCSCI_Object@@F1F@Z PROC NEAR ; CTextDoubleButtonDlg::CTextDoubleButtonDlg

; 404  : : CDoubleButtonDlg( Object1, nMethod1, Object2, nMethod2), m_sValue(sValue)	{

  00e29	55		 push	 ebp
  00e2a	8b ec		 mov	 ebp, esp
  00e2c	6a ff		 push	 -1
  00e2e	68 00 00 00 00	 push	 $L156160
  00e33	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00e39	50		 push	 eax
  00e3a	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00e41	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00e44	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00e47	66 8b 45 18	 mov	 ax, WORD PTR _nMethod2$[ebp]
  00e4b	50		 push	 eax
  00e4c	51		 push	 ecx
  00e4d	8b cc		 mov	 ecx, esp
  00e4f	89 65 f0	 mov	 DWORD PTR $T156155[ebp], esp
  00e52	8d 55 14	 lea	 edx, DWORD PTR _Object2$[ebp]
  00e55	52		 push	 edx
  00e56	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00e5b	66 8b 45 10	 mov	 ax, WORD PTR _nMethod1$[ebp]
  00e5f	50		 push	 eax
  00e60	51		 push	 ecx
  00e61	8b cc		 mov	 ecx, esp
  00e63	89 65 ec	 mov	 DWORD PTR $T156156[ebp], esp
  00e66	8d 55 0c	 lea	 edx, DWORD PTR _Object1$[ebp]
  00e69	52		 push	 edx
  00e6a	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00e6f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00e72	e8 00 00 00 00	 call	 ??0CDoubleButtonDlg@@QAE@VCSCI_Object@@F0F@Z ; CDoubleButtonDlg::CDoubleButtonDlg
  00e77	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00e7e	8d 45 08	 lea	 eax, DWORD PTR _sValue$[ebp]
  00e81	50		 push	 eax
  00e82	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00e85	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00e8b	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABV0@@Z ; StringID::StringID
  00e90	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00e93	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CTextDoubleButtonDlg@@6B@ ; CTextDoubleButtonDlg::`vftable'

; 405  : 	m_pEdit = NULL;

  00e99	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00e9c	c7 82 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+188], 0

; 406  : 
; 407  : 	m_bResizing = false;

  00ea6	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00ea9	c7 80 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+156], 0

; 408  : }

  00eb3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00eba	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00ebd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00ec0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00ec7	8b e5		 mov	 esp, ebp
  00ec9	5d		 pop	 ebp
  00eca	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
text$x	SEGMENT
$L156157:
  000d8	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  000e0	c3		 ret	 0
$L156160:
  000e1	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156159
  000e6	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTextDoubleButtonDlg@@QAE@VStringID@@VCSCI_Object@@F1F@Z ENDP ; CTextDoubleButtonDlg::CTextDoubleButtonDlg
PUBLIC	??1CTextDoubleButtonDlg@@UAE@XZ			; CTextDoubleButtonDlg::~CTextDoubleButtonDlg
;	COMDAT ??_GCTextDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCTextDoubleButtonDlg@@UAEPAXI@Z PROC NEAR		; CTextDoubleButtonDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CTextDoubleButtonDlg@@UAE@XZ ; CTextDoubleButtonDlg::~CTextDoubleButtonDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L149209
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L149209:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCTextDoubleButtonDlg@@UAEPAXI@Z ENDP		; CTextDoubleButtonDlg::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@ABV0@@Z				; MemID::MemID
;	COMDAT ??0StringID@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0StringID@@QAE@ABV0@@Z PROC NEAR			; StringID::StringID, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0StringID@@QAE@ABV0@@Z ENDP				; StringID::StringID
_TEXT	ENDS
;	COMDAT ??1CTextDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CTextDoubleButtonDlg@@UAE@XZ PROC NEAR		; CTextDoubleButtonDlg::~CTextDoubleButtonDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CTextDoubleButtonDlg@@UAE@XZ ENDP			; CTextDoubleButtonDlg::~CTextDoubleButtonDlg
_TEXT	ENDS
EXTRN	?GetWindowTextA@CWnd@@QBEXAAVCString@@@Z:NEAR	; CWnd::GetWindowTextA
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
EXTRN	??4StringID@@QAEAAV0@PBD@Z:NEAR			; StringID::operator=
xdata$x	SEGMENT
$T156169 DD	019930520H
	DD	01H
	DD	FLAT:$T156171
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156171 DD	0ffffffffH
	DD	FLAT:$L156167
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_nID$ = 8
_this$ = -20
_sResult$149219 = -16
?ExecuteButton@CTextDoubleButtonDlg@@UAEXH@Z PROC NEAR	; CTextDoubleButtonDlg::ExecuteButton

; 412  : {

  00ecd	55		 push	 ebp
  00ece	8b ec		 mov	 ebp, esp
  00ed0	6a ff		 push	 -1
  00ed2	68 00 00 00 00	 push	 $L156170
  00ed7	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00edd	50		 push	 eax
  00ede	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ee5	83 ec 08	 sub	 esp, 8
  00ee8	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 413  : 	if ( m_pEdit ) {

  00eeb	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00eee	83 b8 bc 00 00
	00 00		 cmp	 DWORD PTR [eax+188], 0
  00ef5	74 47		 je	 SHORT $L149218

; 414  : 		CString sResult;

  00ef7	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$149219[ebp]
  00efa	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00eff	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 415  : 
; 416  : 		m_pEdit->GetWindowText( sResult );

  00f06	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$149219[ebp]
  00f09	51		 push	 ecx
  00f0a	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00f0d	8b 8a bc 00 00
	00		 mov	 ecx, DWORD PTR [edx+188]
  00f13	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAVCString@@@Z ; CWnd::GetWindowTextA

; 417  : 		m_sValue = (char*) (LPCTSTR) sResult;

  00f18	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$149219[ebp]
  00f1b	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00f20	50		 push	 eax
  00f21	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00f24	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00f2a	e8 00 00 00 00	 call	 ??4StringID@@QAEAAV0@PBD@Z ; StringID::operator=

; 418  : 	}

  00f2f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00f36	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$149219[ebp]
  00f39	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L149218:

; 419  : 
; 420  : 	CDoubleButtonDlg::ExecuteButton( nID );

  00f3e	8b 45 08	 mov	 eax, DWORD PTR _nID$[ebp]
  00f41	50		 push	 eax
  00f42	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00f45	e8 00 00 00 00	 call	 ?ExecuteButton@CNoButtonDlg@@UAEXH@Z ; CNoButtonDlg::ExecuteButton

; 421  : }

  00f4a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00f4d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00f54	8b e5		 mov	 esp, ebp
  00f56	5d		 pop	 ebp
  00f57	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L156167:
  000eb	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$149219[ebp]
  000ee	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000f3	c3		 ret	 0
$L156170:
  000f4	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156169
  000f9	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ExecuteButton@CTextDoubleButtonDlg@@UAEXH@Z ENDP	; CTextDoubleButtonDlg::ExecuteButton
PUBLIC	?Create@CTextDoubleButtonDlg@@QAEHPAD0H00_N1@Z	; CTextDoubleButtonDlg::Create
PUBLIC	?LimitText@CRichEditCtrl@@QAEXJ@Z		; CRichEditCtrl::LimitText
PUBLIC	??DStringID@@QAEPADXZ				; StringID::operator*
EXTRN	?AddText@CSkinEdit@@QAEHPBD@Z:NEAR		; CSkinEdit::AddText
EXTRN	?SetSpace@CSkinEdit@@QAEXH@Z:NEAR		; CSkinEdit::SetSpace
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:NEAR			; CWnd::SetFocus
_DATA	SEGMENT
$SG149233 DB	'Dlg_Password.skn', 00H
_DATA	ENDS
_TEXT	SEGMENT
_psTitle$ = 8
_psPrompt$ = 12
_nLimit$ = 16
_psObject1Name$ = 20
_psObject2Name$ = 24
_boPopup$ = 28
_bSpace$ = 32
_this$ = -8
_bCreated$ = -4
?Create@CTextDoubleButtonDlg@@QAEHPAD0H00_N1@Z PROC NEAR ; CTextDoubleButtonDlg::Create

; 425  : {

  00f5a	55		 push	 ebp
  00f5b	8b ec		 mov	 ebp, esp
  00f5d	83 ec 08	 sub	 esp, 8
  00f60	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 426  : 	SetTransient( true );

  00f63	6a 01		 push	 1
  00f65	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00f68	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 427  : 	SetPriority( swPriGameModal );

  00f6d	6a 07		 push	 7
  00f6f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00f72	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 428  : 
; 429  : 	BOOL bCreated = CDoubleButtonDlg::CreateSkin( "Dlg_Password.skn", psTitle, psPrompt, psObject1Name, psObject2Name, boPopup);

  00f77	8a 45 1c	 mov	 al, BYTE PTR _boPopup$[ebp]
  00f7a	50		 push	 eax
  00f7b	8b 4d 18	 mov	 ecx, DWORD PTR _psObject2Name$[ebp]
  00f7e	51		 push	 ecx
  00f7f	8b 55 14	 mov	 edx, DWORD PTR _psObject1Name$[ebp]
  00f82	52		 push	 edx
  00f83	8b 45 0c	 mov	 eax, DWORD PTR _psPrompt$[ebp]
  00f86	50		 push	 eax
  00f87	8b 4d 08	 mov	 ecx, DWORD PTR _psTitle$[ebp]
  00f8a	51		 push	 ecx
  00f8b	68 00 00 00 00	 push	 OFFSET FLAT:$SG149233
  00f90	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00f93	e8 00 00 00 00	 call	 ?CreateSkin@CDoubleButtonDlg@@QAEHPBDPAD111_N@Z ; CDoubleButtonDlg::CreateSkin
  00f98	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 430  : 	
; 431  : 	if ( bCreated ) {

  00f9b	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  00f9f	74 5e		 je	 SHORT $L149234

; 432  : 		assert( NULL != m_pEdit );
; 433  : 		m_pEdit->SetFocus();

  00fa1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00fa4	8b 8a bc 00 00
	00		 mov	 ecx, DWORD PTR [edx+188]
  00faa	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 434  : 		m_pEdit->LimitText( nLimit );

  00faf	8b 45 10	 mov	 eax, DWORD PTR _nLimit$[ebp]
  00fb2	50		 push	 eax
  00fb3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00fb6	8b 89 bc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+188]
  00fbc	e8 00 00 00 00	 call	 ?LimitText@CRichEditCtrl@@QAEXJ@Z ; CRichEditCtrl::LimitText

; 435  : 		m_pEdit->AddText( *m_sValue );

  00fc1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00fc4	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00fca	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  00fcf	50		 push	 eax
  00fd0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00fd3	8b 8a bc 00 00
	00		 mov	 ecx, DWORD PTR [edx+188]
  00fd9	e8 00 00 00 00	 call	 ?AddText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::AddText

; 436  : 		m_pEdit->SetSpace( bSpace );

  00fde	8b 45 20	 mov	 eax, DWORD PTR _bSpace$[ebp]
  00fe1	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00fe6	50		 push	 eax
  00fe7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00fea	8b 89 bc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+188]
  00ff0	e8 00 00 00 00	 call	 ?SetSpace@CSkinEdit@@QAEXH@Z ; CSkinEdit::SetSpace

; 437  : 
; 438  : 		ShowWindow( SW_SHOW );

  00ff5	6a 05		 push	 5
  00ff7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ffa	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L149234:

; 440  : 
; 441  : 	return bCreated;

  00fff	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 442  : }

  01002	8b e5		 mov	 esp, ebp
  01004	5d		 pop	 ebp
  01005	c2 1c 00	 ret	 28			; 0000001cH
?Create@CTextDoubleButtonDlg@@QAEHPAD0H00_N1@Z ENDP	; CTextDoubleButtonDlg::Create
_TEXT	ENDS
PUBLIC	??0CSkinEditField@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N2@Z ; CSkinEditField::CSkinEditField
_DATA	SEGMENT
	ORG $+3
$SG149244 DB	'_', 00H
	ORG $+2
$SG149246 DB	'ef', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T156191 DD	019930520H
	DD	04H
	DD	FLAT:$T156193
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156193 DD	0ffffffffH
	DD	FLAT:$L156184
	DD	00H
	DD	FLAT:$L156185
	DD	01H
	DD	FLAT:$L156186
	DD	02H
	DD	FLAT:$L156187
xdata$x	ENDS
_TEXT	SEGMENT
$T156174 = -24
$T156175 = -28
$T156176 = -32
$T156177 = -36
$T156182 = -40
$T156183 = -44
__$EHRec$ = -12
_obj$ = 8
_this$ = -48
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CTextDoubleButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CTextDoubleButtonDlg::MakeSkinCtrl

; 446  : {

  01008	55		 push	 ebp
  01009	8b ec		 mov	 ebp, esp
  0100b	6a ff		 push	 -1
  0100d	68 00 00 00 00	 push	 $L156192
  01012	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01018	50		 push	 eax
  01019	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01020	83 ec 3c	 sub	 esp, 60			; 0000003cH
  01023	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx
  01026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 447  : 	// the type of the control is specified by the left characters of the name up to the _
; 448  : 	CString name = obj.GetName();

  0102d	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  01030	50		 push	 eax
  01031	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01034	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  01039	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 449  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  0103d	6a 00		 push	 0
  0103f	68 00 00 00 00	 push	 OFFSET FLAT:$SG149244
  01044	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01047	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  0104c	50		 push	 eax
  0104d	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01050	51		 push	 ecx
  01051	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01054	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  01059	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 450  : 
; 451  : 	// Make a password field for this
; 452  : 	if ( "ef" == id ) {

  0105d	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  01060	52		 push	 edx
  01061	68 00 00 00 00	 push	 OFFSET FLAT:$SG149246
  01066	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  0106b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01070	85 c0		 test	 eax, eax
  01072	0f 84 b7 00 00
	00		 je	 $L149245

; 453  : 		return m_pEdit = new CSkinEditField ( obj, this, 700, CSkinEdit::TABSTOP | ES_AUTOHSCROLL, false, true );

  01078	68 d8 00 00 00	 push	 216			; 000000d8H
  0107d	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01082	89 45 e0	 mov	 DWORD PTR $T156176[ebp], eax
  01085	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01089	83 7d e0 00	 cmp	 DWORD PTR $T156176[ebp], 0
  0108d	74 39		 je	 SHORT $L156178
  0108f	6a 01		 push	 1
  01091	6a 00		 push	 0
  01093	68 80 00 01 00	 push	 65664			; 00010080H
  01098	68 bc 02 00 00	 push	 700			; 000002bcH
  0109d	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  010a0	50		 push	 eax
  010a1	83 ec 08	 sub	 esp, 8
  010a4	8b cc		 mov	 ecx, esp
  010a6	89 65 dc	 mov	 DWORD PTR $T156177[ebp], esp
  010a9	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  010ac	52		 push	 edx
  010ad	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  010b2	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  010b5	8b 4d e0	 mov	 ecx, DWORD PTR $T156176[ebp]
  010b8	e8 00 00 00 00	 call	 ??0CSkinEditField@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N2@Z ; CSkinEditField::CSkinEditField
  010bd	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  010c0	8b 45 c8	 mov	 eax, DWORD PTR -56+[ebp]
  010c3	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  010c6	eb 07		 jmp	 SHORT $L156179
$L156178:
  010c8	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L156179:
  010cf	8b 4d c4	 mov	 ecx, DWORD PTR -60+[ebp]
  010d2	89 4d e4	 mov	 DWORD PTR $T156175[ebp], ecx
  010d5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  010d9	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  010dc	8b 45 e4	 mov	 eax, DWORD PTR $T156175[ebp]
  010df	89 82 bc 00 00
	00		 mov	 DWORD PTR [edx+188], eax
  010e5	83 7d e4 00	 cmp	 DWORD PTR $T156175[ebp], 0
  010e9	74 0b		 je	 SHORT $L156180
  010eb	8b 4d e4	 mov	 ecx, DWORD PTR $T156175[ebp]
  010ee	83 c1 60	 add	 ecx, 96			; 00000060H
  010f1	89 4d c0	 mov	 DWORD PTR -64+[ebp], ecx
  010f4	eb 07		 jmp	 SHORT $L156181
$L156180:
  010f6	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR -64+[ebp], 0
$L156181:
  010fd	8b 55 c0	 mov	 edx, DWORD PTR -64+[ebp]
  01100	89 55 e8	 mov	 DWORD PTR $T156174[ebp], edx
  01103	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01107	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0110a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0110f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01113	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01116	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0111b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01122	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01125	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0112a	8b 45 e8	 mov	 eax, DWORD PTR $T156174[ebp]
  0112d	eb 4f		 jmp	 SHORT $L149239
$L149245:

; 455  : 
; 456  : 	// Let the parent make the field
; 457  : 	return CDoubleButtonDlg::MakeSkinCtrl( obj );

  0112f	83 ec 08	 sub	 esp, 8
  01132	8b cc		 mov	 ecx, esp
  01134	89 65 d4	 mov	 DWORD PTR $T156183[ebp], esp
  01137	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  0113a	50		 push	 eax
  0113b	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01140	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  01143	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  01146	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CNoButtonDlg::MakeSkinCtrl
  0114b	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  0114e	8b 4d b8	 mov	 ecx, DWORD PTR -72+[ebp]
  01151	89 4d d8	 mov	 DWORD PTR $T156182[ebp], ecx
  01154	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01158	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0115b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01160	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01164	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01167	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0116c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01173	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01176	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0117b	8b 45 d8	 mov	 eax, DWORD PTR $T156182[ebp]
$L149239:

; 458  : }

  0117e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01181	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01188	8b e5		 mov	 esp, ebp
  0118a	5d		 pop	 ebp
  0118b	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L156184:
  000fe	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00101	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00106	c3		 ret	 0
$L156185:
  00107	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0010a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0010f	c3		 ret	 0
$L156186:
  00110	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00113	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00118	c3		 ret	 0
$L156187:
  00119	8b 45 e0	 mov	 eax, DWORD PTR $T156176[ebp]
  0011c	50		 push	 eax
  0011d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00122	c3		 ret	 0
$L156192:
  00123	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156191
  00128	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CTextDoubleButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CTextDoubleButtonDlg::MakeSkinCtrl
_TEXT	SEGMENT
_this$ = -4
?Next@CTextDoubleButtonDlg@@UAEXXZ PROC NEAR		; CTextDoubleButtonDlg::Next

; 462  : {

  0118e	55		 push	 ebp
  0118f	8b ec		 mov	 ebp, esp
  01191	51		 push	 ecx
  01192	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : 	ExecuteButton ( 1 );

  01195	6a 01		 push	 1
  01197	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0119a	8b 10		 mov	 edx, DWORD PTR [eax]
  0119c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0119f	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 464  : }

  011a5	8b e5		 mov	 esp, ebp
  011a7	5d		 pop	 ebp
  011a8	c3		 ret	 0
?Next@CTextDoubleButtonDlg@@UAEXXZ ENDP			; CTextDoubleButtonDlg::Next
_TEXT	ENDS
EXTRN	?OnSetFocus@CSkinWnd@@IAEXPAVCWnd@@@Z:NEAR	; CSkinWnd::OnSetFocus
_TEXT	SEGMENT
_pOldWnd$ = 8
_this$ = -4
?OnSetFocus@CTextDoubleButtonDlg@@QAEXPAVCWnd@@@Z PROC NEAR ; CTextDoubleButtonDlg::OnSetFocus

; 467  : {

  011a9	55		 push	 ebp
  011aa	8b ec		 mov	 ebp, esp
  011ac	51		 push	 ecx
  011ad	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 468  :     CSkinWnd::OnSetFocus( pOldWnd );

  011b0	8b 45 08	 mov	 eax, DWORD PTR _pOldWnd$[ebp]
  011b3	50		 push	 eax
  011b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011b7	e8 00 00 00 00	 call	 ?OnSetFocus@CSkinWnd@@IAEXPAVCWnd@@@Z ; CSkinWnd::OnSetFocus

; 469  : 
; 470  :     if (m_pEdit)

  011bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011bf	83 b9 bc 00 00
	00 00		 cmp	 DWORD PTR [ecx+188], 0
  011c6	74 0e		 je	 SHORT $L149263

; 471  :         m_pEdit->SetFocus();

  011c8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  011cb	8b 8a bc 00 00
	00		 mov	 ecx, DWORD PTR [edx+188]
  011d1	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L149263:

; 472  : }

  011d6	8b e5		 mov	 esp, ebp
  011d8	5d		 pop	 ebp
  011d9	c2 04 00	 ret	 4
?OnSetFocus@CTextDoubleButtonDlg@@QAEXPAVCWnd@@@Z ENDP	; CTextDoubleButtonDlg::OnSetFocus
?_GetBaseMessageMap@CPasswordDoubleButtonDlg@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CPasswordDoubleButtonDlg::_GetBaseMessageMap

; 476  : BEGIN_MESSAGE_MAP ( CPasswordDoubleButtonDlg, CSkinWnd )

  011dc	55		 push	 ebp
  011dd	8b ec		 mov	 ebp, esp
  011df	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B ; CSkinWnd::messageMap
  011e4	5d		 pop	 ebp
  011e5	c3		 ret	 0
?_GetBaseMessageMap@CPasswordDoubleButtonDlg@@KGPBUAFX_MSGMAP@@XZ ENDP ; CPasswordDoubleButtonDlg::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CPasswordDoubleButtonDlg@@MBEPBUAFX_MSGMAP@@XZ ; CPasswordDoubleButtonDlg::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CPasswordDoubleButtonDlg@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CPasswordDoubleButtonDlg::GetMessageMap

; 476  : BEGIN_MESSAGE_MAP ( CPasswordDoubleButtonDlg, CSkinWnd )

  011e6	55		 push	 ebp
  011e7	8b ec		 mov	 ebp, esp
  011e9	51		 push	 ecx
  011ea	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  011ed	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CPasswordDoubleButtonDlg@@1UAFX_MSGMAP@@B ; CPasswordDoubleButtonDlg::messageMap
  011f2	8b e5		 mov	 esp, ebp
  011f4	5d		 pop	 ebp
  011f5	c3		 ret	 0
?GetMessageMap@CPasswordDoubleButtonDlg@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CPasswordDoubleButtonDlg::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CPasswordDoubleButtonDlg@@QAE@VStringID@@VCSCI_Object@@F1F@Z ; CPasswordDoubleButtonDlg::CPasswordDoubleButtonDlg
PUBLIC	?MakeSkinCtrl@CPasswordDoubleButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CPasswordDoubleButtonDlg::MakeSkinCtrl
PUBLIC	?ExecuteButton@CPasswordDoubleButtonDlg@@UAEXH@Z ; CPasswordDoubleButtonDlg::ExecuteButton
PUBLIC	?Next@CPasswordDoubleButtonDlg@@UAEXXZ		; CPasswordDoubleButtonDlg::Next
PUBLIC	??_7CPasswordDoubleButtonDlg@@6B@		; CPasswordDoubleButtonDlg::`vftable'
PUBLIC	??_GCPasswordDoubleButtonDlg@@UAEPAXI@Z		; CPasswordDoubleButtonDlg::`scalar deleting destructor'
PUBLIC	??_ECPasswordDoubleButtonDlg@@UAEPAXI@Z		; CPasswordDoubleButtonDlg::`vector deleting destructor'
;	COMDAT ??_7CPasswordDoubleButtonDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CPasswordDoubleButtonDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CPasswordDoubleButtonDlg::`vftable'
	DD	FLAT:??_ECPasswordDoubleButtonDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CPasswordDoubleButtonDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CPasswordDoubleButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CPasswordDoubleButtonDlg@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CPasswordDoubleButtonDlg@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T156203 DD	019930520H
	DD	01H
	DD	FLAT:$T156205
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156205 DD	0ffffffffH
	DD	FLAT:$L156201
xdata$x	ENDS
_TEXT	SEGMENT
$T156199 = -16
$T156200 = -20
__$EHRec$ = -12
_sValue$ = 8
_Object1$ = 12
_nMethod1$ = 16
_Object2$ = 20
_nMethod2$ = 24
_this$ = -24
??0CPasswordDoubleButtonDlg@@QAE@VStringID@@VCSCI_Object@@F1F@Z PROC NEAR ; CPasswordDoubleButtonDlg::CPasswordDoubleButtonDlg

; 482  : {

  011f6	55		 push	 ebp
  011f7	8b ec		 mov	 ebp, esp
  011f9	6a ff		 push	 -1
  011fb	68 00 00 00 00	 push	 $L156204
  01200	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01206	50		 push	 eax
  01207	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0120e	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01211	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  01214	66 8b 45 18	 mov	 ax, WORD PTR _nMethod2$[ebp]
  01218	50		 push	 eax
  01219	51		 push	 ecx
  0121a	8b cc		 mov	 ecx, esp
  0121c	89 65 f0	 mov	 DWORD PTR $T156199[ebp], esp
  0121f	8d 55 14	 lea	 edx, DWORD PTR _Object2$[ebp]
  01222	52		 push	 edx
  01223	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  01228	66 8b 45 10	 mov	 ax, WORD PTR _nMethod1$[ebp]
  0122c	50		 push	 eax
  0122d	51		 push	 ecx
  0122e	8b cc		 mov	 ecx, esp
  01230	89 65 ec	 mov	 DWORD PTR $T156200[ebp], esp
  01233	8d 55 0c	 lea	 edx, DWORD PTR _Object1$[ebp]
  01236	52		 push	 edx
  01237	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  0123c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0123f	e8 00 00 00 00	 call	 ??0CDoubleButtonDlg@@QAE@VCSCI_Object@@F0F@Z ; CDoubleButtonDlg::CDoubleButtonDlg
  01244	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0124b	8d 45 08	 lea	 eax, DWORD PTR _sValue$[ebp]
  0124e	50		 push	 eax
  0124f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01252	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  01258	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABV0@@Z ; StringID::StringID
  0125d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  01260	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CPasswordDoubleButtonDlg@@6B@ ; CPasswordDoubleButtonDlg::`vftable'

; 483  : 	m_pEdit = NULL;

  01266	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  01269	c7 82 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+188], 0

; 484  : 
; 485  : 	m_bResizing = false;

  01273	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  01276	c7 80 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+156], 0

; 486  : }

  01280	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01287	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0128a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0128d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01294	8b e5		 mov	 esp, ebp
  01296	5d		 pop	 ebp
  01297	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
text$x	SEGMENT
$L156201:
  0012d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00130	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  00135	c3		 ret	 0
$L156204:
  00136	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156203
  0013b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CPasswordDoubleButtonDlg@@QAE@VStringID@@VCSCI_Object@@F1F@Z ENDP ; CPasswordDoubleButtonDlg::CPasswordDoubleButtonDlg
PUBLIC	??1CPasswordDoubleButtonDlg@@UAE@XZ		; CPasswordDoubleButtonDlg::~CPasswordDoubleButtonDlg
;	COMDAT ??_GCPasswordDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCPasswordDoubleButtonDlg@@UAEPAXI@Z PROC NEAR	; CPasswordDoubleButtonDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CPasswordDoubleButtonDlg@@UAE@XZ ; CPasswordDoubleButtonDlg::~CPasswordDoubleButtonDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L149287
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L149287:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCPasswordDoubleButtonDlg@@UAEPAXI@Z ENDP		; CPasswordDoubleButtonDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CPasswordDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CPasswordDoubleButtonDlg@@UAE@XZ PROC NEAR		; CPasswordDoubleButtonDlg::~CPasswordDoubleButtonDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CPasswordDoubleButtonDlg@@UAE@XZ ENDP		; CPasswordDoubleButtonDlg::~CPasswordDoubleButtonDlg
_TEXT	ENDS
EXTRN	?GetWindowTextLengthA@CWnd@@QBEHXZ:NEAR		; CWnd::GetWindowTextLengthA
xdata$x	SEGMENT
$T156212 DD	019930520H
	DD	01H
	DD	FLAT:$T156214
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156214 DD	0ffffffffH
	DD	FLAT:$L156210
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_nID$ = 8
_this$ = -20
_sResult$149296 = -16
?ExecuteButton@CPasswordDoubleButtonDlg@@UAEXH@Z PROC NEAR ; CPasswordDoubleButtonDlg::ExecuteButton

; 490  : {

  0129a	55		 push	 ebp
  0129b	8b ec		 mov	 ebp, esp
  0129d	6a ff		 push	 -1
  0129f	68 00 00 00 00	 push	 $L156213
  012a4	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  012aa	50		 push	 eax
  012ab	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  012b2	83 ec 08	 sub	 esp, 8
  012b5	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 491  : 	if ( m_pEdit ) {

  012b8	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  012bb	83 b8 bc 00 00
	00 00		 cmp	 DWORD PTR [eax+188], 0
  012c2	74 63		 je	 SHORT $L149300

; 492  : 		// if nothing is entered in the edit field, don't execute the button unless it's a cancel
; 493  : 		if ( m_pEdit->GetWindowTextLength() ) {

  012c4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  012c7	8b 89 bc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+188]
  012cd	e8 00 00 00 00	 call	 ?GetWindowTextLengthA@CWnd@@QBEHXZ ; CWnd::GetWindowTextLengthA
  012d2	85 c0		 test	 eax, eax
  012d4	74 49		 je	 SHORT $L149295

; 494  : 			CString sResult;

  012d6	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$149296[ebp]
  012d9	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  012de	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 495  : 	
; 496  : 			m_pEdit->GetWindowText( sResult );

  012e5	8d 55 f0	 lea	 edx, DWORD PTR _sResult$149296[ebp]
  012e8	52		 push	 edx
  012e9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  012ec	8b 88 bc 00 00
	00		 mov	 ecx, DWORD PTR [eax+188]
  012f2	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAVCString@@@Z ; CWnd::GetWindowTextA

; 497  : 			m_sValue = (char*) (LPCTSTR) sResult;

  012f7	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$149296[ebp]
  012fa	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  012ff	50		 push	 eax
  01300	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  01303	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  01309	e8 00 00 00 00	 call	 ??4StringID@@QAEAAV0@PBD@Z ; StringID::operator=

; 498  : 		} else {

  0130e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01315	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$149296[ebp]
  01318	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0131d	eb 08		 jmp	 SHORT $L149300
$L149295:

; 499  : 			// if this is a non-cancel button, don't process the press...
; 500  : 			if ( nID != 0 ) {

  0131f	83 7d 08 00	 cmp	 DWORD PTR _nID$[ebp], 0
  01323	74 02		 je	 SHORT $L149300

; 501  : 				return;

  01325	eb 0c		 jmp	 SHORT $L149293
$L149300:

; 505  : 
; 506  : 	CDoubleButtonDlg::ExecuteButton( nID );

  01327	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  0132a	51		 push	 ecx
  0132b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0132e	e8 00 00 00 00	 call	 ?ExecuteButton@CNoButtonDlg@@UAEXH@Z ; CNoButtonDlg::ExecuteButton
$L149293:

; 507  : }

  01333	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01336	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0133d	8b e5		 mov	 esp, ebp
  0133f	5d		 pop	 ebp
  01340	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L156210:
  00140	8d 4d f0	 lea	 ecx, DWORD PTR _sResult$149296[ebp]
  00143	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00148	c3		 ret	 0
$L156213:
  00149	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156212
  0014e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ExecuteButton@CPasswordDoubleButtonDlg@@UAEXH@Z ENDP	; CPasswordDoubleButtonDlg::ExecuteButton
PUBLIC	?Create@CPasswordDoubleButtonDlg@@QAEHPAD0H00_N@Z ; CPasswordDoubleButtonDlg::Create
PUBLIC	?LimitText@CEdit@@QAEXH@Z			; CEdit::LimitText
_DATA	SEGMENT
	ORG $+1
$SG149311 DB	'Dlg_Password.skn', 00H
_DATA	ENDS
_TEXT	SEGMENT
_psTitle$ = 8
_psPrompt$ = 12
_nLimit$ = 16
_psObject1Name$ = 20
_psObject2Name$ = 24
_boPopup$ = 28
_this$ = -8
_bCreated$ = -4
?Create@CPasswordDoubleButtonDlg@@QAEHPAD0H00_N@Z PROC NEAR ; CPasswordDoubleButtonDlg::Create

; 511  : {

  01343	55		 push	 ebp
  01344	8b ec		 mov	 ebp, esp
  01346	83 ec 08	 sub	 esp, 8
  01349	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 512  : 	SetTransient( true );

  0134c	6a 01		 push	 1
  0134e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01351	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 513  : 	SetPriority( swPriGameModal );

  01356	6a 07		 push	 7
  01358	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0135b	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 514  : 
; 515  : 	BOOL bCreated = CDoubleButtonDlg::CreateSkin( "Dlg_Password.skn", psTitle, psPrompt, psObject1Name, psObject2Name, boPopup);

  01360	8a 45 1c	 mov	 al, BYTE PTR _boPopup$[ebp]
  01363	50		 push	 eax
  01364	8b 4d 18	 mov	 ecx, DWORD PTR _psObject2Name$[ebp]
  01367	51		 push	 ecx
  01368	8b 55 14	 mov	 edx, DWORD PTR _psObject1Name$[ebp]
  0136b	52		 push	 edx
  0136c	8b 45 0c	 mov	 eax, DWORD PTR _psPrompt$[ebp]
  0136f	50		 push	 eax
  01370	8b 4d 08	 mov	 ecx, DWORD PTR _psTitle$[ebp]
  01373	51		 push	 ecx
  01374	68 00 00 00 00	 push	 OFFSET FLAT:$SG149311
  01379	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0137c	e8 00 00 00 00	 call	 ?CreateSkin@CDoubleButtonDlg@@QAEHPBDPAD111_N@Z ; CDoubleButtonDlg::CreateSkin
  01381	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 516  : 
; 517  : 	if ( bCreated ) {

  01384	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  01388	74 46		 je	 SHORT $L149312

; 518  : 		assert( NULL != m_pEdit );
; 519  : 		m_pEdit->SetFocus();

  0138a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0138d	8b 8a bc 00 00
	00		 mov	 ecx, DWORD PTR [edx+188]
  01393	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 520  : 		m_pEdit->LimitText( nLimit );

  01398	8b 45 10	 mov	 eax, DWORD PTR _nLimit$[ebp]
  0139b	50		 push	 eax
  0139c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0139f	8b 89 bc 00 00
	00		 mov	 ecx, DWORD PTR [ecx+188]
  013a5	e8 00 00 00 00	 call	 ?LimitText@CEdit@@QAEXH@Z ; CEdit::LimitText

; 521  : 
; 522  : 	    SetAllowMove( false );

  013aa	6a 00		 push	 0
  013ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  013af	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove

; 523  : 	    SetAllowResize( false );

  013b4	6a 00		 push	 0
  013b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  013b9	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 524  : 
; 525  : 		CenterInParent();

  013be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  013c1	e8 00 00 00 00	 call	 ?CenterInParent@CSkinWnd@@QAEXXZ ; CSkinWnd::CenterInParent

; 526  : 		ShowWindow( SW_SHOW );

  013c6	6a 05		 push	 5
  013c8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  013cb	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L149312:

; 528  : 
; 529  : 	return bCreated;

  013d0	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 530  : }

  013d3	8b e5		 mov	 esp, ebp
  013d5	5d		 pop	 ebp
  013d6	c2 18 00	 ret	 24			; 00000018H
?Create@CPasswordDoubleButtonDlg@@QAEHPAD0H00_N@Z ENDP	; CPasswordDoubleButtonDlg::Create
_TEXT	ENDS
EXTRN	??0CSkinPassword@@QAE@VCSkinObj@@PAVCSkinWnd@@IH@Z:NEAR ; CSkinPassword::CSkinPassword
_DATA	SEGMENT
	ORG $+3
$SG149322 DB	'_', 00H
	ORG $+2
$SG149324 DB	'ef', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T156234 DD	019930520H
	DD	04H
	DD	FLAT:$T156236
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156236 DD	0ffffffffH
	DD	FLAT:$L156227
	DD	00H
	DD	FLAT:$L156228
	DD	01H
	DD	FLAT:$L156229
	DD	02H
	DD	FLAT:$L156230
xdata$x	ENDS
_TEXT	SEGMENT
$T156217 = -24
$T156218 = -28
$T156219 = -32
$T156220 = -36
$T156225 = -40
$T156226 = -44
__$EHRec$ = -12
_obj$ = 8
_this$ = -48
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CPasswordDoubleButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CPasswordDoubleButtonDlg::MakeSkinCtrl

; 535  : {

  013d9	55		 push	 ebp
  013da	8b ec		 mov	 ebp, esp
  013dc	6a ff		 push	 -1
  013de	68 00 00 00 00	 push	 $L156235
  013e3	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  013e9	50		 push	 eax
  013ea	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  013f1	83 ec 3c	 sub	 esp, 60			; 0000003cH
  013f4	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx
  013f7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 536  : 	// the type of the control is specified by the left characters of the name up to the _
; 537  : 	CString name = obj.GetName();

  013fe	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  01401	50		 push	 eax
  01402	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01405	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  0140a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 538  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  0140e	6a 00		 push	 0
  01410	68 00 00 00 00	 push	 OFFSET FLAT:$SG149322
  01415	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01418	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  0141d	50		 push	 eax
  0141e	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01421	51		 push	 ecx
  01422	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01425	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  0142a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 539  : 
; 540  : 	// Make a password field for this
; 541  : 	if ( "ef" == id ) {

  0142e	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  01431	52		 push	 edx
  01432	68 00 00 00 00	 push	 OFFSET FLAT:$SG149324
  01437	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  0143c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01441	85 c0		 test	 eax, eax
  01443	0f 84 ad 00 00
	00		 je	 $L149323

; 542  : 		return m_pEdit = new CSkinPassword( obj, this, 700 );

  01449	6a 6c		 push	 108			; 0000006cH
  0144b	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01450	89 45 e0	 mov	 DWORD PTR $T156219[ebp], eax
  01453	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01457	83 7d e0 00	 cmp	 DWORD PTR $T156219[ebp], 0
  0145b	74 32		 je	 SHORT $L156221
  0145d	6a 00		 push	 0
  0145f	68 bc 02 00 00	 push	 700			; 000002bcH
  01464	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  01467	50		 push	 eax
  01468	83 ec 08	 sub	 esp, 8
  0146b	8b cc		 mov	 ecx, esp
  0146d	89 65 dc	 mov	 DWORD PTR $T156220[ebp], esp
  01470	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01473	52		 push	 edx
  01474	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01479	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  0147c	8b 4d e0	 mov	 ecx, DWORD PTR $T156219[ebp]
  0147f	e8 00 00 00 00	 call	 ??0CSkinPassword@@QAE@VCSkinObj@@PAVCSkinWnd@@IH@Z ; CSkinPassword::CSkinPassword
  01484	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  01487	8b 45 c8	 mov	 eax, DWORD PTR -56+[ebp]
  0148a	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  0148d	eb 07		 jmp	 SHORT $L156222
$L156221:
  0148f	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L156222:
  01496	8b 4d c4	 mov	 ecx, DWORD PTR -60+[ebp]
  01499	89 4d e4	 mov	 DWORD PTR $T156218[ebp], ecx
  0149c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  014a0	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  014a3	8b 45 e4	 mov	 eax, DWORD PTR $T156218[ebp]
  014a6	89 82 bc 00 00
	00		 mov	 DWORD PTR [edx+188], eax
  014ac	83 7d e4 00	 cmp	 DWORD PTR $T156218[ebp], 0
  014b0	74 0b		 je	 SHORT $L156223
  014b2	8b 4d e4	 mov	 ecx, DWORD PTR $T156218[ebp]
  014b5	83 c1 40	 add	 ecx, 64			; 00000040H
  014b8	89 4d c0	 mov	 DWORD PTR -64+[ebp], ecx
  014bb	eb 07		 jmp	 SHORT $L156224
$L156223:
  014bd	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR -64+[ebp], 0
$L156224:
  014c4	8b 55 c0	 mov	 edx, DWORD PTR -64+[ebp]
  014c7	89 55 e8	 mov	 DWORD PTR $T156217[ebp], edx
  014ca	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  014ce	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  014d1	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  014d6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  014da	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  014dd	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  014e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  014e9	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  014ec	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  014f1	8b 45 e8	 mov	 eax, DWORD PTR $T156217[ebp]
  014f4	eb 4f		 jmp	 SHORT $L149317
$L149323:

; 544  : 
; 545  : 	// Let the parent make the field
; 546  : 	return CDoubleButtonDlg::MakeSkinCtrl( obj );

  014f6	83 ec 08	 sub	 esp, 8
  014f9	8b cc		 mov	 ecx, esp
  014fb	89 65 d4	 mov	 DWORD PTR $T156226[ebp], esp
  014fe	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  01501	50		 push	 eax
  01502	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01507	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  0150a	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0150d	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CNoButtonDlg::MakeSkinCtrl
  01512	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  01515	8b 4d b8	 mov	 ecx, DWORD PTR -72+[ebp]
  01518	89 4d d8	 mov	 DWORD PTR $T156225[ebp], ecx
  0151b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0151f	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01522	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01527	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0152b	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0152e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01533	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0153a	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0153d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01542	8b 45 d8	 mov	 eax, DWORD PTR $T156225[ebp]
$L149317:

; 547  : }

  01545	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01548	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0154f	8b e5		 mov	 esp, ebp
  01551	5d		 pop	 ebp
  01552	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L156227:
  00153	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00156	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0015b	c3		 ret	 0
$L156228:
  0015c	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0015f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00164	c3		 ret	 0
$L156229:
  00165	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00168	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0016d	c3		 ret	 0
$L156230:
  0016e	8b 45 e0	 mov	 eax, DWORD PTR $T156219[ebp]
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00177	c3		 ret	 0
$L156235:
  00178	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156234
  0017d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CPasswordDoubleButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CPasswordDoubleButtonDlg::MakeSkinCtrl
_TEXT	SEGMENT
_this$ = -4
?Next@CPasswordDoubleButtonDlg@@UAEXXZ PROC NEAR	; CPasswordDoubleButtonDlg::Next

; 551  : {

  01555	55		 push	 ebp
  01556	8b ec		 mov	 ebp, esp
  01558	51		 push	 ecx
  01559	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 552  : 	ExecuteButton ( 1 );

  0155c	6a 01		 push	 1
  0155e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01561	8b 10		 mov	 edx, DWORD PTR [eax]
  01563	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01566	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 553  : }

  0156c	8b e5		 mov	 esp, ebp
  0156e	5d		 pop	 ebp
  0156f	c3		 ret	 0
?Next@CPasswordDoubleButtonDlg@@UAEXXZ ENDP		; CPasswordDoubleButtonDlg::Next
_pOldWnd$ = 8
_this$ = -4
?OnSetFocus@CPasswordDoubleButtonDlg@@QAEXPAVCWnd@@@Z PROC NEAR ; CPasswordDoubleButtonDlg::OnSetFocus

; 556  : {

  01570	55		 push	 ebp
  01571	8b ec		 mov	 ebp, esp
  01573	51		 push	 ecx
  01574	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 557  :     CSkinWnd::OnSetFocus( pOldWnd );

  01577	8b 45 08	 mov	 eax, DWORD PTR _pOldWnd$[ebp]
  0157a	50		 push	 eax
  0157b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0157e	e8 00 00 00 00	 call	 ?OnSetFocus@CSkinWnd@@IAEXPAVCWnd@@@Z ; CSkinWnd::OnSetFocus

; 558  : 
; 559  :     if (m_pEdit)

  01583	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01586	83 b9 bc 00 00
	00 00		 cmp	 DWORD PTR [ecx+188], 0
  0158d	74 0e		 je	 SHORT $L149341

; 560  :         m_pEdit->SetFocus();

  0158f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01592	8b 8a bc 00 00
	00		 mov	 ecx, DWORD PTR [edx+188]
  01598	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L149341:

; 561  : }

  0159d	8b e5		 mov	 esp, ebp
  0159f	5d		 pop	 ebp
  015a0	c2 04 00	 ret	 4
?OnSetFocus@CPasswordDoubleButtonDlg@@QAEXPAVCWnd@@@Z ENDP ; CPasswordDoubleButtonDlg::OnSetFocus
_TEXT	ENDS
PUBLIC	??0CDoubleButtonDlg@@QAE@XZ			; CDoubleButtonDlg::CDoubleButtonDlg
PUBLIC	??0CGroupQuestionDlg@@QAE@H@Z			; CGroupQuestionDlg::CGroupQuestionDlg
PUBLIC	?ExecuteButton@CGroupQuestionDlg@@UAEXH@Z	; CGroupQuestionDlg::ExecuteButton
PUBLIC	?CloseSelf@CGroupQuestionDlg@@UAEX_N@Z		; CGroupQuestionDlg::CloseSelf
PUBLIC	??_7CGroupQuestionDlg@@6B@			; CGroupQuestionDlg::`vftable'
PUBLIC	??_GCGroupQuestionDlg@@UAEPAXI@Z		; CGroupQuestionDlg::`scalar deleting destructor'
PUBLIC	??_ECGroupQuestionDlg@@UAEPAXI@Z		; CGroupQuestionDlg::`vector deleting destructor'
;	COMDAT ??_7CGroupQuestionDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CGroupQuestionDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CGroupQuestionDlg::`vftable'
	DD	FLAT:??_ECGroupQuestionDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CGroupQuestionDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CGroupQuestionDlg@@UAEXH@Z
CONST	ENDS
xdata$x	SEGMENT
$T156242 DD	019930520H
	DD	01H
	DD	FLAT:$T156244
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156244 DD	0ffffffffH
	DD	FLAT:$L156240
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_nServID$ = 8
_this$ = -16
??0CGroupQuestionDlg@@QAE@H@Z PROC NEAR			; CGroupQuestionDlg::CGroupQuestionDlg

; 566  : CGroupQuestionDlg::CGroupQuestionDlg( int nServID ) { 

  015a3	55		 push	 ebp
  015a4	8b ec		 mov	 ebp, esp
  015a6	6a ff		 push	 -1
  015a8	68 00 00 00 00	 push	 $L156243
  015ad	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  015b3	50		 push	 eax
  015b4	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  015bb	51		 push	 ecx
  015bc	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  015bf	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  015c2	e8 00 00 00 00	 call	 ??0CDoubleButtonDlg@@QAE@XZ ; CDoubleButtonDlg::CDoubleButtonDlg
  015c7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  015ce	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  015d1	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGroupQuestionDlg@@6B@ ; CGroupQuestionDlg::`vftable'

; 567  : 	m_nServID = nServID;

  015d7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  015da	8b 55 08	 mov	 edx, DWORD PTR _nServID$[ebp]
  015dd	89 91 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], edx

; 568  : 
; 569  : 	if ( g_pGroupQuestion )

  015e3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGroupQuestion@@3PAVCGroupQuestionDlg@@A, 0 ; g_pGroupQuestion
  015ea	74 15		 je	 SHORT $L149346

; 570  : 		g_pGroupQuestion->CloseSelf();

  015ec	6a 00		 push	 0
  015ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGroupQuestion@@3PAVCGroupQuestionDlg@@A ; g_pGroupQuestion
  015f3	8b 10		 mov	 edx, DWORD PTR [eax]
  015f5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGroupQuestion@@3PAVCGroupQuestionDlg@@A ; g_pGroupQuestion
  015fb	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L149346:

; 571  : 
; 572  : 	g_pGroupQuestion = this;

  01601	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01604	a3 00 00 00 00	 mov	 DWORD PTR ?g_pGroupQuestion@@3PAVCGroupQuestionDlg@@A, eax ; g_pGroupQuestion

; 573  : }

  01609	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01610	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01613	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01616	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0161d	8b e5		 mov	 esp, ebp
  0161f	5d		 pop	 ebp
  01620	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L156240:
  00182	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00185	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0018a	c3		 ret	 0
$L156243:
  0018b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156242
  00190	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CGroupQuestionDlg@@QAE@H@Z ENDP			; CGroupQuestionDlg::CGroupQuestionDlg
PUBLIC	??1CGroupQuestionDlg@@UAE@XZ			; CGroupQuestionDlg::~CGroupQuestionDlg
;	COMDAT ??_GCGroupQuestionDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGroupQuestionDlg@@UAEPAXI@Z PROC NEAR		; CGroupQuestionDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGroupQuestionDlg@@UAE@XZ ; CGroupQuestionDlg::~CGroupQuestionDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L149350
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L149350:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCGroupQuestionDlg@@UAEPAXI@Z ENDP			; CGroupQuestionDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CGroupQuestionDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGroupQuestionDlg@@UAE@XZ PROC NEAR			; CGroupQuestionDlg::~CGroupQuestionDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CGroupQuestionDlg@@UAE@XZ ENDP			; CGroupQuestionDlg::~CGroupQuestionDlg
_TEXT	ENDS
EXTRN	?CNetSend@@YAHPADZZ:NEAR			; CNetSend
_DATA	SEGMENT
	ORG $+1
$SG149357 DB	'tlb', 00H
_DATA	ENDS
_TEXT	SEGMENT
_nID$ = 8
_this$ = -4
?ExecuteButton@CGroupQuestionDlg@@UAEXH@Z PROC NEAR	; CGroupQuestionDlg::ExecuteButton

; 576  : void CGroupQuestionDlg::ExecuteButton( int nID ) {

  01623	55		 push	 ebp
  01624	8b ec		 mov	 ebp, esp
  01626	51		 push	 ecx
  01627	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 577  : 	m_bExecuted = true;

  0162a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0162d	c7 80 b0 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+176], 1

; 578  : 	CNetSend( "tlb", REALM_QUESTION_GROUP, m_nServID, nID );

  01637	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  0163a	51		 push	 ecx
  0163b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0163e	8b 82 b8 00 00
	00		 mov	 eax, DWORD PTR [edx+184]
  01644	50		 push	 eax
  01645	6a 5a		 push	 90			; 0000005aH
  01647	68 00 00 00 00	 push	 OFFSET FLAT:$SG149357
  0164c	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  01651	83 c4 10	 add	 esp, 16			; 00000010H

; 579  : 
; 580  : 	// Close the dialog
; 581  : 	CloseSelf();

  01654	6a 00		 push	 0
  01656	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01659	8b 11		 mov	 edx, DWORD PTR [ecx]
  0165b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0165e	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 582  : }

  01664	8b e5		 mov	 esp, ebp
  01666	5d		 pop	 ebp
  01667	c2 04 00	 ret	 4
?ExecuteButton@CGroupQuestionDlg@@UAEXH@Z ENDP		; CGroupQuestionDlg::ExecuteButton
_TEXT	ENDS
_DATA	SEGMENT
$SG149363 DB	'tlb', 00H
_DATA	ENDS
_TEXT	SEGMENT
_bTransient$ = 8
_this$ = -4
?CloseSelf@CGroupQuestionDlg@@UAEX_N@Z PROC NEAR	; CGroupQuestionDlg::CloseSelf

; 586  : {

  0166a	55		 push	 ebp
  0166b	8b ec		 mov	 ebp, esp
  0166d	51		 push	 ecx
  0166e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 587  : 	// Call Button 0 if no buttons pressed (or button was pressed early and it was delayed until now)
; 588  : 	if ( !m_bExecuted ) {

  01671	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01674	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  0167b	75 28		 jne	 SHORT $L149362

; 589  : 		m_bExecuted = true;

  0167d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01680	c7 81 b0 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+176], 1

; 590  : 		CNetSend( "tlb", REALM_QUESTION_GROUP, m_nServID, 0 );

  0168a	6a 00		 push	 0
  0168c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0168f	8b 82 b8 00 00
	00		 mov	 eax, DWORD PTR [edx+184]
  01695	50		 push	 eax
  01696	6a 5a		 push	 90			; 0000005aH
  01698	68 00 00 00 00	 push	 OFFSET FLAT:$SG149363
  0169d	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  016a2	83 c4 10	 add	 esp, 16			; 00000010H
$L149362:

; 592  : 
; 593  : 	g_pGroupQuestion = NULL;

  016a5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGroupQuestion@@3PAVCGroupQuestionDlg@@A, 0 ; g_pGroupQuestion

; 594  : 
; 595  : 	CSkinWnd::CloseSelf( bTransient );

  016af	8a 4d 08	 mov	 cl, BYTE PTR _bTransient$[ebp]
  016b2	51		 push	 ecx
  016b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  016b6	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 596  : }

  016bb	8b e5		 mov	 esp, ebp
  016bd	5d		 pop	 ebp
  016be	c2 04 00	 ret	 4
?CloseSelf@CGroupQuestionDlg@@UAEX_N@Z ENDP		; CGroupQuestionDlg::CloseSelf
_TEXT	ENDS
PUBLIC	?Create@CGroupQuestionDlg@@QAEHPAD000_N1@Z	; CGroupQuestionDlg::Create
_DATA	SEGMENT
$SG149375 DB	'Dlg_choice.skn', 00H
	ORG $+1
$SG149377 DB	'Dlg_choice.skn', 00H
	ORG $+1
$SG149381 DB	'bn_Button00', 00H
$SG149385 DB	'bn_Button01', 00H
_DATA	ENDS
_TEXT	SEGMENT
_psTitle$ = 8
_psPrompt$ = 12
_psObject1Name$ = 16
_psObject2Name$ = 20
_boPopup$ = 24
_bAlert$ = 28
_this$ = -16
_bCreated$ = -4
_pCtrl$149380 = -8
_pCtrl$149384 = -12
?Create@CGroupQuestionDlg@@QAEHPAD000_N1@Z PROC NEAR	; CGroupQuestionDlg::Create

; 599  : BOOL CGroupQuestionDlg::Create ( char* psTitle, char* psPrompt, char* psObject1Name, char* psObject2Name, bool boPopup, bool bAlert ) {

  016c1	55		 push	 ebp
  016c2	8b ec		 mov	 ebp, esp
  016c4	83 ec 10	 sub	 esp, 16			; 00000010H
  016c7	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 600  : 	SetTransient( true );

  016ca	6a 01		 push	 1
  016cc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  016cf	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 601  : 
; 602  : 	BOOL bCreated;
; 603  : 
; 604  : 	if ( bAlert ) {

  016d4	8b 45 1c	 mov	 eax, DWORD PTR _bAlert$[ebp]
  016d7	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  016dc	85 c0		 test	 eax, eax
  016de	74 24		 je	 SHORT $L149374

; 605  : 		SetPriority( swPriModal );

  016e0	6a 06		 push	 6
  016e2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  016e5	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 606  : 		bCreated = CNoButtonDlg::CreatePopup ( "Dlg_choice.skn", psTitle, psPrompt);

  016ea	8b 4d 0c	 mov	 ecx, DWORD PTR _psPrompt$[ebp]
  016ed	51		 push	 ecx
  016ee	8b 55 08	 mov	 edx, DWORD PTR _psTitle$[ebp]
  016f1	52		 push	 edx
  016f2	68 00 00 00 00	 push	 OFFSET FLAT:$SG149375
  016f7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  016fa	e8 00 00 00 00	 call	 ?CreatePopup@CNoButtonDlg@@QAEHPBDPAD1@Z ; CNoButtonDlg::CreatePopup
  016ff	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 607  : 	} else {

  01702	eb 26		 jmp	 SHORT $L149376
$L149374:

; 608  : 		SetPriority( swPriDefault );

  01704	6a 01		 push	 1
  01706	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01709	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 609  : 		bCreated = CNoButtonDlg::Create( "Dlg_choice.skn", psTitle, psPrompt, boPopup);

  0170e	8a 45 18	 mov	 al, BYTE PTR _boPopup$[ebp]
  01711	50		 push	 eax
  01712	8b 4d 0c	 mov	 ecx, DWORD PTR _psPrompt$[ebp]
  01715	51		 push	 ecx
  01716	8b 55 08	 mov	 edx, DWORD PTR _psTitle$[ebp]
  01719	52		 push	 edx
  0171a	68 00 00 00 00	 push	 OFFSET FLAT:$SG149377
  0171f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01722	e8 00 00 00 00	 call	 ?Create@CNoButtonDlg@@QAEHPBDPAD1_N@Z ; CNoButtonDlg::Create
  01727	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax
$L149376:

; 611  : 
; 612  : 	if ( bCreated ) {

  0172a	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  0172e	74 56		 je	 SHORT $L149378

; 613  : 		if ( psObject1Name ) {

  01730	83 7d 10 00	 cmp	 DWORD PTR _psObject1Name$[ebp], 0
  01734	74 20		 je	 SHORT $L149379

; 614  : 			CSkinCtrl* pCtrl = FindControl( "bn_Button00" );

  01736	68 00 00 00 00	 push	 OFFSET FLAT:$SG149381
  0173b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0173e	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  01743	89 45 f8	 mov	 DWORD PTR _pCtrl$149380[ebp], eax

; 615  : 			assert( NULL != pCtrl );
; 616  : 
; 617  : 			pCtrl->SetText( psObject1Name );

  01746	8b 45 10	 mov	 eax, DWORD PTR _psObject1Name$[ebp]
  01749	50		 push	 eax
  0174a	8b 4d f8	 mov	 ecx, DWORD PTR _pCtrl$149380[ebp]
  0174d	51		 push	 ecx
  0174e	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  01753	83 c4 08	 add	 esp, 8
$L149379:

; 619  : 
; 620  : 		if ( psObject2Name ) {

  01756	83 7d 14 00	 cmp	 DWORD PTR _psObject2Name$[ebp], 0
  0175a	74 20		 je	 SHORT $L149383

; 621  : 			CSkinCtrl* pCtrl = FindControl( "bn_Button01" );

  0175c	68 00 00 00 00	 push	 OFFSET FLAT:$SG149385
  01761	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01764	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  01769	89 45 f4	 mov	 DWORD PTR _pCtrl$149384[ebp], eax

; 622  : 			assert( NULL != pCtrl );
; 623  : 
; 624  : 			pCtrl->SetText( psObject2Name );

  0176c	8b 55 14	 mov	 edx, DWORD PTR _psObject2Name$[ebp]
  0176f	52		 push	 edx
  01770	8b 45 f4	 mov	 eax, DWORD PTR _pCtrl$149384[ebp]
  01773	50		 push	 eax
  01774	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  01779	83 c4 08	 add	 esp, 8
$L149383:

; 626  : 
; 627  : 		ShowWindow( SW_SHOW );

  0177c	6a 05		 push	 5
  0177e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01781	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L149378:

; 629  : 
; 630  : 	return bCreated;

  01786	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 631  : }

  01789	8b e5		 mov	 esp, ebp
  0178b	5d		 pop	 ebp
  0178c	c2 18 00	 ret	 24			; 00000018H
?Create@CGroupQuestionDlg@@QAEHPAD000_N1@Z ENDP		; CGroupQuestionDlg::Create
_TEXT	ENDS
PUBLIC	?OnReturn@CSkinEditField@@UAEXXZ		; CSkinEditField::OnReturn
PUBLIC	?OnEscape@CSkinEditField@@UAEXXZ		; CSkinEditField::OnEscape
PUBLIC	??_7CSkinEditField@@6BCRichEditCtrl@@@		; CSkinEditField::`vftable'
PUBLIC	??_7CSkinEditField@@6BCScrollable@@@		; CSkinEditField::`vftable'
PUBLIC	??_7CSkinEditField@@6BCSkinCtrl@@@		; CSkinEditField::`vftable'
PUBLIC	??_7CSkinEditField@@6BCMouseWheelable@@@	; CSkinEditField::`vftable'
PUBLIC	??_GCSkinEditField@@UAEPAXI@Z			; CSkinEditField::`scalar deleting destructor'
PUBLIC	??_ECSkinEditField@@UAEPAXI@Z			; CSkinEditField::`vector deleting destructor'
PUBLIC	??_ECSkinEditField@@WGA@AEPAXI@Z		; CSkinEditField::`vector deleting destructor'
PUBLIC	??_ECSkinEditField@@WHE@AEPAXI@Z		; CSkinEditField::`vector deleting destructor'
EXTRN	?UpdateMe@CSkinEdit@@UAEXXZ:NEAR		; CSkinEdit::UpdateMe
EXTRN	?SetRange@CSkinEdit@@UAEXHH@Z:NEAR		; CSkinEdit::SetRange
EXTRN	?OnMouseWheel@CSkinEdit@@UAEXIF@Z:NEAR		; CSkinEdit::OnMouseWheel
EXTRN	?GetMessageMap@CSkinEdit@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinEdit::GetMessageMap
EXTRN	?Refresh@CSkinCtrl@@UAEXXZ:NEAR			; CSkinCtrl::Refresh
EXTRN	?OnMouseDown@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseDown
EXTRN	?OnMouseUp@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseUp
EXTRN	?OnActivate@CSkinCtrl@@UAEXFF@Z:NEAR		; CSkinCtrl::OnActivate
EXTRN	?GetRuntimeClass@CRichEditCtrl@@UBEPAUCRuntimeClass@@XZ:NEAR ; CRichEditCtrl::GetRuntimeClass
EXTRN	?SetLocation@CScrollable@@UAEXM@Z:NEAR		; CScrollable::SetLocation
EXTRN	?ChangeLocation@CScrollable@@UAEXH@Z:NEAR	; CScrollable::ChangeLocation
EXTRN	?ChangePage@CScrollable@@UAEXH@Z:NEAR		; CScrollable::ChangePage
EXTRN	?UpdateScrollBar@CScrollable@@UAEXXZ:NEAR	; CScrollable::UpdateScrollBar
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
;	COMDAT ??_7CSkinEditField@@6BCRichEditCtrl@@@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CSkinEditField@@6BCRichEditCtrl@@@ DD FLAT:?GetRuntimeClass@CRichEditCtrl@@UBEPAUCRuntimeClass@@XZ ; CSkinEditField::`vftable'
	DD	FLAT:??_ECSkinEditField@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinEdit@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?OnReturn@CSkinEditField@@UAEXXZ
	DD	FLAT:?OnEscape@CSkinEditField@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CSkinEditField@@6BCScrollable@@@
CONST	SEGMENT
??_7CSkinEditField@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinEdit@@UAEXXZ ; CSkinEditField::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CSkinEdit@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CScrollable@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CSkinEditField@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CSkinEditField@@6BCSkinCtrl@@@ DD FLAT:??_ECSkinEditField@@WGA@AEPAXI@Z ; CSkinEditField::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CSkinEditField@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CSkinEditField@@6BCMouseWheelable@@@ DD FLAT:??_ECSkinEditField@@WHE@AEPAXI@Z ; CSkinEditField::`vftable'
	DD	FLAT:?OnMouseWheel@CSkinEdit@@UAEXIF@Z
CONST	ENDS
xdata$x	SEGMENT
$T156257 DD	019930520H
	DD	01H
	DD	FLAT:$T156259
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156259 DD	0ffffffffH
	DD	FLAT:$L156253
xdata$x	ENDS
_TEXT	SEGMENT
$T156252 = -16
__$EHRec$ = -12
_linkObj$ = 8
_pParent$ = 16
_nID$ = 20
_dwStyle$ = 24
_bEmotes$ = 28
_bHiliteOnFocus$ = 32
_this$ = -20
??0CSkinEditField@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N2@Z PROC NEAR ; CSkinEditField::CSkinEditField

; 637  : {

  0178f	55		 push	 ebp
  01790	8b ec		 mov	 ebp, esp
  01792	6a ff		 push	 -1
  01794	68 00 00 00 00	 push	 $L156258
  01799	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0179f	50		 push	 eax
  017a0	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  017a7	83 ec 10	 sub	 esp, 16			; 00000010H
  017aa	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  017ad	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  017b4	6a 00		 push	 0
  017b6	8a 45 20	 mov	 al, BYTE PTR _bHiliteOnFocus$[ebp]
  017b9	50		 push	 eax
  017ba	8a 4d 1c	 mov	 cl, BYTE PTR _bEmotes$[ebp]
  017bd	51		 push	 ecx
  017be	8b 55 18	 mov	 edx, DWORD PTR _dwStyle$[ebp]
  017c1	52		 push	 edx
  017c2	8b 45 14	 mov	 eax, DWORD PTR _nID$[ebp]
  017c5	50		 push	 eax
  017c6	8b 4d 10	 mov	 ecx, DWORD PTR _pParent$[ebp]
  017c9	51		 push	 ecx
  017ca	83 ec 08	 sub	 esp, 8
  017cd	8b cc		 mov	 ecx, esp
  017cf	89 65 f0	 mov	 DWORD PTR $T156252[ebp], esp
  017d2	8d 55 08	 lea	 edx, DWORD PTR _linkObj$[ebp]
  017d5	52		 push	 edx
  017d6	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  017db	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  017de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  017e1	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  017e6	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  017e9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  017ec	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinEditField@@6BCRichEditCtrl@@@ ; CSkinEditField::`vftable'
  017f2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  017f5	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CSkinEditField@@6BCScrollable@@@ ; CSkinEditField::`vftable'
  017fc	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  017ff	c7 42 60 00 00
	00 00		 mov	 DWORD PTR [edx+96], OFFSET FLAT:??_7CSkinEditField@@6BCSkinCtrl@@@ ; CSkinEditField::`vftable'
  01806	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01809	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CSkinEditField@@6BCMouseWheelable@@@ ; CSkinEditField::`vftable'

; 638  : }

  01810	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01817	8d 4d 08	 lea	 ecx, DWORD PTR _linkObj$[ebp]
  0181a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0181f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01822	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01825	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0182c	8b e5		 mov	 esp, ebp
  0182e	5d		 pop	 ebp
  0182f	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
text$x	SEGMENT
$L156253:
  00195	8d 4d 08	 lea	 ecx, DWORD PTR _linkObj$[ebp]
  00198	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0019d	c3		 ret	 0
$L156258:
  0019e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156257
  001a3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinEditField@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N2@Z ENDP ; CSkinEditField::CSkinEditField
PUBLIC	??1CSkinEditField@@UAE@XZ			; CSkinEditField::~CSkinEditField
;	COMDAT ??_GCSkinEditField@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinEditField@@UAEPAXI@Z PROC NEAR			; CSkinEditField::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinEditField@@UAE@XZ ; CSkinEditField::~CSkinEditField
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L149400
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L149400:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCSkinEditField@@UAEPAXI@Z ENDP			; CSkinEditField::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CSkinEdit@@UAE@XZ				; CSkinEdit::~CSkinEdit
;	COMDAT ??1CSkinEditField@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinEditField@@UAE@XZ PROC NEAR			; CSkinEditField::~CSkinEditField, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinEdit@@UAE@XZ	; CSkinEdit::~CSkinEdit
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinEditField@@UAE@XZ ENDP				; CSkinEditField::~CSkinEditField
_TEXT	ENDS
EXTRN	??1CMouseWheelable@@UAE@XZ:NEAR			; CMouseWheelable::~CMouseWheelable
EXTRN	??1CRichEditCtrl@@UAE@XZ:NEAR			; CRichEditCtrl::~CRichEditCtrl
;	COMDAT xdata$x
xdata$x	SEGMENT
$T156276 DD	019930520H
	DD	02H
	DD	FLAT:$T156278
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156278 DD	0ffffffffH
	DD	FLAT:$L156268
	DD	00H
	DD	FLAT:$L156271
xdata$x	ENDS
;	COMDAT ??1CSkinEdit@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??1CSkinEdit@@UAE@XZ PROC NEAR				; CSkinEdit::~CSkinEdit, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156277
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00025	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  00029	74 0b		 je	 SHORT $L156266
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c0 74	 add	 eax, 116		; 00000074H
  00031	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  00034	eb 07		 jmp	 SHORT $L156267
$L156266:
  00036	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR -20+[ebp], 0
$L156267:
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR -20+[ebp]
  00040	e8 00 00 00 00	 call	 ??1CMouseWheelable@@UAE@XZ ; CMouseWheelable::~CMouseWheelable
  00045	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00049	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  0004d	74 0b		 je	 SHORT $L156264
  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	83 c1 60	 add	 ecx, 96			; 00000060H
  00055	89 4d e8	 mov	 DWORD PTR -24+[ebp], ecx
  00058	eb 07		 jmp	 SHORT $L156265
$L156264:
  0005a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L156265:
  00061	8b 4d e8	 mov	 ecx, DWORD PTR -24+[ebp]
  00064	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ??1CRichEditCtrl@@UAE@XZ ; CRichEditCtrl::~CRichEditCtrl
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156268:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CRichEditCtrl@@UAE@XZ ; CRichEditCtrl::~CRichEditCtrl
  00008	c3		 ret	 0
$L156271:
  00009	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	0f 84 0e 00 00
	00		 je	 $L156269
  00013	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00016	83 c0 60	 add	 eax, 96			; 00000060H
  00019	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0001c	e9 07 00 00 00	 jmp	 $L156270
$L156269:
  00021	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L156270:
  00028	8b 4d e8	 mov	 ecx, DWORD PTR -24+[ebp]
  0002b	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  00030	c3		 ret	 0
$L156277:
  00031	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156276
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CSkinEdit@@UAE@XZ ENDP				; CSkinEdit::~CSkinEdit
_TEXT	SEGMENT
_this$ = -4
?OnReturn@CSkinEditField@@UAEXXZ PROC NEAR		; CSkinEditField::OnReturn

; 641  : {

  01832	55		 push	 ebp
  01833	8b ec		 mov	 ebp, esp
  01835	51		 push	 ecx
  01836	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 642  : 	m_pParentWnd->Next();

  01839	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0183c	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  0183f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01842	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  01845	8b 10		 mov	 edx, DWORD PTR [eax]
  01847	ff 92 e4 00 00
	00		 call	 DWORD PTR [edx+228]

; 643  : }

  0184d	8b e5		 mov	 esp, ebp
  0184f	5d		 pop	 ebp
  01850	c3		 ret	 0
?OnReturn@CSkinEditField@@UAEXXZ ENDP			; CSkinEditField::OnReturn
_this$ = -4
?OnEscape@CSkinEditField@@UAEXXZ PROC NEAR		; CSkinEditField::OnEscape

; 646  : {

  01851	55		 push	 ebp
  01852	8b ec		 mov	 ebp, esp
  01854	51		 push	 ecx
  01855	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 647  : 	m_pParentWnd->CloseSelf();

  01858	6a 00		 push	 0
  0185a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0185d	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  01860	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01863	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  01866	8b 10		 mov	 edx, DWORD PTR [eax]
  01868	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 648  : }

  0186e	8b e5		 mov	 esp, ebp
  01870	5d		 pop	 ebp
  01871	c3		 ret	 0
?OnEscape@CSkinEditField@@UAEXXZ ENDP			; CSkinEditField::OnEscape
?_GetBaseMessageMap@CGenericDlg@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CGenericDlg::_GetBaseMessageMap

; 651  : BEGIN_MESSAGE_MAP ( CGenericDlg, CSkinWnd )

  01872	55		 push	 ebp
  01873	8b ec		 mov	 ebp, esp
  01875	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B ; CSkinWnd::messageMap
  0187a	5d		 pop	 ebp
  0187b	c3		 ret	 0
?_GetBaseMessageMap@CGenericDlg@@KGPBUAFX_MSGMAP@@XZ ENDP ; CGenericDlg::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CGenericDlg@@MBEPBUAFX_MSGMAP@@XZ ; CGenericDlg::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CGenericDlg@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CGenericDlg::GetMessageMap

; 651  : BEGIN_MESSAGE_MAP ( CGenericDlg, CSkinWnd )

  0187c	55		 push	 ebp
  0187d	8b ec		 mov	 ebp, esp
  0187f	51		 push	 ecx
  01880	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  01883	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CGenericDlg@@1UAFX_MSGMAP@@B ; CGenericDlg::messageMap
  01888	8b e5		 mov	 esp, ebp
  0188a	5d		 pop	 ebp
  0188b	c3		 ret	 0
?GetMessageMap@CGenericDlg@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CGenericDlg::GetMessageMap
_TEXT	ENDS
EXTRN	?SetPageSize@CSkinEdit@@QAEXH@Z:NEAR		; CSkinEdit::SetPageSize
_TEXT	SEGMENT
_pNMHDR$ = 8
_this$ = -44
_prr$ = -40
_promptRect$ = -16
_myRect$ = -32
_nAdjust$ = -36
?OnResize@CGenericDlg@@QAEXPAUtagNMHDR@@PAJ@Z PROC NEAR	; CGenericDlg::OnResize

; 655  : void CGenericDlg::OnResize ( NMHDR* pNMHDR, LRESULT* pResult ) {

  0188c	55		 push	 ebp
  0188d	8b ec		 mov	 ebp, esp
  0188f	83 ec 2c	 sub	 esp, 44			; 0000002cH
  01892	56		 push	 esi
  01893	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 656  : 	REQRESIZE* prr = (REQRESIZE*)pNMHDR;

  01896	8b 45 08	 mov	 eax, DWORD PTR _pNMHDR$[ebp]
  01899	89 45 d8	 mov	 DWORD PTR _prr$[ebp], eax

; 657  : 
; 658  : 	CRect	promptRect;

  0189c	8d 4d f0	 lea	 ecx, DWORD PTR _promptRect$[ebp]
  0189f	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 659  : 	CRect	myRect;

  018a4	8d 4d e0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  018a7	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 660  : 	int		nAdjust;
; 661  : 
; 662  : 	m_pChatDisplay->GetWindowRect( &promptRect );

  018ac	8d 4d f0	 lea	 ecx, DWORD PTR _promptRect$[ebp]
  018af	51		 push	 ecx
  018b0	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  018b3	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  018b9	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 663  : 	ScreenToClient( &promptRect );

  018be	8d 45 f0	 lea	 eax, DWORD PTR _promptRect$[ebp]
  018c1	50		 push	 eax
  018c2	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  018c5	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 664  : 
; 665  : 	CWnd::GetWindowRect( &myRect );

  018ca	8d 4d e0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  018cd	51		 push	 ecx
  018ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  018d1	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 666  : 
; 667  : 	nAdjust = ( prr->rc.bottom - prr->rc.top ) - promptRect.Height();

  018d6	8b 55 d8	 mov	 edx, DWORD PTR _prr$[ebp]
  018d9	8b 45 d8	 mov	 eax, DWORD PTR _prr$[ebp]
  018dc	8b 72 18	 mov	 esi, DWORD PTR [edx+24]
  018df	2b 70 10	 sub	 esi, DWORD PTR [eax+16]
  018e2	8d 4d f0	 lea	 ecx, DWORD PTR _promptRect$[ebp]
  018e5	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  018ea	2b f0		 sub	 esi, eax
  018ec	89 75 dc	 mov	 DWORD PTR _nAdjust$[ebp], esi

; 668  : 
; 669  : 	if ( nAdjust > 244 )

  018ef	81 7d dc f4 00
	00 00		 cmp	 DWORD PTR _nAdjust$[ebp], 244 ; 000000f4H
  018f6	7e 07		 jle	 SHORT $L149435

; 670  : 		nAdjust = 244;

  018f8	c7 45 dc f4 00
	00 00		 mov	 DWORD PTR _nAdjust$[ebp], 244 ; 000000f4H
$L149435:

; 671  : 
; 672  : 	promptRect.bottom += nAdjust;

  018ff	8b 4d fc	 mov	 ecx, DWORD PTR _promptRect$[ebp+12]
  01902	03 4d dc	 add	 ecx, DWORD PTR _nAdjust$[ebp]
  01905	89 4d fc	 mov	 DWORD PTR _promptRect$[ebp+12], ecx

; 673  : 
; 674  : 	m_pChatDisplay->MoveWindow( &promptRect, false );

  01908	6a 00		 push	 0
  0190a	8d 55 f0	 lea	 edx, DWORD PTR _promptRect$[ebp]
  0190d	52		 push	 edx
  0190e	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  01911	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  01917	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow

; 675  : 
; 676  : 	myRect.bottom += nAdjust;

  0191c	8b 4d ec	 mov	 ecx, DWORD PTR _myRect$[ebp+12]
  0191f	03 4d dc	 add	 ecx, DWORD PTR _nAdjust$[ebp]
  01922	89 4d ec	 mov	 DWORD PTR _myRect$[ebp+12], ecx

; 677  : 
; 678  : 	MoveWindow( &myRect, true );

  01925	6a 01		 push	 1
  01927	8d 55 e0	 lea	 edx, DWORD PTR _myRect$[ebp]
  0192a	52		 push	 edx
  0192b	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0192e	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow

; 679  : 
; 680  : 	m_pChatDisplay->SetPageSize( myRect.Height() );

  01933	8d 4d e0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  01936	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  0193b	50		 push	 eax
  0193c	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  0193f	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  01945	e8 00 00 00 00	 call	 ?SetPageSize@CSkinEdit@@QAEXH@Z ; CSkinEdit::SetPageSize

; 681  : }

  0194a	5e		 pop	 esi
  0194b	8b e5		 mov	 esp, ebp
  0194d	5d		 pop	 ebp
  0194e	c2 08 00	 ret	 8
?OnResize@CGenericDlg@@QAEXPAUtagNMHDR@@PAJ@Z ENDP	; CGenericDlg::OnResize
_TEXT	ENDS
PUBLIC	??0CGenericDlg@@QAE@XZ				; CGenericDlg::CGenericDlg
PUBLIC	?CloseSelf@CGenericDlg@@UAEX_N@Z		; CGenericDlg::CloseSelf
PUBLIC	?MakeSkinCtrl@CGenericDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CGenericDlg::MakeSkinCtrl
PUBLIC	??_7CGenericDlg@@6B@				; CGenericDlg::`vftable'
PUBLIC	??_GCGenericDlg@@UAEPAXI@Z			; CGenericDlg::`scalar deleting destructor'
PUBLIC	??_ECGenericDlg@@UAEPAXI@Z			; CGenericDlg::`vector deleting destructor'
;	COMDAT ??_7CGenericDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CGenericDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CGenericDlg::`vftable'
	DD	FLAT:??_ECGenericDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CGenericDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CGenericDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CGenericDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CGenericDlg@@QAE@XZ PROC NEAR			; CGenericDlg::CGenericDlg

; 683  : CGenericDlg::CGenericDlg () {

  01951	55		 push	 ebp
  01952	8b ec		 mov	 ebp, esp
  01954	51		 push	 ecx
  01955	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  01958	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0195b	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  01960	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01963	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGenericDlg@@6B@ ; CGenericDlg::`vftable'

; 684  : 	m_pChatDisplay = NULL;

  01969	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0196c	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0

; 685  : }

  01976	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01979	8b e5		 mov	 esp, ebp
  0197b	5d		 pop	 ebp
  0197c	c3		 ret	 0
??0CGenericDlg@@QAE@XZ ENDP				; CGenericDlg::CGenericDlg
_TEXT	ENDS
PUBLIC	??1CGenericDlg@@UAE@XZ				; CGenericDlg::~CGenericDlg
;	COMDAT ??_GCGenericDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGenericDlg@@UAEPAXI@Z PROC NEAR			; CGenericDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGenericDlg@@UAE@XZ	; CGenericDlg::~CGenericDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L149442
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L149442:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCGenericDlg@@UAEPAXI@Z ENDP				; CGenericDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CGenericDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CGenericDlg@@UAE@XZ PROC NEAR			; CGenericDlg::~CGenericDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CGenericDlg@@UAE@XZ ENDP				; CGenericDlg::~CGenericDlg
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?CloseSelf@CGenericDlg@@UAEX_N@Z PROC NEAR		; CGenericDlg::CloseSelf

; 688  : void CGenericDlg::CloseSelf( bool bTransient ) {

  0197d	55		 push	 ebp
  0197e	8b ec		 mov	 ebp, esp
  01980	51		 push	 ecx
  01981	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 689  : 	CSkinWnd::CloseSelf();

  01984	6a 00		 push	 0
  01986	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01989	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 690  : }

  0198e	8b e5		 mov	 esp, ebp
  01990	5d		 pop	 ebp
  01991	c2 04 00	 ret	 4
?CloseSelf@CGenericDlg@@UAEX_N@Z ENDP			; CGenericDlg::CloseSelf
_TEXT	ENDS
PUBLIC	?Create@CGenericDlg@@QAEHPBD0_N1@Z		; CGenericDlg::Create
EXTRN	?ParseText@CSkinEdit@@QAEHPBD_N@Z:NEAR		; CSkinEdit::ParseText
EXTRN	?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CSkinEdit::SetScrollBar
EXTRN	__fltused:NEAR
_DATA	SEGMENT
$SG149459 DB	'Dlg_Generic.skn', 00H
$SG149462 DB	'Dlg_Generic.skn', 00H
_DATA	ENDS
_TEXT	SEGMENT
$T156293 = -20
$T156294 = -36
_pTitle$ = 8
_pMessage$ = 12
_bCenter$ = 16
_boPopup$ = 20
_this$ = -40
_bCreated$ = -4
?Create@CGenericDlg@@QAEHPBD0_N1@Z PROC NEAR		; CGenericDlg::Create

; 693  : BOOL CGenericDlg::Create ( const char* pTitle, const char* pMessage, bool bCenter, bool boPopup ) {

  01994	55		 push	 ebp
  01995	8b ec		 mov	 ebp, esp
  01997	83 ec 28	 sub	 esp, 40			; 00000028H
  0199a	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 694  : 	BOOL bCreated;
; 695  : 
; 696  : 	m_bCenter = bCenter;

  0199d	8b 45 10	 mov	 eax, DWORD PTR _bCenter$[ebp]
  019a0	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  019a5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  019a8	89 81 94 00 00
	00		 mov	 DWORD PTR [ecx+148], eax

; 697  : 
; 698  : 	if (boPopup) {

  019ae	8b 55 14	 mov	 edx, DWORD PTR _boPopup$[ebp]
  019b1	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  019b7	85 d2		 test	 edx, edx
  019b9	74 31		 je	 SHORT $L149457

; 699  : 		bCreated = CreatePopupChild ( "Dlg_Generic.skn", pTitle, CRect ( 0, 0, 0, 0 ), g_pMainWindow );

  019bb	6a 01		 push	 1
  019bd	6a 01		 push	 1
  019bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  019c4	50		 push	 eax
  019c5	6a 00		 push	 0
  019c7	6a 00		 push	 0
  019c9	6a 00		 push	 0
  019cb	6a 00		 push	 0
  019cd	8d 4d ec	 lea	 ecx, DWORD PTR $T156293[ebp]
  019d0	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  019d5	50		 push	 eax
  019d6	8b 4d 08	 mov	 ecx, DWORD PTR _pTitle$[ebp]
  019d9	51		 push	 ecx
  019da	68 00 00 00 00	 push	 OFFSET FLAT:$SG149459
  019df	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  019e2	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  019e7	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 700  : 	} else {

  019ea	eb 2e		 jmp	 SHORT $L149460
$L149457:

; 701  : 		bCreated = CreateChild ( "Dlg_Generic.skn", pTitle, CRect ( 0, 0, 0, 0 ), g_pMainWindow );

  019ec	6a 01		 push	 1
  019ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  019f4	52		 push	 edx
  019f5	6a 00		 push	 0
  019f7	6a 00		 push	 0
  019f9	6a 00		 push	 0
  019fb	6a 00		 push	 0
  019fd	8d 4d dc	 lea	 ecx, DWORD PTR $T156294[ebp]
  01a00	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  01a05	50		 push	 eax
  01a06	8b 45 08	 mov	 eax, DWORD PTR _pTitle$[ebp]
  01a09	50		 push	 eax
  01a0a	68 00 00 00 00	 push	 OFFSET FLAT:$SG149462
  01a0f	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01a12	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  01a17	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax
$L149460:

; 703  : 
; 704  : 	if ( TRUE == bCreated ) {

  01a1a	83 7d fc 01	 cmp	 DWORD PTR _bCreated$[ebp], 1
  01a1e	0f 85 90 00 00
	00		 jne	 $L149463

; 705  : 		m_pChatDisplay->SetScrollBar ( m_pBar );

  01a24	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01a27	8b 91 9c 00 00
	00		 mov	 edx, DWORD PTR [ecx+156]
  01a2d	52		 push	 edx
  01a2e	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  01a31	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  01a37	e8 00 00 00 00	 call	 ?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z ; CSkinEdit::SetScrollBar

; 706  : 
; 707  : 		m_pChatDisplay->ParseText( pMessage );

  01a3c	6a 00		 push	 0
  01a3e	8b 4d 0c	 mov	 ecx, DWORD PTR _pMessage$[ebp]
  01a41	51		 push	 ecx
  01a42	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  01a45	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  01a4b	e8 00 00 00 00	 call	 ?ParseText@CSkinEdit@@QAEHPBD_N@Z ; CSkinEdit::ParseText

; 708  : 
; 709  : 		m_pChatDisplay->SetLocation( 0 );

  01a50	6a 00		 push	 0
  01a52	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  01a55	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  01a5b	83 c1 40	 add	 ecx, 64			; 00000040H
  01a5e	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  01a61	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  01a67	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  01a6a	ff 52 04	 call	 DWORD PTR [edx+4]

; 710  : 
; 711  : 		m_pChatDisplay->SetEventMask( ENM_REQUESTRESIZE ); 

  01a6d	68 00 00 04 00	 push	 262144			; 00040000H
  01a72	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  01a75	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  01a7b	e8 00 00 00 00	 call	 ?SetEventMask@CRichEditCtrl@@QAEKK@Z ; CRichEditCtrl::SetEventMask

; 712  : 		m_pChatDisplay->RequestResize();

  01a80	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01a83	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  01a89	e8 00 00 00 00	 call	 ?RequestResize@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::RequestResize

; 713  : 
; 714  : 		// restore my screen location
; 715  : 		//RestoreLocation
; 716  : 		CenterInParent();

  01a8e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01a91	e8 00 00 00 00	 call	 ?CenterInParent@CSkinWnd@@QAEXXZ ; CSkinWnd::CenterInParent

; 717  : 		SetAllowMove( false );

  01a96	6a 00		 push	 0
  01a98	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01a9b	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove

; 718  : 		SetAllowResize( false );

  01aa0	6a 00		 push	 0
  01aa2	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01aa5	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 719  : 
; 720  : 		ShowWindow( SW_SHOW );

  01aaa	6a 05		 push	 5
  01aac	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01aaf	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L149463:

; 722  : 
; 723  : 	return bCreated;

  01ab4	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 724  : }

  01ab7	8b e5		 mov	 esp, ebp
  01ab9	5d		 pop	 ebp
  01aba	c2 10 00	 ret	 16			; 00000010H
?Create@CGenericDlg@@QAEHPBD0_N1@Z ENDP			; CGenericDlg::Create
_TEXT	ENDS
PUBLIC	?Create@CGenericDlg@@QAEHPBDVCSCI_Object@@_N2@Z	; CGenericDlg::Create
PUBLIC	??0ObjectID@@QAE@ABV0@@Z			; ObjectID::ObjectID
EXTRN	??0PackedData@@QAE@VObjectID@@@Z:NEAR		; PackedData::PackedData
EXTRN	??1PackedData@@UAE@XZ:NEAR			; PackedData::~PackedData
EXTRN	?getWord@PackedData@@QAEFXZ:NEAR		; PackedData::getWord
EXTRN	?getCharString@PackedData@@QAEPADH@Z:NEAR	; PackedData::getCharString
EXTRN	??YCString@@QAEABV0@PBD@Z:NEAR			; CString::operator+=
EXTRN	?Format@CString@@QAAXPBDZZ:NEAR			; CString::Format
_DATA	SEGMENT
$SG149476 DB	'Dlg_Generic.skn', 00H
$SG149479 DB	'Dlg_Generic.skn', 00H
$SG149489 DB	0aH, 00H
	ORG $+2
$SG149493 DB	'You have no quests!', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T156306 DD	019930520H
	DD	02H
	DD	FLAT:$T156308
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156308 DD	0ffffffffH
	DD	FLAT:$L156303
	DD	00H
	DD	FLAT:$L156304
xdata$x	ENDS
_TEXT	SEGMENT
$T156297 = -44
$T156298 = -60
$T156299 = -76
$T156300 = -80
$T156301 = -84
$T156302 = -88
__$EHRec$ = -12
_pTitle$ = 8
_hObject$ = 12
_bCenter$ = 16
_boPopup$ = 20
_this$ = -92
_bCreated$ = -24
_data$ = -20
_sMessage$149481 = -28
_nCount$149482 = -32
_pText$149483 = -36
_i$149485 = -40
?Create@CGenericDlg@@QAEHPBDVCSCI_Object@@_N2@Z PROC NEAR ; CGenericDlg::Create

; 727  : BOOL CGenericDlg::Create ( const char* pTitle, CSCI_Object hObject, bool bCenter, bool boPopup ) {

  01abd	55		 push	 ebp
  01abe	8b ec		 mov	 ebp, esp
  01ac0	6a ff		 push	 -1
  01ac2	68 00 00 00 00	 push	 $L156307
  01ac7	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01acd	50		 push	 eax
  01ace	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01ad5	83 ec 50	 sub	 esp, 80			; 00000050H
  01ad8	89 4d a4	 mov	 DWORD PTR _this$[ebp], ecx

; 728  : 	BOOL bCreated;
; 729  : 
; 730  : 	PackedData data(hObject);

  01adb	51		 push	 ecx
  01adc	8b cc		 mov	 ecx, esp
  01ade	89 65 d4	 mov	 DWORD PTR $T156297[ebp], esp
  01ae1	8d 45 0c	 lea	 eax, DWORD PTR _hObject$[ebp]
  01ae4	50		 push	 eax
  01ae5	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  01aea	8d 4d ec	 lea	 ecx, DWORD PTR _data$[ebp]
  01aed	e8 00 00 00 00	 call	 ??0PackedData@@QAE@VObjectID@@@Z ; PackedData::PackedData
  01af2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 731  : 
; 732  : 	m_bCenter = bCenter;

  01af9	8b 4d 10	 mov	 ecx, DWORD PTR _bCenter$[ebp]
  01afc	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  01b02	8b 55 a4	 mov	 edx, DWORD PTR _this$[ebp]
  01b05	89 8a 94 00 00
	00		 mov	 DWORD PTR [edx+148], ecx

; 733  : 
; 734  : 	if (boPopup) {

  01b0b	8b 45 14	 mov	 eax, DWORD PTR _boPopup$[ebp]
  01b0e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01b13	85 c0		 test	 eax, eax
  01b15	74 32		 je	 SHORT $L149474

; 735  : 		bCreated = CreatePopupChild ( "Dlg_Generic.skn", pTitle, CRect ( 0, 0, 0, 0 ), g_pMainWindow );

  01b17	6a 01		 push	 1
  01b19	6a 01		 push	 1
  01b1b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  01b21	51		 push	 ecx
  01b22	6a 00		 push	 0
  01b24	6a 00		 push	 0
  01b26	6a 00		 push	 0
  01b28	6a 00		 push	 0
  01b2a	8d 4d c4	 lea	 ecx, DWORD PTR $T156298[ebp]
  01b2d	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  01b32	50		 push	 eax
  01b33	8b 55 08	 mov	 edx, DWORD PTR _pTitle$[ebp]
  01b36	52		 push	 edx
  01b37	68 00 00 00 00	 push	 OFFSET FLAT:$SG149476
  01b3c	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01b3f	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  01b44	89 45 e8	 mov	 DWORD PTR _bCreated$[ebp], eax

; 736  : 	} else {

  01b47	eb 2d		 jmp	 SHORT $L149477
$L149474:

; 737  : 		bCreated = CreateChild ( "Dlg_Generic.skn", pTitle, CRect ( 0, 0, 0, 0 ), g_pMainWindow );

  01b49	6a 01		 push	 1
  01b4b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  01b50	50		 push	 eax
  01b51	6a 00		 push	 0
  01b53	6a 00		 push	 0
  01b55	6a 00		 push	 0
  01b57	6a 00		 push	 0
  01b59	8d 4d b4	 lea	 ecx, DWORD PTR $T156299[ebp]
  01b5c	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  01b61	50		 push	 eax
  01b62	8b 4d 08	 mov	 ecx, DWORD PTR _pTitle$[ebp]
  01b65	51		 push	 ecx
  01b66	68 00 00 00 00	 push	 OFFSET FLAT:$SG149479
  01b6b	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01b6e	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  01b73	89 45 e8	 mov	 DWORD PTR _bCreated$[ebp], eax
$L149477:

; 739  : 
; 740  : 	if ( TRUE == bCreated ) {

  01b76	83 7d e8 01	 cmp	 DWORD PTR _bCreated$[ebp], 1
  01b7a	0f 85 57 01 00
	00		 jne	 $L149480

; 741  : 		m_pChatDisplay->SetScrollBar ( m_pBar );

  01b80	8b 55 a4	 mov	 edx, DWORD PTR _this$[ebp]
  01b83	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  01b89	50		 push	 eax
  01b8a	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01b8d	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  01b93	e8 00 00 00 00	 call	 ?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z ; CSkinEdit::SetScrollBar

; 742  : 
; 743  : 		CString sMessage;

  01b98	8d 4d e4	 lea	 ecx, DWORD PTR _sMessage$149481[ebp]
  01b9b	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  01ba0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 744  : 
; 745  : 		int nCount = data.getWord();

  01ba4	8d 4d ec	 lea	 ecx, DWORD PTR _data$[ebp]
  01ba7	e8 00 00 00 00	 call	 ?getWord@PackedData@@QAEFXZ ; PackedData::getWord
  01bac	0f bf d0	 movsx	 edx, ax
  01baf	89 55 e0	 mov	 DWORD PTR _nCount$149482[ebp], edx

; 746  : 
; 747  : 		char* pText;
; 748  : 
; 749  : 		if ( nCount ) {

  01bb2	83 7d e0 00	 cmp	 DWORD PTR _nCount$149482[ebp], 0
  01bb6	0f 84 81 00 00
	00		 je	 $L149484

; 750  : 			for (int i = 0;i < nCount;i++) {

  01bbc	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _i$149485[ebp], 0
  01bc3	eb 09		 jmp	 SHORT $L149486
$L149487:
  01bc5	8b 45 d8	 mov	 eax, DWORD PTR _i$149485[ebp]
  01bc8	83 c0 01	 add	 eax, 1
  01bcb	89 45 d8	 mov	 DWORD PTR _i$149485[ebp], eax
$L149486:
  01bce	8b 4d d8	 mov	 ecx, DWORD PTR _i$149485[ebp]
  01bd1	3b 4d e0	 cmp	 ecx, DWORD PTR _nCount$149482[ebp]
  01bd4	7d 3a		 jge	 SHORT $L149488

; 751  : 				pText = data.getCharString();

  01bd6	6a 00		 push	 0
  01bd8	8d 4d ec	 lea	 ecx, DWORD PTR _data$[ebp]
  01bdb	e8 00 00 00 00	 call	 ?getCharString@PackedData@@QAEPADH@Z ; PackedData::getCharString
  01be0	89 45 dc	 mov	 DWORD PTR _pText$149483[ebp], eax

; 752  : 
; 753  : 				sMessage += pText;

  01be3	8b 55 dc	 mov	 edx, DWORD PTR _pText$149483[ebp]
  01be6	52		 push	 edx
  01be7	8d 4d e4	 lea	 ecx, DWORD PTR _sMessage$149481[ebp]
  01bea	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=

; 754  : 				sMessage += "\n";

  01bef	68 00 00 00 00	 push	 OFFSET FLAT:$SG149489
  01bf4	8d 4d e4	 lea	 ecx, DWORD PTR _sMessage$149481[ebp]
  01bf7	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=

; 755  : 
; 756  : 				delete pText;

  01bfc	8b 45 dc	 mov	 eax, DWORD PTR _pText$149483[ebp]
  01bff	89 45 b0	 mov	 DWORD PTR $T156300[ebp], eax
  01c02	8b 4d b0	 mov	 ecx, DWORD PTR $T156300[ebp]
  01c05	51		 push	 ecx
  01c06	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  01c0b	83 c4 04	 add	 esp, 4

; 757  : 			}

  01c0e	eb b5		 jmp	 SHORT $L149487
$L149488:

; 758  : 
; 759  : 			pText = data.getCharString();

  01c10	6a 00		 push	 0
  01c12	8d 4d ec	 lea	 ecx, DWORD PTR _data$[ebp]
  01c15	e8 00 00 00 00	 call	 ?getCharString@PackedData@@QAEPADH@Z ; PackedData::getCharString
  01c1a	89 45 dc	 mov	 DWORD PTR _pText$149483[ebp], eax

; 760  : 
; 761  : 			sMessage += pText;

  01c1d	8b 55 dc	 mov	 edx, DWORD PTR _pText$149483[ebp]
  01c20	52		 push	 edx
  01c21	8d 4d e4	 lea	 ecx, DWORD PTR _sMessage$149481[ebp]
  01c24	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=

; 762  : 
; 763  : 			delete pText;

  01c29	8b 45 dc	 mov	 eax, DWORD PTR _pText$149483[ebp]
  01c2c	89 45 ac	 mov	 DWORD PTR $T156301[ebp], eax
  01c2f	8b 4d ac	 mov	 ecx, DWORD PTR $T156301[ebp]
  01c32	51		 push	 ecx
  01c33	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  01c38	83 c4 04	 add	 esp, 4

; 764  : 		} else {

  01c3b	eb 11		 jmp	 SHORT $L149492
$L149484:

; 765  : 			sMessage.Format( "You have no quests!" );

  01c3d	68 00 00 00 00	 push	 OFFSET FLAT:$SG149493
  01c42	8d 55 e4	 lea	 edx, DWORD PTR _sMessage$149481[ebp]
  01c45	52		 push	 edx
  01c46	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  01c4b	83 c4 08	 add	 esp, 8
$L149492:

; 767  : 
; 768  : 		m_pChatDisplay->ParseText( sMessage );

  01c4e	6a 00		 push	 0
  01c50	8d 4d e4	 lea	 ecx, DWORD PTR _sMessage$149481[ebp]
  01c53	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01c58	50		 push	 eax
  01c59	8b 45 a4	 mov	 eax, DWORD PTR _this$[ebp]
  01c5c	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  01c62	e8 00 00 00 00	 call	 ?ParseText@CSkinEdit@@QAEHPBD_N@Z ; CSkinEdit::ParseText

; 769  : 
; 770  : 		m_pChatDisplay->SetLocation( 0 );

  01c67	6a 00		 push	 0
  01c69	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01c6c	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  01c72	83 c1 40	 add	 ecx, 64			; 00000040H
  01c75	8b 55 a4	 mov	 edx, DWORD PTR _this$[ebp]
  01c78	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  01c7e	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  01c81	ff 52 04	 call	 DWORD PTR [edx+4]

; 771  : 
; 772  : 		m_pChatDisplay->SetEventMask( ENM_REQUESTRESIZE ); 

  01c84	68 00 00 04 00	 push	 262144			; 00040000H
  01c89	8b 45 a4	 mov	 eax, DWORD PTR _this$[ebp]
  01c8c	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  01c92	e8 00 00 00 00	 call	 ?SetEventMask@CRichEditCtrl@@QAEKK@Z ; CRichEditCtrl::SetEventMask

; 773  : 		m_pChatDisplay->RequestResize();

  01c97	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01c9a	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  01ca0	e8 00 00 00 00	 call	 ?RequestResize@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::RequestResize

; 774  : 
; 775  : 		// restore my screen location
; 776  : 		//RestoreLocation
; 777  : 		CenterInParent();

  01ca5	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01ca8	e8 00 00 00 00	 call	 ?CenterInParent@CSkinWnd@@QAEXXZ ; CSkinWnd::CenterInParent

; 778  : 		SetAllowMove( false );

  01cad	6a 00		 push	 0
  01caf	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01cb2	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove

; 779  : 		SetAllowResize( false );

  01cb7	6a 00		 push	 0
  01cb9	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01cbc	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 780  : 
; 781  : 		ShowWindow( SW_SHOW );

  01cc1	6a 05		 push	 5
  01cc3	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01cc6	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 782  : 	}

  01ccb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01ccf	8d 4d e4	 lea	 ecx, DWORD PTR _sMessage$149481[ebp]
  01cd2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L149480:

; 783  : 
; 784  : 	return bCreated;

  01cd7	8b 55 e8	 mov	 edx, DWORD PTR _bCreated$[ebp]
  01cda	89 55 a8	 mov	 DWORD PTR $T156302[ebp], edx
  01cdd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01ce4	8d 4d ec	 lea	 ecx, DWORD PTR _data$[ebp]
  01ce7	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  01cec	8b 45 a8	 mov	 eax, DWORD PTR $T156302[ebp]

; 785  : }

  01cef	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01cf2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01cf9	8b e5		 mov	 esp, ebp
  01cfb	5d		 pop	 ebp
  01cfc	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L156303:
  001a8	8d 4d ec	 lea	 ecx, DWORD PTR _data$[ebp]
  001ab	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  001b0	c3		 ret	 0
$L156304:
  001b1	8d 4d e4	 lea	 ecx, DWORD PTR _sMessage$149481[ebp]
  001b4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  001b9	c3		 ret	 0
$L156307:
  001ba	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156306
  001bf	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CGenericDlg@@QAEHPBDVCSCI_Object@@_N2@Z ENDP	; CGenericDlg::Create
EXTRN	??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinScrollBar::CSkinScrollBar
_DATA	SEGMENT
$SG149503 DB	'_', 00H
	ORG $+2
$SG149505 DB	'chat window', 00H
$SG149521 DB	'sb', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T156345 DD	019930520H
	DD	06H
	DD	FLAT:$T156347
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156347 DD	0ffffffffH
	DD	FLAT:$L156334
	DD	00H
	DD	FLAT:$L156335
	DD	01H
	DD	FLAT:$L156336
	DD	02H
	DD	FLAT:$L156337
	DD	02H
	DD	FLAT:$L156339
	DD	02H
	DD	FLAT:$L156341
xdata$x	ENDS
_TEXT	SEGMENT
$T156310 = -24
$T156311 = -28
$T156312 = -32
$T156313 = -36
$T156318 = -40
$T156319 = -44
$T156320 = -48
$T156321 = -52
$T156326 = -56
$T156327 = -60
$T156328 = -64
$T156329 = -68
$T156332 = -72
$T156333 = -76
__$EHRec$ = -12
_obj$ = 8
_this$ = -80
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CGenericDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CGenericDlg::MakeSkinCtrl

; 788  : CSkinCtrl* CGenericDlg::MakeSkinCtrl ( CSkinObj obj ) {

  01cff	55		 push	 ebp
  01d00	8b ec		 mov	 ebp, esp
  01d02	6a ff		 push	 -1
  01d04	68 00 00 00 00	 push	 $L156346
  01d09	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01d0f	50		 push	 eax
  01d10	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01d17	83 ec 78	 sub	 esp, 120		; 00000078H
  01d1a	89 4d b0	 mov	 DWORD PTR _this$[ebp], ecx
  01d1d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 789  : 	// the type of the control is specified by the 3 left characters of the name
; 790  : 	CString name = obj.GetName();

  01d24	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  01d27	50		 push	 eax
  01d28	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01d2b	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  01d30	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 791  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  01d34	6a 00		 push	 0
  01d36	68 00 00 00 00	 push	 OFFSET FLAT:$SG149503
  01d3b	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01d3e	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  01d43	50		 push	 eax
  01d44	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01d47	51		 push	 ecx
  01d48	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01d4b	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  01d50	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 792  : 
; 793  : 	if ( "chat window" == name ) {

  01d54	8d 55 f0	 lea	 edx, DWORD PTR _name$[ebp]
  01d57	52		 push	 edx
  01d58	68 00 00 00 00	 push	 OFFSET FLAT:$SG149505
  01d5d	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  01d62	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01d67	85 c0		 test	 eax, eax
  01d69	0f 84 88 01 00
	00		 je	 $L149513

; 794  : 		// create the chat display based on the chatWindow skin object
; 795  : 		if ( m_bCenter ) {

  01d6f	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  01d72	83 b8 94 00 00
	00 00		 cmp	 DWORD PTR [eax+148], 0
  01d79	0f 84 bc 00 00
	00		 je	 $L149506

; 796  : 			return m_pChatDisplay = new CSkinEdit ( obj, this, 666, CSkinEdit::CENTER | CSkinEdit::MULTILINE | CSkinEdit::READONLY, false, true );

  01d7f	68 d8 00 00 00	 push	 216			; 000000d8H
  01d84	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01d89	89 45 e0	 mov	 DWORD PTR $T156312[ebp], eax
  01d8c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01d90	83 7d e0 00	 cmp	 DWORD PTR $T156312[ebp], 0
  01d94	74 3b		 je	 SHORT $L156314
  01d96	6a 00		 push	 0
  01d98	6a 01		 push	 1
  01d9a	6a 00		 push	 0
  01d9c	68 05 08 00 00	 push	 2053			; 00000805H
  01da1	68 9a 02 00 00	 push	 666			; 0000029aH
  01da6	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  01da9	51		 push	 ecx
  01daa	83 ec 08	 sub	 esp, 8
  01dad	8b cc		 mov	 ecx, esp
  01daf	89 65 dc	 mov	 DWORD PTR $T156313[ebp], esp
  01db2	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01db5	52		 push	 edx
  01db6	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01dbb	89 45 ac	 mov	 DWORD PTR -84+[ebp], eax
  01dbe	8b 4d e0	 mov	 ecx, DWORD PTR $T156312[ebp]
  01dc1	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  01dc6	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  01dc9	8b 45 a8	 mov	 eax, DWORD PTR -88+[ebp]
  01dcc	89 45 a4	 mov	 DWORD PTR -92+[ebp], eax
  01dcf	eb 07		 jmp	 SHORT $L156315
$L156314:
  01dd1	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR -92+[ebp], 0
$L156315:
  01dd8	8b 4d a4	 mov	 ecx, DWORD PTR -92+[ebp]
  01ddb	89 4d e4	 mov	 DWORD PTR $T156311[ebp], ecx
  01dde	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01de2	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  01de5	8b 45 e4	 mov	 eax, DWORD PTR $T156311[ebp]
  01de8	89 82 98 00 00
	00		 mov	 DWORD PTR [edx+152], eax
  01dee	83 7d e4 00	 cmp	 DWORD PTR $T156311[ebp], 0
  01df2	74 0b		 je	 SHORT $L156316
  01df4	8b 4d e4	 mov	 ecx, DWORD PTR $T156311[ebp]
  01df7	83 c1 60	 add	 ecx, 96			; 00000060H
  01dfa	89 4d a0	 mov	 DWORD PTR -96+[ebp], ecx
  01dfd	eb 07		 jmp	 SHORT $L156317
$L156316:
  01dff	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR -96+[ebp], 0
$L156317:
  01e06	8b 55 a0	 mov	 edx, DWORD PTR -96+[ebp]
  01e09	89 55 e8	 mov	 DWORD PTR $T156310[ebp], edx
  01e0c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01e10	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01e13	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01e18	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01e1c	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01e1f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01e24	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01e2b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01e2e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01e33	8b 45 e8	 mov	 eax, DWORD PTR $T156310[ebp]
  01e36	e9 bd 01 00 00	 jmp	 $L149498
$L149506:

; 798  : 			return m_pChatDisplay = new CSkinEdit ( obj, this, 666, CSkinEdit::MULTILINE | CSkinEdit::READONLY );

  01e3b	68 d8 00 00 00	 push	 216			; 000000d8H
  01e40	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01e45	89 45 d0	 mov	 DWORD PTR $T156320[ebp], eax
  01e48	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  01e4c	83 7d d0 00	 cmp	 DWORD PTR $T156320[ebp], 0
  01e50	74 3b		 je	 SHORT $L156322
  01e52	6a 00		 push	 0
  01e54	6a 00		 push	 0
  01e56	6a 01		 push	 1
  01e58	68 04 08 00 00	 push	 2052			; 00000804H
  01e5d	68 9a 02 00 00	 push	 666			; 0000029aH
  01e62	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  01e65	50		 push	 eax
  01e66	83 ec 08	 sub	 esp, 8
  01e69	8b cc		 mov	 ecx, esp
  01e6b	89 65 cc	 mov	 DWORD PTR $T156321[ebp], esp
  01e6e	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01e71	52		 push	 edx
  01e72	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01e77	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  01e7a	8b 4d d0	 mov	 ecx, DWORD PTR $T156320[ebp]
  01e7d	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  01e82	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  01e85	8b 45 98	 mov	 eax, DWORD PTR -104+[ebp]
  01e88	89 45 94	 mov	 DWORD PTR -108+[ebp], eax
  01e8b	eb 07		 jmp	 SHORT $L156323
$L156322:
  01e8d	c7 45 94 00 00
	00 00		 mov	 DWORD PTR -108+[ebp], 0
$L156323:
  01e94	8b 4d 94	 mov	 ecx, DWORD PTR -108+[ebp]
  01e97	89 4d d4	 mov	 DWORD PTR $T156319[ebp], ecx
  01e9a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01e9e	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  01ea1	8b 45 d4	 mov	 eax, DWORD PTR $T156319[ebp]
  01ea4	89 82 98 00 00
	00		 mov	 DWORD PTR [edx+152], eax
  01eaa	83 7d d4 00	 cmp	 DWORD PTR $T156319[ebp], 0
  01eae	74 0b		 je	 SHORT $L156324
  01eb0	8b 4d d4	 mov	 ecx, DWORD PTR $T156319[ebp]
  01eb3	83 c1 60	 add	 ecx, 96			; 00000060H
  01eb6	89 4d 90	 mov	 DWORD PTR -112+[ebp], ecx
  01eb9	eb 07		 jmp	 SHORT $L156325
$L156324:
  01ebb	c7 45 90 00 00
	00 00		 mov	 DWORD PTR -112+[ebp], 0
$L156325:
  01ec2	8b 55 90	 mov	 edx, DWORD PTR -112+[ebp]
  01ec5	89 55 d8	 mov	 DWORD PTR $T156318[ebp], edx
  01ec8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01ecc	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01ecf	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01ed4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01ed8	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01edb	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01ee0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01ee7	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01eea	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01eef	8b 45 d8	 mov	 eax, DWORD PTR $T156318[ebp]
  01ef2	e9 01 01 00 00	 jmp	 $L149498
$L149513:

; 801  : 
; 802  : 	if ( "sb" == id ) {

  01ef7	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01efa	50		 push	 eax
  01efb	68 00 00 00 00	 push	 OFFSET FLAT:$SG149521
  01f00	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  01f05	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01f0a	85 c0		 test	 eax, eax
  01f0c	0f 84 91 00 00
	00		 je	 $L149520

; 803  : 		return m_pBar = new CSkinScrollBar ( obj, this );

  01f12	6a 48		 push	 72			; 00000048H
  01f14	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01f19	83 c4 04	 add	 esp, 4
  01f1c	89 45 c0	 mov	 DWORD PTR $T156328[ebp], eax
  01f1f	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  01f23	83 7d c0 00	 cmp	 DWORD PTR $T156328[ebp], 0
  01f27	74 2b		 je	 SHORT $L156330
  01f29	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  01f2c	51		 push	 ecx
  01f2d	83 ec 08	 sub	 esp, 8
  01f30	8b cc		 mov	 ecx, esp
  01f32	89 65 bc	 mov	 DWORD PTR $T156329[ebp], esp
  01f35	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01f38	52		 push	 edx
  01f39	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01f3e	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  01f41	8b 4d c0	 mov	 ecx, DWORD PTR $T156328[ebp]
  01f44	e8 00 00 00 00	 call	 ??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
  01f49	89 45 88	 mov	 DWORD PTR -120+[ebp], eax
  01f4c	8b 45 88	 mov	 eax, DWORD PTR -120+[ebp]
  01f4f	89 45 84	 mov	 DWORD PTR -124+[ebp], eax
  01f52	eb 07		 jmp	 SHORT $L156331
$L156330:
  01f54	c7 45 84 00 00
	00 00		 mov	 DWORD PTR -124+[ebp], 0
$L156331:
  01f5b	8b 4d 84	 mov	 ecx, DWORD PTR -124+[ebp]
  01f5e	89 4d c4	 mov	 DWORD PTR $T156327[ebp], ecx
  01f61	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01f65	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  01f68	8b 45 c4	 mov	 eax, DWORD PTR $T156327[ebp]
  01f6b	89 82 9c 00 00
	00		 mov	 DWORD PTR [edx+156], eax
  01f71	8b 4d c4	 mov	 ecx, DWORD PTR $T156327[ebp]
  01f74	89 4d c8	 mov	 DWORD PTR $T156326[ebp], ecx
  01f77	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01f7b	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01f7e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01f83	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01f87	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01f8a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01f8f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01f96	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01f99	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01f9e	8b 45 c8	 mov	 eax, DWORD PTR $T156326[ebp]
  01fa1	eb 55		 jmp	 SHORT $L149498
$L149520:

; 805  : 
; 806  : 	return CSkinWnd::MakeSkinCtrl( obj );

  01fa3	83 ec 08	 sub	 esp, 8
  01fa6	8b cc		 mov	 ecx, esp
  01fa8	89 65 b4	 mov	 DWORD PTR $T156333[ebp], esp
  01fab	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01fae	52		 push	 edx
  01faf	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01fb4	89 45 80	 mov	 DWORD PTR -128+[ebp], eax
  01fb7	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  01fba	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  01fbf	89 85 7c ff ff
	ff		 mov	 DWORD PTR -132+[ebp], eax
  01fc5	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR -132+[ebp]
  01fcb	89 45 b8	 mov	 DWORD PTR $T156332[ebp], eax
  01fce	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01fd2	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01fd5	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01fda	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01fde	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01fe1	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01fe6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01fed	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01ff0	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01ff5	8b 45 b8	 mov	 eax, DWORD PTR $T156332[ebp]
$L149498:

; 807  : }

  01ff8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01ffb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02002	8b e5		 mov	 esp, ebp
  02004	5d		 pop	 ebp
  02005	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L156334:
  001c4	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  001c7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  001cc	c3		 ret	 0
$L156335:
  001cd	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  001d0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  001d5	c3		 ret	 0
$L156336:
  001d6	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  001d9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  001de	c3		 ret	 0
$L156337:
  001df	8b 45 e0	 mov	 eax, DWORD PTR $T156312[ebp]
  001e2	50		 push	 eax
  001e3	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001e8	c3		 ret	 0
$L156339:
  001e9	8b 45 d0	 mov	 eax, DWORD PTR $T156320[ebp]
  001ec	50		 push	 eax
  001ed	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001f2	c3		 ret	 0
$L156341:
  001f3	8b 45 c0	 mov	 eax, DWORD PTR $T156328[ebp]
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001fc	59		 pop	 ecx
  001fd	c3		 ret	 0
$L156346:
  001fe	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156345
  00203	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CGenericDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CGenericDlg::MakeSkinCtrl
PUBLIC	??0CQuestDlg@@QAE@XZ				; CQuestDlg::CQuestDlg
PUBLIC	?CloseSelf@CQuestDlg@@UAEX_N@Z			; CQuestDlg::CloseSelf
PUBLIC	??_7CQuestDlg@@6B@				; CQuestDlg::`vftable'
PUBLIC	??_GCQuestDlg@@UAEPAXI@Z			; CQuestDlg::`scalar deleting destructor'
PUBLIC	??_ECQuestDlg@@UAEPAXI@Z			; CQuestDlg::`vector deleting destructor'
;	COMDAT ??_7CQuestDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CQuestDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CQuestDlg::`vftable'
	DD	FLAT:??_ECQuestDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CGenericDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CQuestDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CGenericDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
xdata$x	SEGMENT
$T156351 DD	019930520H
	DD	01H
	DD	FLAT:$T156353
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156353 DD	0ffffffffH
	DD	FLAT:$L156349
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??0CQuestDlg@@QAE@XZ PROC NEAR				; CQuestDlg::CQuestDlg

; 811  : CQuestDlg::CQuestDlg() : CGenericDlg() {

  02008	55		 push	 ebp
  02009	8b ec		 mov	 ebp, esp
  0200b	6a ff		 push	 -1
  0200d	68 00 00 00 00	 push	 $L156352
  02012	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02018	50		 push	 eax
  02019	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02020	51		 push	 ecx
  02021	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  02024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  02027	e8 00 00 00 00	 call	 ??0CGenericDlg@@QAE@XZ	; CGenericDlg::CGenericDlg
  0202c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  02033	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  02036	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CQuestDlg@@6B@ ; CQuestDlg::`vftable'

; 812  : 	if ( g_pQuests )

  0203c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pQuests@@3PAVCQuestDlg@@A, 0 ; g_pQuests
  02043	74 16		 je	 SHORT $L149533

; 813  : 		g_pQuests->CloseSelf();

  02045	6a 00		 push	 0
  02047	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pQuests@@3PAVCQuestDlg@@A ; g_pQuests
  0204d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0204f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pQuests@@3PAVCQuestDlg@@A ; g_pQuests
  02055	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L149533:

; 814  : 
; 815  : 	g_pQuests = this;

  0205b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0205e	a3 00 00 00 00	 mov	 DWORD PTR ?g_pQuests@@3PAVCQuestDlg@@A, eax ; g_pQuests

; 816  : }

  02063	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0206a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0206d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02077	8b e5		 mov	 esp, ebp
  02079	5d		 pop	 ebp
  0207a	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L156349:
  00208	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0020b	e8 00 00 00 00	 call	 ??1CGenericDlg@@UAE@XZ	; CGenericDlg::~CGenericDlg
  00210	c3		 ret	 0
$L156352:
  00211	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156351
  00216	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CQuestDlg@@QAE@XZ ENDP				; CQuestDlg::CQuestDlg
PUBLIC	??1CQuestDlg@@UAE@XZ				; CQuestDlg::~CQuestDlg
;	COMDAT ??_GCQuestDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCQuestDlg@@UAEPAXI@Z PROC NEAR			; CQuestDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CQuestDlg@@UAE@XZ	; CQuestDlg::~CQuestDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L149537
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L149537:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCQuestDlg@@UAEPAXI@Z ENDP				; CQuestDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CQuestDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CQuestDlg@@UAE@XZ PROC NEAR				; CQuestDlg::~CQuestDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGenericDlg@@UAE@XZ	; CGenericDlg::~CGenericDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CQuestDlg@@UAE@XZ ENDP				; CQuestDlg::~CQuestDlg
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?CloseSelf@CQuestDlg@@UAEX_N@Z PROC NEAR		; CQuestDlg::CloseSelf

; 820  : {

  0207b	55		 push	 ebp
  0207c	8b ec		 mov	 ebp, esp
  0207e	51		 push	 ecx
  0207f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 821  : 	g_pQuests = NULL;

  02082	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pQuests@@3PAVCQuestDlg@@A, 0 ; g_pQuests

; 822  : 
; 823  : 	CGenericDlg::CloseSelf();

  0208c	6a 00		 push	 0
  0208e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02091	e8 00 00 00 00	 call	 ?CloseSelf@CGenericDlg@@UAEX_N@Z ; CGenericDlg::CloseSelf

; 824  : }

  02096	8b e5		 mov	 esp, ebp
  02098	5d		 pop	 ebp
  02099	c2 04 00	 ret	 4
?CloseSelf@CQuestDlg@@UAEX_N@Z ENDP			; CQuestDlg::CloseSelf
_TEXT	ENDS
PUBLIC	??0CDeadDlg@@QAE@XZ				; CDeadDlg::CDeadDlg
PUBLIC	?MakeSkinCtrl@CDeadDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CDeadDlg::MakeSkinCtrl
PUBLIC	??_7CDeadDlg@@6B@				; CDeadDlg::`vftable'
PUBLIC	??_GCDeadDlg@@UAEPAXI@Z				; CDeadDlg::`scalar deleting destructor'
PUBLIC	??_ECDeadDlg@@UAEPAXI@Z				; CDeadDlg::`vector deleting destructor'
PUBLIC	??0CSCI_Script@@QAE@XZ				; CSCI_Script::CSCI_Script
EXTRN	?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinWnd::GetMessageMap
;	COMDAT ??_7CDeadDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CDeadDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CDeadDlg::`vftable'
	DD	FLAT:??_ECDeadDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CSkinWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CDeadDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
xdata$x	SEGMENT
$T156361 DD	019930520H
	DD	01H
	DD	FLAT:$T156363
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156363 DD	0ffffffffH
	DD	FLAT:$L156359
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??0CDeadDlg@@QAE@XZ PROC NEAR				; CDeadDlg::CDeadDlg

; 827  : CDeadDlg::CDeadDlg() {}

  0209c	55		 push	 ebp
  0209d	8b ec		 mov	 ebp, esp
  0209f	6a ff		 push	 -1
  020a1	68 00 00 00 00	 push	 $L156362
  020a6	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  020ac	50		 push	 eax
  020ad	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  020b4	51		 push	 ecx
  020b5	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  020b8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  020bb	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  020c0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  020c7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  020ca	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  020d0	e8 00 00 00 00	 call	 ??0CSCI_Script@@QAE@XZ	; CSCI_Script::CSCI_Script
  020d5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  020d8	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDeadDlg@@6B@ ; CDeadDlg::`vftable'
  020de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  020e5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  020e8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  020eb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  020f2	8b e5		 mov	 esp, ebp
  020f4	5d		 pop	 ebp
  020f5	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L156359:
  0021b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0021e	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00223	c3		 ret	 0
$L156362:
  00224	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156361
  00229	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CDeadDlg@@QAE@XZ ENDP				; CDeadDlg::CDeadDlg
PUBLIC	??1CDeadDlg@@UAE@XZ				; CDeadDlg::~CDeadDlg
;	COMDAT ??_GCDeadDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCDeadDlg@@UAEPAXI@Z PROC NEAR			; CDeadDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDeadDlg@@UAE@XZ	; CDeadDlg::~CDeadDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L149550
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L149550:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCDeadDlg@@UAEPAXI@Z ENDP				; CDeadDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CDeadDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CDeadDlg@@UAE@XZ PROC NEAR				; CDeadDlg::~CDeadDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CDeadDlg@@UAE@XZ ENDP				; CDeadDlg::~CDeadDlg
_TEXT	ENDS
PUBLIC	?Create@CDeadDlg@@QAEHVCSCI_Script@@@Z		; CDeadDlg::Create
EXTRN	?g_pSCIWnd@@3PAVCSCIWnd@@A:DWORD		; g_pSCIWnd
_DATA	SEGMENT
	ORG $+1
$SG149559 DB	'Death', 00H
	ORG $+2
$SG149560 DB	'Dlg_dead.skn', 00H
_DATA	ENDS
_TEXT	SEGMENT
_hScript$ = 8
_this$ = -24
_bCreated$ = -4
$T156368 = -20
?Create@CDeadDlg@@QAEHVCSCI_Script@@@Z PROC NEAR	; CDeadDlg::Create

; 831  : {

  020f6	55		 push	 ebp
  020f7	8b ec		 mov	 ebp, esp
  020f9	83 ec 18	 sub	 esp, 24			; 00000018H
  020fc	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 832  : 	m_hScript = hScript;

  020ff	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  02102	66 8b 4d 08	 mov	 cx, WORD PTR _hScript$[ebp]
  02106	66 89 88 94 00
	00 00		 mov	 WORD PTR [eax+148], cx

; 833  : 
; 834  : 	SetPriority( swPriGameModal );

  0210d	6a 07		 push	 7
  0210f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  02112	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 835  : 	SetTransient( false );

  02117	6a 00		 push	 0
  02119	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0211c	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 836  : 
; 837  : 	BOOL bCreated = CSkinWnd::CreatePopupChild( "Dlg_dead.skn", "Death", CRect( 0, 0, 0, 0 ), g_pMainWindow, FALSE );

  02121	6a 01		 push	 1
  02123	6a 00		 push	 0
  02125	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  0212b	52		 push	 edx
  0212c	6a 00		 push	 0
  0212e	6a 00		 push	 0
  02130	6a 00		 push	 0
  02132	6a 00		 push	 0
  02134	8d 4d ec	 lea	 ecx, DWORD PTR $T156368[ebp]
  02137	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  0213c	50		 push	 eax
  0213d	68 00 00 00 00	 push	 OFFSET FLAT:$SG149559
  02142	68 00 00 00 00	 push	 OFFSET FLAT:$SG149560
  02147	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0214a	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  0214f	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 838  : 
; 839  : 	if ( bCreated ) {

  02152	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  02156	74 18		 je	 SHORT $L149561

; 840  : 		CenterWindow( g_pSCIWnd );

  02158	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A ; g_pSCIWnd
  0215d	50		 push	 eax
  0215e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  02161	e8 00 00 00 00	 call	 ?CenterWindow@CWnd@@QAEXPAV1@@Z ; CWnd::CenterWindow

; 841  : 
; 842  : 		ShowWindow( SW_SHOW );

  02166	6a 05		 push	 5
  02168	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0216b	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L149561:

; 844  : 
; 845  : 	return bCreated;

  02170	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 846  : }

  02173	8b e5		 mov	 esp, ebp
  02175	5d		 pop	 ebp
  02176	c2 04 00	 ret	 4
?Create@CDeadDlg@@QAEHVCSCI_Script@@@Z ENDP		; CDeadDlg::Create
_TEXT	ENDS
PUBLIC	??0CPerformBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@VCSCI_Script@@@Z ; CPerformBtn::CPerformBtn
PUBLIC	??0CCueBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@VCSCI_Script@@@Z ; CCueBtn::CCueBtn
PUBLIC	??0CSCI_Script@@QAE@ABV0@@Z			; CSCI_Script::CSCI_Script
_DATA	SEGMENT
	ORG $+3
$SG149570 DB	'_', 00H
	ORG $+2
$SG149572 DB	'sh', 00H
	ORG $+1
$SG149581 DB	'gh', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T156395 DD	019930520H
	DD	05H
	DD	FLAT:$T156397
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156397 DD	0ffffffffH
	DD	FLAT:$L156386
	DD	00H
	DD	FLAT:$L156387
	DD	01H
	DD	FLAT:$L156388
	DD	02H
	DD	FLAT:$L156389
	DD	02H
	DD	FLAT:$L156391
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_this$ = -72
_name$ = -16
_id$ = -20
$T156370 = -24
$T156371 = -28
$T156372 = -32
$T156373 = -36
$T156374 = -40
$T156377 = -44
$T156378 = -48
$T156379 = -52
$T156380 = -56
$T156381 = -60
$T156384 = -64
$T156385 = -68
__$EHRec$ = -12
?MakeSkinCtrl@CDeadDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CDeadDlg::MakeSkinCtrl

; 850  : {

  02179	55		 push	 ebp
  0217a	8b ec		 mov	 ebp, esp
  0217c	6a ff		 push	 -1
  0217e	68 00 00 00 00	 push	 $L156396
  02183	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02189	50		 push	 eax
  0218a	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02191	83 ec 5c	 sub	 esp, 92			; 0000005cH
  02194	89 4d b8	 mov	 DWORD PTR _this$[ebp], ecx
  02197	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 851  : 	// the type of the control is specified by the left characters of the name up to the _
; 852  : 	CString name = obj.GetName();

  0219e	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  021a1	50		 push	 eax
  021a2	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  021a5	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  021aa	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 853  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  021ae	6a 00		 push	 0
  021b0	68 00 00 00 00	 push	 OFFSET FLAT:$SG149570
  021b5	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  021b8	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  021bd	50		 push	 eax
  021be	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  021c1	51		 push	 ecx
  021c2	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  021c5	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  021ca	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 854  : 
; 855  : 	if ( "sh" == id ) {

  021ce	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  021d1	52		 push	 edx
  021d2	68 00 00 00 00	 push	 OFFSET FLAT:$SG149572
  021d7	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  021dc	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  021e1	85 c0		 test	 eax, eax
  021e3	0f 84 9c 00 00
	00		 je	 $L149571

; 856  : 		return new CPerformBtn( obj, this, m_hScript );

  021e9	6a 18		 push	 24			; 00000018H
  021eb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  021f0	83 c4 04	 add	 esp, 4
  021f3	89 45 e0	 mov	 DWORD PTR $T156372[ebp], eax
  021f6	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  021fa	83 7d e0 00	 cmp	 DWORD PTR $T156372[ebp], 0
  021fe	74 3f		 je	 SHORT $L156375
  02200	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  02203	05 94 00 00 00	 add	 eax, 148		; 00000094H
  02208	51		 push	 ecx
  02209	8b cc		 mov	 ecx, esp
  0220b	89 65 dc	 mov	 DWORD PTR $T156373[ebp], esp
  0220e	50		 push	 eax
  0220f	e8 00 00 00 00	 call	 ??0CSCI_Script@@QAE@ABV0@@Z ; CSCI_Script::CSCI_Script
  02214	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  02217	51		 push	 ecx
  02218	83 ec 08	 sub	 esp, 8
  0221b	8b cc		 mov	 ecx, esp
  0221d	89 65 d8	 mov	 DWORD PTR $T156374[ebp], esp
  02220	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  02223	52		 push	 edx
  02224	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02229	89 45 b4	 mov	 DWORD PTR -76+[ebp], eax
  0222c	8b 4d e0	 mov	 ecx, DWORD PTR $T156372[ebp]
  0222f	e8 00 00 00 00	 call	 ??0CPerformBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@VCSCI_Script@@@Z ; CPerformBtn::CPerformBtn
  02234	89 45 b0	 mov	 DWORD PTR -80+[ebp], eax
  02237	8b 45 b0	 mov	 eax, DWORD PTR -80+[ebp]
  0223a	89 45 ac	 mov	 DWORD PTR -84+[ebp], eax
  0223d	eb 07		 jmp	 SHORT $L156376
$L156375:
  0223f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR -84+[ebp], 0
$L156376:
  02246	8b 4d ac	 mov	 ecx, DWORD PTR -84+[ebp]
  02249	89 4d e4	 mov	 DWORD PTR $T156371[ebp], ecx
  0224c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02250	8b 55 e4	 mov	 edx, DWORD PTR $T156371[ebp]
  02253	89 55 e8	 mov	 DWORD PTR $T156370[ebp], edx
  02256	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0225a	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0225d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02262	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02266	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  02269	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0226e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02275	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02278	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0227d	8b 45 e8	 mov	 eax, DWORD PTR $T156370[ebp]
  02280	e9 06 01 00 00	 jmp	 $L149565
$L149571:

; 858  : 
; 859  : 	if ( "gh" == id ) {

  02285	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  02288	50		 push	 eax
  02289	68 00 00 00 00	 push	 OFFSET FLAT:$SG149581
  0228e	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  02293	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02298	85 c0		 test	 eax, eax
  0229a	0f 84 9c 00 00
	00		 je	 $L149580

; 860  : 		return new CCueBtn( obj, this, m_hScript );

  022a0	6a 18		 push	 24			; 00000018H
  022a2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  022a7	83 c4 04	 add	 esp, 4
  022aa	89 45 cc	 mov	 DWORD PTR $T156379[ebp], eax
  022ad	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  022b1	83 7d cc 00	 cmp	 DWORD PTR $T156379[ebp], 0
  022b5	74 42		 je	 SHORT $L156382
  022b7	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  022ba	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  022c0	51		 push	 ecx
  022c1	8b d4		 mov	 edx, esp
  022c3	89 65 c8	 mov	 DWORD PTR $T156380[ebp], esp
  022c6	51		 push	 ecx
  022c7	8b ca		 mov	 ecx, edx
  022c9	e8 00 00 00 00	 call	 ??0CSCI_Script@@QAE@ABV0@@Z ; CSCI_Script::CSCI_Script
  022ce	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  022d1	50		 push	 eax
  022d2	83 ec 08	 sub	 esp, 8
  022d5	8b cc		 mov	 ecx, esp
  022d7	89 65 c4	 mov	 DWORD PTR $T156381[ebp], esp
  022da	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  022dd	52		 push	 edx
  022de	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  022e3	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  022e6	8b 4d cc	 mov	 ecx, DWORD PTR $T156379[ebp]
  022e9	e8 00 00 00 00	 call	 ??0CCueBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@VCSCI_Script@@@Z ; CCueBtn::CCueBtn
  022ee	89 45 a4	 mov	 DWORD PTR -92+[ebp], eax
  022f1	8b 45 a4	 mov	 eax, DWORD PTR -92+[ebp]
  022f4	89 45 a0	 mov	 DWORD PTR -96+[ebp], eax
  022f7	eb 07		 jmp	 SHORT $L156383
$L156382:
  022f9	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR -96+[ebp], 0
$L156383:
  02300	8b 4d a0	 mov	 ecx, DWORD PTR -96+[ebp]
  02303	89 4d d0	 mov	 DWORD PTR $T156378[ebp], ecx
  02306	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0230a	8b 55 d0	 mov	 edx, DWORD PTR $T156378[ebp]
  0230d	89 55 d4	 mov	 DWORD PTR $T156377[ebp], edx
  02310	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02314	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  02317	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0231c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02320	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  02323	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02328	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0232f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02332	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02337	8b 45 d4	 mov	 eax, DWORD PTR $T156377[ebp]
  0233a	eb 4f		 jmp	 SHORT $L149565
$L149580:

; 862  : 
; 863  : 	return CSkinWnd::MakeSkinCtrl( obj );

  0233c	83 ec 08	 sub	 esp, 8
  0233f	8b cc		 mov	 ecx, esp
  02341	89 65 bc	 mov	 DWORD PTR $T156385[ebp], esp
  02344	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  02347	50		 push	 eax
  02348	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0234d	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  02350	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  02353	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  02358	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  0235b	8b 4d 98	 mov	 ecx, DWORD PTR -104+[ebp]
  0235e	89 4d c0	 mov	 DWORD PTR $T156384[ebp], ecx
  02361	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02365	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  02368	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0236d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02371	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  02374	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02379	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02380	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02383	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02388	8b 45 c0	 mov	 eax, DWORD PTR $T156384[ebp]
$L149565:

; 864  : }

  0238b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0238e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02395	8b e5		 mov	 esp, ebp
  02397	5d		 pop	 ebp
  02398	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L156386:
  0022e	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00231	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00236	c3		 ret	 0
$L156387:
  00237	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0023a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0023f	c3		 ret	 0
$L156388:
  00240	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00243	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00248	c3		 ret	 0
$L156389:
  00249	8b 45 e0	 mov	 eax, DWORD PTR $T156372[ebp]
  0024c	50		 push	 eax
  0024d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00252	59		 pop	 ecx
  00253	c3		 ret	 0
$L156391:
  00254	8b 45 cc	 mov	 eax, DWORD PTR $T156379[ebp]
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0025d	59		 pop	 ecx
  0025e	c3		 ret	 0
$L156396:
  0025f	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156395
  00264	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CDeadDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CDeadDlg::MakeSkinCtrl
;	COMDAT ??0CSCI_Script@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Script@@QAE@ABV0@@Z PROC NEAR			; CSCI_Script::CSCI_Script, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Script@@QAE@ABV0@@Z ENDP			; CSCI_Script::CSCI_Script
_TEXT	ENDS
PUBLIC	?OnActivate@CPerformBtn@@UAEXFF@Z		; CPerformBtn::OnActivate
PUBLIC	??_7CPerformBtn@@6B@				; CPerformBtn::`vftable'
PUBLIC	??_GCPerformBtn@@UAEPAXI@Z			; CPerformBtn::`scalar deleting destructor'
PUBLIC	??_ECPerformBtn@@UAEPAXI@Z			; CPerformBtn::`vector deleting destructor'
;	COMDAT ??_7CPerformBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CPerformBtn@@6B@ DD FLAT:??_ECPerformBtn@@UAEPAXI@Z	; CPerformBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CPerformBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T156405 DD	019930520H
	DD	02H
	DD	FLAT:$T156407
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156407 DD	0ffffffffH
	DD	FLAT:$L156401
	DD	00H
	DD	FLAT:$L156403
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_hScript$ = 20
_this$ = -20
$T156400 = -16
__$EHRec$ = -12
??0CPerformBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@VCSCI_Script@@@Z PROC NEAR ; CPerformBtn::CPerformBtn

; 868  : 	m_hScript ( hScript ) {}

  0239b	55		 push	 ebp
  0239c	8b ec		 mov	 ebp, esp
  0239e	6a ff		 push	 -1
  023a0	68 00 00 00 00	 push	 $L156406
  023a5	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  023ab	50		 push	 eax
  023ac	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  023b3	83 ec 10	 sub	 esp, 16			; 00000010H
  023b6	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  023b9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  023c0	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  023c3	50		 push	 eax
  023c4	83 ec 08	 sub	 esp, 8
  023c7	8b cc		 mov	 ecx, esp
  023c9	89 65 f0	 mov	 DWORD PTR $T156400[ebp], esp
  023cc	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  023cf	52		 push	 edx
  023d0	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  023d5	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  023d8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  023db	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  023e0	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  023e3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  023e7	8d 45 14	 lea	 eax, DWORD PTR _hScript$[ebp]
  023ea	50		 push	 eax
  023eb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  023ee	83 c1 14	 add	 ecx, 20			; 00000014H
  023f1	e8 00 00 00 00	 call	 ??0CSCI_Script@@QAE@ABV0@@Z ; CSCI_Script::CSCI_Script
  023f6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  023f9	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CPerformBtn@@6B@ ; CPerformBtn::`vftable'
  023ff	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02406	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02409	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0240e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  02411	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02414	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0241b	8b e5		 mov	 esp, ebp
  0241d	5d		 pop	 ebp
  0241e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L156401:
  00269	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0026c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00271	c3		 ret	 0
$L156403:
  00272	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00275	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0027a	c3		 ret	 0
$L156406:
  0027b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156405
  00280	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CPerformBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@VCSCI_Script@@@Z ENDP ; CPerformBtn::CPerformBtn
PUBLIC	??1CPerformBtn@@UAE@XZ				; CPerformBtn::~CPerformBtn
;	COMDAT ??_GCPerformBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCPerformBtn@@UAEPAXI@Z PROC NEAR			; CPerformBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CPerformBtn@@UAE@XZ	; CPerformBtn::~CPerformBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149604
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149604:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCPerformBtn@@UAEPAXI@Z ENDP				; CPerformBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CPerformBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CPerformBtn@@UAE@XZ PROC NEAR			; CPerformBtn::~CPerformBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CPerformBtn@@UAE@XZ ENDP				; CPerformBtn::~CPerformBtn
_TEXT	ENDS
EXTRN	?perform@CSCI_Object@@QAEXF@Z:NEAR		; CSCI_Object::perform
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CPerformBtn@@UAEXFF@Z PROC NEAR		; CPerformBtn::OnActivate

; 872  : {

  02421	55		 push	 ebp
  02422	8b ec		 mov	 ebp, esp
  02424	51		 push	 ecx
  02425	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 873  : 	m_hScript.perform( 0 );

  02428	6a 00		 push	 0
  0242a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0242d	83 c1 14	 add	 ecx, 20			; 00000014H
  02430	e8 00 00 00 00	 call	 ?perform@CSCI_Object@@QAEXF@Z ; CSCI_Object::perform

; 874  : 
; 875  : 	if ( m_pParentWnd )

  02435	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02438	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0243c	74 16		 je	 SHORT $L149612

; 876  : 		m_pParentWnd->CloseSelf();

  0243e	6a 00		 push	 0
  02440	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02443	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  02446	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02449	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0244c	8b 10		 mov	 edx, DWORD PTR [eax]
  0244e	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L149612:

; 877  : }

  02454	8b e5		 mov	 esp, ebp
  02456	5d		 pop	 ebp
  02457	c2 08 00	 ret	 8
?OnActivate@CPerformBtn@@UAEXFF@Z ENDP			; CPerformBtn::OnActivate
_TEXT	ENDS
PUBLIC	?OnActivate@CCueBtn@@UAEXFF@Z			; CCueBtn::OnActivate
PUBLIC	??_7CCueBtn@@6B@				; CCueBtn::`vftable'
PUBLIC	??_GCCueBtn@@UAEPAXI@Z				; CCueBtn::`scalar deleting destructor'
PUBLIC	??_ECCueBtn@@UAEPAXI@Z				; CCueBtn::`vector deleting destructor'
;	COMDAT ??_7CCueBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CCueBtn@@6B@ DD FLAT:??_ECCueBtn@@UAEPAXI@Z		; CCueBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CCueBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T156418 DD	019930520H
	DD	02H
	DD	FLAT:$T156420
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156420 DD	0ffffffffH
	DD	FLAT:$L156414
	DD	00H
	DD	FLAT:$L156416
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_hScript$ = 20
_this$ = -20
$T156413 = -16
__$EHRec$ = -12
??0CCueBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@VCSCI_Script@@@Z PROC NEAR ; CCueBtn::CCueBtn

; 881  : 	m_hScript(hScript) {}

  0245a	55		 push	 ebp
  0245b	8b ec		 mov	 ebp, esp
  0245d	6a ff		 push	 -1
  0245f	68 00 00 00 00	 push	 $L156419
  02464	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0246a	50		 push	 eax
  0246b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02472	83 ec 10	 sub	 esp, 16			; 00000010H
  02475	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  02478	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0247f	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  02482	50		 push	 eax
  02483	83 ec 08	 sub	 esp, 8
  02486	8b cc		 mov	 ecx, esp
  02488	89 65 f0	 mov	 DWORD PTR $T156413[ebp], esp
  0248b	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0248e	52		 push	 edx
  0248f	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02494	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  02497	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0249a	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  0249f	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  024a2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  024a6	8d 45 14	 lea	 eax, DWORD PTR _hScript$[ebp]
  024a9	50		 push	 eax
  024aa	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  024ad	83 c1 14	 add	 ecx, 20			; 00000014H
  024b0	e8 00 00 00 00	 call	 ??0CSCI_Script@@QAE@ABV0@@Z ; CSCI_Script::CSCI_Script
  024b5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  024b8	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CCueBtn@@6B@ ; CCueBtn::`vftable'
  024be	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  024c5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  024c8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  024cd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  024d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  024d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  024da	8b e5		 mov	 esp, ebp
  024dc	5d		 pop	 ebp
  024dd	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L156414:
  00285	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00288	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0028d	c3		 ret	 0
$L156416:
  0028e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00291	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  00296	c3		 ret	 0
$L156419:
  00297	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156418
  0029c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CCueBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@VCSCI_Script@@@Z ENDP ; CCueBtn::CCueBtn
PUBLIC	??1CCueBtn@@UAE@XZ				; CCueBtn::~CCueBtn
;	COMDAT ??_GCCueBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCCueBtn@@UAEPAXI@Z PROC NEAR			; CCueBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CCueBtn@@UAE@XZ	; CCueBtn::~CCueBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149623
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149623:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCCueBtn@@UAEPAXI@Z ENDP				; CCueBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CCueBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CCueBtn@@UAE@XZ PROC NEAR				; CCueBtn::~CCueBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CCueBtn@@UAE@XZ ENDP					; CCueBtn::~CCueBtn
_TEXT	ENDS
EXTRN	?cue@CSCI_Script@@QAEXXZ:NEAR			; CSCI_Script::cue
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CCueBtn@@UAEXFF@Z PROC NEAR			; CCueBtn::OnActivate

; 885  : {

  024e0	55		 push	 ebp
  024e1	8b ec		 mov	 ebp, esp
  024e3	51		 push	 ecx
  024e4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 886  : 	m_hScript.cue();

  024e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  024ea	83 c1 14	 add	 ecx, 20			; 00000014H
  024ed	e8 00 00 00 00	 call	 ?cue@CSCI_Script@@QAEXXZ ; CSCI_Script::cue

; 887  : 
; 888  : 	if ( m_pParentWnd )

  024f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  024f5	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  024f9	74 16		 je	 SHORT $L149631

; 889  : 		m_pParentWnd->CloseSelf();

  024fb	6a 00		 push	 0
  024fd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02500	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  02503	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02506	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  02509	8b 10		 mov	 edx, DWORD PTR [eax]
  0250b	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L149631:

; 890  : }

  02511	8b e5		 mov	 esp, ebp
  02513	5d		 pop	 ebp
  02514	c2 08 00	 ret	 8
?OnActivate@CCueBtn@@UAEXFF@Z ENDP			; CCueBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CLeaveBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CLeaveBtn::CLeaveBtn
PUBLIC	?OnActivate@CLeaveBtn@@UAEXFF@Z			; CLeaveBtn::OnActivate
PUBLIC	??_7CLeaveBtn@@6B@				; CLeaveBtn::`vftable'
PUBLIC	??_GCLeaveBtn@@UAEPAXI@Z			; CLeaveBtn::`scalar deleting destructor'
PUBLIC	??_ECLeaveBtn@@UAEPAXI@Z			; CLeaveBtn::`vector deleting destructor'
;	COMDAT ??_7CLeaveBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CLeaveBtn@@6B@ DD FLAT:??_ECLeaveBtn@@UAEPAXI@Z	; CLeaveBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CLeaveBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T156431 DD	019930520H
	DD	01H
	DD	FLAT:$T156433
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156433 DD	0ffffffffH
	DD	FLAT:$L156427
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T156426 = -16
__$EHRec$ = -12
??0CLeaveBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CLeaveBtn::CLeaveBtn

; 893  : CLeaveBtn::CLeaveBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn( obj, pParent ) {}

  02517	55		 push	 ebp
  02518	8b ec		 mov	 ebp, esp
  0251a	6a ff		 push	 -1
  0251c	68 00 00 00 00	 push	 $L156432
  02521	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02527	50		 push	 eax
  02528	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0252f	83 ec 10	 sub	 esp, 16			; 00000010H
  02532	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  02535	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0253c	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0253f	50		 push	 eax
  02540	83 ec 08	 sub	 esp, 8
  02543	8b cc		 mov	 ecx, esp
  02545	89 65 f0	 mov	 DWORD PTR $T156426[ebp], esp
  02548	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0254b	52		 push	 edx
  0254c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02551	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  02554	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  02557	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  0255c	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0255f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  02562	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CLeaveBtn@@6B@ ; CLeaveBtn::`vftable'
  02568	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0256f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02572	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02577	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0257a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0257d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02584	8b e5		 mov	 esp, ebp
  02586	5d		 pop	 ebp
  02587	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L156427:
  002a1	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  002a4	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002a9	c3		 ret	 0
$L156432:
  002aa	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156431
  002af	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CLeaveBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CLeaveBtn::CLeaveBtn
PUBLIC	??1CLeaveBtn@@UAE@XZ				; CLeaveBtn::~CLeaveBtn
;	COMDAT ??_GCLeaveBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCLeaveBtn@@UAEPAXI@Z PROC NEAR			; CLeaveBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CLeaveBtn@@UAE@XZ	; CLeaveBtn::~CLeaveBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149641
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149641:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCLeaveBtn@@UAEPAXI@Z ENDP				; CLeaveBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CLeaveBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CLeaveBtn@@UAE@XZ PROC NEAR				; CLeaveBtn::~CLeaveBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CLeaveBtn@@UAE@XZ ENDP				; CLeaveBtn::~CLeaveBtn
_TEXT	ENDS
EXTRN	__imp__exit:NEAR
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CLeaveBtn@@UAEXFF@Z PROC NEAR		; CLeaveBtn::OnActivate

; 897  : {

  0258a	55		 push	 ebp
  0258b	8b ec		 mov	 ebp, esp
  0258d	51		 push	 ecx
  0258e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 898  : 	exit( 0 );

  02591	6a 00		 push	 0
  02593	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L149648:

; 899  : }

  02599	8b e5		 mov	 esp, ebp
  0259b	5d		 pop	 ebp
  0259c	c2 08 00	 ret	 8
?OnActivate@CLeaveBtn@@UAEXFF@Z ENDP			; CLeaveBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CNetworkErrorDlg@@QAE@XZ			; CNetworkErrorDlg::CNetworkErrorDlg
PUBLIC	?CloseSelf@CNetworkErrorDlg@@UAEX_N@Z		; CNetworkErrorDlg::CloseSelf
PUBLIC	?MakeSkinCtrl@CNetworkErrorDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CNetworkErrorDlg::MakeSkinCtrl
PUBLIC	?GetProcessEvents@CNetworkErrorDlg@@UAE_NXZ	; CNetworkErrorDlg::GetProcessEvents
PUBLIC	??_7CNetworkErrorDlg@@6B@			; CNetworkErrorDlg::`vftable'
PUBLIC	??_GCNetworkErrorDlg@@UAEPAXI@Z			; CNetworkErrorDlg::`scalar deleting destructor'
PUBLIC	??_ECNetworkErrorDlg@@UAEPAXI@Z			; CNetworkErrorDlg::`vector deleting destructor'
;	COMDAT ??_7CNetworkErrorDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.cpp
CONST	SEGMENT
??_7CNetworkErrorDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CNetworkErrorDlg::`vftable'
	DD	FLAT:??_ECNetworkErrorDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CNetworkErrorDlg@@UAE_NXZ
	DD	FLAT:?CloseSelf@CNetworkErrorDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CNetworkErrorDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CNetworkErrorDlg@@QAE@XZ PROC NEAR			; CNetworkErrorDlg::CNetworkErrorDlg

; 902  : {

  0259f	55		 push	 ebp
  025a0	8b ec		 mov	 ebp, esp
  025a2	51		 push	 ecx
  025a3	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  025a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  025a9	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  025ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  025b1	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CNetworkErrorDlg@@6B@ ; CNetworkErrorDlg::`vftable'

; 903  : 	m_pPrompt = NULL;

  025b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  025ba	c7 81 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+148], 0

; 904  : 
; 905  : 	g_pNetworkError = this;

  025c4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  025c7	89 15 00 00 00
	00		 mov	 DWORD PTR ?g_pNetworkError@@3PAVCNetworkErrorDlg@@A, edx ; g_pNetworkError

; 906  : }

  025cd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  025d0	8b e5		 mov	 esp, ebp
  025d2	5d		 pop	 ebp
  025d3	c3		 ret	 0
??0CNetworkErrorDlg@@QAE@XZ ENDP			; CNetworkErrorDlg::CNetworkErrorDlg
_TEXT	ENDS
PUBLIC	??1CNetworkErrorDlg@@UAE@XZ			; CNetworkErrorDlg::~CNetworkErrorDlg
;	COMDAT ??_GCNetworkErrorDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCNetworkErrorDlg@@UAEPAXI@Z PROC NEAR		; CNetworkErrorDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CNetworkErrorDlg@@UAE@XZ ; CNetworkErrorDlg::~CNetworkErrorDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L149655
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L149655:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCNetworkErrorDlg@@UAEPAXI@Z ENDP			; CNetworkErrorDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CNetworkErrorDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CNetworkErrorDlg@@UAE@XZ PROC NEAR			; CNetworkErrorDlg::~CNetworkErrorDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CNetworkErrorDlg@@UAE@XZ ENDP			; CNetworkErrorDlg::~CNetworkErrorDlg
_TEXT	ENDS
_TEXT	SEGMENT
_bTransient$ = 8
_this$ = -4
?CloseSelf@CNetworkErrorDlg@@UAEX_N@Z PROC NEAR		; CNetworkErrorDlg::CloseSelf

; 910  : {

  025d4	55		 push	 ebp
  025d5	8b ec		 mov	 ebp, esp
  025d7	51		 push	 ecx
  025d8	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 911  : 	g_pNetworkError = NULL;

  025db	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pNetworkError@@3PAVCNetworkErrorDlg@@A, 0 ; g_pNetworkError

; 912  : 
; 913  : 	CSkinWnd::CloseSelf( bTransient );

  025e5	8a 45 08	 mov	 al, BYTE PTR _bTransient$[ebp]
  025e8	50		 push	 eax
  025e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  025ec	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 914  : }

  025f1	8b e5		 mov	 esp, ebp
  025f3	5d		 pop	 ebp
  025f4	c2 04 00	 ret	 4
?CloseSelf@CNetworkErrorDlg@@UAEX_N@Z ENDP		; CNetworkErrorDlg::CloseSelf
_TEXT	ENDS
PUBLIC	?Create@CNetworkErrorDlg@@QAEHXZ		; CNetworkErrorDlg::Create
_DATA	SEGMENT
	ORG $+1
$SG149667 DB	'Possible Network Error', 00H
	ORG $+1
$SG149668 DB	'Dlg_choice.skn', 00H
	ORG $+1
$SG149671 DB	'bn_Button00', 00H
$SG149673 DB	'Wait', 00H
	ORG $+3
$SG149674 DB	'bn_Button01', 00H
$SG149676 DB	'Exit', 00H
	ORG $+3
$SG149677 DB	'The Realm is not receiving any response from the server.'
	DB	'  You may continue to wait for a response or exit the game.', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -28
_bCreated$ = -4
_pCtrl$149670 = -8
$T156445 = -24
?Create@CNetworkErrorDlg@@QAEHXZ PROC NEAR		; CNetworkErrorDlg::Create

; 918  : {

  025f7	55		 push	 ebp
  025f8	8b ec		 mov	 ebp, esp
  025fa	83 ec 1c	 sub	 esp, 28			; 0000001cH
  025fd	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 919  : 	SetTransient( false );

  02600	6a 00		 push	 0
  02602	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  02605	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 920  : 	SetPriority( swPriDefault );

  0260a	6a 01		 push	 1
  0260c	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0260f	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 921  : 
; 922  : 	BOOL bCreated = CSkinWnd::CreatePopupChild ( "Dlg_choice.skn", "Possible Network Error", CRect( 0, 0, 0, 0 ), g_pMainWindow, FALSE );

  02614	6a 01		 push	 1
  02616	6a 00		 push	 0
  02618	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  0261d	50		 push	 eax
  0261e	6a 00		 push	 0
  02620	6a 00		 push	 0
  02622	6a 00		 push	 0
  02624	6a 00		 push	 0
  02626	8d 4d e8	 lea	 ecx, DWORD PTR $T156445[ebp]
  02629	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  0262e	50		 push	 eax
  0262f	68 00 00 00 00	 push	 OFFSET FLAT:$SG149667
  02634	68 00 00 00 00	 push	 OFFSET FLAT:$SG149668
  02639	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0263c	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  02641	89 45 fc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 923  : 
; 924  : 	if ( bCreated ) {

  02644	83 7d fc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  02648	74 78		 je	 SHORT $L149669

; 925  : 		CSkinCtrl* pCtrl = FindControl( "bn_Button00" );

  0264a	68 00 00 00 00	 push	 OFFSET FLAT:$SG149671
  0264f	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  02652	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  02657	89 45 f8	 mov	 DWORD PTR _pCtrl$149670[ebp], eax

; 926  : 		assert( NULL != pCtrl );
; 927  : 
; 928  : 		pCtrl->SetText( "Wait" );

  0265a	68 00 00 00 00	 push	 OFFSET FLAT:$SG149673
  0265f	8b 4d f8	 mov	 ecx, DWORD PTR _pCtrl$149670[ebp]
  02662	51		 push	 ecx
  02663	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  02668	83 c4 08	 add	 esp, 8

; 929  : 
; 930  : 		pCtrl = FindControl( "bn_Button01" );

  0266b	68 00 00 00 00	 push	 OFFSET FLAT:$SG149674
  02670	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  02673	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  02678	89 45 f8	 mov	 DWORD PTR _pCtrl$149670[ebp], eax

; 931  : 		assert( NULL != pCtrl );
; 932  : 
; 933  : 		pCtrl->SetText( "Exit" );

  0267b	68 00 00 00 00	 push	 OFFSET FLAT:$SG149676
  02680	8b 55 f8	 mov	 edx, DWORD PTR _pCtrl$149670[ebp]
  02683	52		 push	 edx
  02684	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  02689	83 c4 08	 add	 esp, 8

; 934  : 
; 935  : 		m_pPrompt->CSkinObj::Cut();

  0268c	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0268f	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  02695	83 c1 60	 add	 ecx, 96			; 00000060H
  02698	e8 00 00 00 00	 call	 ?Cut@CSkinObj@@QAEHXZ	; CSkinObj::Cut

; 936  : 		m_pPrompt->SetText( "The Realm is not receiving any response from the server.  You may continue to wait for a response or exit the game." );

  0269d	68 00 00 00 00	 push	 OFFSET FLAT:$SG149677
  026a2	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  026a5	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  026ab	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 937  : 
; 938  : 		CenterInParent();

  026b0	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  026b3	e8 00 00 00 00	 call	 ?CenterInParent@CSkinWnd@@QAEXXZ ; CSkinWnd::CenterInParent

; 939  : 		ShowWindow( SW_SHOW );

  026b8	6a 05		 push	 5
  026ba	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  026bd	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L149669:

; 941  : 
; 942  : 	return bCreated;

  026c2	8b 45 fc	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 943  : }

  026c5	8b e5		 mov	 esp, ebp
  026c7	5d		 pop	 ebp
  026c8	c3		 ret	 0
?Create@CNetworkErrorDlg@@QAEHXZ ENDP			; CNetworkErrorDlg::Create
_TEXT	ENDS
EXTRN	??0COkBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR	; COkBtn::COkBtn
_DATA	SEGMENT
$SG149686 DB	'_', 00H
	ORG $+2
$SG149688 DB	'bn', 00H
	ORG $+1
$SG149692 DB	'00', 00H
	ORG $+1
$SG149700 DB	'01', 00H
	ORG $+1
$SG149708 DB	'prompt', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T156481 DD	019930520H
	DD	07H
	DD	FLAT:$T156483
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156483 DD	0ffffffffH
	DD	FLAT:$L156469
	DD	00H
	DD	FLAT:$L156470
	DD	01H
	DD	FLAT:$L156471
	DD	02H
	DD	FLAT:$L156472
	DD	03H
	DD	FLAT:$L156473
	DD	03H
	DD	FLAT:$L156475
	DD	02H
	DD	FLAT:$L156477
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_this$ = -84
_name$ = -16
_id$ = -20
_sRight$149689 = -24
$T156447 = -28
$T156448 = -32
$T156449 = -36
$T156450 = -40
$T156453 = -44
$T156454 = -48
$T156455 = -52
$T156456 = -56
$T156459 = -60
$T156460 = -64
$T156461 = -68
$T156464 = -72
$T156467 = -76
$T156468 = -80
__$EHRec$ = -12
?MakeSkinCtrl@CNetworkErrorDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CNetworkErrorDlg::MakeSkinCtrl

; 947  : {

  026c9	55		 push	 ebp
  026ca	8b ec		 mov	 ebp, esp
  026cc	6a ff		 push	 -1
  026ce	68 00 00 00 00	 push	 $L156482
  026d3	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  026d9	50		 push	 eax
  026da	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  026e1	83 ec 78	 sub	 esp, 120		; 00000078H
  026e4	89 4d ac	 mov	 DWORD PTR _this$[ebp], ecx
  026e7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 948  : 	// the type of the control is specified by the left characters of the name up to the _
; 949  : 	CString name = obj.GetName();

  026ee	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  026f1	50		 push	 eax
  026f2	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  026f5	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  026fa	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 950  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  026fe	6a 00		 push	 0
  02700	68 00 00 00 00	 push	 OFFSET FLAT:$SG149686
  02705	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  02708	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  0270d	50		 push	 eax
  0270e	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  02711	51		 push	 ecx
  02712	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  02715	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  0271a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 951  : 
; 952  : 	// Make a SCI button
; 953  : 	if ( "bn" == id ) {

  0271e	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  02721	52		 push	 edx
  02722	68 00 00 00 00	 push	 OFFSET FLAT:$SG149688
  02727	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  0272c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02731	85 c0		 test	 eax, eax
  02733	0f 84 7c 01 00
	00		 je	 $L149687

; 954  : 		CString sRight = name.Right( 2 );

  02739	6a 02		 push	 2
  0273b	8d 45 e8	 lea	 eax, DWORD PTR _sRight$149689[ebp]
  0273e	50		 push	 eax
  0273f	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  02742	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  02747	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 955  : 
; 956  : 		if ( sRight == "00" ) {

  0274b	68 00 00 00 00	 push	 OFFSET FLAT:$SG149692
  02750	8d 4d e8	 lea	 ecx, DWORD PTR _sRight$149689[ebp]
  02753	51		 push	 ecx
  02754	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02759	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0275e	85 c0		 test	 eax, eax
  02760	0f 84 94 00 00
	00		 je	 $L149691

; 957  : 			return new COkBtn( obj, this );

  02766	6a 14		 push	 20			; 00000014H
  02768	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0276d	83 c4 04	 add	 esp, 4
  02770	89 45 dc	 mov	 DWORD PTR $T156449[ebp], eax
  02773	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  02777	83 7d dc 00	 cmp	 DWORD PTR $T156449[ebp], 0
  0277b	74 2b		 je	 SHORT $L156451
  0277d	8b 55 ac	 mov	 edx, DWORD PTR _this$[ebp]
  02780	52		 push	 edx
  02781	83 ec 08	 sub	 esp, 8
  02784	8b cc		 mov	 ecx, esp
  02786	89 65 d8	 mov	 DWORD PTR $T156450[ebp], esp
  02789	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  0278c	50		 push	 eax
  0278d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02792	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  02795	8b 4d dc	 mov	 ecx, DWORD PTR $T156449[ebp]
  02798	e8 00 00 00 00	 call	 ??0COkBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; COkBtn::COkBtn
  0279d	89 45 a4	 mov	 DWORD PTR -92+[ebp], eax
  027a0	8b 4d a4	 mov	 ecx, DWORD PTR -92+[ebp]
  027a3	89 4d a0	 mov	 DWORD PTR -96+[ebp], ecx
  027a6	eb 07		 jmp	 SHORT $L156452
$L156451:
  027a8	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR -96+[ebp], 0
$L156452:
  027af	8b 55 a0	 mov	 edx, DWORD PTR -96+[ebp]
  027b2	89 55 e0	 mov	 DWORD PTR $T156448[ebp], edx
  027b5	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  027b9	8b 45 e0	 mov	 eax, DWORD PTR $T156448[ebp]
  027bc	89 45 e4	 mov	 DWORD PTR $T156447[ebp], eax
  027bf	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  027c3	8d 4d e8	 lea	 ecx, DWORD PTR _sRight$149689[ebp]
  027c6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  027cb	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  027cf	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  027d2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  027d7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  027db	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  027de	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  027e3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  027ea	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  027ed	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  027f2	8b 45 e4	 mov	 eax, DWORD PTR $T156447[ebp]
  027f5	e9 f0 01 00 00	 jmp	 $L149681
$L149691:

; 959  : 
; 960  : 		if ( sRight == "01" ) {

  027fa	68 00 00 00 00	 push	 OFFSET FLAT:$SG149700
  027ff	8d 4d e8	 lea	 ecx, DWORD PTR _sRight$149689[ebp]
  02802	51		 push	 ecx
  02803	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02808	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0280d	85 c0		 test	 eax, eax
  0280f	0f 84 94 00 00
	00		 je	 $L149699

; 961  : 			return new CLeaveBtn( obj, this );

  02815	6a 14		 push	 20			; 00000014H
  02817	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0281c	83 c4 04	 add	 esp, 4
  0281f	89 45 cc	 mov	 DWORD PTR $T156455[ebp], eax
  02822	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  02826	83 7d cc 00	 cmp	 DWORD PTR $T156455[ebp], 0
  0282a	74 2b		 je	 SHORT $L156457
  0282c	8b 55 ac	 mov	 edx, DWORD PTR _this$[ebp]
  0282f	52		 push	 edx
  02830	83 ec 08	 sub	 esp, 8
  02833	8b cc		 mov	 ecx, esp
  02835	89 65 c8	 mov	 DWORD PTR $T156456[ebp], esp
  02838	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  0283b	50		 push	 eax
  0283c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02841	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  02844	8b 4d cc	 mov	 ecx, DWORD PTR $T156455[ebp]
  02847	e8 00 00 00 00	 call	 ??0CLeaveBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CLeaveBtn::CLeaveBtn
  0284c	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  0284f	8b 4d 98	 mov	 ecx, DWORD PTR -104+[ebp]
  02852	89 4d 94	 mov	 DWORD PTR -108+[ebp], ecx
  02855	eb 07		 jmp	 SHORT $L156458
$L156457:
  02857	c7 45 94 00 00
	00 00		 mov	 DWORD PTR -108+[ebp], 0
$L156458:
  0285e	8b 55 94	 mov	 edx, DWORD PTR -108+[ebp]
  02861	89 55 d0	 mov	 DWORD PTR $T156454[ebp], edx
  02864	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  02868	8b 45 d0	 mov	 eax, DWORD PTR $T156454[ebp]
  0286b	89 45 d4	 mov	 DWORD PTR $T156453[ebp], eax
  0286e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02872	8d 4d e8	 lea	 ecx, DWORD PTR _sRight$149689[ebp]
  02875	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0287a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0287e	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  02881	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02886	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0288a	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0288d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02892	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02899	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0289c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  028a1	8b 45 d4	 mov	 eax, DWORD PTR $T156453[ebp]
  028a4	e9 41 01 00 00	 jmp	 $L149681
$L149699:

; 963  : 	}

  028a9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  028ad	8d 4d e8	 lea	 ecx, DWORD PTR _sRight$149689[ebp]
  028b0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L149687:

; 964  : 
; 965  : 	if ( name == "prompt" ) {

  028b5	68 00 00 00 00	 push	 OFFSET FLAT:$SG149708
  028ba	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  028bd	51		 push	 ecx
  028be	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  028c3	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  028c8	85 c0		 test	 eax, eax
  028ca	0f 84 c5 00 00
	00		 je	 $L149707

; 966  : 		m_pPrompt = new CSkinEdit ( obj, this, 700, CSkinEdit::CENTER | CSkinEdit::MULTILINE | CSkinEdit::READONLY, false, false );

  028d0	68 d8 00 00 00	 push	 216			; 000000d8H
  028d5	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  028da	89 45 c0	 mov	 DWORD PTR $T156460[ebp], eax
  028dd	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  028e1	83 7d c0 00	 cmp	 DWORD PTR $T156460[ebp], 0
  028e5	74 3b		 je	 SHORT $L156462
  028e7	6a 00		 push	 0
  028e9	6a 00		 push	 0
  028eb	6a 00		 push	 0
  028ed	68 05 08 00 00	 push	 2053			; 00000805H
  028f2	68 bc 02 00 00	 push	 700			; 000002bcH
  028f7	8b 55 ac	 mov	 edx, DWORD PTR _this$[ebp]
  028fa	52		 push	 edx
  028fb	83 ec 08	 sub	 esp, 8
  028fe	8b cc		 mov	 ecx, esp
  02900	89 65 bc	 mov	 DWORD PTR $T156461[ebp], esp
  02903	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  02906	50		 push	 eax
  02907	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0290c	89 45 90	 mov	 DWORD PTR -112+[ebp], eax
  0290f	8b 4d c0	 mov	 ecx, DWORD PTR $T156460[ebp]
  02912	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  02917	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0291a	8b 4d 8c	 mov	 ecx, DWORD PTR -116+[ebp]
  0291d	89 4d 88	 mov	 DWORD PTR -120+[ebp], ecx
  02920	eb 07		 jmp	 SHORT $L156463
$L156462:
  02922	c7 45 88 00 00
	00 00		 mov	 DWORD PTR -120+[ebp], 0
$L156463:
  02929	8b 55 88	 mov	 edx, DWORD PTR -120+[ebp]
  0292c	89 55 c4	 mov	 DWORD PTR $T156459[ebp], edx
  0292f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02933	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  02936	8b 4d c4	 mov	 ecx, DWORD PTR $T156459[ebp]
  02939	89 88 94 00 00
	00		 mov	 DWORD PTR [eax+148], ecx

; 967  : 		return m_pPrompt;

  0293f	8b 55 ac	 mov	 edx, DWORD PTR _this$[ebp]
  02942	83 ba 94 00 00
	00 00		 cmp	 DWORD PTR [edx+148], 0
  02949	74 11		 je	 SHORT $L156465
  0294b	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  0294e	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  02954	83 c1 60	 add	 ecx, 96			; 00000060H
  02957	89 4d 84	 mov	 DWORD PTR -124+[ebp], ecx
  0295a	eb 07		 jmp	 SHORT $L156466
$L156465:
  0295c	c7 45 84 00 00
	00 00		 mov	 DWORD PTR -124+[ebp], 0
$L156466:
  02963	8b 55 84	 mov	 edx, DWORD PTR -124+[ebp]
  02966	89 55 b8	 mov	 DWORD PTR $T156464[ebp], edx
  02969	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0296d	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  02970	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02975	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02979	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0297c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02981	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02988	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0298b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02990	8b 45 b8	 mov	 eax, DWORD PTR $T156464[ebp]
  02993	eb 55		 jmp	 SHORT $L149681
$L149707:

; 969  : 
; 970  : 	return CSkinWnd::MakeSkinCtrl( obj );

  02995	83 ec 08	 sub	 esp, 8
  02998	8b cc		 mov	 ecx, esp
  0299a	89 65 b0	 mov	 DWORD PTR $T156468[ebp], esp
  0299d	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  029a0	50		 push	 eax
  029a1	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  029a6	89 45 80	 mov	 DWORD PTR -128+[ebp], eax
  029a9	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  029ac	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  029b1	89 85 7c ff ff
	ff		 mov	 DWORD PTR -132+[ebp], eax
  029b7	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR -132+[ebp]
  029bd	89 4d b4	 mov	 DWORD PTR $T156467[ebp], ecx
  029c0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  029c4	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  029c7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  029cc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  029d0	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  029d3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  029d8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  029df	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  029e2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  029e7	8b 45 b4	 mov	 eax, DWORD PTR $T156467[ebp]
$L149681:

; 971  : }

  029ea	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  029ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  029f4	8b e5		 mov	 esp, ebp
  029f6	5d		 pop	 ebp
  029f7	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L156469:
  002b4	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  002b7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002bc	c3		 ret	 0
$L156470:
  002bd	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  002c0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002c5	c3		 ret	 0
$L156471:
  002c6	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  002c9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002ce	c3		 ret	 0
$L156472:
  002cf	8d 4d e8	 lea	 ecx, DWORD PTR _sRight$149689[ebp]
  002d2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002d7	c3		 ret	 0
$L156473:
  002d8	8b 45 dc	 mov	 eax, DWORD PTR $T156449[ebp]
  002db	50		 push	 eax
  002dc	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002e1	59		 pop	 ecx
  002e2	c3		 ret	 0
$L156475:
  002e3	8b 45 cc	 mov	 eax, DWORD PTR $T156455[ebp]
  002e6	50		 push	 eax
  002e7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002ec	59		 pop	 ecx
  002ed	c3		 ret	 0
$L156477:
  002ee	8b 45 c0	 mov	 eax, DWORD PTR $T156460[ebp]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  002f7	c3		 ret	 0
$L156482:
  002f8	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156481
  002fd	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CNetworkErrorDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CNetworkErrorDlg::MakeSkinCtrl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NABVCString@@PBD@Z PROC NEAR			; operator==, COMDAT

; 183  : 	{ return s1.Compare(s2) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NABVCString@@PBD@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NPBDABVCString@@@Z PROC NEAR			; operator==, COMDAT

; 185  : 	{ return s2.Compare(s1) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _s1$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _s2$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NPBDABVCString@@@Z ENDP				; operator==
_TEXT	ENDS
;	COMDAT ??0?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethodPair@@@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Al$ = 8
??0?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethodPair@@@1@@Z PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >, COMDAT

; 39   : 	explicit vector(const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00025	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00028	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??0?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethodPair@@@1@@Z ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAXI@Z ; std::allocator<CSCIObjectMethodPair *>::deallocate
PUBLIC	?_Destroy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@0@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Destroy
;	COMDAT ??1?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::~vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >, COMDAT

; 58   : 		{_Destroy(_First, _Last);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	51		 push	 ecx
  0000e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00011	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00014	50		 push	 eax
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@0@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Destroy

; 59   : 		allocator.deallocate(_First, _End - _First);

  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00026	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00029	c1 f8 02	 sar	 eax, 2
  0002c	50		 push	 eax
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00033	52		 push	 edx
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAXI@Z ; std::allocator<CSCIObjectMethodPair *>::deallocate

; 60   : 		_First = 0, _Last = 0, _End = 0; }

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00050	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00053	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??1?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAE@XZ ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::~vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ
_TEXT	SEGMENT
_this$ = -4
?begin@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::begin, COMDAT

; 93   : 		{return (_First); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?begin@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ
_TEXT	SEGMENT
_this$ = -4
?end@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::end, COMDAT

; 97   : 		{return (_Last); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?end@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::end
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::size, COMDAT

; 114  : 		{return (_First == 0 ? 0 : _Last - _First); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00010	75 09		 jne	 SHORT $L156499
  00012	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00019	eb 12		 jmp	 SHORT $L156500
$L156499:
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00024	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00027	c1 f8 02	 sar	 eax, 2
  0002a	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
$L156500:
  0002d	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?size@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QBEIXZ ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::size
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEAAPAVCSCIObjectMethodPair@@I@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??A?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEAAPAVCSCIObjectMethodPair@@I@Z PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::operator[], COMDAT

; 132  : 		{return (*(begin() + _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::begin
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00012	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
??A?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEAAPAVCSCIObjectMethodPair@@I@Z ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::operator[]
_TEXT	ENDS
PUBLIC	?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@ABQAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::insert
;	COMDAT ?push_back@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXABQAVCSCIObjectMethodPair@@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
?push_back@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXABQAVCSCIObjectMethodPair@@@Z PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::push_back, COMDAT

; 142  : 		{insert(end(), _X); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?end@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::end
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@ABQAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::insert
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?push_back@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXABQAVCSCIObjectMethodPair@@@Z ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::push_back
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@0@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::erase
;	COMDAT ?clear@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?clear@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::clear, COMDAT

; 212  : 		{erase(begin(), end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?end@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::end
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::begin
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?erase@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@0@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::erase
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?clear@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXXZ ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::clear
_TEXT	ENDS
PUBLIC	??0?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@ABU?$less@VCSCI_Object@@@1@_NABV?$allocator@PAVCNoButtonDlg@@@1@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
;	COMDAT ??0?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@ABU?$less@VCSCI_Object@@@1@ABV?$allocator@PAVCNoButtonDlg@@@1@@Z
_TEXT	SEGMENT
__Pred$ = 8
__Al$ = 12
_this$ = -4
??0?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@ABU?$less@VCSCI_Object@@@1@ABV?$allocator@PAVCNoButtonDlg@@@1@@Z PROC NEAR ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >, COMDAT

; 57   : 	explicit map(const _Pr& _Pred = _Pr(), const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@ABU?$less@VCSCI_Object@@@1@_NABV?$allocator@PAVCNoButtonDlg@@@1@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
??0?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE@ABU?$less@VCSCI_Object@@@1@ABV?$allocator@PAVCNoButtonDlg@@@1@@Z ENDP ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
_TEXT	ENDS
PUBLIC	?end@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
;	COMDAT ?end@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T156507 = -4
?end@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@XZ PROC NEAR ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end, COMDAT

; 73   : 		{return (_Tr.end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T156507[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?end@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@XZ ENDP ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
_TEXT	ENDS
PUBLIC	?insert@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::insert
PUBLIC	??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABVCSCI_Object@@ABQAVCNoButtonDlg@@@Z ; std::pair<CSCI_Object const ,CNoButtonDlg *>::pair<CSCI_Object const ,CNoButtonDlg *>
PUBLIC	??Diterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator*
;	COMDAT ??A?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAEAAPAVCNoButtonDlg@@ABVCSCI_Object@@@Z
_TEXT	SEGMENT
__Kv$ = 8
_this$ = -28
__P$ = -4
$T156509 = -12
$T156510 = -16
$T156511 = -24
??A?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAEAAPAVCNoButtonDlg@@ABVCSCI_Object@@@Z PROC NEAR ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::operator[], COMDAT

; 93   : 		{iterator _P = insert(value_type(_Kv, _Ty())).first;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T156510[ebp], 0
  00010	8d 45 f0	 lea	 eax, DWORD PTR $T156510[ebp]
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00017	51		 push	 ecx
  00018	8d 4d f4	 lea	 ecx, DWORD PTR $T156509[ebp]
  0001b	e8 00 00 00 00	 call	 ??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABVCSCI_Object@@ABQAVCNoButtonDlg@@@Z ; std::pair<CSCI_Object const ,CNoButtonDlg *>::pair<CSCI_Object const ,CNoButtonDlg *>
  00020	50		 push	 eax
  00021	8d 55 e8	 lea	 edx, DWORD PTR $T156511[ebp]
  00024	52		 push	 edx
  00025	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?insert@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::insert
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	89 45 fc	 mov	 DWORD PTR __P$[ebp], eax

; 94   : 		return ((*_P).second); }

  00032	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  00035	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator*
  0003a	83 c0 04	 add	 eax, 4
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
??A?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAEAAPAVCNoButtonDlg@@ABVCSCI_Object@@@Z ENDP ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::operator[]
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase
;	COMDAT ?erase@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@V342@@Z
_TEXT	SEGMENT
__P$ = 12
___$ReturnUdt$ = 8
_this$ = -8
$T156513 = -4
?erase@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@V342@@Z PROC NEAR ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase, COMDAT

; 104  : 		{return (_Tr.erase((_Imp::iterator&)_P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T156513[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?erase@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@V342@@Z ENDP ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase
_TEXT	ENDS
PUBLIC	?find@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::find
;	COMDAT ?find@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@ABVCSCI_Object@@@Z
_TEXT	SEGMENT
__Kv$ = 12
___$ReturnUdt$ = 8
_this$ = -8
$T156515 = -4
?find@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@ABVCSCI_Object@@@Z PROC NEAR ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::find, COMDAT

; 121  : 		{return (_Tr.find(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T156515[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::find
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?find@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@2@ABVCSCI_Object@@@Z ENDP ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::find
_TEXT	ENDS
PUBLIC	?_Freenode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Freenode
PUBLIC	?begin@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::begin
PUBLIC	?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase
PUBLIC	?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
PUBLIC	?_Nilrefs@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1IA ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nilrefs
EXTRN	__imp_??0_Lockit@std@@QAE@XZ:NEAR
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:NEAR
;	COMDAT ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
_BSS	SEGMENT
?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A DD 01H DUP (?) ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
_BSS	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1IA
_BSS	SEGMENT
?_Nilrefs@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1IA DD 01H DUP (?) ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nilrefs
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T156522 DD	019930520H
	DD	01H
	DD	FLAT:$T156524
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156524 DD	0ffffffffH
	DD	FLAT:$L156520
xdata$x	ENDS
;	COMDAT ??1?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -32
__Lk$150944 = -16
$T156517 = -20
$T156518 = -24
$T156519 = -28
__$EHRec$ = -12
??1?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::~_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >, COMDAT

; 176  :                 {erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156523
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 ec	 lea	 eax, DWORD PTR $T156517[ebp]
  00021	50		 push	 eax
  00022	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	8d 55 e8	 lea	 edx, DWORD PTR $T156518[ebp]
  00030	52		 push	 edx
  00031	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::begin
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	50		 push	 eax
  0003c	8d 4d e4	 lea	 ecx, DWORD PTR $T156519[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase

; 177  :                 _Freenode(_Head);

  00048	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	50		 push	 eax
  0004f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Freenode

; 178  :                 _Head = 0, _Size = 0;

  00057	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00061	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 179  :                         {_Lockit _Lk;

  0006b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$150944[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 180  :                         if (--_Nilrefs == 0)

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nilrefs@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1IA ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nilrefs
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?_Nilrefs@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1IA, eax ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nilrefs
  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nilrefs@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1IA, 0 ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nilrefs
  0008f	75 19		 jne	 SHORT $L150945

; 181  :                                 {_Freenode(_Nil);

  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00097	51		 push	 ecx
  00098	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Freenode

; 182  :                                 _Nil = 0; }}}

  000a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
$L150945:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$150944[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156520:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$150944[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156523:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156522
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::~_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
PUBLIC	??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator, COMDAT

; 122  :                 iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::const_iterator
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??8iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator==
;	COMDAT ??9iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??9iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator!=, COMDAT

; 147  :                         {return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator!=
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT

; 132  : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?Height@CRect@@QBEHXZ PROC NEAR				; CRect::Height, COMDAT

; 147  : 	{ return bottom - top; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00010	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
PUBLIC	?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::insert
;	COMDAT ?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@ABQAV3@@Z
_TEXT	SEGMENT
__P$ = 8
__X$ = 12
_this$ = -8
__O$ = -4
?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@ABQAV3@@Z PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::insert, COMDAT

; 152  : 		{size_type _O = _P - begin();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::begin
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00014	2b c8		 sub	 ecx, eax
  00016	c1 f9 02	 sar	 ecx, 2
  00019	89 4d fc	 mov	 DWORD PTR __O$[ebp], ecx

; 153  : 		insert(_P, 1, _X);

  0001c	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0001f	52		 push	 edx
  00020	6a 01		 push	 1
  00022	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00025	50		 push	 eax
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::insert

; 154  : 		return (begin() + _O); }

  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::begin
  00036	8b 4d fc	 mov	 ecx, DWORD PTR __O$[ebp]
  00039	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 08 00	 ret	 8
?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@ABQAV3@@Z ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::insert
_TEXT	ENDS
PUBLIC	?copy@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z ; std::copy
;	COMDAT ?erase@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@0@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
_this$ = -8
__S$ = -4
?erase@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@0@Z PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::erase, COMDAT

; 207  : 		{iterator _S = copy(_L, end(), _F);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::end
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?copy@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z ; std::copy
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 208  : 		_Destroy(_S, end());

  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?end@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@XZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::end
  0002d	50		 push	 eax
  0002e	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00031	52		 push	 edx
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@0@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Destroy

; 209  : 		_Last = _S;

  0003a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00040	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 210  : 		return (_F); }

  00043	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
?erase@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEPAPAVCSCIObjectMethodPair@@PAPAV3@0@Z ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::erase
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@@Z ; std::allocator<CSCIObjectMethodPair *>::destroy
;	COMDAT ?_Destroy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@0@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
_this$ = -4
?_Destroy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@0@Z PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Destroy, COMDAT

; 230  : 		{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	eb 09		 jmp	 SHORT $L152191
$L152192:
  00009	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 08	 mov	 DWORD PTR __F$[ebp], eax
$L152191:
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00015	3b 4d 0c	 cmp	 ecx, DWORD PTR __L$[ebp]
  00018	74 0e		 je	 SHORT $L152193

; 231  : 			allocator.destroy(_F); }

  0001a	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  0001d	52		 push	 edx
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@@Z ; std::allocator<CSCIObjectMethodPair *>::destroy
  00026	eb e1		 jmp	 SHORT $L152192
$L152193:
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@0@Z ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Destroy
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
?deallocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CSCIObjectMethodPair *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAXI@Z ENDP ; std::allocator<CSCIObjectMethodPair *>::deallocate
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>
PUBLIC	?insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::insert
;	COMDAT ?insert@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z
_TEXT	SEGMENT
__X$ = 12
___$ReturnUdt$ = 8
_this$ = -28
__Ans$ = -8
$T156539 = -16
$T156540 = -24
?insert@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z PROC NEAR ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::insert, COMDAT

; 96   : 		{_Imp::_Pairib _Ans = _Tr.insert(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f0	 lea	 ecx, DWORD PTR $T156539[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::insert
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __Ans$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __Ans$[ebp+4], eax

; 97   : 		return (_Pairib(_Ans.first, _Ans.second)); }

  00024	8d 4d fc	 lea	 ecx, DWORD PTR __Ans$[ebp+4]
  00027	51		 push	 ecx
  00028	8d 55 f8	 lea	 edx, DWORD PTR __Ans$[ebp]
  0002b	52		 push	 edx
  0002c	8d 4d e8	 lea	 ecx, DWORD PTR $T156540[ebp]
  0002f	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
  0003e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?insert@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ENDP ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::insert
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXXZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Init
;	COMDAT ??0?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@ABU?$less@VCSCI_Object@@@1@_NABV?$allocator@PAVCNoButtonDlg@@@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Parg$ = 8
__Marg$ = 12
__Al$ = 16
??0?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@ABU?$less@VCSCI_Object@@@1@_NABV?$allocator@PAVCNoButtonDlg@@@1@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >, COMDAT

; 162  :                 {_Init(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	88 4a 01	 mov	 BYTE PTR [edx+1], cl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8a 4d 0c	 mov	 cl, BYTE PTR __Marg$[ebp]
  00022	88 48 08	 mov	 BYTE PTR [eax+8], cl
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Init@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXXZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Init
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??0?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@ABU?$less@VCSCI_Object@@@1@_NABV?$allocator@PAVCNoButtonDlg@@@1@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost
;	COMDAT ?begin@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T156543 = -4
?begin@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::begin, COMDAT

; 190  :                 {return (iterator(_Lmost())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T156543[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 0a		 mov	 DWORD PTR [edx], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?begin@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T156545 = -4
?end@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end, COMDAT

; 194  :                 {return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T156545[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
_TEXT	ENDS
PUBLIC	?_Destval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Destval
PUBLIC	?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@0@Z ; std::swap
PUBLIC	?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
PUBLIC	?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
PUBLIC	?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
PUBLIC	?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
PUBLIC	?_Value@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Value
PUBLIC	?_Mynode@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Mynode
PUBLIC	??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator++
PUBLIC	?_Lrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lrotate
PUBLIC	?_Max@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Max
PUBLIC	?_Min@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Min
PUBLIC	?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost
PUBLIC	?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
PUBLIC	?_Rrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rrotate
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156550 DD	019930520H
	DD	01H
	DD	FLAT:$T156552
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156552 DD	0ffffffffH
	DD	FLAT:$L156548
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -44
__X$ = -16
__Y$ = -20
__Z$ = -28
__Lk$ = -24
__W$152262 = -32
__W$152268 = -36
$T156547 = -40
__$EHRec$ = -12
__P$ = 12
?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase, COMDAT

; 264  :                 {_Nodeptr _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156551
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	56		 push	 esi
  0001c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 265  :                 _Nodeptr _Y = (_P++)._Mynode();

  0001f	6a 00		 push	 0
  00021	8d 45 d8	 lea	 eax, DWORD PTR $T156547[ebp]
  00024	50		 push	 eax
  00025	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00028	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator++
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Mynode
  00034	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax

; 266  :                 _Nodeptr _Z = _Y;

  00037	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0003a	89 4d e4	 mov	 DWORD PTR __Z$[ebp], ecx

; 267  :                 _Lockit _Lk;

  0003d	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  :                 if (_Left(_Y) == _Nil)

  0004d	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00056	83 c4 04	 add	 esp, 4
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00061	75 13		 jne	 SHORT $L152228

; 269  :                         _X = _Right(_Y);

  00063	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 270  :                 else if (_Right(_Y) == _Nil)

  00074	eb 54		 jmp	 SHORT $L152231
$L152228:
  00076	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  0008a	75 13		 jne	 SHORT $L152230

; 271  :                         _X = _Left(_Y);

  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00095	83 c4 04	 add	 esp, 4
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 272  :                 else

  0009d	eb 2b		 jmp	 SHORT $L152231
$L152230:

; 273  :                         _Y = _Min(_Right(_Y)), _X = _Right(_Y);

  0009f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Min
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  000b9	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L152231:

; 274  :                 if (_Y != _Z)

  000ca	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000cd	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  000d0	0f 84 95 01 00
	00		 je	 $L152232

; 275  :                         {_Parent(_Left(_Z)) = _Y;

  000d6	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  000df	83 c4 04	 add	 esp, 4
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  000ea	83 c4 04	 add	 esp, 4
  000ed	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000f0	89 10		 mov	 DWORD PTR [eax], edx

; 276  :                         _Left(_Y) = _Left(_Z);

  000f2	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  000fb	83 c4 04	 add	 esp, 4
  000fe	8b f0		 mov	 esi, eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00109	83 c4 04	 add	 esp, 4
  0010c	8b 16		 mov	 edx, DWORD PTR [esi]
  0010e	89 10		 mov	 DWORD PTR [eax], edx

; 277  :                         if (_Y == _Right(_Z))

  00110	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00119	83 c4 04	 add	 esp, 4
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0011f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00121	75 13		 jne	 SHORT $L152233

; 278  :                                 _Parent(_X) = _Y;

  00123	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0012c	83 c4 04	 add	 esp, 4
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx

; 279  :                         else

  00134	eb 74		 jmp	 SHORT $L152234
$L152233:

; 280  :                                 {_Parent(_X) = _Parent(_Y);

  00136	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0013f	83 c4 04	 add	 esp, 4
  00142	8b f0		 mov	 esi, eax
  00144	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0014d	83 c4 04	 add	 esp, 4
  00150	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00152	89 08		 mov	 DWORD PTR [eax], ecx

; 281  :                                 _Left(_Parent(_Y)) = _X;

  00154	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00157	52		 push	 edx
  00158	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0015d	83 c4 04	 add	 esp, 4
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00168	83 c4 04	 add	 esp, 4
  0016b	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0016e	89 08		 mov	 DWORD PTR [eax], ecx

; 282  :                                 _Right(_Y) = _Right(_Z);

  00170	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00179	83 c4 04	 add	 esp, 4
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00187	83 c4 04	 add	 esp, 4
  0018a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0018c	89 08		 mov	 DWORD PTR [eax], ecx

; 283  :                                 _Parent(_Right(_Z)) = _Y; }

  0018e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00197	83 c4 04	 add	 esp, 4
  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  001a2	83 c4 04	 add	 esp, 4
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
$L152234:

; 284  :                         if (_Root() == _Z)

  001aa	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  001b2	8b 10		 mov	 edx, DWORD PTR [eax]
  001b4	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  001b7	75 0f		 jne	 SHORT $L152235

; 285  :                                 _Root() = _Y;

  001b9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001c4	89 08		 mov	 DWORD PTR [eax], ecx

; 286  :                         else if (_Left(_Parent(_Z)) == _Z)

  001c6	eb 58		 jmp	 SHORT $L152238
$L152235:
  001c8	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  001d1	83 c4 04	 add	 esp, 4
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  001dc	83 c4 04	 add	 esp, 4
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  001e4	75 1e		 jne	 SHORT $L152237

; 287  :                                 _Left(_Parent(_Z)) = _Y;

  001e6	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001e9	52		 push	 edx
  001ea	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  001ef	83 c4 04	 add	 esp, 4
  001f2	8b 00		 mov	 eax, DWORD PTR [eax]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  001fa	83 c4 04	 add	 esp, 4
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00200	89 08		 mov	 DWORD PTR [eax], ecx

; 288  :                         else

  00202	eb 1c		 jmp	 SHORT $L152238
$L152237:

; 289  :                                 _Right(_Parent(_Z)) = _Y;

  00204	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 00		 mov	 eax, DWORD PTR [eax]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00218	83 c4 04	 add	 esp, 4
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0021e	89 08		 mov	 DWORD PTR [eax], ecx
$L152238:

; 290  :                         _Parent(_Y) = _Parent(_Z);

  00220	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00237	83 c4 04	 add	 esp, 4
  0023a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023c	89 08		 mov	 DWORD PTR [eax], ecx

; 291  :                         std::swap(_Color(_Y), _Color(_Z));

  0023e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00247	83 c4 04	 add	 esp, 4
  0024a	50		 push	 eax
  0024b	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00254	83 c4 04	 add	 esp, 4
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@0@Z ; std::swap
  0025d	83 c4 08	 add	 esp, 8

; 292  :                         _Y = _Z; }

  00260	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  00263	89 4d ec	 mov	 DWORD PTR __Y$[ebp], ecx

; 293  :                 else

  00266	e9 4a 01 00 00	 jmp	 $L152256
$L152232:

; 294  :                         {_Parent(_X) = _Parent(_Y);

  0026b	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00274	83 c4 04	 add	 esp, 4
  00277	8b f0		 mov	 esi, eax
  00279	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00282	83 c4 04	 add	 esp, 4
  00285	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00287	89 08		 mov	 DWORD PTR [eax], ecx

; 295  :                         if (_Root() == _Z)

  00289	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  00296	75 0f		 jne	 SHORT $L152245

; 296  :                                 _Root() = _X;

  00298	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 297  :                         else if (_Left(_Parent(_Z)) == _Z)

  002a5	eb 58		 jmp	 SHORT $L152248
$L152245:
  002a7	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002aa	52		 push	 edx
  002ab	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  002b0	83 c4 04	 add	 esp, 4
  002b3	8b 00		 mov	 eax, DWORD PTR [eax]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  002bb	83 c4 04	 add	 esp, 4
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  002c3	75 1e		 jne	 SHORT $L152247

; 298  :                                 _Left(_Parent(_Z)) = _X;

  002c5	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  002ce	83 c4 04	 add	 esp, 4
  002d1	8b 00		 mov	 eax, DWORD PTR [eax]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002df	89 08		 mov	 DWORD PTR [eax], ecx

; 299  :                         else

  002e1	eb 1c		 jmp	 SHORT $L152248
$L152247:

; 300  :                                 _Right(_Parent(_Z)) = _X;

  002e3	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  002ec	83 c4 04	 add	 esp, 4
  002ef	8b 00		 mov	 eax, DWORD PTR [eax]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  002f7	83 c4 04	 add	 esp, 4
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	89 08		 mov	 DWORD PTR [eax], ecx
$L152248:

; 301  :                         if (_Lmost() != _Z)

  002ff	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost
  00307	8b 10		 mov	 edx, DWORD PTR [eax]
  00309	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  0030c	74 02		 je	 SHORT $L152249

; 303  :                         else if (_Right(_Z) == _Nil)

  0030e	eb 4a		 jmp	 SHORT $L152252
$L152249:
  00310	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00319	83 c4 04	 add	 esp, 4
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00324	75 1c		 jne	 SHORT $L152251

; 304  :                                 _Lmost() = _Parent(_Z);

  00326	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0032f	83 c4 04	 add	 esp, 4
  00332	8b f0		 mov	 esi, eax
  00334	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost
  0033c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0033e	89 08		 mov	 DWORD PTR [eax], ecx

; 305  :                         else

  00340	eb 18		 jmp	 SHORT $L152252
$L152251:

; 306  :                                 _Lmost() = _Min(_X);

  00342	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00345	52		 push	 edx
  00346	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Min
  0034b	83 c4 04	 add	 esp, 4
  0034e	8b f0		 mov	 esi, eax
  00350	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost
  00358	89 30		 mov	 DWORD PTR [eax], esi
$L152252:

; 307  :                         if (_Rmost() != _Z)

  0035a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	3b 45 e4	 cmp	 eax, DWORD PTR __Z$[ebp]
  00367	74 02		 je	 SHORT $L152253

; 309  :                         else if (_Left(_Z) == _Nil)

  00369	eb 4a		 jmp	 SHORT $L152256
$L152253:
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00374	83 c4 04	 add	 esp, 4
  00377	8b 10		 mov	 edx, DWORD PTR [eax]
  00379	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  0037f	75 1c		 jne	 SHORT $L152255

; 310  :                                 _Rmost() = _Parent(_Z);

  00381	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0038a	83 c4 04	 add	 esp, 4
  0038d	8b f0		 mov	 esi, eax
  0038f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost
  00397	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00399	89 08		 mov	 DWORD PTR [eax], ecx

; 311  :                         else

  0039b	eb 18		 jmp	 SHORT $L152256
$L152255:

; 312  :                                 _Rmost() = _Max(_X); }

  0039d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?_Max@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Max
  003a6	83 c4 04	 add	 esp, 4
  003a9	8b f0		 mov	 esi, eax
  003ab	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ae	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost
  003b3	89 30		 mov	 DWORD PTR [eax], esi
$L152256:

; 313  :                 if (_Color(_Y) == _Black)

  003b5	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  003be	83 c4 04	 add	 esp, 4
  003c1	83 38 01	 cmp	 DWORD PTR [eax], 1
  003c4	0f 85 25 04 00
	00		 jne	 $L152257
$L152259:

; 314  :                         {while (_X != _Root() && _Color(_X) == _Black)

  003ca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  003d2	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  003d5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d7	0f 84 00 04 00
	00		 je	 $L152260
  003dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  003e6	83 c4 04	 add	 esp, 4
  003e9	83 38 01	 cmp	 DWORD PTR [eax], 1
  003ec	0f 85 eb 03 00
	00		 jne	 $L152260

; 315  :                                 if (_X == _Left(_Parent(_X)))

  003f2	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  003fb	83 c4 04	 add	 esp, 4
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	51		 push	 ecx
  00401	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00406	83 c4 04	 add	 esp, 4
  00409	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0040c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0040e	0f 85 e6 01 00
	00		 jne	 $L152261

; 316  :                                         {_Nodeptr _W = _Right(_Parent(_X));

  00414	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0041d	83 c4 04	 add	 esp, 4
  00420	8b 08		 mov	 ecx, DWORD PTR [eax]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 10		 mov	 edx, DWORD PTR [eax]
  0042d	89 55 e0	 mov	 DWORD PTR __W$152262[ebp], edx

; 317  :                                         if (_Color(_W) == _Red)

  00430	8b 45 e0	 mov	 eax, DWORD PTR __W$152262[ebp]
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0043f	75 62		 jne	 SHORT $L152263

; 318  :                                                 {_Color(_W) = _Black;

  00441	8b 4d e0	 mov	 ecx, DWORD PTR __W$152262[ebp]
  00444	51		 push	 ecx
  00445	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  0044a	83 c4 04	 add	 esp, 4
  0044d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 319  :                                                 _Color(_Parent(_X)) = _Red;

  00453	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0045c	83 c4 04	 add	 esp, 4
  0045f	8b 00		 mov	 eax, DWORD PTR [eax]
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00467	83 c4 04	 add	 esp, 4
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 320  :                                                 _Lrotate(_Parent(_X));

  00470	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00473	51		 push	 ecx
  00474	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00479	83 c4 04	 add	 esp, 4
  0047c	8b 10		 mov	 edx, DWORD PTR [eax]
  0047e	52		 push	 edx
  0047f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lrotate

; 321  :                                                 _W = _Right(_Parent(_X)); }

  00487	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00490	83 c4 04	 add	 esp, 4
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	51		 push	 ecx
  00496	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0049b	83 c4 04	 add	 esp, 4
  0049e	8b 10		 mov	 edx, DWORD PTR [eax]
  004a0	89 55 e0	 mov	 DWORD PTR __W$152262[ebp], edx
$L152263:

; 323  :                                                 && _Color(_Right(_W)) == _Black)

  004a3	8b 45 e0	 mov	 eax, DWORD PTR __W$152262[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  004ac	83 c4 04	 add	 esp, 4
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  004b7	83 c4 04	 add	 esp, 4
  004ba	83 38 01	 cmp	 DWORD PTR [eax], 1
  004bd	75 44		 jne	 SHORT $L152264
  004bf	8b 55 e0	 mov	 edx, DWORD PTR __W$152262[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  004c8	83 c4 04	 add	 esp, 4
  004cb	8b 00		 mov	 eax, DWORD PTR [eax]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  004d3	83 c4 04	 add	 esp, 4
  004d6	83 38 01	 cmp	 DWORD PTR [eax], 1
  004d9	75 28		 jne	 SHORT $L152264

; 324  :                                                 {_Color(_W) = _Red;

  004db	8b 4d e0	 mov	 ecx, DWORD PTR __W$152262[ebp]
  004de	51		 push	 ecx
  004df	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  004e4	83 c4 04	 add	 esp, 4
  004e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  :                                                 _X = _Parent(_X); }

  004ed	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  004f0	52		 push	 edx
  004f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  004f6	83 c4 04	 add	 esp, 4
  004f9	8b 00		 mov	 eax, DWORD PTR [eax]
  004fb	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 326  :                                         else

  004fe	e9 f2 00 00 00	 jmp	 $L152265
$L152264:

; 327  :                                                 {if (_Color(_Right(_W)) == _Black)

  00503	8b 4d e0	 mov	 ecx, DWORD PTR __W$152262[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0050c	83 c4 04	 add	 esp, 4
  0050f	8b 10		 mov	 edx, DWORD PTR [eax]
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00517	83 c4 04	 add	 esp, 4
  0051a	83 38 01	 cmp	 DWORD PTR [eax], 1
  0051d	75 57		 jne	 SHORT $L152266

; 328  :                                                         {_Color(_Left(_W)) = _Black;

  0051f	8b 45 e0	 mov	 eax, DWORD PTR __W$152262[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00528	83 c4 04	 add	 esp, 4
  0052b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052d	51		 push	 ecx
  0052e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00533	83 c4 04	 add	 esp, 4
  00536	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 329  :                                                         _Color(_W) = _Red;

  0053c	8b 55 e0	 mov	 edx, DWORD PTR __W$152262[ebp]
  0053f	52		 push	 edx
  00540	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00545	83 c4 04	 add	 esp, 4
  00548	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 330  :                                                         _Rrotate(_W);

  0054e	8b 45 e0	 mov	 eax, DWORD PTR __W$152262[ebp]
  00551	50		 push	 eax
  00552	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rrotate

; 331  :                                                         _W = _Right(_Parent(_X)); }

  0055a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0055d	51		 push	 ecx
  0055e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00563	83 c4 04	 add	 esp, 4
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	52		 push	 edx
  00569	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0056e	83 c4 04	 add	 esp, 4
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	89 45 e0	 mov	 DWORD PTR __W$152262[ebp], eax
$L152266:

; 332  :                                                 _Color(_W) = _Color(_Parent(_X));

  00576	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0057f	83 c4 04	 add	 esp, 4
  00582	8b 10		 mov	 edx, DWORD PTR [eax]
  00584	52		 push	 edx
  00585	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  0058a	83 c4 04	 add	 esp, 4
  0058d	8b f0		 mov	 esi, eax
  0058f	8b 45 e0	 mov	 eax, DWORD PTR __W$152262[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0059d	89 08		 mov	 DWORD PTR [eax], ecx

; 333  :                                                 _Color(_Parent(_X)) = _Black;

  0059f	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005a2	52		 push	 edx
  005a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  005a8	83 c4 04	 add	 esp, 4
  005ab	8b 00		 mov	 eax, DWORD PTR [eax]
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  005b3	83 c4 04	 add	 esp, 4
  005b6	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 334  :                                                 _Color(_Right(_W)) = _Black;

  005bc	8b 4d e0	 mov	 ecx, DWORD PTR __W$152262[ebp]
  005bf	51		 push	 ecx
  005c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  005c5	83 c4 04	 add	 esp, 4
  005c8	8b 10		 mov	 edx, DWORD PTR [eax]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 335  :                                                 _Lrotate(_Parent(_X));

  005d9	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	51		 push	 ecx
  005e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lrotate

; 336  :                                                 break; }}

  005f0	e9 e8 01 00 00	 jmp	 $L152260
$L152265:

; 337  :                                 else

  005f5	e9 de 01 00 00	 jmp	 $L152271
$L152261:

; 338  :                                         {_Nodeptr _W = _Left(_Parent(_X));

  005fa	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005fd	52		 push	 edx
  005fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00603	83 c4 04	 add	 esp, 4
  00606	8b 00		 mov	 eax, DWORD PTR [eax]
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  0060e	83 c4 04	 add	 esp, 4
  00611	8b 08		 mov	 ecx, DWORD PTR [eax]
  00613	89 4d dc	 mov	 DWORD PTR __W$152268[ebp], ecx

; 339  :                                         if (_Color(_W) == _Red)

  00616	8b 55 dc	 mov	 edx, DWORD PTR __W$152268[ebp]
  00619	52		 push	 edx
  0061a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  0061f	83 c4 04	 add	 esp, 4
  00622	83 38 00	 cmp	 DWORD PTR [eax], 0
  00625	75 62		 jne	 SHORT $L152269

; 340  :                                                 {_Color(_W) = _Black;

  00627	8b 45 dc	 mov	 eax, DWORD PTR __W$152268[ebp]
  0062a	50		 push	 eax
  0062b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00630	83 c4 04	 add	 esp, 4
  00633	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 341  :                                                 _Color(_Parent(_X)) = _Red;

  00639	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0063c	51		 push	 ecx
  0063d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00642	83 c4 04	 add	 esp, 4
  00645	8b 10		 mov	 edx, DWORD PTR [eax]
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  0064d	83 c4 04	 add	 esp, 4
  00650	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 342  :                                                 _Rrotate(_Parent(_X));

  00656	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00659	50		 push	 eax
  0065a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0065f	83 c4 04	 add	 esp, 4
  00662	8b 08		 mov	 ecx, DWORD PTR [eax]
  00664	51		 push	 ecx
  00665	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rrotate

; 343  :                                                 _W = _Left(_Parent(_X)); }

  0066d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00670	52		 push	 edx
  00671	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00676	83 c4 04	 add	 esp, 4
  00679	8b 00		 mov	 eax, DWORD PTR [eax]
  0067b	50		 push	 eax
  0067c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00681	83 c4 04	 add	 esp, 4
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 4d dc	 mov	 DWORD PTR __W$152268[ebp], ecx
$L152269:

; 345  :                                                 && _Color(_Left(_W)) == _Black)

  00689	8b 55 dc	 mov	 edx, DWORD PTR __W$152268[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00692	83 c4 04	 add	 esp, 4
  00695	8b 00		 mov	 eax, DWORD PTR [eax]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  0069d	83 c4 04	 add	 esp, 4
  006a0	83 38 01	 cmp	 DWORD PTR [eax], 1
  006a3	75 44		 jne	 SHORT $L152270
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR __W$152268[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  006ae	83 c4 04	 add	 esp, 4
  006b1	8b 10		 mov	 edx, DWORD PTR [eax]
  006b3	52		 push	 edx
  006b4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  006b9	83 c4 04	 add	 esp, 4
  006bc	83 38 01	 cmp	 DWORD PTR [eax], 1
  006bf	75 28		 jne	 SHORT $L152270

; 346  :                                                 {_Color(_W) = _Red;

  006c1	8b 45 dc	 mov	 eax, DWORD PTR __W$152268[ebp]
  006c4	50		 push	 eax
  006c5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  006ca	83 c4 04	 add	 esp, 4
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 347  :                                                 _X = _Parent(_X); }

  006d3	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  006d6	51		 push	 ecx
  006d7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  006dc	83 c4 04	 add	 esp, 4
  006df	8b 10		 mov	 edx, DWORD PTR [eax]
  006e1	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 348  :                                         else

  006e4	e9 ef 00 00 00	 jmp	 $L152271
$L152270:

; 349  :                                                 {if (_Color(_Left(_W)) == _Black)

  006e9	8b 45 dc	 mov	 eax, DWORD PTR __W$152268[ebp]
  006ec	50		 push	 eax
  006ed	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  006f2	83 c4 04	 add	 esp, 4
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  006fd	83 c4 04	 add	 esp, 4
  00700	83 38 01	 cmp	 DWORD PTR [eax], 1
  00703	75 57		 jne	 SHORT $L152272

; 350  :                                                         {_Color(_Right(_W)) = _Black;

  00705	8b 55 dc	 mov	 edx, DWORD PTR __W$152268[ebp]
  00708	52		 push	 edx
  00709	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0070e	83 c4 04	 add	 esp, 4
  00711	8b 00		 mov	 eax, DWORD PTR [eax]
  00713	50		 push	 eax
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 351  :                                                         _Color(_W) = _Red;

  00722	8b 4d dc	 mov	 ecx, DWORD PTR __W$152268[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  0072b	83 c4 04	 add	 esp, 4
  0072e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 352  :                                                         _Lrotate(_W);

  00734	8b 55 dc	 mov	 edx, DWORD PTR __W$152268[ebp]
  00737	52		 push	 edx
  00738	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lrotate

; 353  :                                                         _W = _Left(_Parent(_X)); }

  00740	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00749	83 c4 04	 add	 esp, 4
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	51		 push	 ecx
  0074f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00754	83 c4 04	 add	 esp, 4
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	89 55 dc	 mov	 DWORD PTR __W$152268[ebp], edx
$L152272:

; 354  :                                                 _Color(_W) = _Color(_Parent(_X));

  0075c	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00765	83 c4 04	 add	 esp, 4
  00768	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00770	83 c4 04	 add	 esp, 4
  00773	8b f0		 mov	 esi, eax
  00775	8b 55 dc	 mov	 edx, DWORD PTR __W$152268[ebp]
  00778	52		 push	 edx
  00779	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  0077e	83 c4 04	 add	 esp, 4
  00781	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00783	89 08		 mov	 DWORD PTR [eax], ecx

; 355  :                                                 _Color(_Parent(_X)) = _Black;

  00785	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0078e	83 c4 04	 add	 esp, 4
  00791	8b 00		 mov	 eax, DWORD PTR [eax]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00799	83 c4 04	 add	 esp, 4
  0079c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 356  :                                                 _Color(_Left(_W)) = _Black;

  007a2	8b 4d dc	 mov	 ecx, DWORD PTR __W$152268[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  007ab	83 c4 04	 add	 esp, 4
  007ae	8b 10		 mov	 edx, DWORD PTR [eax]
  007b0	52		 push	 edx
  007b1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  007b6	83 c4 04	 add	 esp, 4
  007b9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 357  :                                                 _Rrotate(_Parent(_X));

  007bf	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  007c8	83 c4 04	 add	 esp, 4
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	51		 push	 ecx
  007ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rrotate

; 358  :                                                 break; }}

  007d6	eb 05		 jmp	 SHORT $L152260
$L152271:
  007d8	e9 ed fb ff ff	 jmp	 $L152259
$L152260:

; 359  :                         _Color(_X) = _Black; }

  007dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  007e0	52		 push	 edx
  007e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  007e6	83 c4 04	 add	 esp, 4
  007e9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L152257:

; 360  :                 _Destval(&_Value(_Y));

  007ef	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Value
  007f8	83 c4 04	 add	 esp, 4
  007fb	50		 push	 eax
  007fc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Destval

; 361  :                 _Freenode(_Y);

  00804	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00807	51		 push	 ecx
  00808	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Freenode

; 362  :                 --_Size;

  00810	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00813	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00816	83 e8 01	 sub	 eax, 1
  00819	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 363  :                 return (_P); }

  0081f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00822	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00825	89 02		 mov	 DWORD PTR [edx], eax
  00827	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0082e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00831	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00837	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0083a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0083d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00844	5e		 pop	 esi
  00845	8b e5		 mov	 esp, ebp
  00847	5d		 pop	 ebp
  00848	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156548:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156551:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156550
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase
PUBLIC	?size@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEIXZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::size
PUBLIC	?_Erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Erase
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156563 DD	019930520H
	DD	01H
	DD	FLAT:$T156565
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156565 DD	0ffffffffH
	DD	FLAT:$L156561
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -40
_Lk$152286 = -16
$T156556 = -20
$T156557 = -24
$T156558 = -28
$T156559 = -32
$T156560 = -36
__$EHRec$ = -12
__F$ = 12
__L$ = 16
?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase, COMDAT

; 365  :                 {if (size() == 0 || _F != begin() || _L != end())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156564
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?size@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEIXZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::size
  00026	85 c0		 test	 eax, eax
  00028	74 3c		 je	 SHORT $L152279
  0002a	8d 45 ec	 lea	 eax, DWORD PTR $T156556[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::begin
  00036	50		 push	 eax
  00037	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator!=
  0003f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00044	85 c0		 test	 eax, eax
  00046	75 1e		 jne	 SHORT $L152279
  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T156557[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
  00054	50		 push	 eax
  00055	8d 4d 10	 lea	 ecx, DWORD PTR __L$[ebp]
  00058	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator!=
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	74 44		 je	 SHORT $L152278
$L152279:

; 366  :                         {while (_F != _L)

  00066	8d 55 10	 lea	 edx, DWORD PTR __L$[ebp]
  00069	52		 push	 edx
  0006a	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0006d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator!=
  00072	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00077	85 c0		 test	 eax, eax
  00079	74 1f		 je	 SHORT $L152282

; 367  :                                 erase(_F++);

  0007b	6a 00		 push	 0
  0007d	8d 45 e4	 lea	 eax, DWORD PTR $T156558[ebp]
  00080	50		 push	 eax
  00081	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00084	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator++
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	51		 push	 ecx
  0008c	8d 55 e0	 lea	 edx, DWORD PTR $T156559[ebp]
  0008f	52		 push	 edx
  00090	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase
  00098	eb cc		 jmp	 SHORT $L152279
$L152282:

; 368  :                         return (_F); }

  0009a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR __F$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a5	e9 83 00 00 00	 jmp	 $L152285
$L152278:

; 370  :                         {_Lockit Lk;

  000aa	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$152286[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 371  :                         _Erase(_Root());

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	52		 push	 edx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Erase

; 372  :                         _Root() = _Nil, _Size = 0;

  000cd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  000db	89 08		 mov	 DWORD PTR [eax], ecx
  000dd	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 373  :                         _Lmost() = _Head, _Rmost() = _Head;

  000e7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost
  000ef	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f5	89 10		 mov	 DWORD PTR [eax], edx
  000f7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost
  000ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00105	89 10		 mov	 DWORD PTR [eax], edx

; 374  :                         return (begin()); }}

  00107	8d 45 dc	 lea	 eax, DWORD PTR $T156560[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::begin
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	89 0a		 mov	 DWORD PTR [edx], ecx
  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$152286[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L152285:
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156561:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$152286[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156564:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156563
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::erase
PUBLIC	??R?$less@VCSCI_Object@@@std@@QBE_NABVCSCI_Object@@0@Z ; std::less<CSCI_Object>::operator()
PUBLIC	?_Key@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAABVCSCI_Object@@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Key
PUBLIC	?lower_bound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::lower_bound
;	COMDAT ?find@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -24
__P$ = -4
$T156569 = -8
$T156570 = -12
$T156571 = -16
$T156573 = -20
__Kv$ = 12
?find@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::find, COMDAT

; 387  :                 {iterator _P = lower_bound(_Kv);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR $T156569[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::lower_bound
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	89 55 fc	 mov	 DWORD PTR __P$[ebp], edx

; 388  :                 return (_P == end()
; 389  :                         || key_compare(_Kv, _Key(_P._Mynode()))
; 390  :                                 ? end() : _P); }

  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T156571[ebp]
  00021	50		 push	 eax
  00022	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0002e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator==
  00033	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00038	85 c0		 test	 eax, eax
  0003a	75 32		 jne	 SHORT $L156572
  0003c	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Mynode
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAABVCSCI_Object@@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Key
  0004a	83 c4 04	 add	 esp, 4
  0004d	50		 push	 eax
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00051	51		 push	 ecx
  00052	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 01	 add	 ecx, 1
  00058	e8 00 00 00 00	 call	 ??R?$less@VCSCI_Object@@@std@@QBE_NABVCSCI_Object@@0@Z ; std::less<CSCI_Object>::operator()
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	75 08		 jne	 SHORT $L156572
  00066	8d 55 fc	 lea	 edx, DWORD PTR __P$[ebp]
  00069	89 55 e4	 mov	 DWORD PTR -28+[ebp], edx
  0006c	eb 0f		 jmp	 SHORT $L156574
$L156572:
  0006e	8d 45 ec	 lea	 eax, DWORD PTR $T156573[ebp]
  00071	50		 push	 eax
  00072	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::end
  0007a	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
$L156574:
  0007d	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  00080	89 4d f4	 mov	 DWORD PTR $T156570[ebp], ecx
  00083	8b 55 f4	 mov	 edx, DWORD PTR $T156570[ebp]
  00086	8b 02		 mov	 eax, DWORD PTR [edx]
  00088	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0008b	89 01		 mov	 DWORD PTR [ecx], eax
  0008d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 08 00	 ret	 8
?find@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::find
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCNoButtonDlg@@@std@@QAEXPAXI@Z ; std::allocator<CNoButtonDlg *>::deallocate
;	COMDAT ?_Freenode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__S$ = 8
_this$ = -4
?_Freenode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Freenode, COMDAT

; 596  :                 {allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCNoButtonDlg@@@std@@QAEXPAXI@Z ; std::allocator<CNoButtonDlg *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Freenode
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABVCSCI_Object@@ABQAVCNoButtonDlg@@@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABVCSCI_Object@@ABQAVCNoButtonDlg@@@Z PROC NEAR ; std::pair<CSCI_Object const ,CNoButtonDlg *>::pair<CSCI_Object const ,CNoButtonDlg *>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 55 0c	 mov	 edx, DWORD PTR __V2$[ebp]
  00019	8b 02		 mov	 eax, DWORD PTR [edx]
  0001b	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABVCSCI_Object@@ABQAVCNoButtonDlg@@@Z ENDP ; std::pair<CSCI_Object const ,CNoButtonDlg *>::pair<CSCI_Object const ,CNoButtonDlg *>
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::const_iterator, COMDAT

; 63   :                 const_iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::const_iterator
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator*, COMDAT

; 127  :                         {return (_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator*
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??8iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator==, COMDAT

; 145  :                         {return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator==
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEPAPAVCSCIObjectMethodPair@@IPBX@Z ; std::allocator<CSCIObjectMethodPair *>::allocate
PUBLIC	?_Ucopy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEPAPAVCSCIObjectMethodPair@@PBQAV3@0PAPAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ucopy
PUBLIC	?_Ufill@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ufill
PUBLIC	?fill@std@@YAXPAPAVCSCIObjectMethodPair@@0ABQAV2@@Z ; std::fill
PUBLIC	?copy_backward@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z ; std::copy_backward
;	COMDAT ?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z
_TEXT	SEGMENT
__P$ = 8
__M$ = 12
__X$ = 16
_this$ = -16
__N$152509 = -12
__S$152510 = -8
__Q$152512 = -4
?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::insert, COMDAT

; 156  : 		{if (_End - _Last < _M)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00012	2b 51 08	 sub	 edx, DWORD PTR [ecx+8]
  00015	c1 fa 02	 sar	 edx, 2
  00018	3b 55 0c	 cmp	 edx, DWORD PTR __M$[ebp]
  0001b	0f 83 f6 00 00
	00		 jae	 $L152508

; 157  : 			{size_type _N = size() + (_M < size() ? size() : _M);

  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?size@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::size
  00029	39 45 0c	 cmp	 DWORD PTR __M$[ebp], eax
  0002c	73 0d		 jae	 SHORT $L156581
  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?size@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::size
  00036	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  00039	eb 06		 jmp	 SHORT $L156582
$L156581:
  0003b	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  0003e	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
$L156582:
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?size@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::size
  00049	03 45 ec	 add	 eax, DWORD PTR -20+[ebp]
  0004c	89 45 f4	 mov	 DWORD PTR __N$152509[ebp], eax

; 158  : 			iterator _S = allocator.allocate(_N, (void *)0);

  0004f	6a 00		 push	 0
  00051	8b 4d f4	 mov	 ecx, DWORD PTR __N$152509[ebp]
  00054	51		 push	 ecx
  00055	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEPAPAVCSCIObjectMethodPair@@IPBX@Z ; std::allocator<CSCIObjectMethodPair *>::allocate
  0005d	89 45 f8	 mov	 DWORD PTR __S$152510[ebp], eax

; 159  : 			iterator _Q = _Ucopy(_First, _P, _S);

  00060	8b 55 f8	 mov	 edx, DWORD PTR __S$152510[ebp]
  00063	52		 push	 edx
  00064	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00067	50		 push	 eax
  00068	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0006e	52		 push	 edx
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEPAPAVCSCIObjectMethodPair@@PBQAV3@0PAPAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ucopy
  00077	89 45 fc	 mov	 DWORD PTR __Q$152512[ebp], eax

; 160  : 			_Ufill(_Q, _M, _X);

  0007a	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  00081	51		 push	 ecx
  00082	8b 55 fc	 mov	 edx, DWORD PTR __Q$152512[ebp]
  00085	52		 push	 edx
  00086	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ufill

; 161  : 			_Ucopy(_P, _Last, _Q + _M);

  0008e	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  00091	8b 4d fc	 mov	 ecx, DWORD PTR __Q$152512[ebp]
  00094	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00097	52		 push	 edx
  00098	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0009e	51		 push	 ecx
  0009f	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  000a2	52		 push	 edx
  000a3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEPAPAVCSCIObjectMethodPair@@PBQAV3@0PAPAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ucopy

; 162  : 			_Destroy(_First, _Last);

  000ab	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b1	51		 push	 ecx
  000b2	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b8	50		 push	 eax
  000b9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@0@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Destroy

; 163  : 			allocator.deallocate(_First, _End - _First);

  000c1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000c7	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000ca	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  000cd	c1 f8 02	 sar	 eax, 2
  000d0	50		 push	 eax
  000d1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d7	52		 push	 edx
  000d8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAXI@Z ; std::allocator<CSCIObjectMethodPair *>::deallocate

; 164  : 			_End = _S + _N;

  000e0	8b 45 f4	 mov	 eax, DWORD PTR __N$152509[ebp]
  000e3	8b 4d f8	 mov	 ecx, DWORD PTR __S$152510[ebp]
  000e6	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 165  : 			_Last = _S + size() + _M;

  000ef	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	e8 00 00 00 00	 call	 ?size@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::size
  000f7	8b 4d f8	 mov	 ecx, DWORD PTR __S$152510[ebp]
  000fa	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000fd	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  00100	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  00103	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00106	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 166  : 			_First = _S; }

  00109	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d f8	 mov	 ecx, DWORD PTR __S$152510[ebp]
  0010f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 167  : 		else if (_Last - _P < _M)

  00112	e9 f7 00 00 00	 jmp	 $L152523
$L152508:
  00117	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0011a	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0011d	2b 45 08	 sub	 eax, DWORD PTR __P$[ebp]
  00120	c1 f8 02	 sar	 eax, 2
  00123	3b 45 0c	 cmp	 eax, DWORD PTR __M$[ebp]
  00126	73 6d		 jae	 SHORT $L152514

; 168  : 			{_Ucopy(_P, _Last, _P + _M);

  00128	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  0012b	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0012e	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00131	50		 push	 eax
  00132	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00138	52		 push	 edx
  00139	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0013c	50		 push	 eax
  0013d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00140	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEPAPAVCSCIObjectMethodPair@@PBQAV3@0PAPAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ucopy

; 169  : 			_Ufill(_Last, _M - (_Last - _P), _X);

  00145	8b 4d 10	 mov	 ecx, DWORD PTR __X$[ebp]
  00148	51		 push	 ecx
  00149	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0014c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0014f	2b 45 08	 sub	 eax, DWORD PTR __P$[ebp]
  00152	c1 f8 02	 sar	 eax, 2
  00155	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  00158	2b c8		 sub	 ecx, eax
  0015a	51		 push	 ecx
  0015b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0015e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00161	50		 push	 eax
  00162	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00165	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ufill

; 170  : 			fill(_P, _Last, _X);

  0016a	8b 4d 10	 mov	 ecx, DWORD PTR __X$[ebp]
  0016d	51		 push	 ecx
  0016e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00171	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00174	50		 push	 eax
  00175	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00178	51		 push	 ecx
  00179	e8 00 00 00 00	 call	 ?fill@std@@YAXPAPAVCSCIObjectMethodPair@@0ABQAV2@@Z ; std::fill
  0017e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 171  : 			_Last += _M; }

  00181	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00184	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00187	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  0018a	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  0018d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00190	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 172  : 		else if (0 < _M)

  00193	eb 79		 jmp	 SHORT $L152523
$L152514:
  00195	83 7d 0c 00	 cmp	 DWORD PTR __M$[ebp], 0
  00199	76 73		 jbe	 SHORT $L152523

; 173  : 			{_Ucopy(_Last - _M, _Last, _Last);

  0019b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001a1	52		 push	 edx
  001a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001a5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001a8	51		 push	 ecx
  001a9	8b 55 0c	 mov	 edx, DWORD PTR __M$[ebp]
  001ac	c1 e2 02	 shl	 edx, 2
  001af	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001b2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001b5	2b ca		 sub	 ecx, edx
  001b7	51		 push	 ecx
  001b8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001bb	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEPAPAVCSCIObjectMethodPair@@PBQAV3@0PAPAV3@@Z ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ucopy

; 174  : 			copy_backward(_P, _Last - _M, _Last);

  001c0	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001c3	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001c6	50		 push	 eax
  001c7	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  001ca	c1 e1 02	 shl	 ecx, 2
  001cd	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001d0	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001d3	2b c1		 sub	 eax, ecx
  001d5	50		 push	 eax
  001d6	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  001d9	51		 push	 ecx
  001da	e8 00 00 00 00	 call	 ?copy_backward@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z ; std::copy_backward
  001df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 175  : 			fill(_P, _P + _M, _X);

  001e2	8b 55 10	 mov	 edx, DWORD PTR __X$[ebp]
  001e5	52		 push	 edx
  001e6	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  001e9	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  001ec	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  001ef	52		 push	 edx
  001f0	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  001f3	50		 push	 eax
  001f4	e8 00 00 00 00	 call	 ?fill@std@@YAXPAPAVCSCIObjectMethodPair@@0ABQAV2@@Z ; std::fill
  001f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 176  : 			_Last += _M; }}

  001fc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ff	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00202	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  00205	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  00208	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0020b	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$L152523:
  0020e	8b e5		 mov	 esp, ebp
  00210	5d		 pop	 ebp
  00211	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@QAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::insert
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAPAVCSCIObjectMethodPair@@@Z	; std::_Destroy
;	COMDAT ?destroy@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
?destroy@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@@Z PROC NEAR ; std::allocator<CSCIObjectMethodPair *>::destroy, COMDAT

; 68   : 		{_Destroy(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAPAVCSCIObjectMethodPair@@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@@Z ENDP ; std::allocator<CSCIObjectMethodPair *>::destroy
_TEXT	ENDS
;	COMDAT ??R?$less@VCSCI_Object@@@std@@QBE_NABVCSCI_Object@@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
_this$ = -4
??R?$less@VCSCI_Object@@@std@@QBE_NABVCSCI_Object@@0@Z PROC NEAR ; std::less<CSCI_Object>::operator(), COMDAT

; 86   : 		{return (_X < _Y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000b	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00010	66 8b f0	 mov	 si, ax
  00013	81 e6 ff ff 00
	00		 and	 esi, 65535		; 0000ffffH
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Y$[ebp]
  0001c	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00021	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00026	33 c9		 xor	 ecx, ecx
  00028	3b f0		 cmp	 esi, eax
  0002a	0f 9c c1	 setl	 cl
  0002d	8a c1		 mov	 al, cl
  0002f	5e		 pop	 esi
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
??R?$less@VCSCI_Object@@@std@@QBE_NABVCSCI_Object@@0@Z ENDP ; std::less<CSCI_Object>::operator()
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCNoButtonDlg@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
?deallocate@?$allocator@PAVCNoButtonDlg@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CNoButtonDlg *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCNoButtonDlg@@@std@@QAEXPAXI@Z ENDP ; std::allocator<CNoButtonDlg *>::deallocate
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color, COMDAT

; 36   :                 {return ((_Rbref)(*_P)._Color); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 14	 add	 eax, 20			; 00000014H
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
_TEXT	ENDS
PUBLIC	??R_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QBEABVCSCI_Object@@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn::operator()
;	COMDAT ?_Key@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAABVCSCI_Object@@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
$T156588 = -4
?_Key@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAABVCSCI_Object@@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Key, COMDAT

; 38   :                 {return (_Kfn()(_Value(_P))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Value
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T156588[ebp]
  00014	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QBEABVCSCI_Object@@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn::operator()
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Key@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAABVCSCI_Object@@PAU_Node@12@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Key
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left, COMDAT

; 40   :                 {return ((_Nodepref)(*_P)._Left); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent, COMDAT

; 42   :                 {return ((_Nodepref)(*_P)._Parent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right, COMDAT

; 44   :                 {return ((_Nodepref)(*_P)._Right); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Value, COMDAT

; 46   :                 {return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@PAU_Node@12@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Value
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEIXZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::size, COMDAT

; 206  :                 {return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEIXZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::size
_TEXT	ENDS
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:NEAR		; CWnd::MoveWindow
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT
_lpRect$ = 8
_bRepaint$ = 12
_this$ = -4
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z PROC NEAR		; CWnd::MoveWindow, COMDAT

; 80   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 		lpRect->bottom - lpRect->top, bRepaint); }

  00007	8b 45 0c	 mov	 eax, DWORD PTR _bRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ENDP		; CWnd::MoveWindow
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator--
PUBLIC	?_Insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Insert
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156615 DD	019930520H
	DD	01H
	DD	FLAT:$T156617
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156617 DD	0ffffffffH
	DD	FLAT:$L156613
xdata$x	ENDS
;	COMDAT ?insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z
_TEXT	SEGMENT
__P$ = -16
__V$ = 12
$T156596 = -36
$T156599 = -44
$T156600 = -48
$T156601 = -52
$T156602 = -56
$T156603 = -60
$T156604 = -68
$T156605 = -72
$T156606 = -76
$T156607 = -80
$T156608 = -88
$T156609 = -92
$T156610 = -96
$T156611 = -104
$T156612 = -108
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -112
__X$ = -24
__Y$ = -28
__Ans$ = -20
_Lk$152567 = -32
?insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::insert, COMDAT

; 216  :                 {_Nodeptr _X = _Root();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156616
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 68	 sub	 esp, 104		; 00000068H
  0001b	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax

; 217  :                 _Nodeptr _Y = _Head;

  0002b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	89 55 e4	 mov	 DWORD PTR __Y$[ebp], edx

; 218  :                 bool _Ans = true;

  00034	c6 45 ec 01	 mov	 BYTE PTR __Ans$[ebp], 1

; 219  :                 { _Lockit Lk;

  00038	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$152567[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L152569:

; 220  :                         while (_X != _Nil)

  00048	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  0004b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00051	74 67		 je	 SHORT $L152570

; 221  :                                 {_Y = _X;

  00053	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  00056	89 4d e4	 mov	 DWORD PTR __Y$[ebp], ecx

; 222  :                                 _Ans = key_compare(_Kfn()(_V), _Key(_X));

  00059	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAABVCSCI_Object@@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Key
  00062	83 c4 04	 add	 esp, 4
  00065	50		 push	 eax
  00066	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d dc	 lea	 ecx, DWORD PTR $T156596[ebp]
  0006d	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QBEABVCSCI_Object@@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn::operator()
  00072	50		 push	 eax
  00073	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 01	 add	 ecx, 1
  00079	e8 00 00 00 00	 call	 ??R?$less@VCSCI_Object@@@std@@QBE_NABVCSCI_Object@@0@Z ; std::less<CSCI_Object>::operator()
  0007e	88 45 ec	 mov	 BYTE PTR __Ans$[ebp], al

; 223  :                                 _X = _Ans ? _Left(_X) : _Right(_X); }

  00081	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	85 c9		 test	 ecx, ecx
  0008c	74 13		 je	 SHORT $L156597
  0008e	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 00		 mov	 eax, DWORD PTR [eax]
  0009c	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0009f	eb 11		 jmp	 SHORT $L156598
$L156597:
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	89 55 8c	 mov	 DWORD PTR -116+[ebp], edx
$L156598:
  000b2	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  000b5	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax
  000b8	eb 8e		 jmp	 SHORT $L152569
$L152570:

; 224  :                 }

  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$152567[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 225  :                 if (_Multi)

  000ca	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  000d2	85 d2		 test	 edx, edx
  000d4	74 3e		 je	 SHORT $L152572

; 226  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  000d6	c6 45 d0 01	 mov	 BYTE PTR $T156600[ebp], 1
  000da	8d 45 d0	 lea	 eax, DWORD PTR $T156600[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d cc	 lea	 ecx, DWORD PTR $T156601[ebp]
  000ed	51		 push	 ecx
  000ee	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Insert
  000f6	50		 push	 eax
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T156599[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	89 11		 mov	 DWORD PTR [ecx], edx
  00109	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0010f	e9 16 01 00 00	 jmp	 $L152563
$L152572:

; 227  :                 iterator _P = iterator(_Y);

  00114	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00117	52		 push	 edx
  00118	8d 4d c8	 lea	 ecx, DWORD PTR $T156602[ebp]
  0011b	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator
  00120	8b 00		 mov	 eax, DWORD PTR [eax]
  00122	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax

; 228  :                 if (!_Ans)

  00125	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00128	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0012e	85 c9		 test	 ecx, ecx
  00130	75 02		 jne	 SHORT $L152582

; 230  :                 else if (_P == begin())

  00132	eb 64		 jmp	 SHORT $L152593
$L152582:
  00134	8d 55 c4	 lea	 edx, DWORD PTR $T156603[ebp]
  00137	52		 push	 edx
  00138	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::begin
  00140	50		 push	 eax
  00141	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00144	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator==
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	85 c0		 test	 eax, eax
  00150	74 3e		 je	 SHORT $L152585

; 231  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  00152	c6 45 b8 01	 mov	 BYTE PTR $T156605[ebp], 1
  00156	8d 45 b8	 lea	 eax, DWORD PTR $T156605[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00161	52		 push	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  00165	50		 push	 eax
  00166	8d 4d b4	 lea	 ecx, DWORD PTR $T156606[ebp]
  00169	51		 push	 ecx
  0016a	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Insert
  00172	50		 push	 eax
  00173	8d 4d bc	 lea	 ecx, DWORD PTR $T156604[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00180	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00183	89 11		 mov	 DWORD PTR [ecx], edx
  00185	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00188	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018b	e9 9a 00 00 00	 jmp	 $L152563
$L152585:

; 233  :                         --_P;

  00190	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00193	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator--
$L152593:

; 234  :                 if (key_compare(_Key(_P._Mynode()), _Kfn()(_V)))

  00198	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  0019b	52		 push	 edx
  0019c	8d 4d b0	 lea	 ecx, DWORD PTR $T156607[ebp]
  0019f	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QBEABVCSCI_Object@@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn::operator()
  001a4	50		 push	 eax
  001a5	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Mynode
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAABVCSCI_Object@@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Key
  001b3	83 c4 04	 add	 esp, 4
  001b6	50		 push	 eax
  001b7	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	e8 00 00 00 00	 call	 ??R?$less@VCSCI_Object@@@std@@QBE_NABVCSCI_Object@@0@Z ; std::less<CSCI_Object>::operator()
  001c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c7	85 c0		 test	 eax, eax
  001c9	74 3b		 je	 SHORT $L152595

; 235  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  001cb	c6 45 a4 01	 mov	 BYTE PTR $T156609[ebp], 1
  001cf	8d 45 a4	 lea	 eax, DWORD PTR $T156609[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  001d6	51		 push	 ecx
  001d7	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  001da	52		 push	 edx
  001db	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  001de	50		 push	 eax
  001df	8d 4d a0	 lea	 ecx, DWORD PTR $T156610[ebp]
  001e2	51		 push	 ecx
  001e3	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Insert
  001eb	50		 push	 eax
  001ec	8d 4d a8	 lea	 ecx, DWORD PTR $T156608[ebp]
  001ef	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001fc	89 11		 mov	 DWORD PTR [ecx], edx
  001fe	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00201	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00204	eb 24		 jmp	 SHORT $L152563
$L152595:

; 236  :                 return (_Pairib(_P, false)); }

  00206	c6 45 94 00	 mov	 BYTE PTR $T156612[ebp], 0
  0020a	8d 55 94	 lea	 edx, DWORD PTR $T156612[ebp]
  0020d	52		 push	 edx
  0020e	8d 45 f0	 lea	 eax, DWORD PTR __P$[ebp]
  00211	50		 push	 eax
  00212	8d 4d 98	 lea	 ecx, DWORD PTR $T156611[ebp]
  00215	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00222	89 08		 mov	 DWORD PTR [eax], ecx
  00224	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00227	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L152563:
  0022a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156613:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$152567[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156616:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156615
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::insert
EXTRN	__imp__GetWindowRect@8:NEAR
;	COMDAT ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8
_this$ = -4
?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetWindowRect, COMDAT

; 96   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetWindowRect
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_Object@@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lbound
;	COMDAT ?lower_bound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
$T156622 = -4
?lower_bound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::lower_bound, COMDAT

; 402  :                 {return (iterator(_Lbound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_Object@@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lbound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T156622[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?lower_bound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_Object@@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::lower_bound
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156626 DD	019930520H
	DD	01H
	DD	FLAT:$T156628
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156628 DD	0ffffffffH
	DD	FLAT:$L156624
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__$EHRec$ = -12
__X$ = 8
?_Erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Erase, COMDAT

; 449  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156627
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 450  :                 for (_Nodeptr _Y = _X; _Y != _Nil; _X = _Y)

  0002e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax
  00034	eb 06		 jmp	 SHORT $L152617
$L152618:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00039	89 4d 08	 mov	 DWORD PTR __X$[ebp], ecx
$L152617:
  0003c	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  0003f	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00045	74 4b		 je	 SHORT $L152619

; 451  :                         {_Erase(_Right(_Y));

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Erase

; 452  :                         _Y = _Left(_Y);

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax

; 453  :                         _Destval(&_Value(_X));

  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Value
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Destval

; 454  :                         _Freenode(_X); }}

  00084	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00087	52		 push	 edx
  00088	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Freenode
  00090	eb a4		 jmp	 SHORT $L152618
$L152619:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156624:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156627:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156626
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Erase@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Erase
PUBLIC	?_Buynode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Buynode
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156634 DD	019930520H
	DD	01H
	DD	FLAT:$T156636
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156636 DD	0ffffffffH
	DD	FLAT:$L156632
xdata$x	ENDS
;	COMDAT ?_Init@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -20
__Lk$ = -16
__$EHRec$ = -12
?_Init@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXXZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Init, COMDAT

; 456  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156635
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :                 if (_Nil == 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00035	75 3a		 jne	 SHORT $L152623

; 458  :                         {_Nil = _Buynode(0, _Black);

  00037	6a 01		 push	 1
  00039	6a 00		 push	 0
  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Buynode
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A, eax ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil

; 459  :                         _Left(_Nil) = 0, _Right(_Nil) = 0; }

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00068	83 c4 04	 add	 esp, 4
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L152623:

; 460  :                 ++_Nilrefs;

  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nilrefs@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1IA ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nilrefs
  00077	83 c2 01	 add	 edx, 1
  0007a	89 15 00 00 00
	00		 mov	 DWORD PTR ?_Nilrefs@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1IA, edx ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nilrefs

; 461  :                 _Head = _Buynode(_Nil, _Red), _Size = 0;

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Buynode
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00096	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00099	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 462  :                 _Lmost() = _Head, _Rmost() = _Head; }

  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	89 10		 mov	 DWORD PTR [eax], edx
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost
  000b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	89 10		 mov	 DWORD PTR [eax], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156632:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156635:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156634
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Init@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXXZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Init
;	COMDAT ?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost, COMDAT

; 524  :                 {return (_Left(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156643 DD	019930520H
	DD	01H
	DD	FLAT:$T156645
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156645 DD	0ffffffffH
	DD	FLAT:$L156641
xdata$x	ENDS
;	COMDAT ?_Lrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__$EHRec$ = -12
__X$ = 8
?_Lrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lrotate, COMDAT

; 528  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156644
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 529  :                 _Nodeptr _Y = _Right(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 530  :                 _Right(_X) = _Left(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 531  :                 if (_Left(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00072	74 1c		 je	 SHORT $L152630

; 532  :                         _Parent(_Left(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L152630:

; 533  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 534  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L152631

; 535  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 536  :                 else if (_X == _Left(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L152634
$L152631:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L152633

; 537  :                         _Left(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 538  :                 else

  00106	eb 1c		 jmp	 SHORT $L152634
$L152633:

; 539  :                         _Right(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L152634:

; 540  :                 _Left(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156641:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156644:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156643
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lrotate
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156652 DD	019930520H
	DD	01H
	DD	FLAT:$T156654
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156654 DD	0ffffffffH
	DD	FLAT:$L156650
xdata$x	ENDS
;	COMDAT ?_Max@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__Lk$ = -16
$T156649 = -20
__$EHRec$ = -12
__P$ = 8
?_Max@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Max, COMDAT

; 543  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156653
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L152638:

; 544  :                 while (_Right(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  0003f	74 13		 je	 SHORT $L152639

; 545  :                         _P = _Right(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L152638
$L152639:

; 546  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T156649[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T156649[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156650:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156653:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156652
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Max@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Max
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156661 DD	019930520H
	DD	01H
	DD	FLAT:$T156663
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156663 DD	0ffffffffH
	DD	FLAT:$L156659
xdata$x	ENDS
;	COMDAT ?_Min@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__Lk$ = -16
$T156658 = -20
__P$ = 8
__$EHRec$ = -12
?_Min@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Min, COMDAT

; 548  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156662
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L152644:

; 549  :                 while (_Left(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  0003f	74 13		 je	 SHORT $L152645

; 550  :                         _P = _Left(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L152644
$L152645:

; 551  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T156658[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T156658[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156659:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156662:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156661
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Min@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Min
;	COMDAT ?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost, COMDAT

; 553  :                 {return (_Right(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root, COMDAT

; 557  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156671 DD	019930520H
	DD	01H
	DD	FLAT:$T156673
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156673 DD	0ffffffffH
	DD	FLAT:$L156669
xdata$x	ENDS
;	COMDAT ?_Rrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
__$EHRec$ = -12
?_Rrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rrotate, COMDAT

; 561  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156672
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :                 _Nodeptr _Y = _Left(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 563  :                 _Left(_X) = _Right(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 564  :                 if (_Right(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00072	74 1c		 je	 SHORT $L152655

; 565  :                         _Parent(_Right(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L152655:

; 566  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 567  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L152656

; 568  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 569  :                 else if (_X == _Right(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L152659
$L152656:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L152658

; 570  :                         _Right(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 571  :                 else

  00106	eb 1c		 jmp	 SHORT $L152659
$L152658:

; 572  :                         _Left(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L152659:

; 573  :                 _Right(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 574  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156669:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156672:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156671
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Rrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rrotate
PUBLIC	?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@@Z ; std::_Destroy
;	COMDAT ?_Destval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
?_Destval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Destval, COMDAT

; 594  :                 {_Destroy(&*_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Destval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Destval
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Mynode, COMDAT

; 114  :                         {return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QBEPAU_Node@23@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator, COMDAT

; 124  :                 iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator++
;	COMDAT ??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator++, COMDAT

; 134  :                         {iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 135  :                         ++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator++

; 136  :                         return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@AB_N@Z ENDP ; std::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator,bool>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@ABQAV3@@Z ; std::allocator<CSCIObjectMethodPair *>::construct
;	COMDAT ?_Ucopy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEPAPAVCSCIObjectMethodPair@@PBQAV3@0PAPAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__F$ = 8
__L$ = 12
__P$ = 16
?_Ucopy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEPAPAVCSCIObjectMethodPair@@PBQAV3@0PAPAV3@@Z PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ucopy, COMDAT

; 234  : 		{for (; _F != _L; ++_P, ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	eb 12		 jmp	 SHORT $L152752
$L152753:
  00009	8b 45 10	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 10	 mov	 DWORD PTR __P$[ebp], eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 4d 08	 mov	 DWORD PTR __F$[ebp], ecx
$L152752:
  0001b	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  0001e	3b 55 0c	 cmp	 edx, DWORD PTR __L$[ebp]
  00021	74 12		 je	 SHORT $L152754

; 235  : 			allocator.construct(_P, *_F);

  00023	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 10	 mov	 ecx, DWORD PTR __P$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@ABQAV3@@Z ; std::allocator<CSCIObjectMethodPair *>::construct
  00033	eb d4		 jmp	 SHORT $L152753
$L152754:

; 236  : 		return (_P); }

  00035	8b 45 10	 mov	 eax, DWORD PTR __P$[ebp]
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 0c 00	 ret	 12			; 0000000cH
?_Ucopy@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEPAPAVCSCIObjectMethodPair@@PBQAV3@0PAPAV3@@Z ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ucopy
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__F$ = 8
__N$ = 12
__X$ = 16
?_Ufill@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z PROC NEAR ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ufill, COMDAT

; 238  : 		{for (; 0 < _N; --_N, ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	eb 12		 jmp	 SHORT $L152757
$L152758:
  00009	8b 45 0c	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 0c	 mov	 DWORD PTR __N$[ebp], eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 4d 08	 mov	 DWORD PTR __F$[ebp], ecx
$L152757:
  0001b	83 7d 0c 00	 cmp	 DWORD PTR __N$[ebp], 0
  0001f	76 12		 jbe	 SHORT $L152759

; 239  : 			allocator.construct(_F, _X); }

  00021	8b 55 10	 mov	 edx, DWORD PTR __X$[ebp]
  00024	52		 push	 edx
  00025	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00028	50		 push	 eax
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@ABQAV3@@Z ; std::allocator<CSCIObjectMethodPair *>::construct
  00031	eb d6		 jmp	 SHORT $L152758
$L152759:
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@PAVCSCIObjectMethodPair@@V?$allocator@PAVCSCIObjectMethodPair@@@std@@@std@@IAEXPAPAVCSCIObjectMethodPair@@IABQAV3@@Z ENDP ; std::vector<CSCIObjectMethodPair *,std::allocator<CSCIObjectMethodPair *> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Allocate@std@@YAPAPAVCSCIObjectMethodPair@@HPAPAV2@@Z ; std::_Allocate
;	COMDAT ?allocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEPAPAVCSCIObjectMethodPair@@IPBX@Z
_TEXT	SEGMENT
_this$ = -4
__N$ = 8
?allocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEPAPAVCSCIObjectMethodPair@@IPBX@Z PROC NEAR ; std::allocator<CSCIObjectMethodPair *>::allocate, COMDAT

; 59   : 		{return (_Allocate((difference_type)_N, (pointer)0)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPAPAVCSCIObjectMethodPair@@HPAPAV2@@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?allocate@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEPAPAVCSCIObjectMethodPair@@IPBX@Z ENDP ; std::allocator<CSCIObjectMethodPair *>::allocate
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QBEABVCSCI_Object@@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??R_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QBEABVCSCI_Object@@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z PROC NEAR ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn::operator(), COMDAT

; 26   : 		{return (_X.first); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??R_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QBEABVCSCI_Object@@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ENDP ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn::operator()
_TEXT	ENDS
PUBLIC	?_Consval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@ABU32@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Consval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156690 DD	019930520H
	DD	01H
	DD	FLAT:$T156692
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156692 DD	0ffffffffH
	DD	FLAT:$L156688
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z
_TEXT	SEGMENT
$T156686 = -24
$T156687 = -28
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -32
__Lk$ = -20
__Z$ = -16
__X$ = 12
__Y$ = 16
__V$ = 20
?_Insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Insert, COMDAT

; 464  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156691
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	56		 push	 esi
  0001c	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 465  :                 _Nodeptr _Z = _Buynode(_Y, _Red);

  0002f	6a 00		 push	 0
  00031	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  00034	50		 push	 eax
  00035	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Buynode
  0003d	89 45 f0	 mov	 DWORD PTR __Z$[ebp], eax

; 466  :                 _Left(_Z) = _Nil, _Right(_Z) = _Nil;

  00040	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00052	89 10		 mov	 DWORD PTR [eax], edx
  00054	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00066	89 08		 mov	 DWORD PTR [eax], ecx

; 467  :                 _Consval(&_Value(_Z), _V);

  00068	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Value
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Consval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@ABU32@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Consval

; 468  :                 ++_Size;

  00081	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00087	83 c2 01	 add	 edx, 1
  0008a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 470  :                         || key_compare(_Kfn()(_V), _Key(_Y)))

  00090	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00096	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00099	74 39		 je	 SHORT $L152778
  0009b	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0009e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  000a4	75 2e		 jne	 SHORT $L152778
  000a6	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAABVCSCI_Object@@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Key
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  000b6	52		 push	 edx
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR $T156686[ebp]
  000ba	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@std@@QBEABVCSCI_Object@@ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ; std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn::operator()
  000bf	50		 push	 eax
  000c0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 01	 add	 ecx, 1
  000c6	e8 00 00 00 00	 call	 ??R?$less@VCSCI_Object@@@std@@QBE_NABVCSCI_Object@@0@Z ; std::less<CSCI_Object>::operator()
  000cb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000d0	85 c0		 test	 eax, eax
  000d2	74 56		 je	 SHORT $L152777
$L152778:

; 471  :                         {_Left(_Y) = _Z;

  000d4	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000e3	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :                         if (_Y == _Head)

  000e5	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000eb	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000ee	75 1c		 jne	 SHORT $L152779

; 473  :                                 {_Root() = _Z;

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx

; 474  :                                 _Rmost() = _Z; }

  000fd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost
  00105	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00108	89 10		 mov	 DWORD PTR [eax], edx

; 475  :                         else if (_Y == _Lmost())

  0010a	eb 1c		 jmp	 SHORT $L152781
$L152779:
  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost
  00114	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00117	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00119	75 0d		 jne	 SHORT $L152781

; 476  :                                 _Lmost() = _Z; }

  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lmost
  00123	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00126	89 10		 mov	 DWORD PTR [eax], edx
$L152781:

; 477  :                 else

  00128	eb 2d		 jmp	 SHORT $L152783
$L152777:

; 478  :                         {_Right(_Y) = _Z;

  0012a	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00139	89 08		 mov	 DWORD PTR [eax], ecx

; 479  :                         if (_Y == _Rmost())

  0013b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost
  00143	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00146	3b 10		 cmp	 edx, DWORD PTR [eax]
  00148	75 0d		 jne	 SHORT $L152783

; 480  :                                 _Rmost() = _Z; }

  0014a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rmost
  00152	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00155	89 08		 mov	 DWORD PTR [eax], ecx
$L152783:

; 481  :                 for (_X = _Z; _X != _Root()

  00157	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  0015a	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx
$L152785:

; 482  :                         && _Color(_Parent(_X)) == _Red; )

  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00168	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016a	0f 84 08 03 00
	00		 je	 $L152786
  00170	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00179	83 c4 04	 add	 esp, 4
  0017c	8b 00		 mov	 eax, DWORD PTR [eax]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00184	83 c4 04	 add	 esp, 4
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	0f 85 e8 02 00
	00		 jne	 $L152786

; 483  :                         if (_Parent(_X) == _Left(_Parent(_Parent(_X))))

  00190	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00199	83 c4 04	 add	 esp, 4
  0019c	8b f0		 mov	 esi, eax
  0019e	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  001a7	83 c4 04	 add	 esp, 4
  001aa	8b 00		 mov	 eax, DWORD PTR [eax]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  001b2	83 c4 04	 add	 esp, 4
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  001bd	83 c4 04	 add	 esp, 4
  001c0	8b 16		 mov	 edx, DWORD PTR [esi]
  001c2	3b 10		 cmp	 edx, DWORD PTR [eax]
  001c4	0f 85 57 01 00
	00		 jne	 $L152787

; 484  :                                 {_Y = _Right(_Parent(_Parent(_X)));

  001ca	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  001d3	83 c4 04	 add	 esp, 4
  001d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  001de	83 c4 04	 add	 esp, 4
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  001e9	83 c4 04	 add	 esp, 4
  001ec	8b 00		 mov	 eax, DWORD PTR [eax]
  001ee	89 45 10	 mov	 DWORD PTR __Y$[ebp], eax

; 485  :                                 if (_Color(_Y) == _Red)

  001f1	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  001fa	83 c4 04	 add	 esp, 4
  001fd	83 38 00	 cmp	 DWORD PTR [eax], 0
  00200	75 78		 jne	 SHORT $L152788

; 486  :                                         {_Color(_Parent(_X)) = _Black;

  00202	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0020b	83 c4 04	 add	 esp, 4
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00216	83 c4 04	 add	 esp, 4
  00219	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 487  :                                         _Color(_Y) = _Black;

  0021f	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00228	83 c4 04	 add	 esp, 4
  0022b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 488  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00231	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0023a	83 c4 04	 add	 esp, 4
  0023d	8b 00		 mov	 eax, DWORD PTR [eax]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00245	83 c4 04	 add	 esp, 4
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00250	83 c4 04	 add	 esp, 4
  00253	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 489  :                                         _X = _Parent(_Parent(_X)); }

  00259	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00262	83 c4 04	 add	 esp, 4
  00265	8b 00		 mov	 eax, DWORD PTR [eax]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0026d	83 c4 04	 add	 esp, 4
  00270	8b 08		 mov	 ecx, DWORD PTR [eax]
  00272	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 490  :                                 else

  00275	e9 a2 00 00 00	 jmp	 $L152789
$L152788:

; 491  :                                         {if (_X == _Right(_Parent(_X)))

  0027a	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 00		 mov	 eax, DWORD PTR [eax]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0028e	83 c4 04	 add	 esp, 4
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00294	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00296	75 1d		 jne	 SHORT $L152790

; 492  :                                                 {_X = _Parent(_X);

  00298	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0029b	52		 push	 edx
  0029c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 00		 mov	 eax, DWORD PTR [eax]
  002a6	89 45 0c	 mov	 DWORD PTR __X$[ebp], eax

; 493  :                                                 _Lrotate(_X); }

  002a9	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002ac	51		 push	 ecx
  002ad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lrotate
$L152790:

; 494  :                                         _Color(_Parent(_X)) = _Black;

  002b5	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  002be	83 c4 04	 add	 esp, 4
  002c1	8b 00		 mov	 eax, DWORD PTR [eax]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  002c9	83 c4 04	 add	 esp, 4
  002cc	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 495  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  002d2	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  002db	83 c4 04	 add	 esp, 4
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  002e6	83 c4 04	 add	 esp, 4
  002e9	8b 00		 mov	 eax, DWORD PTR [eax]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  002f1	83 c4 04	 add	 esp, 4
  002f4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 496  :                                         _Rrotate(_Parent(_Parent(_X))); }}

  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00303	83 c4 04	 add	 esp, 4
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0030e	83 c4 04	 add	 esp, 4
  00311	8b 00		 mov	 eax, DWORD PTR [eax]
  00313	50		 push	 eax
  00314	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rrotate
$L152789:

; 497  :                         else

  0031c	e9 52 01 00 00	 jmp	 $L152793
$L152787:

; 498  :                                 {_Y = _Left(_Parent(_Parent(_X)));

  00321	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0032a	83 c4 04	 add	 esp, 4
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00340	83 c4 04	 add	 esp, 4
  00343	8b 08		 mov	 ecx, DWORD PTR [eax]
  00345	89 4d 10	 mov	 DWORD PTR __Y$[ebp], ecx

; 499  :                                 if (_Color(_Y) == _Red)

  00348	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  0034b	52		 push	 edx
  0034c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00351	83 c4 04	 add	 esp, 4
  00354	83 38 00	 cmp	 DWORD PTR [eax], 0
  00357	75 78		 jne	 SHORT $L152792

; 500  :                                         {_Color(_Parent(_X)) = _Black;

  00359	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00362	83 c4 04	 add	 esp, 4
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  0036d	83 c4 04	 add	 esp, 4
  00370	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 501  :                                         _Color(_Y) = _Black;

  00376	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00379	52		 push	 edx
  0037a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  0037f	83 c4 04	 add	 esp, 4
  00382	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 502  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00388	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00391	83 c4 04	 add	 esp, 4
  00394	8b 08		 mov	 ecx, DWORD PTR [eax]
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0039c	83 c4 04	 add	 esp, 4
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  003a7	83 c4 04	 add	 esp, 4
  003aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 503  :                                         _X = _Parent(_Parent(_X)); }

  003b0	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	51		 push	 ecx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 10		 mov	 edx, DWORD PTR [eax]
  003c9	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx

; 504  :                                 else

  003cc	e9 a2 00 00 00	 jmp	 $L152793
$L152792:

; 505  :                                         {if (_X == _Left(_Parent(_X)))

  003d1	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  003da	83 c4 04	 add	 esp, 4
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	51		 push	 ecx
  003e0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  003e5	83 c4 04	 add	 esp, 4
  003e8	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  003eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ed	75 1d		 jne	 SHORT $L152794

; 506  :                                                 {_X = _Parent(_X);

  003ef	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  003f8	83 c4 04	 add	 esp, 4
  003fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fd	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 507  :                                                 _Rrotate(_X); }

  00400	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00403	52		 push	 edx
  00404	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00407	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Rrotate
$L152794:

; 508  :                                         _Color(_Parent(_X)) = _Black;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00415	83 c4 04	 add	 esp, 4
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00420	83 c4 04	 add	 esp, 4
  00423	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 509  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00429	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00432	83 c4 04	 add	 esp, 4
  00435	8b 00		 mov	 eax, DWORD PTR [eax]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0043d	83 c4 04	 add	 esp, 4
  00440	8b 08		 mov	 ecx, DWORD PTR [eax]
  00442	51		 push	 ecx
  00443	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00448	83 c4 04	 add	 esp, 4
  0044b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 510  :                                         _Lrotate(_Parent(_Parent(_X))); }}

  00451	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0045a	83 c4 04	 add	 esp, 4
  0045d	8b 00		 mov	 eax, DWORD PTR [eax]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00465	83 c4 04	 add	 esp, 4
  00468	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046a	51		 push	 ecx
  0046b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lrotate
$L152793:
  00473	e9 e5 fc ff ff	 jmp	 $L152785
$L152786:

; 511  :                 _Color(_Root()) = _Black;

  00478	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  00480	8b 10		 mov	 edx, DWORD PTR [eax]
  00482	52		 push	 edx
  00483	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00488	83 c4 04	 add	 esp, 4
  0048b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 512  :                 return (iterator(_Z)); }

  00491	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e4	 lea	 ecx, DWORD PTR $T156687[ebp]
  00498	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::iterator
  0049d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  004a2	89 0a		 mov	 DWORD PTR [edx], ecx
  004a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ab	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  004b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	5e		 pop	 esi
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156688:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156691:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156690
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Insert
PUBLIC	?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156699 DD	019930520H
	DD	01H
	DD	FLAT:$T156701
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156701 DD	0ffffffffH
	DD	FLAT:$L156697
xdata$x	ENDS
;	COMDAT ?_Lbound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_Object@@@Z
_TEXT	SEGMENT
$T156696 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
__Kv$ = 8
?_Lbound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_Object@@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lbound, COMDAT

; 514  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156700
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 515  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 516  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L152802:

; 517  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  0004d	74 51		 je	 SHORT $L152803

; 518  :                         if (key_compare(_Key(_X), _Kv))

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAABVCSCI_Object@@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Key
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@VCSCI_Object@@@std@@QBE_NABVCSCI_Object@@0@Z ; std::less<CSCI_Object>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 13		 je	 SHORT $L152804

; 519  :                                 _X = _Right(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx

; 520  :                         else

  00085	eb 17		 jmp	 SHORT $L152805
$L152804:

; 521  :                                 _Y = _X, _X = _Left(_X);

  00087	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0008a	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L152805:
  0009e	eb a4		 jmp	 SHORT $L152802
$L152803:

; 522  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T156696[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T156696[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156697:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156700:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156699
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lbound@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_Object@@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Lbound
PUBLIC	?_Charalloc@?$allocator@PAVCNoButtonDlg@@@std@@QAEPADI@Z ; std::allocator<CNoButtonDlg *>::_Charalloc
;	COMDAT ?_Buynode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT
_this$ = -8
__S$ = -4
__Parg$ = 8
__Carg$ = 12
?_Buynode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Buynode, COMDAT

; 586  :                 {_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  :                         1 * sizeof (_Node));

  00009	6a 18		 push	 24			; 00000018H
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCNoButtonDlg@@@std@@QAEPADI@Z ; std::allocator<CNoButtonDlg *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 588  :                 _Parent(_S) = _Parg;

  00016	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 589  :                 _Color(_S) = _Carg;

  00027	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00030	83 c4 04	 add	 esp, 4
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Carg$[ebp]
  00036	89 08		 mov	 DWORD PTR [eax], ecx

; 590  :                 return (_S); }

  00038	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?_Buynode@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Buynode
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::const_iterator, COMDAT

; 65   :                 const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Inc
;	COMDAT ??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator++, COMDAT

; 131  :                         {_Inc();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Inc

; 132  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Dec
;	COMDAT ??Fiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator--, COMDAT

; 138  :                         {_Dec();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Dec

; 139  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?_Construct@std@@YAXPAPAVCSCIObjectMethodPair@@ABQAV2@@Z ; std::_Construct
;	COMDAT ?construct@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?construct@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@ABQAV3@@Z PROC NEAR ; std::allocator<CSCIObjectMethodPair *>::construct, COMDAT

; 66   : 		{_Construct(_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAPAVCSCIObjectMethodPair@@ABQAV2@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?construct@?$allocator@PAVCSCIObjectMethodPair@@@std@@QAEXPAPAVCSCIObjectMethodPair@@ABQAV3@@Z ENDP ; std::allocator<CSCIObjectMethodPair *>::construct
_TEXT	ENDS
PUBLIC	?_Allocate@std@@YAPADHPAD@Z			; std::_Allocate
;	COMDAT ?_Charalloc@?$allocator@PAVCNoButtonDlg@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4
__N$ = 8
?_Charalloc@?$allocator@PAVCNoButtonDlg@@@std@@QAEPADI@Z PROC NEAR ; std::allocator<CNoButtonDlg *>::_Charalloc, COMDAT

; 61   : 		{return (_Allocate((difference_type)_N,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 			(char _FARQ *)0)); }

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPADHPAD@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Charalloc@?$allocator@PAVCNoButtonDlg@@@std@@QAEPADI@Z ENDP ; std::allocator<CNoButtonDlg *>::_Charalloc
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root, COMDAT

; 559  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IBEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Root
_TEXT	ENDS
PUBLIC	?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@ABU21@@Z ; std::_Construct
;	COMDAT ?_Consval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@ABU32@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
_this$ = -4
?_Consval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@ABU32@@Z PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Consval, COMDAT

; 592  :                 {_Construct(&*_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@ABU21@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Consval@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@2@ABU32@@Z ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Consval
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156715 DD	019930520H
	DD	01H
	DD	FLAT:$T156717
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156717 DD	0ffffffffH
	DD	FLAT:$L156713
xdata$x	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$152888 = -20
?_Dec@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Dec, COMDAT

; 92   :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156716
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :                                 && _Parent(_Parent(_Ptr)) == _Ptr)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Color
  00039	83 c4 04	 add	 esp, 4
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 39		 jne	 SHORT $L152884
  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 02		 mov	 eax, DWORD PTR [edx]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 00		 mov	 eax, DWORD PTR [eax]
  0005f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00061	75 17		 jne	 SHORT $L152884

; 95   :                                 _Ptr = _Right(_Ptr);

  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 11		 mov	 DWORD PTR [ecx], edx

; 96   :                         else if (_Left(_Ptr) != _Nil)

  00078	eb 72		 jmp	 SHORT $L152887
$L152884:
  0007a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  00085	83 c4 04	 add	 esp, 4
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00090	74 20		 je	 SHORT $L152886

; 97   :                                 _Ptr = _Max(_Left(_Ptr));

  00092	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?_Max@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Max
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :                         else

  000b0	eb 3a		 jmp	 SHORT $L152887
$L152886:

; 100  :                                 while (_Ptr == _Left(_P = _Parent(_Ptr)))

  000b2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ec	 mov	 DWORD PTR __P$152888[ebp], ecx
  000c5	8b 55 ec	 mov	 edx, DWORD PTR __P$152888[ebp]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Left
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d8	75 0a		 jne	 SHORT $L152891

; 101  :                                         _Ptr = _P;

  000da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __P$152888[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx
  000e2	eb ce		 jmp	 SHORT $L152886
$L152891:

; 102  :                                 _Ptr = _P; }}

  000e4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 45 ec	 mov	 eax, DWORD PTR __P$152888[ebp]
  000ea	89 02		 mov	 DWORD PTR [edx], eax
$L152887:
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156713:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156716:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156715
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Dec@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Dec
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156723 DD	019930520H
	DD	01H
	DD	FLAT:$T156725
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156725 DD	0ffffffffH
	DD	FLAT:$L156721
xdata$x	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$152897 = -20
?_Inc@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Inc, COMDAT

; 104  :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156724
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  :                         if (_Right(_Ptr) != _Nil)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Nil
  00044	74 20		 je	 SHORT $L152895

; 106  :                                 _Ptr = _Min(_Right(_Ptr));

  00046	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 107  :                         else

  00064	eb 4f		 jmp	 SHORT $L152901
$L152895:

; 109  :                                 while (_Ptr == _Right(_P = _Parent(_Ptr)))

  00066	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d ec	 mov	 DWORD PTR __P$152897[ebp], ecx
  00079	8b 55 ec	 mov	 edx, DWORD PTR __P$152897[ebp]
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  00082	83 c4 04	 add	 esp, 4
  00085	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0008c	75 0a		 jne	 SHORT $L152900

; 110  :                                         _Ptr = _P;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __P$152897[ebp]
  00094	89 08		 mov	 DWORD PTR [eax], ecx
  00096	eb ce		 jmp	 SHORT $L152895
$L152900:

; 111  :                                 if (_Right(_Ptr) != _P)

  00098	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Right
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	3b 4d ec	 cmp	 ecx, DWORD PTR __P$152897[ebp]
  000ab	74 08		 je	 SHORT $L152901

; 112  :                                         _Ptr = _P; }}

  000ad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __P$152897[ebp]
  000b3	89 02		 mov	 DWORD PTR [edx], eax
$L152901:
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156721:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156724:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156723
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Inc@const_iterator@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@std@@QAEXXZ ENDP ; std::_Tree<CSCI_Object,std::pair<CSCI_Object const ,CNoButtonDlg *>,std::map<CSCI_Object,CNoButtonDlg *,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::_Kfn,std::less<CSCI_Object>,std::allocator<CNoButtonDlg *> >::const_iterator::_Inc
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__X$ = 16
?copy@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z PROC NEAR ; std::copy, COMDAT

; 18   : 	{for (; _F != _L; ++_X, ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 12		 jmp	 SHORT $L153312
$L153313:
  00005	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00008	83 c0 04	 add	 eax, 4
  0000b	89 45 10	 mov	 DWORD PTR __X$[ebp], eax
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00011	83 c1 04	 add	 ecx, 4
  00014	89 4d 08	 mov	 DWORD PTR __F$[ebp], ecx
$L153312:
  00017	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  0001a	3b 55 0c	 cmp	 edx, DWORD PTR __L$[ebp]
  0001d	74 0c		 je	 SHORT $L153314

; 19   : 		*_X = *_F;

  0001f	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 10		 mov	 DWORD PTR [eax], edx
  00029	eb da		 jmp	 SHORT $L153313
$L153314:

; 20   : 	return (_X); }

  0002b	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?copy@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z ENDP ; std::copy
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
__Tmp$ = -4
?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@0@Z PROC NEAR ; std::swap, COMDAT

; 100  : 	{_Ty _Tmp = _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 101  : 	_X = _Y, _Y = _Tmp; }

  0000c	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Y$[ebp]
  00019	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_Object@@U?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@U_Kfn@?$map@VCSCI_Object@@PAVCNoButtonDlg@@U?$less@VCSCI_Object@@@std@@V?$allocator@PAVCNoButtonDlg@@@4@@3@U?$less@VCSCI_Object@@@3@V?$allocator@PAVCNoButtonDlg@@@3@@1@0@Z ENDP ; std::swap
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAPAVCSCIObjectMethodPair@@0ABQAV2@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__X$ = 16
?fill@std@@YAXPAPAVCSCIObjectMethodPair@@0ABQAV2@@Z PROC NEAR ; std::fill, COMDAT

; 38   : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 09		 jmp	 SHORT $L153323
$L153324:
  00005	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00008	83 c0 04	 add	 eax, 4
  0000b	89 45 08	 mov	 DWORD PTR __F$[ebp], eax
$L153323:
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00011	3b 4d 0c	 cmp	 ecx, DWORD PTR __L$[ebp]
  00014	74 0c		 je	 SHORT $L153325

; 39   : 		*_F = _X; }

  00016	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00019	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	89 0a		 mov	 DWORD PTR [edx], ecx
  00020	eb e3		 jmp	 SHORT $L153324
$L153325:
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?fill@std@@YAXPAPAVCSCIObjectMethodPair@@0ABQAV2@@Z ENDP ; std::fill
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__X$ = 16
?copy_backward@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z PROC NEAR ; std::copy_backward, COMDAT

; 24   : 	{while (_F != _L)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
$L153328:
  00003	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00006	3b 45 0c	 cmp	 eax, DWORD PTR __L$[ebp]
  00009	74 1e		 je	 SHORT $L153329

; 25   : 		*--_X = *--_L;

  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0000e	83 e9 04	 sub	 ecx, 4
  00011	89 4d 0c	 mov	 DWORD PTR __L$[ebp], ecx
  00014	8b 55 10	 mov	 edx, DWORD PTR __X$[ebp]
  00017	83 ea 04	 sub	 edx, 4
  0001a	89 55 10	 mov	 DWORD PTR __X$[ebp], edx
  0001d	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00020	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	89 10		 mov	 DWORD PTR [eax], edx
  00027	eb da		 jmp	 SHORT $L153328
$L153329:

; 26   : 	return (_X); }

  00029	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?copy_backward@std@@YAPAPAVCSCIObjectMethodPair@@PAPAV2@00@Z ENDP ; std::copy_backward
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCSCIObjectMethodPair@@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAPAVCSCIObjectMethodPair@@@Z PROC NEAR ; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAPAVCSCIObjectMethodPair@@@Z ENDP	; std::_Destroy
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@@Z PROC NEAR ; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@@Z ENDP ; std::_Destroy
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAPAVCSCIObjectMethodPair@@HPAPAV2@@Z
_TEXT	SEGMENT
__N$ = 8
?_Allocate@std@@YAPAPAVCSCIObjectMethodPair@@HPAPAV2@@Z PROC NEAR ; std::_Allocate, COMDAT

; 27   : 	{if (_N < 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 08 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	7d 07		 jge	 SHORT $L153334

; 28   : 		_N = 0;

  00009	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0
$L153334:

; 30   : 		(_SIZT)_N * sizeof (_Ty))); }

  00010	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  00013	c1 e0 02	 shl	 eax, 2
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001c	83 c4 04	 add	 esp, 4
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Allocate@std@@YAPAPAVCSCIObjectMethodPair@@HPAPAV2@@Z ENDP ; std::_Allocate
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT
__N$ = 8
?_Allocate@std@@YAPADHPAD@Z PROC NEAR			; std::_Allocate, COMDAT

; 27   : 	{if (_N < 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 08 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	7d 07		 jge	 SHORT $L153339

; 28   : 		_N = 0;

  00009	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0
$L153339:

; 30   : 		(_SIZT)_N * sizeof (_Ty))); }

  00010	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00019	83 c4 04	 add	 esp, 4
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Allocate@std@@YAPADHPAD@Z ENDP			; std::_Allocate
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT ?_Construct@std@@YAXPAPAVCSCIObjectMethodPair@@ABQAV2@@Z
_TEXT	SEGMENT
$T156740 = -4
__P$ = 8
__V$ = 12
?_Construct@std@@YAXPAPAVCSCIObjectMethodPair@@ABQAV2@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00009	50		 push	 eax
  0000a	6a 04		 push	 4
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T156740[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T156740[ebp], 0
  0001b	74 12		 je	 SHORT $L156741
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR $T156740[ebp]
  00020	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 01		 mov	 DWORD PTR [ecx], eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR $T156740[ebp]
  0002a	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  0002d	eb 07		 jmp	 SHORT $L156742
$L156741:
  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L156742:
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?_Construct@std@@YAXPAPAVCSCIObjectMethodPair@@ABQAV2@@Z ENDP ; std::_Construct
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__P$ = 12
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 42   : 	{return (_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABU01@@Z ; std::pair<CSCI_Object const ,CNoButtonDlg *>::pair<CSCI_Object const ,CNoButtonDlg *>
PUBLIC	??3@YAXPAX0@Z					; operator delete
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xmemory
xdata$x	SEGMENT
$T156751 DD	019930520H
	DD	01H
	DD	FLAT:$T156753
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156753 DD	0ffffffffH
	DD	FLAT:$L156749
xdata$x	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@ABU21@@Z
_TEXT	SEGMENT
$T156745 = -16
$T156746 = -20
__$EHRec$ = -12
__P$ = 8
__V$ = 12
?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@ABU21@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156752
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001e	50		 push	 eax
  0001f	6a 08		 push	 8
  00021	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00026	83 c4 08	 add	 esp, 8
  00029	89 45 ec	 mov	 DWORD PTR $T156746[ebp], eax
  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00033	83 7d ec 00	 cmp	 DWORD PTR $T156746[ebp], 0
  00037	74 11		 je	 SHORT $L156747
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR $T156746[ebp]
  00040	e8 00 00 00 00	 call	 ??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABU01@@Z ; std::pair<CSCI_Object const ,CNoButtonDlg *>::pair<CSCI_Object const ,CNoButtonDlg *>
  00045	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  00048	eb 07		 jmp	 SHORT $L156748
$L156747:
  0004a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L156748:
  00051	8b 55 e8	 mov	 edx, DWORD PTR -24+[ebp]
  00054	89 55 f0	 mov	 DWORD PTR $T156745[ebp], edx
  00057	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156749:
  00000	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ec	 mov	 ecx, DWORD PTR $T156746[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
$L156752:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156751
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@1@ABU21@@Z ENDP ; std::_Construct
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 45   : 	{return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABU01@@Z PROC NEAR ; std::pair<CSCI_Object const ,CNoButtonDlg *>::pair<CSCI_Object const ,CNoButtonDlg *>, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001c	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0?$pair@$$CBVCSCI_Object@@PAVCNoButtonDlg@@@std@@QAE@ABU01@@Z ENDP ; std::pair<CSCI_Object const ,CNoButtonDlg *>::pair<CSCI_Object const ,CNoButtonDlg *>
_TEXT	ENDS
;	COMDAT ??_ECSkinEditField@@WGA@AEPAXI@Z
_TEXT	SEGMENT
??_ECSkinEditField@@WGA@AEPAXI@Z PROC NEAR		; CSkinEditField::`vector deleting destructor', COMDAT
  00000	83 e9 60	 sub	 ecx, 96			; 00000060H
  00003	e9 00 00 00 00	 jmp	 ??_ECSkinEditField@@UAEPAXI@Z ; CSkinEditField::`vector deleting destructor'
??_ECSkinEditField@@WGA@AEPAXI@Z ENDP			; CSkinEditField::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECSkinEditField@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECSkinEditField@@WHE@AEPAXI@Z PROC NEAR		; CSkinEditField::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECSkinEditField@@UAEPAXI@Z ; CSkinEditField::`vector deleting destructor'
??_ECSkinEditField@@WHE@AEPAXI@Z ENDP			; CSkinEditField::`vector deleting destructor'
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
;	COMDAT ?LimitText@CEdit@@QAEXH@Z
_TEXT	SEGMENT
_nChars$ = 8
_this$ = -4
?LimitText@CEdit@@QAEXH@Z PROC NEAR			; CEdit::LimitText, COMDAT

; 825  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_LIMITTEXT, nChars, 0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR _nChars$[ebp]
  0000c	50		 push	 eax
  0000d	68 c5 00 00 00	 push	 197			; 000000c5H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?LimitText@CEdit@@QAEXH@Z ENDP				; CEdit::LimitText
_TEXT	ENDS
;	COMDAT ?LimitText@CRichEditCtrl@@QAEXJ@Z
_TEXT	SEGMENT
_nChars$ = 8
_this$ = -4
?LimitText@CRichEditCtrl@@QAEXJ@Z PROC NEAR		; CRichEditCtrl::LimitText, COMDAT

; 642  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_EXLIMITTEXT, 0, nChars); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _nChars$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 35 04 00 00	 push	 1077			; 00000435H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?LimitText@CRichEditCtrl@@QAEXJ@Z ENDP			; CRichEditCtrl::LimitText
_TEXT	ENDS
;	COMDAT ?RequestResize@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?RequestResize@CRichEditCtrl@@QAEXXZ PROC NEAR		; CRichEditCtrl::RequestResize, COMDAT

; 669  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_REQUESTRESIZE, 0, 0L); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 41 04 00 00	 push	 1089			; 00000441H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?RequestResize@CRichEditCtrl@@QAEXXZ ENDP		; CRichEditCtrl::RequestResize
_TEXT	ENDS
;	COMDAT ?SetEventMask@CRichEditCtrl@@QAEKK@Z
_TEXT	SEGMENT
_dwEventMask$ = 8
_this$ = -4
?SetEventMask@CRichEditCtrl@@QAEKK@Z PROC NEAR		; CRichEditCtrl::SetEventMask, COMDAT

; 678  : 	{ ASSERT(::IsWindow(m_hWnd)); return (DWORD)::SendMessage(m_hWnd, EM_SETEVENTMASK, 0, dwEventMask); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _dwEventMask$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 45 04 00 00	 push	 1093			; 00000445H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?SetEventMask@CRichEditCtrl@@QAEKK@Z ENDP		; CRichEditCtrl::SetEventMask
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0MemID@@QAE@ABV0@@Z PROC NEAR				; MemID::MemID, COMDAT

; 19   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  0000d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00010	66 89 10	 mov	 WORD PTR [eax], dx

; 20   : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0MemID@@QAE@ABV0@@Z ENDP				; MemID::MemID
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4
??BMemID@@QBEGXZ PROC NEAR				; MemID::operator unsigned short, COMDAT

; 93   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : 		return handle;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 00	 mov	 ax, WORD PTR [eax]

; 95   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BMemID@@QBEGXZ ENDP					; MemID::operator unsigned short
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@ABVMemID@@@Z		; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABV0@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 229  : 	ObjectID(const ObjectID& id) : FakeObjectID((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABV0@@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeObjectID@@QAE@ABVMemID@@@Z PROC NEAR		; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@ABVMemID@@@Z ENDP			; FakeObjectID::FakeObjectID
_TEXT	ENDS
PUBLIC	?GetProperty@Object@@QAEFG@Z			; Object::GetProperty
PUBLIC	??CFakeObjectID@@QBEPAUObject@@XZ		; FakeObjectID::operator->
PUBLIC	??0ObjectID@@QAE@G@Z				; ObjectID::ObjectID
PUBLIC	?IsObject@ObjectID@@QBEHXZ			; ObjectID::IsObject
PUBLIC	??DTextID@@QAEPADXZ				; TextID::operator*
EXTRN	??0TextID@@QAE@G@Z:NEAR				; TextID::TextID
;	COMDAT ??DStringID@@QAEPADXZ
_TEXT	SEGMENT
$T156769 = -8
$T156770 = -12
_this$ = -16
_obj$ = -4
??DStringID@@QAEPADXZ PROC NEAR				; StringID::operator*, COMDAT

; 63   : 	char * operator *() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 		ObjectID obj ( handle );

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  00013	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID

; 65   : 
; 66   : 		if ( obj.IsObject() ) {

  00018	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  0001b	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  00020	85 c0		 test	 eax, eax
  00022	74 23		 je	 SHORT $L118651

; 67   : 			return *(TextID)obj->GetProperty ( s_data );

  00024	6a 71		 push	 113			; 00000071H
  00026	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  00029	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0002e	8b c8		 mov	 ecx, eax
  00030	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty
  00035	50		 push	 eax
  00036	8d 4d f8	 lea	 ecx, DWORD PTR $T156769[ebp]
  00039	e8 00 00 00 00	 call	 ??0TextID@@QAE@G@Z	; TextID::TextID
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
  00045	eb 16		 jmp	 SHORT $L118649
$L118651:

; 69   : 
; 70   : 		return *(TextID)handle;

  00047	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	66 8b 02	 mov	 ax, WORD PTR [edx]
  0004d	50		 push	 eax
  0004e	8d 4d f4	 lea	 ecx, DWORD PTR $T156770[ebp]
  00051	e8 00 00 00 00	 call	 ??0TextID@@QAE@G@Z	; TextID::TextID
  00056	8b c8		 mov	 ecx, eax
  00058	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
$L118649:

; 71   : 	}

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??DStringID@@QAEPADXZ ENDP				; StringID::operator*
_TEXT	ENDS
PUBLIC	?GetPropAddrCheck@Object@@QAEPAFG@Z		; Object::GetPropAddrCheck
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@Object@@QAEFG@Z PROC NEAR			; Object::GetProperty, COMDAT

; 170  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 		//	get a property given a selector
; 172  : 		return *GetPropAddrCheck(selector);

  00007	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetPropAddrCheck@Object@@QAEPAFG@Z ; Object::GetPropAddrCheck
  00014	66 8b 00	 mov	 ax, WORD PTR [eax]

; 173  : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?GetProperty@Object@@QAEFG@Z ENDP			; Object::GetProperty
_TEXT	ENDS
PUBLIC	?GetPropAddr@Object@@QAEPAFG@Z			; Object::GetPropAddr
EXTRN	?Fatal@MsgMgr@@QAAXHZZ:NEAR			; MsgMgr::Fatal
EXTRN	?msgMgr@@3PAVMsgMgr@@A:DWORD			; msgMgr
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_property$ = -4
?GetPropAddrCheck@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddrCheck, COMDAT

; 153  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 154  : 		//	get a property's address, checking for valid property
; 155  : 		Property* property = GetPropAddr(selector);

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetPropAddr@Object@@QAEPAFG@Z ; Object::GetPropAddr
  00016	89 45 fc	 mov	 DWORD PTR _property$[ebp], eax

; 156  : 		if (!property)

  00019	83 7d fc 00	 cmp	 DWORD PTR _property$[ebp], 0
  0001d	75 1b		 jne	 SHORT $L118267

; 157  : 			msgMgr->Fatal(Msg_InvalidProperty, selector);

  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _selector$[ebp]
  00022	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00028	51		 push	 ecx
  00029	6a 29		 push	 41			; 00000029H
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$L118267:

; 158  : 		return property;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _property$[ebp]

; 159  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?GetPropAddrCheck@Object@@QAEPAFG@Z ENDP		; Object::GetPropAddrCheck
_TEXT	ENDS
PUBLIC	?selectorDict@Object@@QAEPAVSelectorDict@@XZ	; Object::selectorDict
PUBLIC	??AObject@@QAEAAFH@Z				; Object::operator[]
EXTRN	?get@SelectorDict@@QAEHG@Z:NEAR			; SelectorDict::get
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_index$ = -4
?GetPropAddr@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddr, COMDAT

; 127  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 128  : 		int index = selectorDict()->get ( selector );

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?get@SelectorDict@@QAEHG@Z ; SelectorDict::get
  0001d	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 129  : 
; 130  : 		if ( index != -1 && !selectorDict()->script )

  00020	83 7d fc ff	 cmp	 DWORD PTR _index$[ebp], -1
  00024	74 2b		 je	 SHORT $L118258
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  0002e	33 c9		 xor	 ecx, ecx
  00030	66 8b 48 16	 mov	 cx, WORD PTR [eax+22]
  00034	85 c9		 test	 ecx, ecx
  00036	75 19		 jne	 SHORT $L118258

; 131  : 			return &(*this)[selectorDict()->offset]; 

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00040	33 d2		 xor	 edx, edx
  00042	66 8b 50 14	 mov	 dx, WORD PTR [eax+20]
  00046	52		 push	 edx
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??AObject@@QAEAAFH@Z	; Object::operator[]
  0004f	eb 02		 jmp	 SHORT $L118256
$L118258:

; 132  : 
; 133  : 		return 0;

  00051	33 c0		 xor	 eax, eax
$L118256:

; 134  : 	}

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?GetPropAddr@Object@@QAEPAFG@Z ENDP			; Object::GetPropAddr
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT
_this$ = -4
?selectorDict@Object@@QAEPAVSelectorDict@@XZ PROC NEAR	; Object::selectorDict, COMDAT

; 102  : 	SelectorDict *selectorDict ( void ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 		return _selectorDict;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 104  : 	};

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?selectorDict@Object@@QAEPAVSelectorDict@@XZ ENDP	; Object::selectorDict
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT
_index$ = 8
_this$ = -4
??AObject@@QAEAAFH@Z PROC NEAR				; Object::operator[], COMDAT

; 117  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 		//	get a reference to a property given the number of the property
; 119  : 		return ((Property*) this)[index];

  00007	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]

; 120  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??AObject@@QAEAAFH@Z ENDP				; Object::operator[]
_TEXT	ENDS
PUBLIC	??DMemID@@QBEPAXXZ				; MemID::operator*
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT
_this$ = -4
??CFakeObjectID@@QBEPAUObject@@XZ PROC NEAR		; FakeObjectID::operator->, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CFakeObjectID@@QBEPAUObject@@XZ ENDP			; FakeObjectID::operator->
_TEXT	ENDS
PUBLIC	?GetAddr@MemoryMgr@@QAEPAXG@Z			; MemoryMgr::GetAddr
EXTRN	_memMgr:DWORD
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4
??DMemID@@QBEPAXXZ PROC NEAR				; MemID::operator*, COMDAT

; 98   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		return memMgr->GetAddr(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?GetAddr@MemoryMgr@@QAEPAXG@Z ; MemoryMgr::GetAddr

; 100  : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??DMemID@@QBEPAXXZ ENDP					; MemID::operator*
_TEXT	ENDS
EXTRN	__descPtrTable:BYTE
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -4
?GetAddr@MemoryMgr@@QAEPAXG@Z PROC NEAR			; MemoryMgr::GetAddr, COMDAT

; 462  : 	inline void* MemoryMgr::GetAddr(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : //		CheckValid(theID);
; 464  : 		return _descPtrTable[(unsigned int)((unsigned short)theID)];

  00007	8b 45 08	 mov	 eax, DWORD PTR _theID$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR __descPtrTable[eax*4]

; 465  : 	}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?GetAddr@MemoryMgr@@QAEPAXG@Z ENDP			; MemoryMgr::GetAddr
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@G@Z			; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0ObjectID@@QAE@G@Z PROC NEAR				; ObjectID::ObjectID, COMDAT

; 230  : 	ObjectID(SOL_Handle h) : FakeObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@G@Z ; FakeObjectID::FakeObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0ObjectID@@QAE@G@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@G@Z				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0FakeObjectID@@QAE@G@Z PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@G@Z ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0MemID@@QAE@G@Z PROC NEAR				; MemID::MemID, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _h$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 24   : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0MemID@@QAE@G@Z ENDP					; MemID::MemID
_TEXT	ENDS
PUBLIC	?IsValid@MemID@@QBEHXZ				; MemID::IsValid
EXTRN	?GetMemType@MemID@@QBE?AW4MemType@@XZ:NEAR	; MemID::GetMemType
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsObject@ObjectID@@QBEHXZ PROC NEAR			; ObjectID::IsObject, COMDAT

; 247  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 248  : 		return IsValid() && GetMemType() == MemObject;

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?IsValid@MemID@@QBEHXZ	; MemID::IsValid
  00011	85 c0		 test	 eax, eax
  00013	74 16		 je	 SHORT $L156783
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetMemType@MemID@@QBE?AW4MemType@@XZ ; MemID::GetMemType
  0001d	83 f8 34	 cmp	 eax, 52			; 00000034H
  00020	75 09		 jne	 SHORT $L156783
  00022	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR -8+[ebp], 1
  00029	eb 07		 jmp	 SHORT $L156784
$L156783:
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L156784:
  00032	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 249  : 	}

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?IsObject@ObjectID@@QBEHXZ ENDP				; ObjectID::IsObject
_TEXT	ENDS
PUBLIC	?IsValid@MemoryMgr@@QAEHG@Z			; MemoryMgr::IsValid
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsValid@MemID@@QBEHXZ PROC NEAR			; MemID::IsValid, COMDAT

; 62   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 		return memMgr->IsValid(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?IsValid@MemoryMgr@@QAEHG@Z ; MemoryMgr::IsValid

; 64   : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?IsValid@MemID@@QBEHXZ ENDP				; MemID::IsValid
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -8
_tempID$ = -4
?IsValid@MemoryMgr@@QAEHG@Z PROC NEAR			; MemoryMgr::IsValid, COMDAT

; 475  : 	inline Bool MemoryMgr::IsValid(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 		unsigned short tempID = (unsigned short)theID;

  00009	66 8b 45 08	 mov	 ax, WORD PTR _theID$[ebp]
  0000d	66 89 45 fc	 mov	 WORD PTR _tempID$[ebp], ax

; 477  : 
; 478  : 		return(
; 479  : 				(tempID)															&&
; 480  : 				(tempID < maxDescriptors)									&&
; 481  : 				(desc[tempID].memInfo.bits.freeDescriptor == False)	&&
; 482  : 				(desc[tempID].memInfo.bits.freeMemory == False)
; 483  : 				);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00014	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 58		 je	 SHORT $L156787
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00021	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00027	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  0002d	73 47		 jae	 SHORT $L156787
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00032	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00038	c1 e1 04	 shl	 ecx, 4
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00041	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00044	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  00047	c1 f9 1f	 sar	 ecx, 31			; 0000001fH
  0004a	85 c9		 test	 ecx, ecx
  0004c	75 28		 jne	 SHORT $L156787
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00051	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00057	c1 e2 04	 shl	 edx, 4
  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00060	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00063	c1 e2 14	 shl	 edx, 20			; 00000014H
  00066	c1 fa 1f	 sar	 edx, 31			; 0000001fH
  00069	85 d2		 test	 edx, edx
  0006b	75 09		 jne	 SHORT $L156787
  0006d	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR -12+[ebp], 1
  00074	eb 07		 jmp	 SHORT $L156788
$L156787:
  00076	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L156788:
  0007d	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 484  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?IsValid@MemoryMgr@@QAEHG@Z ENDP			; MemoryMgr::IsValid
_TEXT	ENDS
PUBLIC	??_C@_00A@?$AA@					; `string'
;	COMDAT ??_C@_00A@?$AA@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\textid.hpp
_BSS	SEGMENT
??_C@_00A@?$AA@ DB 01H DUP (?)				; `string'
_BSS	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4
??DTextID@@QAEPADXZ PROC NEAR				; TextID::operator*, COMDAT

; 24   : 	char	*operator *() { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 		return handle ? (char *)MemID::operator*() : ""; 

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	33 c9		 xor	 ecx, ecx
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	85 c9		 test	 ecx, ecx
  00013	74 0d		 je	 SHORT $L156790
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0001d	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  00020	eb 07		 jmp	 SHORT $L156791
$L156790:
  00022	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
$L156791:
  00029	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 26   : 	}

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??DTextID@@QAEPADXZ ENDP				; TextID::operator*
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@XZ				; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Object@@QAE@XZ PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 10   : 	CSCI_Object() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@XZ	; ObjectID::ObjectID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Object@@QAE@XZ ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@XZ				; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0ObjectID@@QAE@XZ PROC NEAR				; ObjectID::ObjectID, COMDAT

; 227  : 	ObjectID() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@XZ	; FakeObjectID::FakeObjectID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0ObjectID@@QAE@XZ ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@XZ				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0FakeObjectID@@QAE@XZ PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0FakeObjectID@@QAE@XZ ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0MemID@@QAE@XZ PROC NEAR				; MemID::MemID, COMDAT

; 15   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 c7 00 00 00	 mov	 WORD PTR [eax], 0

; 16   : 	}

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0MemID@@QAE@XZ ENDP					; MemID::MemID
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Script@@QAE@XZ PROC NEAR			; CSCI_Script::CSCI_Script, COMDAT

; 338  : 	CSCI_Script() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@XZ	; CSCI_Object::CSCI_Object
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Script@@QAE@XZ ENDP				; CSCI_Script::CSCI_Script
_TEXT	ENDS
PUBLIC	??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z	; std::bitset<6>::reference::operator=
PUBLIC	??A?$bitset@$05@std@@QAE?AVreference@01@I@Z	; std::bitset<6>::operator[]
;	COMDAT ?SetAllowResize@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_this$ = -12
$T156799 = -8
_bValue$ = 8
?SetAllowResize@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetAllowResize, COMDAT

; 132  : 	void SetAllowResize ( bool bValue ) { m_state[sknWndAllowResize] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 02		 push	 2
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T156799[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetAllowResize@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetAllowResize
_TEXT	ENDS
PUBLIC	??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z	; std::bitset<6>::reference::reference
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
$T156801 = -8
___$ReturnUdt$ = 8
_this$ = -12
__P$ = 12
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z PROC NEAR	; std::bitset<6>::operator[], COMDAT

; 54   : 		{return (reference(*this, _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	8d 4d f8	 lea	 ecx, DWORD PTR $T156801[ebp]
  00014	e8 00 00 00 00	 call	 ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ; std::bitset<6>::reference::reference
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx
  00023	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ENDP	; std::bitset<6>::operator[]
_TEXT	ENDS
PUBLIC	?set@?$bitset@$05@std@@QAEAAV12@I_N@Z		; std::bitset<6>::set
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z PROC NEAR	; std::bitset<6>::reference::operator=, COMDAT

; 24   : 			{_Pbs->set(_Off, _X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8a 45 08	 mov	 al, BYTE PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ; std::bitset<6>::set

; 25   : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ENDP	; std::bitset<6>::reference::operator=
_TEXT	ENDS
PUBLIC	?_Xran@?$bitset@$05@std@@ABEXXZ			; std::bitset<6>::_Xran
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__X$ = 12
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z PROC NEAR		; std::bitset<6>::set, COMDAT

; 119  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 06	 cmp	 DWORD PTR __P$[ebp], 6
  0000c	72 08		 jb	 SHORT $L152165

; 120  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$05@std@@ABEXXZ ; std::bitset<6>::_Xran
$L152165:

; 121  : 		if (_X)

  00016	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 31		 je	 SHORT $L152166

; 122  : 			_A[_P / _Nb] |= (_Ty)1 << _P % _Nb;

  00022	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00025	c1 ee 05	 shr	 esi, 5
  00028	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002b	33 d2		 xor	 edx, edx
  0002d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00032	f7 f1		 div	 ecx
  00034	8b ca		 mov	 ecx, edx
  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	d3 e2		 shl	 edx, cl
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00043	0b ca		 or	 ecx, edx
  00045	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00048	c1 ea 05	 shr	 edx, 5
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 123  : 		else

  00051	eb 31		 jmp	 SHORT $L152168
$L152166:

; 124  : 			_A[_P / _Nb] &= ~((_Ty)1 << _P % _Nb);

  00053	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00056	c1 ee 05	 shr	 esi, 5
  00059	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0005c	33 d2		 xor	 edx, edx
  0005e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00063	f7 f1		 div	 ecx
  00065	8b ca		 mov	 ecx, edx
  00067	ba 01 00 00 00	 mov	 edx, 1
  0006c	d3 e2		 shl	 edx, cl
  0006e	f7 d2		 not	 edx
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00076	23 ca		 and	 ecx, edx
  00078	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0007b	c1 ea 05	 shr	 edx, 5
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx
$L152168:

; 125  : 		return (*this); }

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ENDP		; std::bitset<6>::set
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__P$ = 12
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z PROC NEAR	; std::bitset<6>::reference::reference, COMDAT

; 37   : 		reference(bitset<_N>& _X, size_t _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ENDP	; std::bitset<6>::reference::reference
_TEXT	ENDS
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
EXTRN	??1out_of_range@std@@UAE@XZ:NEAR		; std::out_of_range::~out_of_range
EXTRN	??0out_of_range@std@@QAE@ABV01@@Z:NEAR		; std::out_of_range::out_of_range
EXTRN	__CxxThrowException@8:NEAR
EXTRN	__imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:NEAR
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0logic_error@std@@QAE@ABV01@@Z:NEAR		; std::logic_error::logic_error
;	COMDAT ??_R0?AVexception@@@8
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\bitset
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT
??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ DB 'invalid bitset'
	DB	'<N> position', 00H				; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T156812 DD	019930520H
	DD	01H
	DD	FLAT:$T156814
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156814 DD	0ffffffffH
	DD	FLAT:$L156810
xdata$x	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT
$T156806 = -40
$T156807 = -56
$T156808 = -60
__$EHRec$ = -12
_this$ = -64
?_Xran@?$bitset@$05@std@@ABEXXZ PROC NEAR		; std::bitset<6>::_Xran, COMDAT

; 250  : 		{_THROW(out_of_range, "invalid bitset<N> position"); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156813
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 c4	 lea	 eax, DWORD PTR $T156808[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
  00027	8d 4d c8	 lea	 ecx, DWORD PTR $T156807[ebp]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8d 4d c8	 lea	 ecx, DWORD PTR $T156807[ebp]
  0003a	51		 push	 ecx
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T156806[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00044	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00049	8d 55 d8	 lea	 edx, DWORD PTR $T156806[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$L152500:
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156810:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T156807[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00009	c3		 ret	 0
$L156813:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156812
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$bitset@$05@std@@ABEXXZ ENDP			; std::bitset<6>::_Xran
;	COMDAT ?SetAllowMove@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_this$ = -12
$T156818 = -8
_bValue$ = 8
?SetAllowMove@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetAllowMove, COMDAT

; 138  : 	void SetAllowMove ( bool bValue ) { m_state[sknWndAllowMove] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 03		 push	 3
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T156818[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetAllowMove@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetAllowMove
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_this$ = -12
$T156820 = -8
_bValue$ = 8
?SetTransient@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetTransient, COMDAT

; 150  : 	void SetTransient ( bool bValue ) { m_state[sknWndTransient] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 04		 push	 4
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T156820[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetTransient@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetTransient
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Next, COMDAT

; 275  : 	virtual void Next ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Next
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Previous, COMDAT

; 276  : 	virtual void Previous ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Previous
_TEXT	ENDS
;	COMDAT ?getObject@CSCIObjectMethodPair@@QAE?AVCSCI_Object@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -4
?getObject@CSCIObjectMethodPair@@QAE?AVCSCI_Object@@XZ PROC NEAR ; CSCIObjectMethodPair::getObject, COMDAT

; 51   : 	CSCI_Object		getObject() { return m_Object; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?getObject@CSCIObjectMethodPair@@QAE?AVCSCI_Object@@XZ ENDP ; CSCIObjectMethodPair::getObject
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABV0@@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABV0@@Z ENDP			; CSCI_Object::CSCI_Object
_TEXT	ENDS
;	COMDAT ??0CDoubleButtonDlg@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CDoubleButtonDlg@@QAE@XZ PROC NEAR			; CDoubleButtonDlg::CDoubleButtonDlg, COMDAT

; 129  : 	CDoubleButtonDlg() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CNoButtonDlg@@QAE@XZ	; CNoButtonDlg::CNoButtonDlg
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDoubleButtonDlg@@6B@ ; CDoubleButtonDlg::`vftable'
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CDoubleButtonDlg@@QAE@XZ ENDP			; CDoubleButtonDlg::CDoubleButtonDlg
_TEXT	ENDS
;	COMDAT ??_GCDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCDoubleButtonDlg@@UAEPAXI@Z PROC NEAR		; CDoubleButtonDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L146643
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L146643:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCDoubleButtonDlg@@UAEPAXI@Z ENDP			; CDoubleButtonDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CDoubleButtonDlg@@UAE@XZ PROC NEAR			; CDoubleButtonDlg::~CDoubleButtonDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CNoButtonDlg@@UAE@XZ	; CNoButtonDlg::~CNoButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CDoubleButtonDlg@@UAE@XZ ENDP			; CDoubleButtonDlg::~CDoubleButtonDlg
_TEXT	ENDS
;	COMDAT ?GetProcessEvents@CNetworkErrorDlg@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4
?GetProcessEvents@CNetworkErrorDlg@@UAE_NXZ PROC NEAR	; CNetworkErrorDlg::GetProcessEvents, COMDAT

; 310  : 	virtual bool GetProcessEvents ( void ) { return true; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	b0 01		 mov	 al, 1
  00009	8b e5		 mov	 esp, ebp
  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?GetProcessEvents@CNetworkErrorDlg@@UAE_NXZ ENDP	; CNetworkErrorDlg::GetProcessEvents
_TEXT	ENDS
END
