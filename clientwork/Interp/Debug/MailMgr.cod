	TITLE	C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxTrace@@YAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BringWindowToTop@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemCount@CListCtrl@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LimitText@CRichEditCtrl@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPBI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Zconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Mconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Miterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@Vconst_iterator@12@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@_NV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nw@?$vector@_NV?$allocator@I@std@@@std@@KAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$vector@_NV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@_NV?$allocator@I@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DStringID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_nValue@CSCI_LongInt@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pCommand@CSCI_NetMsg@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pAckCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pNakCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RoomZero@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemTextColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBounds@OCArray@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Data@OCArray@@QAEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ByteAt@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetByte@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetByte@CPackedData@@QAEXHE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutByte@CPackedData@@QAEXE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWord@CPackedData@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutWord@CPackedData@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LongAt@CPackedData@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutLong@CPackedData@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutString@CPackedData@@QAEXPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDoubleButtonDlg@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetReferralID@CMailMsg@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableRefresh@CMailMgrWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableArchive@CMailMgrWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CConfirmDlg@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCConfirmDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CConfirmDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CArchiveDlg@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Refresh@CTabDlgBtn@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabDlgBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTabDlgBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSelectedTab@CTabDlg@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AlertTab@CMainPanelWnd@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HideTab@CMainPanelWnd@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_TabDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getRights@CToonSettings@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMailListCtrl@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnItemActivate@CMailListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMailListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMailListCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMailMsg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMailBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMailMgrWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMailMgrWnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMailMsgWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMailMsgReadWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMailMsgReadWnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMailMsgAuthorWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEraseBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CEraseBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReplyBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReplyBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCForwardBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CForwardBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDoneBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDoneBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CFileStatus@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSendBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSendBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRefreshBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRefreshBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEAAPAVCMailMsg@@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEIABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@ABV?$allocator@PAVCMailMsg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?remove@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEAAPAVCMailMsg@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsgWnd@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEAAPAVCMailMsgWnd@@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEIABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEIABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBHPAVCMailMsg@@@std@@QAE@ABHABQAVCMailMsg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsg@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCMailMsg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAVCMailMsg@@PAU_Node@23@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsgWnd@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEIABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBHPAVCMailMsgWnd@@@std@@QAE@ABHABQAVCMailMsgWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@PAVCMailMsg@@@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCMailMsg@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@ABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsg@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@2@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCMailMsgWnd@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@2@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@H@std@@QBE_NABH0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAABHPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAABHPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@ABU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@PAVCMailMsgWnd@@@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@ABU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAPAVCMailMsg@@ABQAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCMailMsg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@ABU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@ABU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsg@@@2@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsgWnd@@@2@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECMailListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECMailListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTabDlgBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReplyBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMailBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMailListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMailListCtrl@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMailMsgAuthorWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSendBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CArchiveBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMailMsgWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CConfirmDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDoneBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CArchiveDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CForwardBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMailMsgReadWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMailMgrWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMailListCtrl@@6BCListCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEraseBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMailListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDoubleButtonDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMailMsg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRefreshBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCA, CRT$XCU, CRT$XCL, CRT$XCC, CRT$XCZ, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?m_nResponseCount@CMailBox@@2HB			; CMailBox::m_nResponseCount
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	?m_UniqueIDMap@CMailMsg@@0V?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@A ; CMailMsg::m_UniqueIDMap
PUBLIC	?m_UniqueIDMap@CMailMsgWnd@@2V?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@A ; CMailMsgWnd::m_UniqueIDMap
PUBLIC	?g_pMailBox@@3PAVCMailBox@@A			; g_pMailBox
PUBLIC	?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A		; g_pMailMgrWnd
PUBLIC	?g_pReadWnd@@3PAVCMailMsgReadWnd@@A		; g_pReadWnd
PUBLIC	?CSWarning@@3PADA				; CSWarning
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
_BSS	SEGMENT
?m_UniqueIDMap@CMailMsg@@0V?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@A DB 010H DUP (?) ; CMailMsg::m_UniqueIDMap
?m_UniqueIDMap@CMailMsgWnd@@2V?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@A DB 010H DUP (?) ; CMailMsgWnd::m_UniqueIDMap
?g_pMailBox@@3PAVCMailBox@@A DD 01H DUP (?)		; g_pMailBox
?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A DD 01H DUP (?)	; g_pMailMgrWnd
?g_pReadWnd@@3PAVCMailMsgReadWnd@@A DD 01H DUP (?)	; g_pReadWnd
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
_DATA	SEGMENT
?CSWarning@@3PADA DB '|c0|Note: Should you receive a harassing Magic Mail'
	DB	' or a request for your login and password, |c60|DO NOT ERASE '
	DB	'THE LETTER|c0|.  Contact Realm Customer Service by visiting w'
	DB	'ww.realmserver.com/support/index.html immediately! No one fro'
	DB	'm the Realm team or Customer Service will ask you for your lo'
	DB	'gin name or password!', 0aH, 0aH, 'Please be sure to include '
	DB	'your character''s name who received the Magic Mail.', 00H ; CSWarning
_DATA	ENDS
CRT$XCU	SEGMENT
_$S352	DD	FLAT:_$E351
CRT$XCU	ENDS
CONST	SEGMENT
?m_nResponseCount@CMailBox@@2HB DD 03H			; CMailBox::m_nResponseCount
CONST	ENDS
CRT$XCU	SEGMENT
_$S358	DD	FLAT:_$E357
CRT$XCU	ENDS
_TEXT	SEGMENT
_$E351	PROC NEAR
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 _$E347
  00008	e8 00 00 00 00	 call	 _$E350
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
_$E351	ENDP
_TEXT	ENDS
PUBLIC	??0?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsg@@@1@@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >
_TEXT	SEGMENT
$T162768 = -4
$T162769 = -8
_$E347	PROC NEAR

; 67   : std::map<int, CMailMsg *> CMailMsg::m_UniqueIDMap;

  0000f	55		 push	 ebp
  00010	8b ec		 mov	 ebp, esp
  00012	83 ec 08	 sub	 esp, 8
  00015	8d 45 fc	 lea	 eax, DWORD PTR $T162768[ebp]
  00018	50		 push	 eax
  00019	8d 4d f8	 lea	 ecx, DWORD PTR $T162769[ebp]
  0001c	51		 push	 ecx
  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsg@@0V?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@A
  00022	e8 00 00 00 00	 call	 ??0?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsg@@@1@@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_$E347	ENDP
_TEXT	ENDS
EXTRN	_atexit:NEAR
_TEXT	SEGMENT
_$E350	PROC NEAR
  0002b	55		 push	 ebp
  0002c	8b ec		 mov	 ebp, esp
  0002e	68 00 00 00 00	 push	 OFFSET FLAT:_$E348
  00033	e8 00 00 00 00	 call	 _atexit
  00038	83 c4 04	 add	 esp, 4
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_$E350	ENDP
_TEXT	ENDS
PUBLIC	??1?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@XZ ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::~map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >
_BSS	SEGMENT
_$S349	DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_$E348	PROC NEAR
  0003d	55		 push	 ebp
  0003e	8b ec		 mov	 ebp, esp
  00040	33 c0		 xor	 eax, eax
  00042	a0 00 00 00 00	 mov	 al, BYTE PTR _$S349
  00047	83 e0 01	 and	 eax, 1
  0004a	85 c0		 test	 eax, eax
  0004c	75 19		 jne	 SHORT $L154576
  0004e	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR _$S349
  00054	80 c9 01	 or	 cl, 1
  00057	88 0d 00 00 00
	00		 mov	 BYTE PTR _$S349, cl
  0005d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsg@@0V?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@A
  00062	e8 00 00 00 00	 call	 ??1?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@XZ ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::~map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >
$L154576:
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_$E348	ENDP
_TEXT	ENDS
PUBLIC	??1?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::~_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >
;	COMDAT ??1?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@XZ PROC NEAR ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::~map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::~_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@XZ ENDP ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::~map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >
_TEXT	ENDS
PUBLIC	??A?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEAAPAVCMailMsg@@ABH@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::operator[]
PUBLIC	?FindByUniqueID@CMailMsg@@SAPAV1@H@Z		; CMailMsg::FindByUniqueID
_TEXT	SEGMENT
_nUniqueID$ = 8
?FindByUniqueID@CMailMsg@@SAPAV1@H@Z PROC NEAR		; CMailMsg::FindByUniqueID

; 71   : {

  00069	55		 push	 ebp
  0006a	8b ec		 mov	 ebp, esp

; 72   : 	return m_UniqueIDMap [ nUniqueID ];

  0006c	8d 45 08	 lea	 eax, DWORD PTR _nUniqueID$[ebp]
  0006f	50		 push	 eax
  00070	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsg@@0V?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@A
  00075	e8 00 00 00 00	 call	 ??A?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEAAPAVCMailMsg@@ABH@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::operator[]
  0007a	8b 00		 mov	 eax, DWORD PTR [eax]

; 73   : }

  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ENDP		; CMailMsg::FindByUniqueID
_TEXT	ENDS
PUBLIC	??0CMailMsg@@QAE@XZ				; CMailMsg::CMailMsg
PUBLIC	??_7CMailMsg@@6B@				; CMailMsg::`vftable'
PUBLIC	??_GCMailMsg@@UAEPAXI@Z				; CMailMsg::`scalar deleting destructor'
PUBLIC	??_ECMailMsg@@UAEPAXI@Z				; CMailMsg::`vector deleting destructor'
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT ??_7CMailMsg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CMailMsg@@6B@ DD FLAT:??_ECMailMsg@@UAEPAXI@Z	; CMailMsg::`vftable'
CONST	ENDS
xdata$x	SEGMENT
$T162789 DD	019930520H
	DD	05H
	DD	FLAT:$T162792
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162792 DD	0ffffffffH
	DD	FLAT:$L162781
	DD	00H
	DD	FLAT:$L162782
	DD	01H
	DD	FLAT:$L162783
	DD	02H
	DD	FLAT:$L162784
	DD	03H
	DD	FLAT:$L162785
xdata$x	ENDS
_TEXT	SEGMENT
$T162776 = -16
$T162777 = -20
$T162778 = -24
$T162779 = -28
$T162780 = -32
_this$ = -36
__$EHRec$ = -12
??0CMailMsg@@QAE@XZ PROC NEAR				; CMailMsg::CMailMsg

; 75   : CMailMsg::CMailMsg() {

  0007e	55		 push	 ebp
  0007f	8b ec		 mov	 ebp, esp
  00081	6a ff		 push	 -1
  00083	68 00 00 00 00	 push	 $L162790
  00088	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0008e	50		 push	 eax
  0008f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00096	83 ec 18	 sub	 esp, 24			; 00000018H
  00099	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx
  0009c	8d 45 f0	 lea	 eax, DWORD PTR $T162776[ebp]
  0009f	50		 push	 eax
  000a0	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	83 c1 04	 add	 ecx, 4
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  000ac	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000b3	8d 4d ec	 lea	 ecx, DWORD PTR $T162777[ebp]
  000b6	51		 push	 ecx
  000b7	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	83 c1 14	 add	 ecx, 20			; 00000014H
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  000c3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000c7	8d 55 e8	 lea	 edx, DWORD PTR $T162778[ebp]
  000ca	52		 push	 edx
  000cb	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	83 c1 24	 add	 ecx, 36			; 00000024H
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  000d7	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000db	8d 45 e4	 lea	 eax, DWORD PTR $T162779[ebp]
  000de	50		 push	 eax
  000df	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	83 c1 34	 add	 ecx, 52			; 00000034H
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  000eb	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000ef	8d 4d e0	 lea	 ecx, DWORD PTR $T162780[ebp]
  000f2	51		 push	 ecx
  000f3	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	83 c1 44	 add	 ecx, 68			; 00000044H
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  000ff	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00103	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  00106	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7CMailMsg@@6B@ ; CMailMsg::`vftable'

; 76   : 	// this is the type of this message (set by create, default to mmtNew in constructor)
; 77   : 	m_nType = mmtNew;

  0010c	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  0010f	c7 40 58 01 00
	00 00		 mov	 DWORD PTR [eax+88], 1

; 78   : 
; 79   : 	// this is the ID
; 80   : 	m_nUniqueID = -1;

  00116	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	c7 41 5c ff ff
	ff ff		 mov	 DWORD PTR [ecx+92], -1

; 81   : 	m_nReferralID = 0;

  00120	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  00123	c7 42 60 00 00
	00 00		 mov	 DWORD PTR [edx+96], 0

; 82   : 
; 83   : 	m_UniqueIDMap [ m_nUniqueID ] = this;

  0012a	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  0012d	83 c0 5c	 add	 eax, 92			; 0000005cH
  00130	50		 push	 eax
  00131	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsg@@0V?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@A
  00136	e8 00 00 00 00	 call	 ??A?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEAAPAVCMailMsg@@ABH@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::operator[]
  0013b	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	89 08		 mov	 DWORD PTR [eax], ecx

; 84   : 
; 85   : 	// this is the is this message complete flag.
; 86   : 	m_bCompleted = TRUE;

  00140	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  00143	c7 42 54 01 00
	00 00		 mov	 DWORD PTR [edx+84], 1

; 87   : }

  0014a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00151	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  00154	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00157	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0015e	8b e5		 mov	 esp, ebp
  00160	5d		 pop	 ebp
  00161	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L162781:
  00000	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000c	c3		 ret	 0
$L162782:
  0000d	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	83 c1 14	 add	 ecx, 20			; 00000014H
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00019	c3		 ret	 0
$L162783:
  0001a	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 24	 add	 ecx, 36			; 00000024H
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00026	c3		 ret	 0
$L162784:
  00027	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	83 c1 34	 add	 ecx, 52			; 00000034H
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00033	c3		 ret	 0
$L162785:
  00034	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 44	 add	 ecx, 68			; 00000044H
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00040	c3		 ret	 0
$L162790:
  00041	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162789
  00046	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CMailMsg@@QAE@XZ ENDP				; CMailMsg::CMailMsg
PUBLIC	??1CMailMsg@@UAE@XZ				; CMailMsg::~CMailMsg
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??_GCMailMsg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMailMsg@@UAEPAXI@Z PROC NEAR			; CMailMsg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMailMsg@@UAE@XZ	; CMailMsg::~CMailMsg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L154604
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L154604:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMailMsg@@UAEPAXI@Z ENDP				; CMailMsg::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?erase@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEIABH@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::erase
PUBLIC	?FindByUniqueID@CMailMsgWnd@@SAPAV1@H@Z		; CMailMsgWnd::FindByUniqueID
xdata$x	SEGMENT
$T162802 DD	019930520H
	DD	05H
	DD	FLAT:$T162804
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162804 DD	0ffffffffH
	DD	FLAT:$L162796
	DD	00H
	DD	FLAT:$L162797
	DD	01H
	DD	FLAT:$L162798
	DD	02H
	DD	FLAT:$L162799
	DD	03H
	DD	FLAT:$L162800
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -20
_pMailWnd$ = -16
__$EHRec$ = -12
??1CMailMsg@@UAE@XZ PROC NEAR				; CMailMsg::~CMailMsg

; 90   : {

  00162	55		 push	 ebp
  00163	8b ec		 mov	 ebp, esp
  00165	6a ff		 push	 -1
  00167	68 00 00 00 00	 push	 $L162803
  0016c	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00172	50		 push	 eax
  00173	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0017a	83 ec 08	 sub	 esp, 8
  0017d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00180	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00183	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMailMsg@@6B@ ; CMailMsg::`vftable'
  00189	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4

; 91   : 	m_UniqueIDMap.erase( m_nUniqueID );

  00190	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00193	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00196	51		 push	 ecx
  00197	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsg@@0V?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@A
  0019c	e8 00 00 00 00	 call	 ?erase@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEIABH@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::erase

; 92   : 
; 93   : 	//	Close the viewing window which removes it from the viewing list
; 94   : 	CMailMsgWnd* pMailWnd = CMailMsgWnd::FindByUniqueID( m_nUniqueID );

  001a1	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  001a4	8b 42 5c	 mov	 eax, DWORD PTR [edx+92]
  001a7	50		 push	 eax
  001a8	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsgWnd@@SAPAV1@H@Z ; CMailMsgWnd::FindByUniqueID
  001ad	83 c4 04	 add	 esp, 4
  001b0	89 45 f0	 mov	 DWORD PTR _pMailWnd$[ebp], eax

; 95   : 
; 96   : 	if ( pMailWnd )

  001b3	83 7d f0 00	 cmp	 DWORD PTR _pMailWnd$[ebp], 0
  001b7	74 10		 je	 SHORT $L154609

; 98   : 		pMailWnd->CloseSelf();

  001b9	6a 00		 push	 0
  001bb	8b 4d f0	 mov	 ecx, DWORD PTR _pMailWnd$[ebp]
  001be	8b 11		 mov	 edx, DWORD PTR [ecx]
  001c0	8b 4d f0	 mov	 ecx, DWORD PTR _pMailWnd$[ebp]
  001c3	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L154609:

; 100  : }

  001c9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  001cd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d0	83 c1 44	 add	 ecx, 68			; 00000044H
  001d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  001d9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  001dd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001e0	83 c1 34	 add	 ecx, 52			; 00000034H
  001e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  001e9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001ed	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001f0	83 c1 24	 add	 ecx, 36			; 00000024H
  001f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  001f9	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00200	83 c1 14	 add	 ecx, 20			; 00000014H
  00203	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00209	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00210	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00213	83 c1 04	 add	 ecx, 4
  00216	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0021c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0021f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00226	8b e5		 mov	 esp, ebp
  00228	5d		 pop	 ebp
  00229	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L162796:
  0004b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	83 c1 04	 add	 ecx, 4
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00057	c3		 ret	 0
$L162797:
  00058	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 14	 add	 ecx, 20			; 00000014H
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00064	c3		 ret	 0
$L162798:
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	83 c1 24	 add	 ecx, 36			; 00000024H
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00071	c3		 ret	 0
$L162799:
  00072	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	83 c1 34	 add	 ecx, 52			; 00000034H
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0007e	c3		 ret	 0
$L162800:
  0007f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	83 c1 44	 add	 ecx, 68			; 00000044H
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0008b	c3		 ret	 0
$L162803:
  0008c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162802
  00091	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CMailMsg@@UAE@XZ ENDP				; CMailMsg::~CMailMsg
PUBLIC	?EnableSendBtn@CMailMsgAuthorWnd@@QAEXH@Z	; CMailMsgAuthorWnd::EnableSendBtn
PUBLIC	?EnableSendBtn@CMailMsg@@QAEHH@Z		; CMailMsg::EnableSendBtn
_TEXT	SEGMENT
_boEnable$ = 8
_this$ = -8
_pMailWnd$154615 = -4
?EnableSendBtn@CMailMsg@@QAEHH@Z PROC NEAR		; CMailMsg::EnableSendBtn

; 104  : {

  0022a	55		 push	 ebp
  0022b	8b ec		 mov	 ebp, esp
  0022d	83 ec 08	 sub	 esp, 8
  00230	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 105  :     if ( m_nUniqueID != -1 ) 

  00233	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00236	83 78 5c ff	 cmp	 DWORD PTR [eax+92], -1
  0023a	74 2b		 je	 SHORT $L154614

; 107  : 	    CMailMsgAuthorWnd* pMailWnd = (CMailMsgAuthorWnd*) CMailMsgWnd::FindByUniqueID( m_nUniqueID );

  0023c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0023f	8b 51 5c	 mov	 edx, DWORD PTR [ecx+92]
  00242	52		 push	 edx
  00243	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsgWnd@@SAPAV1@H@Z ; CMailMsgWnd::FindByUniqueID
  00248	83 c4 04	 add	 esp, 4
  0024b	89 45 fc	 mov	 DWORD PTR _pMailWnd$154615[ebp], eax

; 108  : 
; 109  : 	    if ( pMailWnd ) {

  0024e	83 7d fc 00	 cmp	 DWORD PTR _pMailWnd$154615[ebp], 0
  00252	74 0c		 je	 SHORT $L154617

; 110  : 		    pMailWnd->EnableSendBtn( boEnable );

  00254	8b 45 08	 mov	 eax, DWORD PTR _boEnable$[ebp]
  00257	50		 push	 eax
  00258	8b 4d fc	 mov	 ecx, DWORD PTR _pMailWnd$154615[ebp]
  0025b	e8 00 00 00 00	 call	 ?EnableSendBtn@CMailMsgAuthorWnd@@QAEXH@Z ; CMailMsgAuthorWnd::EnableSendBtn
$L154617:

; 112  : 
; 113  :         return TRUE;

  00260	b8 01 00 00 00	 mov	 eax, 1
  00265	eb 02		 jmp	 SHORT $L154613
$L154614:

; 115  : 
; 116  :     return FALSE;

  00267	33 c0		 xor	 eax, eax
$L154613:

; 117  : }

  00269	8b e5		 mov	 esp, ebp
  0026b	5d		 pop	 ebp
  0026c	c2 04 00	 ret	 4
?EnableSendBtn@CMailMsg@@QAEHH@Z ENDP			; CMailMsg::EnableSendBtn
_TEXT	ENDS
PUBLIC	?CreateInboxHdr@CMailMsg@@QAEHPAVPackedData@@@Z	; CMailMsg::CreateInboxHdr
EXTRN	?getByte@PackedData@@QAEEXZ:NEAR		; PackedData::getByte
EXTRN	?getLong@PackedData@@QAEHXZ:NEAR		; PackedData::getLong
EXTRN	?getCharString@PackedData@@QAEPADH@Z:NEAR	; PackedData::getCharString
EXTRN	__imp__sprintf:NEAR
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:NEAR
EXTRN	__imp__localtime:NEAR
_DATA	SEGMENT
	ORG $+1
$SG154627 DB	'%04d-%02d-%02d %02d:%02d', 00H
_DATA	ENDS
_TEXT	SEGMENT
_nTime$ = -4
_pTime$ = -8
_pData$ = 8
_this$ = -268
_sTime$ = -264
?CreateInboxHdr@CMailMsg@@QAEHPAVPackedData@@@Z PROC NEAR ; CMailMsg::CreateInboxHdr

; 121  : {

  0026f	55		 push	 ebp
  00270	8b ec		 mov	 ebp, esp
  00272	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00278	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 122  : 	char sTime[256];
; 123  : 
; 124  : 	m_nUniqueID = pData->getLong();

  0027e	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  00281	e8 00 00 00 00	 call	 ?getLong@PackedData@@QAEHXZ ; PackedData::getLong
  00286	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	89 41 5c	 mov	 DWORD PTR [ecx+92], eax

; 125  : 
; 126  : 	if ( pData->getByte() )

  0028f	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  00292	e8 00 00 00 00	 call	 ?getByte@PackedData@@QAEEXZ ; PackedData::getByte
  00297	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0029c	85 c0		 test	 eax, eax
  0029e	74 0d		 je	 SHORT $L154623

; 127  : 		m_nType = mmtViewOnly;

  002a0	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  002a6	c7 42 58 04 00
	00 00		 mov	 DWORD PTR [edx+88], 4
$L154623:

; 128  : 
; 129  : 	m_UniqueIDMap.erase( m_nUniqueID );

  002ad	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  002b3	83 c0 5c	 add	 eax, 92			; 0000005cH
  002b6	50		 push	 eax
  002b7	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsg@@0V?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@A
  002bc	e8 00 00 00 00	 call	 ?erase@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEIABH@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::erase

; 130  : 	m_UniqueIDMap [ m_nUniqueID ] = this;

  002c1	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  002c7	83 c1 5c	 add	 ecx, 92			; 0000005cH
  002ca	51		 push	 ecx
  002cb	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsg@@0V?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@A
  002d0	e8 00 00 00 00	 call	 ??A?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEAAPAVCMailMsg@@ABH@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::operator[]
  002d5	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  002db	89 10		 mov	 DWORD PTR [eax], edx

; 131  : 
; 132  : 	int nTime = pData->getLong();

  002dd	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  002e0	e8 00 00 00 00	 call	 ?getLong@PackedData@@QAEHXZ ; PackedData::getLong
  002e5	89 45 fc	 mov	 DWORD PTR _nTime$[ebp], eax

; 133  : 
; 134  : 	m_sSubject = pData->getCharString();

  002e8	6a 00		 push	 0
  002ea	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  002ed	e8 00 00 00 00	 call	 ?getCharString@PackedData@@QAEPADH@Z ; PackedData::getCharString
  002f2	50		 push	 eax
  002f3	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  002f9	83 c1 34	 add	 ecx, 52			; 00000034H
  002fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 135  : 	m_sFrom = pData->getCharString();

  00302	6a 00		 push	 0
  00304	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  00307	e8 00 00 00 00	 call	 ?getCharString@PackedData@@QAEPADH@Z ; PackedData::getCharString
  0030c	50		 push	 eax
  0030d	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00313	83 c1 14	 add	 ecx, 20			; 00000014H
  00316	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 136  : 
; 137  : 	tm* pTime = localtime( (time_t*) &nTime );

  0031c	8d 45 fc	 lea	 eax, DWORD PTR _nTime$[ebp]
  0031f	50		 push	 eax
  00320	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__localtime
  00326	83 c4 04	 add	 esp, 4
  00329	89 45 f8	 mov	 DWORD PTR _pTime$[ebp], eax

; 138  : 	sprintf( sTime, "%04d-%02d-%02d %02d:%02d", ( pTime->tm_year + 1900 ), ( pTime->tm_mon + 1 ), pTime->tm_mday, pTime->tm_hour, pTime->tm_min );

  0032c	8b 4d f8	 mov	 ecx, DWORD PTR _pTime$[ebp]
  0032f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00332	52		 push	 edx
  00333	8b 45 f8	 mov	 eax, DWORD PTR _pTime$[ebp]
  00336	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00339	51		 push	 ecx
  0033a	8b 55 f8	 mov	 edx, DWORD PTR _pTime$[ebp]
  0033d	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00340	50		 push	 eax
  00341	8b 4d f8	 mov	 ecx, DWORD PTR _pTime$[ebp]
  00344	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00347	83 c2 01	 add	 edx, 1
  0034a	52		 push	 edx
  0034b	8b 45 f8	 mov	 eax, DWORD PTR _pTime$[ebp]
  0034e	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00351	81 c1 6c 07 00
	00		 add	 ecx, 1900		; 0000076cH
  00357	51		 push	 ecx
  00358	68 00 00 00 00	 push	 OFFSET FLAT:$SG154627
  0035d	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _sTime$[ebp]
  00363	52		 push	 edx
  00364	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  0036a	83 c4 1c	 add	 esp, 28			; 0000001cH

; 139  : 
; 140  : 	m_sReceived = sTime;

  0036d	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _sTime$[ebp]
  00373	50		 push	 eax
  00374	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0037a	83 c1 24	 add	 ecx, 36			; 00000024H
  0037d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 141  : 
; 142  : 	m_bCompleted = FALSE;

  00383	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00389	c7 41 54 00 00
	00 00		 mov	 DWORD PTR [ecx+84], 0

; 143  : 
; 144  : 	return TRUE;

  00390	b8 01 00 00 00	 mov	 eax, 1

; 145  : }

  00395	8b e5		 mov	 esp, ebp
  00397	5d		 pop	 ebp
  00398	c2 04 00	 ret	 4
?CreateInboxHdr@CMailMsg@@QAEHPAVPackedData@@@Z ENDP	; CMailMsg::CreateInboxHdr
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@ABV0@@Z			; ObjectID::ObjectID
PUBLIC	?CreateInbox@CMailMsg@@QAEHVObjectID@@@Z	; CMailMsg::CreateInbox
EXTRN	??0PackedData@@QAE@VObjectID@@@Z:NEAR		; PackedData::PackedData
EXTRN	??1PackedData@@UAE@XZ:NEAR			; PackedData::~PackedData
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:NEAR
_DATA	SEGMENT
	ORG $+3
$SG154641 DB	' ', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T162812 DD	019930520H
	DD	01H
	DD	FLAT:$T162814
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162814 DD	0ffffffffH
	DD	FLAT:$L162810
xdata$x	ENDS
_TEXT	SEGMENT
_hMsg$ = 8
_this$ = -44
_packed$ = -32
_bExists$ = -20
_nCount$ = -24
_nLoop$ = -16
$T162808 = -36
$T162809 = -40
__$EHRec$ = -12
?CreateInbox@CMailMsg@@QAEHVObjectID@@@Z PROC NEAR	; CMailMsg::CreateInbox

; 149  : {

  0039b	55		 push	 ebp
  0039c	8b ec		 mov	 ebp, esp
  0039e	6a ff		 push	 -1
  003a0	68 00 00 00 00	 push	 $L162813
  003a5	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  003ab	50		 push	 eax
  003ac	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  003b3	83 ec 20	 sub	 esp, 32			; 00000020H
  003b6	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 150  : 	m_nType = mmtInbox;

  003b9	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  003bc	c7 40 58 00 00
	00 00		 mov	 DWORD PTR [eax+88], 0

; 151  : 
; 152  : 	PackedData packed( hMsg );

  003c3	51		 push	 ecx
  003c4	8b cc		 mov	 ecx, esp
  003c6	89 65 dc	 mov	 DWORD PTR $T162808[ebp], esp
  003c9	8d 55 08	 lea	 edx, DWORD PTR _hMsg$[ebp]
  003cc	52		 push	 edx
  003cd	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  003d2	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  003d5	e8 00 00 00 00	 call	 ??0PackedData@@QAE@VObjectID@@@Z ; PackedData::PackedData
  003da	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 153  : 
; 154  : 	m_sBody = packed.getCharString();

  003e1	6a 00		 push	 0
  003e3	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  003e6	e8 00 00 00 00	 call	 ?getCharString@PackedData@@QAEPADH@Z ; PackedData::getCharString
  003eb	50		 push	 eax
  003ec	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ef	83 c1 44	 add	 ecx, 68			; 00000044H
  003f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 155  : 	int bExists = packed.getByte();

  003f8	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  003fb	e8 00 00 00 00	 call	 ?getByte@PackedData@@QAEEXZ ; PackedData::getByte
  00400	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00405	89 45 ec	 mov	 DWORD PTR _bExists$[ebp], eax

; 156  : 
; 157  : 	int nCount = packed.getByte();

  00408	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  0040b	e8 00 00 00 00	 call	 ?getByte@PackedData@@QAEEXZ ; PackedData::getByte
  00410	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00415	89 45 e8	 mov	 DWORD PTR _nCount$[ebp], eax

; 158  : 
; 159  : 	for (int nLoop = 0;nLoop < nCount;nLoop++) {

  00418	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _nLoop$[ebp], 0
  0041f	eb 09		 jmp	 SHORT $L154637
$L154638:
  00421	8b 45 f0	 mov	 eax, DWORD PTR _nLoop$[ebp]
  00424	83 c0 01	 add	 eax, 1
  00427	89 45 f0	 mov	 DWORD PTR _nLoop$[ebp], eax
$L154637:
  0042a	8b 4d f0	 mov	 ecx, DWORD PTR _nLoop$[ebp]
  0042d	3b 4d e8	 cmp	 ecx, DWORD PTR _nCount$[ebp]
  00430	7d 49		 jge	 SHORT $L154639

; 160  : 		if ( nLoop ) {

  00432	83 7d f0 00	 cmp	 DWORD PTR _nLoop$[ebp], 0
  00436	74 2a		 je	 SHORT $L154640

; 161  : 			m_sTo += " ";

  00438	68 00 00 00 00	 push	 OFFSET FLAT:$SG154641
  0043d	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00440	83 c1 04	 add	 ecx, 4
  00443	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 162  : 			m_sTo += packed.getCharString();

  00449	6a 00		 push	 0
  0044b	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  0044e	e8 00 00 00 00	 call	 ?getCharString@PackedData@@QAEPADH@Z ; PackedData::getCharString
  00453	50		 push	 eax
  00454	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00457	83 c1 04	 add	 ecx, 4
  0045a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 163  : 		} else {

  00460	eb 17		 jmp	 SHORT $L154642
$L154640:

; 164  : 			m_sTo = packed.getCharString();

  00462	6a 00		 push	 0
  00464	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  00467	e8 00 00 00 00	 call	 ?getCharString@PackedData@@QAEPADH@Z ; PackedData::getCharString
  0046c	50		 push	 eax
  0046d	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00470	83 c1 04	 add	 ecx, 4
  00473	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$L154642:

; 166  : 	}

  00479	eb a6		 jmp	 SHORT $L154638
$L154639:

; 167  : 	
; 168  : 	return TRUE;

  0047b	c7 45 d8 01 00
	00 00		 mov	 DWORD PTR $T162809[ebp], 1
  00482	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00489	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  0048c	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  00491	8b 45 d8	 mov	 eax, DWORD PTR $T162809[ebp]

; 169  : }

  00494	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00497	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0049e	8b e5		 mov	 esp, ebp
  004a0	5d		 pop	 ebp
  004a1	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L162810:
  00096	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  00099	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  0009e	c3		 ret	 0
$L162813:
  0009f	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162812
  000a4	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateInbox@CMailMsg@@QAEHVObjectID@@@Z ENDP		; CMailMsg::CreateInbox
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	?CreateReply@CMailMsg@@QAEHAAV1@@Z		; CMailMsg::CreateReply
PUBLIC	?GetTo@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetTo
PUBLIC	?GetFrom@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetFrom
PUBLIC	?GetSubject@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetSubject
PUBLIC	?GetBody@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetBody
PUBLIC	?GetUniqueID@CMailMsg@@QAEHXZ			; CMailMsg::GetUniqueID
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
EXTRN	??4CString@@QAEABV0@PBD@Z:NEAR			; CString::operator=
EXTRN	??YCString@@QAEABV0@ABV0@@Z:NEAR		; CString::operator+=
EXTRN	??H@YG?AVCString@@PBDABV0@@Z:NEAR		; operator+
EXTRN	?MakeLower@CString@@QAEXXZ:NEAR			; CString::MakeLower
EXTRN	?Replace@CString@@QAEHPBD0@Z:NEAR		; CString::Replace
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:NEAR
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:NEAR
EXTRN	??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z:NEAR ; std::operator+
_BSS	SEGMENT
	ALIGN	4

$SG154652 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+2
$SG154654 DB	' ', 00H
	ORG $+2
$SG154662 DB	'RE: ', 00H
	ORG $+3
$SG154670 DB	0aH, 0aH, '---- Original Message ----', 0aH, 00H
_DATA	ENDS
xdata$x	SEGMENT
$T162828 DD	019930520H
	DD	06H
	DD	FLAT:$T162830
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162830 DD	0ffffffffH
	DD	FLAT:$L162821
	DD	00H
	DD	FLAT:$L162822
	DD	01H
	DD	FLAT:$L162823
	DD	02H
	DD	FLAT:$L162824
	DD	02H
	DD	FLAT:$L162825
	DD	02H
	DD	FLAT:$L162826
xdata$x	ENDS
_TEXT	SEGMENT
$T162816 = -40
$T162817 = -44
$T162818 = -60
$T162819 = -76
$T162820 = -80
__$EHRec$ = -12
_msg$ = 8
_this$ = -84
_sFrom$ = -28
_sTo$ = -36
_sMe$ = -32
?CreateReply@CMailMsg@@QAEHAAV1@@Z PROC NEAR		; CMailMsg::CreateReply

; 173  : {

  004a4	55		 push	 ebp
  004a5	8b ec		 mov	 ebp, esp
  004a7	6a ff		 push	 -1
  004a9	68 00 00 00 00	 push	 $L162829
  004ae	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  004b4	50		 push	 eax
  004b5	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  004bc	83 ec 60	 sub	 esp, 96			; 00000060H
  004bf	89 4d ac	 mov	 DWORD PTR _this$[ebp], ecx

; 174  : 	m_nType = mmtReply;

  004c2	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  004c5	c7 40 58 02 00
	00 00		 mov	 DWORD PTR [eax+88], 2

; 175  : 
; 176  : 	std::string sFrom;

  004cc	8d 4d d8	 lea	 ecx, DWORD PTR $T162816[ebp]
  004cf	51		 push	 ecx
  004d0	8d 4d e4	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  004d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  004d9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 177  : 
; 178  : 	msg.GetFrom( sFrom );

  004e0	8d 55 e4	 lea	 edx, DWORD PTR _sFrom$[ebp]
  004e3	52		 push	 edx
  004e4	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  004e7	e8 00 00 00 00	 call	 ?GetFrom@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetFrom

; 179  : 	msg.GetTo( m_sTo );

  004ec	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  004ef	83 c0 04	 add	 eax, 4
  004f2	50		 push	 eax
  004f3	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  004f6	e8 00 00 00 00	 call	 ?GetTo@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetTo

; 180  : 
; 181  : 	CString sTo;

  004fb	8d 4d dc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  004fe	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00503	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 182  : 	CString sMe;

  00507	8d 4d e0	 lea	 ecx, DWORD PTR _sMe$[ebp]
  0050a	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0050f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 183  : 
; 184  : 	sMe = sFrom.c_str();

  00513	8d 4d e4	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  00516	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  0051c	50		 push	 eax
  0051d	8d 4d e0	 lea	 ecx, DWORD PTR _sMe$[ebp]
  00520	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 185  : 	sMe.MakeLower();

  00525	8d 4d e0	 lea	 ecx, DWORD PTR _sMe$[ebp]
  00528	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 186  : 
; 187  : 	sTo = m_sTo.c_str();

  0052d	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  00530	83 c1 04	 add	 ecx, 4
  00533	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  00539	50		 push	 eax
  0053a	8d 4d dc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  0053d	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 188  : 	sTo.MakeLower();

  00542	8d 4d dc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  00545	e8 00 00 00 00	 call	 ?MakeLower@CString@@QAEXXZ ; CString::MakeLower

; 189  : 
; 190  : 	sTo.Replace( sMe, "" );

  0054a	68 00 00 00 00	 push	 OFFSET FLAT:$SG154652
  0054f	8d 4d e0	 lea	 ecx, DWORD PTR _sMe$[ebp]
  00552	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00557	50		 push	 eax
  00558	8d 4d dc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  0055b	e8 00 00 00 00	 call	 ?Replace@CString@@QAEHPBD0@Z ; CString::Replace

; 191  : 	sTo += " " + sMe;

  00560	8d 4d e0	 lea	 ecx, DWORD PTR _sMe$[ebp]
  00563	51		 push	 ecx
  00564	68 00 00 00 00	 push	 OFFSET FLAT:$SG154654
  00569	8d 55 d4	 lea	 edx, DWORD PTR $T162817[ebp]
  0056c	52		 push	 edx
  0056d	e8 00 00 00 00	 call	 ??H@YG?AVCString@@PBDABV0@@Z ; operator+
  00572	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  00575	8b 45 a8	 mov	 eax, DWORD PTR -88+[ebp]
  00578	89 45 a4	 mov	 DWORD PTR -92+[ebp], eax
  0057b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0057f	8b 4d a4	 mov	 ecx, DWORD PTR -92+[ebp]
  00582	51		 push	 ecx
  00583	8d 4d dc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  00586	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@ABV0@@Z ; CString::operator+=
  0058b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0058f	8d 4d d4	 lea	 ecx, DWORD PTR $T162817[ebp]
  00592	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 192  : 
; 193  : 	m_sTo = sTo;

  00597	8d 4d dc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  0059a	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0059f	50		 push	 eax
  005a0	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  005a3	83 c1 04	 add	 ecx, 4
  005a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 194  : 
; 195  : 	msg.GetSubject( m_sSubject );

  005ac	8b 55 ac	 mov	 edx, DWORD PTR _this$[ebp]
  005af	83 c2 34	 add	 edx, 52			; 00000034H
  005b2	52		 push	 edx
  005b3	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  005b6	e8 00 00 00 00	 call	 ?GetSubject@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetSubject

; 196  : 	m_sSubject = "RE: " + m_sSubject;

  005bb	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  005be	83 c0 34	 add	 eax, 52			; 00000034H
  005c1	50		 push	 eax
  005c2	68 00 00 00 00	 push	 OFFSET FLAT:$SG154662
  005c7	8d 4d c4	 lea	 ecx, DWORD PTR $T162818[ebp]
  005ca	51		 push	 ecx
  005cb	e8 00 00 00 00	 call	 ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+
  005d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  005d3	89 45 a0	 mov	 DWORD PTR -96+[ebp], eax
  005d6	8b 55 a0	 mov	 edx, DWORD PTR -96+[ebp]
  005d9	89 55 9c	 mov	 DWORD PTR -100+[ebp], edx
  005dc	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  005e0	8b 45 9c	 mov	 eax, DWORD PTR -100+[ebp]
  005e3	50		 push	 eax
  005e4	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  005e7	83 c1 34	 add	 ecx, 52			; 00000034H
  005ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
  005f0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  005f4	8d 4d c4	 lea	 ecx, DWORD PTR $T162818[ebp]
  005f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 197  : 
; 198  : 	msg.GetBody( m_sBody );

  005fd	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  00600	83 c1 44	 add	 ecx, 68			; 00000044H
  00603	51		 push	 ecx
  00604	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  00607	e8 00 00 00 00	 call	 ?GetBody@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetBody

; 199  : 	m_sBody = "\n\n---- Original Message ----\n" + m_sBody;

  0060c	8b 55 ac	 mov	 edx, DWORD PTR _this$[ebp]
  0060f	83 c2 44	 add	 edx, 68			; 00000044H
  00612	52		 push	 edx
  00613	68 00 00 00 00	 push	 OFFSET FLAT:$SG154670
  00618	8d 45 b4	 lea	 eax, DWORD PTR $T162819[ebp]
  0061b	50		 push	 eax
  0061c	e8 00 00 00 00	 call	 ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+
  00621	83 c4 0c	 add	 esp, 12			; 0000000cH
  00624	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  00627	8b 4d 98	 mov	 ecx, DWORD PTR -104+[ebp]
  0062a	89 4d 94	 mov	 DWORD PTR -108+[ebp], ecx
  0062d	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00631	8b 55 94	 mov	 edx, DWORD PTR -108+[ebp]
  00634	52		 push	 edx
  00635	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  00638	83 c1 44	 add	 ecx, 68			; 00000044H
  0063b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
  00641	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00645	8d 4d b4	 lea	 ecx, DWORD PTR $T162819[ebp]
  00648	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 200  : 
; 201  : 	m_nReferralID = msg.GetUniqueID();

  0064e	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  00651	e8 00 00 00 00	 call	 ?GetUniqueID@CMailMsg@@QAEHXZ ; CMailMsg::GetUniqueID
  00656	8b 4d ac	 mov	 ecx, DWORD PTR _this$[ebp]
  00659	89 41 60	 mov	 DWORD PTR [ecx+96], eax

; 202  : 
; 203  : 	return TRUE;

  0065c	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR $T162820[ebp], 1
  00663	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00667	8d 4d e0	 lea	 ecx, DWORD PTR _sMe$[ebp]
  0066a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0066f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00673	8d 4d dc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  00676	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0067b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00682	8d 4d e4	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  00685	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0068b	8b 45 b0	 mov	 eax, DWORD PTR $T162820[ebp]

; 204  : }

  0068e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00691	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00698	8b e5		 mov	 esp, ebp
  0069a	5d		 pop	 ebp
  0069b	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L162821:
  000a9	8d 4d e4	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000b2	c3		 ret	 0
$L162822:
  000b3	8d 4d dc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  000b6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000bb	c3		 ret	 0
$L162823:
  000bc	8d 4d e0	 lea	 ecx, DWORD PTR _sMe$[ebp]
  000bf	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000c4	c3		 ret	 0
$L162824:
  000c5	8d 4d d4	 lea	 ecx, DWORD PTR $T162817[ebp]
  000c8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000cd	c3		 ret	 0
$L162825:
  000ce	8d 4d c4	 lea	 ecx, DWORD PTR $T162818[ebp]
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000d7	c3		 ret	 0
$L162826:
  000d8	8d 4d b4	 lea	 ecx, DWORD PTR $T162819[ebp]
  000db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000e1	c3		 ret	 0
$L162829:
  000e2	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162828
  000e7	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateReply@CMailMsg@@QAEHAAV1@@Z ENDP			; CMailMsg::CreateReply
PUBLIC	?CreateForward@CMailMsg@@QAEHAAV1@@Z		; CMailMsg::CreateForward
_DATA	SEGMENT
	ORG $+2
$SG154683 DB	'FWD: ', 00H
	ORG $+2
$SG154691 DB	0aH, 0aH, '---- Original Message ----', 0aH, 00H
_DATA	ENDS
xdata$x	SEGMENT
$T162837 DD	019930520H
	DD	02H
	DD	FLAT:$T162839
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162839 DD	0ffffffffH
	DD	FLAT:$L162834
	DD	0ffffffffH
	DD	FLAT:$L162835
xdata$x	ENDS
_TEXT	SEGMENT
$T162832 = -28
$T162833 = -44
__$EHRec$ = -12
_msg$ = 8
_this$ = -48
?CreateForward@CMailMsg@@QAEHAAV1@@Z PROC NEAR		; CMailMsg::CreateForward

; 208  : {

  0069e	55		 push	 ebp
  0069f	8b ec		 mov	 ebp, esp
  006a1	6a ff		 push	 -1
  006a3	68 00 00 00 00	 push	 $L162838
  006a8	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  006ae	50		 push	 eax
  006af	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  006b6	83 ec 34	 sub	 esp, 52			; 00000034H
  006b9	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 209  : 	m_nType = mmtForward;

  006bc	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  006bf	c7 40 58 03 00
	00 00		 mov	 DWORD PTR [eax+88], 3

; 210  : 
; 211  : 	msg.GetSubject( m_sSubject );

  006c6	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  006c9	83 c1 34	 add	 ecx, 52			; 00000034H
  006cc	51		 push	 ecx
  006cd	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  006d0	e8 00 00 00 00	 call	 ?GetSubject@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetSubject

; 212  : 	m_sSubject = "FWD: " + m_sSubject;

  006d5	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  006d8	83 c2 34	 add	 edx, 52			; 00000034H
  006db	52		 push	 edx
  006dc	68 00 00 00 00	 push	 OFFSET FLAT:$SG154683
  006e1	8d 45 e4	 lea	 eax, DWORD PTR $T162832[ebp]
  006e4	50		 push	 eax
  006e5	e8 00 00 00 00	 call	 ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+
  006ea	83 c4 0c	 add	 esp, 12			; 0000000cH
  006ed	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  006f0	8b 4d cc	 mov	 ecx, DWORD PTR -52+[ebp]
  006f3	89 4d c8	 mov	 DWORD PTR -56+[ebp], ecx
  006f6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  006fd	8b 55 c8	 mov	 edx, DWORD PTR -56+[ebp]
  00700	52		 push	 edx
  00701	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00704	83 c1 34	 add	 ecx, 52			; 00000034H
  00707	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
  0070d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00714	8d 4d e4	 lea	 ecx, DWORD PTR $T162832[ebp]
  00717	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 213  : 
; 214  : 	msg.GetBody( m_sBody );

  0071d	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  00720	83 c0 44	 add	 eax, 68			; 00000044H
  00723	50		 push	 eax
  00724	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  00727	e8 00 00 00 00	 call	 ?GetBody@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetBody

; 215  : 	m_sBody = "\n\n---- Original Message ----\n" + m_sBody;

  0072c	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0072f	83 c1 44	 add	 ecx, 68			; 00000044H
  00732	51		 push	 ecx
  00733	68 00 00 00 00	 push	 OFFSET FLAT:$SG154691
  00738	8d 55 d4	 lea	 edx, DWORD PTR $T162833[ebp]
  0073b	52		 push	 edx
  0073c	e8 00 00 00 00	 call	 ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+
  00741	83 c4 0c	 add	 esp, 12			; 0000000cH
  00744	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  00747	8b 45 c4	 mov	 eax, DWORD PTR -60+[ebp]
  0074a	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  0074d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00754	8b 4d c0	 mov	 ecx, DWORD PTR -64+[ebp]
  00757	51		 push	 ecx
  00758	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0075b	83 c1 44	 add	 ecx, 68			; 00000044H
  0075e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
  00764	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0076b	8d 4d d4	 lea	 ecx, DWORD PTR $T162833[ebp]
  0076e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 216  : 
; 217  : 	m_nReferralID = msg.GetUniqueID();

  00774	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  00777	e8 00 00 00 00	 call	 ?GetUniqueID@CMailMsg@@QAEHXZ ; CMailMsg::GetUniqueID
  0077c	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  0077f	89 42 60	 mov	 DWORD PTR [edx+96], eax

; 218  : 	
; 219  : 	return TRUE;

  00782	b8 01 00 00 00	 mov	 eax, 1

; 220  : }

  00787	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0078a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00791	8b e5		 mov	 esp, ebp
  00793	5d		 pop	 ebp
  00794	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L162834:
  000ec	8d 4d e4	 lea	 ecx, DWORD PTR $T162832[ebp]
  000ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000f5	c3		 ret	 0
$L162835:
  000f6	8d 4d d4	 lea	 ecx, DWORD PTR $T162833[ebp]
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  000ff	c3		 ret	 0
$L162838:
  00100	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162837
  00105	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateForward@CMailMsg@@QAEHAAV1@@Z ENDP		; CMailMsg::CreateForward
PUBLIC	?SetTo@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::SetTo
xdata$x	SEGMENT
$T162843 DD	019930520H
	DD	01H
	DD	FLAT:$T162845
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162845 DD	0ffffffffH
	DD	FLAT:$L162841
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_sTo$ = 8
_this$ = -16
?SetTo@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CMailMsg::SetTo

; 224  : {

  00797	55		 push	 ebp
  00798	8b ec		 mov	 ebp, esp
  0079a	6a ff		 push	 -1
  0079c	68 00 00 00 00	 push	 $L162844
  007a1	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  007a7	50		 push	 eax
  007a8	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  007af	51		 push	 ecx
  007b0	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  007b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 225  : 	m_sTo = sTo;

  007ba	8d 45 08	 lea	 eax, DWORD PTR _sTo$[ebp]
  007bd	50		 push	 eax
  007be	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007c1	83 c1 04	 add	 ecx, 4
  007c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 226  : }

  007ca	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  007d1	8d 4d 08	 lea	 ecx, DWORD PTR _sTo$[ebp]
  007d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  007da	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  007dd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  007e4	8b e5		 mov	 esp, ebp
  007e6	5d		 pop	 ebp
  007e7	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L162841:
  0010a	8d 4d 08	 lea	 ecx, DWORD PTR _sTo$[ebp]
  0010d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00113	c3		 ret	 0
$L162844:
  00114	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162843
  00119	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetTo@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMailMsg::SetTo
PUBLIC	?SetTo@CMailMsg@@QAEXPBD@Z			; CMailMsg::SetTo
_TEXT	SEGMENT
_pTo$ = 8
_this$ = -4
?SetTo@CMailMsg@@QAEXPBD@Z PROC NEAR			; CMailMsg::SetTo

; 229  : {

  007ea	55		 push	 ebp
  007eb	8b ec		 mov	 ebp, esp
  007ed	51		 push	 ecx
  007ee	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 230  : 	m_sTo = pTo;

  007f1	8b 45 08	 mov	 eax, DWORD PTR _pTo$[ebp]
  007f4	50		 push	 eax
  007f5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  007f8	83 c1 04	 add	 ecx, 4
  007fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 231  : }

  00801	8b e5		 mov	 esp, ebp
  00803	5d		 pop	 ebp
  00804	c2 04 00	 ret	 4
?SetTo@CMailMsg@@QAEXPBD@Z ENDP				; CMailMsg::SetTo
_TEXT	ENDS
PUBLIC	?SetFrom@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::SetFrom
xdata$x	SEGMENT
$T162850 DD	019930520H
	DD	01H
	DD	FLAT:$T162852
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162852 DD	0ffffffffH
	DD	FLAT:$L162848
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_sFrom$ = 8
_this$ = -16
?SetFrom@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CMailMsg::SetFrom

; 235  : {

  00807	55		 push	 ebp
  00808	8b ec		 mov	 ebp, esp
  0080a	6a ff		 push	 -1
  0080c	68 00 00 00 00	 push	 $L162851
  00811	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00817	50		 push	 eax
  00818	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0081f	51		 push	 ecx
  00820	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00823	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 236  : 	m_sFrom = sFrom;

  0082a	8d 45 08	 lea	 eax, DWORD PTR _sFrom$[ebp]
  0082d	50		 push	 eax
  0082e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00831	83 c1 14	 add	 ecx, 20			; 00000014H
  00834	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 237  : }

  0083a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00841	8d 4d 08	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  00844	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0084a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0084d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00854	8b e5		 mov	 esp, ebp
  00856	5d		 pop	 ebp
  00857	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L162848:
  0011e	8d 4d 08	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  00121	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00127	c3		 ret	 0
$L162851:
  00128	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162850
  0012d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetFrom@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMailMsg::SetFrom
PUBLIC	?SetFrom@CMailMsg@@QAEXPBD@Z			; CMailMsg::SetFrom
_TEXT	SEGMENT
_pFrom$ = 8
_this$ = -4
?SetFrom@CMailMsg@@QAEXPBD@Z PROC NEAR			; CMailMsg::SetFrom

; 240  : {

  0085a	55		 push	 ebp
  0085b	8b ec		 mov	 ebp, esp
  0085d	51		 push	 ecx
  0085e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 241  : 	m_sFrom = pFrom;

  00861	8b 45 08	 mov	 eax, DWORD PTR _pFrom$[ebp]
  00864	50		 push	 eax
  00865	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00868	83 c1 14	 add	 ecx, 20			; 00000014H
  0086b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 242  : }

  00871	8b e5		 mov	 esp, ebp
  00873	5d		 pop	 ebp
  00874	c2 04 00	 ret	 4
?SetFrom@CMailMsg@@QAEXPBD@Z ENDP			; CMailMsg::SetFrom
_TEXT	ENDS
PUBLIC	?SetSubject@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::SetSubject
xdata$x	SEGMENT
$T162857 DD	019930520H
	DD	01H
	DD	FLAT:$T162859
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162859 DD	0ffffffffH
	DD	FLAT:$L162855
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_sSubject$ = 8
_this$ = -16
?SetSubject@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CMailMsg::SetSubject

; 246  : {

  00877	55		 push	 ebp
  00878	8b ec		 mov	 ebp, esp
  0087a	6a ff		 push	 -1
  0087c	68 00 00 00 00	 push	 $L162858
  00881	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00887	50		 push	 eax
  00888	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0088f	51		 push	 ecx
  00890	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00893	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 247  : 	m_sSubject = sSubject;

  0089a	8d 45 08	 lea	 eax, DWORD PTR _sSubject$[ebp]
  0089d	50		 push	 eax
  0089e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  008a1	83 c1 34	 add	 ecx, 52			; 00000034H
  008a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 248  : }

  008aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008b1	8d 4d 08	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  008b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  008ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  008bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  008c4	8b e5		 mov	 esp, ebp
  008c6	5d		 pop	 ebp
  008c7	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L162855:
  00132	8d 4d 08	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  00135	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0013b	c3		 ret	 0
$L162858:
  0013c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162857
  00141	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetSubject@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMailMsg::SetSubject
PUBLIC	?SetSubject@CMailMsg@@QAEXPBD@Z			; CMailMsg::SetSubject
_TEXT	SEGMENT
_pSubject$ = 8
_this$ = -4
?SetSubject@CMailMsg@@QAEXPBD@Z PROC NEAR		; CMailMsg::SetSubject

; 251  : {

  008ca	55		 push	 ebp
  008cb	8b ec		 mov	 ebp, esp
  008cd	51		 push	 ecx
  008ce	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 252  : 	m_sSubject = pSubject;

  008d1	8b 45 08	 mov	 eax, DWORD PTR _pSubject$[ebp]
  008d4	50		 push	 eax
  008d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008d8	83 c1 34	 add	 ecx, 52			; 00000034H
  008db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 253  : }

  008e1	8b e5		 mov	 esp, ebp
  008e3	5d		 pop	 ebp
  008e4	c2 04 00	 ret	 4
?SetSubject@CMailMsg@@QAEXPBD@Z ENDP			; CMailMsg::SetSubject
_TEXT	ENDS
PUBLIC	?SetReceived@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::SetReceived
xdata$x	SEGMENT
$T162864 DD	019930520H
	DD	01H
	DD	FLAT:$T162866
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162866 DD	0ffffffffH
	DD	FLAT:$L162862
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_sReceived$ = 8
_this$ = -16
?SetReceived@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CMailMsg::SetReceived

; 257  : {

  008e7	55		 push	 ebp
  008e8	8b ec		 mov	 ebp, esp
  008ea	6a ff		 push	 -1
  008ec	68 00 00 00 00	 push	 $L162865
  008f1	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  008f7	50		 push	 eax
  008f8	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  008ff	51		 push	 ecx
  00900	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00903	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 258  : 	m_sReceived = sReceived;

  0090a	8d 45 08	 lea	 eax, DWORD PTR _sReceived$[ebp]
  0090d	50		 push	 eax
  0090e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00911	83 c1 24	 add	 ecx, 36			; 00000024H
  00914	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 259  : }

  0091a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00921	8d 4d 08	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  00924	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0092a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0092d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00934	8b e5		 mov	 esp, ebp
  00936	5d		 pop	 ebp
  00937	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L162862:
  00146	8d 4d 08	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  00149	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0014f	c3		 ret	 0
$L162865:
  00150	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162864
  00155	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetReceived@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMailMsg::SetReceived
PUBLIC	?SetReceived@CMailMsg@@QAEXPBD@Z		; CMailMsg::SetReceived
_TEXT	SEGMENT
_pReceived$ = 8
_this$ = -4
?SetReceived@CMailMsg@@QAEXPBD@Z PROC NEAR		; CMailMsg::SetReceived

; 262  : {

  0093a	55		 push	 ebp
  0093b	8b ec		 mov	 ebp, esp
  0093d	51		 push	 ecx
  0093e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 263  : 	m_sReceived = pReceived;

  00941	8b 45 08	 mov	 eax, DWORD PTR _pReceived$[ebp]
  00944	50		 push	 eax
  00945	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00948	83 c1 24	 add	 ecx, 36			; 00000024H
  0094b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 264  : }

  00951	8b e5		 mov	 esp, ebp
  00953	5d		 pop	 ebp
  00954	c2 04 00	 ret	 4
?SetReceived@CMailMsg@@QAEXPBD@Z ENDP			; CMailMsg::SetReceived
_TEXT	ENDS
PUBLIC	?SetBody@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::SetBody
xdata$x	SEGMENT
$T162871 DD	019930520H
	DD	01H
	DD	FLAT:$T162873
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162873 DD	0ffffffffH
	DD	FLAT:$L162869
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_sBody$ = 8
_this$ = -16
?SetBody@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CMailMsg::SetBody

; 268  : {

  00957	55		 push	 ebp
  00958	8b ec		 mov	 ebp, esp
  0095a	6a ff		 push	 -1
  0095c	68 00 00 00 00	 push	 $L162872
  00961	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00967	50		 push	 eax
  00968	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0096f	51		 push	 ecx
  00970	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00973	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 269  : 	m_sBody = sBody;

  0097a	8d 45 08	 lea	 eax, DWORD PTR _sBody$[ebp]
  0097d	50		 push	 eax
  0097e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00981	83 c1 44	 add	 ecx, 68			; 00000044H
  00984	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 270  : }

  0098a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00991	8d 4d 08	 lea	 ecx, DWORD PTR _sBody$[ebp]
  00994	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0099a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0099d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  009a4	8b e5		 mov	 esp, ebp
  009a6	5d		 pop	 ebp
  009a7	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L162869:
  0015a	8d 4d 08	 lea	 ecx, DWORD PTR _sBody$[ebp]
  0015d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00163	c3		 ret	 0
$L162872:
  00164	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162871
  00169	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetBody@CMailMsg@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMailMsg::SetBody
PUBLIC	?SetBody@CMailMsg@@QAEXPBD@Z			; CMailMsg::SetBody
_TEXT	SEGMENT
_pBody$ = 8
_this$ = -4
?SetBody@CMailMsg@@QAEXPBD@Z PROC NEAR			; CMailMsg::SetBody

; 273  : {

  009aa	55		 push	 ebp
  009ab	8b ec		 mov	 ebp, esp
  009ad	51		 push	 ecx
  009ae	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 274  : 	m_sBody = pBody;

  009b1	8b 45 08	 mov	 eax, DWORD PTR _pBody$[ebp]
  009b4	50		 push	 eax
  009b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  009b8	83 c1 44	 add	 ecx, 68			; 00000044H
  009bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 275  : }

  009c1	8b e5		 mov	 esp, ebp
  009c3	5d		 pop	 ebp
  009c4	c2 04 00	 ret	 4
?SetBody@CMailMsg@@QAEXPBD@Z ENDP			; CMailMsg::SetBody
_TEXT	ENDS
PUBLIC	?GetComplete@CMailMsg@@QAEHXZ			; CMailMsg::GetComplete
_TEXT	SEGMENT
_this$ = -4
?GetComplete@CMailMsg@@QAEHXZ PROC NEAR			; CMailMsg::GetComplete

; 279  : {

  009c7	55		 push	 ebp
  009c8	8b ec		 mov	 ebp, esp
  009ca	51		 push	 ecx
  009cb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 280  : 	return m_bCompleted;

  009ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009d1	8b 40 54	 mov	 eax, DWORD PTR [eax+84]

; 281  : }

  009d4	8b e5		 mov	 esp, ebp
  009d6	5d		 pop	 ebp
  009d7	c3		 ret	 0
?GetComplete@CMailMsg@@QAEHXZ ENDP			; CMailMsg::GetComplete
_sTo$ = 8
_this$ = -4
?GetTo@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CMailMsg::GetTo

; 285  : {

  009d8	55		 push	 ebp
  009d9	8b ec		 mov	 ebp, esp
  009db	51		 push	 ecx
  009dc	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 	sTo = m_sTo;

  009df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009e2	83 c0 04	 add	 eax, 4
  009e5	50		 push	 eax
  009e6	8b 4d 08	 mov	 ecx, DWORD PTR _sTo$[ebp]
  009e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 287  : }

  009ef	8b e5		 mov	 esp, ebp
  009f1	5d		 pop	 ebp
  009f2	c2 04 00	 ret	 4
?GetTo@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMailMsg::GetTo
_sFrom$ = 8
_this$ = -4
?GetFrom@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CMailMsg::GetFrom

; 291  : {

  009f5	55		 push	 ebp
  009f6	8b ec		 mov	 ebp, esp
  009f8	51		 push	 ecx
  009f9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 292  : 	sFrom = m_sFrom;

  009fc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  009ff	83 c0 14	 add	 eax, 20			; 00000014H
  00a02	50		 push	 eax
  00a03	8b 4d 08	 mov	 ecx, DWORD PTR _sFrom$[ebp]
  00a06	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 293  : }

  00a0c	8b e5		 mov	 esp, ebp
  00a0e	5d		 pop	 ebp
  00a0f	c2 04 00	 ret	 4
?GetFrom@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMailMsg::GetFrom
_sSubject$ = 8
_this$ = -4
?GetSubject@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CMailMsg::GetSubject

; 297  : {

  00a12	55		 push	 ebp
  00a13	8b ec		 mov	 ebp, esp
  00a15	51		 push	 ecx
  00a16	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 298  : 	sSubject = m_sSubject;

  00a19	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a1c	83 c0 34	 add	 eax, 52			; 00000034H
  00a1f	50		 push	 eax
  00a20	8b 4d 08	 mov	 ecx, DWORD PTR _sSubject$[ebp]
  00a23	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 299  : }

  00a29	8b e5		 mov	 esp, ebp
  00a2b	5d		 pop	 ebp
  00a2c	c2 04 00	 ret	 4
?GetSubject@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMailMsg::GetSubject
_TEXT	ENDS
PUBLIC	?GetReceived@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetReceived
_TEXT	SEGMENT
_sReceived$ = 8
_this$ = -4
?GetReceived@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CMailMsg::GetReceived

; 303  : {

  00a2f	55		 push	 ebp
  00a30	8b ec		 mov	 ebp, esp
  00a32	51		 push	 ecx
  00a33	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 304  : 	sReceived = m_sReceived;

  00a36	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a39	83 c0 24	 add	 eax, 36			; 00000024H
  00a3c	50		 push	 eax
  00a3d	8b 4d 08	 mov	 ecx, DWORD PTR _sReceived$[ebp]
  00a40	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 305  : }

  00a46	8b e5		 mov	 esp, ebp
  00a48	5d		 pop	 ebp
  00a49	c2 04 00	 ret	 4
?GetReceived@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMailMsg::GetReceived
_sBody$ = 8
_this$ = -4
?GetBody@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CMailMsg::GetBody

; 309  : {

  00a4c	55		 push	 ebp
  00a4d	8b ec		 mov	 ebp, esp
  00a4f	51		 push	 ecx
  00a50	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 310  : 	sBody = m_sBody;

  00a53	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a56	83 c0 44	 add	 eax, 68			; 00000044H
  00a59	50		 push	 eax
  00a5a	8b 4d 08	 mov	 ecx, DWORD PTR _sBody$[ebp]
  00a5d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 311  : }

  00a63	8b e5		 mov	 esp, ebp
  00a65	5d		 pop	 ebp
  00a66	c2 04 00	 ret	 4
?GetBody@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CMailMsg::GetBody
_TEXT	ENDS
PUBLIC	?GetType@CMailMsg@@QAEHXZ			; CMailMsg::GetType
_TEXT	SEGMENT
_this$ = -4
?GetType@CMailMsg@@QAEHXZ PROC NEAR			; CMailMsg::GetType

; 315  : {

  00a69	55		 push	 ebp
  00a6a	8b ec		 mov	 ebp, esp
  00a6c	51		 push	 ecx
  00a6d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 316  : 	return m_nType;

  00a70	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a73	8b 40 58	 mov	 eax, DWORD PTR [eax+88]

; 317  : }

  00a76	8b e5		 mov	 esp, ebp
  00a78	5d		 pop	 ebp
  00a79	c3		 ret	 0
?GetType@CMailMsg@@QAEHXZ ENDP				; CMailMsg::GetType
_this$ = -4
?GetUniqueID@CMailMsg@@QAEHXZ PROC NEAR			; CMailMsg::GetUniqueID

; 320  : int CMailMsg::GetUniqueID ( void ) {

  00a7a	55		 push	 ebp
  00a7b	8b ec		 mov	 ebp, esp
  00a7d	51		 push	 ecx
  00a7e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 321  : 	return m_nUniqueID;

  00a81	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00a84	8b 40 5c	 mov	 eax, DWORD PTR [eax+92]

; 322  : }

  00a87	8b e5		 mov	 esp, ebp
  00a89	5d		 pop	 ebp
  00a8a	c3		 ret	 0
?GetUniqueID@CMailMsg@@QAEHXZ ENDP			; CMailMsg::GetUniqueID
_TEXT	ENDS
PUBLIC	??0?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@ABV?$allocator@PAVCMailMsg@@@1@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::list<CMailMsg *,std::allocator<CMailMsg *> >
PUBLIC	??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::~list<CMailMsg *,std::allocator<CMailMsg *> >
PUBLIC	??0CMailBox@@QAE@XZ				; CMailBox::CMailBox
PUBLIC	??_7CMailBox@@6B@				; CMailBox::`vftable'
PUBLIC	??_GCMailBox@@UAEPAXI@Z				; CMailBox::`scalar deleting destructor'
PUBLIC	??_ECMailBox@@UAEPAXI@Z				; CMailBox::`vector deleting destructor'
;	COMDAT ??_7CMailBox@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CMailBox@@6B@ DD FLAT:??_ECMailBox@@UAEPAXI@Z	; CMailBox::`vftable'
CONST	ENDS
xdata$x	SEGMENT
$T162893 DD	019930520H
	DD	02H
	DD	FLAT:$T162895
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162895 DD	0ffffffffH
	DD	FLAT:$L162890
	DD	00H
	DD	FLAT:$L162891
xdata$x	ENDS
_TEXT	SEGMENT
$T162884 = -16
$T162885 = -20
$T162886 = -24
$T162887 = -28
__$EHRec$ = -12
_this$ = -32
??0CMailBox@@QAE@XZ PROC NEAR				; CMailBox::CMailBox

; 331  : {

  00a8b	55		 push	 ebp
  00a8c	8b ec		 mov	 ebp, esp
  00a8e	6a ff		 push	 -1
  00a90	68 00 00 00 00	 push	 $L162894
  00a95	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00a9b	50		 push	 eax
  00a9c	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00aa3	83 ec 18	 sub	 esp, 24			; 00000018H
  00aa6	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  00aa9	8d 45 f0	 lea	 eax, DWORD PTR $T162884[ebp]
  00aac	50		 push	 eax
  00aad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ab0	83 c1 04	 add	 ecx, 4
  00ab3	e8 00 00 00 00	 call	 ??0?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@ABV?$allocator@PAVCMailMsg@@@1@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::list<CMailMsg *,std::allocator<CMailMsg *> >
  00ab8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00abf	8d 4d ec	 lea	 ecx, DWORD PTR $T162885[ebp]
  00ac2	51		 push	 ecx
  00ac3	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ac6	83 c1 10	 add	 ecx, 16			; 00000010H
  00ac9	e8 00 00 00 00	 call	 ??0?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@ABV?$allocator@PAVCMailMsg@@@1@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::list<CMailMsg *,std::allocator<CMailMsg *> >
  00ace	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ad2	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00ad5	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7CMailBox@@6B@ ; CMailBox::`vftable'

; 332  : 	if ( g_pMailBox )

  00adb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox
  00ae2	74 2c		 je	 SHORT $L162889

; 333  : 		delete g_pMailBox;

  00ae4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  00ae9	89 45 e4	 mov	 DWORD PTR $T162887[ebp], eax
  00aec	8b 4d e4	 mov	 ecx, DWORD PTR $T162887[ebp]
  00aef	89 4d e8	 mov	 DWORD PTR $T162886[ebp], ecx
  00af2	83 7d e8 00	 cmp	 DWORD PTR $T162886[ebp], 0
  00af6	74 11		 je	 SHORT $L162888
  00af8	6a 01		 push	 1
  00afa	8b 55 e8	 mov	 edx, DWORD PTR $T162886[ebp]
  00afd	8b 02		 mov	 eax, DWORD PTR [edx]
  00aff	8b 4d e8	 mov	 ecx, DWORD PTR $T162886[ebp]
  00b02	ff 10		 call	 DWORD PTR [eax]
  00b04	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  00b07	eb 07		 jmp	 SHORT $L162889
$L162888:
  00b09	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L162889:

; 334  : 
; 335  : 	//	Initialize all variables
; 336  : 	m_pAuthoringMsg    = NULL;

  00b10	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b13	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 337  :     m_nRequestUniqueID = -1;

  00b1a	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00b1d	c7 42 20 ff ff
	ff ff		 mov	 DWORD PTR [edx+32], -1

; 338  :     m_bAuthorOpen = false;

  00b24	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00b27	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0

; 339  : 	g_pMailBox = this;

  00b2e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b31	89 0d 00 00 00
	00		 mov	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, ecx ; g_pMailBox

; 340  : }

  00b37	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b3e	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00b41	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00b44	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00b4b	8b e5		 mov	 esp, ebp
  00b4d	5d		 pop	 ebp
  00b4e	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L162890:
  0016e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00171	83 c1 04	 add	 ecx, 4
  00174	e8 00 00 00 00	 call	 ??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::~list<CMailMsg *,std::allocator<CMailMsg *> >
  00179	c3		 ret	 0
$L162891:
  0017a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	83 c1 10	 add	 ecx, 16			; 00000010H
  00180	e8 00 00 00 00	 call	 ??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::~list<CMailMsg *,std::allocator<CMailMsg *> >
  00185	c3		 ret	 0
$L162894:
  00186	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162893
  0018b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CMailBox@@QAE@XZ ENDP				; CMailBox::CMailBox
PUBLIC	??1CMailBox@@UAE@XZ				; CMailBox::~CMailBox
;	COMDAT ??_GCMailBox@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMailBox@@UAEPAXI@Z PROC NEAR			; CMailBox::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMailBox@@UAE@XZ	; CMailBox::~CMailBox
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L154775
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L154775:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCMailBox@@UAEPAXI@Z ENDP				; CMailBox::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::begin
PUBLIC	?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end
PUBLIC	?clear@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXXZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::clear
PUBLIC	??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator
PUBLIC	??Diterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEAAPAVCMailMsg@@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator*
PUBLIC	??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
PUBLIC	??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator!=
xdata$x	SEGMENT
$T162912 DD	019930520H
	DD	02H
	DD	FLAT:$T162914
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162914 DD	0ffffffffH
	DD	FLAT:$L162909
	DD	00H
	DD	FLAT:$L162910
xdata$x	ENDS
_TEXT	SEGMENT
$T162898 = -20
$T162899 = -24
$T162900 = -28
$T162901 = -32
$T162902 = -36
$T162905 = -40
$T162906 = -44
__$EHRec$ = -12
_this$ = -48
_listI$ = -16
??1CMailBox@@UAE@XZ PROC NEAR				; CMailBox::~CMailBox

; 343  : {

  00b4f	55		 push	 ebp
  00b50	8b ec		 mov	 ebp, esp
  00b52	6a ff		 push	 -1
  00b54	68 00 00 00 00	 push	 $L162913
  00b59	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00b5f	50		 push	 eax
  00b60	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00b67	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00b6a	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx
  00b6d	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  00b70	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMailBox@@6B@ ; CMailBox::`vftable'
  00b76	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 344  : 	g_pMailBox = NULL;

  00b7d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox

; 345  : 
; 346  : 	std::list<CMailMsg*>::iterator listI;

  00b87	8d 4d f0	 lea	 ecx, DWORD PTR _listI$[ebp]
  00b8a	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator

; 347  : 	
; 348  : 	for (listI = m_MsgList.begin();listI != m_MsgList.end();listI++) {

  00b8f	8d 4d ec	 lea	 ecx, DWORD PTR $T162898[ebp]
  00b92	51		 push	 ecx
  00b93	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00b96	83 c1 04	 add	 ecx, 4
  00b99	e8 00 00 00 00	 call	 ?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::begin
  00b9e	8b 10		 mov	 edx, DWORD PTR [eax]
  00ba0	89 55 f0	 mov	 DWORD PTR _listI$[ebp], edx
  00ba3	eb 0e		 jmp	 SHORT $L154784
$L154785:
  00ba5	6a 00		 push	 0
  00ba7	8d 45 e8	 lea	 eax, DWORD PTR $T162899[ebp]
  00baa	50		 push	 eax
  00bab	8d 4d f0	 lea	 ecx, DWORD PTR _listI$[ebp]
  00bae	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
$L154784:
  00bb3	8d 4d e4	 lea	 ecx, DWORD PTR $T162900[ebp]
  00bb6	51		 push	 ecx
  00bb7	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00bba	83 c1 04	 add	 ecx, 4
  00bbd	e8 00 00 00 00	 call	 ?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end
  00bc2	50		 push	 eax
  00bc3	8d 4d f0	 lea	 ecx, DWORD PTR _listI$[ebp]
  00bc6	e8 00 00 00 00	 call	 ??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator!=
  00bcb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00bd0	85 c0		 test	 eax, eax
  00bd2	74 33		 je	 SHORT $L154786

; 349  : 		delete *listI;

  00bd4	8d 4d f0	 lea	 ecx, DWORD PTR _listI$[ebp]
  00bd7	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEAAPAVCMailMsg@@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator*
  00bdc	8b 10		 mov	 edx, DWORD PTR [eax]
  00bde	89 55 dc	 mov	 DWORD PTR $T162902[ebp], edx
  00be1	8b 45 dc	 mov	 eax, DWORD PTR $T162902[ebp]
  00be4	89 45 e0	 mov	 DWORD PTR $T162901[ebp], eax
  00be7	83 7d e0 00	 cmp	 DWORD PTR $T162901[ebp], 0
  00beb	74 11		 je	 SHORT $L162903
  00bed	6a 01		 push	 1
  00bef	8b 4d e0	 mov	 ecx, DWORD PTR $T162901[ebp]
  00bf2	8b 11		 mov	 edx, DWORD PTR [ecx]
  00bf4	8b 4d e0	 mov	 ecx, DWORD PTR $T162901[ebp]
  00bf7	ff 12		 call	 DWORD PTR [edx]
  00bf9	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  00bfc	eb 07		 jmp	 SHORT $L162904
$L162903:
  00bfe	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR -52+[ebp], 0
$L162904:

; 350  : 	}

  00c05	eb 9e		 jmp	 SHORT $L154785
$L154786:

; 351  :     m_MsgList.clear();

  00c07	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c0a	83 c1 04	 add	 ecx, 4
  00c0d	e8 00 00 00 00	 call	 ?clear@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXXZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::clear

; 352  : 
; 353  :     // This also closes the authoring message dialog
; 354  : 	if ( m_pAuthoringMsg )

  00c12	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  00c15	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00c19	74 37		 je	 SHORT $L154789

; 356  : 		delete m_pAuthoringMsg;

  00c1b	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00c1e	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00c21	89 55 d4	 mov	 DWORD PTR $T162906[ebp], edx
  00c24	8b 45 d4	 mov	 eax, DWORD PTR $T162906[ebp]
  00c27	89 45 d8	 mov	 DWORD PTR $T162905[ebp], eax
  00c2a	83 7d d8 00	 cmp	 DWORD PTR $T162905[ebp], 0
  00c2e	74 11		 je	 SHORT $L162907
  00c30	6a 01		 push	 1
  00c32	8b 4d d8	 mov	 ecx, DWORD PTR $T162905[ebp]
  00c35	8b 11		 mov	 edx, DWORD PTR [ecx]
  00c37	8b 4d d8	 mov	 ecx, DWORD PTR $T162905[ebp]
  00c3a	ff 12		 call	 DWORD PTR [edx]
  00c3c	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  00c3f	eb 07		 jmp	 SHORT $L162908
$L162907:
  00c41	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR -56+[ebp], 0
$L162908:

; 357  : 		m_pAuthoringMsg = NULL;

  00c48	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  00c4b	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
$L154789:

; 359  : 
; 360  :     // Close the extra windows
; 361  :     if ( g_pMailMgrWnd )

  00c52	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  00c59	74 20		 je	 SHORT $L154792

; 363  :         g_pMailMgrWnd->CloseSelf( false );

  00c5b	6a 00		 push	 0
  00c5d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  00c63	8b 11		 mov	 edx, DWORD PTR [ecx]
  00c65	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  00c6b	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 364  :         g_pMailMgrWnd = NULL;

  00c71	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
$L154792:

; 366  : 
; 367  :     if ( g_pReadWnd )

  00c7b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pReadWnd@@3PAVCMailMsgReadWnd@@A, 0 ; g_pReadWnd
  00c82	74 1f		 je	 SHORT $L154793

; 369  :         g_pReadWnd->CloseSelf( false );

  00c84	6a 00		 push	 0
  00c86	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pReadWnd@@3PAVCMailMsgReadWnd@@A ; g_pReadWnd
  00c8b	8b 10		 mov	 edx, DWORD PTR [eax]
  00c8d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pReadWnd@@3PAVCMailMsgReadWnd@@A ; g_pReadWnd
  00c93	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 370  :         g_pReadWnd = NULL;

  00c99	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pReadWnd@@3PAVCMailMsgReadWnd@@A, 0 ; g_pReadWnd
$L154793:

; 372  : }

  00ca3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ca7	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00caa	83 c1 10	 add	 ecx, 16			; 00000010H
  00cad	e8 00 00 00 00	 call	 ??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::~list<CMailMsg *,std::allocator<CMailMsg *> >
  00cb2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00cb9	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00cbc	83 c1 04	 add	 ecx, 4
  00cbf	e8 00 00 00 00	 call	 ??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::~list<CMailMsg *,std::allocator<CMailMsg *> >
  00cc4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00cc7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00cce	8b e5		 mov	 esp, ebp
  00cd0	5d		 pop	 ebp
  00cd1	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L162909:
  00190	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00193	83 c1 04	 add	 ecx, 4
  00196	e8 00 00 00 00	 call	 ??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::~list<CMailMsg *,std::allocator<CMailMsg *> >
  0019b	c3		 ret	 0
$L162910:
  0019c	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019f	83 c1 10	 add	 ecx, 16			; 00000010H
  001a2	e8 00 00 00 00	 call	 ??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::~list<CMailMsg *,std::allocator<CMailMsg *> >
  001a7	c3		 ret	 0
$L162913:
  001a8	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162912
  001ad	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CMailBox@@UAE@XZ ENDP				; CMailBox::~CMailBox
PUBLIC	?size@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEIXZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::size
PUBLIC	?Create@CMailBox@@QAEXXZ			; CMailBox::Create
PUBLIC	?AuthorMsg@CMailBox@@QAEXXZ			; CMailBox::AuthorMsg
PUBLIC	??0CMailMgrWnd@@QAE@XZ				; CMailMgrWnd::CMailMgrWnd
PUBLIC	?AddMsg@CMailMgrWnd@@QAEHAAVCMailMsg@@@Z	; CMailMgrWnd::AddMsg
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
xdata$x	SEGMENT
$T162925 DD	019930520H
	DD	01H
	DD	FLAT:$T162927
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162927 DD	0ffffffffH
	DD	FLAT:$L162923
xdata$x	ENDS
_TEXT	SEGMENT
$T162916 = -24
$T162917 = -28
$T162920 = -32
$T162921 = -36
$T162922 = -40
__$EHRec$ = -12
_this$ = -44
_listI$154805 = -16
_pMail$154812 = -20
?Create@CMailBox@@QAEXXZ PROC NEAR			; CMailBox::Create

; 376  : {

  00cd2	55		 push	 ebp
  00cd3	8b ec		 mov	 ebp, esp
  00cd5	6a ff		 push	 -1
  00cd7	68 00 00 00 00	 push	 $L162926
  00cdc	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00ce2	50		 push	 eax
  00ce3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00cea	83 ec 24	 sub	 esp, 36			; 00000024H
  00ced	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 377  : 	if ( !g_pMailMgrWnd ) {					//	Create window

  00cf0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  00cf7	0f 85 cd 00 00
	00		 jne	 $L154811

; 378  : 		new CMailMgrWnd();

  00cfd	68 a4 00 00 00	 push	 164			; 000000a4H
  00d02	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00d07	89 45 e4	 mov	 DWORD PTR $T162917[ebp], eax
  00d0a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00d11	83 7d e4 00	 cmp	 DWORD PTR $T162917[ebp], 0
  00d15	74 0d		 je	 SHORT $L162918
  00d17	8b 4d e4	 mov	 ecx, DWORD PTR $T162917[ebp]
  00d1a	e8 00 00 00 00	 call	 ??0CMailMgrWnd@@QAE@XZ	; CMailMgrWnd::CMailMgrWnd
  00d1f	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  00d22	eb 07		 jmp	 SHORT $L162919
$L162918:
  00d24	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR -48+[ebp], 0
$L162919:
  00d2b	8b 45 d0	 mov	 eax, DWORD PTR -48+[ebp]
  00d2e	89 45 e8	 mov	 DWORD PTR $T162916[ebp], eax
  00d31	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 379  : 		g_pMailMgrWnd->Create( this );

  00d38	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d3b	51		 push	 ecx
  00d3c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  00d42	8b 02		 mov	 eax, DWORD PTR [edx]
  00d44	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  00d4a	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 380  : 
; 381  : 		if ( m_MsgList.size() ) {

  00d50	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d53	83 c1 04	 add	 ecx, 4
  00d56	e8 00 00 00 00	 call	 ?size@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEIXZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::size
  00d5b	85 c0		 test	 eax, eax
  00d5d	74 6b		 je	 SHORT $L154811

; 382  : 			std::list<CMailMsg*>::iterator listI;	

  00d5f	8d 4d f0	 lea	 ecx, DWORD PTR _listI$154805[ebp]
  00d62	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator

; 383  : 
; 384  : 			for (listI = m_MsgList.begin();listI != m_MsgList.end();listI++) {

  00d67	8d 4d e0	 lea	 ecx, DWORD PTR $T162920[ebp]
  00d6a	51		 push	 ecx
  00d6b	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d6e	83 c1 04	 add	 ecx, 4
  00d71	e8 00 00 00 00	 call	 ?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::begin
  00d76	8b 10		 mov	 edx, DWORD PTR [eax]
  00d78	89 55 f0	 mov	 DWORD PTR _listI$154805[ebp], edx
  00d7b	eb 0e		 jmp	 SHORT $L154809
$L154810:
  00d7d	6a 00		 push	 0
  00d7f	8d 45 dc	 lea	 eax, DWORD PTR $T162921[ebp]
  00d82	50		 push	 eax
  00d83	8d 4d f0	 lea	 ecx, DWORD PTR _listI$154805[ebp]
  00d86	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
$L154809:
  00d8b	8d 4d d8	 lea	 ecx, DWORD PTR $T162922[ebp]
  00d8e	51		 push	 ecx
  00d8f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d92	83 c1 04	 add	 ecx, 4
  00d95	e8 00 00 00 00	 call	 ?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end
  00d9a	50		 push	 eax
  00d9b	8d 4d f0	 lea	 ecx, DWORD PTR _listI$154805[ebp]
  00d9e	e8 00 00 00 00	 call	 ??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator!=
  00da3	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00da8	85 c0		 test	 eax, eax
  00daa	74 1e		 je	 SHORT $L154811

; 385  : 				CMailMsg* pMail = *listI;

  00dac	8d 4d f0	 lea	 ecx, DWORD PTR _listI$154805[ebp]
  00daf	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEAAPAVCMailMsg@@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator*
  00db4	8b 10		 mov	 edx, DWORD PTR [eax]
  00db6	89 55 ec	 mov	 DWORD PTR _pMail$154812[ebp], edx

; 386  : 
; 387  : 				g_pMailMgrWnd->AddMsg( *pMail );

  00db9	8b 45 ec	 mov	 eax, DWORD PTR _pMail$154812[ebp]
  00dbc	50		 push	 eax
  00dbd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  00dc3	e8 00 00 00 00	 call	 ?AddMsg@CMailMgrWnd@@QAEHAAVCMailMsg@@@Z ; CMailMgrWnd::AddMsg

; 388  : 			}

  00dc8	eb b3		 jmp	 SHORT $L154810
$L154811:

; 391  : 
; 392  :     // Open the authoring window with the mailbox
; 393  :     if (m_bAuthorOpen)

  00dca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00dcd	83 79 24 00	 cmp	 DWORD PTR [ecx+36], 0
  00dd1	74 12		 je	 SHORT $L154813

; 395  :         AuthorMsg();

  00dd3	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00dd6	e8 00 00 00 00	 call	 ?AuthorMsg@CMailBox@@QAEXXZ ; CMailBox::AuthorMsg

; 396  :         m_bAuthorOpen = false;

  00ddb	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00dde	c7 42 24 00 00
	00 00		 mov	 DWORD PTR [edx+36], 0
$L154813:

; 398  : }

  00de5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00de8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00def	8b e5		 mov	 esp, ebp
  00df1	5d		 pop	 ebp
  00df2	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L162923:
  001b2	8b 45 e4	 mov	 eax, DWORD PTR $T162917[ebp]
  001b5	50		 push	 eax
  001b6	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  001bb	c3		 ret	 0
$L162926:
  001bc	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162925
  001c1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CMailBox@@QAEXXZ ENDP				; CMailBox::Create
PUBLIC	?push_back@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::push_back
PUBLIC	?get_TabDisplay@CToonSettings@@QAEHXZ		; CToonSettings::get_TabDisplay
PUBLIC	?Update@CMailBox@@QAEHVObjectID@@@Z		; CMailBox::Update
PUBLIC	?ShowManagerWnd@CMailBox@@QAEXXZ		; CMailBox::ShowManagerWnd
PUBLIC	?getRights@CToonSettings@@QAEHH@Z		; CToonSettings::getRights
PUBLIC	?ClearDialog@CMailMgrWnd@@QAEXXZ		; CMailMgrWnd::ClearDialog
PUBLIC	?EnableRefresh@CMailMgrWnd@@QAEXXZ		; CMailMgrWnd::EnableRefresh
PUBLIC	??0CSCI_RoomZero@@QAE@G@Z			; CSCI_RoomZero::CSCI_RoomZero
EXTRN	?getWord@PackedData@@QAEFXZ:NEAR		; PackedData::getWord
EXTRN	?SkinMessage@@YA_NPAD0H@Z:NEAR			; SkinMessage
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	?g_pToonSettings@@3PAVCToonSettings@@A:DWORD	; g_pToonSettings
EXTRN	?pm@@3VPMachine@@A:BYTE				; pm
EXTRN	?handsOn@CSCI_Game@@QAEXXZ:NEAR			; CSCI_Game::handsOn
_DATA	SEGMENT
	ORG $+2
$SG154850 DB	'You have over 500 Magic Mails, please save/delete them f'
	DB	'rom the system.', 00H
$SG154851 DB	'Magic Mail', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T162949 DD	019930520H
	DD	02H
	DD	FLAT:$T162951
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162951 DD	0ffffffffH
	DD	FLAT:$L162946
	DD	00H
	DD	FLAT:$L162947
xdata$x	ENDS
_TEXT	SEGMENT
$T162929 = -48
$T162930 = -52
$T162931 = -56
$T162932 = -60
$T162933 = -64
$T162934 = -68
$T162937 = -72
$T162938 = -76
$T162941 = -80
$T162942 = -84
$T162945 = -88
__$EHRec$ = -12
_hMsg$ = 8
_this$ = -92
_packed$ = -32
_listI$154822 = -36
_nTotalMsgs$ = -20
_nFinished$ = -16
_i$ = -24
_pMail$154838 = -40
_hGame$154854 = -44
?Update@CMailBox@@QAEHVObjectID@@@Z PROC NEAR		; CMailBox::Update

; 401  : int CMailBox::Update ( ObjectID hMsg ) {

  00df3	55		 push	 ebp
  00df4	8b ec		 mov	 ebp, esp
  00df6	6a ff		 push	 -1
  00df8	68 00 00 00 00	 push	 $L162950
  00dfd	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00e03	50		 push	 eax
  00e04	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00e0b	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00e0e	89 4d a4	 mov	 DWORD PTR _this$[ebp], ecx

; 402  :     // Add new entries
; 403  : 	PackedData packed( hMsg );

  00e11	51		 push	 ecx
  00e12	8b cc		 mov	 ecx, esp
  00e14	89 65 d0	 mov	 DWORD PTR $T162929[ebp], esp
  00e17	8d 45 08	 lea	 eax, DWORD PTR _hMsg$[ebp]
  00e1a	50		 push	 eax
  00e1b	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  00e20	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  00e23	e8 00 00 00 00	 call	 ??0PackedData@@QAE@VObjectID@@@Z ; PackedData::PackedData
  00e28	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 404  : 
; 405  : 	if ( packed.getWord() == 0 ) {

  00e2f	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  00e32	e8 00 00 00 00	 call	 ?getWord@PackedData@@QAEFXZ ; PackedData::getWord
  00e37	0f bf c8	 movsx	 ecx, ax
  00e3a	85 c9		 test	 ecx, ecx
  00e3c	0f 85 9f 00 00
	00		 jne	 $L154831

; 406  : 		// Clear values first
; 407  : 		std::list<CMailMsg*>::iterator listI;	

  00e42	8d 4d dc	 lea	 ecx, DWORD PTR _listI$154822[ebp]
  00e45	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator

; 408  : 		for (listI = m_MsgList.begin();listI != m_MsgList.end();listI++) {

  00e4a	8d 55 cc	 lea	 edx, DWORD PTR $T162930[ebp]
  00e4d	52		 push	 edx
  00e4e	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00e51	83 c1 04	 add	 ecx, 4
  00e54	e8 00 00 00 00	 call	 ?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::begin
  00e59	8b 00		 mov	 eax, DWORD PTR [eax]
  00e5b	89 45 dc	 mov	 DWORD PTR _listI$154822[ebp], eax
  00e5e	eb 0e		 jmp	 SHORT $L154826
$L154827:
  00e60	6a 00		 push	 0
  00e62	8d 4d c8	 lea	 ecx, DWORD PTR $T162931[ebp]
  00e65	51		 push	 ecx
  00e66	8d 4d dc	 lea	 ecx, DWORD PTR _listI$154822[ebp]
  00e69	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
$L154826:
  00e6e	8d 55 c4	 lea	 edx, DWORD PTR $T162932[ebp]
  00e71	52		 push	 edx
  00e72	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00e75	83 c1 04	 add	 ecx, 4
  00e78	e8 00 00 00 00	 call	 ?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end
  00e7d	50		 push	 eax
  00e7e	8d 4d dc	 lea	 ecx, DWORD PTR _listI$154822[ebp]
  00e81	e8 00 00 00 00	 call	 ??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator!=
  00e86	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00e8b	85 c0		 test	 eax, eax
  00e8d	74 33		 je	 SHORT $L154828

; 409  : 			delete *listI;

  00e8f	8d 4d dc	 lea	 ecx, DWORD PTR _listI$154822[ebp]
  00e92	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEAAPAVCMailMsg@@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator*
  00e97	8b 00		 mov	 eax, DWORD PTR [eax]
  00e99	89 45 bc	 mov	 DWORD PTR $T162934[ebp], eax
  00e9c	8b 4d bc	 mov	 ecx, DWORD PTR $T162934[ebp]
  00e9f	89 4d c0	 mov	 DWORD PTR $T162933[ebp], ecx
  00ea2	83 7d c0 00	 cmp	 DWORD PTR $T162933[ebp], 0
  00ea6	74 11		 je	 SHORT $L162935
  00ea8	6a 01		 push	 1
  00eaa	8b 55 c0	 mov	 edx, DWORD PTR $T162933[ebp]
  00ead	8b 02		 mov	 eax, DWORD PTR [edx]
  00eaf	8b 4d c0	 mov	 ecx, DWORD PTR $T162933[ebp]
  00eb2	ff 10		 call	 DWORD PTR [eax]
  00eb4	89 45 a0	 mov	 DWORD PTR -96+[ebp], eax
  00eb7	eb 07		 jmp	 SHORT $L162936
$L162935:
  00eb9	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR -96+[ebp], 0
$L162936:

; 410  : 		}

  00ec0	eb 9e		 jmp	 SHORT $L154827
$L154828:

; 411  : 
; 412  : 		m_MsgList.clear();

  00ec2	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00ec5	83 c1 04	 add	 ecx, 4
  00ec8	e8 00 00 00 00	 call	 ?clear@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXXZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::clear

; 413  : 
; 414  : 	    if (g_pMailMgrWnd)

  00ecd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  00ed4	74 0b		 je	 SHORT $L154831

; 415  : 			g_pMailMgrWnd->ClearDialog();

  00ed6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  00edc	e8 00 00 00 00	 call	 ?ClearDialog@CMailMgrWnd@@QAEXXZ ; CMailMgrWnd::ClearDialog
$L154831:

; 417  : 
; 418  : 	int nTotalMsgs = packed.getWord();

  00ee1	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  00ee4	e8 00 00 00 00	 call	 ?getWord@PackedData@@QAEFXZ ; PackedData::getWord
  00ee9	0f bf c8	 movsx	 ecx, ax
  00eec	89 4d ec	 mov	 DWORD PTR _nTotalMsgs$[ebp], ecx

; 419  : 	int nFinished = packed.getByte();

  00eef	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  00ef2	e8 00 00 00 00	 call	 ?getByte@PackedData@@QAEEXZ ; PackedData::getByte
  00ef7	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00efc	89 45 f0	 mov	 DWORD PTR _nFinished$[ebp], eax

; 420  : 
; 421  : 	for (int i = 0;i < nTotalMsgs;i++ ) {

  00eff	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00f06	eb 09		 jmp	 SHORT $L154835
$L154836:
  00f08	8b 55 e8	 mov	 edx, DWORD PTR _i$[ebp]
  00f0b	83 c2 01	 add	 edx, 1
  00f0e	89 55 e8	 mov	 DWORD PTR _i$[ebp], edx
$L154835:
  00f11	8b 45 e8	 mov	 eax, DWORD PTR _i$[ebp]
  00f14	3b 45 ec	 cmp	 eax, DWORD PTR _nTotalMsgs$[ebp]
  00f17	0f 8d a3 00 00
	00		 jge	 $L154837

; 422  : 		CMailMsg* pMail = new CMailMsg();

  00f1d	6a 64		 push	 100			; 00000064H
  00f1f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00f24	83 c4 04	 add	 esp, 4
  00f27	89 45 b4	 mov	 DWORD PTR $T162938[ebp], eax
  00f2a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00f2e	83 7d b4 00	 cmp	 DWORD PTR $T162938[ebp], 0
  00f32	74 0d		 je	 SHORT $L162939
  00f34	8b 4d b4	 mov	 ecx, DWORD PTR $T162938[ebp]
  00f37	e8 00 00 00 00	 call	 ??0CMailMsg@@QAE@XZ	; CMailMsg::CMailMsg
  00f3c	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  00f3f	eb 07		 jmp	 SHORT $L162940
$L162939:
  00f41	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR -100+[ebp], 0
$L162940:
  00f48	8b 4d 9c	 mov	 ecx, DWORD PTR -100+[ebp]
  00f4b	89 4d b8	 mov	 DWORD PTR $T162937[ebp], ecx
  00f4e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00f52	8b 55 b8	 mov	 edx, DWORD PTR $T162937[ebp]
  00f55	89 55 d8	 mov	 DWORD PTR _pMail$154838[ebp], edx

; 423  : 		if (pMail->CreateInboxHdr( &packed )) {

  00f58	8d 45 e0	 lea	 eax, DWORD PTR _packed$[ebp]
  00f5b	50		 push	 eax
  00f5c	8b 4d d8	 mov	 ecx, DWORD PTR _pMail$154838[ebp]
  00f5f	e8 00 00 00 00	 call	 ?CreateInboxHdr@CMailMsg@@QAEHPAVPackedData@@@Z ; CMailMsg::CreateInboxHdr
  00f64	85 c0		 test	 eax, eax
  00f66	74 29		 je	 SHORT $L154843

; 424  : 		    m_MsgList.push_back( pMail );

  00f68	8d 4d d8	 lea	 ecx, DWORD PTR _pMail$154838[ebp]
  00f6b	51		 push	 ecx
  00f6c	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00f6f	83 c1 04	 add	 ecx, 4
  00f72	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::push_back

; 425  : 		    if (g_pMailMgrWnd)

  00f77	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  00f7e	74 0f		 je	 SHORT $L154844

; 426  : 				g_pMailMgrWnd->AddMsg( *pMail );

  00f80	8b 55 d8	 mov	 edx, DWORD PTR _pMail$154838[ebp]
  00f83	52		 push	 edx
  00f84	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  00f8a	e8 00 00 00 00	 call	 ?AddMsg@CMailMgrWnd@@QAEHAAVCMailMsg@@@Z ; CMailMgrWnd::AddMsg
$L154844:

; 427  :         } else {   

  00f8f	eb 2a		 jmp	 SHORT $L162944
$L154843:

; 428  :             delete pMail;

  00f91	8b 45 d8	 mov	 eax, DWORD PTR _pMail$154838[ebp]
  00f94	89 45 ac	 mov	 DWORD PTR $T162942[ebp], eax
  00f97	8b 4d ac	 mov	 ecx, DWORD PTR $T162942[ebp]
  00f9a	89 4d b0	 mov	 DWORD PTR $T162941[ebp], ecx
  00f9d	83 7d b0 00	 cmp	 DWORD PTR $T162941[ebp], 0
  00fa1	74 11		 je	 SHORT $L162943
  00fa3	6a 01		 push	 1
  00fa5	8b 55 b0	 mov	 edx, DWORD PTR $T162941[ebp]
  00fa8	8b 02		 mov	 eax, DWORD PTR [edx]
  00faa	8b 4d b0	 mov	 ecx, DWORD PTR $T162941[ebp]
  00fad	ff 10		 call	 DWORD PTR [eax]
  00faf	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  00fb2	eb 07		 jmp	 SHORT $L162944
$L162943:
  00fb4	c7 45 98 00 00
	00 00		 mov	 DWORD PTR -104+[ebp], 0
$L162944:

; 430  : 	}

  00fbb	e9 48 ff ff ff	 jmp	 $L154836
$L154837:

; 431  : 
; 432  : 	if ( nFinished ) {

  00fc0	83 7d f0 00	 cmp	 DWORD PTR _nFinished$[ebp], 0
  00fc4	74 7a		 je	 SHORT $L154848

; 433  : 		if ( !g_pToonSettings->getRights( CToonSettings::trImplementor | CToonSettings::trModerator | CToonSettings::trGuide | CToonSettings::trProphet | CToonSettings::trCS ) && m_MsgList.size() > 500 ) {

  00fc6	6a 1f		 push	 31			; 0000001fH
  00fc8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  00fce	e8 00 00 00 00	 call	 ?getRights@CToonSettings@@QAEHH@Z ; CToonSettings::getRights
  00fd3	85 c0		 test	 eax, eax
  00fd5	75 26		 jne	 SHORT $L154849
  00fd7	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00fda	83 c1 04	 add	 ecx, 4
  00fdd	e8 00 00 00 00	 call	 ?size@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEIXZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::size
  00fe2	3d f4 01 00 00	 cmp	 eax, 500		; 000001f4H
  00fe7	76 14		 jbe	 SHORT $L154849

; 434  : 			SkinMessage( "Magic Mail", "You have over 500 Magic Mails, please save/delete them from the system." );

  00fe9	6a 00		 push	 0
  00feb	68 00 00 00 00	 push	 OFFSET FLAT:$SG154850
  00ff0	68 00 00 00 00	 push	 OFFSET FLAT:$SG154851
  00ff5	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  00ffa	83 c4 0c	 add	 esp, 12			; 0000000cH
$L154849:

; 436  : 
; 437  : 		//Re-enable the refresh button
; 438  : 		if (g_pMailMgrWnd)

  00ffd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  01004	74 0b		 je	 SHORT $L154852

; 439  : 			g_pMailMgrWnd->EnableRefresh();

  01006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  0100c	e8 00 00 00 00	 call	 ?EnableRefresh@CMailMgrWnd@@QAEXXZ ; CMailMgrWnd::EnableRefresh
$L154852:

; 440  : 
; 441  : 		if ( !g_pToonSettings->get_TabDisplay() ) {

  01011	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  01017	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  0101c	85 c0		 test	 eax, eax
  0101e	75 08		 jne	 SHORT $L154853

; 442  : 			ShowManagerWnd();

  01020	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01023	e8 00 00 00 00	 call	 ?ShowManagerWnd@CMailBox@@QAEXXZ ; CMailBox::ShowManagerWnd
$L154853:

; 444  : 
; 445  : 		// go hands-on...
; 446  : 		CSCI_RoomZero hGame = pm.game;

  01028	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?pm@@3VPMachine@@A
  0102f	51		 push	 ecx
  01030	8d 4d d4	 lea	 ecx, DWORD PTR _hGame$154854[ebp]
  01033	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 447  : 		hGame.handsOn();

  01038	8d 4d d4	 lea	 ecx, DWORD PTR _hGame$154854[ebp]
  0103b	e8 00 00 00 00	 call	 ?handsOn@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOn
$L154848:

; 449  : 
; 450  : 	return nFinished;

  01040	8b 55 f0	 mov	 edx, DWORD PTR _nFinished$[ebp]
  01043	89 55 a8	 mov	 DWORD PTR $T162945[ebp], edx
  01046	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0104d	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  01050	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  01055	8b 45 a8	 mov	 eax, DWORD PTR $T162945[ebp]

; 451  : }

  01058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0105b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01062	8b e5		 mov	 esp, ebp
  01064	5d		 pop	 ebp
  01065	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L162946:
  001c6	8d 4d e0	 lea	 ecx, DWORD PTR _packed$[ebp]
  001c9	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  001ce	c3		 ret	 0
$L162947:
  001cf	8b 45 b4	 mov	 eax, DWORD PTR $T162938[ebp]
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001d8	59		 pop	 ecx
  001d9	c3		 ret	 0
$L162950:
  001da	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162949
  001df	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Update@CMailBox@@QAEHVObjectID@@@Z ENDP		; CMailBox::Update
PUBLIC	?Clear@CMailBox@@QAEXXZ				; CMailBox::Clear
_TEXT	SEGMENT
$T162953 = -8
$T162954 = -12
$T162955 = -16
$T162956 = -20
$T162957 = -24
_this$ = -28
_listI$ = -4
?Clear@CMailBox@@QAEXXZ PROC NEAR			; CMailBox::Clear

; 453  : void CMailBox::Clear () {

  01068	55		 push	 ebp
  01069	8b ec		 mov	 ebp, esp
  0106b	83 ec 20	 sub	 esp, 32			; 00000020H
  0106e	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 454  : 	// Clear values first
; 455  : 	std::list<CMailMsg*>::iterator listI;	

  01071	8d 4d fc	 lea	 ecx, DWORD PTR _listI$[ebp]
  01074	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator

; 456  : 	for (listI = m_MsgList.begin();listI != m_MsgList.end();listI++) {

  01079	8d 45 f8	 lea	 eax, DWORD PTR $T162953[ebp]
  0107c	50		 push	 eax
  0107d	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  01080	83 c1 04	 add	 ecx, 4
  01083	e8 00 00 00 00	 call	 ?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::begin
  01088	8b 08		 mov	 ecx, DWORD PTR [eax]
  0108a	89 4d fc	 mov	 DWORD PTR _listI$[ebp], ecx
  0108d	eb 0e		 jmp	 SHORT $L154864
$L154865:
  0108f	6a 00		 push	 0
  01091	8d 55 f4	 lea	 edx, DWORD PTR $T162954[ebp]
  01094	52		 push	 edx
  01095	8d 4d fc	 lea	 ecx, DWORD PTR _listI$[ebp]
  01098	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
$L154864:
  0109d	8d 45 f0	 lea	 eax, DWORD PTR $T162955[ebp]
  010a0	50		 push	 eax
  010a1	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  010a4	83 c1 04	 add	 ecx, 4
  010a7	e8 00 00 00 00	 call	 ?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end
  010ac	50		 push	 eax
  010ad	8d 4d fc	 lea	 ecx, DWORD PTR _listI$[ebp]
  010b0	e8 00 00 00 00	 call	 ??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator!=
  010b5	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  010ba	85 c0		 test	 eax, eax
  010bc	74 33		 je	 SHORT $L154866

; 457  : 		delete *listI;

  010be	8d 4d fc	 lea	 ecx, DWORD PTR _listI$[ebp]
  010c1	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEAAPAVCMailMsg@@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator*
  010c6	8b 08		 mov	 ecx, DWORD PTR [eax]
  010c8	89 4d e8	 mov	 DWORD PTR $T162957[ebp], ecx
  010cb	8b 55 e8	 mov	 edx, DWORD PTR $T162957[ebp]
  010ce	89 55 ec	 mov	 DWORD PTR $T162956[ebp], edx
  010d1	83 7d ec 00	 cmp	 DWORD PTR $T162956[ebp], 0
  010d5	74 11		 je	 SHORT $L162958
  010d7	6a 01		 push	 1
  010d9	8b 45 ec	 mov	 eax, DWORD PTR $T162956[ebp]
  010dc	8b 10		 mov	 edx, DWORD PTR [eax]
  010de	8b 4d ec	 mov	 ecx, DWORD PTR $T162956[ebp]
  010e1	ff 12		 call	 DWORD PTR [edx]
  010e3	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  010e6	eb 07		 jmp	 SHORT $L162959
$L162958:
  010e8	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR -32+[ebp], 0
$L162959:

; 458  : 	}

  010ef	eb 9e		 jmp	 SHORT $L154865
$L154866:

; 459  : 
; 460  : 	m_MsgList.clear();

  010f1	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  010f4	83 c1 04	 add	 ecx, 4
  010f7	e8 00 00 00 00	 call	 ?clear@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXXZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::clear

; 461  : 
; 462  : 	if (g_pMailMgrWnd)

  010fc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  01103	74 0b		 je	 SHORT $L154869

; 463  : 		g_pMailMgrWnd->ClearDialog();

  01105	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  0110b	e8 00 00 00 00	 call	 ?ClearDialog@CMailMgrWnd@@QAEXXZ ; CMailMgrWnd::ClearDialog
$L154869:

; 464  : }

  01110	8b e5		 mov	 esp, ebp
  01112	5d		 pop	 ebp
  01113	c3		 ret	 0
?Clear@CMailBox@@QAEXXZ ENDP				; CMailBox::Clear
_TEXT	ENDS
PUBLIC	?CanRequestMsg@CMailBox@@QAEHXZ			; CMailBox::CanRequestMsg
_TEXT	SEGMENT
_this$ = -4
?CanRequestMsg@CMailBox@@QAEHXZ PROC NEAR		; CMailBox::CanRequestMsg

; 468  : {

  01114	55		 push	 ebp
  01115	8b ec		 mov	 ebp, esp
  01117	51		 push	 ecx
  01118	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 469  : 	return m_nRequestUniqueID == -1;

  0111b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0111e	33 c9		 xor	 ecx, ecx
  01120	83 78 20 ff	 cmp	 DWORD PTR [eax+32], -1
  01124	0f 94 c1	 sete	 cl
  01127	8b c1		 mov	 eax, ecx

; 470  : }

  01129	8b e5		 mov	 esp, ebp
  0112b	5d		 pop	 ebp
  0112c	c3		 ret	 0
?CanRequestMsg@CMailBox@@QAEHXZ ENDP			; CMailBox::CanRequestMsg
_TEXT	ENDS
PUBLIC	?ReadMsg@CMailBox@@QAEHH@Z			; CMailBox::ReadMsg
PUBLIC	?RequestMsg@CMailBox@@QAEXH@Z			; CMailBox::RequestMsg
EXTRN	?CNetSend@@YAHPADZZ:NEAR			; CNetSend
EXTRN	?handsOff@CSCI_Game@@QAEXXZ:NEAR		; CSCI_Game::handsOff
_DATA	SEGMENT
	ORG $+1
$SG154882 DB	'tl', 00H
_DATA	ENDS
_TEXT	SEGMENT
_nUniqueID$ = 8
_this$ = -12
_pMail$ = -4
_hGame$154881 = -8
?RequestMsg@CMailBox@@QAEXH@Z PROC NEAR			; CMailBox::RequestMsg

; 474  : {

  0112d	55		 push	 ebp
  0112e	8b ec		 mov	 ebp, esp
  01130	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01133	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 475  : 	CMailMsg* pMail = CMailMsg::FindByUniqueID( nUniqueID );

  01136	8b 45 08	 mov	 eax, DWORD PTR _nUniqueID$[ebp]
  01139	50		 push	 eax
  0113a	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  0113f	83 c4 04	 add	 esp, 4
  01142	89 45 fc	 mov	 DWORD PTR _pMail$[ebp], eax

; 476  : 
; 477  : 	if ( pMail ) {

  01145	83 7d fc 00	 cmp	 DWORD PTR _pMail$[ebp], 0
  01149	74 51		 je	 SHORT $L154880

; 478  : 		if ( pMail->GetComplete() ) {

  0114b	8b 4d fc	 mov	 ecx, DWORD PTR _pMail$[ebp]
  0114e	e8 00 00 00 00	 call	 ?GetComplete@CMailMsg@@QAEHXZ ; CMailMsg::GetComplete
  01153	85 c0		 test	 eax, eax
  01155	74 0e		 je	 SHORT $L154879

; 479  : 			ReadMsg( nUniqueID );

  01157	8b 4d 08	 mov	 ecx, DWORD PTR _nUniqueID$[ebp]
  0115a	51		 push	 ecx
  0115b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0115e	e8 00 00 00 00	 call	 ?ReadMsg@CMailBox@@QAEHH@Z ; CMailBox::ReadMsg

; 480  : 		} else {

  01163	eb 37		 jmp	 SHORT $L154880
$L154879:

; 481  : 			m_nRequestUniqueID = nUniqueID;

  01165	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  01168	8b 45 08	 mov	 eax, DWORD PTR _nUniqueID$[ebp]
  0116b	89 42 20	 mov	 DWORD PTR [edx+32], eax

; 482  : 
; 483  : 			// go hands-off...
; 484  : 			CSCI_RoomZero hGame = pm.game;

  0116e	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?pm@@3VPMachine@@A
  01175	51		 push	 ecx
  01176	8d 4d f8	 lea	 ecx, DWORD PTR _hGame$154881[ebp]
  01179	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 485  : 			hGame.handsOff();

  0117e	8d 4d f8	 lea	 ecx, DWORD PTR _hGame$154881[ebp]
  01181	e8 00 00 00 00	 call	 ?handsOff@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOff

; 486  : 
; 487  : 			CNetSend( "tl", REALM_MAIL_MESSAGE_GET, nUniqueID );

  01186	8b 55 08	 mov	 edx, DWORD PTR _nUniqueID$[ebp]
  01189	52		 push	 edx
  0118a	68 88 00 00 00	 push	 136			; 00000088H
  0118f	68 00 00 00 00	 push	 OFFSET FLAT:$SG154882
  01194	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  01199	83 c4 0c	 add	 esp, 12			; 0000000cH
$L154880:

; 490  : }

  0119c	8b e5		 mov	 esp, ebp
  0119e	5d		 pop	 ebp
  0119f	c2 04 00	 ret	 4
?RequestMsg@CMailBox@@QAEXH@Z ENDP			; CMailBox::RequestMsg
_TEXT	ENDS
PUBLIC	?get_lowWord@CSCI_LongInt@@QAEFXZ		; CSCI_LongInt::get_lowWord
PUBLIC	?get_nValue@CSCI_LongInt@@QAEHXZ		; CSCI_LongInt::get_nValue
PUBLIC	?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z	; CMainPanelWnd::SetTabWindow
PUBLIC	??0CSCI_LongInt@@QAE@ABV0@@Z			; CSCI_LongInt::CSCI_LongInt
PUBLIC	?remove@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::remove
PUBLIC	?AfxTrace@@YAXPBDZZ				; AfxTrace
PUBLIC	?HandleMsg@CMailBox@@QAEXVCSCI_NetMsg@@@Z	; CMailBox::HandleMsg
PUBLIC	?DeleteMsg@CMailMgrWnd@@QAEHAAVCMailMsg@@@Z	; CMailMgrWnd::DeleteMsg
PUBLIC	?EnableArchive@CMailMgrWnd@@QAEXXZ		; CMailMgrWnd::EnableArchive
PUBLIC	?get_pCommand@CSCI_NetMsg@@QAEFXZ		; CSCI_NetMsg::get_pCommand
PUBLIC	?get_pAckCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ ; CSCI_NetMsg::get_pAckCmd
PUBLIC	?get_pNakCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ ; CSCI_NetMsg::get_pNakCmd
PUBLIC	??0StringID@@QAE@ABVMemID@@@Z			; StringID::StringID
PUBLIC	??DStringID@@QAEPADXZ				; StringID::operator*
EXTRN	?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A:DWORD	; g_pMainPanelWnd
EXTRN	__imp__fclose:NEAR
EXTRN	__imp__fopen:NEAR
EXTRN	__imp__fwrite:NEAR
EXTRN	?Format@CString@@QAAXPBDZZ:NEAR			; CString::Format
EXTRN	__imp__unlink:NEAR
EXTRN	__imp__CopyFileA@12:NEAR
EXTRN	_strlen:NEAR
EXTRN	?g_pCurrentServer@@3PAUServerInfo@@A:DWORD	; g_pCurrentServer
EXTRN	?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; g_sCharacterName
EXTRN	?g_sConfigDir@@3PADA:BYTE			; g_sConfigDir
_DATA	SEGMENT
	ORG $+1
$SG154909 DB	'Error:', 00H
	ORG $+1
$SG154917 DB	'Got NAK message %d.', 0aH, 00H
	ORG $+3
$SG154959 DB	'%s\Realm.%s.%s.MM.html', 00H
	ORG $+1
$SG154962 DB	'a+', 00H
	ORG $+1
$SG154965 DB	'Can not create mail file on your system.  Please check f'
	DB	'or enough free space on your drive.', 00H
$SG154966 DB	'ERROR', 00H
	ORG $+2
$SG154969 DB	'%s\Realm.%s.%s.MM.html.bak', 00H
	ORG $+1
$SG154972 DB	'Can not create mail file on your system.  Please check f'
	DB	'or enough free space on your drive.', 00H
$SG154973 DB	'ERROR', 00H
	ORG $+2
$SG154976 DB	'%s\Realm.%s.%s.MM.html.bak', 00H
	ORG $+1
$SG154980 DB	'tbww', 00H
	ORG $+3
$SG154985 DB	'%s\Realm.%s.%s.MM.html.bak', 00H
	ORG $+1
$SG154986 DB	'Your mail has been archived.  Refreshing your magic mail'
	DB	' list.', 00H
	ORG $+1
$SG154987 DB	'Magic Mail Archive', 00H
	ORG $+1
$SG154988 DB	'tbw', 00H
$SG154989 DB	't', 00H
	ORG $+2
$SG154993 DB	'Got ACK message %d.', 0aH, 00H
	ORG $+3
$SG154996 DB	'Got message type %d.', 0aH, 00H
_DATA	ENDS
xdata$x	SEGMENT
$T162993 DD	019930520H
	DD	06H
	DD	FLAT:$T162997
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T162997 DD	0ffffffffH
	DD	FLAT:$L162986
	DD	0ffffffffH
	DD	FLAT:$L162987
	DD	0ffffffffH
	DD	FLAT:$L162988
	DD	02H
	DD	FLAT:$L162989
	DD	03H
	DD	FLAT:$L162990
	DD	02H
	DD	FLAT:$L162991
xdata$x	ENDS
_TEXT	SEGMENT
$T162963 = -128
$T162964 = -132
$T162965 = -136
$T162968 = -140
$T162969 = -144
$T162970 = -148
$T162971 = -152
$T162974 = -156
$T162975 = -160
$T162976 = -164
$T162977 = -168
$T162978 = -172
$T162979 = -176
$T162980 = -180
$T162981 = -184
__$EHRec$ = -12
_hMsg$ = 8
_this$ = -188
_retVal$ = -16
_pNakCmd$154894 = -20
_hGame$154901 = -24
_hGame$154903 = -28
_data$154904 = -36
_pChar$154906 = -40
_pAckCmd$154920 = -44
_hGame$154929 = -48
_pMail$154930 = -52
_pMail$154936 = -56
_data$154940 = -64
_pMail$154942 = -68
_data$154946 = -84
_nStart$154948 = -92
_nEnd$154949 = -88
_nSize$154950 = -76
_pString$154954 = -100
_sFilename$154955 = -104
_sDst$154956 = -96
_fp$154960 = -108
_hGame$154964 = -112
_hGame$154971 = -116
_nPacketEnd$154978 = -72
_sDst$154982 = -120
_hGame$154998 = -124
?HandleMsg@CMailBox@@QAEXVCSCI_NetMsg@@@Z PROC NEAR	; CMailBox::HandleMsg

; 494  : {

  011a2	55		 push	 ebp
  011a3	8b ec		 mov	 ebp, esp
  011a5	6a ff		 push	 -1
  011a7	68 00 00 00 00	 push	 $L162994
  011ac	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  011b2	50		 push	 eax
  011b3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  011ba	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  011c0	89 8d 44 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 495  : 	Property retVal = 0;

  011c6	66 c7 45 f0 00
	00		 mov	 WORD PTR _retVal$[ebp], 0

; 496  : 
; 497  : 	switch ( hMsg.get_pCommand() ) {

  011cc	8d 4d 08	 lea	 ecx, DWORD PTR _hMsg$[ebp]
  011cf	e8 00 00 00 00	 call	 ?get_pCommand@CSCI_NetMsg@@QAEFXZ ; CSCI_NetMsg::get_pCommand
  011d4	0f bf c0	 movsx	 eax, ax
  011d7	89 85 40 ff ff
	ff		 mov	 DWORD PTR -192+[ebp], eax
  011dd	83 bd 40 ff ff
	ff 19		 cmp	 DWORD PTR -192+[ebp], 25 ; 00000019H
  011e4	0f 84 a8 01 00
	00		 je	 $L154918
  011ea	83 bd 40 ff ff
	ff 1a		 cmp	 DWORD PTR -192+[ebp], 26 ; 0000001aH
  011f1	74 05		 je	 SHORT $L154892
  011f3	e9 08 08 00 00	 jmp	 $L154994
$L154892:

; 499  : 			CSCI_LongInt pNakCmd( hMsg.get_pNakCmd() );

  011f8	8d 4d 80	 lea	 ecx, DWORD PTR $T162963[ebp]
  011fb	51		 push	 ecx
  011fc	8d 4d 08	 lea	 ecx, DWORD PTR _hMsg$[ebp]
  011ff	e8 00 00 00 00	 call	 ?get_pNakCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ ; CSCI_NetMsg::get_pNakCmd
  01204	50		 push	 eax
  01205	8d 4d ec	 lea	 ecx, DWORD PTR _pNakCmd$154894[ebp]
  01208	e8 00 00 00 00	 call	 ??0CSCI_LongInt@@QAE@ABV0@@Z ; CSCI_LongInt::CSCI_LongInt

; 500  : 
; 501  : 			switch ( pNakCmd.get_lowWord() ) {

  0120d	8d 4d ec	 lea	 ecx, DWORD PTR _pNakCmd$154894[ebp]
  01210	e8 00 00 00 00	 call	 ?get_lowWord@CSCI_LongInt@@QAEFXZ ; CSCI_LongInt::get_lowWord
  01215	0f bf d0	 movsx	 edx, ax
  01218	89 95 3c ff ff
	ff		 mov	 DWORD PTR -196+[ebp], edx
  0121e	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR -196+[ebp]
  01224	2d 87 00 00 00	 sub	 eax, 135		; 00000087H
  01229	89 85 3c ff ff
	ff		 mov	 DWORD PTR -196+[ebp], eax
  0122f	83 bd 3c ff ff
	ff 05		 cmp	 DWORD PTR -196+[ebp], 5
  01236	0f 87 20 01 00
	00		 ja	 $L154915
  0123c	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR -196+[ebp]
  01242	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $L162995[ecx*4]
$L154899:

; 503  : 			        if (g_pMailMgrWnd)

  01249	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  01250	74 0b		 je	 SHORT $L154900

; 504  : 						g_pMailMgrWnd->EnableRefresh();

  01252	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  01258	e8 00 00 00 00	 call	 ?EnableRefresh@CMailMgrWnd@@QAEXXZ ; CMailMgrWnd::EnableRefresh
$L154900:

; 505  : 					
; 506  : 					Clear();

  0125d	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01263	e8 00 00 00 00	 call	 ?Clear@CMailBox@@QAEXXZ	; CMailBox::Clear

; 507  : 
; 508  : 					// go hands-on...
; 509  : 					CSCI_RoomZero hGame = pm.game;

  01268	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?pm@@3VPMachine@@A
  0126f	52		 push	 edx
  01270	8d 4d e8	 lea	 ecx, DWORD PTR _hGame$154901[ebp]
  01273	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 510  : 					hGame.handsOn();

  01278	8d 4d e8	 lea	 ecx, DWORD PTR _hGame$154901[ebp]
  0127b	e8 00 00 00 00	 call	 ?handsOn@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOn

; 511  : 
; 512  : 					retVal = 1;

  01280	66 c7 45 f0 01
	00		 mov	 WORD PTR _retVal$[ebp], 1

; 514  : 					break;

  01286	e9 02 01 00 00	 jmp	 $L154896
$L154902:

; 516  : 					// go hands-on...
; 517  : 					CSCI_RoomZero hGame = pm.game;

  0128b	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?pm@@3VPMachine@@A
  01291	50		 push	 eax
  01292	8d 4d e4	 lea	 ecx, DWORD PTR _hGame$154903[ebp]
  01295	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 518  : 					hGame.handsOn();

  0129a	8d 4d e4	 lea	 ecx, DWORD PTR _hGame$154903[ebp]
  0129d	e8 00 00 00 00	 call	 ?handsOn@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOn

; 519  : 
; 520  : 					PackedData data( hMsg );

  012a2	51		 push	 ecx
  012a3	8b cc		 mov	 ecx, esp
  012a5	89 a5 7c ff ff
	ff		 mov	 DWORD PTR $T162964[ebp], esp
  012ab	8d 55 08	 lea	 edx, DWORD PTR _hMsg$[ebp]
  012ae	52		 push	 edx
  012af	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  012b4	8d 4d dc	 lea	 ecx, DWORD PTR _data$154904[ebp]
  012b7	e8 00 00 00 00	 call	 ??0PackedData@@QAE@VObjectID@@@Z ; PackedData::PackedData
  012bc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 521  : 
; 522  : 					char* pChar = data.getCharString();

  012c3	6a 00		 push	 0
  012c5	8d 4d dc	 lea	 ecx, DWORD PTR _data$154904[ebp]
  012c8	e8 00 00 00 00	 call	 ?getCharString@PackedData@@QAEPADH@Z ; PackedData::getCharString
  012cd	89 45 d8	 mov	 DWORD PTR _pChar$154906[ebp], eax

; 523  : 
; 524  : 					if ( pChar ) {

  012d0	83 7d d8 00	 cmp	 DWORD PTR _pChar$154906[ebp], 0
  012d4	74 3b		 je	 SHORT $L154907

; 525  : 						if ( strlen ( pChar ) )

  012d6	8b 45 d8	 mov	 eax, DWORD PTR _pChar$154906[ebp]
  012d9	50		 push	 eax
  012da	e8 00 00 00 00	 call	 _strlen
  012df	83 c4 04	 add	 esp, 4
  012e2	85 c0		 test	 eax, eax
  012e4	74 13		 je	 SHORT $L154908

; 526  : 							SkinMessage( "Error:", pChar );

  012e6	6a 00		 push	 0
  012e8	8b 4d d8	 mov	 ecx, DWORD PTR _pChar$154906[ebp]
  012eb	51		 push	 ecx
  012ec	68 00 00 00 00	 push	 OFFSET FLAT:$SG154909
  012f1	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  012f6	83 c4 0c	 add	 esp, 12			; 0000000cH
$L154908:

; 527  : 
; 528  : 						delete []pChar;

  012f9	8b 55 d8	 mov	 edx, DWORD PTR _pChar$154906[ebp]
  012fc	89 95 78 ff ff
	ff		 mov	 DWORD PTR $T162965[ebp], edx
  01302	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR $T162965[ebp]
  01308	50		 push	 eax
  01309	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0130e	83 c4 04	 add	 esp, 4
$L154907:

; 530  : 
; 531  :                     if (m_pAuthoringMsg)

  01311	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01317	83 79 1c 00	 cmp	 DWORD PTR [ecx+28], 0
  0131b	74 10		 je	 SHORT $L154911

; 532  : 						m_pAuthoringMsg->EnableSendBtn( true );

  0131d	6a 01		 push	 1
  0131f	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01325	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  01328	e8 00 00 00 00	 call	 ?EnableSendBtn@CMailMsg@@QAEHH@Z ; CMailMsg::EnableSendBtn
$L154911:

; 533  : 
; 534  : 					retVal = 1;

  0132d	66 c7 45 f0 01
	00		 mov	 WORD PTR _retVal$[ebp], 1

; 535  : 					}

  01333	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0133a	8d 4d dc	 lea	 ecx, DWORD PTR _data$154904[ebp]
  0133d	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData

; 536  : 					break;

  01342	eb 49		 jmp	 SHORT $L154896
$L154912:

; 538  : 					retVal = 1;

  01344	66 c7 45 f0 01
	00		 mov	 WORD PTR _retVal$[ebp], 1

; 540  : 					break;

  0134a	eb 41		 jmp	 SHORT $L154896
$L154913:

; 542  : 					retVal = 1;

  0134c	66 c7 45 f0 01
	00		 mov	 WORD PTR _retVal$[ebp], 1

; 544  : 					break;

  01352	eb 39		 jmp	 SHORT $L154896
$L154914:

; 546  : 					retVal = 1;

  01354	66 c7 45 f0 01
	00		 mov	 WORD PTR _retVal$[ebp], 1

; 548  : 					break;

  0135a	eb 31		 jmp	 SHORT $L154896
$L154915:

; 549  : 				default:
; 550  : 					TRACE( "Got NAK message %d.\n", pNakCmd.get_nValue() );

  0135c	b8 01 00 00 00	 mov	 eax, 1
  01361	85 c0		 test	 eax, eax
  01363	74 0c		 je	 SHORT $L162966
  01365	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -200+[ebp], 0
  0136f	eb 1c		 jmp	 SHORT $L162967
$L162966:
  01371	8d 4d ec	 lea	 ecx, DWORD PTR _pNakCmd$154894[ebp]
  01374	e8 00 00 00 00	 call	 ?get_nValue@CSCI_LongInt@@QAEHXZ ; CSCI_LongInt::get_nValue
  01379	50		 push	 eax
  0137a	68 00 00 00 00	 push	 OFFSET FLAT:$SG154917
  0137f	e8 00 00 00 00	 call	 ?AfxTrace@@YAXPBDZZ	; AfxTrace
  01384	83 c4 08	 add	 esp, 8
  01387	89 85 38 ff ff
	ff		 mov	 DWORD PTR -200+[ebp], eax
$L162967:
$L154896:

; 554  : 
; 555  : 		break;

  0138d	e9 a2 06 00 00	 jmp	 $L154889
$L154918:

; 558  : 			CSCI_LongInt pAckCmd( hMsg.get_pAckCmd() );

  01392	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR $T162968[ebp]
  01398	51		 push	 ecx
  01399	8d 4d 08	 lea	 ecx, DWORD PTR _hMsg$[ebp]
  0139c	e8 00 00 00 00	 call	 ?get_pAckCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ ; CSCI_NetMsg::get_pAckCmd
  013a1	50		 push	 eax
  013a2	8d 4d d4	 lea	 ecx, DWORD PTR _pAckCmd$154920[ebp]
  013a5	e8 00 00 00 00	 call	 ??0CSCI_LongInt@@QAE@ABV0@@Z ; CSCI_LongInt::CSCI_LongInt

; 559  : 
; 560  : 			switch ( pAckCmd.get_lowWord() ) {

  013aa	8d 4d d4	 lea	 ecx, DWORD PTR _pAckCmd$154920[ebp]
  013ad	e8 00 00 00 00	 call	 ?get_lowWord@CSCI_LongInt@@QAEFXZ ; CSCI_LongInt::get_lowWord
  013b2	0f bf d0	 movsx	 edx, ax
  013b5	89 95 34 ff ff
	ff		 mov	 DWORD PTR -204+[ebp], edx
  013bb	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR -204+[ebp]
  013c1	2d 87 00 00 00	 sub	 eax, 135		; 00000087H
  013c6	89 85 34 ff ff
	ff		 mov	 DWORD PTR -204+[ebp], eax
  013cc	83 bd 34 ff ff
	ff 05		 cmp	 DWORD PTR -204+[ebp], 5
  013d3	0f 87 f4 05 00
	00		 ja	 $L154991
  013d9	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR -204+[ebp]
  013df	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $L162996[ecx*4]
$L154925:

; 561  : 				case REALM_MAIL_LIST_GET:
; 562  :                     // Create dialog here for windowed display
; 563  :                     if ( !g_pToonSettings->get_TabDisplay() ) {

  013e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  013ec	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  013f1	85 c0		 test	 eax, eax
  013f3	75 0b		 jne	 SHORT $L154926

; 564  :                         Create();

  013f5	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  013fb	e8 00 00 00 00	 call	 ?Create@CMailBox@@QAEXXZ ; CMailBox::Create
$L154926:

; 566  : 
; 567  : 					retVal = Update( hMsg );

  01400	51		 push	 ecx
  01401	8b cc		 mov	 ecx, esp
  01403	89 a5 70 ff ff
	ff		 mov	 DWORD PTR $T162969[ebp], esp
  01409	8d 55 08	 lea	 edx, DWORD PTR _hMsg$[ebp]
  0140c	52		 push	 edx
  0140d	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  01412	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01418	e8 00 00 00 00	 call	 ?Update@CMailBox@@QAEHVObjectID@@@Z ; CMailBox::Update
  0141d	66 89 45 f0	 mov	 WORD PTR _retVal$[ebp], ax

; 568  : 					break;

  01421	e9 d8 05 00 00	 jmp	 $L154922
$L154928:

; 570  : 					// go hands-on...
; 571  : 					CSCI_RoomZero hGame = pm.game;

  01426	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?pm@@3VPMachine@@A
  0142c	50		 push	 eax
  0142d	8d 4d d0	 lea	 ecx, DWORD PTR _hGame$154929[ebp]
  01430	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 572  : 					hGame.handsOn();

  01435	8d 4d d0	 lea	 ecx, DWORD PTR _hGame$154929[ebp]
  01438	e8 00 00 00 00	 call	 ?handsOn@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOn

; 573  : 
; 574  : 					    CMailMsg* pMail = CMailMsg::FindByUniqueID( m_nRequestUniqueID );

  0143d	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01443	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  01446	52		 push	 edx
  01447	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  0144c	83 c4 04	 add	 esp, 4
  0144f	89 45 cc	 mov	 DWORD PTR _pMail$154930[ebp], eax

; 575  : 
; 576  : 					    delete pMail;

  01452	8b 45 cc	 mov	 eax, DWORD PTR _pMail$154930[ebp]
  01455	89 85 68 ff ff
	ff		 mov	 DWORD PTR $T162971[ebp], eax
  0145b	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR $T162971[ebp]
  01461	89 8d 6c ff ff
	ff		 mov	 DWORD PTR $T162970[ebp], ecx
  01467	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR $T162970[ebp], 0
  0146e	74 1a		 je	 SHORT $L162972
  01470	6a 01		 push	 1
  01472	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR $T162970[ebp]
  01478	8b 02		 mov	 eax, DWORD PTR [edx]
  0147a	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR $T162970[ebp]
  01480	ff 10		 call	 DWORD PTR [eax]
  01482	89 85 30 ff ff
	ff		 mov	 DWORD PTR -208+[ebp], eax
  01488	eb 0a		 jmp	 SHORT $L162973
$L162972:
  0148a	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -208+[ebp], 0
$L162973:

; 577  : 					    m_pAuthoringMsg = NULL;

  01494	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0149a	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 578  : 
; 579  :                         if ( g_pToonSettings->get_TabDisplay() )

  014a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  014a7	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  014ac	85 c0		 test	 eax, eax
  014ae	74 1d		 je	 SHORT $L154934

; 581  :                             // Re-assign inbox to the tab control
; 582  :                             if (g_pMailMgrWnd)

  014b0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  014b7	74 14		 je	 SHORT $L154934

; 584  :                                 g_pMainPanelWnd->SetTabWindow( TID_MAIL, g_pMailMgrWnd);

  014b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  014bf	52		 push	 edx
  014c0	6a 04		 push	 4
  014c2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  014c8	e8 00 00 00 00	 call	 ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z ; CMainPanelWnd::SetTabWindow
$L154934:

; 588  : 
; 589  : 					retVal = 1;

  014cd	66 c7 45 f0 01
	00		 mov	 WORD PTR _retVal$[ebp], 1

; 590  : 					break;

  014d3	e9 26 05 00 00	 jmp	 $L154922
$L154935:

; 592  : 					    CMailMsg* pMail = CMailMsg::FindByUniqueID( m_nRequestUniqueID );

  014d8	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  014de	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  014e1	51		 push	 ecx
  014e2	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  014e7	83 c4 04	 add	 esp, 4
  014ea	89 45 c8	 mov	 DWORD PTR _pMail$154936[ebp], eax

; 593  : 
; 594  : 					    if ( pMail ) {

  014ed	83 7d c8 00	 cmp	 DWORD PTR _pMail$154936[ebp], 0
  014f1	74 2f		 je	 SHORT $L154937

; 595  : 						    pMail->CreateInbox( hMsg );

  014f3	51		 push	 ecx
  014f4	8b cc		 mov	 ecx, esp
  014f6	89 a5 64 ff ff
	ff		 mov	 DWORD PTR $T162974[ebp], esp
  014fc	8d 55 08	 lea	 edx, DWORD PTR _hMsg$[ebp]
  014ff	52		 push	 edx
  01500	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  01505	8b 4d c8	 mov	 ecx, DWORD PTR _pMail$154936[ebp]
  01508	e8 00 00 00 00	 call	 ?CreateInbox@CMailMsg@@QAEHVObjectID@@@Z ; CMailMsg::CreateInbox

; 596  : 						    ReadMsg( m_nRequestUniqueID );

  0150d	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  01513	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  01516	51		 push	 ecx
  01517	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0151d	e8 00 00 00 00	 call	 ?ReadMsg@CMailBox@@QAEHH@Z ; CMailBox::ReadMsg
$L154937:

; 599  : 
; 600  : 					retVal = 1;

  01522	66 c7 45 f0 01
	00		 mov	 WORD PTR _retVal$[ebp], 1

; 601  : 					break;

  01528	e9 d1 04 00 00	 jmp	 $L154922
$L154939:

; 603  : 					PackedData data( hMsg );

  0152d	51		 push	 ecx
  0152e	8b cc		 mov	 ecx, esp
  01530	89 a5 60 ff ff
	ff		 mov	 DWORD PTR $T162975[ebp], esp
  01536	8d 55 08	 lea	 edx, DWORD PTR _hMsg$[ebp]
  01539	52		 push	 edx
  0153a	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  0153f	8d 4d c0	 lea	 ecx, DWORD PTR _data$154940[ebp]
  01542	e8 00 00 00 00	 call	 ??0PackedData@@QAE@VObjectID@@@Z ; PackedData::PackedData
  01547	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 604  : 
; 605  : 					CMailMsg* pMail = CMailMsg::FindByUniqueID( data.getLong() );

  0154e	8d 4d c0	 lea	 ecx, DWORD PTR _data$154940[ebp]
  01551	e8 00 00 00 00	 call	 ?getLong@PackedData@@QAEHXZ ; PackedData::getLong
  01556	50		 push	 eax
  01557	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  0155c	83 c4 04	 add	 esp, 4
  0155f	89 45 bc	 mov	 DWORD PTR _pMail$154942[ebp], eax

; 606  : 
; 607  : 					if ( pMail ) {

  01562	83 7d bc 00	 cmp	 DWORD PTR _pMail$154942[ebp], 0
  01566	74 21		 je	 SHORT $L154943

; 608  : 						//	Remove it from the list of messages
; 609  : 						m_MsgList.remove( pMail );

  01568	8d 45 bc	 lea	 eax, DWORD PTR _pMail$154942[ebp]
  0156b	50		 push	 eax
  0156c	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01572	83 c1 04	 add	 ecx, 4
  01575	e8 00 00 00 00	 call	 ?remove@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::remove

; 610  : 
; 611  : 						g_pMailMgrWnd->DeleteMsg( *pMail );

  0157a	8b 4d bc	 mov	 ecx, DWORD PTR _pMail$154942[ebp]
  0157d	51		 push	 ecx
  0157e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  01584	e8 00 00 00 00	 call	 ?DeleteMsg@CMailMgrWnd@@QAEHAAVCMailMsg@@@Z ; CMailMgrWnd::DeleteMsg
$L154943:

; 613  : 
; 614  : 					retVal = 1;

  01589	66 c7 45 f0 01
	00		 mov	 WORD PTR _retVal$[ebp], 1

; 615  : 					}

  0158f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01596	8d 4d c0	 lea	 ecx, DWORD PTR _data$154940[ebp]
  01599	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData

; 616  : 					break;

  0159e	e9 5b 04 00 00	 jmp	 $L154922
$L154944:

; 618  : 					retVal = 1;

  015a3	66 c7 45 f0 01
	00		 mov	 WORD PTR _retVal$[ebp], 1

; 620  : 					break;

  015a9	e9 50 04 00 00	 jmp	 $L154922
$L154945:

; 622  : 						PackedData data( hMsg );

  015ae	51		 push	 ecx
  015af	8b cc		 mov	 ecx, esp
  015b1	89 a5 5c ff ff
	ff		 mov	 DWORD PTR $T162976[ebp], esp
  015b7	8d 55 08	 lea	 edx, DWORD PTR _hMsg$[ebp]
  015ba	52		 push	 edx
  015bb	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  015c0	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  015c3	e8 00 00 00 00	 call	 ??0PackedData@@QAE@VObjectID@@@Z ; PackedData::PackedData
  015c8	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2

; 623  : 
; 624  : 						int nStart = data.getWord();

  015cf	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  015d2	e8 00 00 00 00	 call	 ?getWord@PackedData@@QAEFXZ ; PackedData::getWord
  015d7	0f bf c0	 movsx	 eax, ax
  015da	89 45 a4	 mov	 DWORD PTR _nStart$154948[ebp], eax

; 625  : 						int nEnd = data.getWord();

  015dd	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  015e0	e8 00 00 00 00	 call	 ?getWord@PackedData@@QAEFXZ ; PackedData::getWord
  015e5	0f bf c8	 movsx	 ecx, ax
  015e8	89 4d a8	 mov	 DWORD PTR _nEnd$154949[ebp], ecx

; 626  : 
; 627  : 						int nSize = data.getWord();

  015eb	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  015ee	e8 00 00 00 00	 call	 ?getWord@PackedData@@QAEFXZ ; PackedData::getWord
  015f3	0f bf d0	 movsx	 edx, ax
  015f6	89 55 b4	 mov	 DWORD PTR _nSize$154950[ebp], edx
$L154952:

; 628  : 
; 629  : 						while ( nSize ) {

  015f9	83 7d b4 00	 cmp	 DWORD PTR _nSize$154950[ebp], 0
  015fd	0f 84 cb 02 00
	00		 je	 $L154953

; 630  : 							char* pString = data.getCharString( nSize );

  01603	8b 45 b4	 mov	 eax, DWORD PTR _nSize$154950[ebp]
  01606	50		 push	 eax
  01607	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  0160a	e8 00 00 00 00	 call	 ?getCharString@PackedData@@QAEPADH@Z ; PackedData::getCharString
  0160f	89 45 9c	 mov	 DWORD PTR _pString$154954[ebp], eax

; 631  : 
; 632  : 							CString sFilename;

  01612	8d 4d 98	 lea	 ecx, DWORD PTR _sFilename$154955[ebp]
  01615	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0161a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 633  : 							CString sDst;

  0161e	8d 4d a0	 lea	 ecx, DWORD PTR _sDst$154956[ebp]
  01621	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  01626	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 634  : 
; 635  : 							sFilename.Format( "%s\\Realm.%s.%s.MM.html", g_sConfigDir, g_sCharacterName.c_str(), *( (StringID) g_pCurrentServer->m_hName ) );

  0162a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  01630	51		 push	 ecx
  01631	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR $T162977[ebp]
  01637	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  0163c	8b c8		 mov	 ecx, eax
  0163e	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  01643	50		 push	 eax
  01644	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  01649	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  0164f	50		 push	 eax
  01650	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  01655	68 00 00 00 00	 push	 OFFSET FLAT:$SG154959
  0165a	8d 55 98	 lea	 edx, DWORD PTR _sFilename$154955[ebp]
  0165d	52		 push	 edx
  0165e	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  01663	83 c4 14	 add	 esp, 20			; 00000014H

; 636  : 
; 637  : 							FILE* fp;
; 638  : 
; 639  : 							if ( fp = fopen( sFilename, "a+" ) ) {

  01666	68 00 00 00 00	 push	 OFFSET FLAT:$SG154962
  0166b	8d 4d 98	 lea	 ecx, DWORD PTR _sFilename$154955[ebp]
  0166e	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01673	50		 push	 eax
  01674	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  0167a	83 c4 08	 add	 esp, 8
  0167d	89 45 94	 mov	 DWORD PTR _fp$154960[ebp], eax
  01680	83 7d 94 00	 cmp	 DWORD PTR _fp$154960[ebp], 0
  01684	0f 84 19 01 00
	00		 je	 $L154961

; 640  : 								fwrite( pString, 1, nSize, fp );

  0168a	8b 45 94	 mov	 eax, DWORD PTR _fp$154960[ebp]
  0168d	50		 push	 eax
  0168e	8b 4d b4	 mov	 ecx, DWORD PTR _nSize$154950[ebp]
  01691	51		 push	 ecx
  01692	6a 01		 push	 1
  01694	8b 55 9c	 mov	 edx, DWORD PTR _pString$154954[ebp]
  01697	52		 push	 edx
  01698	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  0169e	83 c4 10	 add	 esp, 16			; 00000010H

; 641  : 
; 642  : 								if ( fclose( fp ) ) {

  016a1	8b 45 94	 mov	 eax, DWORD PTR _fp$154960[ebp]
  016a4	50		 push	 eax
  016a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  016ab	83 c4 04	 add	 esp, 4
  016ae	85 c0		 test	 eax, eax
  016b0	0f 84 e8 00 00
	00		 je	 $L154963

; 643  : 									// go hands-on...
; 644  : 									CSCI_RoomZero hGame = pm.game;

  016b6	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?pm@@3VPMachine@@A
  016bd	51		 push	 ecx
  016be	8d 4d 90	 lea	 ecx, DWORD PTR _hGame$154964[ebp]
  016c1	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 645  : 									hGame.handsOn();

  016c6	8d 4d 90	 lea	 ecx, DWORD PTR _hGame$154964[ebp]
  016c9	e8 00 00 00 00	 call	 ?handsOn@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOn

; 646  : 
; 647  : 									SkinMessage( "ERROR", "Can not create mail file on your system.  Please check for enough free space on your drive." );

  016ce	6a 00		 push	 0
  016d0	68 00 00 00 00	 push	 OFFSET FLAT:$SG154965
  016d5	68 00 00 00 00	 push	 OFFSET FLAT:$SG154966
  016da	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  016df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 648  : 
; 649  : 									fclose( fp );

  016e2	8b 55 94	 mov	 edx, DWORD PTR _fp$154960[ebp]
  016e5	52		 push	 edx
  016e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  016ec	83 c4 04	 add	 esp, 4

; 650  : 
; 651  : 									unlink( sFilename );

  016ef	8d 4d 98	 lea	 ecx, DWORD PTR _sFilename$154955[ebp]
  016f2	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  016f7	50		 push	 eax
  016f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__unlink
  016fe	83 c4 04	 add	 esp, 4

; 652  : 
; 653  : 									sDst.Format( "%s\\Realm.%s.%s.MM.html.bak", g_sConfigDir, g_sCharacterName.c_str(), *( (StringID) g_pCurrentServer->m_hName ) );

  01701	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  01706	50		 push	 eax
  01707	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR $T162978[ebp]
  0170d	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  01712	8b c8		 mov	 ecx, eax
  01714	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  01719	50		 push	 eax
  0171a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  0171f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  01725	50		 push	 eax
  01726	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  0172b	68 00 00 00 00	 push	 OFFSET FLAT:$SG154969
  01730	8d 4d a0	 lea	 ecx, DWORD PTR _sDst$154956[ebp]
  01733	51		 push	 ecx
  01734	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  01739	83 c4 14	 add	 esp, 20			; 00000014H

; 654  : 
; 655  : 									CopyFile( sDst, sFilename, FALSE );

  0173c	6a 00		 push	 0
  0173e	8d 4d 98	 lea	 ecx, DWORD PTR _sFilename$154955[ebp]
  01741	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01746	50		 push	 eax
  01747	8d 4d a0	 lea	 ecx, DWORD PTR _sDst$154956[ebp]
  0174a	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0174f	50		 push	 eax
  01750	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CopyFileA@12

; 656  : 									unlink( sDst );

  01756	8d 4d a0	 lea	 ecx, DWORD PTR _sDst$154956[ebp]
  01759	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0175e	50		 push	 eax
  0175f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__unlink
  01765	83 c4 04	 add	 esp, 4

; 657  : 
; 658  : 									pm.acc = retVal;

  01768	0f bf 55 f0	 movsx	 edx, WORD PTR _retVal$[ebp]
  0176c	89 15 04 00 00
	00		 mov	 DWORD PTR ?pm@@3VPMachine@@A+4, edx

; 659  : 
; 660  : 									return;

  01772	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01776	8d 4d a0	 lea	 ecx, DWORD PTR _sDst$154956[ebp]
  01779	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0177e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01782	8d 4d 98	 lea	 ecx, DWORD PTR _sFilename$154955[ebp]
  01785	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0178a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01791	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  01794	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  01799	e9 d0 02 00 00	 jmp	 $L154886
$L154963:

; 662  : 							} else {

  0179e	e9 e8 00 00 00	 jmp	 $L154970
$L154961:

; 663  : 								// go hands-on...
; 664  : 								CSCI_RoomZero hGame = pm.game;

  017a3	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?pm@@3VPMachine@@A
  017a9	50		 push	 eax
  017aa	8d 4d 8c	 lea	 ecx, DWORD PTR _hGame$154971[ebp]
  017ad	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 665  : 								hGame.handsOn();

  017b2	8d 4d 8c	 lea	 ecx, DWORD PTR _hGame$154971[ebp]
  017b5	e8 00 00 00 00	 call	 ?handsOn@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOn

; 666  : 
; 667  : 								SkinMessage( "ERROR", "Can not create mail file on your system.  Please check for enough free space on your drive." );

  017ba	6a 00		 push	 0
  017bc	68 00 00 00 00	 push	 OFFSET FLAT:$SG154972
  017c1	68 00 00 00 00	 push	 OFFSET FLAT:$SG154973
  017c6	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  017cb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 668  : 
; 669  : 								fclose( fp );

  017ce	8b 4d 94	 mov	 ecx, DWORD PTR _fp$154960[ebp]
  017d1	51		 push	 ecx
  017d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  017d8	83 c4 04	 add	 esp, 4

; 670  : 
; 671  : 								unlink( sFilename );

  017db	8d 4d 98	 lea	 ecx, DWORD PTR _sFilename$154955[ebp]
  017de	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  017e3	50		 push	 eax
  017e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__unlink
  017ea	83 c4 04	 add	 esp, 4

; 672  : 
; 673  : 								sDst.Format( "%s\\Realm.%s.%s.MM.html.bak", g_sConfigDir, g_sCharacterName.c_str(), *( (StringID) g_pCurrentServer->m_hName ) );

  017ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  017f3	52		 push	 edx
  017f4	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T162979[ebp]
  017fa	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  017ff	8b c8		 mov	 ecx, eax
  01801	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  01806	50		 push	 eax
  01807	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  0180c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  01812	50		 push	 eax
  01813	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  01818	68 00 00 00 00	 push	 OFFSET FLAT:$SG154976
  0181d	8d 45 a0	 lea	 eax, DWORD PTR _sDst$154956[ebp]
  01820	50		 push	 eax
  01821	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  01826	83 c4 14	 add	 esp, 20			; 00000014H

; 674  : 
; 675  : 								CopyFile( sDst, sFilename, FALSE );

  01829	6a 00		 push	 0
  0182b	8d 4d 98	 lea	 ecx, DWORD PTR _sFilename$154955[ebp]
  0182e	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01833	50		 push	 eax
  01834	8d 4d a0	 lea	 ecx, DWORD PTR _sDst$154956[ebp]
  01837	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0183c	50		 push	 eax
  0183d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CopyFileA@12

; 676  : 								unlink( sDst );

  01843	8d 4d a0	 lea	 ecx, DWORD PTR _sDst$154956[ebp]
  01846	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0184b	50		 push	 eax
  0184c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__unlink
  01852	83 c4 04	 add	 esp, 4

; 677  : 							
; 678  : 								pm.acc = retVal;

  01855	0f bf 4d f0	 movsx	 ecx, WORD PTR _retVal$[ebp]
  01859	89 0d 04 00 00
	00		 mov	 DWORD PTR ?pm@@3VPMachine@@A+4, ecx

; 679  : 
; 680  : 								return;

  0185f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01863	8d 4d a0	 lea	 ecx, DWORD PTR _sDst$154956[ebp]
  01866	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0186b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0186f	8d 4d 98	 lea	 ecx, DWORD PTR _sFilename$154955[ebp]
  01872	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01877	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0187e	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  01881	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  01886	e9 e3 01 00 00	 jmp	 $L154886
$L154970:

; 682  : 
; 683  : 							nSize = data.getWord();

  0188b	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  0188e	e8 00 00 00 00	 call	 ?getWord@PackedData@@QAEFXZ ; PackedData::getWord
  01893	0f bf d0	 movsx	 edx, ax
  01896	89 55 b4	 mov	 DWORD PTR _nSize$154950[ebp], edx

; 684  : 
; 685  : 							delete pString;

  01899	8b 45 9c	 mov	 eax, DWORD PTR _pString$154954[ebp]
  0189c	89 85 4c ff ff
	ff		 mov	 DWORD PTR $T162980[ebp], eax
  018a2	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR $T162980[ebp]
  018a8	51		 push	 ecx
  018a9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  018ae	83 c4 04	 add	 esp, 4

; 686  : 						};

  018b1	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  018b5	8d 4d a0	 lea	 ecx, DWORD PTR _sDst$154956[ebp]
  018b8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  018bd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  018c1	8d 4d 98	 lea	 ecx, DWORD PTR _sFilename$154955[ebp]
  018c4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  018c9	e9 2b fd ff ff	 jmp	 $L154952
$L154953:

; 687  : 
; 688  : 						int nPacketEnd = data.getWord();

  018ce	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  018d1	e8 00 00 00 00	 call	 ?getWord@PackedData@@QAEFXZ ; PackedData::getWord
  018d6	0f bf d0	 movsx	 edx, ax
  018d9	89 55 b8	 mov	 DWORD PTR _nPacketEnd$154978[ebp], edx

; 689  : 
; 690  : 						if ( nEnd != nPacketEnd ) {

  018dc	8b 45 a8	 mov	 eax, DWORD PTR _nEnd$154949[ebp]
  018df	3b 45 b8	 cmp	 eax, DWORD PTR _nPacketEnd$154978[ebp]
  018e2	74 21		 je	 SHORT $L154979

; 691  : 							CNetSend( "tbww", REALM_MAIL_MESSAGE_ARCHIVE, 0, nPacketEnd, nEnd );

  018e4	8b 4d a8	 mov	 ecx, DWORD PTR _nEnd$154949[ebp]
  018e7	51		 push	 ecx
  018e8	8b 55 b8	 mov	 edx, DWORD PTR _nPacketEnd$154978[ebp]
  018eb	52		 push	 edx
  018ec	6a 00		 push	 0
  018ee	68 8b 00 00 00	 push	 139			; 0000008bH
  018f3	68 00 00 00 00	 push	 OFFSET FLAT:$SG154980
  018f8	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  018fd	83 c4 14	 add	 esp, 20			; 00000014H

; 692  : 						} else {

  01900	e9 b7 00 00 00	 jmp	 $L154981
$L154979:

; 693  : 							CString sDst;

  01905	8d 4d 88	 lea	 ecx, DWORD PTR _sDst$154982[ebp]
  01908	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0190d	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 694  : 
; 695  : 							sDst.Format( "%s\\Realm.%s.%s.MM.html.bak", g_sConfigDir, g_sCharacterName.c_str(), *( (StringID) g_pCurrentServer->m_hName ) );

  01911	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  01916	50		 push	 eax
  01917	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T162981[ebp]
  0191d	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  01922	8b c8		 mov	 ecx, eax
  01924	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  01929	50		 push	 eax
  0192a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  0192f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  01935	50		 push	 eax
  01936	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  0193b	68 00 00 00 00	 push	 OFFSET FLAT:$SG154985
  01940	8d 4d 88	 lea	 ecx, DWORD PTR _sDst$154982[ebp]
  01943	51		 push	 ecx
  01944	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  01949	83 c4 14	 add	 esp, 20			; 00000014H

; 696  : 							unlink( sDst );

  0194c	8d 4d 88	 lea	 ecx, DWORD PTR _sDst$154982[ebp]
  0194f	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01954	50		 push	 eax
  01955	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__unlink
  0195b	83 c4 04	 add	 esp, 4

; 697  : 
; 698  : 							SkinMessage( "Magic Mail Archive", "Your mail has been archived.  Refreshing your magic mail list." );

  0195e	6a 00		 push	 0
  01960	68 00 00 00 00	 push	 OFFSET FLAT:$SG154986
  01965	68 00 00 00 00	 push	 OFFSET FLAT:$SG154987
  0196a	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  0196f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 699  : 
; 700  : 							CNetSend( "tbw", REALM_MAIL_MESSAGE_ARCHIVE, 1, nEnd );

  01972	8b 55 a8	 mov	 edx, DWORD PTR _nEnd$154949[ebp]
  01975	52		 push	 edx
  01976	6a 01		 push	 1
  01978	68 8b 00 00 00	 push	 139			; 0000008bH
  0197d	68 00 00 00 00	 push	 OFFSET FLAT:$SG154988
  01982	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  01987	83 c4 10	 add	 esp, 16			; 00000010H

; 701  : 							CNetSend( "t", REALM_MAIL_LIST_GET );

  0198a	68 87 00 00 00	 push	 135			; 00000087H
  0198f	68 00 00 00 00	 push	 OFFSET FLAT:$SG154989
  01994	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  01999	83 c4 08	 add	 esp, 8

; 702  : 
; 703  :                             if (g_pMailMgrWnd) {

  0199c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  019a3	74 0b		 je	 SHORT $L154990

; 704  : 								g_pMailMgrWnd->EnableArchive();

  019a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  019ab	e8 00 00 00 00	 call	 ?EnableArchive@CMailMgrWnd@@QAEXXZ ; CMailMgrWnd::EnableArchive
$L154990:

; 706  : 						}

  019b0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  019b4	8d 4d 88	 lea	 ecx, DWORD PTR _sDst$154982[ebp]
  019b7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L154981:

; 707  : 					}

  019bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  019c3	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  019c6	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData

; 708  : 					break;

  019cb	eb 31		 jmp	 SHORT $L154922
$L154991:

; 709  : 				default:
; 710  : 					TRACE( "Got ACK message %d.\n", pAckCmd.get_nValue() );

  019cd	b8 01 00 00 00	 mov	 eax, 1
  019d2	85 c0		 test	 eax, eax
  019d4	74 0c		 je	 SHORT $L162982
  019d6	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -212+[ebp], 0
  019e0	eb 1c		 jmp	 SHORT $L162983
$L162982:
  019e2	8d 4d d4	 lea	 ecx, DWORD PTR _pAckCmd$154920[ebp]
  019e5	e8 00 00 00 00	 call	 ?get_nValue@CSCI_LongInt@@QAEHXZ ; CSCI_LongInt::get_nValue
  019ea	50		 push	 eax
  019eb	68 00 00 00 00	 push	 OFFSET FLAT:$SG154993
  019f0	e8 00 00 00 00	 call	 ?AfxTrace@@YAXPBDZZ	; AfxTrace
  019f5	83 c4 08	 add	 esp, 8
  019f8	89 85 2c ff ff
	ff		 mov	 DWORD PTR -212+[ebp], eax
$L162983:
$L154922:

; 714  : 			break;

  019fe	eb 34		 jmp	 SHORT $L154889
$L154994:

; 715  : 		default:
; 716  : 			TRACE( "Got message type %d.\n", hMsg.get_pCommand() );

  01a00	b9 01 00 00 00	 mov	 ecx, 1
  01a05	85 c9		 test	 ecx, ecx
  01a07	74 0c		 je	 SHORT $L162984
  01a09	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -216+[ebp], 0
  01a13	eb 1f		 jmp	 SHORT $L162985
$L162984:
  01a15	8d 4d 08	 lea	 ecx, DWORD PTR _hMsg$[ebp]
  01a18	e8 00 00 00 00	 call	 ?get_pCommand@CSCI_NetMsg@@QAEFXZ ; CSCI_NetMsg::get_pCommand
  01a1d	0f bf d0	 movsx	 edx, ax
  01a20	52		 push	 edx
  01a21	68 00 00 00 00	 push	 OFFSET FLAT:$SG154996
  01a26	e8 00 00 00 00	 call	 ?AfxTrace@@YAXPBDZZ	; AfxTrace
  01a2b	83 c4 08	 add	 esp, 8
  01a2e	89 85 28 ff ff
	ff		 mov	 DWORD PTR -216+[ebp], eax
$L162985:
$L154889:

; 719  : 
; 720  : 	// go hands-on...
; 721  : 	if ( m_nRequestUniqueID != -1 ) {

  01a34	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  01a3a	83 78 20 ff	 cmp	 DWORD PTR [eax+32], -1
  01a3e	74 18		 je	 SHORT $L154997

; 722  : 		CSCI_RoomZero hGame = pm.game;

  01a40	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?pm@@3VPMachine@@A
  01a47	51		 push	 ecx
  01a48	8d 4d 84	 lea	 ecx, DWORD PTR _hGame$154998[ebp]
  01a4b	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 723  : 		hGame.handsOn();

  01a50	8d 4d 84	 lea	 ecx, DWORD PTR _hGame$154998[ebp]
  01a53	e8 00 00 00 00	 call	 ?handsOn@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOn
$L154997:

; 725  : 
; 726  : 	m_nRequestUniqueID = -1;

  01a58	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01a5e	c7 42 20 ff ff
	ff ff		 mov	 DWORD PTR [edx+32], -1

; 727  : 
; 728  : 	pm.acc = retVal;

  01a65	0f bf 45 f0	 movsx	 eax, WORD PTR _retVal$[ebp]
  01a69	a3 04 00 00 00	 mov	 DWORD PTR ?pm@@3VPMachine@@A+4, eax
$L154886:

; 729  : }

  01a6e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01a71	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01a78	8b e5		 mov	 esp, ebp
  01a7a	5d		 pop	 ebp
  01a7b	c2 04 00	 ret	 4
$L162995:
  01a7e	00 00 00 00	 DD	 $L154899
  01a82	00 00 00 00	 DD	 $L154912
  01a86	00 00 00 00	 DD	 $L154913
  01a8a	00 00 00 00	 DD	 $L154902
  01a8e	00 00 00 00	 DD	 $L154915
  01a92	00 00 00 00	 DD	 $L154914
$L162996:
  01a96	00 00 00 00	 DD	 $L154925
  01a9a	00 00 00 00	 DD	 $L154935
  01a9e	00 00 00 00	 DD	 $L154939
  01aa2	00 00 00 00	 DD	 $L154928
  01aa6	00 00 00 00	 DD	 $L154945
  01aaa	00 00 00 00	 DD	 $L154944
_TEXT	ENDS
text$x	SEGMENT
$L162986:
  001e4	8d 4d dc	 lea	 ecx, DWORD PTR _data$154904[ebp]
  001e7	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  001ec	c3		 ret	 0
$L162987:
  001ed	8d 4d c0	 lea	 ecx, DWORD PTR _data$154940[ebp]
  001f0	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  001f5	c3		 ret	 0
$L162988:
  001f6	8d 4d ac	 lea	 ecx, DWORD PTR _data$154946[ebp]
  001f9	e8 00 00 00 00	 call	 ??1PackedData@@UAE@XZ	; PackedData::~PackedData
  001fe	c3		 ret	 0
$L162989:
  001ff	8d 4d 98	 lea	 ecx, DWORD PTR _sFilename$154955[ebp]
  00202	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00207	c3		 ret	 0
$L162990:
  00208	8d 4d a0	 lea	 ecx, DWORD PTR _sDst$154956[ebp]
  0020b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00210	c3		 ret	 0
$L162991:
  00211	8d 4d 88	 lea	 ecx, DWORD PTR _sDst$154982[ebp]
  00214	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00219	c3		 ret	 0
$L162994:
  0021a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162993
  0021f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HandleMsg@CMailBox@@QAEXVCSCI_NetMsg@@@Z ENDP		; CMailBox::HandleMsg
;	COMDAT ?AfxTrace@@YAXPBDZZ
_TEXT	SEGMENT
?AfxTrace@@YAXPBDZZ PROC NEAR				; AfxTrace, COMDAT

; 249  : inline void AFX_CDECL AfxTrace(LPCTSTR, ...) { }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?AfxTrace@@YAXPBDZZ ENDP				; AfxTrace
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@ABV0@@Z			; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_LongInt@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_LongInt@@QAE@ABV0@@Z PROC NEAR			; CSCI_LongInt::CSCI_LongInt, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_LongInt@@QAE@ABV0@@Z ENDP			; CSCI_LongInt::CSCI_LongInt
_TEXT	ENDS
PUBLIC	?SendMsg@CMailBox@@QAEXH@Z			; CMailBox::SendMsg
PUBLIC	?PutByte@CPackedData@@QAEXE@Z			; CPackedData::PutByte
PUBLIC	?PutLong@CPackedData@@QAEXH@Z			; CPackedData::PutLong
PUBLIC	?PutString@CPackedData@@QAEXPADH@Z		; CPackedData::PutString
PUBLIC	?GetReferralID@CMailMsg@@QAEHXZ			; CMailMsg::GetReferralID
EXTRN	??0CPackedData@@QAE@XZ:NEAR			; CPackedData::CPackedData
EXTRN	??1CPackedData@@UAE@XZ:NEAR			; CPackedData::~CPackedData
_BSS	SEGMENT
	ALIGN	4

$SG155031 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+2
$SG155032 DB	'tp', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163009 DD	019930520H
	DD	04H
	DD	FLAT:$T163011
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163011 DD	0ffffffffH
	DD	FLAT:$L163004
	DD	00H
	DD	FLAT:$L163005
	DD	01H
	DD	FLAT:$L163006
	DD	02H
	DD	FLAT:$L163007
xdata$x	ENDS
_TEXT	SEGMENT
$T163001 = -108
$T163002 = -112
$T163003 = -116
__$EHRec$ = -12
_nUniqueID$ = 8
_this$ = -120
_hGame$ = -16
_pMail$ = -72
_sTo$ = -104
_sSubject$ = -64
_sBody$ = -88
_data$ = -48
_pName$ = -20
_pEnd$ = -68
?SendMsg@CMailBox@@QAEXH@Z PROC NEAR			; CMailBox::SendMsg

; 732  : void CMailBox::SendMsg( int nUniqueID ) {

  01aae	55		 push	 ebp
  01aaf	8b ec		 mov	 ebp, esp
  01ab1	6a ff		 push	 -1
  01ab3	68 00 00 00 00	 push	 $L163010
  01ab8	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01abe	50		 push	 eax
  01abf	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01ac6	83 ec 6c	 sub	 esp, 108		; 0000006cH
  01ac9	89 4d 88	 mov	 DWORD PTR _this$[ebp], ecx

; 733  : 	m_nRequestUniqueID = nUniqueID;

  01acc	8b 45 88	 mov	 eax, DWORD PTR _this$[ebp]
  01acf	8b 4d 08	 mov	 ecx, DWORD PTR _nUniqueID$[ebp]
  01ad2	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 734  : 
; 735  : 	// go hands-off...
; 736  : 	CSCI_RoomZero hGame = pm.game;

  01ad5	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?pm@@3VPMachine@@A
  01adc	52		 push	 edx
  01add	8d 4d f0	 lea	 ecx, DWORD PTR _hGame$[ebp]
  01ae0	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 737  : 	hGame.handsOff();

  01ae5	8d 4d f0	 lea	 ecx, DWORD PTR _hGame$[ebp]
  01ae8	e8 00 00 00 00	 call	 ?handsOff@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOff

; 738  : 
; 739  : 	CMailMsg* pMail = CMailMsg::FindByUniqueID( nUniqueID );

  01aed	8b 45 08	 mov	 eax, DWORD PTR _nUniqueID$[ebp]
  01af0	50		 push	 eax
  01af1	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  01af6	83 c4 04	 add	 esp, 4
  01af9	89 45 b8	 mov	 DWORD PTR _pMail$[ebp], eax

; 740  : 
; 741  : 	std::string sTo;

  01afc	8d 4d 94	 lea	 ecx, DWORD PTR $T163001[ebp]
  01aff	51		 push	 ecx
  01b00	8d 4d 98	 lea	 ecx, DWORD PTR _sTo$[ebp]
  01b03	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  01b09	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 742  : 	std::string sSubject;

  01b10	8d 55 90	 lea	 edx, DWORD PTR $T163002[ebp]
  01b13	52		 push	 edx
  01b14	8d 4d c0	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  01b17	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  01b1d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 743  : 	std::string sBody;

  01b21	8d 45 8c	 lea	 eax, DWORD PTR $T163003[ebp]
  01b24	50		 push	 eax
  01b25	8d 4d a8	 lea	 ecx, DWORD PTR _sBody$[ebp]
  01b28	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  01b2e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 744  : 
; 745  : 	pMail->GetTo( sTo );

  01b32	8d 4d 98	 lea	 ecx, DWORD PTR _sTo$[ebp]
  01b35	51		 push	 ecx
  01b36	8b 4d b8	 mov	 ecx, DWORD PTR _pMail$[ebp]
  01b39	e8 00 00 00 00	 call	 ?GetTo@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetTo

; 746  : 	pMail->GetSubject( sSubject );

  01b3e	8d 55 c0	 lea	 edx, DWORD PTR _sSubject$[ebp]
  01b41	52		 push	 edx
  01b42	8b 4d b8	 mov	 ecx, DWORD PTR _pMail$[ebp]
  01b45	e8 00 00 00 00	 call	 ?GetSubject@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetSubject

; 747  : 	pMail->GetBody( sBody );

  01b4a	8d 45 a8	 lea	 eax, DWORD PTR _sBody$[ebp]
  01b4d	50		 push	 eax
  01b4e	8b 4d b8	 mov	 ecx, DWORD PTR _pMail$[ebp]
  01b51	e8 00 00 00 00	 call	 ?GetBody@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetBody

; 748  : 
; 749  : 	CPackedData data;

  01b56	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  01b59	e8 00 00 00 00	 call	 ??0CPackedData@@QAE@XZ	; CPackedData::CPackedData
  01b5e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 750  : 
; 751  : 	data.PutByte( pMail->GetType() );

  01b62	8b 4d b8	 mov	 ecx, DWORD PTR _pMail$[ebp]
  01b65	e8 00 00 00 00	 call	 ?GetType@CMailMsg@@QAEHXZ ; CMailMsg::GetType
  01b6a	50		 push	 eax
  01b6b	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  01b6e	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte

; 752  : 	data.PutLong( pMail->GetReferralID() );

  01b73	8b 4d b8	 mov	 ecx, DWORD PTR _pMail$[ebp]
  01b76	e8 00 00 00 00	 call	 ?GetReferralID@CMailMsg@@QAEHXZ ; CMailMsg::GetReferralID
  01b7b	50		 push	 eax
  01b7c	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  01b7f	e8 00 00 00 00	 call	 ?PutLong@CPackedData@@QAEXH@Z ; CPackedData::PutLong

; 753  : 	data.PutString( (char*) sSubject.c_str() );

  01b84	6a 00		 push	 0
  01b86	8d 4d c0	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  01b89	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  01b8f	50		 push	 eax
  01b90	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  01b93	e8 00 00 00 00	 call	 ?PutString@CPackedData@@QAEXPADH@Z ; CPackedData::PutString

; 754  : 	data.PutString( (char*) sBody.c_str() );

  01b98	6a 00		 push	 0
  01b9a	8d 4d a8	 lea	 ecx, DWORD PTR _sBody$[ebp]
  01b9d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  01ba3	50		 push	 eax
  01ba4	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  01ba7	e8 00 00 00 00	 call	 ?PutString@CPackedData@@QAEXPADH@Z ; CPackedData::PutString

; 755  : 
; 756  : 	char* pName = (char*) sTo.c_str();

  01bac	8d 4d 98	 lea	 ecx, DWORD PTR _sTo$[ebp]
  01baf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  01bb5	89 45 ec	 mov	 DWORD PTR _pName$[ebp], eax
$L155021:

; 757  : 	char* pEnd;
; 758  : 
; 759  : 	while ( *pName ) {

  01bb8	8b 4d ec	 mov	 ecx, DWORD PTR _pName$[ebp]
  01bbb	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  01bbe	85 d2		 test	 edx, edx
  01bc0	74 7e		 je	 SHORT $L155022
$L155024:

; 760  : 		while ( *pName == ' ' )		//	Remove the spaces

  01bc2	8b 45 ec	 mov	 eax, DWORD PTR _pName$[ebp]
  01bc5	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  01bc8	83 f9 20	 cmp	 ecx, 32			; 00000020H
  01bcb	75 0b		 jne	 SHORT $L155025

; 761  : 			pName++;

  01bcd	8b 55 ec	 mov	 edx, DWORD PTR _pName$[ebp]
  01bd0	83 c2 01	 add	 edx, 1
  01bd3	89 55 ec	 mov	 DWORD PTR _pName$[ebp], edx
  01bd6	eb ea		 jmp	 SHORT $L155024
$L155025:

; 762  : 
; 763  : 		pEnd = pName;

  01bd8	8b 45 ec	 mov	 eax, DWORD PTR _pName$[ebp]
  01bdb	89 45 bc	 mov	 DWORD PTR _pEnd$[ebp], eax
$L155027:

; 764  : 
; 765  : 		while ( *pEnd && *pEnd != ' ' )

  01bde	8b 4d bc	 mov	 ecx, DWORD PTR _pEnd$[ebp]
  01be1	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  01be4	85 d2		 test	 edx, edx
  01be6	74 16		 je	 SHORT $L155028
  01be8	8b 45 bc	 mov	 eax, DWORD PTR _pEnd$[ebp]
  01beb	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  01bee	83 f9 20	 cmp	 ecx, 32			; 00000020H
  01bf1	74 0b		 je	 SHORT $L155028

; 766  : 			pEnd++;

  01bf3	8b 55 bc	 mov	 edx, DWORD PTR _pEnd$[ebp]
  01bf6	83 c2 01	 add	 edx, 1
  01bf9	89 55 bc	 mov	 DWORD PTR _pEnd$[ebp], edx
  01bfc	eb e0		 jmp	 SHORT $L155027
$L155028:

; 767  : 
; 768  : 		if ( *pEnd ) {

  01bfe	8b 45 bc	 mov	 eax, DWORD PTR _pEnd$[ebp]
  01c01	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  01c04	85 c9		 test	 ecx, ecx
  01c06	74 1f		 je	 SHORT $L155029

; 769  : 			*pEnd = 0;

  01c08	8b 55 bc	 mov	 edx, DWORD PTR _pEnd$[ebp]
  01c0b	c6 02 00	 mov	 BYTE PTR [edx], 0

; 770  : 			data.PutString( pName );

  01c0e	6a 00		 push	 0
  01c10	8b 45 ec	 mov	 eax, DWORD PTR _pName$[ebp]
  01c13	50		 push	 eax
  01c14	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  01c17	e8 00 00 00 00	 call	 ?PutString@CPackedData@@QAEXPADH@Z ; CPackedData::PutString

; 771  : 
; 772  : 			pName = pEnd + 1;

  01c1c	8b 4d bc	 mov	 ecx, DWORD PTR _pEnd$[ebp]
  01c1f	83 c1 01	 add	 ecx, 1
  01c22	89 4d ec	 mov	 DWORD PTR _pName$[ebp], ecx

; 773  : 		} else {

  01c25	eb 14		 jmp	 SHORT $L155030
$L155029:

; 774  : 			data.PutString( pName );

  01c27	6a 00		 push	 0
  01c29	8b 55 ec	 mov	 edx, DWORD PTR _pName$[ebp]
  01c2c	52		 push	 edx
  01c2d	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  01c30	e8 00 00 00 00	 call	 ?PutString@CPackedData@@QAEXPADH@Z ; CPackedData::PutString

; 775  : 
; 776  : 			pName = pEnd;

  01c35	8b 45 bc	 mov	 eax, DWORD PTR _pEnd$[ebp]
  01c38	89 45 ec	 mov	 DWORD PTR _pName$[ebp], eax
$L155030:

; 778  : 	}

  01c3b	e9 78 ff ff ff	 jmp	 $L155021
$L155022:

; 779  : 
; 780  : 	data.PutString( "" );

  01c40	6a 00		 push	 0
  01c42	68 00 00 00 00	 push	 OFFSET FLAT:$SG155031
  01c47	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  01c4a	e8 00 00 00 00	 call	 ?PutString@CPackedData@@QAEXPADH@Z ; CPackedData::PutString

; 781  : 
; 782  : 	CNetSend( "tp", REALM_MAIL_MESSAGE_SEND, &data );

  01c4f	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  01c52	51		 push	 ecx
  01c53	68 8a 00 00 00	 push	 138			; 0000008aH
  01c58	68 00 00 00 00	 push	 OFFSET FLAT:$SG155032
  01c5d	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  01c62	83 c4 0c	 add	 esp, 12			; 0000000cH

; 783  : }

  01c65	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01c69	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  01c6c	e8 00 00 00 00	 call	 ??1CPackedData@@UAE@XZ	; CPackedData::~CPackedData
  01c71	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01c75	8d 4d a8	 lea	 ecx, DWORD PTR _sBody$[ebp]
  01c78	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  01c7e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01c82	8d 4d c0	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  01c85	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  01c8b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01c92	8d 4d 98	 lea	 ecx, DWORD PTR _sTo$[ebp]
  01c95	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  01c9b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01c9e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01ca5	8b e5		 mov	 esp, ebp
  01ca7	5d		 pop	 ebp
  01ca8	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L163004:
  00224	8d 4d 98	 lea	 ecx, DWORD PTR _sTo$[ebp]
  00227	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0022d	c3		 ret	 0
$L163005:
  0022e	8d 4d c0	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  00231	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00237	c3		 ret	 0
$L163006:
  00238	8d 4d a8	 lea	 ecx, DWORD PTR _sBody$[ebp]
  0023b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00241	c3		 ret	 0
$L163007:
  00242	8d 4d d0	 lea	 ecx, DWORD PTR _data$[ebp]
  00245	e8 00 00 00 00	 call	 ??1CPackedData@@UAE@XZ	; CPackedData::~CPackedData
  0024a	c3		 ret	 0
$L163010:
  0024b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163009
  00250	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMsg@CMailBox@@QAEXH@Z ENDP				; CMailBox::SendMsg
PUBLIC	?DeleteMsg@CMailBox@@QAEHH@Z			; CMailBox::DeleteMsg
_DATA	SEGMENT
	ORG $+1
$SG155037 DB	'tl', 00H
_DATA	ENDS
_TEXT	SEGMENT
_nUniqueID$ = 8
_this$ = -4
?DeleteMsg@CMailBox@@QAEHH@Z PROC NEAR			; CMailBox::DeleteMsg

; 786  : BOOL CMailBox::DeleteMsg ( int nUniqueID ) {

  01cab	55		 push	 ebp
  01cac	8b ec		 mov	 ebp, esp
  01cae	51		 push	 ecx
  01caf	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 787  : 	CNetSend( "tl", REALM_MAIL_MESSAGE_DELETE, nUniqueID );

  01cb2	8b 45 08	 mov	 eax, DWORD PTR _nUniqueID$[ebp]
  01cb5	50		 push	 eax
  01cb6	68 89 00 00 00	 push	 137			; 00000089H
  01cbb	68 00 00 00 00	 push	 OFFSET FLAT:$SG155037
  01cc0	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  01cc5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 788  : 
; 789  : 	return TRUE;

  01cc8	b8 01 00 00 00	 mov	 eax, 1

; 790  : }

  01ccd	8b e5		 mov	 esp, ebp
  01ccf	5d		 pop	 ebp
  01cd0	c2 04 00	 ret	 4
?DeleteMsg@CMailBox@@QAEHH@Z ENDP			; CMailBox::DeleteMsg
_TEXT	ENDS
PUBLIC	??0CMailMsgReadWnd@@QAE@XZ			; CMailMsgReadWnd::CMailMsgReadWnd
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:NEAR			; CWnd::SetFocus
_DATA	SEGMENT
	ORG $+1
$SG155049 DB	'Please close one of the messages currently open.', 00H
	ORG $+3
$SG155050 DB	'ERROR:', 00H
	ORG $+1
$SG155055 DB	'Trying to read an invalid mail message!', 00H
$SG155056 DB	'Error', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163020 DD	019930520H
	DD	01H
	DD	FLAT:$T163022
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163022 DD	0ffffffffH
	DD	FLAT:$L163018
xdata$x	ENDS
_TEXT	SEGMENT
$T163014 = -24
$T163015 = -28
__$EHRec$ = -12
_nUniqueID$ = 8
_this$ = -32
_pMail$ = -16
_pWnd$155044 = -20
?ReadMsg@CMailBox@@QAEHH@Z PROC NEAR			; CMailBox::ReadMsg

; 794  : {

  01cd3	55		 push	 ebp
  01cd4	8b ec		 mov	 ebp, esp
  01cd6	6a ff		 push	 -1
  01cd8	68 00 00 00 00	 push	 $L163021
  01cdd	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01ce3	50		 push	 eax
  01ce4	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01ceb	83 ec 18	 sub	 esp, 24			; 00000018H
  01cee	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 795  : 	//	Find the mail message
; 796  : 	CMailMsg* pMail = CMailMsg::FindByUniqueID ( nUniqueID );

  01cf1	8b 45 08	 mov	 eax, DWORD PTR _nUniqueID$[ebp]
  01cf4	50		 push	 eax
  01cf5	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  01cfa	83 c4 04	 add	 esp, 4
  01cfd	89 45 f0	 mov	 DWORD PTR _pMail$[ebp], eax

; 797  : 
; 798  : 	if ( pMail ) {

  01d00	83 7d f0 00	 cmp	 DWORD PTR _pMail$[ebp], 0
  01d04	0f 84 b3 00 00
	00		 je	 $L155043

; 799  : 		CMailMsgReadWnd* pWnd = (CMailMsgReadWnd*) CMailMsgWnd::FindByUniqueID( nUniqueID );

  01d0a	8b 4d 08	 mov	 ecx, DWORD PTR _nUniqueID$[ebp]
  01d0d	51		 push	 ecx
  01d0e	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsgWnd@@SAPAV1@H@Z ; CMailMsgWnd::FindByUniqueID
  01d13	83 c4 04	 add	 esp, 4
  01d16	89 45 ec	 mov	 DWORD PTR _pWnd$155044[ebp], eax

; 800  : 
; 801  : 		if ( pWnd ) {

  01d19	83 7d ec 00	 cmp	 DWORD PTR _pWnd$155044[ebp], 0
  01d1d	74 0d		 je	 SHORT $L155046

; 802  : 			pWnd->SetFocus();

  01d1f	8b 4d ec	 mov	 ecx, DWORD PTR _pWnd$155044[ebp]
  01d22	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 803  : 		} else {

  01d27	e9 8a 00 00 00	 jmp	 $L155047
$L155046:

; 804  : 			if ( m_ViewedMsgList.size() == m_nResponseCount ) {

  01d2c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01d2f	83 c1 10	 add	 ecx, 16			; 00000010H
  01d32	e8 00 00 00 00	 call	 ?size@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEIXZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::size
  01d37	83 f8 03	 cmp	 eax, 3
  01d3a	75 18		 jne	 SHORT $L155048

; 805  : 				SkinMessage( "ERROR:", "Please close one of the messages currently open." );

  01d3c	6a 00		 push	 0
  01d3e	68 00 00 00 00	 push	 OFFSET FLAT:$SG155049
  01d43	68 00 00 00 00	 push	 OFFSET FLAT:$SG155050
  01d48	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  01d4d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 806  : 				return FALSE;

  01d50	33 c0		 xor	 eax, eax
  01d52	eb 7f		 jmp	 SHORT $L155041
$L155048:

; 808  : 
; 809  : 			pWnd = new CMailMsgReadWnd();

  01d54	68 a0 00 00 00	 push	 160			; 000000a0H
  01d59	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01d5e	89 45 e4	 mov	 DWORD PTR $T163015[ebp], eax
  01d61	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01d68	83 7d e4 00	 cmp	 DWORD PTR $T163015[ebp], 0
  01d6c	74 0d		 je	 SHORT $L163016
  01d6e	8b 4d e4	 mov	 ecx, DWORD PTR $T163015[ebp]
  01d71	e8 00 00 00 00	 call	 ??0CMailMsgReadWnd@@QAE@XZ ; CMailMsgReadWnd::CMailMsgReadWnd
  01d76	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  01d79	eb 07		 jmp	 SHORT $L163017
$L163016:
  01d7b	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L163017:
  01d82	8b 55 dc	 mov	 edx, DWORD PTR -36+[ebp]
  01d85	89 55 e8	 mov	 DWORD PTR $T163014[ebp], edx
  01d88	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01d8f	8b 45 e8	 mov	 eax, DWORD PTR $T163014[ebp]
  01d92	89 45 ec	 mov	 DWORD PTR _pWnd$155044[ebp], eax

; 810  : 			pWnd->Create( nUniqueID );

  01d95	8b 4d 08	 mov	 ecx, DWORD PTR _nUniqueID$[ebp]
  01d98	51		 push	 ecx
  01d99	8b 55 ec	 mov	 edx, DWORD PTR _pWnd$155044[ebp]
  01d9c	8b 02		 mov	 eax, DWORD PTR [edx]
  01d9e	8b 4d ec	 mov	 ecx, DWORD PTR _pWnd$155044[ebp]
  01da1	ff 90 ec 00 00
	00		 call	 DWORD PTR [eax+236]

; 811  : 
; 812  : 			m_ViewedMsgList.push_back( pMail );

  01da7	8d 4d f0	 lea	 ecx, DWORD PTR _pMail$[ebp]
  01daa	51		 push	 ecx
  01dab	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01dae	83 c1 10	 add	 ecx, 16			; 00000010H
  01db1	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::push_back
$L155047:

; 814  : 
; 815  : 		return TRUE;

  01db6	b8 01 00 00 00	 mov	 eax, 1
  01dbb	eb 16		 jmp	 SHORT $L155041
$L155043:

; 817  : 
; 818  : 	SkinMessage( "Error", "Trying to read an invalid mail message!" );

  01dbd	6a 00		 push	 0
  01dbf	68 00 00 00 00	 push	 OFFSET FLAT:$SG155055
  01dc4	68 00 00 00 00	 push	 OFFSET FLAT:$SG155056
  01dc9	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  01dce	83 c4 0c	 add	 esp, 12			; 0000000cH

; 819  : 	return FALSE;

  01dd1	33 c0		 xor	 eax, eax
$L155041:

; 820  : }

  01dd3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01dd6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01ddd	8b e5		 mov	 esp, ebp
  01ddf	5d		 pop	 ebp
  01de0	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L163018:
  00255	8b 45 e4	 mov	 eax, DWORD PTR $T163015[ebp]
  00258	50		 push	 eax
  00259	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0025e	c3		 ret	 0
$L163021:
  0025f	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163020
  00264	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ReadMsg@CMailBox@@QAEHH@Z ENDP				; CMailBox::ReadMsg
PUBLIC	?AuthorMsgInProgress@CMailBox@@QAEHXZ		; CMailBox::AuthorMsgInProgress
_TEXT	SEGMENT
_this$ = -4
?AuthorMsgInProgress@CMailBox@@QAEHXZ PROC NEAR		; CMailBox::AuthorMsgInProgress

; 824  : {

  01de3	55		 push	 ebp
  01de4	8b ec		 mov	 ebp, esp
  01de6	51		 push	 ecx
  01de7	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 825  :     if (m_pAuthoringMsg)

  01dea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01ded	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  01df1	74 07		 je	 SHORT $L155061

; 826  :         return TRUE;

  01df3	b8 01 00 00 00	 mov	 eax, 1
  01df8	eb 02		 jmp	 SHORT $L155060
$L155061:

; 827  : 
; 828  :     return FALSE;

  01dfa	33 c0		 xor	 eax, eax
$L155060:

; 829  : }

  01dfc	8b e5		 mov	 esp, ebp
  01dfe	5d		 pop	 ebp
  01dff	c3		 ret	 0
?AuthorMsgInProgress@CMailBox@@QAEHXZ ENDP		; CMailBox::AuthorMsgInProgress
_TEXT	ENDS
PUBLIC	??0CMailMsgAuthorWnd@@QAE@XZ			; CMailMsgAuthorWnd::CMailMsgAuthorWnd
_DATA	SEGMENT
	ORG $+2
$SG155077 DB	'Please finish creating/replying/forwarding the current m'
	DB	'ail message before trying to do a new one.', 00H
	ORG $+1
$SG155078 DB	'Error', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163036 DD	019930520H
	DD	02H
	DD	FLAT:$T163038
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163038 DD	0ffffffffH
	DD	FLAT:$L163033
	DD	0ffffffffH
	DD	FLAT:$L163034
xdata$x	ENDS
_TEXT	SEGMENT
$T163025 = -20
$T163026 = -24
$T163029 = -28
$T163030 = -32
__$EHRec$ = -12
_this$ = -36
_pWnd$155071 = -16
?AuthorMsg@CMailBox@@QAEXXZ PROC NEAR			; CMailBox::AuthorMsg

; 834  : {

  01e00	55		 push	 ebp
  01e01	8b ec		 mov	 ebp, esp
  01e03	6a ff		 push	 -1
  01e05	68 00 00 00 00	 push	 $L163037
  01e0a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01e10	50		 push	 eax
  01e11	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01e18	83 ec 20	 sub	 esp, 32			; 00000020H
  01e1b	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx

; 835  : 	if ( !m_pAuthoringMsg ) {

  01e1e	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  01e21	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  01e25	0f 85 a1 00 00
	00		 jne	 $L155066

; 836  : 		m_pAuthoringMsg = new CMailMsg();

  01e2b	6a 64		 push	 100			; 00000064H
  01e2d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01e32	83 c4 04	 add	 esp, 4
  01e35	89 45 e8	 mov	 DWORD PTR $T163026[ebp], eax
  01e38	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01e3f	83 7d e8 00	 cmp	 DWORD PTR $T163026[ebp], 0
  01e43	74 0d		 je	 SHORT $L163027
  01e45	8b 4d e8	 mov	 ecx, DWORD PTR $T163026[ebp]
  01e48	e8 00 00 00 00	 call	 ??0CMailMsg@@QAE@XZ	; CMailMsg::CMailMsg
  01e4d	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  01e50	eb 07		 jmp	 SHORT $L163028
$L163027:
  01e52	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR -40+[ebp], 0
$L163028:
  01e59	8b 4d d8	 mov	 ecx, DWORD PTR -40+[ebp]
  01e5c	89 4d ec	 mov	 DWORD PTR $T163025[ebp], ecx
  01e5f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01e66	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  01e69	8b 45 ec	 mov	 eax, DWORD PTR $T163025[ebp]
  01e6c	89 42 1c	 mov	 DWORD PTR [edx+28], eax

; 837  : 
; 838  : 		CMailMsgAuthorWnd *pWnd = new CMailMsgAuthorWnd();

  01e6f	68 a8 00 00 00	 push	 168			; 000000a8H
  01e74	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01e79	89 45 e0	 mov	 DWORD PTR $T163030[ebp], eax
  01e7c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  01e83	83 7d e0 00	 cmp	 DWORD PTR $T163030[ebp], 0
  01e87	74 0d		 je	 SHORT $L163031
  01e89	8b 4d e0	 mov	 ecx, DWORD PTR $T163030[ebp]
  01e8c	e8 00 00 00 00	 call	 ??0CMailMsgAuthorWnd@@QAE@XZ ; CMailMsgAuthorWnd::CMailMsgAuthorWnd
  01e91	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  01e94	eb 07		 jmp	 SHORT $L163032
$L163031:
  01e96	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L163032:
  01e9d	8b 4d d4	 mov	 ecx, DWORD PTR -44+[ebp]
  01ea0	89 4d e4	 mov	 DWORD PTR $T163029[ebp], ecx
  01ea3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01eaa	8b 55 e4	 mov	 edx, DWORD PTR $T163029[ebp]
  01ead	89 55 f0	 mov	 DWORD PTR _pWnd$155071[ebp], edx

; 839  : 		pWnd->Create( m_pAuthoringMsg->GetUniqueID() );

  01eb0	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  01eb3	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  01eb6	e8 00 00 00 00	 call	 ?GetUniqueID@CMailMsg@@QAEHXZ ; CMailMsg::GetUniqueID
  01ebb	50		 push	 eax
  01ebc	8b 4d f0	 mov	 ecx, DWORD PTR _pWnd$155071[ebp]
  01ebf	8b 11		 mov	 edx, DWORD PTR [ecx]
  01ec1	8b 4d f0	 mov	 ecx, DWORD PTR _pWnd$155071[ebp]
  01ec4	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 840  : 	} else {

  01eca	eb 14		 jmp	 SHORT $L155076
$L155066:

; 841  : 		SkinMessage( "Error", "Please finish creating/replying/forwarding the current mail message before trying to do a new one." );

  01ecc	6a 00		 push	 0
  01ece	68 00 00 00 00	 push	 OFFSET FLAT:$SG155077
  01ed3	68 00 00 00 00	 push	 OFFSET FLAT:$SG155078
  01ed8	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  01edd	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155076:

; 843  : }

  01ee0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01ee3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01eea	8b e5		 mov	 esp, ebp
  01eec	5d		 pop	 ebp
  01eed	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L163033:
  00269	8b 45 e8	 mov	 eax, DWORD PTR $T163026[ebp]
  0026c	50		 push	 eax
  0026d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00272	59		 pop	 ecx
  00273	c3		 ret	 0
$L163034:
  00274	8b 45 e0	 mov	 eax, DWORD PTR $T163030[ebp]
  00277	50		 push	 eax
  00278	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0027d	c3		 ret	 0
$L163037:
  0027e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163036
  00283	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AuthorMsg@CMailBox@@QAEXXZ ENDP			; CMailBox::AuthorMsg
PUBLIC	?AuthorReplyMsg@CMailBox@@QAEXH@Z		; CMailBox::AuthorReplyMsg
_DATA	SEGMENT
	ORG $+2
$SG155096 DB	'Please finish creating/replying/forwarding the current m'
	DB	'ail message before trying to do a new one.', 00H
	ORG $+1
$SG155097 DB	'Error', 00H
	ORG $+2
$SG155099 DB	'Trying to reply to an invalid mail message!', 00H
$SG155100 DB	'Error', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163051 DD	019930520H
	DD	02H
	DD	FLAT:$T163053
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163053 DD	0ffffffffH
	DD	FLAT:$L163048
	DD	0ffffffffH
	DD	FLAT:$L163049
xdata$x	ENDS
_TEXT	SEGMENT
$T163040 = -24
$T163041 = -28
$T163044 = -32
$T163045 = -36
__$EHRec$ = -12
_nUniqueID$ = 8
_this$ = -40
_pMail$ = -16
_pWnd$155090 = -20
?AuthorReplyMsg@CMailBox@@QAEXH@Z PROC NEAR		; CMailBox::AuthorReplyMsg

; 847  : {

  01eee	55		 push	 ebp
  01eef	8b ec		 mov	 ebp, esp
  01ef1	6a ff		 push	 -1
  01ef3	68 00 00 00 00	 push	 $L163052
  01ef8	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01efe	50		 push	 eax
  01eff	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01f06	83 ec 24	 sub	 esp, 36			; 00000024H
  01f09	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 848  : 	//	Find the mail message
; 849  : 	CMailMsg* pMail = CMailMsg::FindByUniqueID ( nUniqueID );

  01f0c	8b 45 08	 mov	 eax, DWORD PTR _nUniqueID$[ebp]
  01f0f	50		 push	 eax
  01f10	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  01f15	83 c4 04	 add	 esp, 4
  01f18	89 45 f0	 mov	 DWORD PTR _pMail$[ebp], eax

; 850  : 
; 851  : 	if ( pMail ) {

  01f1b	83 7d f0 00	 cmp	 DWORD PTR _pMail$[ebp], 0
  01f1f	0f 84 d3 00 00
	00		 je	 $L155084

; 852  : 		if ( !m_pAuthoringMsg ) {

  01f25	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01f28	83 79 1c 00	 cmp	 DWORD PTR [ecx+28], 0
  01f2c	0f 85 b0 00 00
	00		 jne	 $L155085

; 853  : 			m_pAuthoringMsg = new CMailMsg();

  01f32	6a 64		 push	 100			; 00000064H
  01f34	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01f39	83 c4 04	 add	 esp, 4
  01f3c	89 45 e4	 mov	 DWORD PTR $T163041[ebp], eax
  01f3f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01f46	83 7d e4 00	 cmp	 DWORD PTR $T163041[ebp], 0
  01f4a	74 0d		 je	 SHORT $L163042
  01f4c	8b 4d e4	 mov	 ecx, DWORD PTR $T163041[ebp]
  01f4f	e8 00 00 00 00	 call	 ??0CMailMsg@@QAE@XZ	; CMailMsg::CMailMsg
  01f54	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  01f57	eb 07		 jmp	 SHORT $L163043
$L163042:
  01f59	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L163043:
  01f60	8b 55 d4	 mov	 edx, DWORD PTR -44+[ebp]
  01f63	89 55 e8	 mov	 DWORD PTR $T163040[ebp], edx
  01f66	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01f6d	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  01f70	8b 4d e8	 mov	 ecx, DWORD PTR $T163040[ebp]
  01f73	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 854  : 			m_pAuthoringMsg->CreateReply( *pMail );

  01f76	8b 55 f0	 mov	 edx, DWORD PTR _pMail$[ebp]
  01f79	52		 push	 edx
  01f7a	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  01f7d	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  01f80	e8 00 00 00 00	 call	 ?CreateReply@CMailMsg@@QAEHAAV1@@Z ; CMailMsg::CreateReply

; 855  : 			CMailMsgAuthorWnd *pWnd = new CMailMsgAuthorWnd();

  01f85	68 a8 00 00 00	 push	 168			; 000000a8H
  01f8a	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01f8f	89 45 dc	 mov	 DWORD PTR $T163045[ebp], eax
  01f92	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  01f99	83 7d dc 00	 cmp	 DWORD PTR $T163045[ebp], 0
  01f9d	74 0d		 je	 SHORT $L163046
  01f9f	8b 4d dc	 mov	 ecx, DWORD PTR $T163045[ebp]
  01fa2	e8 00 00 00 00	 call	 ??0CMailMsgAuthorWnd@@QAE@XZ ; CMailMsgAuthorWnd::CMailMsgAuthorWnd
  01fa7	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  01faa	eb 07		 jmp	 SHORT $L163047
$L163046:
  01fac	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR -48+[ebp], 0
$L163047:
  01fb3	8b 4d d0	 mov	 ecx, DWORD PTR -48+[ebp]
  01fb6	89 4d e0	 mov	 DWORD PTR $T163044[ebp], ecx
  01fb9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01fc0	8b 55 e0	 mov	 edx, DWORD PTR $T163044[ebp]
  01fc3	89 55 ec	 mov	 DWORD PTR _pWnd$155090[ebp], edx

; 856  : 			pWnd->Create( m_pAuthoringMsg->GetUniqueID() );

  01fc6	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  01fc9	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  01fcc	e8 00 00 00 00	 call	 ?GetUniqueID@CMailMsg@@QAEHXZ ; CMailMsg::GetUniqueID
  01fd1	50		 push	 eax
  01fd2	8b 4d ec	 mov	 ecx, DWORD PTR _pWnd$155090[ebp]
  01fd5	8b 11		 mov	 edx, DWORD PTR [ecx]
  01fd7	8b 4d ec	 mov	 ecx, DWORD PTR _pWnd$155090[ebp]
  01fda	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 857  : 		} else {

  01fe0	eb 14		 jmp	 SHORT $L155095
$L155085:

; 858  : 			SkinMessage( "Error", "Please finish creating/replying/forwarding the current mail message before trying to do a new one." );

  01fe2	6a 00		 push	 0
  01fe4	68 00 00 00 00	 push	 OFFSET FLAT:$SG155096
  01fe9	68 00 00 00 00	 push	 OFFSET FLAT:$SG155097
  01fee	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  01ff3	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155095:

; 860  : 	} else {

  01ff6	eb 14		 jmp	 SHORT $L155098
$L155084:

; 861  : 		SkinMessage( "Error", "Trying to reply to an invalid mail message!" );

  01ff8	6a 00		 push	 0
  01ffa	68 00 00 00 00	 push	 OFFSET FLAT:$SG155099
  01fff	68 00 00 00 00	 push	 OFFSET FLAT:$SG155100
  02004	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  02009	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155098:

; 863  : }

  0200c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0200f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02016	8b e5		 mov	 esp, ebp
  02018	5d		 pop	 ebp
  02019	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L163048:
  00288	8b 45 e4	 mov	 eax, DWORD PTR $T163041[ebp]
  0028b	50		 push	 eax
  0028c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00291	59		 pop	 ecx
  00292	c3		 ret	 0
$L163049:
  00293	8b 45 dc	 mov	 eax, DWORD PTR $T163045[ebp]
  00296	50		 push	 eax
  00297	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0029c	c3		 ret	 0
$L163052:
  0029d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163051
  002a2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AuthorReplyMsg@CMailBox@@QAEXH@Z ENDP			; CMailBox::AuthorReplyMsg
PUBLIC	?AuthorForwardMsg@CMailBox@@QAEXH@Z		; CMailBox::AuthorForwardMsg
_DATA	SEGMENT
	ORG $+2
$SG155118 DB	'Please finish creating/replying/forwarding the current m'
	DB	'ail message before trying to do a new one.', 00H
	ORG $+1
$SG155119 DB	'Error', 00H
	ORG $+2
$SG155121 DB	'Trying to forward an invalid mail message!', 00H
	ORG $+1
$SG155122 DB	'Error', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163066 DD	019930520H
	DD	02H
	DD	FLAT:$T163068
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163068 DD	0ffffffffH
	DD	FLAT:$L163063
	DD	0ffffffffH
	DD	FLAT:$L163064
xdata$x	ENDS
_TEXT	SEGMENT
$T163055 = -24
$T163056 = -28
$T163059 = -32
$T163060 = -36
__$EHRec$ = -12
_nUniqueID$ = 8
_this$ = -40
_pMail$ = -16
_pWnd$155112 = -20
?AuthorForwardMsg@CMailBox@@QAEXH@Z PROC NEAR		; CMailBox::AuthorForwardMsg

; 867  : {

  0201c	55		 push	 ebp
  0201d	8b ec		 mov	 ebp, esp
  0201f	6a ff		 push	 -1
  02021	68 00 00 00 00	 push	 $L163067
  02026	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0202c	50		 push	 eax
  0202d	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02034	83 ec 24	 sub	 esp, 36			; 00000024H
  02037	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 868  : 	//	Find the mail message
; 869  : 	CMailMsg* pMail = CMailMsg::FindByUniqueID ( nUniqueID );

  0203a	8b 45 08	 mov	 eax, DWORD PTR _nUniqueID$[ebp]
  0203d	50		 push	 eax
  0203e	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  02043	83 c4 04	 add	 esp, 4
  02046	89 45 f0	 mov	 DWORD PTR _pMail$[ebp], eax

; 870  : 
; 871  : 	if ( pMail ) {

  02049	83 7d f0 00	 cmp	 DWORD PTR _pMail$[ebp], 0
  0204d	0f 84 d3 00 00
	00		 je	 $L155106

; 872  : 		if ( !m_pAuthoringMsg ) {

  02053	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  02056	83 79 1c 00	 cmp	 DWORD PTR [ecx+28], 0
  0205a	0f 85 b0 00 00
	00		 jne	 $L155107

; 873  : 			m_pAuthoringMsg = new CMailMsg();

  02060	6a 64		 push	 100			; 00000064H
  02062	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02067	83 c4 04	 add	 esp, 4
  0206a	89 45 e4	 mov	 DWORD PTR $T163056[ebp], eax
  0206d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  02074	83 7d e4 00	 cmp	 DWORD PTR $T163056[ebp], 0
  02078	74 0d		 je	 SHORT $L163057
  0207a	8b 4d e4	 mov	 ecx, DWORD PTR $T163056[ebp]
  0207d	e8 00 00 00 00	 call	 ??0CMailMsg@@QAE@XZ	; CMailMsg::CMailMsg
  02082	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  02085	eb 07		 jmp	 SHORT $L163058
$L163057:
  02087	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L163058:
  0208e	8b 55 d4	 mov	 edx, DWORD PTR -44+[ebp]
  02091	89 55 e8	 mov	 DWORD PTR $T163055[ebp], edx
  02094	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0209b	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  0209e	8b 4d e8	 mov	 ecx, DWORD PTR $T163055[ebp]
  020a1	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 874  : 
; 875  : 			m_pAuthoringMsg->CreateForward( *pMail );

  020a4	8b 55 f0	 mov	 edx, DWORD PTR _pMail$[ebp]
  020a7	52		 push	 edx
  020a8	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  020ab	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  020ae	e8 00 00 00 00	 call	 ?CreateForward@CMailMsg@@QAEHAAV1@@Z ; CMailMsg::CreateForward

; 876  : 
; 877  : 			CMailMsgAuthorWnd *pWnd = new CMailMsgAuthorWnd();

  020b3	68 a8 00 00 00	 push	 168			; 000000a8H
  020b8	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  020bd	89 45 dc	 mov	 DWORD PTR $T163060[ebp], eax
  020c0	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  020c7	83 7d dc 00	 cmp	 DWORD PTR $T163060[ebp], 0
  020cb	74 0d		 je	 SHORT $L163061
  020cd	8b 4d dc	 mov	 ecx, DWORD PTR $T163060[ebp]
  020d0	e8 00 00 00 00	 call	 ??0CMailMsgAuthorWnd@@QAE@XZ ; CMailMsgAuthorWnd::CMailMsgAuthorWnd
  020d5	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  020d8	eb 07		 jmp	 SHORT $L163062
$L163061:
  020da	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR -48+[ebp], 0
$L163062:
  020e1	8b 4d d0	 mov	 ecx, DWORD PTR -48+[ebp]
  020e4	89 4d e0	 mov	 DWORD PTR $T163059[ebp], ecx
  020e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  020ee	8b 55 e0	 mov	 edx, DWORD PTR $T163059[ebp]
  020f1	89 55 ec	 mov	 DWORD PTR _pWnd$155112[ebp], edx

; 878  : 			pWnd->Create( m_pAuthoringMsg->GetUniqueID() );

  020f4	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  020f7	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  020fa	e8 00 00 00 00	 call	 ?GetUniqueID@CMailMsg@@QAEHXZ ; CMailMsg::GetUniqueID
  020ff	50		 push	 eax
  02100	8b 4d ec	 mov	 ecx, DWORD PTR _pWnd$155112[ebp]
  02103	8b 11		 mov	 edx, DWORD PTR [ecx]
  02105	8b 4d ec	 mov	 ecx, DWORD PTR _pWnd$155112[ebp]
  02108	ff 92 ec 00 00
	00		 call	 DWORD PTR [edx+236]

; 879  : 		} else {

  0210e	eb 14		 jmp	 SHORT $L155117
$L155107:

; 880  : 			SkinMessage( "Error", "Please finish creating/replying/forwarding the current mail message before trying to do a new one." );

  02110	6a 00		 push	 0
  02112	68 00 00 00 00	 push	 OFFSET FLAT:$SG155118
  02117	68 00 00 00 00	 push	 OFFSET FLAT:$SG155119
  0211c	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  02121	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155117:

; 882  : 	} else {

  02124	eb 14		 jmp	 SHORT $L155120
$L155106:

; 883  : 		SkinMessage( "Error", "Trying to forward an invalid mail message!" );

  02126	6a 00		 push	 0
  02128	68 00 00 00 00	 push	 OFFSET FLAT:$SG155121
  0212d	68 00 00 00 00	 push	 OFFSET FLAT:$SG155122
  02132	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  02137	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155120:

; 885  : }

  0213a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0213d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02144	8b e5		 mov	 esp, ebp
  02146	5d		 pop	 ebp
  02147	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L163063:
  002a7	8b 45 e4	 mov	 eax, DWORD PTR $T163056[ebp]
  002aa	50		 push	 eax
  002ab	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002b0	59		 pop	 ecx
  002b1	c3		 ret	 0
$L163064:
  002b2	8b 45 dc	 mov	 eax, DWORD PTR $T163060[ebp]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  002bb	c3		 ret	 0
$L163067:
  002bc	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163066
  002c1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AuthorForwardMsg@CMailBox@@QAEXH@Z ENDP		; CMailBox::AuthorForwardMsg
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
_TEXT	SEGMENT
_this$ = -4
?ShowManagerWnd@CMailBox@@QAEXXZ PROC NEAR		; CMailBox::ShowManagerWnd

; 889  : {

  0214a	55		 push	 ebp
  0214b	8b ec		 mov	 ebp, esp
  0214d	51		 push	 ecx
  0214e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 890  :     if ( !g_pToonSettings->get_TabDisplay() )

  02151	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  02157	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  0215c	85 c0		 test	 eax, eax
  0215e	75 0d		 jne	 SHORT $L155127

; 892  : 	    g_pMailMgrWnd->ShowWindow( SW_SHOW );

  02160	6a 05		 push	 5
  02162	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  02168	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L155127:

; 894  : }

  0216d	8b e5		 mov	 esp, ebp
  0216f	5d		 pop	 ebp
  02170	c3		 ret	 0
?ShowManagerWnd@CMailBox@@QAEXXZ ENDP			; CMailBox::ShowManagerWnd
_TEXT	ENDS
PUBLIC	?DestroyManagerWnd@CMailBox@@QAEXXZ		; CMailBox::DestroyManagerWnd
_TEXT	SEGMENT
$T163071 = -4
$T163072 = -8
_this$ = -12
?DestroyManagerWnd@CMailBox@@QAEXXZ PROC NEAR		; CMailBox::DestroyManagerWnd

; 898  : {

  02171	55		 push	 ebp
  02172	8b ec		 mov	 ebp, esp
  02174	83 ec 10	 sub	 esp, 16			; 00000010H
  02177	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 899  : 	if ( g_pMailMgrWnd )

  0217a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  02181	74 15		 je	 SHORT $L155132

; 900  : 		g_pMailMgrWnd->CloseSelf();

  02183	6a 00		 push	 0
  02185	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  0218a	8b 10		 mov	 edx, DWORD PTR [eax]
  0218c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  02192	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L155132:

; 901  : 
; 902  : 	if ( m_pAuthoringMsg ) {

  02198	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0219b	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  0219f	74 37		 je	 SHORT $L155133

; 903  : 		delete m_pAuthoringMsg;

  021a1	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  021a4	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  021a7	89 55 f8	 mov	 DWORD PTR $T163072[ebp], edx
  021aa	8b 45 f8	 mov	 eax, DWORD PTR $T163072[ebp]
  021ad	89 45 fc	 mov	 DWORD PTR $T163071[ebp], eax
  021b0	83 7d fc 00	 cmp	 DWORD PTR $T163071[ebp], 0
  021b4	74 11		 je	 SHORT $L163073
  021b6	6a 01		 push	 1
  021b8	8b 4d fc	 mov	 ecx, DWORD PTR $T163071[ebp]
  021bb	8b 11		 mov	 edx, DWORD PTR [ecx]
  021bd	8b 4d fc	 mov	 ecx, DWORD PTR $T163071[ebp]
  021c0	ff 12		 call	 DWORD PTR [edx]
  021c2	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  021c5	eb 07		 jmp	 SHORT $L163074
$L163073:
  021c7	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L163074:

; 904  : 		m_pAuthoringMsg = NULL;

  021ce	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  021d1	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
$L155133:

; 906  : }

  021d8	8b e5		 mov	 esp, ebp
  021da	5d		 pop	 ebp
  021db	c3		 ret	 0
?DestroyManagerWnd@CMailBox@@QAEXXZ ENDP		; CMailBox::DestroyManagerWnd
_TEXT	ENDS
PUBLIC	?SetNoLongerViewed@CMailBox@@QAEXH@Z		; CMailBox::SetNoLongerViewed
_TEXT	SEGMENT
$T163076 = -4
_nUniqueID$ = 8
_this$ = -8
?SetNoLongerViewed@CMailBox@@QAEXH@Z PROC NEAR		; CMailBox::SetNoLongerViewed

; 910  : {

  021dc	55		 push	 ebp
  021dd	8b ec		 mov	 ebp, esp
  021df	83 ec 08	 sub	 esp, 8
  021e2	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 911  : 	//	Check to see if it the authoring message first
; 912  : 	if ( m_pAuthoringMsg && nUniqueID == m_pAuthoringMsg->GetUniqueID() ) {

  021e5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  021e8	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  021ec	74 1c		 je	 SHORT $L155140
  021ee	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  021f1	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  021f4	e8 00 00 00 00	 call	 ?GetUniqueID@CMailMsg@@QAEHXZ ; CMailMsg::GetUniqueID
  021f9	39 45 08	 cmp	 DWORD PTR _nUniqueID$[ebp], eax
  021fc	75 0c		 jne	 SHORT $L155140

; 913  : 		m_pAuthoringMsg = NULL;					//	Clear the authoring message it was just closed.

  021fe	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  02201	c7 42 1c 00 00
	00 00		 mov	 DWORD PTR [edx+28], 0

; 914  : 	} else {

  02208	eb 1e		 jmp	 SHORT $L155141
$L155140:

; 915  : 		m_ViewedMsgList.remove ( CMailMsg::FindByUniqueID( nUniqueID ) );	//	Remove the read message it was just closed.

  0220a	8b 45 08	 mov	 eax, DWORD PTR _nUniqueID$[ebp]
  0220d	50		 push	 eax
  0220e	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  02213	83 c4 04	 add	 esp, 4
  02216	89 45 fc	 mov	 DWORD PTR $T163076[ebp], eax
  02219	8d 4d fc	 lea	 ecx, DWORD PTR $T163076[ebp]
  0221c	51		 push	 ecx
  0221d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  02220	83 c1 10	 add	 ecx, 16			; 00000010H
  02223	e8 00 00 00 00	 call	 ?remove@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::remove
$L155141:

; 917  : }

  02228	8b e5		 mov	 esp, ebp
  0222a	5d		 pop	 ebp
  0222b	c2 04 00	 ret	 4
?SetNoLongerViewed@CMailBox@@QAEXH@Z ENDP		; CMailBox::SetNoLongerViewed
_TEXT	ENDS
PUBLIC	?hasMessages@CMailBox@@QAE_NXZ			; CMailBox::hasMessages
_TEXT	SEGMENT
_this$ = -4
?hasMessages@CMailBox@@QAE_NXZ PROC NEAR		; CMailBox::hasMessages

; 920  : {

  0222e	55		 push	 ebp
  0222f	8b ec		 mov	 ebp, esp
  02231	51		 push	 ecx
  02232	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 921  : 	return m_MsgList.size();

  02235	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02238	83 c1 04	 add	 ecx, 4
  0223b	e8 00 00 00 00	 call	 ?size@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEIXZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::size
  02240	f7 d8		 neg	 eax
  02242	1b c0		 sbb	 eax, eax
  02244	f7 d8		 neg	 eax

; 922  : }

  02246	8b e5		 mov	 esp, ebp
  02248	5d		 pop	 ebp
  02249	c3		 ret	 0
?hasMessages@CMailBox@@QAE_NXZ ENDP			; CMailBox::hasMessages
_TEXT	ENDS
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	?Create@CMailMgrWnd@@UAEHPAVCMailBox@@@Z	; CMailMgrWnd::Create
PUBLIC	?CloseSelf@CMailMgrWnd@@UAEX_N@Z		; CMailMgrWnd::CloseSelf
PUBLIC	?MakeSkinCtrl@CMailMgrWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CMailMgrWnd::MakeSkinCtrl
PUBLIC	??_7CMailMgrWnd@@6B@				; CMailMgrWnd::`vftable'
PUBLIC	??_GCMailMgrWnd@@UAEPAXI@Z			; CMailMgrWnd::`scalar deleting destructor'
PUBLIC	??_ECMailMgrWnd@@UAEPAXI@Z			; CMailMgrWnd::`vector deleting destructor'
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?Next@CSkinWnd@@UAEXXZ				; CSkinWnd::Next
PUBLIC	?Previous@CSkinWnd@@UAEXXZ			; CSkinWnd::Previous
EXTRN	?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinWnd::GetMessageMap
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?GetProcessEvents@CSkinWnd@@MAE_NXZ:NEAR	; CSkinWnd::GetProcessEvents
EXTRN	??0CSkinWnd@@QAE@XZ:NEAR			; CSkinWnd::CSkinWnd
EXTRN	?Disable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Disable
EXTRN	?Enable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Enable
EXTRN	?EnableGameModal@CSkinWnd@@UAEXHPAH@Z:NEAR	; CSkinWnd::EnableGameModal
EXTRN	?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z:NEAR	; CSkinWnd::DisableGameModal
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ProcessRefreshList@CSkinWnd@@UAEHXZ:NEAR	; CSkinWnd::ProcessRefreshList
EXTRN	?UpdateTracking@CSkinWnd@@UAEXXZ:NEAR		; CSkinWnd::UpdateTracking
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CSkinWnd::GetEventSinkMap
;	COMDAT ??_7CMailMgrWnd@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CMailMgrWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CMailMgrWnd::`vftable'
	DD	FLAT:??_ECMailMgrWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CMailMgrWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CMailMgrWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?Create@CMailMgrWnd@@UAEHPAVCMailBox@@@Z
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CMailMgrWnd@@QAE@XZ PROC NEAR			; CMailMgrWnd::CMailMgrWnd

; 929  : {

  0224a	55		 push	 ebp
  0224b	8b ec		 mov	 ebp, esp
  0224d	51		 push	 ecx
  0224e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  02251	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02254	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  02259	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0225c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMailMgrWnd@@6B@ ; CMailMgrWnd::`vftable'

; 930  :     assert( g_pMailMgrWnd == NULL );
; 931  :     g_pMailMgrWnd = this;

  02262	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02265	89 0d 00 00 00
	00		 mov	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, ecx ; g_pMailMgrWnd

; 932  : 
; 933  : 	//	Initialize all variables.
; 934  : 	m_pMailBox  = NULL;

  0226b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0226e	c7 82 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+152], 0

; 935  : 	m_pListCtrl = NULL;

  02278	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0227b	c7 80 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+148], 0

; 936  :     m_pRefresh  = NULL;

  02285	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02288	c7 81 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+156], 0

; 937  : 	m_pArchive	= NULL;

  02292	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02295	c7 82 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+160], 0

; 938  : }

  0229f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  022a2	8b e5		 mov	 esp, ebp
  022a4	5d		 pop	 ebp
  022a5	c3		 ret	 0
??0CMailMgrWnd@@QAE@XZ ENDP				; CMailMgrWnd::CMailMgrWnd
_TEXT	ENDS
PUBLIC	??1CMailMgrWnd@@UAE@XZ				; CMailMgrWnd::~CMailMgrWnd
;	COMDAT ??_GCMailMgrWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMailMgrWnd@@UAEPAXI@Z PROC NEAR			; CMailMgrWnd::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMailMgrWnd@@UAE@XZ	; CMailMgrWnd::~CMailMgrWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L155153
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L155153:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCMailMgrWnd@@UAEPAXI@Z ENDP				; CMailMgrWnd::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSkinWnd@@UAE@XZ:NEAR			; CSkinWnd::~CSkinWnd
;	COMDAT ??1CMailMgrWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMailMgrWnd@@UAE@XZ PROC NEAR			; CMailMgrWnd::~CMailMgrWnd, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CMailMgrWnd@@UAE@XZ ENDP				; CMailMgrWnd::~CMailMgrWnd
_TEXT	ENDS
EXTRN	?CloseSelf@CSkinWnd@@UAEX_N@Z:NEAR		; CSkinWnd::CloseSelf
_TEXT	SEGMENT
_bTransient$ = 8
_this$ = -4
?CloseSelf@CMailMgrWnd@@UAEX_N@Z PROC NEAR		; CMailMgrWnd::CloseSelf

; 942  : {

  022a6	55		 push	 ebp
  022a7	8b ec		 mov	 ebp, esp
  022a9	51		 push	 ecx
  022aa	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 943  :     g_pMailMgrWnd = NULL;

  022ad	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd

; 944  : 
; 945  : 	CSkinWnd::CloseSelf( bTransient );

  022b7	8a 45 08	 mov	 al, BYTE PTR _bTransient$[ebp]
  022ba	50		 push	 eax
  022bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  022be	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 946  : }

  022c3	8b e5		 mov	 esp, ebp
  022c5	5d		 pop	 ebp
  022c6	c2 04 00	 ret	 4
?CloseSelf@CMailMgrWnd@@UAEX_N@Z ENDP			; CMailMgrWnd::CloseSelf
_TEXT	ENDS
PUBLIC	?HandleVerb@CMailMgrWnd@@QAEHHH@Z		; CMailMgrWnd::HandleVerb
PUBLIC	??0CConfirmDlg@@QAE@H@Z				; CConfirmDlg::CConfirmDlg
PUBLIC	??0CArchiveDlg@@QAE@H@Z				; CArchiveDlg::CArchiveDlg
EXTRN	?Create@CDoubleButtonDlg@@QAEHPAD000_N1@Z:NEAR	; CDoubleButtonDlg::Create
_DATA	SEGMENT
	ORG $+2
$SG155176 DB	'Ok', 00H
	ORG $+1
$SG155177 DB	'Cancel', 00H
	ORG $+1
$SG155178 DB	'This archives ALL magic mail from the first message to t'
	DB	'his message.  You will not be able to reply/forward/complain '
	DB	'any of those Magic Mails once this is done.', 00H
	ORG $+3
$SG155179 DB	'Magic Mail Archive', 00H
	ORG $+1
$SG155185 DB	'Ok', 00H
	ORG $+1
$SG155186 DB	'Cancel', 00H
	ORG $+1
$SG155187 DB	'This magic mail will be sent to Customer Service for inv'
	DB	'estigation', 00H
	ORG $+1
$SG155188 DB	'Magic Mail Complaint', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163096 DD	019930520H
	DD	02H
	DD	FLAT:$T163099
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163099 DD	0ffffffffH
	DD	FLAT:$L163093
	DD	0ffffffffH
	DD	FLAT:$L163094
xdata$x	ENDS
_TEXT	SEGMENT
$T163085 = -16
$T163086 = -20
$T163089 = -24
$T163090 = -28
__$EHRec$ = -12
_nVerbID$ = 8
_nUniqueID$ = 12
_this$ = -32
?HandleVerb@CMailMgrWnd@@QAEHHH@Z PROC NEAR		; CMailMgrWnd::HandleVerb

; 950  : {

  022c9	55		 push	 ebp
  022ca	8b ec		 mov	 ebp, esp
  022cc	6a ff		 push	 -1
  022ce	68 00 00 00 00	 push	 $L163097
  022d3	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  022d9	50		 push	 eax
  022da	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  022e1	83 ec 20	 sub	 esp, 32			; 00000020H
  022e4	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 951  : 	switch ( nVerbID ) {

  022e7	8b 45 08	 mov	 eax, DWORD PTR _nVerbID$[ebp]
  022ea	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  022ed	8b 4d dc	 mov	 ecx, DWORD PTR -36+[ebp]
  022f0	81 e9 18 2c 00
	00		 sub	 ecx, 11288		; 00002c18H
  022f6	89 4d dc	 mov	 DWORD PTR -36+[ebp], ecx
  022f9	83 7d dc 03	 cmp	 DWORD PTR -36+[ebp], 3
  022fd	0f 87 f2 00 00
	00		 ja	 $L155166
  02303	8b 55 dc	 mov	 edx, DWORD PTR -36+[ebp]
  02306	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $L163098[edx*4]
$L155169:

; 953  : 			g_pMailBox->RequestMsg( nUniqueID );

  0230d	8b 45 0c	 mov	 eax, DWORD PTR _nUniqueID$[ebp]
  02310	50		 push	 eax
  02311	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  02317	e8 00 00 00 00	 call	 ?RequestMsg@CMailBox@@QAEXH@Z ; CMailBox::RequestMsg

; 955  : 
; 956  : 		break;

  0231c	e9 d4 00 00 00	 jmp	 $L155166
$L155170:

; 959  : 			g_pMailBox->DeleteMsg( nUniqueID );

  02321	8b 4d 0c	 mov	 ecx, DWORD PTR _nUniqueID$[ebp]
  02324	51		 push	 ecx
  02325	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  0232b	e8 00 00 00 00	 call	 ?DeleteMsg@CMailBox@@QAEHH@Z ; CMailBox::DeleteMsg

; 961  : 
; 962  : 		break;

  02330	e9 c0 00 00 00	 jmp	 $L155166
$L155171:

; 965  : 			(new CArchiveDlg( nUniqueID ))->Create( "Magic Mail Archive", "This archives ALL magic mail from the first message to this message.  You will not be able to reply/forward/complain any of those Magic Mails once this is done.", "Cancel", "Ok", true, true );

  02335	68 bc 00 00 00	 push	 188			; 000000bcH
  0233a	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0233f	89 45 ec	 mov	 DWORD PTR $T163086[ebp], eax
  02342	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  02349	83 7d ec 00	 cmp	 DWORD PTR $T163086[ebp], 0
  0234d	74 11		 je	 SHORT $L163087
  0234f	8b 55 0c	 mov	 edx, DWORD PTR _nUniqueID$[ebp]
  02352	52		 push	 edx
  02353	8b 4d ec	 mov	 ecx, DWORD PTR $T163086[ebp]
  02356	e8 00 00 00 00	 call	 ??0CArchiveDlg@@QAE@H@Z	; CArchiveDlg::CArchiveDlg
  0235b	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  0235e	eb 07		 jmp	 SHORT $L163088
$L163087:
  02360	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR -40+[ebp], 0
$L163088:
  02367	8b 45 d8	 mov	 eax, DWORD PTR -40+[ebp]
  0236a	89 45 f0	 mov	 DWORD PTR $T163085[ebp], eax
  0236d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02374	6a 01		 push	 1
  02376	6a 01		 push	 1
  02378	68 00 00 00 00	 push	 OFFSET FLAT:$SG155176
  0237d	68 00 00 00 00	 push	 OFFSET FLAT:$SG155177
  02382	68 00 00 00 00	 push	 OFFSET FLAT:$SG155178
  02387	68 00 00 00 00	 push	 OFFSET FLAT:$SG155179
  0238c	8b 4d f0	 mov	 ecx, DWORD PTR $T163085[ebp]
  0238f	e8 00 00 00 00	 call	 ?Create@CDoubleButtonDlg@@QAEHPAD000_N1@Z ; CDoubleButtonDlg::Create

; 967  : 
; 968  : 		break;

  02394	eb 5f		 jmp	 SHORT $L155166
$L155180:

; 971  : 			(new CConfirmDlg( nUniqueID ))->Create( "Magic Mail Complaint", "This magic mail will be sent to Customer Service for investigation", "Cancel", "Ok", true, true );

  02396	68 bc 00 00 00	 push	 188			; 000000bcH
  0239b	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  023a0	89 45 e4	 mov	 DWORD PTR $T163090[ebp], eax
  023a3	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  023aa	83 7d e4 00	 cmp	 DWORD PTR $T163090[ebp], 0
  023ae	74 11		 je	 SHORT $L163091
  023b0	8b 4d 0c	 mov	 ecx, DWORD PTR _nUniqueID$[ebp]
  023b3	51		 push	 ecx
  023b4	8b 4d e4	 mov	 ecx, DWORD PTR $T163090[ebp]
  023b7	e8 00 00 00 00	 call	 ??0CConfirmDlg@@QAE@H@Z	; CConfirmDlg::CConfirmDlg
  023bc	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  023bf	eb 07		 jmp	 SHORT $L163092
$L163091:
  023c1	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L163092:
  023c8	8b 55 d4	 mov	 edx, DWORD PTR -44+[ebp]
  023cb	89 55 e8	 mov	 DWORD PTR $T163089[ebp], edx
  023ce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  023d5	6a 01		 push	 1
  023d7	6a 01		 push	 1
  023d9	68 00 00 00 00	 push	 OFFSET FLAT:$SG155185
  023de	68 00 00 00 00	 push	 OFFSET FLAT:$SG155186
  023e3	68 00 00 00 00	 push	 OFFSET FLAT:$SG155187
  023e8	68 00 00 00 00	 push	 OFFSET FLAT:$SG155188
  023ed	8b 4d e8	 mov	 ecx, DWORD PTR $T163089[ebp]
  023f0	e8 00 00 00 00	 call	 ?Create@CDoubleButtonDlg@@QAEHPAD000_N1@Z ; CDoubleButtonDlg::Create
$L155166:

; 976  : 
; 977  : 	return true;

  023f5	b8 01 00 00 00	 mov	 eax, 1

; 978  : }

  023fa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  023fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02404	8b e5		 mov	 esp, ebp
  02406	5d		 pop	 ebp
  02407	c2 08 00	 ret	 8
$L163098:
  0240a	00 00 00 00	 DD	 $L155169
  0240e	00 00 00 00	 DD	 $L155170
  02412	00 00 00 00	 DD	 $L155171
  02416	00 00 00 00	 DD	 $L155180
_TEXT	ENDS
text$x	SEGMENT
$L163093:
  002c6	8b 45 ec	 mov	 eax, DWORD PTR $T163086[ebp]
  002c9	50		 push	 eax
  002ca	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  002cf	c3		 ret	 0
$L163094:
  002d0	8b 45 e4	 mov	 eax, DWORD PTR $T163090[ebp]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  002d9	c3		 ret	 0
$L163097:
  002da	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163096
  002df	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HandleVerb@CMailMgrWnd@@QAEHHH@Z ENDP			; CMailMgrWnd::HandleVerb
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	?IsValid@CSkinObj@@QAEHXZ:NEAR			; CSkinObj::IsValid
EXTRN	?SetText@CSkinObj@@QAAHPADZZ:NEAR		; CSkinObj::SetText
EXTRN	?DeleteAllItems@CSkinListCtrl@@QAEHXZ:NEAR	; CSkinListCtrl::DeleteAllItems
EXTRN	?SetWindowTextA@CWnd@@QAEXPBD@Z:NEAR		; CWnd::SetWindowTextA
EXTRN	?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z:NEAR ; CSkinWnd::FindObject
_DATA	SEGMENT
	ORG $+3
$SG155196 DB	'mailtitle', 00H
	ORG $+2
$SG155198 DB	'No messages', 00H
$SG155200 DB	'Mail List - No messages', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163103 DD	019930520H
	DD	01H
	DD	FLAT:$T163105
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163105 DD	0ffffffffH
	DD	FLAT:$L163101
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
_Obj$155194 = -20
?ClearDialog@CMailMgrWnd@@QAEXXZ PROC NEAR		; CMailMgrWnd::ClearDialog

; 982  : {

  0241a	55		 push	 ebp
  0241b	8b ec		 mov	 ebp, esp
  0241d	6a ff		 push	 -1
  0241f	68 00 00 00 00	 push	 $L163104
  02424	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0242a	50		 push	 eax
  0242b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02432	83 ec 0c	 sub	 esp, 12			; 0000000cH
  02435	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 983  :     m_pListCtrl->DeleteAllItems();

  02438	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0243b	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  02441	e8 00 00 00 00	 call	 ?DeleteAllItems@CSkinListCtrl@@QAEHXZ ; CSkinListCtrl::DeleteAllItems

; 984  : 
; 985  :     if ( g_pToonSettings->get_TabDisplay() )

  02446	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0244c	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  02451	85 c0		 test	 eax, eax
  02453	74 46		 je	 SHORT $L155193

; 987  :         CSkinObj Obj = FindObject("mailtitle");

  02455	68 00 00 00 00	 push	 OFFSET FLAT:$SG155196
  0245a	8d 4d ec	 lea	 ecx, DWORD PTR _Obj$155194[ebp]
  0245d	51		 push	 ecx
  0245e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  02461	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  02466	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 988  :         if (Obj.IsValid()) Obj.SetText( "No messages" );

  0246d	8d 4d ec	 lea	 ecx, DWORD PTR _Obj$155194[ebp]
  02470	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  02475	85 c0		 test	 eax, eax
  02477	74 11		 je	 SHORT $L155197
  02479	68 00 00 00 00	 push	 OFFSET FLAT:$SG155198
  0247e	8d 55 ec	 lea	 edx, DWORD PTR _Obj$155194[ebp]
  02481	52		 push	 edx
  02482	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  02487	83 c4 08	 add	 esp, 8
$L155197:

; 989  :     }

  0248a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02491	8d 4d ec	 lea	 ecx, DWORD PTR _Obj$155194[ebp]
  02494	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 990  :     else

  02499	eb 0d		 jmp	 SHORT $L155199
$L155193:

; 992  :     	SetWindowText( "Mail List - No messages" );

  0249b	68 00 00 00 00	 push	 OFFSET FLAT:$SG155200
  024a0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  024a3	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA
$L155199:

; 994  : 
; 995  :     m_pListCtrl->Refresh();

  024a8	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  024ab	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  024b1	83 c1 40	 add	 ecx, 64			; 00000040H
  024b4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  024b7	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  024bd	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  024c0	ff 52 08	 call	 DWORD PTR [edx+8]

; 996  : }

  024c3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  024c6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  024cd	8b e5		 mov	 esp, ebp
  024cf	5d		 pop	 ebp
  024d0	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L163101:
  002e4	8d 4d ec	 lea	 ecx, DWORD PTR _Obj$155194[ebp]
  002e7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002ec	c3		 ret	 0
$L163104:
  002ed	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163103
  002f2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ClearDialog@CMailMgrWnd@@QAEXXZ ENDP			; CMailMgrWnd::ClearDialog
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	?HideTab@CMainPanelWnd@@QAEXHH@Z		; CMainPanelWnd::HideTab
EXTRN	?g_pMainWindow@@3PAVCMainWindow@@A:DWORD	; g_pMainWindow
EXTRN	?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CScrollable::SetScrollBar
EXTRN	?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z:NEAR ; CSkinWnd::CreateChild
EXTRN	?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z:NEAR ; CSkinWnd::CreatePopupChild
EXTRN	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z:NEAR ; CSkinWnd::FindControl
EXTRN	?SetPriority@CSkinWnd@@QAEXH@Z:NEAR		; CSkinWnd::SetPriority
EXTRN	?RestoreLocation@CSkinWnd@@QAE_NXZ:NEAR		; CSkinWnd::RestoreLocation
_BSS	SEGMENT
	ALIGN	4

$SG155208 DB	01H DUP (?)
	ALIGN	4

$SG155212 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG155209 DB	'Tab_Mailbox.skn', 00H
$SG155213 DB	'dlg_Mail.skn', 00H
	ORG $+3
$SG155217 DB	'sb_textscroller', 00H
_DATA	ENDS
_TEXT	SEGMENT
$T163107 = -24
$T163108 = -40
_pMailBox$ = 8
_this$ = -44
_bCreated$ = -8
_pBar$ = -4
?Create@CMailMgrWnd@@UAEHPAVCMailBox@@@Z PROC NEAR	; CMailMgrWnd::Create

; 1000 : {

  024d1	55		 push	 ebp
  024d2	8b ec		 mov	 ebp, esp
  024d4	83 ec 2c	 sub	 esp, 44			; 0000002cH
  024d7	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 1001 :     BOOL bCreated;
; 1002 : 	m_pMailBox = pMailBox;

  024da	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  024dd	8b 4d 08	 mov	 ecx, DWORD PTR _pMailBox$[ebp]
  024e0	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx

; 1003 : 
; 1004 : 	// set the priority of this window
; 1005 : 	SetPriority ( swPriMail );

  024e6	6a 02		 push	 2
  024e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  024eb	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 1006 : 
; 1007 : 	// SNTODO: make skin path data-driven
; 1008 :     if ( g_pToonSettings->get_TabDisplay() )

  024f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  024f6	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  024fb	85 c0		 test	 eax, eax
  024fd	74 31		 je	 SHORT $L155206

; 1010 : 	    bCreated = CreateChild ( "Tab_Mailbox.skn", "", CRect ( 0, 0, 0, 0 ), g_pMainPanelWnd );

  024ff	6a 01		 push	 1
  02501	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  02507	52		 push	 edx
  02508	6a 00		 push	 0
  0250a	6a 00		 push	 0
  0250c	6a 00		 push	 0
  0250e	6a 00		 push	 0
  02510	8d 4d e8	 lea	 ecx, DWORD PTR $T163107[ebp]
  02513	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  02518	50		 push	 eax
  02519	68 00 00 00 00	 push	 OFFSET FLAT:$SG155208
  0251e	68 00 00 00 00	 push	 OFFSET FLAT:$SG155209
  02523	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02526	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  0252b	89 45 f8	 mov	 DWORD PTR _bCreated$[ebp], eax

; 1012 :     else

  0252e	eb 30		 jmp	 SHORT $L155210
$L155206:

; 1014 : 	    bCreated = CreatePopupChild ( "dlg_Mail.skn", "", CRect ( 0, 0, 0, 0 ), g_pMainWindow, FALSE );

  02530	6a 01		 push	 1
  02532	6a 00		 push	 0
  02534	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  02539	50		 push	 eax
  0253a	6a 00		 push	 0
  0253c	6a 00		 push	 0
  0253e	6a 00		 push	 0
  02540	6a 00		 push	 0
  02542	8d 4d d8	 lea	 ecx, DWORD PTR $T163108[ebp]
  02545	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  0254a	50		 push	 eax
  0254b	68 00 00 00 00	 push	 OFFSET FLAT:$SG155212
  02550	68 00 00 00 00	 push	 OFFSET FLAT:$SG155213
  02555	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02558	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  0255d	89 45 f8	 mov	 DWORD PTR _bCreated$[ebp], eax
$L155210:

; 1016 : 
; 1017 : 	if ( FALSE == bCreated ) {

  02560	83 7d f8 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  02564	75 04		 jne	 SHORT $L155214

; 1018 : 		return FALSE;

  02566	33 c0		 xor	 eax, eax
  02568	eb 63		 jmp	 SHORT $L155204
$L155214:

; 1020 : 
; 1021 : 	// find the scrollbar
; 1022 : 	CSkinScrollBar* pBar = (CSkinScrollBar*) FindControl( "sb_textscroller" );

  0256a	68 00 00 00 00	 push	 OFFSET FLAT:$SG155217
  0256f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02572	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  02577	89 45 fc	 mov	 DWORD PTR _pBar$[ebp], eax

; 1023 : 	assert( NULL != pBar );
; 1024 : 
; 1025 : 	//	Setup the scrollbar
; 1026 : 	m_pListCtrl->SetScrollBar( pBar );

  0257a	8b 4d fc	 mov	 ecx, DWORD PTR _pBar$[ebp]
  0257d	51		 push	 ecx
  0257e	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  02581	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  02587	83 c1 54	 add	 ecx, 84			; 00000054H
  0258a	e8 00 00 00 00	 call	 ?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ; CScrollable::SetScrollBar

; 1027 : 
; 1028 : 	//	Restore the previous location of the window
; 1029 :     if ( g_pToonSettings->get_TabDisplay() )

  0258f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  02595	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  0259a	85 c0		 test	 eax, eax
  0259c	74 22		 je	 SHORT $L155219

; 1031 :         g_pMainPanelWnd->SetTabWindow( TID_MAIL, (CWnd *)this );

  0259e	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  025a1	50		 push	 eax
  025a2	6a 04		 push	 4
  025a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  025aa	e8 00 00 00 00	 call	 ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z ; CMainPanelWnd::SetTabWindow

; 1032 :         g_pMainPanelWnd->HideTab( TID_MAIL, false );

  025af	6a 00		 push	 0
  025b1	6a 04		 push	 4
  025b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  025b9	e8 00 00 00 00	 call	 ?HideTab@CMainPanelWnd@@QAEXHH@Z ; CMainPanelWnd::HideTab

; 1034 :     else

  025be	eb 08		 jmp	 SHORT $L155221
$L155219:

; 1036 :         RestoreLocation();

  025c0	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  025c3	e8 00 00 00 00	 call	 ?RestoreLocation@CSkinWnd@@QAE_NXZ ; CSkinWnd::RestoreLocation
$L155221:

; 1038 : 
; 1039 : 	return TRUE;

  025c8	b8 01 00 00 00	 mov	 eax, 1
$L155204:

; 1040 : }

  025cd	8b e5		 mov	 esp, ebp
  025cf	5d		 pop	 ebp
  025d0	c2 04 00	 ret	 4
?Create@CMailMgrWnd@@UAEHPAVCMailBox@@@Z ENDP		; CMailMgrWnd::Create
_TEXT	ENDS
PUBLIC	?AlertTab@CMainPanelWnd@@QAEXH@Z		; CMainPanelWnd::AlertTab
PUBLIC	?GetItemCount@CListCtrl@@QBEHXZ			; CListCtrl::GetItemCount
EXTRN	?SetText@CSkinObj@@QAEHAAVCString@@@Z:NEAR	; CSkinObj::SetText
EXTRN	?AddLine@CSkinListCtrl@@QAAHHHZZ:NEAR		; CSkinListCtrl::AddLine
_DATA	SEGMENT
$SG155239 DB	'No messages', 00H
$SG155241 DB	'1 message', 00H
	ORG $+2
$SG155243 DB	'%d messages', 00H
$SG155247 DB	'mailtitle', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163120 DD	019930520H
	DD	05H
	DD	FLAT:$T163122
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163122 DD	0ffffffffH
	DD	FLAT:$L163114
	DD	00H
	DD	FLAT:$L163115
	DD	01H
	DD	FLAT:$L163116
	DD	02H
	DD	FLAT:$L163117
	DD	03H
	DD	FLAT:$L163118
xdata$x	ENDS
_TEXT	SEGMENT
$T163110 = -80
$T163111 = -84
$T163112 = -88
$T163113 = -92
__$EHRec$ = -12
_msg$ = 8
_this$ = -96
_sFrom$ = -32
_sSubject$ = -68
_sReceived$ = -52
_nSize$ = -16
_sTitle$ = -36
_Obj$155245 = -76
?AddMsg@CMailMgrWnd@@QAEHAAVCMailMsg@@@Z PROC NEAR	; CMailMgrWnd::AddMsg

; 1044 : {

  025d3	55		 push	 ebp
  025d4	8b ec		 mov	 ebp, esp
  025d6	6a ff		 push	 -1
  025d8	68 00 00 00 00	 push	 $L163121
  025dd	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  025e3	50		 push	 eax
  025e4	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  025eb	83 ec 58	 sub	 esp, 88			; 00000058H
  025ee	89 4d a0	 mov	 DWORD PTR _this$[ebp], ecx

; 1045 : 	std::string sFrom;

  025f1	8d 45 b0	 lea	 eax, DWORD PTR $T163110[ebp]
  025f4	50		 push	 eax
  025f5	8d 4d e0	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  025f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  025fe	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1046 : 	std::string sSubject;

  02605	8d 4d ac	 lea	 ecx, DWORD PTR $T163111[ebp]
  02608	51		 push	 ecx
  02609	8d 4d bc	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  0260c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  02612	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1047 : 	std::string sReceived;

  02616	8d 55 a8	 lea	 edx, DWORD PTR $T163112[ebp]
  02619	52		 push	 edx
  0261a	8d 4d cc	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  0261d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  02623	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1048 : 
; 1049 : 	msg.GetFrom( sFrom );

  02627	8d 45 e0	 lea	 eax, DWORD PTR _sFrom$[ebp]
  0262a	50		 push	 eax
  0262b	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  0262e	e8 00 00 00 00	 call	 ?GetFrom@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetFrom

; 1050 : 	msg.GetSubject( sSubject );

  02633	8d 4d bc	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  02636	51		 push	 ecx
  02637	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  0263a	e8 00 00 00 00	 call	 ?GetSubject@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetSubject

; 1051 : 	msg.GetReceived( sReceived );

  0263f	8d 55 cc	 lea	 edx, DWORD PTR _sReceived$[ebp]
  02642	52		 push	 edx
  02643	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  02646	e8 00 00 00 00	 call	 ?GetReceived@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetReceived

; 1052 : 
; 1053 : 	m_pListCtrl->AddLine ( msg.GetUniqueID(), 3, sFrom.c_str(), sSubject.c_str(), sReceived.c_str() );

  0264b	8d 4d cc	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  0264e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  02654	50		 push	 eax
  02655	8d 4d bc	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  02658	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  0265e	50		 push	 eax
  0265f	8d 4d e0	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  02662	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  02668	50		 push	 eax
  02669	6a 03		 push	 3
  0266b	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  0266e	e8 00 00 00 00	 call	 ?GetUniqueID@CMailMsg@@QAEHXZ ; CMailMsg::GetUniqueID
  02673	50		 push	 eax
  02674	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  02677	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  0267d	51		 push	 ecx
  0267e	e8 00 00 00 00	 call	 ?AddLine@CSkinListCtrl@@QAAHHHZZ ; CSkinListCtrl::AddLine
  02683	83 c4 18	 add	 esp, 24			; 00000018H

; 1054 : 
; 1055 : 	//	Set the window text to reflect the number of messages
; 1056 : 	//	Set here so that the server can update at any time.
; 1057 : 	int nSize = m_pListCtrl->GetItemCount();

  02686	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  02689	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  0268f	e8 00 00 00 00	 call	 ?GetItemCount@CListCtrl@@QBEHXZ ; CListCtrl::GetItemCount
  02694	89 45 f0	 mov	 DWORD PTR _nSize$[ebp], eax

; 1058 : 
; 1059 : 	CString sTitle;

  02697	8d 4d dc	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  0269a	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0269f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 1060 : 
; 1061 : 	switch ( nSize ) {

  026a3	8b 45 f0	 mov	 eax, DWORD PTR _nSize$[ebp]
  026a6	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  026a9	83 7d 9c 00	 cmp	 DWORD PTR -100+[ebp], 0
  026ad	74 08		 je	 SHORT $L155238
  026af	83 7d 9c 01	 cmp	 DWORD PTR -100+[ebp], 1
  026b3	74 15		 je	 SHORT $L155240
  026b5	eb 26		 jmp	 SHORT $L155242
$L155238:

; 1062 : 		case 0:
; 1063 : 			sTitle.Format( "No messages" );

  026b7	68 00 00 00 00	 push	 OFFSET FLAT:$SG155239
  026bc	8d 4d dc	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  026bf	51		 push	 ecx
  026c0	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  026c5	83 c4 08	 add	 esp, 8

; 1064 : 			break;

  026c8	eb 28		 jmp	 SHORT $L155235
$L155240:

; 1065 : 		case 1:
; 1066 : 			sTitle.Format( "1 message" );

  026ca	68 00 00 00 00	 push	 OFFSET FLAT:$SG155241
  026cf	8d 55 dc	 lea	 edx, DWORD PTR _sTitle$[ebp]
  026d2	52		 push	 edx
  026d3	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  026d8	83 c4 08	 add	 esp, 8

; 1067 : 			break;

  026db	eb 15		 jmp	 SHORT $L155235
$L155242:

; 1068 : 		default:
; 1069 : 			sTitle.Format( "%d messages", nSize );

  026dd	8b 45 f0	 mov	 eax, DWORD PTR _nSize$[ebp]
  026e0	50		 push	 eax
  026e1	68 00 00 00 00	 push	 OFFSET FLAT:$SG155243
  026e6	8d 4d dc	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  026e9	51		 push	 ecx
  026ea	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  026ef	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155235:

; 1072 : 
; 1073 : 	//	Set the window text to reflect the number of messages
; 1074 :     if ( g_pToonSettings->get_TabDisplay() )

  026f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  026f8	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  026fd	85 c0		 test	 eax, eax
  026ff	74 51		 je	 SHORT $L155244

; 1076 :         CSkinObj Obj = FindObject("mailtitle");

  02701	68 00 00 00 00	 push	 OFFSET FLAT:$SG155247
  02706	8d 55 b4	 lea	 edx, DWORD PTR _Obj$155245[ebp]
  02709	52		 push	 edx
  0270a	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  0270d	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  02712	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 1077 :         if (Obj.IsValid()) Obj.SetText( sTitle );

  02716	8d 4d b4	 lea	 ecx, DWORD PTR _Obj$155245[ebp]
  02719	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  0271e	85 c0		 test	 eax, eax
  02720	74 0c		 je	 SHORT $L155248
  02722	8d 45 dc	 lea	 eax, DWORD PTR _sTitle$[ebp]
  02725	50		 push	 eax
  02726	8d 4d b4	 lea	 ecx, DWORD PTR _Obj$155245[ebp]
  02729	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAEHAAVCString@@@Z ; CSkinObj::SetText
$L155248:

; 1078 :         if (g_pMainPanelWnd) g_pMainPanelWnd->AlertTab( TID_MAIL );

  0272e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A, 0 ; g_pMainPanelWnd
  02735	74 0d		 je	 SHORT $L155249
  02737	6a 04		 push	 4
  02739	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  0273f	e8 00 00 00 00	 call	 ?AlertTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::AlertTab
$L155249:

; 1079 :     }

  02744	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  02748	8d 4d b4	 lea	 ecx, DWORD PTR _Obj$155245[ebp]
  0274b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 1080 :     else

  02750	eb 11		 jmp	 SHORT $L155250
$L155244:

; 1082 :     	SetWindowText( (char*) (LPCSTR) sTitle );

  02752	8d 4d dc	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  02755	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0275a	50		 push	 eax
  0275b	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  0275e	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA
$L155250:

; 1084 : 
; 1085 : 	return TRUE;

  02763	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR $T163113[ebp], 1
  0276a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0276e	8d 4d dc	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  02771	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02776	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0277a	8d 4d cc	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  0277d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  02783	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02787	8d 4d bc	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  0278a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  02790	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02797	8d 4d e0	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  0279a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  027a0	8b 45 a4	 mov	 eax, DWORD PTR $T163113[ebp]

; 1086 : }

  027a3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  027a6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  027ad	8b e5		 mov	 esp, ebp
  027af	5d		 pop	 ebp
  027b0	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L163114:
  002f7	8d 4d e0	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  002fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00300	c3		 ret	 0
$L163115:
  00301	8d 4d bc	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  00304	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0030a	c3		 ret	 0
$L163116:
  0030b	8d 4d cc	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  0030e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00314	c3		 ret	 0
$L163117:
  00315	8d 4d dc	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  00318	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0031d	c3		 ret	 0
$L163118:
  0031e	8d 4d b4	 lea	 ecx, DWORD PTR _Obj$155245[ebp]
  00321	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00326	c3		 ret	 0
$L163121:
  00327	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163120
  0032c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddMsg@CMailMgrWnd@@QAEHAAVCMailMsg@@@Z ENDP		; CMailMgrWnd::AddMsg
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
EXTRN	?FindItem@CSkinListCtrl@@QAEHH@Z:NEAR		; CSkinListCtrl::FindItem
EXTRN	?DeleteItem@CSkinListCtrl@@QAEHH@Z:NEAR		; CSkinListCtrl::DeleteItem
_DATA	SEGMENT
	ORG $+2
$SG155267 DB	'No messages', 00H
$SG155269 DB	'1 message', 00H
	ORG $+2
$SG155271 DB	'%d messages', 00H
$SG155275 DB	'mailtitle', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163130 DD	019930520H
	DD	02H
	DD	FLAT:$T163132
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163132 DD	0ffffffffH
	DD	FLAT:$L163127
	DD	00H
	DD	FLAT:$L163128
xdata$x	ENDS
_TEXT	SEGMENT
$T163126 = -36
__$EHRec$ = -12
_msg$ = 8
_this$ = -40
_nItem$ = -24
_sTitle$ = -20
_nSize$ = -16
_Obj$155273 = -32
?DeleteMsg@CMailMgrWnd@@QAEHAAVCMailMsg@@@Z PROC NEAR	; CMailMgrWnd::DeleteMsg

; 1090 : {

  027b3	55		 push	 ebp
  027b4	8b ec		 mov	 ebp, esp
  027b6	6a ff		 push	 -1
  027b8	68 00 00 00 00	 push	 $L163131
  027bd	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  027c3	50		 push	 eax
  027c4	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  027cb	83 ec 20	 sub	 esp, 32			; 00000020H
  027ce	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 1091 : 	//	Find this mail message
; 1092 : 	int nItem = m_pListCtrl->FindItem( msg.GetUniqueID() );

  027d1	8b 4d 08	 mov	 ecx, DWORD PTR _msg$[ebp]
  027d4	e8 00 00 00 00	 call	 ?GetUniqueID@CMailMsg@@QAEHXZ ; CMailMsg::GetUniqueID
  027d9	50		 push	 eax
  027da	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  027dd	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  027e3	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  027e8	89 45 e8	 mov	 DWORD PTR _nItem$[ebp], eax

; 1093 : 
; 1094 : 	if ( nItem != -1 ) {						//	Found it

  027eb	83 7d e8 ff	 cmp	 DWORD PTR _nItem$[ebp], -1
  027ef	74 12		 je	 SHORT $L155259

; 1095 : 		m_pListCtrl->DeleteItem( nItem );	//	Remove it.

  027f1	8b 4d e8	 mov	 ecx, DWORD PTR _nItem$[ebp]
  027f4	51		 push	 ecx
  027f5	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  027f8	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  027fe	e8 00 00 00 00	 call	 ?DeleteItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::DeleteItem
$L155259:

; 1097 : 
; 1098 : 	CString sTitle;

  02803	8d 4d ec	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  02806	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0280b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1099 : 
; 1100 : 	int nSize = m_pListCtrl->GetItemCount();

  02812	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  02815	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  0281b	e8 00 00 00 00	 call	 ?GetItemCount@CListCtrl@@QBEHXZ ; CListCtrl::GetItemCount
  02820	89 45 f0	 mov	 DWORD PTR _nSize$[ebp], eax

; 1101 : 
; 1102 : 	switch ( nSize ) {

  02823	8b 4d f0	 mov	 ecx, DWORD PTR _nSize$[ebp]
  02826	89 4d d4	 mov	 DWORD PTR -44+[ebp], ecx
  02829	83 7d d4 00	 cmp	 DWORD PTR -44+[ebp], 0
  0282d	74 08		 je	 SHORT $L155266
  0282f	83 7d d4 01	 cmp	 DWORD PTR -44+[ebp], 1
  02833	74 15		 je	 SHORT $L155268
  02835	eb 26		 jmp	 SHORT $L155270
$L155266:

; 1103 : 		case 0:
; 1104 : 			sTitle.Format( "No messages" );

  02837	68 00 00 00 00	 push	 OFFSET FLAT:$SG155267
  0283c	8d 55 ec	 lea	 edx, DWORD PTR _sTitle$[ebp]
  0283f	52		 push	 edx
  02840	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  02845	83 c4 08	 add	 esp, 8

; 1105 : 			break;

  02848	eb 28		 jmp	 SHORT $L155263
$L155268:

; 1106 : 		case 1:
; 1107 : 			sTitle.Format( "1 message" );

  0284a	68 00 00 00 00	 push	 OFFSET FLAT:$SG155269
  0284f	8d 45 ec	 lea	 eax, DWORD PTR _sTitle$[ebp]
  02852	50		 push	 eax
  02853	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  02858	83 c4 08	 add	 esp, 8

; 1108 : 			break;

  0285b	eb 15		 jmp	 SHORT $L155263
$L155270:

; 1109 : 		default:
; 1110 : 			sTitle.Format( "%d messages", nSize );

  0285d	8b 4d f0	 mov	 ecx, DWORD PTR _nSize$[ebp]
  02860	51		 push	 ecx
  02861	68 00 00 00 00	 push	 OFFSET FLAT:$SG155271
  02866	8d 55 ec	 lea	 edx, DWORD PTR _sTitle$[ebp]
  02869	52		 push	 edx
  0286a	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  0286f	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155263:

; 1113 : 
; 1114 : 	//	Set the window text to reflect the number of messages
; 1115 :     if ( g_pToonSettings->get_TabDisplay() )

  02872	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  02878	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  0287d	85 c0		 test	 eax, eax
  0287f	74 3b		 je	 SHORT $L155272

; 1117 :         CSkinObj Obj = FindObject("mailtitle");

  02881	68 00 00 00 00	 push	 OFFSET FLAT:$SG155275
  02886	8d 45 e0	 lea	 eax, DWORD PTR _Obj$155273[ebp]
  02889	50		 push	 eax
  0288a	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0288d	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  02892	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1118 :         if (Obj.IsValid()) Obj.SetText( sTitle );

  02896	8d 4d e0	 lea	 ecx, DWORD PTR _Obj$155273[ebp]
  02899	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  0289e	85 c0		 test	 eax, eax
  028a0	74 0c		 je	 SHORT $L155276
  028a2	8d 4d ec	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  028a5	51		 push	 ecx
  028a6	8d 4d e0	 lea	 ecx, DWORD PTR _Obj$155273[ebp]
  028a9	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAEHAAVCString@@@Z ; CSkinObj::SetText
$L155276:

; 1119 :     }

  028ae	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  028b2	8d 4d e0	 lea	 ecx, DWORD PTR _Obj$155273[ebp]
  028b5	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 1120 :     else

  028ba	eb 11		 jmp	 SHORT $L155277
$L155272:

; 1122 :     	SetWindowText( (char*) (LPCSTR) sTitle );

  028bc	8d 4d ec	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  028bf	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  028c4	50		 push	 eax
  028c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  028c8	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA
$L155277:

; 1124 : 	return TRUE;

  028cd	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR $T163126[ebp], 1
  028d4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  028db	8d 4d ec	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  028de	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  028e3	8b 45 dc	 mov	 eax, DWORD PTR $T163126[ebp]

; 1125 : }

  028e6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  028e9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  028f0	8b e5		 mov	 esp, ebp
  028f2	5d		 pop	 ebp
  028f3	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L163127:
  00331	8d 4d ec	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  00334	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00339	c3		 ret	 0
$L163128:
  0033a	8d 4d e0	 lea	 ecx, DWORD PTR _Obj$155273[ebp]
  0033d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00342	c3		 ret	 0
$L163131:
  00343	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163130
  00348	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?DeleteMsg@CMailMgrWnd@@QAEHAAVCMailMsg@@@Z ENDP	; CMailMgrWnd::DeleteMsg
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
PUBLIC	?Show@CMailMgrWnd@@QAEXXZ			; CMailMgrWnd::Show
_TEXT	SEGMENT
_this$ = -4
?Show@CMailMgrWnd@@QAEXXZ PROC NEAR			; CMailMgrWnd::Show

; 1129 : {

  028f6	55		 push	 ebp
  028f7	8b ec		 mov	 ebp, esp
  028f9	51		 push	 ecx
  028fa	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1130 : 	//	Show the finished window
; 1131 : 	ShowWindow( SW_SHOW );

  028fd	6a 05		 push	 5
  028ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02902	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 1132 : }

  02907	8b e5		 mov	 esp, ebp
  02909	5d		 pop	 ebp
  0290a	c3		 ret	 0
?Show@CMailMgrWnd@@QAEXXZ ENDP				; CMailMgrWnd::Show
_TEXT	ENDS
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
PUBLIC	??0CArchiveBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CArchiveBtn::CArchiveBtn
PUBLIC	??0CSendBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CSendBtn::CSendBtn
PUBLIC	??0CRefreshBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CRefreshBtn::CRefreshBtn
PUBLIC	??8@YG_NABVCString@@PBD@Z			; operator==
PUBLIC	??8@YG_NPBDABVCString@@@Z			; operator==
PUBLIC	??0CMailListCtrl@@QAE@XZ			; CMailListCtrl::CMailListCtrl
EXTRN	?GetName@CSkinObj@@QAE?AVCString@@XZ:NEAR	; CSkinObj::GetName
EXTRN	?Left@CString@@QBE?AV1@H@Z:NEAR			; CString::Left
EXTRN	?Find@CString@@QBEHPBDH@Z:NEAR			; CString::Find
EXTRN	?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z:NEAR ; CSkinListCtrl::Create
EXTRN	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::MakeSkinCtrl
_DATA	SEGMENT
	ORG $+2
$SG155293 DB	'_', 00H
	ORG $+2
$SG155295 DB	'bs_archive', 00H
	ORG $+1
$SG155303 DB	'bs_send', 00H
$SG155311 DB	'bs_refresh', 00H
	ORG $+1
$SG155319 DB	'lc', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163179 DD	019930520H
	DD	07H
	DD	FLAT:$T163181
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163181 DD	0ffffffffH
	DD	FLAT:$L163166
	DD	00H
	DD	FLAT:$L163167
	DD	01H
	DD	FLAT:$L163168
	DD	02H
	DD	FLAT:$L163169
	DD	02H
	DD	FLAT:$L163171
	DD	02H
	DD	FLAT:$L163173
	DD	02H
	DD	FLAT:$L163175
xdata$x	ENDS
_TEXT	SEGMENT
$T163138 = -24
$T163139 = -28
$T163140 = -32
$T163143 = -36
$T163144 = -40
$T163145 = -44
$T163146 = -48
$T163147 = -52
$T163150 = -56
$T163151 = -60
$T163152 = -64
$T163155 = -68
$T163156 = -72
$T163157 = -76
$T163160 = -80
$T163161 = -84
$T163164 = -88
$T163165 = -92
__$EHRec$ = -12
_obj$ = 8
_this$ = -96
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CMailMgrWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CMailMgrWnd::MakeSkinCtrl

; 1136 : {

  0290b	55		 push	 ebp
  0290c	8b ec		 mov	 ebp, esp
  0290e	6a ff		 push	 -1
  02910	68 00 00 00 00	 push	 $L163180
  02915	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0291b	50		 push	 eax
  0291c	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02923	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  02929	89 4d a0	 mov	 DWORD PTR _this$[ebp], ecx
  0292c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1137 : 	// the type of the control is specified by the 3 left characters of the name
; 1138 : 	CString name = obj.GetName();

  02933	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  02936	50		 push	 eax
  02937	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0293a	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  0293f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1139 : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  02943	6a 00		 push	 0
  02945	68 00 00 00 00	 push	 OFFSET FLAT:$SG155293
  0294a	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0294d	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  02952	50		 push	 eax
  02953	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  02956	51		 push	 ecx
  02957	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0295a	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  0295f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1140 : 
; 1141 : 	// handle the archive button
; 1142 : 	if ( name == "bs_archive" ) {

  02963	68 00 00 00 00	 push	 OFFSET FLAT:$SG155295
  02968	8d 55 f0	 lea	 edx, DWORD PTR _name$[ebp]
  0296b	52		 push	 edx
  0296c	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02971	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02976	85 c0		 test	 eax, eax
  02978	0f 84 9a 00 00
	00		 je	 $L155294

; 1143 : 		m_pArchive = new CArchiveBtn ( obj, this );

  0297e	6a 14		 push	 20			; 00000014H
  02980	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02985	83 c4 04	 add	 esp, 4
  02988	89 45 e4	 mov	 DWORD PTR $T163139[ebp], eax
  0298b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0298f	83 7d e4 00	 cmp	 DWORD PTR $T163139[ebp], 0
  02993	74 2b		 je	 SHORT $L163141
  02995	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  02998	50		 push	 eax
  02999	83 ec 08	 sub	 esp, 8
  0299c	8b cc		 mov	 ecx, esp
  0299e	89 65 e0	 mov	 DWORD PTR $T163140[ebp], esp
  029a1	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  029a4	52		 push	 edx
  029a5	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  029aa	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  029ad	8b 4d e4	 mov	 ecx, DWORD PTR $T163139[ebp]
  029b0	e8 00 00 00 00	 call	 ??0CArchiveBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CArchiveBtn::CArchiveBtn
  029b5	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  029b8	8b 45 98	 mov	 eax, DWORD PTR -104+[ebp]
  029bb	89 45 94	 mov	 DWORD PTR -108+[ebp], eax
  029be	eb 07		 jmp	 SHORT $L163142
$L163141:
  029c0	c7 45 94 00 00
	00 00		 mov	 DWORD PTR -108+[ebp], 0
$L163142:
  029c7	8b 4d 94	 mov	 ecx, DWORD PTR -108+[ebp]
  029ca	89 4d e8	 mov	 DWORD PTR $T163138[ebp], ecx
  029cd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  029d1	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  029d4	8b 45 e8	 mov	 eax, DWORD PTR $T163138[ebp]
  029d7	89 82 a0 00 00
	00		 mov	 DWORD PTR [edx+160], eax

; 1144 : 		return m_pArchive;

  029dd	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  029e0	8b 91 a0 00 00
	00		 mov	 edx, DWORD PTR [ecx+160]
  029e6	89 55 dc	 mov	 DWORD PTR $T163143[ebp], edx
  029e9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  029ed	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  029f0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  029f5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  029f9	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  029fc	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02a01	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02a08	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02a0b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02a10	8b 45 dc	 mov	 eax, DWORD PTR $T163143[ebp]
  02a13	e9 b1 02 00 00	 jmp	 $L155288
$L155294:

; 1146 : 
; 1147 : 	// handle the send button
; 1148 : 	if ( name == "bs_send" ) {

  02a18	68 00 00 00 00	 push	 OFFSET FLAT:$SG155303
  02a1d	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  02a20	50		 push	 eax
  02a21	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02a26	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02a2b	85 c0		 test	 eax, eax
  02a2d	0f 84 88 00 00
	00		 je	 $L155302

; 1149 : 		return new CSendBtn ( obj, this );

  02a33	6a 14		 push	 20			; 00000014H
  02a35	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02a3a	83 c4 04	 add	 esp, 4
  02a3d	89 45 d0	 mov	 DWORD PTR $T163146[ebp], eax
  02a40	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  02a44	83 7d d0 00	 cmp	 DWORD PTR $T163146[ebp], 0
  02a48	74 2b		 je	 SHORT $L163148
  02a4a	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  02a4d	51		 push	 ecx
  02a4e	83 ec 08	 sub	 esp, 8
  02a51	8b cc		 mov	 ecx, esp
  02a53	89 65 cc	 mov	 DWORD PTR $T163147[ebp], esp
  02a56	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  02a59	52		 push	 edx
  02a5a	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02a5f	89 45 90	 mov	 DWORD PTR -112+[ebp], eax
  02a62	8b 4d d0	 mov	 ecx, DWORD PTR $T163146[ebp]
  02a65	e8 00 00 00 00	 call	 ??0CSendBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSendBtn::CSendBtn
  02a6a	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  02a6d	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  02a70	89 45 88	 mov	 DWORD PTR -120+[ebp], eax
  02a73	eb 07		 jmp	 SHORT $L163149
$L163148:
  02a75	c7 45 88 00 00
	00 00		 mov	 DWORD PTR -120+[ebp], 0
$L163149:
  02a7c	8b 4d 88	 mov	 ecx, DWORD PTR -120+[ebp]
  02a7f	89 4d d4	 mov	 DWORD PTR $T163145[ebp], ecx
  02a82	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02a86	8b 55 d4	 mov	 edx, DWORD PTR $T163145[ebp]
  02a89	89 55 d8	 mov	 DWORD PTR $T163144[ebp], edx
  02a8c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02a90	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  02a93	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02a98	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02a9c	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  02a9f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02aa4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02aab	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02aae	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02ab3	8b 45 d8	 mov	 eax, DWORD PTR $T163144[ebp]
  02ab6	e9 0e 02 00 00	 jmp	 $L155288
$L155302:

; 1151 : 
; 1152 : 	// handle the send button
; 1153 : 	if ( name == "bs_refresh" ) {

  02abb	68 00 00 00 00	 push	 OFFSET FLAT:$SG155311
  02ac0	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  02ac3	50		 push	 eax
  02ac4	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  02ac9	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02ace	85 c0		 test	 eax, eax
  02ad0	0f 84 a3 00 00
	00		 je	 $L155310

; 1154 : 		m_pRefresh = new CRefreshBtn ( obj, this );

  02ad6	6a 14		 push	 20			; 00000014H
  02ad8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02add	83 c4 04	 add	 esp, 4
  02ae0	89 45 c4	 mov	 DWORD PTR $T163151[ebp], eax
  02ae3	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  02ae7	83 7d c4 00	 cmp	 DWORD PTR $T163151[ebp], 0
  02aeb	74 2e		 je	 SHORT $L163153
  02aed	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  02af0	51		 push	 ecx
  02af1	83 ec 08	 sub	 esp, 8
  02af4	8b cc		 mov	 ecx, esp
  02af6	89 65 c0	 mov	 DWORD PTR $T163152[ebp], esp
  02af9	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  02afc	52		 push	 edx
  02afd	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02b02	89 45 84	 mov	 DWORD PTR -124+[ebp], eax
  02b05	8b 4d c4	 mov	 ecx, DWORD PTR $T163151[ebp]
  02b08	e8 00 00 00 00	 call	 ??0CRefreshBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CRefreshBtn::CRefreshBtn
  02b0d	89 45 80	 mov	 DWORD PTR -128+[ebp], eax
  02b10	8b 45 80	 mov	 eax, DWORD PTR -128+[ebp]
  02b13	89 85 7c ff ff
	ff		 mov	 DWORD PTR -132+[ebp], eax
  02b19	eb 0a		 jmp	 SHORT $L163154
$L163153:
  02b1b	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -132+[ebp], 0
$L163154:
  02b25	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR -132+[ebp]
  02b2b	89 4d c8	 mov	 DWORD PTR $T163150[ebp], ecx
  02b2e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02b32	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  02b35	8b 45 c8	 mov	 eax, DWORD PTR $T163150[ebp]
  02b38	89 82 9c 00 00
	00		 mov	 DWORD PTR [edx+156], eax

; 1155 :         return m_pRefresh;

  02b3e	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  02b41	8b 91 9c 00 00
	00		 mov	 edx, DWORD PTR [ecx+156]
  02b47	89 55 bc	 mov	 DWORD PTR $T163155[ebp], edx
  02b4a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02b4e	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  02b51	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02b56	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02b5a	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  02b5d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02b62	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02b69	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02b6c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02b71	8b 45 bc	 mov	 eax, DWORD PTR $T163155[ebp]
  02b74	e9 50 01 00 00	 jmp	 $L155288
$L155310:

; 1157 : 
; 1158 : 	if ( "lc" == id ) {

  02b79	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  02b7c	50		 push	 eax
  02b7d	68 00 00 00 00	 push	 OFFSET FLAT:$SG155319
  02b82	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  02b87	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02b8c	85 c0		 test	 eax, eax
  02b8e	0f 84 dd 00 00
	00		 je	 $L155318

; 1159 : 		// create the list control...
; 1160 : 		m_pListCtrl = new CMailListCtrl();

  02b94	68 b4 00 00 00	 push	 180			; 000000b4H
  02b99	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  02b9e	89 45 b4	 mov	 DWORD PTR $T163157[ebp], eax
  02ba1	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  02ba5	83 7d b4 00	 cmp	 DWORD PTR $T163157[ebp], 0
  02ba9	74 10		 je	 SHORT $L163158
  02bab	8b 4d b4	 mov	 ecx, DWORD PTR $T163157[ebp]
  02bae	e8 00 00 00 00	 call	 ??0CMailListCtrl@@QAE@XZ ; CMailListCtrl::CMailListCtrl
  02bb3	89 85 78 ff ff
	ff		 mov	 DWORD PTR -136+[ebp], eax
  02bb9	eb 0a		 jmp	 SHORT $L163159
$L163158:
  02bbb	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -136+[ebp], 0
$L163159:
  02bc5	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR -136+[ebp]
  02bcb	89 4d b8	 mov	 DWORD PTR $T163156[ebp], ecx
  02bce	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02bd2	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  02bd5	8b 45 b8	 mov	 eax, DWORD PTR $T163156[ebp]
  02bd8	89 82 94 00 00
	00		 mov	 DWORD PTR [edx+148], eax

; 1161 : 		m_pListCtrl->Create ( obj, this, 666 );

  02bde	6a 00		 push	 0
  02be0	6a 01		 push	 1
  02be2	6a 01		 push	 1
  02be4	68 9a 02 00 00	 push	 666			; 0000029aH
  02be9	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  02bec	51		 push	 ecx
  02bed	83 ec 08	 sub	 esp, 8
  02bf0	8b cc		 mov	 ecx, esp
  02bf2	89 65 b0	 mov	 DWORD PTR $T163160[ebp], esp
  02bf5	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  02bf8	52		 push	 edx
  02bf9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02bfe	89 85 74 ff ff
	ff		 mov	 DWORD PTR -140+[ebp], eax
  02c04	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  02c07	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  02c0d	e8 00 00 00 00	 call	 ?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z ; CSkinListCtrl::Create

; 1162 : 
; 1163 : 		return m_pListCtrl;

  02c12	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  02c15	83 b9 94 00 00
	00 00		 cmp	 DWORD PTR [ecx+148], 0
  02c1c	74 14		 je	 SHORT $L163162
  02c1e	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  02c21	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  02c27	83 c0 40	 add	 eax, 64			; 00000040H
  02c2a	89 85 70 ff ff
	ff		 mov	 DWORD PTR -144+[ebp], eax
  02c30	eb 0a		 jmp	 SHORT $L163163
$L163162:
  02c32	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -144+[ebp], 0
$L163163:
  02c3c	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR -144+[ebp]
  02c42	89 4d ac	 mov	 DWORD PTR $T163161[ebp], ecx
  02c45	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02c49	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  02c4c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02c51	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02c55	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  02c58	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02c5d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02c64	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02c67	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02c6c	8b 45 ac	 mov	 eax, DWORD PTR $T163161[ebp]
  02c6f	eb 58		 jmp	 SHORT $L155288
$L155318:

; 1165 : 
; 1166 : 	return CSkinWnd::MakeSkinCtrl( obj );

  02c71	83 ec 08	 sub	 esp, 8
  02c74	8b cc		 mov	 ecx, esp
  02c76	89 65 a4	 mov	 DWORD PTR $T163165[ebp], esp
  02c79	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  02c7c	52		 push	 edx
  02c7d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02c82	89 85 6c ff ff
	ff		 mov	 DWORD PTR -148+[ebp], eax
  02c88	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  02c8b	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  02c90	89 85 68 ff ff
	ff		 mov	 DWORD PTR -152+[ebp], eax
  02c96	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR -152+[ebp]
  02c9c	89 45 a8	 mov	 DWORD PTR $T163164[ebp], eax
  02c9f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02ca3	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  02ca6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02cab	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02caf	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  02cb2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02cb7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02cbe	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02cc1	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02cc6	8b 45 a8	 mov	 eax, DWORD PTR $T163164[ebp]
$L155288:

; 1167 : }

  02cc9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02ccc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02cd3	8b e5		 mov	 esp, ebp
  02cd5	5d		 pop	 ebp
  02cd6	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L163166:
  0034d	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00350	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00355	c3		 ret	 0
$L163167:
  00356	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00359	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0035e	c3		 ret	 0
$L163168:
  0035f	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00362	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00367	c3		 ret	 0
$L163169:
  00368	8b 45 e4	 mov	 eax, DWORD PTR $T163139[ebp]
  0036b	50		 push	 eax
  0036c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00371	59		 pop	 ecx
  00372	c3		 ret	 0
$L163171:
  00373	8b 45 d0	 mov	 eax, DWORD PTR $T163146[ebp]
  00376	50		 push	 eax
  00377	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0037c	59		 pop	 ecx
  0037d	c3		 ret	 0
$L163173:
  0037e	8b 45 c4	 mov	 eax, DWORD PTR $T163151[ebp]
  00381	50		 push	 eax
  00382	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00387	59		 pop	 ecx
  00388	c3		 ret	 0
$L163175:
  00389	8b 45 b4	 mov	 eax, DWORD PTR $T163157[ebp]
  0038c	50		 push	 eax
  0038d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00392	c3		 ret	 0
$L163180:
  00393	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163179
  00398	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CMailMgrWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CMailMgrWnd::MakeSkinCtrl
PUBLIC	?GetItemTextColor@CSkinListCtrl@@MAEKH@Z	; CSkinListCtrl::GetItemTextColor
PUBLIC	?GetItemBGColor@CSkinListCtrl@@MAEKH@Z		; CSkinListCtrl::GetItemBGColor
PUBLIC	??_ECMailListCtrl@@WEA@AEPAXI@Z			; CMailListCtrl::`vector deleting destructor'
PUBLIC	??_ECMailListCtrl@@WHE@AEPAXI@Z			; CMailListCtrl::`vector deleting destructor'
PUBLIC	?OnItemActivate@CMailListCtrl@@UAEXH_N@Z	; CMailListCtrl::OnItemActivate
PUBLIC	??_7CMailListCtrl@@6BCListCtrl@@@		; CMailListCtrl::`vftable'
PUBLIC	??_7CMailListCtrl@@6BCSkinCtrl@@@		; CMailListCtrl::`vftable'
PUBLIC	??_7CMailListCtrl@@6BCScrollable@@@		; CMailListCtrl::`vftable'
PUBLIC	??_7CMailListCtrl@@6BCMouseWheelable@@@		; CMailListCtrl::`vftable'
PUBLIC	??_GCMailListCtrl@@UAEPAXI@Z			; CMailListCtrl::`scalar deleting destructor'
PUBLIC	??_ECMailListCtrl@@UAEPAXI@Z			; CMailListCtrl::`vector deleting destructor'
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?Refresh@CSkinCtrl@@UAEXXZ:NEAR			; CSkinCtrl::Refresh
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
EXTRN	?OnMouseDown@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseDown
EXTRN	?OnMouseUp@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseUp
EXTRN	?OnActivate@CSkinCtrl@@UAEXFF@Z:NEAR		; CSkinCtrl::OnActivate
EXTRN	??0CSkinListCtrl@@QAE@H@Z:NEAR			; CSkinListCtrl::CSkinListCtrl
EXTRN	?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ:NEAR ; CListCtrl::GetRuntimeClass
EXTRN	?UpdateMe@CSkinListCtrl@@UAEXXZ:NEAR		; CSkinListCtrl::UpdateMe
EXTRN	?UpdateScrollBar@CSkinListCtrl@@UAEXXZ:NEAR	; CSkinListCtrl::UpdateScrollBar
EXTRN	?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z:NEAR	; CSkinListCtrl::OnMouseWheel
EXTRN	?OnMouseOver@CSkinListCtrl@@UAEXVCPoint@@@Z:NEAR ; CSkinListCtrl::OnMouseOver
EXTRN	?GetMessageMap@CSkinListCtrl@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinListCtrl::GetMessageMap
EXTRN	?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:NEAR ; CListCtrl::DrawItem
EXTRN	?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z:NEAR	; CListCtrl::OnChildNotify
EXTRN	?SetLocation@CScrollable@@UAEXM@Z:NEAR		; CScrollable::SetLocation
EXTRN	?ChangeLocation@CScrollable@@UAEXH@Z:NEAR	; CScrollable::ChangeLocation
EXTRN	?ChangePage@CScrollable@@UAEXH@Z:NEAR		; CScrollable::ChangePage
EXTRN	?SetRange@CScrollable@@UAEXHH@Z:NEAR		; CScrollable::SetRange
;	COMDAT ??_7CMailListCtrl@@6BCListCtrl@@@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CMailListCtrl@@6BCListCtrl@@@ DD FLAT:?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ ; CMailListCtrl::`vftable'
	DD	FLAT:??_ECMailListCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinListCtrl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?GetItemTextColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?OnItemActivate@CMailListCtrl@@UAEXH_N@Z
	DD	FLAT:?OnMouseOver@CSkinListCtrl@@UAEXVCPoint@@@Z
CONST	ENDS
;	COMDAT ??_7CMailListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CMailListCtrl@@6BCSkinCtrl@@@ DD FLAT:??_ECMailListCtrl@@WEA@AEPAXI@Z ; CMailListCtrl::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CMailListCtrl@@6BCScrollable@@@
CONST	SEGMENT
??_7CMailListCtrl@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinListCtrl@@UAEXXZ ; CMailListCtrl::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CScrollable@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CSkinListCtrl@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CMailListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CMailListCtrl@@6BCMouseWheelable@@@ DD FLAT:??_ECMailListCtrl@@WHE@AEPAXI@Z ; CMailListCtrl::`vftable'
	DD	FLAT:?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z
CONST	ENDS
;	COMDAT ??0CMailListCtrl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMailListCtrl@@QAE@XZ PROC NEAR			; CMailListCtrl::CMailListCtrl, COMDAT

; 42   : 	CMailListCtrl() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 5a		 push	 90			; 0000005aH
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CSkinListCtrl@@QAE@H@Z ; CSkinListCtrl::CSkinListCtrl
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMailListCtrl@@6BCListCtrl@@@ ; CMailListCtrl::`vftable'
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CMailListCtrl@@6BCSkinCtrl@@@ ; CMailListCtrl::`vftable'
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	c7 42 54 00 00
	00 00		 mov	 DWORD PTR [edx+84], OFFSET FLAT:??_7CMailListCtrl@@6BCScrollable@@@ ; CMailListCtrl::`vftable'
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CMailListCtrl@@6BCMouseWheelable@@@ ; CMailListCtrl::`vftable'
  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??0CMailListCtrl@@QAE@XZ ENDP				; CMailListCtrl::CMailListCtrl
_TEXT	ENDS
EXTRN	??0CMailVerbDialog@@QAE@XZ:NEAR			; CMailVerbDialog::CMailVerbDialog
EXTRN	?GetItemData@CListCtrl@@QBEKH@Z:NEAR		; CListCtrl::GetItemData
;	COMDAT xdata$x
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
xdata$x	SEGMENT
$T163195 DD	019930520H
	DD	01H
	DD	FLAT:$T163197
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163197 DD	0ffffffffH
	DD	FLAT:$L163193
xdata$x	ENDS
;	COMDAT ?OnItemActivate@CMailListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT
$T163185 = -28
$T163186 = -32
$T163189 = -36
$T163190 = -40
__$EHRec$ = -12
_nItemIndex$ = 8
_bDoubleClick$ = 12
_this$ = -44
_nUniqueID$154544 = -16
_nUniqueID$154547 = -20
_pVerbDlg$154548 = -24
?OnItemActivate@CMailListCtrl@@UAEXH_N@Z PROC NEAR	; CMailListCtrl::OnItemActivate, COMDAT

; 45   : 	virtual void OnItemActivate ( int nItemIndex, bool bDoubleClick ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163196
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 28	 sub	 esp, 40			; 00000028H
  0001b	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 46   : 		if ( bDoubleClick ) {

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _bDoubleClick$[ebp]
  00021	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00026	85 c0		 test	 eax, eax
  00028	74 32		 je	 SHORT $L154543

; 47   : 			int nUniqueID = GetItemData( nItemIndex );

  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _nItemIndex$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  00036	89 45 f0	 mov	 DWORD PTR _nUniqueID$154544[ebp], eax

; 48   : 
; 49   : 			if ( g_pMailBox->CanRequestMsg() )

  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  0003f	e8 00 00 00 00	 call	 ?CanRequestMsg@CMailBox@@QAEHXZ ; CMailBox::CanRequestMsg
  00044	85 c0		 test	 eax, eax
  00046	74 0f		 je	 SHORT $L154545

; 50   : 				g_pMailBox->RequestMsg( nUniqueID );

  00048	8b 55 f0	 mov	 edx, DWORD PTR _nUniqueID$154544[ebp]
  0004b	52		 push	 edx
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  00052	e8 00 00 00 00	 call	 ?RequestMsg@CMailBox@@QAEXH@Z ; CMailBox::RequestMsg
$L154545:

; 51   : 		} else {

  00057	e9 91 00 00 00	 jmp	 $L163192
$L154543:

; 52   : 			int nUniqueID = GetItemData( nItemIndex );

  0005c	8b 45 08	 mov	 eax, DWORD PTR _nItemIndex$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  00068	89 45 ec	 mov	 DWORD PTR _nUniqueID$154547[ebp], eax

; 53   : 
; 54   : 			// create a new verb dialog...
; 55   : 			CMailVerbDialog *pVerbDlg = new CMailVerbDialog();

  0006b	68 ec 00 00 00	 push	 236			; 000000ecH
  00070	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00075	89 45 e0	 mov	 DWORD PTR $T163186[ebp], eax
  00078	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007f	83 7d e0 00	 cmp	 DWORD PTR $T163186[ebp], 0
  00083	74 0d		 je	 SHORT $L163187
  00085	8b 4d e0	 mov	 ecx, DWORD PTR $T163186[ebp]
  00088	e8 00 00 00 00	 call	 ??0CMailVerbDialog@@QAE@XZ ; CMailVerbDialog::CMailVerbDialog
  0008d	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  00090	eb 07		 jmp	 SHORT $L163188
$L163187:
  00092	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR -48+[ebp], 0
$L163188:
  00099	8b 4d d0	 mov	 ecx, DWORD PTR -48+[ebp]
  0009c	89 4d e4	 mov	 DWORD PTR $T163185[ebp], ecx
  0009f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a6	8b 55 e4	 mov	 edx, DWORD PTR $T163185[ebp]
  000a9	89 55 e8	 mov	 DWORD PTR _pVerbDlg$154548[ebp], edx

; 56   : 			if ( !pVerbDlg->Create ( nUniqueID ) )

  000ac	8b 45 ec	 mov	 eax, DWORD PTR _nUniqueID$154547[ebp]
  000af	50		 push	 eax
  000b0	8b 4d e8	 mov	 ecx, DWORD PTR _pVerbDlg$154548[ebp]
  000b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b5	8b 4d e8	 mov	 ecx, DWORD PTR _pVerbDlg$154548[ebp]
  000b8	ff 92 fc 00 00
	00		 call	 DWORD PTR [edx+252]
  000be	85 c0		 test	 eax, eax
  000c0	75 2b		 jne	 SHORT $L163192

; 57   : 				delete pVerbDlg;

  000c2	8b 45 e8	 mov	 eax, DWORD PTR _pVerbDlg$154548[ebp]
  000c5	89 45 d8	 mov	 DWORD PTR $T163190[ebp], eax
  000c8	8b 4d d8	 mov	 ecx, DWORD PTR $T163190[ebp]
  000cb	89 4d dc	 mov	 DWORD PTR $T163189[ebp], ecx
  000ce	83 7d dc 00	 cmp	 DWORD PTR $T163189[ebp], 0
  000d2	74 12		 je	 SHORT $L163191
  000d4	6a 01		 push	 1
  000d6	8b 55 dc	 mov	 edx, DWORD PTR $T163189[ebp]
  000d9	8b 02		 mov	 eax, DWORD PTR [edx]
  000db	8b 4d dc	 mov	 ecx, DWORD PTR $T163189[ebp]
  000de	ff 50 04	 call	 DWORD PTR [eax+4]
  000e1	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  000e4	eb 07		 jmp	 SHORT $L163192
$L163191:
  000e6	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR -52+[ebp], 0
$L163192:

; 59   : 	};

  000ed	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163193:
  00000	8b 45 e0	 mov	 eax, DWORD PTR $T163186[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00009	c3		 ret	 0
$L163196:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163195
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnItemActivate@CMailListCtrl@@UAEXH_N@Z ENDP		; CMailListCtrl::OnItemActivate
PUBLIC	??1CMailListCtrl@@UAE@XZ			; CMailListCtrl::~CMailListCtrl
;	COMDAT ??_GCMailListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMailListCtrl@@UAEPAXI@Z PROC NEAR			; CMailListCtrl::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMailListCtrl@@UAE@XZ ; CMailListCtrl::~CMailListCtrl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L154559
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L154559:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCMailListCtrl@@UAEPAXI@Z ENDP			; CMailListCtrl::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSkinListCtrl@@UAE@XZ:NEAR			; CSkinListCtrl::~CSkinListCtrl
;	COMDAT ??1CMailListCtrl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMailListCtrl@@UAE@XZ PROC NEAR			; CMailListCtrl::~CMailListCtrl, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinListCtrl@@UAE@XZ ; CSkinListCtrl::~CSkinListCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CMailListCtrl@@UAE@XZ ENDP				; CMailListCtrl::~CMailListCtrl
_TEXT	ENDS
_TEXT	SEGMENT
_$E357	PROC NEAR
  02cd9	55		 push	 ebp
  02cda	8b ec		 mov	 ebp, esp
  02cdc	e8 00 00 00 00	 call	 _$E353
  02ce1	e8 00 00 00 00	 call	 _$E356
  02ce6	5d		 pop	 ebp
  02ce7	c3		 ret	 0
_$E357	ENDP
_TEXT	ENDS
PUBLIC	??0?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsgWnd@@@1@@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >
_TEXT	SEGMENT
$T163205 = -4
$T163206 = -8
_$E353	PROC NEAR

; 1174 : std::map<int, CMailMsgWnd *> CMailMsgWnd::m_UniqueIDMap;

  02ce8	55		 push	 ebp
  02ce9	8b ec		 mov	 ebp, esp
  02ceb	83 ec 08	 sub	 esp, 8
  02cee	8d 45 fc	 lea	 eax, DWORD PTR $T163205[ebp]
  02cf1	50		 push	 eax
  02cf2	8d 4d f8	 lea	 ecx, DWORD PTR $T163206[ebp]
  02cf5	51		 push	 ecx
  02cf6	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsgWnd@@2V?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@A
  02cfb	e8 00 00 00 00	 call	 ??0?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsgWnd@@@1@@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >
  02d00	8b e5		 mov	 esp, ebp
  02d02	5d		 pop	 ebp
  02d03	c3		 ret	 0
_$E353	ENDP
_$E356	PROC NEAR
  02d04	55		 push	 ebp
  02d05	8b ec		 mov	 ebp, esp
  02d07	68 00 00 00 00	 push	 OFFSET FLAT:_$E354
  02d0c	e8 00 00 00 00	 call	 _atexit
  02d11	83 c4 04	 add	 esp, 4
  02d14	5d		 pop	 ebp
  02d15	c3		 ret	 0
_$E356	ENDP
_TEXT	ENDS
PUBLIC	??1?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@XZ ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::~map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >
_BSS	SEGMENT
	ALIGN	4

_$S355	DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_$E354	PROC NEAR
  02d16	55		 push	 ebp
  02d17	8b ec		 mov	 ebp, esp
  02d19	33 c0		 xor	 eax, eax
  02d1b	a0 00 00 00 00	 mov	 al, BYTE PTR _$S355
  02d20	83 e0 01	 and	 eax, 1
  02d23	85 c0		 test	 eax, eax
  02d25	75 19		 jne	 SHORT $L155342
  02d27	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR _$S355
  02d2d	80 c9 01	 or	 cl, 1
  02d30	88 0d 00 00 00
	00		 mov	 BYTE PTR _$S355, cl
  02d36	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsgWnd@@2V?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@A
  02d3b	e8 00 00 00 00	 call	 ??1?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@XZ ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::~map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >
$L155342:
  02d40	5d		 pop	 ebp
  02d41	c3		 ret	 0
_$E354	ENDP
_TEXT	ENDS
PUBLIC	??1?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::~_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >
;	COMDAT ??1?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@XZ PROC NEAR ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::~map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::~_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@XZ ENDP ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::~map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >
_TEXT	ENDS
PUBLIC	??A?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEAAPAVCMailMsgWnd@@ABH@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::operator[]
_TEXT	SEGMENT
_nUniqueID$ = 8
?FindByUniqueID@CMailMsgWnd@@SAPAV1@H@Z PROC NEAR	; CMailMsgWnd::FindByUniqueID

; 1178 : {

  02d42	55		 push	 ebp
  02d43	8b ec		 mov	 ebp, esp

; 1179 : 	return m_UniqueIDMap [ nUniqueID ];

  02d45	8d 45 08	 lea	 eax, DWORD PTR _nUniqueID$[ebp]
  02d48	50		 push	 eax
  02d49	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsgWnd@@2V?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@A
  02d4e	e8 00 00 00 00	 call	 ??A?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEAAPAVCMailMsgWnd@@ABH@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::operator[]
  02d53	8b 00		 mov	 eax, DWORD PTR [eax]

; 1180 : }

  02d55	5d		 pop	 ebp
  02d56	c3		 ret	 0
?FindByUniqueID@CMailMsgWnd@@SAPAV1@H@Z ENDP		; CMailMsgWnd::FindByUniqueID
_TEXT	ENDS
PUBLIC	?MapToUniqueID@CMailMsgWnd@@IAEXH@Z		; CMailMsgWnd::MapToUniqueID
_TEXT	SEGMENT
_nUniqueID$ = 8
_this$ = -4
?MapToUniqueID@CMailMsgWnd@@IAEXH@Z PROC NEAR		; CMailMsgWnd::MapToUniqueID

; 1184 : {

  02d57	55		 push	 ebp
  02d58	8b ec		 mov	 ebp, esp
  02d5a	51		 push	 ecx
  02d5b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1185 : 	//	Set the unique id
; 1186 : 	m_nMsgUniqueID = nUniqueID;

  02d5e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02d61	8b 4d 08	 mov	 ecx, DWORD PTR _nUniqueID$[ebp]
  02d64	89 88 94 00 00
	00		 mov	 DWORD PTR [eax+148], ecx

; 1187 : 
; 1188 : 	//	Map the unique id
; 1189 : 	m_UniqueIDMap [ nUniqueID ] = this;

  02d6a	8d 55 08	 lea	 edx, DWORD PTR _nUniqueID$[ebp]
  02d6d	52		 push	 edx
  02d6e	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsgWnd@@2V?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@A
  02d73	e8 00 00 00 00	 call	 ??A?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEAAPAVCMailMsgWnd@@ABH@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::operator[]
  02d78	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02d7b	89 08		 mov	 DWORD PTR [eax], ecx

; 1190 : }

  02d7d	8b e5		 mov	 esp, ebp
  02d7f	5d		 pop	 ebp
  02d80	c2 04 00	 ret	 4
?MapToUniqueID@CMailMsgWnd@@IAEXH@Z ENDP		; CMailMsgWnd::MapToUniqueID
_TEXT	ENDS
PUBLIC	??0CMailMsgWnd@@QAE@XZ				; CMailMsgWnd::CMailMsgWnd
PUBLIC	??_7CMailMsgWnd@@6B@				; CMailMsgWnd::`vftable'
PUBLIC	??_GCMailMsgWnd@@UAEPAXI@Z			; CMailMsgWnd::`scalar deleting destructor'
PUBLIC	??_ECMailMsgWnd@@UAEPAXI@Z			; CMailMsgWnd::`vector deleting destructor'
EXTRN	__purecall:NEAR
;	COMDAT ??_7CMailMsgWnd@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CMailMsgWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CMailMsgWnd::`vftable'
	DD	FLAT:??_ECMailMsgWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CSkinWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:__purecall
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CMailMsgWnd@@QAE@XZ PROC NEAR			; CMailMsgWnd::CMailMsgWnd

; 1193 : {

  02d83	55		 push	 ebp
  02d84	8b ec		 mov	 ebp, esp
  02d86	51		 push	 ecx
  02d87	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  02d8a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02d8d	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  02d92	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02d95	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMailMsgWnd@@6B@ ; CMailMsgWnd::`vftable'

; 1194 : 	// Initialize all variables
; 1195 : 	m_nMsgUniqueID = -1;

  02d9b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02d9e	c7 81 94 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [ecx+148], -1

; 1196 : }

  02da8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02dab	8b e5		 mov	 esp, ebp
  02dad	5d		 pop	 ebp
  02dae	c3		 ret	 0
??0CMailMsgWnd@@QAE@XZ ENDP				; CMailMsgWnd::CMailMsgWnd
_TEXT	ENDS
PUBLIC	??1CMailMsgWnd@@UAE@XZ				; CMailMsgWnd::~CMailMsgWnd
;	COMDAT ??_GCMailMsgWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMailMsgWnd@@UAEPAXI@Z PROC NEAR			; CMailMsgWnd::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMailMsgWnd@@UAE@XZ	; CMailMsgWnd::~CMailMsgWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L155363
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L155363:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCMailMsgWnd@@UAEPAXI@Z ENDP				; CMailMsgWnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?erase@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEIABH@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::erase
xdata$x	SEGMENT
$T163219 DD	019930520H
	DD	01H
	DD	FLAT:$T163221
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163221 DD	0ffffffffH
	DD	FLAT:$L163217
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??1CMailMsgWnd@@UAE@XZ PROC NEAR			; CMailMsgWnd::~CMailMsgWnd

; 1199 : {

  02daf	55		 push	 ebp
  02db0	8b ec		 mov	 ebp, esp
  02db2	6a ff		 push	 -1
  02db4	68 00 00 00 00	 push	 $L163220
  02db9	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02dbf	50		 push	 eax
  02dc0	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02dc7	51		 push	 ecx
  02dc8	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  02dcb	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  02dce	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMailMsgWnd@@6B@ ; CMailMsgWnd::`vftable'
  02dd4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1200 : 	if ( g_pMailBox ) {

  02ddb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox
  02de2	74 15		 je	 SHORT $L155367

; 1201 : 		// Let the mailbox that this window is no longer visible.  mailbox handles if it is Read or Author
; 1202 : 		g_pMailBox->SetNoLongerViewed( m_nMsgUniqueID );

  02de4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  02de7	8b 91 94 00 00
	00		 mov	 edx, DWORD PTR [ecx+148]
  02ded	52		 push	 edx
  02dee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  02df4	e8 00 00 00 00	 call	 ?SetNoLongerViewed@CMailBox@@QAEXH@Z ; CMailBox::SetNoLongerViewed
$L155367:

; 1204 : 
; 1205 : 	m_UniqueIDMap.erase( m_nMsgUniqueID );

  02df9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  02dfc	05 94 00 00 00	 add	 eax, 148		; 00000094H
  02e01	50		 push	 eax
  02e02	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_UniqueIDMap@CMailMsgWnd@@2V?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@A
  02e07	e8 00 00 00 00	 call	 ?erase@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEIABH@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::erase

; 1206 : }

  02e0c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02e13	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  02e16	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  02e1b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02e1e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02e25	8b e5		 mov	 esp, ebp
  02e27	5d		 pop	 ebp
  02e28	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L163217:
  0039d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003a0	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  003a5	c3		 ret	 0
$L163220:
  003a6	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163219
  003ab	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CMailMsgWnd@@UAE@XZ ENDP				; CMailMsgWnd::~CMailMsgWnd
PUBLIC	?CloseSelf@CMailMsgReadWnd@@UAEX_N@Z		; CMailMsgReadWnd::CloseSelf
PUBLIC	?Create@CMailMsgReadWnd@@UAEHH@Z		; CMailMsgReadWnd::Create
PUBLIC	?MakeSkinCtrl@CMailMsgReadWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CMailMsgReadWnd::MakeSkinCtrl
PUBLIC	??_7CMailMsgReadWnd@@6B@			; CMailMsgReadWnd::`vftable'
PUBLIC	??_GCMailMsgReadWnd@@UAEPAXI@Z			; CMailMsgReadWnd::`scalar deleting destructor'
PUBLIC	??_ECMailMsgReadWnd@@UAEPAXI@Z			; CMailMsgReadWnd::`vector deleting destructor'
;	COMDAT ??_7CMailMsgReadWnd@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CMailMsgReadWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CMailMsgReadWnd::`vftable'
	DD	FLAT:??_ECMailMsgReadWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CMailMsgReadWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CMailMsgReadWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?Create@CMailMsgReadWnd@@UAEHH@Z
CONST	ENDS
xdata$x	SEGMENT
$T163225 DD	019930520H
	DD	01H
	DD	FLAT:$T163227
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163227 DD	0ffffffffH
	DD	FLAT:$L163223
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??0CMailMsgReadWnd@@QAE@XZ PROC NEAR			; CMailMsgReadWnd::CMailMsgReadWnd

; 1213 : {

  02e29	55		 push	 ebp
  02e2a	8b ec		 mov	 ebp, esp
  02e2c	6a ff		 push	 -1
  02e2e	68 00 00 00 00	 push	 $L163226
  02e33	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02e39	50		 push	 eax
  02e3a	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02e41	51		 push	 ecx
  02e42	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  02e45	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  02e48	e8 00 00 00 00	 call	 ??0CMailMsgWnd@@QAE@XZ	; CMailMsgWnd::CMailMsgWnd
  02e4d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  02e54	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  02e57	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMailMsgReadWnd@@6B@ ; CMailMsgReadWnd::`vftable'

; 1214 :     // only one mail item open at a time
; 1215 :     if ( g_pReadWnd )

  02e5d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pReadWnd@@3PAVCMailMsgReadWnd@@A, 0 ; g_pReadWnd
  02e64	74 16		 je	 SHORT $L155371

; 1217 :         g_pReadWnd->CloseSelf( false );

  02e66	6a 00		 push	 0
  02e68	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pReadWnd@@3PAVCMailMsgReadWnd@@A ; g_pReadWnd
  02e6e	8b 11		 mov	 edx, DWORD PTR [ecx]
  02e70	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pReadWnd@@3PAVCMailMsgReadWnd@@A ; g_pReadWnd
  02e76	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L155371:

; 1219 : 
; 1220 :     g_pReadWnd = this;

  02e7c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  02e7f	a3 00 00 00 00	 mov	 DWORD PTR ?g_pReadWnd@@3PAVCMailMsgReadWnd@@A, eax ; g_pReadWnd

; 1221 : 
; 1222 : 	m_pReply = NULL;

  02e84	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  02e87	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0

; 1223 : 	m_pForward = NULL;

  02e91	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  02e94	c7 82 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+156], 0

; 1224 : }

  02e9e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02ea5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  02ea8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02eab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02eb2	8b e5		 mov	 esp, ebp
  02eb4	5d		 pop	 ebp
  02eb5	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L163223:
  003b0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  003b3	e8 00 00 00 00	 call	 ??1CMailMsgWnd@@UAE@XZ	; CMailMsgWnd::~CMailMsgWnd
  003b8	c3		 ret	 0
$L163226:
  003b9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163225
  003be	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CMailMsgReadWnd@@QAE@XZ ENDP				; CMailMsgReadWnd::CMailMsgReadWnd
PUBLIC	??1CMailMsgReadWnd@@UAE@XZ			; CMailMsgReadWnd::~CMailMsgReadWnd
;	COMDAT ??_GCMailMsgReadWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMailMsgReadWnd@@UAEPAXI@Z PROC NEAR		; CMailMsgReadWnd::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMailMsgReadWnd@@UAE@XZ ; CMailMsgReadWnd::~CMailMsgReadWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L155375
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L155375:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCMailMsgReadWnd@@UAEPAXI@Z ENDP			; CMailMsgReadWnd::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CMailMsgReadWnd@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMailMsgReadWnd@@UAE@XZ PROC NEAR			; CMailMsgReadWnd::~CMailMsgReadWnd, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMailMsgWnd@@UAE@XZ	; CMailMsgWnd::~CMailMsgWnd
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CMailMsgReadWnd@@UAE@XZ ENDP				; CMailMsgReadWnd::~CMailMsgReadWnd
_TEXT	ENDS
_TEXT	SEGMENT
_bTransient$ = 8
_this$ = -4
?CloseSelf@CMailMsgReadWnd@@UAEX_N@Z PROC NEAR		; CMailMsgReadWnd::CloseSelf

; 1228 : {

  02eb6	55		 push	 ebp
  02eb7	8b ec		 mov	 ebp, esp
  02eb9	51		 push	 ecx
  02eba	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1229 :     g_pReadWnd = NULL;

  02ebd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pReadWnd@@3PAVCMailMsgReadWnd@@A, 0 ; g_pReadWnd

; 1230 : 
; 1231 : 	CSkinWnd::CloseSelf( bTransient );

  02ec7	8a 45 08	 mov	 al, BYTE PTR _bTransient$[ebp]
  02eca	50		 push	 eax
  02ecb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02ece	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 1232 : }

  02ed3	8b e5		 mov	 esp, ebp
  02ed5	5d		 pop	 ebp
  02ed6	c2 04 00	 ret	 4
?CloseSelf@CMailMsgReadWnd@@UAEX_N@Z ENDP		; CMailMsgReadWnd::CloseSelf
_TEXT	ENDS
PUBLIC	?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z	; CRichEditCtrl::SetBackgroundColor
EXTRN	?SetHint@CSkinObj@@QAEHPBD@Z:NEAR		; CSkinObj::SetHint
EXTRN	?SetText@CSkinEdit@@QAEHPBD@Z:NEAR		; CSkinEdit::SetText
EXTRN	?ParseText@CSkinEdit@@QAEHPBD_N@Z:NEAR		; CSkinEdit::ParseText
EXTRN	?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CSkinEdit::SetScrollBar
EXTRN	__fltused:NEAR
_BSS	SEGMENT
	ALIGN	4

$SG155396 DB	01H DUP (?)
	ALIGN	4

$SG155400 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+1
$SG155391 DB	'Trying to read an invalid mail message!', 00H
$SG155392 DB	'Error', 00H
	ORG $+2
$SG155397 DB	'Tab_mailRead.skn', 00H
	ORG $+3
$SG155401 DB	'dlg_MailSub.skn', 00H
$SG155406 DB	'rtf_toField', 00H
$SG155410 DB	'rtf_fromField', 00H
	ORG $+2
$SG155414 DB	'rtf_subjectField', 00H
	ORG $+3
$SG155418 DB	'rmtf_warnField', 00H
	ORG $+1
$SG155422 DB	'rmtf_msgField', 00H
	ORG $+2
$SG155426 DB	'sb_textscroller', 00H
$SG155438 DB	'Received %s.', 00H
	ORG $+3
$SG155446 DB	'This is a view only Magic Mail.  It was not sent to you,'
	DB	' but instead a former toon name', 00H
$SG155447 DB	'This is a view only Magic Mail.  It was not sent to you,'
	DB	' but instead a former toon name', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163260 DD	019930520H
	DD	06H
	DD	FLAT:$T163263
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163263 DD	0ffffffffH
	DD	FLAT:$L163253
	DD	00H
	DD	FLAT:$L163254
	DD	01H
	DD	FLAT:$L163255
	DD	02H
	DD	FLAT:$L163256
	DD	03H
	DD	FLAT:$L163257
	DD	04H
	DD	FLAT:$L163258
xdata$x	ENDS
_TEXT	SEGMENT
$T163233 = -132
$T163234 = -148
$T163235 = -164
$T163236 = -168
$T163247 = -172
$T163248 = -176
$T163249 = -180
$T163250 = -184
$T163251 = -188
$T163252 = -192
__$EHRec$ = -12
_nMsgUniqueID$ = 8
_this$ = -196
_bCreated$ = -108
_warnObj$ = -20
_sTitle$ = -56
_pMail$ = -84
_toObj$ = -60
_fromObj$ = -128
_subjectObj$ = -16
_msgObj$ = -64
_barObj$ = -88
_sTo$ = -124
_sFrom$ = -36
_sReceived$ = -52
_sSubject$ = -80
_sBody$ = -104
?Create@CMailMsgReadWnd@@UAEHH@Z PROC NEAR		; CMailMsgReadWnd::Create

; 1236 : {

  02ed9	55		 push	 ebp
  02eda	8b ec		 mov	 ebp, esp
  02edc	6a ff		 push	 -1
  02ede	68 00 00 00 00	 push	 $L163261
  02ee3	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02ee9	50		 push	 eax
  02eea	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02ef1	81 ec e0 00 00
	00		 sub	 esp, 224		; 000000e0H
  02ef7	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1237 :     BOOL bCreated;
; 1238 :     CSkinEdit* warnObj;
; 1239 : 	CString sTitle;

  02efd	8d 4d c8	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  02f00	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  02f05	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1240 : 
; 1241 : 	//	Check for valid message
; 1242 : 	CMailMsg* pMail = CMailMsg::FindByUniqueID( nMsgUniqueID );

  02f0c	8b 45 08	 mov	 eax, DWORD PTR _nMsgUniqueID$[ebp]
  02f0f	50		 push	 eax
  02f10	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  02f15	83 c4 04	 add	 esp, 4
  02f18	89 45 ac	 mov	 DWORD PTR _pMail$[ebp], eax

; 1243 : 
; 1244 : 	if ( !pMail ) {

  02f1b	83 7d ac 00	 cmp	 DWORD PTR _pMail$[ebp], 0
  02f1f	75 38		 jne	 SHORT $L155390

; 1245 : 		SkinMessage( "Error", "Trying to read an invalid mail message!" );

  02f21	6a 00		 push	 0
  02f23	68 00 00 00 00	 push	 OFFSET FLAT:$SG155391
  02f28	68 00 00 00 00	 push	 OFFSET FLAT:$SG155392
  02f2d	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  02f32	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1246 : 		return FALSE;

  02f35	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T163233[ebp], 0
  02f3f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02f46	8d 4d c8	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  02f49	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02f4e	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR $T163233[ebp]
  02f54	e9 a4 04 00 00	 jmp	 $L155385
$L155390:

; 1248 : 
; 1249 : 	//	Map the window to a valid unique id
; 1250 : 	MapToUniqueID ( nMsgUniqueID );

  02f59	8b 4d 08	 mov	 ecx, DWORD PTR _nMsgUniqueID$[ebp]
  02f5c	51		 push	 ecx
  02f5d	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  02f63	e8 00 00 00 00	 call	 ?MapToUniqueID@CMailMsgWnd@@IAEXH@Z ; CMailMsgWnd::MapToUniqueID

; 1251 : 
; 1252 : 	// set the priority of this window
; 1253 : 	SetPriority ( swPriMail );

  02f68	6a 02		 push	 2
  02f6a	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  02f70	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 1254 : 
; 1255 : 	// SNTODO: make skin path data-driven
; 1256 :     if ( g_pToonSettings->get_TabDisplay() ) {

  02f75	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  02f7b	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  02f80	85 c0		 test	 eax, eax
  02f82	74 37		 je	 SHORT $L155394

; 1257 : 	    bCreated = CreateChild ( "Tab_mailRead.skn", "", CRect ( 0, 0, 0, 0 ), g_pMainPanelWnd );

  02f84	6a 01		 push	 1
  02f86	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  02f8c	52		 push	 edx
  02f8d	6a 00		 push	 0
  02f8f	6a 00		 push	 0
  02f91	6a 00		 push	 0
  02f93	6a 00		 push	 0
  02f95	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T163234[ebp]
  02f9b	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  02fa0	50		 push	 eax
  02fa1	68 00 00 00 00	 push	 OFFSET FLAT:$SG155396
  02fa6	68 00 00 00 00	 push	 OFFSET FLAT:$SG155397
  02fab	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  02fb1	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  02fb6	89 45 94	 mov	 DWORD PTR _bCreated$[ebp], eax

; 1258 :     } else {

  02fb9	eb 36		 jmp	 SHORT $L155398
$L155394:

; 1259 : 	    bCreated = CreatePopupChild ( "dlg_MailSub.skn", "", CRect ( 0, 0, 0, 0 ), g_pMainWindow, FALSE );

  02fbb	6a 01		 push	 1
  02fbd	6a 00		 push	 0
  02fbf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  02fc4	50		 push	 eax
  02fc5	6a 00		 push	 0
  02fc7	6a 00		 push	 0
  02fc9	6a 00		 push	 0
  02fcb	6a 00		 push	 0
  02fcd	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T163235[ebp]
  02fd3	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  02fd8	50		 push	 eax
  02fd9	68 00 00 00 00	 push	 OFFSET FLAT:$SG155400
  02fde	68 00 00 00 00	 push	 OFFSET FLAT:$SG155401
  02fe3	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  02fe9	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  02fee	89 45 94	 mov	 DWORD PTR _bCreated$[ebp], eax
$L155398:

; 1261 : 
; 1262 : 	if ( FALSE == bCreated ) {

  02ff1	83 7d 94 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  02ff5	75 24		 jne	 SHORT $L155402

; 1263 : 		return FALSE;

  02ff7	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T163236[ebp], 0
  03001	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03008	8d 4d c8	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  0300b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03010	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR $T163236[ebp]
  03016	e9 e2 03 00 00	 jmp	 $L155385
$L155402:

; 1265 : 
; 1266 : 	//	Get the controls - No need to save them, they are nevered used again.
; 1267 : 	CSkinEdit* toObj = (CSkinEdit*) FindControl ( "rtf_toField" );

  0301b	68 00 00 00 00	 push	 OFFSET FLAT:$SG155406
  03020	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03026	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  0302b	89 85 38 ff ff
	ff		 mov	 DWORD PTR -200+[ebp], eax
  03031	83 bd 38 ff ff
	ff 00		 cmp	 DWORD PTR -200+[ebp], 0
  03038	74 11		 je	 SHORT $L163237
  0303a	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR -200+[ebp]
  03040	83 e9 60	 sub	 ecx, 96			; 00000060H
  03043	89 8d 34 ff ff
	ff		 mov	 DWORD PTR -204+[ebp], ecx
  03049	eb 0a		 jmp	 SHORT $L163238
$L163237:
  0304b	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -204+[ebp], 0
$L163238:
  03055	8b 95 34 ff ff
	ff		 mov	 edx, DWORD PTR -204+[ebp]
  0305b	89 55 c4	 mov	 DWORD PTR _toObj$[ebp], edx

; 1268 : 	assert( NULL != toObj );
; 1269 : 
; 1270 : 	CSkinEdit* fromObj = (CSkinEdit*) FindControl ( "rtf_fromField" );

  0305e	68 00 00 00 00	 push	 OFFSET FLAT:$SG155410
  03063	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03069	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  0306e	89 85 30 ff ff
	ff		 mov	 DWORD PTR -208+[ebp], eax
  03074	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR -208+[ebp], 0
  0307b	74 11		 je	 SHORT $L163239
  0307d	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR -208+[ebp]
  03083	83 e8 60	 sub	 eax, 96			; 00000060H
  03086	89 85 2c ff ff
	ff		 mov	 DWORD PTR -212+[ebp], eax
  0308c	eb 0a		 jmp	 SHORT $L163240
$L163239:
  0308e	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -212+[ebp], 0
$L163240:
  03098	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR -212+[ebp]
  0309e	89 4d 80	 mov	 DWORD PTR _fromObj$[ebp], ecx

; 1271 : 	assert( NULL != fromObj );
; 1272 : 	
; 1273 : 	CSkinEdit* subjectObj = (CSkinEdit*) FindControl ( "rtf_subjectField" );

  030a1	68 00 00 00 00	 push	 OFFSET FLAT:$SG155414
  030a6	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  030ac	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  030b1	89 85 28 ff ff
	ff		 mov	 DWORD PTR -216+[ebp], eax
  030b7	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR -216+[ebp], 0
  030be	74 11		 je	 SHORT $L163241
  030c0	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR -216+[ebp]
  030c6	83 ea 60	 sub	 edx, 96			; 00000060H
  030c9	89 95 24 ff ff
	ff		 mov	 DWORD PTR -220+[ebp], edx
  030cf	eb 0a		 jmp	 SHORT $L163242
$L163241:
  030d1	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -220+[ebp], 0
$L163242:
  030db	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR -220+[ebp]
  030e1	89 45 f0	 mov	 DWORD PTR _subjectObj$[ebp], eax

; 1274 : 	assert( NULL != subjectObj );
; 1275 : 
; 1276 :     if ( !g_pToonSettings->get_TabDisplay() )

  030e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  030ea	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  030ef	85 c0		 test	 eax, eax
  030f1	75 43		 jne	 SHORT $L155416

; 1278 : 	    warnObj = (CSkinEdit*) FindControl ( "rmtf_warnField" );

  030f3	68 00 00 00 00	 push	 OFFSET FLAT:$SG155418
  030f8	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  030fe	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  03103	89 85 20 ff ff
	ff		 mov	 DWORD PTR -224+[ebp], eax
  03109	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR -224+[ebp], 0
  03110	74 11		 je	 SHORT $L163243
  03112	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR -224+[ebp]
  03118	83 e9 60	 sub	 ecx, 96			; 00000060H
  0311b	89 8d 1c ff ff
	ff		 mov	 DWORD PTR -228+[ebp], ecx
  03121	eb 0a		 jmp	 SHORT $L163244
$L163243:
  03123	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -228+[ebp], 0
$L163244:
  0312d	8b 95 1c ff ff
	ff		 mov	 edx, DWORD PTR -228+[ebp]
  03133	89 55 ec	 mov	 DWORD PTR _warnObj$[ebp], edx
$L155416:

; 1281 : 
; 1282 : 	CSkinEdit* msgObj = (CSkinEdit*) FindControl ( "rmtf_msgField" );

  03136	68 00 00 00 00	 push	 OFFSET FLAT:$SG155422
  0313b	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03141	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  03146	89 85 18 ff ff
	ff		 mov	 DWORD PTR -232+[ebp], eax
  0314c	83 bd 18 ff ff
	ff 00		 cmp	 DWORD PTR -232+[ebp], 0
  03153	74 11		 je	 SHORT $L163245
  03155	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR -232+[ebp]
  0315b	83 e8 60	 sub	 eax, 96			; 00000060H
  0315e	89 85 14 ff ff
	ff		 mov	 DWORD PTR -236+[ebp], eax
  03164	eb 0a		 jmp	 SHORT $L163246
$L163245:
  03166	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -236+[ebp], 0
$L163246:
  03170	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR -236+[ebp]
  03176	89 4d c0	 mov	 DWORD PTR _msgObj$[ebp], ecx

; 1283 : 	assert( NULL != msgObj );
; 1284 : 
; 1285 : 	CSkinScrollBar* barObj = (CSkinScrollBar*) FindControl ( "sb_textscroller" );

  03179	68 00 00 00 00	 push	 OFFSET FLAT:$SG155426
  0317e	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03184	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  03189	89 45 a8	 mov	 DWORD PTR _barObj$[ebp], eax

; 1286 : 	assert( NULL != barObj );
; 1287 : 
; 1288 : 	//	Get the values from the Mail message
; 1289 : 	std::string sTo;

  0318c	8d 95 54 ff ff
	ff		 lea	 edx, DWORD PTR $T163247[ebp]
  03192	52		 push	 edx
  03193	8d 4d 84	 lea	 ecx, DWORD PTR _sTo$[ebp]
  03196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  0319c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1290 : 	pMail->GetTo( sTo );

  031a0	8d 45 84	 lea	 eax, DWORD PTR _sTo$[ebp]
  031a3	50		 push	 eax
  031a4	8b 4d ac	 mov	 ecx, DWORD PTR _pMail$[ebp]
  031a7	e8 00 00 00 00	 call	 ?GetTo@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetTo

; 1291 : 
; 1292 : 	std::string sFrom;

  031ac	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T163248[ebp]
  031b2	51		 push	 ecx
  031b3	8d 4d dc	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  031b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  031bc	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1293 : 	pMail->GetFrom( sFrom );

  031c0	8d 55 dc	 lea	 edx, DWORD PTR _sFrom$[ebp]
  031c3	52		 push	 edx
  031c4	8b 4d ac	 mov	 ecx, DWORD PTR _pMail$[ebp]
  031c7	e8 00 00 00 00	 call	 ?GetFrom@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetFrom

; 1294 : 
; 1295 : 	std::string sReceived;

  031cc	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR $T163249[ebp]
  031d2	50		 push	 eax
  031d3	8d 4d cc	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  031d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  031dc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 1296 : 	pMail->GetReceived( sReceived );

  031e0	8d 4d cc	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  031e3	51		 push	 ecx
  031e4	8b 4d ac	 mov	 ecx, DWORD PTR _pMail$[ebp]
  031e7	e8 00 00 00 00	 call	 ?GetReceived@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetReceived

; 1297 : 
; 1298 : 	std::string sSubject;

  031ec	8d 95 48 ff ff
	ff		 lea	 edx, DWORD PTR $T163250[ebp]
  031f2	52		 push	 edx
  031f3	8d 4d b0	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  031f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  031fc	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 1299 : 	pMail->GetSubject( sSubject );

  03200	8d 45 b0	 lea	 eax, DWORD PTR _sSubject$[ebp]
  03203	50		 push	 eax
  03204	8b 4d ac	 mov	 ecx, DWORD PTR _pMail$[ebp]
  03207	e8 00 00 00 00	 call	 ?GetSubject@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetSubject

; 1300 : 
; 1301 : 	std::string sBody;

  0320c	8d 8d 44 ff ff
	ff		 lea	 ecx, DWORD PTR $T163251[ebp]
  03212	51		 push	 ecx
  03213	8d 4d 98	 lea	 ecx, DWORD PTR _sBody$[ebp]
  03216	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  0321c	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 1302 : 	pMail->GetBody( sBody );

  03220	8d 55 98	 lea	 edx, DWORD PTR _sBody$[ebp]
  03223	52		 push	 edx
  03224	8b 4d ac	 mov	 ecx, DWORD PTR _pMail$[ebp]
  03227	e8 00 00 00 00	 call	 ?GetBody@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetBody

; 1303 : 
; 1304 : 	//	Setup the to field
; 1305 : 	toObj->SetText( sTo.c_str() );

  0322c	8d 4d 84	 lea	 ecx, DWORD PTR _sTo$[ebp]
  0322f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  03235	50		 push	 eax
  03236	8b 4d c4	 mov	 ecx, DWORD PTR _toObj$[ebp]
  03239	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 1306 : 
; 1307 : 	//	Setup the from field
; 1308 : 	fromObj->SetText( sFrom.c_str() );

  0323e	8d 4d dc	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  03241	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  03247	50		 push	 eax
  03248	8b 4d 80	 mov	 ecx, DWORD PTR _fromObj$[ebp]
  0324b	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 1309 : 
; 1310 : 	//	Setup the title of the window
; 1311 : 	sTitle.Format( "Received %s.", sReceived.c_str() );

  03250	8d 4d cc	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  03253	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  03259	50		 push	 eax
  0325a	68 00 00 00 00	 push	 OFFSET FLAT:$SG155438
  0325f	8d 45 c8	 lea	 eax, DWORD PTR _sTitle$[ebp]
  03262	50		 push	 eax
  03263	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  03268	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1312 : 	SetWindowText( (char*) (LPCSTR) sTitle );

  0326b	8d 4d c8	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  0326e	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  03273	50		 push	 eax
  03274	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0327a	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 1313 : 
; 1314 : 	//	Setup the subject field
; 1315 : 	subjectObj->SetText( sSubject.c_str() );

  0327f	8d 4d b0	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  03282	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  03288	50		 push	 eax
  03289	8b 4d f0	 mov	 ecx, DWORD PTR _subjectObj$[ebp]
  0328c	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 1316 : 
; 1317 : 	//	Setup the message field
; 1318 : 	msgObj->SetScrollBar ( barObj );

  03291	8b 4d a8	 mov	 ecx, DWORD PTR _barObj$[ebp]
  03294	51		 push	 ecx
  03295	8b 4d c0	 mov	 ecx, DWORD PTR _msgObj$[ebp]
  03298	e8 00 00 00 00	 call	 ?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z ; CSkinEdit::SetScrollBar

; 1319 : 	msgObj->SetText( sBody.c_str() );

  0329d	8d 4d 98	 lea	 ecx, DWORD PTR _sBody$[ebp]
  032a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  032a6	50		 push	 eax
  032a7	8b 4d c0	 mov	 ecx, DWORD PTR _msgObj$[ebp]
  032aa	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 1320 : 
; 1321 : 	msgObj->SetLocation( 0 );

  032af	6a 00		 push	 0
  032b1	8b 4d c0	 mov	 ecx, DWORD PTR _msgObj$[ebp]
  032b4	83 c1 40	 add	 ecx, 64			; 00000040H
  032b7	8b 55 c0	 mov	 edx, DWORD PTR _msgObj$[ebp]
  032ba	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  032bd	ff 50 04	 call	 DWORD PTR [eax+4]

; 1322 : 
; 1323 :     if ( !g_pToonSettings->get_TabDisplay() ) {

  032c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  032c6	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  032cb	85 c0		 test	 eax, eax
  032cd	75 1e		 jne	 SHORT $L155441

; 1324 : 	    //	Setup the warning field
; 1325 : 	    warnObj->SetBackgroundColor( false, 0x00c5e0e4 );

  032cf	68 e4 e0 c5 00	 push	 12968164		; 00c5e0e4H
  032d4	6a 00		 push	 0
  032d6	8b 4d ec	 mov	 ecx, DWORD PTR _warnObj$[ebp]
  032d9	e8 00 00 00 00	 call	 ?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z ; CRichEditCtrl::SetBackgroundColor

; 1326 : 	    warnObj->ParseText( CSWarning );

  032de	6a 00		 push	 0
  032e0	68 00 00 00 00	 push	 OFFSET FLAT:?CSWarning@@3PADA ; CSWarning
  032e5	8b 4d ec	 mov	 ecx, DWORD PTR _warnObj$[ebp]
  032e8	e8 00 00 00 00	 call	 ?ParseText@CSkinEdit@@QAEHPBD_N@Z ; CSkinEdit::ParseText
$L155441:

; 1328 : 
; 1329 :     if ( !g_pToonSettings->get_TabDisplay() ) {

  032ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  032f3	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  032f8	85 c0		 test	 eax, eax
  032fa	75 1a		 jne	 SHORT $L155442

; 1330 : 	    //	Restore the previous location of the window
; 1331 : 	    RestoreLocation();

  032fc	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03302	e8 00 00 00 00	 call	 ?RestoreLocation@CSkinWnd@@QAE_NXZ ; CSkinWnd::RestoreLocation

; 1332 : 
; 1333 : 	    //	Show the finished window
; 1334 : 	    ShowWindow( SW_SHOW );

  03307	6a 05		 push	 5
  03309	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0330f	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 1335 :     } else {

  03314	eb 14		 jmp	 SHORT $L155443
$L155442:

; 1336 :         g_pMainPanelWnd->SetTabWindow( TID_MAIL, (CWnd *)this );

  03316	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0331c	51		 push	 ecx
  0331d	6a 04		 push	 4
  0331f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  03325	e8 00 00 00 00	 call	 ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z ; CMainPanelWnd::SetTabWindow
$L155443:

; 1338 : 
; 1339 : 	if ( pMail->GetType() == CMailMsg::mmtViewOnly ) {

  0332a	8b 4d ac	 mov	 ecx, DWORD PTR _pMail$[ebp]
  0332d	e8 00 00 00 00	 call	 ?GetType@CMailMsg@@QAEHXZ ; CMailMsg::GetType
  03332	83 f8 04	 cmp	 eax, 4
  03335	75 66		 jne	 SHORT $L155445

; 1340 : 		m_pReply->Disable();

  03337	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0333d	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  03343	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  03349	8b 90 98 00 00
	00		 mov	 edx, DWORD PTR [eax+152]
  0334f	8b 02		 mov	 eax, DWORD PTR [edx]
  03351	ff 50 0c	 call	 DWORD PTR [eax+12]

; 1341 : 		m_pReply->SetHint( "This is a view only Magic Mail.  It was not sent to you, but instead a former toon name" );

  03354	68 00 00 00 00	 push	 OFFSET FLAT:$SG155446
  03359	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0335f	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  03365	e8 00 00 00 00	 call	 ?SetHint@CSkinObj@@QAEHPBD@Z ; CSkinObj::SetHint

; 1342 : 		m_pForward->Disable();

  0336a	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  03370	8b 8a 9c 00 00
	00		 mov	 ecx, DWORD PTR [edx+156]
  03376	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0337c	8b 90 9c 00 00
	00		 mov	 edx, DWORD PTR [eax+156]
  03382	8b 02		 mov	 eax, DWORD PTR [edx]
  03384	ff 50 0c	 call	 DWORD PTR [eax+12]

; 1343 : 		m_pForward->SetHint( "This is a view only Magic Mail.  It was not sent to you, but instead a former toon name" );

  03387	68 00 00 00 00	 push	 OFFSET FLAT:$SG155447
  0338c	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  03392	8b 89 9c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+156]
  03398	e8 00 00 00 00	 call	 ?SetHint@CSkinObj@@QAEHPBD@Z ; CSkinObj::SetHint
$L155445:

; 1345 : 
; 1346 : 	return TRUE;

  0339d	c7 85 40 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR $T163252[ebp], 1
  033a7	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  033ab	8d 4d 98	 lea	 ecx, DWORD PTR _sBody$[ebp]
  033ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  033b4	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  033b8	8d 4d b0	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  033bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  033c1	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  033c5	8d 4d cc	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  033c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  033ce	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  033d2	8d 4d dc	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  033d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  033db	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  033df	8d 4d 84	 lea	 ecx, DWORD PTR _sTo$[ebp]
  033e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  033e8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  033ef	8d 4d c8	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  033f2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  033f7	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR $T163252[ebp]
$L155385:

; 1347 : }

  033fd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03400	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03407	8b e5		 mov	 esp, ebp
  03409	5d		 pop	 ebp
  0340a	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L163253:
  003c3	8d 4d c8	 lea	 ecx, DWORD PTR _sTitle$[ebp]
  003c6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  003cb	c3		 ret	 0
$L163254:
  003cc	8d 4d 84	 lea	 ecx, DWORD PTR _sTo$[ebp]
  003cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  003d5	c3		 ret	 0
$L163255:
  003d6	8d 4d dc	 lea	 ecx, DWORD PTR _sFrom$[ebp]
  003d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  003df	c3		 ret	 0
$L163256:
  003e0	8d 4d cc	 lea	 ecx, DWORD PTR _sReceived$[ebp]
  003e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  003e9	c3		 ret	 0
$L163257:
  003ea	8d 4d b0	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  003ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  003f3	c3		 ret	 0
$L163258:
  003f4	8d 4d 98	 lea	 ecx, DWORD PTR _sBody$[ebp]
  003f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  003fd	c3		 ret	 0
$L163261:
  003fe	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163260
  00403	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CMailMsgReadWnd@@UAEHH@Z ENDP			; CMailMsgReadWnd::Create
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NABVCString@@PBD@Z PROC NEAR			; operator==, COMDAT

; 183  : 	{ return s1.Compare(s2) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NABVCString@@PBD@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NPBDABVCString@@@Z PROC NEAR			; operator==, COMDAT

; 185  : 	{ return s2.Compare(s1) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _s1$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _s2$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NPBDABVCString@@@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	??0CEraseBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z	; CEraseBtn::CEraseBtn
PUBLIC	??0CReplyBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z	; CReplyBtn::CReplyBtn
PUBLIC	??0CForwardBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z	; CForwardBtn::CForwardBtn
PUBLIC	??0CDoneBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z	; CDoneBtn::CDoneBtn
_DATA	SEGMENT
$SG155457 DB	'_', 00H
	ORG $+2
$SG155459 DB	'be', 00H
	ORG $+1
$SG155467 DB	'br', 00H
	ORG $+1
$SG155475 DB	'bf', 00H
	ORG $+1
$SG155483 DB	'ok', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163309 DD	019930520H
	DD	07H
	DD	FLAT:$T163311
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163311 DD	0ffffffffH
	DD	FLAT:$L163296
	DD	00H
	DD	FLAT:$L163297
	DD	01H
	DD	FLAT:$L163298
	DD	02H
	DD	FLAT:$L163299
	DD	02H
	DD	FLAT:$L163301
	DD	02H
	DD	FLAT:$L163303
	DD	02H
	DD	FLAT:$L163305
xdata$x	ENDS
_TEXT	SEGMENT
$T163270 = -24
$T163271 = -28
$T163272 = -32
$T163273 = -36
$T163276 = -40
$T163277 = -44
$T163278 = -48
$T163279 = -52
$T163282 = -56
$T163283 = -60
$T163284 = -64
$T163285 = -68
$T163288 = -72
$T163289 = -76
$T163290 = -80
$T163291 = -84
$T163294 = -88
$T163295 = -92
__$EHRec$ = -12
_obj$ = 8
_this$ = -96
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CMailMsgReadWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CMailMsgReadWnd::MakeSkinCtrl

; 1350 : CSkinCtrl *CMailMsgReadWnd::MakeSkinCtrl ( CSkinObj obj ) {

  0340d	55		 push	 ebp
  0340e	8b ec		 mov	 ebp, esp
  03410	6a ff		 push	 -1
  03412	68 00 00 00 00	 push	 $L163310
  03417	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0341d	50		 push	 eax
  0341e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  03425	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  0342b	89 4d a0	 mov	 DWORD PTR _this$[ebp], ecx
  0342e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1351 : 	// the type of the control is specified by the 3 left characters of the name
; 1352 : 	CString name = obj.GetName();

  03435	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  03438	50		 push	 eax
  03439	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0343c	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  03441	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1353 : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  03445	6a 00		 push	 0
  03447	68 00 00 00 00	 push	 OFFSET FLAT:$SG155457
  0344c	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0344f	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  03454	50		 push	 eax
  03455	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03458	51		 push	 ecx
  03459	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0345c	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  03461	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1354 : 
; 1355 : 	// handle erase button
; 1356 : 	if ( id == "be" ) {

  03465	68 00 00 00 00	 push	 OFFSET FLAT:$SG155459
  0346a	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  0346d	52		 push	 edx
  0346e	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  03473	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03478	85 c0		 test	 eax, eax
  0347a	0f 84 92 00 00
	00		 je	 $L155458

; 1357 : 		return new CEraseBtn ( obj, this, m_nMsgUniqueID );

  03480	6a 18		 push	 24			; 00000018H
  03482	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03487	83 c4 04	 add	 esp, 4
  0348a	89 45 e0	 mov	 DWORD PTR $T163272[ebp], eax
  0348d	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  03491	83 7d e0 00	 cmp	 DWORD PTR $T163272[ebp], 0
  03495	74 35		 je	 SHORT $L163274
  03497	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  0349a	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  034a0	51		 push	 ecx
  034a1	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  034a4	52		 push	 edx
  034a5	83 ec 08	 sub	 esp, 8
  034a8	8b cc		 mov	 ecx, esp
  034aa	89 65 dc	 mov	 DWORD PTR $T163273[ebp], esp
  034ad	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  034b0	50		 push	 eax
  034b1	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  034b6	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  034b9	8b 4d e0	 mov	 ecx, DWORD PTR $T163272[ebp]
  034bc	e8 00 00 00 00	 call	 ??0CEraseBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ; CEraseBtn::CEraseBtn
  034c1	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  034c4	8b 4d 98	 mov	 ecx, DWORD PTR -104+[ebp]
  034c7	89 4d 94	 mov	 DWORD PTR -108+[ebp], ecx
  034ca	eb 07		 jmp	 SHORT $L163275
$L163274:
  034cc	c7 45 94 00 00
	00 00		 mov	 DWORD PTR -108+[ebp], 0
$L163275:
  034d3	8b 55 94	 mov	 edx, DWORD PTR -108+[ebp]
  034d6	89 55 e4	 mov	 DWORD PTR $T163271[ebp], edx
  034d9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  034dd	8b 45 e4	 mov	 eax, DWORD PTR $T163271[ebp]
  034e0	89 45 e8	 mov	 DWORD PTR $T163270[ebp], eax
  034e3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  034e7	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  034ea	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  034ef	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  034f3	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  034f6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  034fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03502	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03505	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0350a	8b 45 e8	 mov	 eax, DWORD PTR $T163270[ebp]
  0350d	e9 85 02 00 00	 jmp	 $L155452
$L155458:

; 1359 : 
; 1360 : 	// handle reply button
; 1361 : 	if ( id == "br" ) {

  03512	68 00 00 00 00	 push	 OFFSET FLAT:$SG155467
  03517	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0351a	51		 push	 ecx
  0351b	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  03520	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03525	85 c0		 test	 eax, eax
  03527	0f 84 9e 00 00
	00		 je	 $L155466

; 1362 : 		return ( m_pReply = new CReplyBtn ( obj, this, m_nMsgUniqueID ) );

  0352d	6a 18		 push	 24			; 00000018H
  0352f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03534	83 c4 04	 add	 esp, 4
  03537	89 45 d0	 mov	 DWORD PTR $T163278[ebp], eax
  0353a	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0353e	83 7d d0 00	 cmp	 DWORD PTR $T163278[ebp], 0
  03542	74 35		 je	 SHORT $L163280
  03544	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  03547	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  0354d	50		 push	 eax
  0354e	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  03551	51		 push	 ecx
  03552	83 ec 08	 sub	 esp, 8
  03555	8b cc		 mov	 ecx, esp
  03557	89 65 cc	 mov	 DWORD PTR $T163279[ebp], esp
  0355a	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0355d	52		 push	 edx
  0355e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03563	89 45 90	 mov	 DWORD PTR -112+[ebp], eax
  03566	8b 4d d0	 mov	 ecx, DWORD PTR $T163278[ebp]
  03569	e8 00 00 00 00	 call	 ??0CReplyBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ; CReplyBtn::CReplyBtn
  0356e	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  03571	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  03574	89 45 88	 mov	 DWORD PTR -120+[ebp], eax
  03577	eb 07		 jmp	 SHORT $L163281
$L163280:
  03579	c7 45 88 00 00
	00 00		 mov	 DWORD PTR -120+[ebp], 0
$L163281:
  03580	8b 4d 88	 mov	 ecx, DWORD PTR -120+[ebp]
  03583	89 4d d4	 mov	 DWORD PTR $T163277[ebp], ecx
  03586	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0358a	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  0358d	8b 45 d4	 mov	 eax, DWORD PTR $T163277[ebp]
  03590	89 82 98 00 00
	00		 mov	 DWORD PTR [edx+152], eax
  03596	8b 4d d4	 mov	 ecx, DWORD PTR $T163277[ebp]
  03599	89 4d d8	 mov	 DWORD PTR $T163276[ebp], ecx
  0359c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  035a0	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  035a3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  035a8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  035ac	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  035af	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  035b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  035bb	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  035be	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  035c3	8b 45 d8	 mov	 eax, DWORD PTR $T163276[ebp]
  035c6	e9 cc 01 00 00	 jmp	 $L155452
$L155466:

; 1364 : 
; 1365 : 	// handle forward button
; 1366 : 	if ( id == "bf" ) {

  035cb	68 00 00 00 00	 push	 OFFSET FLAT:$SG155475
  035d0	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  035d3	52		 push	 edx
  035d4	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  035d9	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  035de	85 c0		 test	 eax, eax
  035e0	0f 84 a7 00 00
	00		 je	 $L155474

; 1367 : 		return ( m_pForward = new CForwardBtn ( obj, this, m_nMsgUniqueID ) );

  035e6	6a 18		 push	 24			; 00000018H
  035e8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  035ed	83 c4 04	 add	 esp, 4
  035f0	89 45 c0	 mov	 DWORD PTR $T163284[ebp], eax
  035f3	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  035f7	83 7d c0 00	 cmp	 DWORD PTR $T163284[ebp], 0
  035fb	74 38		 je	 SHORT $L163286
  035fd	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  03600	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  03606	51		 push	 ecx
  03607	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  0360a	52		 push	 edx
  0360b	83 ec 08	 sub	 esp, 8
  0360e	8b cc		 mov	 ecx, esp
  03610	89 65 bc	 mov	 DWORD PTR $T163285[ebp], esp
  03613	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  03616	50		 push	 eax
  03617	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0361c	89 45 84	 mov	 DWORD PTR -124+[ebp], eax
  0361f	8b 4d c0	 mov	 ecx, DWORD PTR $T163284[ebp]
  03622	e8 00 00 00 00	 call	 ??0CForwardBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ; CForwardBtn::CForwardBtn
  03627	89 45 80	 mov	 DWORD PTR -128+[ebp], eax
  0362a	8b 4d 80	 mov	 ecx, DWORD PTR -128+[ebp]
  0362d	89 8d 7c ff ff
	ff		 mov	 DWORD PTR -132+[ebp], ecx
  03633	eb 0a		 jmp	 SHORT $L163287
$L163286:
  03635	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -132+[ebp], 0
$L163287:
  0363f	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR -132+[ebp]
  03645	89 55 c4	 mov	 DWORD PTR $T163283[ebp], edx
  03648	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0364c	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  0364f	8b 4d c4	 mov	 ecx, DWORD PTR $T163283[ebp]
  03652	89 88 9c 00 00
	00		 mov	 DWORD PTR [eax+156], ecx
  03658	8b 55 c4	 mov	 edx, DWORD PTR $T163283[ebp]
  0365b	89 55 c8	 mov	 DWORD PTR $T163282[ebp], edx
  0365e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03662	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03665	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0366a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0366e	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03671	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03676	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0367d	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03680	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03685	8b 45 c8	 mov	 eax, DWORD PTR $T163282[ebp]
  03688	e9 0a 01 00 00	 jmp	 $L155452
$L155474:

; 1369 : 
; 1370 : 	// handle done button
; 1371 : 	if ( id == "ok" ) {

  0368d	68 00 00 00 00	 push	 OFFSET FLAT:$SG155483
  03692	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  03695	50		 push	 eax
  03696	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  0369b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  036a0	85 c0		 test	 eax, eax
  036a2	0f 84 97 00 00
	00		 je	 $L155482

; 1372 : 		return new CDoneBtn ( obj, this );

  036a8	6a 14		 push	 20			; 00000014H
  036aa	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  036af	83 c4 04	 add	 esp, 4
  036b2	89 45 b0	 mov	 DWORD PTR $T163290[ebp], eax
  036b5	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  036b9	83 7d b0 00	 cmp	 DWORD PTR $T163290[ebp], 0
  036bd	74 37		 je	 SHORT $L163292
  036bf	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  036c2	51		 push	 ecx
  036c3	83 ec 08	 sub	 esp, 8
  036c6	8b cc		 mov	 ecx, esp
  036c8	89 65 ac	 mov	 DWORD PTR $T163291[ebp], esp
  036cb	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  036ce	52		 push	 edx
  036cf	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  036d4	89 85 78 ff ff
	ff		 mov	 DWORD PTR -136+[ebp], eax
  036da	8b 4d b0	 mov	 ecx, DWORD PTR $T163290[ebp]
  036dd	e8 00 00 00 00	 call	 ??0CDoneBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CDoneBtn::CDoneBtn
  036e2	89 85 74 ff ff
	ff		 mov	 DWORD PTR -140+[ebp], eax
  036e8	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR -140+[ebp]
  036ee	89 85 70 ff ff
	ff		 mov	 DWORD PTR -144+[ebp], eax
  036f4	eb 0a		 jmp	 SHORT $L163293
$L163292:
  036f6	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -144+[ebp], 0
$L163293:
  03700	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR -144+[ebp]
  03706	89 4d b4	 mov	 DWORD PTR $T163289[ebp], ecx
  03709	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0370d	8b 55 b4	 mov	 edx, DWORD PTR $T163289[ebp]
  03710	89 55 b8	 mov	 DWORD PTR $T163288[ebp], edx
  03713	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03717	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0371a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0371f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03723	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03726	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0372b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03732	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03735	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0373a	8b 45 b8	 mov	 eax, DWORD PTR $T163288[ebp]
  0373d	eb 58		 jmp	 SHORT $L155452
$L155482:

; 1374 : 
; 1375 : 	return CSkinWnd::MakeSkinCtrl( obj );

  0373f	83 ec 08	 sub	 esp, 8
  03742	8b cc		 mov	 ecx, esp
  03744	89 65 a4	 mov	 DWORD PTR $T163295[ebp], esp
  03747	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  0374a	50		 push	 eax
  0374b	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03750	89 85 6c ff ff
	ff		 mov	 DWORD PTR -148+[ebp], eax
  03756	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  03759	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  0375e	89 85 68 ff ff
	ff		 mov	 DWORD PTR -152+[ebp], eax
  03764	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR -152+[ebp]
  0376a	89 4d a8	 mov	 DWORD PTR $T163294[ebp], ecx
  0376d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03771	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03774	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03779	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0377d	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03780	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03785	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0378c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0378f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03794	8b 45 a8	 mov	 eax, DWORD PTR $T163294[ebp]
$L155452:

; 1376 : }

  03797	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0379a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  037a1	8b e5		 mov	 esp, ebp
  037a3	5d		 pop	 ebp
  037a4	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L163296:
  00408	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0040b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00410	c3		 ret	 0
$L163297:
  00411	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00414	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00419	c3		 ret	 0
$L163298:
  0041a	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0041d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00422	c3		 ret	 0
$L163299:
  00423	8b 45 e0	 mov	 eax, DWORD PTR $T163272[ebp]
  00426	50		 push	 eax
  00427	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0042c	59		 pop	 ecx
  0042d	c3		 ret	 0
$L163301:
  0042e	8b 45 d0	 mov	 eax, DWORD PTR $T163278[ebp]
  00431	50		 push	 eax
  00432	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00437	59		 pop	 ecx
  00438	c3		 ret	 0
$L163303:
  00439	8b 45 c0	 mov	 eax, DWORD PTR $T163284[ebp]
  0043c	50		 push	 eax
  0043d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00442	59		 pop	 ecx
  00443	c3		 ret	 0
$L163305:
  00444	8b 45 b0	 mov	 eax, DWORD PTR $T163290[ebp]
  00447	50		 push	 eax
  00448	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0044d	59		 pop	 ecx
  0044e	c3		 ret	 0
$L163310:
  0044f	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163309
  00454	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CMailMsgReadWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CMailMsgReadWnd::MakeSkinCtrl
PUBLIC	?Create@CMailMsgAuthorWnd@@UAEHH@Z		; CMailMsgAuthorWnd::Create
PUBLIC	?MakeSkinCtrl@CMailMsgAuthorWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CMailMsgAuthorWnd::MakeSkinCtrl
PUBLIC	?Next@CMailMsgAuthorWnd@@UAEXXZ			; CMailMsgAuthorWnd::Next
PUBLIC	??_7CMailMsgAuthorWnd@@6B@			; CMailMsgAuthorWnd::`vftable'
PUBLIC	??_GCMailMsgAuthorWnd@@UAEPAXI@Z		; CMailMsgAuthorWnd::`scalar deleting destructor'
PUBLIC	??_ECMailMsgAuthorWnd@@UAEPAXI@Z		; CMailMsgAuthorWnd::`vector deleting destructor'
;	COMDAT ??_7CMailMsgAuthorWnd@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CMailMsgAuthorWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CMailMsgAuthorWnd::`vftable'
	DD	FLAT:??_ECMailMsgAuthorWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CSkinWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CMailMsgAuthorWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CMailMsgAuthorWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?Create@CMailMsgAuthorWnd@@UAEHH@Z
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4
??0CMailMsgAuthorWnd@@QAE@XZ PROC NEAR			; CMailMsgAuthorWnd::CMailMsgAuthorWnd

; 1383 : {

  037a7	55		 push	 ebp
  037a8	8b ec		 mov	 ebp, esp
  037aa	51		 push	 ecx
  037ab	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  037ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  037b1	e8 00 00 00 00	 call	 ??0CMailMsgWnd@@QAE@XZ	; CMailMsgWnd::CMailMsgWnd
  037b6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  037b9	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMailMsgAuthorWnd@@6B@ ; CMailMsgAuthorWnd::`vftable'

; 1384 : 	//	Initialize all variables
; 1385 : 	m_pTo = NULL;

  037bf	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  037c2	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0

; 1386 : 	m_pSubject = NULL;

  037cc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  037cf	c7 82 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+156], 0

; 1387 : 	m_pBody = NULL;

  037d9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  037dc	c7 80 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+160], 0

; 1388 :     m_pSendButton = NULL;

  037e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  037e9	c7 81 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+164], 0

; 1389 : }

  037f3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  037f6	8b e5		 mov	 esp, ebp
  037f8	5d		 pop	 ebp
  037f9	c3		 ret	 0
??0CMailMsgAuthorWnd@@QAE@XZ ENDP			; CMailMsgAuthorWnd::CMailMsgAuthorWnd
_TEXT	ENDS
PUBLIC	??1CMailMsgAuthorWnd@@UAE@XZ			; CMailMsgAuthorWnd::~CMailMsgAuthorWnd
;	COMDAT ??_GCMailMsgAuthorWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMailMsgAuthorWnd@@UAEPAXI@Z PROC NEAR		; CMailMsgAuthorWnd::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMailMsgAuthorWnd@@UAE@XZ ; CMailMsgAuthorWnd::~CMailMsgAuthorWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L155498
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L155498:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCMailMsgAuthorWnd@@UAEPAXI@Z ENDP			; CMailMsgAuthorWnd::`scalar deleting destructor'
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
??1CMailMsgAuthorWnd@@UAE@XZ PROC NEAR			; CMailMsgAuthorWnd::~CMailMsgAuthorWnd

; 1392 : {

  037fa	55		 push	 ebp
  037fb	8b ec		 mov	 ebp, esp
  037fd	51		 push	 ecx
  037fe	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  03801	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03804	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMailMsgAuthorWnd@@6B@ ; CMailMsgAuthorWnd::`vftable'

; 1393 : }

  0380a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0380d	e8 00 00 00 00	 call	 ??1CMailMsgWnd@@UAE@XZ	; CMailMsgWnd::~CMailMsgWnd
  03812	8b e5		 mov	 esp, ebp
  03814	5d		 pop	 ebp
  03815	c3		 ret	 0
??1CMailMsgAuthorWnd@@UAE@XZ ENDP			; CMailMsgAuthorWnd::~CMailMsgAuthorWnd
_TEXT	ENDS
PUBLIC	?LimitText@CRichEditCtrl@@QAEXJ@Z		; CRichEditCtrl::LimitText
EXTRN	?SetVisibleLine@CScrollable@@QAEXH@Z:NEAR	; CScrollable::SetVisibleLine
EXTRN	?SetSel@CRichEditCtrl@@QAEXJJ@Z:NEAR		; CRichEditCtrl::SetSel
_BSS	SEGMENT
	ALIGN	4

$SG155513 DB	01H DUP (?)
	ALIGN	4

$SG155517 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+1
$SG155509 DB	'Trying to read an invalid mail message!', 00H
$SG155510 DB	'Error', 00H
	ORG $+2
$SG155514 DB	'Tab_mailWrite.skn', 00H
	ORG $+2
$SG155518 DB	'dlg_MailSend.skn', 00H
	ORG $+3
$SG155521 DB	'ef_To', 00H
	ORG $+2
$SG155524 DB	'ef_Subject', 00H
	ORG $+1
$SG155527 DB	'mef_Message', 00H
$SG155531 DB	'sb_textscroller', 00H
$SG155534 DB	'bn_send', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163334 DD	019930520H
	DD	03H
	DD	FLAT:$T163336
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163336 DD	0ffffffffH
	DD	FLAT:$L163330
	DD	00H
	DD	FLAT:$L163331
	DD	01H
	DD	FLAT:$L163332
xdata$x	ENDS
_TEXT	SEGMENT
$T163318 = -88
$T163319 = -104
$T163326 = -108
$T163327 = -112
$T163328 = -116
$T163329 = -120
__$EHRec$ = -12
_nMsgUniqueID$ = 8
_this$ = -124
_bCreated$ = -52
_pMail$ = -32
_scrollBar$ = -72
_sTo$ = -68
_sSubject$ = -28
_sBody$ = -48
?Create@CMailMsgAuthorWnd@@UAEHH@Z PROC NEAR		; CMailMsgAuthorWnd::Create

; 1397 : {

  03816	55		 push	 ebp
  03817	8b ec		 mov	 ebp, esp
  03819	6a ff		 push	 -1
  0381b	68 00 00 00 00	 push	 $L163335
  03820	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  03826	50		 push	 eax
  03827	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0382e	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  03834	89 4d 84	 mov	 DWORD PTR _this$[ebp], ecx

; 1398 :     BOOL bCreated;
; 1399 : 
; 1400 : 	//	Check for valid message
; 1401 : 	CMailMsg* pMail = CMailMsg::FindByUniqueID( nMsgUniqueID );

  03837	8b 45 08	 mov	 eax, DWORD PTR _nMsgUniqueID$[ebp]
  0383a	50		 push	 eax
  0383b	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  03840	83 c4 04	 add	 esp, 4
  03843	89 45 e0	 mov	 DWORD PTR _pMail$[ebp], eax

; 1402 : 
; 1403 : 	if ( !pMail ) {

  03846	83 7d e0 00	 cmp	 DWORD PTR _pMail$[ebp], 0
  0384a	75 1b		 jne	 SHORT $L155508

; 1404 : 		SkinMessage( "Error", "Trying to read an invalid mail message!" );

  0384c	6a 00		 push	 0
  0384e	68 00 00 00 00	 push	 OFFSET FLAT:$SG155509
  03853	68 00 00 00 00	 push	 OFFSET FLAT:$SG155510
  03858	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  0385d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1405 : 		return FALSE;

  03860	33 c0		 xor	 eax, eax
  03862	e9 45 03 00 00	 jmp	 $L155505
$L155508:

; 1407 : 
; 1408 : 	//	Map the window to a valid unique id
; 1409 : 	MapToUniqueID ( nMsgUniqueID );

  03867	8b 4d 08	 mov	 ecx, DWORD PTR _nMsgUniqueID$[ebp]
  0386a	51		 push	 ecx
  0386b	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  0386e	e8 00 00 00 00	 call	 ?MapToUniqueID@CMailMsgWnd@@IAEXH@Z ; CMailMsgWnd::MapToUniqueID

; 1410 : 
; 1411 : 	// set the priority of this window
; 1412 : 	SetPriority ( swPriMail );

  03873	6a 02		 push	 2
  03875	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  03878	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 1413 : 
; 1414 : 	// SNTODO: make skin path data-driven
; 1415 :     if ( g_pToonSettings->get_TabDisplay() ) {

  0387d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  03883	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  03888	85 c0		 test	 eax, eax
  0388a	74 31		 je	 SHORT $L155511

; 1416 : 	    bCreated = CreateChild ( "Tab_mailWrite.skn", "", CRect ( 0, 0, 0, 0 ), g_pMainPanelWnd );

  0388c	6a 01		 push	 1
  0388e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  03894	52		 push	 edx
  03895	6a 00		 push	 0
  03897	6a 00		 push	 0
  03899	6a 00		 push	 0
  0389b	6a 00		 push	 0
  0389d	8d 4d a8	 lea	 ecx, DWORD PTR $T163318[ebp]
  038a0	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  038a5	50		 push	 eax
  038a6	68 00 00 00 00	 push	 OFFSET FLAT:$SG155513
  038ab	68 00 00 00 00	 push	 OFFSET FLAT:$SG155514
  038b0	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  038b3	e8 00 00 00 00	 call	 ?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
  038b8	89 45 cc	 mov	 DWORD PTR _bCreated$[ebp], eax

; 1417 :     } else {

  038bb	eb 30		 jmp	 SHORT $L155515
$L155511:

; 1418 : 	    bCreated = CreatePopupChild ( "dlg_MailSend.skn", "", CRect ( 0, 0, 0, 0 ), g_pMainWindow, FALSE );

  038bd	6a 01		 push	 1
  038bf	6a 00		 push	 0
  038c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  038c6	50		 push	 eax
  038c7	6a 00		 push	 0
  038c9	6a 00		 push	 0
  038cb	6a 00		 push	 0
  038cd	6a 00		 push	 0
  038cf	8d 4d 98	 lea	 ecx, DWORD PTR $T163319[ebp]
  038d2	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  038d7	50		 push	 eax
  038d8	68 00 00 00 00	 push	 OFFSET FLAT:$SG155517
  038dd	68 00 00 00 00	 push	 OFFSET FLAT:$SG155518
  038e2	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  038e5	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  038ea	89 45 cc	 mov	 DWORD PTR _bCreated$[ebp], eax
$L155515:

; 1420 : 
; 1421 :     if ( FALSE == bCreated ) {

  038ed	83 7d cc 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  038f1	75 07		 jne	 SHORT $L155519

; 1422 : 	    return FALSE;

  038f3	33 c0		 xor	 eax, eax
  038f5	e9 b2 02 00 00	 jmp	 $L155505
$L155519:

; 1424 : 
; 1425 : 	//	Find controls and save them for later retrevial
; 1426 : 	m_pTo = (CSkinEdit*) FindControl ( "ef_To" );

  038fa	68 00 00 00 00	 push	 OFFSET FLAT:$SG155521
  038ff	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  03902	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  03907	89 45 80	 mov	 DWORD PTR -128+[ebp], eax
  0390a	83 7d 80 00	 cmp	 DWORD PTR -128+[ebp], 0
  0390e	74 0e		 je	 SHORT $L163320
  03910	8b 4d 80	 mov	 ecx, DWORD PTR -128+[ebp]
  03913	83 e9 60	 sub	 ecx, 96			; 00000060H
  03916	89 8d 7c ff ff
	ff		 mov	 DWORD PTR -132+[ebp], ecx
  0391c	eb 0a		 jmp	 SHORT $L163321
$L163320:
  0391e	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -132+[ebp], 0
$L163321:
  03928	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  0392b	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR -132+[ebp]
  03931	89 82 98 00 00
	00		 mov	 DWORD PTR [edx+152], eax

; 1427 : 	assert( NULL != m_pTo );
; 1428 : 	m_pTo->LimitText( 256 );

  03937	68 00 01 00 00	 push	 256			; 00000100H
  0393c	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  0393f	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  03945	e8 00 00 00 00	 call	 ?LimitText@CRichEditCtrl@@QAEXJ@Z ; CRichEditCtrl::LimitText

; 1429 : 
; 1430 : 	m_pSubject = (CSkinEdit*) FindControl ( "ef_Subject" );

  0394a	68 00 00 00 00	 push	 OFFSET FLAT:$SG155524
  0394f	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  03952	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  03957	89 85 78 ff ff
	ff		 mov	 DWORD PTR -136+[ebp], eax
  0395d	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR -136+[ebp], 0
  03964	74 11		 je	 SHORT $L163322
  03966	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR -136+[ebp]
  0396c	83 ea 60	 sub	 edx, 96			; 00000060H
  0396f	89 95 74 ff ff
	ff		 mov	 DWORD PTR -140+[ebp], edx
  03975	eb 0a		 jmp	 SHORT $L163323
$L163322:
  03977	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -140+[ebp], 0
$L163323:
  03981	8b 45 84	 mov	 eax, DWORD PTR _this$[ebp]
  03984	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR -140+[ebp]
  0398a	89 88 9c 00 00
	00		 mov	 DWORD PTR [eax+156], ecx

; 1431 : 	assert( NULL != m_pSubject );
; 1432 : 	m_pSubject->LimitText( 256 );

  03990	68 00 01 00 00	 push	 256			; 00000100H
  03995	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  03998	8b 8a 9c 00 00
	00		 mov	 ecx, DWORD PTR [edx+156]
  0399e	e8 00 00 00 00	 call	 ?LimitText@CRichEditCtrl@@QAEXJ@Z ; CRichEditCtrl::LimitText

; 1433 : 
; 1434 : 	m_pBody = (CSkinEdit*) FindControl ( "mef_Message" );

  039a3	68 00 00 00 00	 push	 OFFSET FLAT:$SG155527
  039a8	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  039ab	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  039b0	89 85 70 ff ff
	ff		 mov	 DWORD PTR -144+[ebp], eax
  039b6	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR -144+[ebp], 0
  039bd	74 11		 je	 SHORT $L163324
  039bf	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR -144+[ebp]
  039c5	83 e8 60	 sub	 eax, 96			; 00000060H
  039c8	89 85 6c ff ff
	ff		 mov	 DWORD PTR -148+[ebp], eax
  039ce	eb 0a		 jmp	 SHORT $L163325
$L163324:
  039d0	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -148+[ebp], 0
$L163325:
  039da	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  039dd	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR -148+[ebp]
  039e3	89 91 a0 00 00
	00		 mov	 DWORD PTR [ecx+160], edx

; 1435 : 	assert( NULL != m_pBody );
; 1436 : 	m_pBody->LimitText( 8191 );

  039e9	68 ff 1f 00 00	 push	 8191			; 00001fffH
  039ee	8b 45 84	 mov	 eax, DWORD PTR _this$[ebp]
  039f1	8b 88 a0 00 00
	00		 mov	 ecx, DWORD PTR [eax+160]
  039f7	e8 00 00 00 00	 call	 ?LimitText@CRichEditCtrl@@QAEXJ@Z ; CRichEditCtrl::LimitText

; 1437 : 
; 1438 : 	//	Find the scrollbar, no need to save it.
; 1439 : 	CSkinScrollBar* scrollBar = (CSkinScrollBar*) FindControl ( "sb_textscroller" );

  039fc	68 00 00 00 00	 push	 OFFSET FLAT:$SG155531
  03a01	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  03a04	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  03a09	89 45 b8	 mov	 DWORD PTR _scrollBar$[ebp], eax

; 1440 : 	assert( NULL != scrollBar );
; 1441 : 
; 1442 :     //  Find the send button
; 1443 : 	m_pSendButton = (CSendBtn*) FindControl ( "bn_send" );

  03a0c	68 00 00 00 00	 push	 OFFSET FLAT:$SG155534
  03a11	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  03a14	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  03a19	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  03a1c	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 1444 :     assert( NULL != m_pSendButton );
; 1445 : 
; 1446 : 	//	Get the values from the Mail message
; 1447 : 	std::string sTo;

  03a22	8d 55 94	 lea	 edx, DWORD PTR $T163326[ebp]
  03a25	52		 push	 edx
  03a26	8d 4d bc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  03a29	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  03a2f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1448 : 	pMail->GetTo( sTo );

  03a36	8d 45 bc	 lea	 eax, DWORD PTR _sTo$[ebp]
  03a39	50		 push	 eax
  03a3a	8b 4d e0	 mov	 ecx, DWORD PTR _pMail$[ebp]
  03a3d	e8 00 00 00 00	 call	 ?GetTo@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetTo

; 1449 : 
; 1450 : 	std::string sSubject;

  03a42	8d 4d 90	 lea	 ecx, DWORD PTR $T163327[ebp]
  03a45	51		 push	 ecx
  03a46	8d 4d e4	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  03a49	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  03a4f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1451 : 	pMail->GetSubject( sSubject );

  03a53	8d 55 e4	 lea	 edx, DWORD PTR _sSubject$[ebp]
  03a56	52		 push	 edx
  03a57	8b 4d e0	 mov	 ecx, DWORD PTR _pMail$[ebp]
  03a5a	e8 00 00 00 00	 call	 ?GetSubject@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetSubject

; 1452 : 
; 1453 : 	std::string sBody;

  03a5f	8d 45 8c	 lea	 eax, DWORD PTR $T163328[ebp]
  03a62	50		 push	 eax
  03a63	8d 4d d0	 lea	 ecx, DWORD PTR _sBody$[ebp]
  03a66	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  03a6c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1454 : 	pMail->GetBody( sBody );

  03a70	8d 4d d0	 lea	 ecx, DWORD PTR _sBody$[ebp]
  03a73	51		 push	 ecx
  03a74	8b 4d e0	 mov	 ecx, DWORD PTR _pMail$[ebp]
  03a77	e8 00 00 00 00	 call	 ?GetBody@CMailMsg@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CMailMsg::GetBody

; 1455 : 
; 1456 : 	//	Setup the to field
; 1457 : 	m_pTo->SetText( sTo.c_str() );

  03a7c	8d 4d bc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  03a7f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  03a85	50		 push	 eax
  03a86	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  03a89	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  03a8f	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 1458 : 
; 1459 : 	//	Setup the subject field
; 1460 : 	m_pSubject->SetText( sSubject.c_str() );

  03a94	8d 4d e4	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  03a97	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  03a9d	50		 push	 eax
  03a9e	8b 45 84	 mov	 eax, DWORD PTR _this$[ebp]
  03aa1	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [eax+156]
  03aa7	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 1461 : 
; 1462 : 	//	Setup the message body field
; 1463 : 	m_pBody->SetScrollBar( scrollBar );

  03aac	8b 4d b8	 mov	 ecx, DWORD PTR _scrollBar$[ebp]
  03aaf	51		 push	 ecx
  03ab0	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  03ab3	8b 8a a0 00 00
	00		 mov	 ecx, DWORD PTR [edx+160]
  03ab9	e8 00 00 00 00	 call	 ?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z ; CSkinEdit::SetScrollBar

; 1464 : 	m_pBody->SetText( sBody.c_str() );

  03abe	8d 4d d0	 lea	 ecx, DWORD PTR _sBody$[ebp]
  03ac1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  03ac7	50		 push	 eax
  03ac8	8b 45 84	 mov	 eax, DWORD PTR _this$[ebp]
  03acb	8b 88 a0 00 00
	00		 mov	 ecx, DWORD PTR [eax+160]
  03ad1	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 1465 : 
; 1466 : 	m_pBody->SetSel( 0, 0 );

  03ad6	6a 00		 push	 0
  03ad8	6a 00		 push	 0
  03ada	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  03add	8b 89 a0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+160]
  03ae3	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 1467 : 	m_pBody->SetVisibleLine( 0 );

  03ae8	6a 00		 push	 0
  03aea	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  03aed	8b 8a a0 00 00
	00		 mov	 ecx, DWORD PTR [edx+160]
  03af3	83 c1 40	 add	 ecx, 64			; 00000040H
  03af6	e8 00 00 00 00	 call	 ?SetVisibleLine@CScrollable@@QAEXH@Z ; CScrollable::SetVisibleLine

; 1468 : 
; 1469 : 	switch ( pMail->GetType() ) {

  03afb	8b 4d e0	 mov	 ecx, DWORD PTR _pMail$[ebp]
  03afe	e8 00 00 00 00	 call	 ?GetType@CMailMsg@@QAEHXZ ; CMailMsg::GetType
  03b03	89 85 68 ff ff
	ff		 mov	 DWORD PTR -152+[ebp], eax
  03b09	83 bd 68 ff ff
	ff 01		 cmp	 DWORD PTR -152+[ebp], 1
  03b10	74 14		 je	 SHORT $L155546
  03b12	83 bd 68 ff ff
	ff 02		 cmp	 DWORD PTR -152+[ebp], 2
  03b19	74 1b		 je	 SHORT $L155547
  03b1b	83 bd 68 ff ff
	ff 03		 cmp	 DWORD PTR -152+[ebp], 3
  03b22	74 02		 je	 SHORT $L155546
  03b24	eb 1e		 jmp	 SHORT $L155543
$L155546:

; 1470 : 		case CMailMsg::mmtNew:
; 1471 : 		case CMailMsg::mmtForward:
; 1472 : 			m_pTo->SetFocus();

  03b26	8b 45 84	 mov	 eax, DWORD PTR _this$[ebp]
  03b29	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  03b2f	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 1473 : 			break;

  03b34	eb 0e		 jmp	 SHORT $L155543
$L155547:

; 1474 : 		case CMailMsg::mmtReply:
; 1475 : 			m_pBody->SetFocus();

  03b36	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  03b39	8b 89 a0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+160]
  03b3f	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L155543:

; 1478 : 
; 1479 :     if ( !g_pToonSettings->get_TabDisplay() ) {

  03b44	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  03b4a	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  03b4f	85 c0		 test	 eax, eax
  03b51	75 14		 jne	 SHORT $L155548

; 1480 : 	    //	Restore the previous location of the window
; 1481 : 	    RestoreLocation();

  03b53	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  03b56	e8 00 00 00 00	 call	 ?RestoreLocation@CSkinWnd@@QAE_NXZ ; CSkinWnd::RestoreLocation

; 1482 : 
; 1483 : 	    //	Show the finished window
; 1484 : 	    ShowWindow( SW_SHOW );

  03b5b	6a 05		 push	 5
  03b5d	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  03b60	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 1485 :     } else {

  03b65	eb 11		 jmp	 SHORT $L155549
$L155548:

; 1486 :         g_pMainPanelWnd->SetTabWindow( TID_MAIL, (CWnd *)this );

  03b67	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  03b6a	52		 push	 edx
  03b6b	6a 04		 push	 4
  03b6d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  03b73	e8 00 00 00 00	 call	 ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z ; CMainPanelWnd::SetTabWindow
$L155549:

; 1488 : 
; 1489 : 	return TRUE;

  03b78	c7 45 88 01 00
	00 00		 mov	 DWORD PTR $T163329[ebp], 1
  03b7f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03b83	8d 4d d0	 lea	 ecx, DWORD PTR _sBody$[ebp]
  03b86	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  03b8c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03b90	8d 4d e4	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  03b93	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  03b99	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03ba0	8d 4d bc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  03ba3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  03ba9	8b 45 88	 mov	 eax, DWORD PTR $T163329[ebp]
$L155505:

; 1490 : }

  03bac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03baf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03bb6	8b e5		 mov	 esp, ebp
  03bb8	5d		 pop	 ebp
  03bb9	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L163330:
  00459	8d 4d bc	 lea	 ecx, DWORD PTR _sTo$[ebp]
  0045c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00462	c3		 ret	 0
$L163331:
  00463	8d 4d e4	 lea	 ecx, DWORD PTR _sSubject$[ebp]
  00466	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0046c	c3		 ret	 0
$L163332:
  0046d	8d 4d d0	 lea	 ecx, DWORD PTR _sBody$[ebp]
  00470	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00476	c3		 ret	 0
$L163335:
  00477	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163334
  0047c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CMailMsgAuthorWnd@@UAEHH@Z ENDP			; CMailMsgAuthorWnd::Create
_DATA	SEGMENT
$SG155560 DB	'_', 00H
	ORG $+2
$SG155562 DB	'ok', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163353 DD	019930520H
	DD	04H
	DD	FLAT:$T163355
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163355 DD	0ffffffffH
	DD	FLAT:$L163346
	DD	00H
	DD	FLAT:$L163347
	DD	01H
	DD	FLAT:$L163348
	DD	02H
	DD	FLAT:$L163349
xdata$x	ENDS
_TEXT	SEGMENT
$T163338 = -24
$T163339 = -28
$T163340 = -32
$T163341 = -36
$T163344 = -40
$T163345 = -44
__$EHRec$ = -12
_obj$ = 8
_this$ = -48
_name$ = -16
_id$ = -20
?MakeSkinCtrl@CMailMsgAuthorWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CMailMsgAuthorWnd::MakeSkinCtrl

; 1494 : {

  03bbc	55		 push	 ebp
  03bbd	8b ec		 mov	 ebp, esp
  03bbf	6a ff		 push	 -1
  03bc1	68 00 00 00 00	 push	 $L163354
  03bc6	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  03bcc	50		 push	 eax
  03bcd	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  03bd4	83 ec 38	 sub	 esp, 56			; 00000038H
  03bd7	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx
  03bda	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1495 : 	// the type of the control is specified by the 3 left characters of the name
; 1496 : 	CString name = obj.GetName();

  03be1	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  03be4	50		 push	 eax
  03be5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03be8	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  03bed	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1497 : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  03bf1	6a 00		 push	 0
  03bf3	68 00 00 00 00	 push	 OFFSET FLAT:$SG155560
  03bf8	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03bfb	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  03c00	50		 push	 eax
  03c01	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03c04	51		 push	 ecx
  03c05	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03c08	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  03c0d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1498 : 
; 1499 : 	// handle the send button
; 1500 : 	if ( id == "ok" ) {

  03c11	68 00 00 00 00	 push	 OFFSET FLAT:$SG155562
  03c16	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  03c19	52		 push	 edx
  03c1a	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  03c1f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  03c24	85 c0		 test	 eax, eax
  03c26	0f 84 85 00 00
	00		 je	 $L155561

; 1501 : 		return new CDoneBtn ( obj, this );

  03c2c	6a 14		 push	 20			; 00000014H
  03c2e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03c33	83 c4 04	 add	 esp, 4
  03c36	89 45 e0	 mov	 DWORD PTR $T163340[ebp], eax
  03c39	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  03c3d	83 7d e0 00	 cmp	 DWORD PTR $T163340[ebp], 0
  03c41	74 2b		 je	 SHORT $L163342
  03c43	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  03c46	50		 push	 eax
  03c47	83 ec 08	 sub	 esp, 8
  03c4a	8b cc		 mov	 ecx, esp
  03c4c	89 65 dc	 mov	 DWORD PTR $T163341[ebp], esp
  03c4f	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03c52	52		 push	 edx
  03c53	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03c58	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  03c5b	8b 4d e0	 mov	 ecx, DWORD PTR $T163340[ebp]
  03c5e	e8 00 00 00 00	 call	 ??0CDoneBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CDoneBtn::CDoneBtn
  03c63	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  03c66	8b 45 c8	 mov	 eax, DWORD PTR -56+[ebp]
  03c69	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  03c6c	eb 07		 jmp	 SHORT $L163343
$L163342:
  03c6e	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L163343:
  03c75	8b 4d c4	 mov	 ecx, DWORD PTR -60+[ebp]
  03c78	89 4d e4	 mov	 DWORD PTR $T163339[ebp], ecx
  03c7b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03c7f	8b 55 e4	 mov	 edx, DWORD PTR $T163339[ebp]
  03c82	89 55 e8	 mov	 DWORD PTR $T163338[ebp], edx
  03c85	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03c89	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03c8c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03c91	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03c95	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03c98	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03c9d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03ca4	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03ca7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03cac	8b 45 e8	 mov	 eax, DWORD PTR $T163338[ebp]
  03caf	eb 4f		 jmp	 SHORT $L155555
$L155561:

; 1503 : 
; 1504 : 	return CMailMsgWnd::MakeSkinCtrl( obj );

  03cb1	83 ec 08	 sub	 esp, 8
  03cb4	8b cc		 mov	 ecx, esp
  03cb6	89 65 d4	 mov	 DWORD PTR $T163345[ebp], esp
  03cb9	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  03cbc	50		 push	 eax
  03cbd	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03cc2	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  03cc5	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  03cc8	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  03ccd	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  03cd0	8b 4d bc	 mov	 ecx, DWORD PTR -68+[ebp]
  03cd3	89 4d d8	 mov	 DWORD PTR $T163344[ebp], ecx
  03cd6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03cda	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  03cdd	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03ce2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03ce6	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  03ce9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03cee	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03cf5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03cf8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03cfd	8b 45 d8	 mov	 eax, DWORD PTR $T163344[ebp]
$L155555:

; 1505 : }

  03d00	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03d03	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03d0a	8b e5		 mov	 esp, ebp
  03d0c	5d		 pop	 ebp
  03d0d	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L163346:
  00481	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00484	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00489	c3		 ret	 0
$L163347:
  0048a	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0048d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00492	c3		 ret	 0
$L163348:
  00493	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00496	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0049b	c3		 ret	 0
$L163349:
  0049c	8b 45 e0	 mov	 eax, DWORD PTR $T163340[ebp]
  0049f	50		 push	 eax
  004a0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004a5	59		 pop	 ecx
  004a6	c3		 ret	 0
$L163354:
  004a7	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163353
  004ac	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CMailMsgAuthorWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CMailMsgAuthorWnd::MakeSkinCtrl
PUBLIC	?GetLength@CString@@QBEHXZ			; CString::GetLength
PUBLIC	?IsEmpty@CString@@QBEHXZ			; CString::IsEmpty
EXTRN	??4CString@@QAEABV0@ABV0@@Z:NEAR		; CString::operator=
EXTRN	?GetText@CSkinEdit@@QAEXAAVCString@@@Z:NEAR	; CSkinEdit::GetText
EXTRN	?TrimRight@CString@@QAEXPBD@Z:NEAR		; CString::TrimRight
EXTRN	?TrimLeft@CString@@QAEXPBD@Z:NEAR		; CString::TrimLeft
_DATA	SEGMENT
	ORG $+1
$SG155579 DB	' ', 00H
	ORG $+2
$SG155580 DB	' ', 00H
	ORG $+2
$SG155582 DB	'Send this message to who??', 00H
	ORG $+1
$SG155583 DB	'Error:', 00H
	ORG $+1
$SG155589 DB	'Pending request.  Please try again in a moment.', 00H
$SG155590 DB	'ERROR:', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163363 DD	019930520H
	DD	04H
	DD	FLAT:$T163365
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163365 DD	0ffffffffH
	DD	FLAT:$L163358
	DD	00H
	DD	FLAT:$L163359
	DD	01H
	DD	FLAT:$L163360
	DD	02H
	DD	FLAT:$L163361
xdata$x	ENDS
_TEXT	SEGMENT
$T163357 = -36
__$EHRec$ = -12
_this$ = -40
_pMail$ = -16
_sTo$155576 = -28
_sSubject$155577 = -20
_sMsg$155578 = -24
_nTest$155586 = -32
?Next@CMailMsgAuthorWnd@@UAEXXZ PROC NEAR		; CMailMsgAuthorWnd::Next

; 1508 : {

  03d10	55		 push	 ebp
  03d11	8b ec		 mov	 ebp, esp
  03d13	6a ff		 push	 -1
  03d15	68 00 00 00 00	 push	 $L163364
  03d1a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  03d20	50		 push	 eax
  03d21	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  03d28	83 ec 24	 sub	 esp, 36			; 00000024H
  03d2b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 1509 : 	CMailMsg* pMail = CMailMsg::FindByUniqueID( m_nMsgUniqueID );

  03d2e	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  03d31	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  03d37	51		 push	 ecx
  03d38	e8 00 00 00 00	 call	 ?FindByUniqueID@CMailMsg@@SAPAV1@H@Z ; CMailMsg::FindByUniqueID
  03d3d	83 c4 04	 add	 esp, 4
  03d40	89 45 f0	 mov	 DWORD PTR _pMail$[ebp], eax

; 1510 : 
; 1511 : 	if ( pMail ) {

  03d43	83 7d f0 00	 cmp	 DWORD PTR _pMail$[ebp], 0
  03d47	0f 84 b1 01 00
	00		 je	 $L155575

; 1512 : 		CString sTo;

  03d4d	8d 4d e4	 lea	 ecx, DWORD PTR _sTo$155576[ebp]
  03d50	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  03d55	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1513 : 		CString sSubject;

  03d5c	8d 4d ec	 lea	 ecx, DWORD PTR _sSubject$155577[ebp]
  03d5f	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  03d64	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1514 : 		CString sMsg;

  03d68	8d 4d e8	 lea	 ecx, DWORD PTR _sMsg$155578[ebp]
  03d6b	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  03d70	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1515 : 
; 1516 : 		m_pTo->GetText( sTo );

  03d74	8d 55 e4	 lea	 edx, DWORD PTR _sTo$155576[ebp]
  03d77	52		 push	 edx
  03d78	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  03d7b	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  03d81	e8 00 00 00 00	 call	 ?GetText@CSkinEdit@@QAEXAAVCString@@@Z ; CSkinEdit::GetText

; 1517 : 
; 1518 : 		sTo.TrimLeft( " " );

  03d86	68 00 00 00 00	 push	 OFFSET FLAT:$SG155579
  03d8b	8d 4d e4	 lea	 ecx, DWORD PTR _sTo$155576[ebp]
  03d8e	e8 00 00 00 00	 call	 ?TrimLeft@CString@@QAEXPBD@Z ; CString::TrimLeft

; 1519 : 		sTo.TrimRight( " " );

  03d93	68 00 00 00 00	 push	 OFFSET FLAT:$SG155580
  03d98	8d 4d e4	 lea	 ecx, DWORD PTR _sTo$155576[ebp]
  03d9b	e8 00 00 00 00	 call	 ?TrimRight@CString@@QAEXPBD@Z ; CString::TrimRight

; 1520 : 
; 1521 : 		if ( sTo.IsEmpty() ) {

  03da0	8d 4d e4	 lea	 ecx, DWORD PTR _sTo$155576[ebp]
  03da3	e8 00 00 00 00	 call	 ?IsEmpty@CString@@QBEHXZ ; CString::IsEmpty
  03da8	85 c0		 test	 eax, eax
  03daa	74 40		 je	 SHORT $L155581

; 1522 : 			SkinMessage( "Error:", "Send this message to who??" );

  03dac	6a 00		 push	 0
  03dae	68 00 00 00 00	 push	 OFFSET FLAT:$SG155582
  03db3	68 00 00 00 00	 push	 OFFSET FLAT:$SG155583
  03db8	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  03dbd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1523 : 			return;

  03dc0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03dc4	8d 4d e8	 lea	 ecx, DWORD PTR _sMsg$155578[ebp]
  03dc7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03dcc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03dd0	8d 4d ec	 lea	 ecx, DWORD PTR _sSubject$155577[ebp]
  03dd3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03dd8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03ddf	8d 4d e4	 lea	 ecx, DWORD PTR _sTo$155576[ebp]
  03de2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03de7	e9 12 01 00 00	 jmp	 $L155573
$L155581:

; 1525 : 
; 1526 : 		m_pSubject->GetText( sSubject );

  03dec	8d 4d ec	 lea	 ecx, DWORD PTR _sSubject$155577[ebp]
  03def	51		 push	 ecx
  03df0	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  03df3	8b 8a 9c 00 00
	00		 mov	 ecx, DWORD PTR [edx+156]
  03df9	e8 00 00 00 00	 call	 ?GetText@CSkinEdit@@QAEXAAVCString@@@Z ; CSkinEdit::GetText

; 1527 : 		m_pBody->GetText( sMsg );

  03dfe	8d 45 e8	 lea	 eax, DWORD PTR _sMsg$155578[ebp]
  03e01	50		 push	 eax
  03e02	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  03e05	8b 89 a0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+160]
  03e0b	e8 00 00 00 00	 call	 ?GetText@CSkinEdit@@QAEXAAVCString@@@Z ; CSkinEdit::GetText

; 1528 : 
; 1529 : 		if ( sMsg.GetLength() > 8191 ) {

  03e10	8d 4d e8	 lea	 ecx, DWORD PTR _sMsg$155578[ebp]
  03e13	e8 00 00 00 00	 call	 ?GetLength@CString@@QBEHXZ ; CString::GetLength
  03e18	3d ff 1f 00 00	 cmp	 eax, 8191		; 00001fffH
  03e1d	7e 41		 jle	 SHORT $L155584

; 1530 : 			sMsg = sMsg.Left( 8191 );

  03e1f	68 ff 1f 00 00	 push	 8191			; 00001fffH
  03e24	8d 55 dc	 lea	 edx, DWORD PTR $T163357[ebp]
  03e27	52		 push	 edx
  03e28	8d 4d e8	 lea	 ecx, DWORD PTR _sMsg$155578[ebp]
  03e2b	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  03e30	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  03e33	8b 45 d4	 mov	 eax, DWORD PTR -44+[ebp]
  03e36	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  03e39	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  03e3d	8b 4d d0	 mov	 ecx, DWORD PTR -48+[ebp]
  03e40	51		 push	 ecx
  03e41	8d 4d e8	 lea	 ecx, DWORD PTR _sMsg$155578[ebp]
  03e44	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@ABV0@@Z ; CString::operator=
  03e49	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  03e4d	8d 4d dc	 lea	 ecx, DWORD PTR $T163357[ebp]
  03e50	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 1531 : 			int nTest = sMsg.GetLength();

  03e55	8d 4d e8	 lea	 ecx, DWORD PTR _sMsg$155578[ebp]
  03e58	e8 00 00 00 00	 call	 ?GetLength@CString@@QBEHXZ ; CString::GetLength
  03e5d	89 45 e0	 mov	 DWORD PTR _nTest$155586[ebp], eax
$L155584:

; 1533 : 
; 1534 : 		pMail->SetTo( sTo );

  03e60	8d 4d e4	 lea	 ecx, DWORD PTR _sTo$155576[ebp]
  03e63	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  03e68	50		 push	 eax
  03e69	8b 4d f0	 mov	 ecx, DWORD PTR _pMail$[ebp]
  03e6c	e8 00 00 00 00	 call	 ?SetTo@CMailMsg@@QAEXPBD@Z ; CMailMsg::SetTo

; 1535 : 		pMail->SetSubject( sSubject );

  03e71	8d 4d ec	 lea	 ecx, DWORD PTR _sSubject$155577[ebp]
  03e74	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  03e79	50		 push	 eax
  03e7a	8b 4d f0	 mov	 ecx, DWORD PTR _pMail$[ebp]
  03e7d	e8 00 00 00 00	 call	 ?SetSubject@CMailMsg@@QAEXPBD@Z ; CMailMsg::SetSubject

; 1536 : 		pMail->SetBody( sMsg );

  03e82	8d 4d e8	 lea	 ecx, DWORD PTR _sMsg$155578[ebp]
  03e85	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  03e8a	50		 push	 eax
  03e8b	8b 4d f0	 mov	 ecx, DWORD PTR _pMail$[ebp]
  03e8e	e8 00 00 00 00	 call	 ?SetBody@CMailMsg@@QAEXPBD@Z ; CMailMsg::SetBody

; 1537 : 
; 1538 : 		if ( g_pMailBox->CanRequestMsg() ) {

  03e93	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  03e99	e8 00 00 00 00	 call	 ?CanRequestMsg@CMailBox@@QAEHXZ ; CMailBox::CanRequestMsg
  03e9e	85 c0		 test	 eax, eax
  03ea0	74 21		 je	 SHORT $L155587

; 1539 : 			g_pMailBox->SendMsg( m_nMsgUniqueID );

  03ea2	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  03ea5	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  03eab	50		 push	 eax
  03eac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  03eb2	e8 00 00 00 00	 call	 ?SendMsg@CMailBox@@QAEXH@Z ; CMailBox::SendMsg

; 1540 :             EnableSendBtn( false );

  03eb7	6a 00		 push	 0
  03eb9	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  03ebc	e8 00 00 00 00	 call	 ?EnableSendBtn@CMailMsgAuthorWnd@@QAEXH@Z ; CMailMsgAuthorWnd::EnableSendBtn

; 1541 : 		} else {

  03ec1	eb 14		 jmp	 SHORT $L155588
$L155587:

; 1542 : 			SkinMessage( "ERROR:", "Pending request.  Please try again in a moment." );

  03ec3	6a 00		 push	 0
  03ec5	68 00 00 00 00	 push	 OFFSET FLAT:$SG155589
  03eca	68 00 00 00 00	 push	 OFFSET FLAT:$SG155590
  03ecf	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  03ed4	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155588:

; 1544 : 	}

  03ed7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  03edb	8d 4d e8	 lea	 ecx, DWORD PTR _sMsg$155578[ebp]
  03ede	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03ee3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  03ee7	8d 4d ec	 lea	 ecx, DWORD PTR _sSubject$155577[ebp]
  03eea	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  03eef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03ef6	8d 4d e4	 lea	 ecx, DWORD PTR _sTo$155576[ebp]
  03ef9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L155575:
$L155573:

; 1545 : }

  03efe	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03f01	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03f08	8b e5		 mov	 esp, ebp
  03f0a	5d		 pop	 ebp
  03f0b	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L163358:
  004b1	8d 4d e4	 lea	 ecx, DWORD PTR _sTo$155576[ebp]
  004b4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  004b9	c3		 ret	 0
$L163359:
  004ba	8d 4d ec	 lea	 ecx, DWORD PTR _sSubject$155577[ebp]
  004bd	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  004c2	c3		 ret	 0
$L163360:
  004c3	8d 4d e8	 lea	 ecx, DWORD PTR _sMsg$155578[ebp]
  004c6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  004cb	c3		 ret	 0
$L163361:
  004cc	8d 4d dc	 lea	 ecx, DWORD PTR $T163357[ebp]
  004cf	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  004d4	c3		 ret	 0
$L163364:
  004d5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163363
  004da	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Next@CMailMsgAuthorWnd@@UAEXXZ ENDP			; CMailMsgAuthorWnd::Next
PUBLIC	?GetData@CString@@IBEPAUCStringData@@XZ		; CString::GetData
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetLength@CString@@QBEHXZ PROC NEAR			; CString::GetLength, COMDAT

; 145  : 	{ return GetData()->nDataLength; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetData@CString@@IBEPAUCStringData@@XZ ; CString::GetData
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?GetLength@CString@@QBEHXZ ENDP				; CString::GetLength
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetData@CString@@IBEPAUCStringData@@XZ PROC NEAR	; CString::GetData, COMDAT

; 122  : 	{ ASSERT(m_pchData != NULL); return ((CStringData*)m_pchData)-1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?GetData@CString@@IBEPAUCStringData@@XZ ENDP		; CString::GetData
_TEXT	ENDS
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsEmpty@CString@@QBEHXZ PROC NEAR			; CString::IsEmpty, COMDAT

; 149  : 	{ return GetData()->nDataLength == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetData@CString@@IBEPAUCStringData@@XZ ; CString::GetData
  0000f	33 c9		 xor	 ecx, ecx
  00011	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00015	0f 94 c1	 sete	 cl
  00018	8b c1		 mov	 eax, ecx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?IsEmpty@CString@@QBEHXZ ENDP				; CString::IsEmpty
_TEXT	ENDS
_TEXT	SEGMENT
_boEnable$ = 8
_this$ = -4
?EnableSendBtn@CMailMsgAuthorWnd@@QAEXH@Z PROC NEAR	; CMailMsgAuthorWnd::EnableSendBtn

; 1549 : {

  03f0c	55		 push	 ebp
  03f0d	8b ec		 mov	 ebp, esp
  03f0f	51		 push	 ecx
  03f10	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1550 :     if (!m_pSendButton) return;

  03f13	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03f16	83 b8 a4 00 00
	00 00		 cmp	 DWORD PTR [eax+164], 0
  03f1d	75 02		 jne	 SHORT $L155595
  03f1f	eb 4d		 jmp	 SHORT $L155594
$L155595:

; 1551 : 
; 1552 :     if (boEnable)

  03f21	83 7d 08 00	 cmp	 DWORD PTR _boEnable$[ebp], 0
  03f25	74 19		 je	 SHORT $L155596

; 1554 :         m_pSendButton->ShowNormal();

  03f27	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03f2a	8b 89 a4 00 00
	00		 mov	 ecx, DWORD PTR [ecx+164]
  03f30	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  03f33	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  03f39	8b 10		 mov	 edx, DWORD PTR [eax]
  03f3b	ff 52 28	 call	 DWORD PTR [edx+40]

; 1556 :     else

  03f3e	eb 17		 jmp	 SHORT $L155597
$L155596:

; 1558 :         m_pSendButton->ShowDisabled();

  03f40	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03f43	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  03f49	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  03f4c	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  03f52	8b 10		 mov	 edx, DWORD PTR [eax]
  03f54	ff 52 2c	 call	 DWORD PTR [edx+44]
$L155597:

; 1560 : 
; 1561 :     m_pSendButton->Refresh();

  03f57	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  03f5a	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  03f60	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  03f63	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  03f69	8b 10		 mov	 edx, DWORD PTR [eax]
  03f6b	ff 52 08	 call	 DWORD PTR [edx+8]
$L155594:

; 1562 : }

  03f6e	8b e5		 mov	 esp, ebp
  03f70	5d		 pop	 ebp
  03f71	c2 04 00	 ret	 4
?EnableSendBtn@CMailMsgAuthorWnd@@QAEXH@Z ENDP		; CMailMsgAuthorWnd::EnableSendBtn
_TEXT	ENDS
PUBLIC	?OnActivate@CEraseBtn@@UAEXFF@Z			; CEraseBtn::OnActivate
PUBLIC	??_7CEraseBtn@@6B@				; CEraseBtn::`vftable'
PUBLIC	??_GCEraseBtn@@UAEPAXI@Z			; CEraseBtn::`scalar deleting destructor'
PUBLIC	??_ECEraseBtn@@UAEPAXI@Z			; CEraseBtn::`vector deleting destructor'
EXTRN	??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinBtn::CSkinBtn
EXTRN	?OnMouseDown@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseDown
EXTRN	?OnMouseUp@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseUp
EXTRN	?Refresh@CSkinBtn@@UAEXXZ:NEAR			; CSkinBtn::Refresh
;	COMDAT ??_7CEraseBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CEraseBtn@@6B@ DD FLAT:??_ECEraseBtn@@UAEPAXI@Z	; CEraseBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CEraseBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T163376 DD	019930520H
	DD	01H
	DD	FLAT:$T163378
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163378 DD	0ffffffffH
	DD	FLAT:$L163372
xdata$x	ENDS
_TEXT	SEGMENT
$T163371 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_nUniqueID$ = 20
_this$ = -20
??0CEraseBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z PROC NEAR	; CEraseBtn::CEraseBtn

; 1568 : {

  03f74	55		 push	 ebp
  03f75	8b ec		 mov	 ebp, esp
  03f77	6a ff		 push	 -1
  03f79	68 00 00 00 00	 push	 $L163377
  03f7e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  03f84	50		 push	 eax
  03f85	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  03f8c	83 ec 10	 sub	 esp, 16			; 00000010H
  03f8f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  03f92	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  03f99	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  03f9c	50		 push	 eax
  03f9d	83 ec 08	 sub	 esp, 8
  03fa0	8b cc		 mov	 ecx, esp
  03fa2	89 65 f0	 mov	 DWORD PTR $T163371[ebp], esp
  03fa5	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  03fa8	52		 push	 edx
  03fa9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03fae	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  03fb1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  03fb4	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  03fb9	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  03fbc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  03fbf	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CEraseBtn@@6B@ ; CEraseBtn::`vftable'

; 1569 : 	m_nUniqueID = nUniqueID;

  03fc5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  03fc8	8b 55 14	 mov	 edx, DWORD PTR _nUniqueID$[ebp]
  03fcb	89 51 14	 mov	 DWORD PTR [ecx+20], edx

; 1570 : }

  03fce	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03fd5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  03fd8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  03fdd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  03fe0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03fe3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  03fea	8b e5		 mov	 esp, ebp
  03fec	5d		 pop	 ebp
  03fed	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L163372:
  004df	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  004e2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  004e7	c3		 ret	 0
$L163377:
  004e8	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163376
  004ed	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CEraseBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ENDP	; CEraseBtn::CEraseBtn
PUBLIC	??1CEraseBtn@@UAE@XZ				; CEraseBtn::~CEraseBtn
;	COMDAT ??_GCEraseBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCEraseBtn@@UAEPAXI@Z PROC NEAR			; CEraseBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CEraseBtn@@UAE@XZ	; CEraseBtn::~CEraseBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L155608
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L155608:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCEraseBtn@@UAEPAXI@Z ENDP				; CEraseBtn::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CSkinBtn@@UAE@XZ				; CSkinBtn::~CSkinBtn
;	COMDAT ??1CEraseBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CEraseBtn@@UAE@XZ PROC NEAR				; CEraseBtn::~CEraseBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CEraseBtn@@UAE@XZ ENDP				; CEraseBtn::~CEraseBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CEraseBtn@@UAEXFF@Z PROC NEAR		; CEraseBtn::OnActivate

; 1574 : {

  03ff0	55		 push	 ebp
  03ff1	8b ec		 mov	 ebp, esp
  03ff3	51		 push	 ecx
  03ff4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1575 : 	if ( g_pMailBox )

  03ff7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox
  03ffe	74 12		 je	 SHORT $L155616

; 1576 : 		g_pMailBox->DeleteMsg( m_nUniqueID );

  04000	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04003	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  04006	51		 push	 ecx
  04007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  0400d	e8 00 00 00 00	 call	 ?DeleteMsg@CMailBox@@QAEHH@Z ; CMailBox::DeleteMsg
$L155616:

; 1577 : 
; 1578 :     if ( g_pToonSettings->get_TabDisplay() )

  04012	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  04018	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  0401d	85 c0		 test	 eax, eax
  0401f	74 1d		 je	 SHORT $L155618

; 1580 :         // Re-assign inbox to the tab control
; 1581 :         if (g_pMailMgrWnd)

  04021	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  04028	74 14		 je	 SHORT $L155618

; 1583 :             g_pMainPanelWnd->SetTabWindow( TID_MAIL, g_pMailMgrWnd);

  0402a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  04030	52		 push	 edx
  04031	6a 04		 push	 4
  04033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  04039	e8 00 00 00 00	 call	 ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z ; CMainPanelWnd::SetTabWindow
$L155618:

; 1586 : 
; 1587 : 	m_pParentWnd->CloseSelf();

  0403e	6a 00		 push	 0
  04040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04043	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  04046	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  04049	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0404c	8b 10		 mov	 edx, DWORD PTR [eax]
  0404e	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 1588 : }

  04054	8b e5		 mov	 esp, ebp
  04056	5d		 pop	 ebp
  04057	c2 08 00	 ret	 8
?OnActivate@CEraseBtn@@UAEXFF@Z ENDP			; CEraseBtn::OnActivate
_TEXT	ENDS
PUBLIC	?OnActivate@CReplyBtn@@UAEXFF@Z			; CReplyBtn::OnActivate
PUBLIC	??_7CReplyBtn@@6B@				; CReplyBtn::`vftable'
PUBLIC	??_GCReplyBtn@@UAEPAXI@Z			; CReplyBtn::`scalar deleting destructor'
PUBLIC	??_ECReplyBtn@@UAEPAXI@Z			; CReplyBtn::`vector deleting destructor'
;	COMDAT ??_7CReplyBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CReplyBtn@@6B@ DD FLAT:??_ECReplyBtn@@UAEPAXI@Z	; CReplyBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CReplyBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T163389 DD	019930520H
	DD	01H
	DD	FLAT:$T163391
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163391 DD	0ffffffffH
	DD	FLAT:$L163385
xdata$x	ENDS
_TEXT	SEGMENT
$T163384 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_nUniqueID$ = 20
_this$ = -20
??0CReplyBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z PROC NEAR	; CReplyBtn::CReplyBtn

; 1594 : {

  0405a	55		 push	 ebp
  0405b	8b ec		 mov	 ebp, esp
  0405d	6a ff		 push	 -1
  0405f	68 00 00 00 00	 push	 $L163390
  04064	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0406a	50		 push	 eax
  0406b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04072	83 ec 10	 sub	 esp, 16			; 00000010H
  04075	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  04078	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0407f	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  04082	50		 push	 eax
  04083	83 ec 08	 sub	 esp, 8
  04086	8b cc		 mov	 ecx, esp
  04088	89 65 f0	 mov	 DWORD PTR $T163384[ebp], esp
  0408b	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0408e	52		 push	 edx
  0408f	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04094	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  04097	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0409a	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  0409f	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  040a2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  040a5	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CReplyBtn@@6B@ ; CReplyBtn::`vftable'

; 1595 : 	m_nUniqueID = nUniqueID;

  040ab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  040ae	8b 55 14	 mov	 edx, DWORD PTR _nUniqueID$[ebp]
  040b1	89 51 14	 mov	 DWORD PTR [ecx+20], edx

; 1596 : }

  040b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  040bb	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  040be	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  040c3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  040c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  040c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  040d0	8b e5		 mov	 esp, ebp
  040d2	5d		 pop	 ebp
  040d3	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L163385:
  004f2	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  004f5	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  004fa	c3		 ret	 0
$L163390:
  004fb	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163389
  00500	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CReplyBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ENDP	; CReplyBtn::CReplyBtn
PUBLIC	??1CReplyBtn@@UAE@XZ				; CReplyBtn::~CReplyBtn
;	COMDAT ??_GCReplyBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCReplyBtn@@UAEPAXI@Z PROC NEAR			; CReplyBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CReplyBtn@@UAE@XZ	; CReplyBtn::~CReplyBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L155629
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L155629:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCReplyBtn@@UAEPAXI@Z ENDP				; CReplyBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CReplyBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CReplyBtn@@UAE@XZ PROC NEAR				; CReplyBtn::~CReplyBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CReplyBtn@@UAE@XZ ENDP				; CReplyBtn::~CReplyBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CReplyBtn@@UAEXFF@Z PROC NEAR		; CReplyBtn::OnActivate

; 1600 : {

  040d6	55		 push	 ebp
  040d7	8b ec		 mov	 ebp, esp
  040d9	51		 push	 ecx
  040da	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1601 : 	if ( g_pMailBox )

  040dd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox
  040e4	74 12		 je	 SHORT $L155637

; 1602 : 		g_pMailBox->AuthorReplyMsg( m_nUniqueID );

  040e6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  040e9	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  040ec	51		 push	 ecx
  040ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  040f3	e8 00 00 00 00	 call	 ?AuthorReplyMsg@CMailBox@@QAEXH@Z ; CMailBox::AuthorReplyMsg
$L155637:

; 1603 : 
; 1604 :     // Get rid of read window when we reply in tabbed mode
; 1605 :     if ( g_pToonSettings->get_TabDisplay() )

  040f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  040fe	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  04103	85 c0		 test	 eax, eax
  04105	74 16		 je	 SHORT $L155638

; 1607 :         m_pParentWnd->CloseSelf();        

  04107	6a 00		 push	 0
  04109	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0410c	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  0410f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04112	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  04115	8b 02		 mov	 eax, DWORD PTR [edx]
  04117	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]
$L155638:

; 1609 : }

  0411d	8b e5		 mov	 esp, ebp
  0411f	5d		 pop	 ebp
  04120	c2 08 00	 ret	 8
?OnActivate@CReplyBtn@@UAEXFF@Z ENDP			; CReplyBtn::OnActivate
_TEXT	ENDS
PUBLIC	?OnActivate@CForwardBtn@@UAEXFF@Z		; CForwardBtn::OnActivate
PUBLIC	??_7CForwardBtn@@6B@				; CForwardBtn::`vftable'
PUBLIC	??_GCForwardBtn@@UAEPAXI@Z			; CForwardBtn::`scalar deleting destructor'
PUBLIC	??_ECForwardBtn@@UAEPAXI@Z			; CForwardBtn::`vector deleting destructor'
;	COMDAT ??_7CForwardBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CForwardBtn@@6B@ DD FLAT:??_ECForwardBtn@@UAEPAXI@Z	; CForwardBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CForwardBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T163402 DD	019930520H
	DD	01H
	DD	FLAT:$T163404
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163404 DD	0ffffffffH
	DD	FLAT:$L163398
xdata$x	ENDS
_TEXT	SEGMENT
$T163397 = -16
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_nUniqueID$ = 20
_this$ = -20
??0CForwardBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z PROC NEAR ; CForwardBtn::CForwardBtn

; 1615 : {

  04123	55		 push	 ebp
  04124	8b ec		 mov	 ebp, esp
  04126	6a ff		 push	 -1
  04128	68 00 00 00 00	 push	 $L163403
  0412d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  04133	50		 push	 eax
  04134	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0413b	83 ec 10	 sub	 esp, 16			; 00000010H
  0413e	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  04141	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  04148	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0414b	50		 push	 eax
  0414c	83 ec 08	 sub	 esp, 8
  0414f	8b cc		 mov	 ecx, esp
  04151	89 65 f0	 mov	 DWORD PTR $T163397[ebp], esp
  04154	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04157	52		 push	 edx
  04158	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0415d	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  04160	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  04163	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  04168	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0416b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0416e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CForwardBtn@@6B@ ; CForwardBtn::`vftable'

; 1616 : 	m_nUniqueID = nUniqueID;

  04174	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  04177	8b 55 14	 mov	 edx, DWORD PTR _nUniqueID$[ebp]
  0417a	89 51 14	 mov	 DWORD PTR [ecx+20], edx

; 1617 : }

  0417d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04184	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04187	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0418c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0418f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  04192	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04199	8b e5		 mov	 esp, ebp
  0419b	5d		 pop	 ebp
  0419c	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L163398:
  00505	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00508	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0050d	c3		 ret	 0
$L163403:
  0050e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163402
  00513	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CForwardBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ENDP	; CForwardBtn::CForwardBtn
PUBLIC	??1CForwardBtn@@UAE@XZ				; CForwardBtn::~CForwardBtn
;	COMDAT ??_GCForwardBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCForwardBtn@@UAEPAXI@Z PROC NEAR			; CForwardBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CForwardBtn@@UAE@XZ	; CForwardBtn::~CForwardBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L155649
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L155649:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCForwardBtn@@UAEPAXI@Z ENDP				; CForwardBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CForwardBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CForwardBtn@@UAE@XZ PROC NEAR			; CForwardBtn::~CForwardBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CForwardBtn@@UAE@XZ ENDP				; CForwardBtn::~CForwardBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CForwardBtn@@UAEXFF@Z PROC NEAR		; CForwardBtn::OnActivate

; 1621 : {

  0419f	55		 push	 ebp
  041a0	8b ec		 mov	 ebp, esp
  041a2	51		 push	 ecx
  041a3	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1622 : 	if ( g_pMailBox )

  041a6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox
  041ad	74 12		 je	 SHORT $L155657

; 1623 : 		g_pMailBox->AuthorForwardMsg( m_nUniqueID );

  041af	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  041b2	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  041b5	51		 push	 ecx
  041b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  041bc	e8 00 00 00 00	 call	 ?AuthorForwardMsg@CMailBox@@QAEXH@Z ; CMailBox::AuthorForwardMsg
$L155657:

; 1624 : 
; 1625 :     // Get rid of read window when we reply in tabbed mode
; 1626 :     if ( g_pToonSettings->get_TabDisplay() )

  041c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  041c7	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  041cc	85 c0		 test	 eax, eax
  041ce	74 16		 je	 SHORT $L155658

; 1628 :         m_pParentWnd->CloseSelf();        

  041d0	6a 00		 push	 0
  041d2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  041d5	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  041d8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  041db	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  041de	8b 02		 mov	 eax, DWORD PTR [edx]
  041e0	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]
$L155658:

; 1630 : }

  041e6	8b e5		 mov	 esp, ebp
  041e8	5d		 pop	 ebp
  041e9	c2 08 00	 ret	 8
?OnActivate@CForwardBtn@@UAEXFF@Z ENDP			; CForwardBtn::OnActivate
_TEXT	ENDS
PUBLIC	?OnActivate@CDoneBtn@@UAEXFF@Z			; CDoneBtn::OnActivate
PUBLIC	??_7CDoneBtn@@6B@				; CDoneBtn::`vftable'
PUBLIC	??_GCDoneBtn@@UAEPAXI@Z				; CDoneBtn::`scalar deleting destructor'
PUBLIC	??_ECDoneBtn@@UAEPAXI@Z				; CDoneBtn::`vector deleting destructor'
;	COMDAT ??_7CDoneBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CDoneBtn@@6B@ DD FLAT:??_ECDoneBtn@@UAEPAXI@Z	; CDoneBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CDoneBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T163415 DD	019930520H
	DD	01H
	DD	FLAT:$T163417
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163417 DD	0ffffffffH
	DD	FLAT:$L163411
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T163410 = -16
__$EHRec$ = -12
??0CDoneBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CDoneBtn::CDoneBtn

; 1635 : CDoneBtn::CDoneBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn ( obj, pParent ) {}

  041ec	55		 push	 ebp
  041ed	8b ec		 mov	 ebp, esp
  041ef	6a ff		 push	 -1
  041f1	68 00 00 00 00	 push	 $L163416
  041f6	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  041fc	50		 push	 eax
  041fd	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04204	83 ec 10	 sub	 esp, 16			; 00000010H
  04207	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0420a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  04211	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  04214	50		 push	 eax
  04215	83 ec 08	 sub	 esp, 8
  04218	8b cc		 mov	 ecx, esp
  0421a	89 65 f0	 mov	 DWORD PTR $T163410[ebp], esp
  0421d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  04220	52		 push	 edx
  04221	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04226	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  04229	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0422c	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  04231	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  04234	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  04237	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDoneBtn@@6B@ ; CDoneBtn::`vftable'
  0423d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04244	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04247	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0424c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0424f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  04252	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04259	8b e5		 mov	 esp, ebp
  0425b	5d		 pop	 ebp
  0425c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L163411:
  00518	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0051b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00520	c3		 ret	 0
$L163416:
  00521	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163415
  00526	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CDoneBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CDoneBtn::CDoneBtn
PUBLIC	??1CDoneBtn@@UAE@XZ				; CDoneBtn::~CDoneBtn
;	COMDAT ??_GCDoneBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCDoneBtn@@UAEPAXI@Z PROC NEAR			; CDoneBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoneBtn@@UAE@XZ	; CDoneBtn::~CDoneBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L155668
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L155668:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCDoneBtn@@UAEPAXI@Z ENDP				; CDoneBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CDoneBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CDoneBtn@@UAE@XZ PROC NEAR				; CDoneBtn::~CDoneBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CDoneBtn@@UAE@XZ ENDP				; CDoneBtn::~CDoneBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CDoneBtn@@UAEXFF@Z PROC NEAR		; CDoneBtn::OnActivate

; 1639 : {

  0425f	55		 push	 ebp
  04260	8b ec		 mov	 ebp, esp
  04262	51		 push	 ecx
  04263	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1640 :     if ( g_pToonSettings->get_TabDisplay() )

  04266	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0426c	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  04271	85 c0		 test	 eax, eax
  04273	74 1c		 je	 SHORT $L155677

; 1642 :         // Re-assign inbox to the tab control
; 1643 :         if (g_pMailMgrWnd)

  04275	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A, 0 ; g_pMailMgrWnd
  0427c	74 13		 je	 SHORT $L155677

; 1645 :             g_pMainPanelWnd->SetTabWindow( TID_MAIL, g_pMailMgrWnd);

  0427e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMailMgrWnd@@3PAVCMailMgrWnd@@A ; g_pMailMgrWnd
  04283	50		 push	 eax
  04284	6a 04		 push	 4
  04286	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  0428c	e8 00 00 00 00	 call	 ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z ; CMainPanelWnd::SetTabWindow
$L155677:

; 1648 : 
; 1649 :     // Close Read Window
; 1650 :     m_pParentWnd->CloseSelf();

  04291	6a 00		 push	 0
  04293	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04296	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  04299	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0429c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0429f	8b 10		 mov	 edx, DWORD PTR [eax]
  042a1	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 1651 : }

  042a7	8b e5		 mov	 esp, ebp
  042a9	5d		 pop	 ebp
  042aa	c2 08 00	 ret	 8
?OnActivate@CDoneBtn@@UAEXFF@Z ENDP			; CDoneBtn::OnActivate
_TEXT	ENDS
PUBLIC	??0CFileStatus@@QAE@XZ				; CFileStatus::CFileStatus
PUBLIC	?OnActivate@CArchiveBtn@@UAEXFF@Z		; CArchiveBtn::OnActivate
PUBLIC	??_7CArchiveBtn@@6B@				; CArchiveBtn::`vftable'
PUBLIC	??_GCArchiveBtn@@UAEPAXI@Z			; CArchiveBtn::`scalar deleting destructor'
PUBLIC	??_ECArchiveBtn@@UAEPAXI@Z			; CArchiveBtn::`vector deleting destructor'
EXTRN	?GetStatus@CFile@@SGHPBDAAUCFileStatus@@@Z:NEAR	; CFile::GetStatus
;	COMDAT ??_7CArchiveBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CArchiveBtn@@6B@ DD FLAT:??_ECArchiveBtn@@UAEPAXI@Z	; CArchiveBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CArchiveBtn@@UAEXFF@Z
CONST	ENDS
_DATA	SEGMENT
	ORG $+1
$SG155687 DB	'%s\Realm.%s.%s.MM.html', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163430 DD	019930520H
	DD	03H
	DD	FLAT:$T163432
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163432 DD	0ffffffffH
	DD	FLAT:$L163425
	DD	00H
	DD	FLAT:$L163427
	DD	01H
	DD	FLAT:$L163428
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -308
_sFilename$ = -296
_rStatus$ = -292
$T163423 = -300
$T163424 = -304
__$EHRec$ = -12
??0CArchiveBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CArchiveBtn::CArchiveBtn

; 1656 : CArchiveBtn::CArchiveBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn ( obj, pParent ) {

  042ad	55		 push	 ebp
  042ae	8b ec		 mov	 ebp, esp
  042b0	6a ff		 push	 -1
  042b2	68 00 00 00 00	 push	 $L163431
  042b7	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  042bd	50		 push	 eax
  042be	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  042c5	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  042cb	89 8d cc fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  042d1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  042d8	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  042db	50		 push	 eax
  042dc	83 ec 08	 sub	 esp, 8
  042df	8b cc		 mov	 ecx, esp
  042e1	89 a5 d4 fe ff
	ff		 mov	 DWORD PTR $T163423[ebp], esp
  042e7	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  042ea	52		 push	 edx
  042eb	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  042f0	89 85 c8 fe ff
	ff		 mov	 DWORD PTR -312+[ebp], eax
  042f6	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  042fc	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  04301	89 85 c4 fe ff
	ff		 mov	 DWORD PTR -316+[ebp], eax
  04307	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0430b	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  04311	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CArchiveBtn@@6B@ ; CArchiveBtn::`vftable'

; 1657 : 	CString sFilename;

  04317	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sFilename$[ebp]
  0431d	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  04322	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 1658 : 
; 1659 : 	sFilename.Format( "%s\\Realm.%s.%s.MM.html", g_sConfigDir, g_sCharacterName.c_str(), *( (StringID) g_pCurrentServer->m_hName ) );

  04326	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  0432c	51		 push	 ecx
  0432d	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR $T163424[ebp]
  04333	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  04338	8b c8		 mov	 ecx, eax
  0433a	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  0433f	50		 push	 eax
  04340	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  04345	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  0434b	50		 push	 eax
  0434c	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  04351	68 00 00 00 00	 push	 OFFSET FLAT:$SG155687
  04356	8d 95 d8 fe ff
	ff		 lea	 edx, DWORD PTR _sFilename$[ebp]
  0435c	52		 push	 edx
  0435d	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  04362	83 c4 14	 add	 esp, 20			; 00000014H

; 1660 : 
; 1661 : 	CFileStatus rStatus;

  04365	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _rStatus$[ebp]
  0436b	e8 00 00 00 00	 call	 ??0CFileStatus@@QAE@XZ	; CFileStatus::CFileStatus

; 1662 : 
; 1663 : 	if ( !CFile::GetStatus( (LPCTSTR) sFilename, rStatus ) ) {

  04370	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _rStatus$[ebp]
  04376	50		 push	 eax
  04377	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sFilename$[ebp]
  0437d	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  04382	50		 push	 eax
  04383	e8 00 00 00 00	 call	 ?GetStatus@CFile@@SGHPBDAAUCFileStatus@@@Z ; CFile::GetStatus
  04388	85 c0		 test	 eax, eax
  0438a	75 0b		 jne	 SHORT $L155690

; 1664 : 		Disable();

  0438c	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  04392	e8 00 00 00 00	 call	 ?Disable@CSkinCtrl@@UAEHXZ ; CSkinCtrl::Disable
$L155690:

; 1666 : }

  04397	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0439b	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sFilename$[ebp]
  043a1	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  043a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  043ad	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  043b0	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  043b5	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  043bb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  043be	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  043c5	8b e5		 mov	 esp, ebp
  043c7	5d		 pop	 ebp
  043c8	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L163425:
  0052b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0052e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00533	c3		 ret	 0
$L163427:
  00534	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0053a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0053f	c3		 ret	 0
$L163428:
  00540	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sFilename$[ebp]
  00546	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0054b	c3		 ret	 0
$L163431:
  0054c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163430
  00551	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CArchiveBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CArchiveBtn::CArchiveBtn
PUBLIC	??1CArchiveBtn@@UAE@XZ				; CArchiveBtn::~CArchiveBtn
;	COMDAT ??_GCArchiveBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCArchiveBtn@@UAEPAXI@Z PROC NEAR			; CArchiveBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CArchiveBtn@@UAE@XZ	; CArchiveBtn::~CArchiveBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L155694
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L155694:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCArchiveBtn@@UAEPAXI@Z ENDP				; CArchiveBtn::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0CTime@@QAE@XZ				; CTime::CTime
;	COMDAT ??0CFileStatus@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CFileStatus@@QAE@XZ PROC NEAR			; CFileStatus::CFileStatus, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CTime@@QAE@XZ	; CTime::CTime
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 04	 add	 ecx, 4
  00015	e8 00 00 00 00	 call	 ??0CTime@@QAE@XZ	; CTime::CTime
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 08	 add	 ecx, 8
  00020	e8 00 00 00 00	 call	 ??0CTime@@QAE@XZ	; CTime::CTime
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??0CFileStatus@@QAE@XZ ENDP				; CFileStatus::CFileStatus
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CTime@@QAE@XZ PROC NEAR				; CTime::CTime, COMDAT

; 268  : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CTime@@QAE@XZ ENDP					; CTime::CTime
_TEXT	ENDS
;	COMDAT ??1CArchiveBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CArchiveBtn@@UAE@XZ PROC NEAR			; CArchiveBtn::~CArchiveBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CArchiveBtn@@UAE@XZ ENDP				; CArchiveBtn::~CArchiveBtn
_TEXT	ENDS
EXTRN	__imp__ShellExecuteA@24:NEAR
_DATA	SEGMENT
	ORG $+1
$SG155707 DB	'%s\Realm.%s.%s.MM.html', 00H
	ORG $+1
$SG155711 DB	'open', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163442 DD	019930520H
	DD	01H
	DD	FLAT:$T163444
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163444 DD	0ffffffffH
	DD	FLAT:$L163440
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -304
_sFilename$ = -296
_rStatus$ = -292
$T163439 = -300
__$EHRec$ = -12
?OnActivate@CArchiveBtn@@UAEXFF@Z PROC NEAR		; CArchiveBtn::OnActivate

; 1670 : {

  043cb	55		 push	 ebp
  043cc	8b ec		 mov	 ebp, esp
  043ce	6a ff		 push	 -1
  043d0	68 00 00 00 00	 push	 $L163443
  043d5	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  043db	50		 push	 eax
  043dc	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  043e3	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  043e9	89 8d d0 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1671 : 	CString sFilename;

  043ef	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sFilename$[ebp]
  043f5	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  043fa	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1672 : 
; 1673 : 	sFilename.Format( "%s\\Realm.%s.%s.MM.html", g_sConfigDir, g_sCharacterName.c_str(), *( (StringID) g_pCurrentServer->m_hName ) );

  04401	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  04406	50		 push	 eax
  04407	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR $T163439[ebp]
  0440d	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  04412	8b c8		 mov	 ecx, eax
  04414	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  04419	50		 push	 eax
  0441a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  0441f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  04425	50		 push	 eax
  04426	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  0442b	68 00 00 00 00	 push	 OFFSET FLAT:$SG155707
  04430	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sFilename$[ebp]
  04436	51		 push	 ecx
  04437	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  0443c	83 c4 14	 add	 esp, 20			; 00000014H

; 1674 : 
; 1675 : 	CFileStatus rStatus;

  0443f	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _rStatus$[ebp]
  04445	e8 00 00 00 00	 call	 ??0CFileStatus@@QAE@XZ	; CFileStatus::CFileStatus

; 1676 : 
; 1677 : 	if ( CFile::GetStatus( (LPCTSTR) sFilename, rStatus ) )

  0444a	8d 95 dc fe ff
	ff		 lea	 edx, DWORD PTR _rStatus$[ebp]
  04450	52		 push	 edx
  04451	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sFilename$[ebp]
  04457	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0445c	50		 push	 eax
  0445d	e8 00 00 00 00	 call	 ?GetStatus@CFile@@SGHPBDAAUCFileStatus@@@Z ; CFile::GetStatus
  04462	85 c0		 test	 eax, eax
  04464	74 1f		 je	 SHORT $L155710

; 1678 : 		ShellExecute(NULL, "open", sFilename, NULL, NULL, SW_SHOWNORMAL);

  04466	6a 01		 push	 1
  04468	6a 00		 push	 0
  0446a	6a 00		 push	 0
  0446c	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sFilename$[ebp]
  04472	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  04477	50		 push	 eax
  04478	68 00 00 00 00	 push	 OFFSET FLAT:$SG155711
  0447d	6a 00		 push	 0
  0447f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShellExecuteA@24
$L155710:

; 1679 : }

  04485	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0448c	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sFilename$[ebp]
  04492	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  04497	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0449a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  044a1	8b e5		 mov	 esp, ebp
  044a3	5d		 pop	 ebp
  044a4	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L163440:
  00556	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sFilename$[ebp]
  0055c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00561	c3		 ret	 0
$L163443:
  00562	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163442
  00567	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnActivate@CArchiveBtn@@UAEXFF@Z ENDP			; CArchiveBtn::OnActivate
PUBLIC	?OnActivate@CSendBtn@@UAEXFF@Z			; CSendBtn::OnActivate
PUBLIC	??_7CSendBtn@@6B@				; CSendBtn::`vftable'
PUBLIC	??_GCSendBtn@@UAEPAXI@Z				; CSendBtn::`scalar deleting destructor'
PUBLIC	??_ECSendBtn@@UAEPAXI@Z				; CSendBtn::`vector deleting destructor'
;	COMDAT ??_7CSendBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CSendBtn@@6B@ DD FLAT:??_ECSendBtn@@UAEPAXI@Z	; CSendBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSendBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T163451 DD	019930520H
	DD	01H
	DD	FLAT:$T163453
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163453 DD	0ffffffffH
	DD	FLAT:$L163447
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T163446 = -16
__$EHRec$ = -12
??0CSendBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR	; CSendBtn::CSendBtn

; 1684 : CSendBtn::CSendBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn ( obj, pParent ) {}

  044a7	55		 push	 ebp
  044a8	8b ec		 mov	 ebp, esp
  044aa	6a ff		 push	 -1
  044ac	68 00 00 00 00	 push	 $L163452
  044b1	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  044b7	50		 push	 eax
  044b8	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  044bf	83 ec 10	 sub	 esp, 16			; 00000010H
  044c2	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  044c5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  044cc	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  044cf	50		 push	 eax
  044d0	83 ec 08	 sub	 esp, 8
  044d3	8b cc		 mov	 ecx, esp
  044d5	89 65 f0	 mov	 DWORD PTR $T163446[ebp], esp
  044d8	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  044db	52		 push	 edx
  044dc	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  044e1	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  044e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  044e7	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  044ec	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  044ef	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  044f2	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSendBtn@@6B@ ; CSendBtn::`vftable'
  044f8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  044ff	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04502	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  04507	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0450a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0450d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04514	8b e5		 mov	 esp, ebp
  04516	5d		 pop	 ebp
  04517	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L163447:
  0056c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0056f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00574	c3		 ret	 0
$L163452:
  00575	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163451
  0057a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSendBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CSendBtn::CSendBtn
PUBLIC	??1CSendBtn@@UAE@XZ				; CSendBtn::~CSendBtn
;	COMDAT ??_GCSendBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSendBtn@@UAEPAXI@Z PROC NEAR			; CSendBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSendBtn@@UAE@XZ	; CSendBtn::~CSendBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L155721
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L155721:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSendBtn@@UAEPAXI@Z ENDP				; CSendBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSendBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSendBtn@@UAE@XZ PROC NEAR				; CSendBtn::~CSendBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSendBtn@@UAE@XZ ENDP				; CSendBtn::~CSendBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CSendBtn@@UAEXFF@Z PROC NEAR		; CSendBtn::OnActivate

; 1688 : {

  0451a	55		 push	 ebp
  0451b	8b ec		 mov	 ebp, esp
  0451d	51		 push	 ecx
  0451e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1689 : 	if ( g_pMailBox )

  04521	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox
  04528	74 0b		 je	 SHORT $L155729

; 1690 : 		g_pMailBox->AuthorMsg();

  0452a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  04530	e8 00 00 00 00	 call	 ?AuthorMsg@CMailBox@@QAEXXZ ; CMailBox::AuthorMsg
$L155729:

; 1691 : }

  04535	8b e5		 mov	 esp, ebp
  04537	5d		 pop	 ebp
  04538	c2 08 00	 ret	 8
?OnActivate@CSendBtn@@UAEXFF@Z ENDP			; CSendBtn::OnActivate
_TEXT	ENDS
PUBLIC	?OnActivate@CRefreshBtn@@UAEXFF@Z		; CRefreshBtn::OnActivate
PUBLIC	??_7CRefreshBtn@@6B@				; CRefreshBtn::`vftable'
PUBLIC	??_GCRefreshBtn@@UAEPAXI@Z			; CRefreshBtn::`scalar deleting destructor'
PUBLIC	??_ECRefreshBtn@@UAEPAXI@Z			; CRefreshBtn::`vector deleting destructor'
;	COMDAT ??_7CRefreshBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.cpp
CONST	SEGMENT
??_7CRefreshBtn@@6B@ DD FLAT:??_ECRefreshBtn@@UAEPAXI@Z	; CRefreshBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CRefreshBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T163464 DD	019930520H
	DD	01H
	DD	FLAT:$T163466
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163466 DD	0ffffffffH
	DD	FLAT:$L163460
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_this$ = -20
$T163459 = -16
__$EHRec$ = -12
??0CRefreshBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CRefreshBtn::CRefreshBtn

; 1696 : CRefreshBtn::CRefreshBtn ( CSkinObj obj, CSkinWnd *pParent ) : CSkinBtn ( obj, pParent ) {}

  0453b	55		 push	 ebp
  0453c	8b ec		 mov	 ebp, esp
  0453e	6a ff		 push	 -1
  04540	68 00 00 00 00	 push	 $L163465
  04545	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0454b	50		 push	 eax
  0454c	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04553	83 ec 10	 sub	 esp, 16			; 00000010H
  04556	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  04559	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  04560	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  04563	50		 push	 eax
  04564	83 ec 08	 sub	 esp, 8
  04567	8b cc		 mov	 ecx, esp
  04569	89 65 f0	 mov	 DWORD PTR $T163459[ebp], esp
  0456c	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0456f	52		 push	 edx
  04570	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  04575	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  04578	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0457b	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  04580	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  04583	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  04586	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CRefreshBtn@@6B@ ; CRefreshBtn::`vftable'
  0458c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  04593	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  04596	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0459b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0459e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  045a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  045a8	8b e5		 mov	 esp, ebp
  045aa	5d		 pop	 ebp
  045ab	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L163460:
  0057f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00582	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00587	c3		 ret	 0
$L163465:
  00588	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163464
  0058d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CRefreshBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP	; CRefreshBtn::CRefreshBtn
PUBLIC	??1CRefreshBtn@@UAE@XZ				; CRefreshBtn::~CRefreshBtn
;	COMDAT ??_GCRefreshBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCRefreshBtn@@UAEPAXI@Z PROC NEAR			; CRefreshBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CRefreshBtn@@UAE@XZ	; CRefreshBtn::~CRefreshBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L155739
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L155739:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCRefreshBtn@@UAEPAXI@Z ENDP				; CRefreshBtn::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CRefreshBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CRefreshBtn@@UAE@XZ PROC NEAR			; CRefreshBtn::~CRefreshBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CRefreshBtn@@UAE@XZ ENDP				; CRefreshBtn::~CRefreshBtn
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+3
$SG155748 DB	't', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -8
_hGame$ = -4
?OnActivate@CRefreshBtn@@UAEXFF@Z PROC NEAR		; CRefreshBtn::OnActivate

; 1700 : {

  045ae	55		 push	 ebp
  045af	8b ec		 mov	 ebp, esp
  045b1	83 ec 08	 sub	 esp, 8
  045b4	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1701 :     Disable();

  045b7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  045ba	8b 10		 mov	 edx, DWORD PTR [eax]
  045bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  045bf	ff 52 0c	 call	 DWORD PTR [edx+12]

; 1702 : 	Refresh();

  045c2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  045c5	8b 10		 mov	 edx, DWORD PTR [eax]
  045c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  045ca	ff 52 08	 call	 DWORD PTR [edx+8]

; 1703 : 
; 1704 : 	// go hands-off...
; 1705 : 	CSCI_RoomZero hGame = pm.game;

  045cd	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?pm@@3VPMachine@@A
  045d3	50		 push	 eax
  045d4	8d 4d fc	 lea	 ecx, DWORD PTR _hGame$[ebp]
  045d7	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 1706 : 	hGame.handsOff();

  045dc	8d 4d fc	 lea	 ecx, DWORD PTR _hGame$[ebp]
  045df	e8 00 00 00 00	 call	 ?handsOff@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOff

; 1707 : 
; 1708 : 
; 1709 : 	CNetSend( "t", REALM_MAIL_LIST_GET );

  045e4	68 87 00 00 00	 push	 135			; 00000087H
  045e9	68 00 00 00 00	 push	 OFFSET FLAT:$SG155748
  045ee	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  045f3	83 c4 08	 add	 esp, 8

; 1710 : }

  045f6	8b e5		 mov	 esp, ebp
  045f8	5d		 pop	 ebp
  045f9	c2 08 00	 ret	 8
?OnActivate@CRefreshBtn@@UAEXFF@Z ENDP			; CRefreshBtn::OnActivate
_TEXT	ENDS
PUBLIC	?ExecuteButton@CConfirmDlg@@UAEXH@Z		; CConfirmDlg::ExecuteButton
_DATA	SEGMENT
	ORG $+2
$SG155754 DB	'The Magic Mail has been sent to Customer Service and is '
	DB	'being removed from your box.', 00H
	ORG $+3
$SG155755 DB	'Complaint Magic Mail', 00H
	ORG $+3
$SG155756 DB	'tl', 00H
_DATA	ENDS
_TEXT	SEGMENT
_nID$ = 8
_this$ = -4
?ExecuteButton@CConfirmDlg@@UAEXH@Z PROC NEAR		; CConfirmDlg::ExecuteButton

; 1716 : void CConfirmDlg::ExecuteButton( int nID ) {

  045fc	55		 push	 ebp
  045fd	8b ec		 mov	 ebp, esp
  045ff	51		 push	 ecx
  04600	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1717 : 	if ( nID ) {

  04603	83 7d 08 00	 cmp	 DWORD PTR _nID$[ebp], 0
  04607	74 30		 je	 SHORT $L155753

; 1718 : 		SkinMessage( "Complaint Magic Mail", "The Magic Mail has been sent to Customer Service and is being removed from your box." );

  04609	6a 00		 push	 0
  0460b	68 00 00 00 00	 push	 OFFSET FLAT:$SG155754
  04610	68 00 00 00 00	 push	 OFFSET FLAT:$SG155755
  04615	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  0461a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1719 : 		CNetSend( "tl", REALM_MAIL_MESSAGE_COMPLAIN, m_nUniqueID );

  0461d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  04620	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  04626	51		 push	 ecx
  04627	68 8c 00 00 00	 push	 140			; 0000008cH
  0462c	68 00 00 00 00	 push	 OFFSET FLAT:$SG155756
  04631	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  04636	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155753:

; 1721 : 
; 1722 : 	// Close the dialog
; 1723 : 	CloseSelf();

  04639	6a 00		 push	 0
  0463b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0463e	8b 02		 mov	 eax, DWORD PTR [edx]
  04640	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  04643	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]

; 1724 : }

  04649	8b e5		 mov	 esp, ebp
  0464b	5d		 pop	 ebp
  0464c	c2 04 00	 ret	 4
?ExecuteButton@CConfirmDlg@@UAEXH@Z ENDP		; CConfirmDlg::ExecuteButton
_TEXT	ENDS
PUBLIC	?ExecuteButton@CArchiveDlg@@UAEXH@Z		; CArchiveDlg::ExecuteButton
EXTRN	__imp__fprintf:NEAR
_DATA	SEGMENT
	ORG $+1
$SG155767 DB	'%s\Realm.%s.%s.MM.html', 00H
	ORG $+1
$SG155770 DB	'%s\Realm.%s.%s.MM.html.bak', 00H
	ORG $+1
$SG155774 DB	'tbwl', 00H
	ORG $+3
$SG155776 DB	'Can not create mail file on your system.  Please check f'
	DB	'or enough free space on your drive.', 00H
$SG155777 DB	'ERROR', 00H
	ORG $+2
$SG155781 DB	'w', 00H
	ORG $+2
$SG155784 DB	'<font size = 8><strong><center>%s''s Magic Mail on %s</c'
	DB	'enter></strong></font>', 0aH, 00H
	ORG $+1
$SG155786 DB	'Can not create mail file on your system.  Please check f'
	DB	'or enough free space on your drive.', 00H
$SG155787 DB	'ERROR', 00H
	ORG $+2
$SG155790 DB	'tbwl', 00H
	ORG $+3
$SG155792 DB	'Can not create mail file on your system.  Please check f'
	DB	'or enough free space on your drive.', 00H
$SG155793 DB	'ERROR', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T163479 DD	019930520H
	DD	02H
	DD	FLAT:$T163481
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163481 DD	0ffffffffH
	DD	FLAT:$L163476
	DD	00H
	DD	FLAT:$L163477
xdata$x	ENDS
_TEXT	SEGMENT
_nID$ = 8
_this$ = -328
_sSrc$155762 = -300
_sDst$155763 = -296
_fs$155764 = -292
_hGame$155773 = -304
_fp$155779 = -308
_hGame$155789 = -312
$T163473 = -316
$T163474 = -320
$T163475 = -324
__$EHRec$ = -12
?ExecuteButton@CArchiveDlg@@UAEXH@Z PROC NEAR		; CArchiveDlg::ExecuteButton

; 1726 : void CArchiveDlg::ExecuteButton( int nID ) {

  0464f	55		 push	 ebp
  04650	8b ec		 mov	 ebp, esp
  04652	6a ff		 push	 -1
  04654	68 00 00 00 00	 push	 $L163480
  04659	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0465f	50		 push	 eax
  04660	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  04667	81 ec 3c 01 00
	00		 sub	 esp, 316		; 0000013cH
  0466d	89 8d b8 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 1727 : 	if ( nID ) {

  04673	83 7d 08 00	 cmp	 DWORD PTR _nID$[ebp], 0
  04677	0f 84 68 02 00
	00		 je	 $L155761

; 1728 : 		CString sSrc, sDst;

  0467d	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _sSrc$155762[ebp]
  04683	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  04688	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0468f	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sDst$155763[ebp]
  04695	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0469a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1729 : 		CFileStatus fs;

  0469e	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _fs$155764[ebp]
  046a4	e8 00 00 00 00	 call	 ??0CFileStatus@@QAE@XZ	; CFileStatus::CFileStatus

; 1730 : 
; 1731 : 		sSrc.Format( "%s\\Realm.%s.%s.MM.html", g_sConfigDir, g_sCharacterName.c_str(), *( (StringID) g_pCurrentServer->m_hName ) );

  046a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  046ae	50		 push	 eax
  046af	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR $T163473[ebp]
  046b5	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  046ba	8b c8		 mov	 ecx, eax
  046bc	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  046c1	50		 push	 eax
  046c2	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  046c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  046cd	50		 push	 eax
  046ce	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  046d3	68 00 00 00 00	 push	 OFFSET FLAT:$SG155767
  046d8	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _sSrc$155762[ebp]
  046de	51		 push	 ecx
  046df	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  046e4	83 c4 14	 add	 esp, 20			; 00000014H

; 1732 : 		sDst.Format( "%s\\Realm.%s.%s.MM.html.bak", g_sConfigDir, g_sCharacterName.c_str(), *( (StringID) g_pCurrentServer->m_hName ) );

  046e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  046ed	52		 push	 edx
  046ee	8d 8d c0 fe ff
	ff		 lea	 ecx, DWORD PTR $T163474[ebp]
  046f4	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  046f9	8b c8		 mov	 ecx, eax
  046fb	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  04700	50		 push	 eax
  04701	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  04706	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  0470c	50		 push	 eax
  0470d	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  04712	68 00 00 00 00	 push	 OFFSET FLAT:$SG155770
  04717	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _sDst$155763[ebp]
  0471d	50		 push	 eax
  0471e	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  04723	83 c4 14	 add	 esp, 20			; 00000014H

; 1733 : 
; 1734 : 		if ( CFile::GetStatus( sSrc, fs ) ) {

  04726	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _fs$155764[ebp]
  0472c	51		 push	 ecx
  0472d	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _sSrc$155762[ebp]
  04733	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  04738	50		 push	 eax
  04739	e8 00 00 00 00	 call	 ?GetStatus@CFile@@SGHPBDAAUCFileStatus@@@Z ; CFile::GetStatus
  0473e	85 c0		 test	 eax, eax
  04740	0f 84 80 00 00
	00		 je	 $L155771

; 1735 : 			if ( CopyFile( sSrc, sDst, FALSE ) ) {

  04746	6a 00		 push	 0
  04748	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sDst$155763[ebp]
  0474e	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  04753	50		 push	 eax
  04754	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _sSrc$155762[ebp]
  0475a	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0475f	50		 push	 eax
  04760	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CopyFileA@12
  04766	85 c0		 test	 eax, eax
  04768	74 43		 je	 SHORT $L155772

; 1736 : 				// go hands-off...
; 1737 : 				CSCI_RoomZero hGame = pm.game;

  0476a	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?pm@@3VPMachine@@A
  04771	52		 push	 edx
  04772	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _hGame$155773[ebp]
  04778	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 1738 : 				hGame.handsOff();

  0477d	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _hGame$155773[ebp]
  04783	e8 00 00 00 00	 call	 ?handsOff@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOff

; 1739 : 
; 1740 : 				CNetSend( "tbwl", REALM_MAIL_MESSAGE_ARCHIVE, 0, 0, m_nUniqueID );

  04788	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0478e	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  04794	51		 push	 ecx
  04795	6a 00		 push	 0
  04797	6a 00		 push	 0
  04799	68 8b 00 00 00	 push	 139			; 0000008bH
  0479e	68 00 00 00 00	 push	 OFFSET FLAT:$SG155774
  047a3	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  047a8	83 c4 14	 add	 esp, 20			; 00000014H

; 1741 : 			} else {

  047ab	eb 14		 jmp	 SHORT $L155775
$L155772:

; 1742 : 				SkinMessage( "ERROR", "Can not create mail file on your system.  Please check for enough free space on your drive." );

  047ad	6a 00		 push	 0
  047af	68 00 00 00 00	 push	 OFFSET FLAT:$SG155776
  047b4	68 00 00 00 00	 push	 OFFSET FLAT:$SG155777
  047b9	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  047be	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155775:

; 1744 : 		} else {

  047c1	e9 fe 00 00 00	 jmp	 $L155791
$L155771:

; 1745 : 			FILE* fp;
; 1746 : 
; 1747 : 			if ( fp = fopen( sSrc, "w" ) ) {

  047c6	68 00 00 00 00	 push	 OFFSET FLAT:$SG155781
  047cb	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _sSrc$155762[ebp]
  047d1	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  047d6	50		 push	 eax
  047d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  047dd	83 c4 08	 add	 esp, 8
  047e0	89 85 cc fe ff
	ff		 mov	 DWORD PTR _fp$155779[ebp], eax
  047e6	83 bd cc fe ff
	ff 00		 cmp	 DWORD PTR _fp$155779[ebp], 0
  047ed	0f 84 bd 00 00
	00		 je	 $L155780

; 1748 : 				fprintf( fp, "<font size = 8><strong><center>%s's Magic Mail on %s</center></strong></font>\n", g_sCharacterName.c_str(), *( (StringID) g_pCurrentServer->m_hName ) );

  047f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  047f9	52		 push	 edx
  047fa	8d 8d bc fe ff
	ff		 lea	 ecx, DWORD PTR $T163475[ebp]
  04800	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  04805	8b c8		 mov	 ecx, eax
  04807	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  0480c	50		 push	 eax
  0480d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  04812	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  04818	50		 push	 eax
  04819	68 00 00 00 00	 push	 OFFSET FLAT:$SG155784
  0481e	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _fp$155779[ebp]
  04824	50		 push	 eax
  04825	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0482b	83 c4 10	 add	 esp, 16			; 00000010H

; 1749 : 
; 1750 : 				if ( fclose( fp ) ) {

  0482e	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR _fp$155779[ebp]
  04834	51		 push	 ecx
  04835	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  0483b	83 c4 04	 add	 esp, 4
  0483e	85 c0		 test	 eax, eax
  04840	74 2b		 je	 SHORT $L155785

; 1751 : 					SkinMessage( "ERROR", "Can not create mail file on your system.  Please check for enough free space on your drive." );

  04842	6a 00		 push	 0
  04844	68 00 00 00 00	 push	 OFFSET FLAT:$SG155786
  04849	68 00 00 00 00	 push	 OFFSET FLAT:$SG155787
  0484e	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  04853	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1752 : 
; 1753 : 					unlink( sSrc );

  04856	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _sSrc$155762[ebp]
  0485c	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  04861	50		 push	 eax
  04862	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__unlink
  04868	83 c4 04	 add	 esp, 4

; 1754 : 				} else {

  0486b	eb 41		 jmp	 SHORT $L155788
$L155785:

; 1755 : 					// go hands-off...
; 1756 : 					CSCI_RoomZero hGame = pm.game;

  0486d	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?pm@@3VPMachine@@A
  04874	52		 push	 edx
  04875	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _hGame$155789[ebp]
  0487b	e8 00 00 00 00	 call	 ??0CSCI_RoomZero@@QAE@G@Z ; CSCI_RoomZero::CSCI_RoomZero

; 1757 : 					hGame.handsOff();

  04880	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _hGame$155789[ebp]
  04886	e8 00 00 00 00	 call	 ?handsOff@CSCI_Game@@QAEXXZ ; CSCI_Game::handsOff

; 1758 : 
; 1759 : 					CNetSend( "tbwl", REALM_MAIL_MESSAGE_ARCHIVE, 0, 0, m_nUniqueID );

  0488b	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  04891	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  04897	51		 push	 ecx
  04898	6a 00		 push	 0
  0489a	6a 00		 push	 0
  0489c	68 8b 00 00 00	 push	 139			; 0000008bH
  048a1	68 00 00 00 00	 push	 OFFSET FLAT:$SG155790
  048a6	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  048ab	83 c4 14	 add	 esp, 20			; 00000014H
$L155788:

; 1761 : 			} else {

  048ae	eb 14		 jmp	 SHORT $L155791
$L155780:

; 1762 : 				SkinMessage( "ERROR", "Can not create mail file on your system.  Please check for enough free space on your drive." );

  048b0	6a 00		 push	 0
  048b2	68 00 00 00 00	 push	 OFFSET FLAT:$SG155792
  048b7	68 00 00 00 00	 push	 OFFSET FLAT:$SG155793
  048bc	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  048c1	83 c4 0c	 add	 esp, 12			; 0000000cH
$L155791:

; 1765 : 	}

  048c4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  048c8	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sDst$155763[ebp]
  048ce	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  048d3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  048da	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _sSrc$155762[ebp]
  048e0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L155761:

; 1766 : 
; 1767 : 	// Close the dialog
; 1768 : 	CloseSelf();

  048e5	6a 00		 push	 0
  048e7	8b 95 b8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  048ed	8b 02		 mov	 eax, DWORD PTR [edx]
  048ef	8b 8d b8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  048f5	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]

; 1769 : }

  048fb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  048fe	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  04905	8b e5		 mov	 esp, ebp
  04907	5d		 pop	 ebp
  04908	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L163476:
  00592	8d 8d d4 fe ff
	ff		 lea	 ecx, DWORD PTR _sSrc$155762[ebp]
  00598	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0059d	c3		 ret	 0
$L163477:
  0059e	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sDst$155763[ebp]
  005a4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  005a9	c3		 ret	 0
$L163480:
  005aa	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163479
  005af	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ExecuteButton@CArchiveDlg@@UAEXH@Z ENDP		; CArchiveDlg::ExecuteButton
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
PUBLIC	??0?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsg@@@1@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >
;	COMDAT ??0?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsg@@@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Pred$ = 8
__Al$ = 12
??0?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsg@@@1@@Z PROC NEAR ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >, COMDAT

; 57   : 	explicit map(const _Pr& _Pred = _Pr(), const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsg@@@1@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
??0?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsg@@@1@@Z ENDP ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBHPAVCMailMsg@@@std@@QAE@ABHABQAVCMailMsg@@@Z ; std::pair<int const ,CMailMsg *>::pair<int const ,CMailMsg *>
PUBLIC	??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsg@@@2@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator*
PUBLIC	?insert@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::insert
;	COMDAT ??A?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEAAPAVCMailMsg@@ABH@Z
_TEXT	SEGMENT
_this$ = -28
__P$ = -4
$T163486 = -12
$T163487 = -16
$T163488 = -24
__Kv$ = 8
??A?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEAAPAVCMailMsg@@ABH@Z PROC NEAR ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::operator[], COMDAT

; 93   : 		{iterator _P = insert(value_type(_Kv, _Ty())).first;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T163487[ebp], 0
  00010	8d 45 f0	 lea	 eax, DWORD PTR $T163487[ebp]
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00017	51		 push	 ecx
  00018	8d 4d f4	 lea	 ecx, DWORD PTR $T163486[ebp]
  0001b	e8 00 00 00 00	 call	 ??0?$pair@$$CBHPAVCMailMsg@@@std@@QAE@ABHABQAVCMailMsg@@@Z ; std::pair<int const ,CMailMsg *>::pair<int const ,CMailMsg *>
  00020	50		 push	 eax
  00021	8d 55 e8	 lea	 edx, DWORD PTR $T163488[ebp]
  00024	52		 push	 edx
  00025	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?insert@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::insert
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	89 45 fc	 mov	 DWORD PTR __P$[ebp], eax

; 94   : 		return ((*_P).second); }

  00032	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  00035	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsg@@@2@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator*
  0003a	83 c0 04	 add	 eax, 4
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
??A?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEAAPAVCMailMsg@@ABH@Z ENDP ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::operator[]
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEIABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase
;	COMDAT ?erase@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEIABH@Z
_TEXT	SEGMENT
_this$ = -4
__Kv$ = 8
?erase@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEIABH@Z PROC NEAR ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::erase, COMDAT

; 109  : 		{return (_Tr.erase(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEIABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?erase@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAEIABH@Z ENDP ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::erase
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::begin
PUBLIC	?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::end
PUBLIC	?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase
PUBLIC	?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
PUBLIC	?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1IA ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nilrefs
PUBLIC	?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Freenode
EXTRN	__imp_??0_Lockit@std@@QAE@XZ:NEAR
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:NEAR
;	COMDAT ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
_BSS	SEGMENT
?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A DD 01H DUP (?) ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
_BSS	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1IA
_BSS	SEGMENT
?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1IA DD 01H DUP (?) ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nilrefs
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T163496 DD	019930520H
	DD	01H
	DD	FLAT:$T163498
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163498 DD	0ffffffffH
	DD	FLAT:$L163494
xdata$x	ENDS
;	COMDAT ??1?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -32
__Lk$156999 = -16
$T163491 = -20
$T163492 = -24
$T163493 = -28
__$EHRec$ = -12
??1?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::~_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >, COMDAT

; 176  :                 {erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163497
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 ec	 lea	 eax, DWORD PTR $T163491[ebp]
  00021	50		 push	 eax
  00022	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::end
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	8d 55 e8	 lea	 edx, DWORD PTR $T163492[ebp]
  00030	52		 push	 edx
  00031	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::begin
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	50		 push	 eax
  0003c	8d 4d e4	 lea	 ecx, DWORD PTR $T163493[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase

; 177  :                 _Freenode(_Head);

  00048	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	50		 push	 eax
  0004f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Freenode

; 178  :                 _Head = 0, _Size = 0;

  00057	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00061	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 179  :                         {_Lockit _Lk;

  0006b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$156999[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 180  :                         if (--_Nilrefs == 0)

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1IA ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nilrefs
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1IA, eax ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nilrefs
  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1IA, 0 ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nilrefs
  0008f	75 19		 jne	 SHORT $L157000

; 181  :                                 {_Freenode(_Nil);

  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00097	51		 push	 ecx
  00098	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Freenode

; 182  :                                 _Nil = 0; }}}

  000a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A, 0 ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
$L157000:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$156999[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163494:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$156999[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163497:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163496
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::~_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >
PUBLIC	?_Buynode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Buynode
;	COMDAT ??0?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@ABV?$allocator@PAVCMailMsg@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8
_this$ = -4
??0?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@ABV?$allocator@PAVCMailMsg@@@1@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::list<CMailMsg *,std::allocator<CMailMsg *> >, COMDAT

; 131  : 		_Head(_Buynode()), _Size(0) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	6a 00		 push	 0
  00013	6a 00		 push	 0
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Buynode
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??0?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@ABV?$allocator@PAVCMailMsg@@@1@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::list<CMailMsg *,std::allocator<CMailMsg *> >
_TEXT	ENDS
PUBLIC	?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::erase
PUBLIC	?_Freenode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Freenode
;	COMDAT ??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16
$T163505 = -4
$T163506 = -8
$T163507 = -12
??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::~list<CMailMsg *,std::allocator<CMailMsg *> >, COMDAT

; 151  : 		{erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T163505[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 55 f8	 lea	 edx, DWORD PTR $T163506[ebp]
  0001b	52		 push	 edx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::begin
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	50		 push	 eax
  00027	8d 4d f4	 lea	 ecx, DWORD PTR $T163507[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::erase

; 152  : 		_Freenode(_Head);

  00033	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00039	50		 push	 eax
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?_Freenode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Freenode

; 153  : 		_Head = 0, _Size = 0; }

  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0004c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??1?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::~list<CMailMsg *,std::allocator<CMailMsg *> >
_TEXT	ENDS
PUBLIC	?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Next
PUBLIC	??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator
;	COMDAT ?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T163509 = -4
?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::begin, COMDAT

; 166  : 		{return (iterator(_Acc::_Next(_Head))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Next
  00015	83 c4 04	 add	 esp, 4
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	52		 push	 edx
  0001b	8d 4d fc	 lea	 ecx, DWORD PTR $T163509[ebp]
  0001e	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00028	89 01		 mov	 DWORD PTR [ecx], eax
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T163511 = -4
?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end, COMDAT

; 170  : 		{return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T163511[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end
_TEXT	ENDS
;	COMDAT ?size@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEIXZ PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::size, COMDAT

; 188  : 		{return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEIXZ ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::size
_TEXT	ENDS
PUBLIC	?insert@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCMailMsg@@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::insert
;	COMDAT ?push_back@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -12
$T163514 = -4
$T163515 = -8
?push_back@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::push_back, COMDAT

; 208  : 		{insert(end(), _X); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T163514[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	52		 push	 edx
  0001c	8d 45 f8	 lea	 eax, DWORD PTR $T163515[ebp]
  0001f	50		 push	 eax
  00020	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?insert@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCMailMsg@@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::insert
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?push_back@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::push_back
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -16
$T163517 = -4
$T163518 = -8
$T163519 = -12
?clear@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXXZ PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::clear, COMDAT

; 247  : 		{erase(begin(), end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T163517[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 55 f8	 lea	 edx, DWORD PTR $T163518[ebp]
  0001b	52		 push	 edx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::begin
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	50		 push	 eax
  00027	8d 4d f4	 lea	 ecx, DWORD PTR $T163519[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::erase
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?clear@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXXZ ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::clear
_TEXT	ENDS
PUBLIC	?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::erase
PUBLIC	??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEAAV012@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
;	COMDAT ?remove@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z
_TEXT	SEGMENT
__V$ = 8
_this$ = -28
__L$ = -8
__F$ = -4
$T163521 = -12
$T163522 = -16
$T163523 = -20
$T163524 = -24
?remove@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::remove, COMDAT

; 278  : 		{iterator _L = end();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 f4	 lea	 eax, DWORD PTR $T163521[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	89 4d f8	 mov	 DWORD PTR __L$[ebp], ecx

; 279  : 		for (iterator _F = begin(); _F != _L; )

  0001a	8d 55 f0	 lea	 edx, DWORD PTR $T163522[ebp]
  0001d	52		 push	 edx
  0001e	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?begin@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::begin
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 fc	 mov	 DWORD PTR __F$[ebp], eax
$L157034:
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR __L$[ebp]
  0002e	51		 push	 ecx
  0002f	8d 4d fc	 lea	 ecx, DWORD PTR __F$[ebp]
  00032	e8 00 00 00 00	 call	 ??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator!=
  00037	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0003c	85 c0		 test	 eax, eax
  0003e	74 3a		 je	 SHORT $L157035

; 280  : 			if (*_F == _V)

  00040	8d 4d fc	 lea	 ecx, DWORD PTR __F$[ebp]
  00043	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEAAPAVCMailMsg@@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator*
  00048	8b 55 08	 mov	 edx, DWORD PTR __V$[ebp]
  0004b	8b 00		 mov	 eax, DWORD PTR [eax]
  0004d	3b 02		 cmp	 eax, DWORD PTR [edx]
  0004f	75 1f		 jne	 SHORT $L157036

; 281  : 				erase(_F++);

  00051	6a 00		 push	 0
  00053	8d 4d ec	 lea	 ecx, DWORD PTR $T163523[ebp]
  00056	51		 push	 ecx
  00057	8d 4d fc	 lea	 ecx, DWORD PTR __F$[ebp]
  0005a	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
  0005f	8b 10		 mov	 edx, DWORD PTR [eax]
  00061	52		 push	 edx
  00062	8d 45 e8	 lea	 eax, DWORD PTR $T163524[ebp]
  00065	50		 push	 eax
  00066	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::erase

; 282  : 			else

  0006e	eb 08		 jmp	 SHORT $L157039
$L157036:

; 283  : 				++_F; }

  00070	8d 4d fc	 lea	 ecx, DWORD PTR __F$[ebp]
  00073	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEAAV012@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
$L157039:
  00078	eb b1		 jmp	 SHORT $L157034
$L157035:
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 04 00	 ret	 4
?remove@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEXABQAVCMailMsg@@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::remove
_TEXT	ENDS
PUBLIC	??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator, COMDAT

; 96   : 		iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::const_iterator
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Value@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAVCMailMsg@@PAU_Node@23@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Value
;	COMDAT ??Diterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEAAPAVCMailMsg@@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEAAPAVCMailMsg@@XZ PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator*, COMDAT

; 101  : 			{return (_Acc::_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAVCMailMsg@@PAU_Node@23@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEAAPAVCMailMsg@@XZ ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator*
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++, COMDAT

; 108  : 			{iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 109  : 			++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEAAV012@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++

; 110  : 			return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??8iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator==
;	COMDAT ??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator!=, COMDAT

; 121  : 			{return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsgWnd@@@1@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >
;	COMDAT ??0?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsgWnd@@@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Pred$ = 8
__Al$ = 12
??0?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsgWnd@@@1@@Z PROC NEAR ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >, COMDAT

; 57   : 	explicit map(const _Pr& _Pred = _Pr(), const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsgWnd@@@1@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
??0?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE@ABU?$less@H@1@ABV?$allocator@PAVCMailMsgWnd@@@1@@Z ENDP ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBHPAVCMailMsgWnd@@@std@@QAE@ABHABQAVCMailMsgWnd@@@Z ; std::pair<int const ,CMailMsgWnd *>::pair<int const ,CMailMsgWnd *>
PUBLIC	??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator*
PUBLIC	?insert@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::insert
;	COMDAT ??A?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEAAPAVCMailMsgWnd@@ABH@Z
_TEXT	SEGMENT
_this$ = -28
__P$ = -4
$T163532 = -12
$T163533 = -16
$T163534 = -24
__Kv$ = 8
??A?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEAAPAVCMailMsgWnd@@ABH@Z PROC NEAR ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::operator[], COMDAT

; 93   : 		{iterator _P = insert(value_type(_Kv, _Ty())).first;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T163533[ebp], 0
  00010	8d 45 f0	 lea	 eax, DWORD PTR $T163533[ebp]
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00017	51		 push	 ecx
  00018	8d 4d f4	 lea	 ecx, DWORD PTR $T163532[ebp]
  0001b	e8 00 00 00 00	 call	 ??0?$pair@$$CBHPAVCMailMsgWnd@@@std@@QAE@ABHABQAVCMailMsgWnd@@@Z ; std::pair<int const ,CMailMsgWnd *>::pair<int const ,CMailMsgWnd *>
  00020	50		 push	 eax
  00021	8d 55 e8	 lea	 edx, DWORD PTR $T163534[ebp]
  00024	52		 push	 edx
  00025	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?insert@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::insert
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	89 45 fc	 mov	 DWORD PTR __P$[ebp], eax

; 94   : 		return ((*_P).second); }

  00032	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  00035	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator*
  0003a	83 c0 04	 add	 eax, 4
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
??A?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEAAPAVCMailMsgWnd@@ABH@Z ENDP ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::operator[]
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEIABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase
;	COMDAT ?erase@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEIABH@Z
_TEXT	SEGMENT
_this$ = -4
__Kv$ = 8
?erase@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEIABH@Z PROC NEAR ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::erase, COMDAT

; 109  : 		{return (_Tr.erase(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEIABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?erase@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAEIABH@Z ENDP ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::erase
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::begin
PUBLIC	?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::end
PUBLIC	?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase
PUBLIC	?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
PUBLIC	?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1IA ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nilrefs
PUBLIC	?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Freenode
;	COMDAT ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
_BSS	SEGMENT
?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A DD 01H DUP (?) ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
_BSS	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1IA
_BSS	SEGMENT
?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1IA DD 01H DUP (?) ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nilrefs
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T163542 DD	019930520H
	DD	01H
	DD	FLAT:$T163544
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163544 DD	0ffffffffH
	DD	FLAT:$L163540
xdata$x	ENDS
;	COMDAT ??1?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -32
__Lk$157087 = -16
$T163537 = -20
$T163538 = -24
$T163539 = -28
__$EHRec$ = -12
??1?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::~_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >, COMDAT

; 176  :                 {erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163543
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 ec	 lea	 eax, DWORD PTR $T163537[ebp]
  00021	50		 push	 eax
  00022	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::end
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	8d 55 e8	 lea	 edx, DWORD PTR $T163538[ebp]
  00030	52		 push	 edx
  00031	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::begin
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	50		 push	 eax
  0003c	8d 4d e4	 lea	 ecx, DWORD PTR $T163539[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase

; 177  :                 _Freenode(_Head);

  00048	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	50		 push	 eax
  0004f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Freenode

; 178  :                 _Head = 0, _Size = 0;

  00057	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00061	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 179  :                         {_Lockit _Lk;

  0006b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$157087[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 180  :                         if (--_Nilrefs == 0)

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1IA ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nilrefs
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1IA, eax ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nilrefs
  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1IA, 0 ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nilrefs
  0008f	75 19		 jne	 SHORT $L157088

; 181  :                                 {_Freenode(_Nil);

  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00097	51		 push	 ecx
  00098	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Freenode

; 182  :                                 _Nil = 0; }}}

  000a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A, 0 ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
$L157088:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$157087[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163540:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$157087[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163543:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163542
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::~_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>
PUBLIC	?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::insert
;	COMDAT ?insert@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -28
__Ans$ = -8
$T163553 = -16
$T163554 = -24
__X$ = 12
?insert@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z PROC NEAR ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::insert, COMDAT

; 96   : 		{_Imp::_Pairib _Ans = _Tr.insert(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f0	 lea	 ecx, DWORD PTR $T163553[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::insert
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __Ans$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __Ans$[ebp+4], eax

; 97   : 		return (_Pairib(_Ans.first, _Ans.second)); }

  00024	8d 4d fc	 lea	 ecx, DWORD PTR __Ans$[ebp+4]
  00027	51		 push	 ecx
  00028	8d 55 f8	 lea	 edx, DWORD PTR __Ans$[ebp]
  0002b	52		 push	 edx
  0002c	8d 4d e8	 lea	 ecx, DWORD PTR $T163554[ebp]
  0002f	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
  0003e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?insert@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ENDP ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::insert
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Init
;	COMDAT ??0?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsg@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8
__Marg$ = 12
__Al$ = 16
_this$ = -4
??0?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsg@@@1@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >, COMDAT

; 162  :                 {_Init(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	88 4a 01	 mov	 BYTE PTR [edx+1], cl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8a 4d 0c	 mov	 cl, BYTE PTR __Marg$[ebp]
  00022	88 48 08	 mov	 BYTE PTR [eax+8], cl
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Init
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??0?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsg@@@1@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost
;	COMDAT ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T163557 = -4
?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::begin, COMDAT

; 190  :                 {return (iterator(_Lmost())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T163557[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::iterator
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 0a		 mov	 DWORD PTR [edx], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T163559 = -4
?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::end, COMDAT

; 194  :                 {return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T163559[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::end
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AV012@H@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator++
PUBLIC	??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator!=
PUBLIC	?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEIXZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::size
PUBLIC	?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase
PUBLIC	?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Erase
PUBLIC	?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost
PUBLIC	?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163568 DD	019930520H
	DD	01H
	DD	FLAT:$T163570
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163570 DD	0ffffffffH
	DD	FLAT:$L163566
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
__F$ = 12
__L$ = 16
___$ReturnUdt$ = 8
_this$ = -40
_Lk$158352 = -16
$T163561 = -20
$T163562 = -24
$T163563 = -28
$T163564 = -32
$T163565 = -36
__$EHRec$ = -12
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase, COMDAT

; 365  :                 {if (size() == 0 || _F != begin() || _L != end())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163569
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEIXZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::size
  00026	85 c0		 test	 eax, eax
  00028	74 3c		 je	 SHORT $L158345
  0002a	8d 45 ec	 lea	 eax, DWORD PTR $T163561[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::begin
  00036	50		 push	 eax
  00037	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator!=
  0003f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00044	85 c0		 test	 eax, eax
  00046	75 1e		 jne	 SHORT $L158345
  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T163562[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::end
  00054	50		 push	 eax
  00055	8d 4d 10	 lea	 ecx, DWORD PTR __L$[ebp]
  00058	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator!=
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	74 44		 je	 SHORT $L158344
$L158345:

; 366  :                         {while (_F != _L)

  00066	8d 55 10	 lea	 edx, DWORD PTR __L$[ebp]
  00069	52		 push	 edx
  0006a	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0006d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator!=
  00072	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00077	85 c0		 test	 eax, eax
  00079	74 1f		 je	 SHORT $L158348

; 367  :                                 erase(_F++);

  0007b	6a 00		 push	 0
  0007d	8d 45 e4	 lea	 eax, DWORD PTR $T163563[ebp]
  00080	50		 push	 eax
  00081	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00084	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AV012@H@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator++
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	51		 push	 ecx
  0008c	8d 55 e0	 lea	 edx, DWORD PTR $T163564[ebp]
  0008f	52		 push	 edx
  00090	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase
  00098	eb cc		 jmp	 SHORT $L158345
$L158348:

; 368  :                         return (_F); }

  0009a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR __F$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a5	e9 83 00 00 00	 jmp	 $L158351
$L158344:

; 370  :                         {_Lockit Lk;

  000aa	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$158352[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 371  :                         _Erase(_Root());

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	52		 push	 edx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Erase

; 372  :                         _Root() = _Nil, _Size = 0;

  000cd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  000db	89 08		 mov	 DWORD PTR [eax], ecx
  000dd	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 373  :                         _Lmost() = _Head, _Rmost() = _Head;

  000e7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost
  000ef	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f5	89 10		 mov	 DWORD PTR [eax], edx
  000f7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost
  000ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00105	89 10		 mov	 DWORD PTR [eax], edx

; 374  :                         return (begin()); }}

  00107	8d 45 dc	 lea	 eax, DWORD PTR $T163565[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::begin
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	89 0a		 mov	 DWORD PTR [edx], ecx
  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$158352[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L158351:
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163566:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$158352[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163569:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163568
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase
PUBLIC	?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@2@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::equal_range
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAI@Z ; std::_Distance
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEIABH@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -28
__P$ = -8
__N$ = -12
$T163574 = -20
$T163575 = -24
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEIABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase, COMDAT

; 376  :                 {_Pairii _P = equal_range(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d ec	 lea	 ecx, DWORD PTR $T163574[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@2@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::equal_range
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __P$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __P$[ebp+4], eax

; 377  :                 size_type _N = 0;

  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0

; 378  :                 _Distance(_P.first, _P.second, _N);

  0002b	8d 4d f4	 lea	 ecx, DWORD PTR __N$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 fc	 mov	 edx, DWORD PTR __P$[ebp+4]
  00032	52		 push	 edx
  00033	8b 45 f8	 mov	 eax, DWORD PTR __P$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAI@Z ; std::_Distance
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 379  :                 erase(_P.first, _P.second);

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __P$[ebp+4]
  00042	51		 push	 ecx
  00043	8b 55 f8	 mov	 edx, DWORD PTR __P$[ebp]
  00046	52		 push	 edx
  00047	8d 45 e8	 lea	 eax, DWORD PTR $T163575[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase

; 380  :                 return (_N); }

  00053	8b 45 f4	 mov	 eax, DWORD PTR __N$[ebp]
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEIABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCMailMsg@@@std@@QAEXPAXI@Z ; std::allocator<CMailMsg *>::deallocate
;	COMDAT ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__S$ = 8
?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Freenode, COMDAT

; 596  :                 {allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCMailMsg@@@std@@QAEXPAXI@Z ; std::allocator<CMailMsg *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Freenode
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBHPAVCMailMsg@@@std@@QAE@ABHABQAVCMailMsg@@@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@$$CBHPAVCMailMsg@@@std@@QAE@ABHABQAVCMailMsg@@@Z PROC NEAR ; std::pair<int const ,CMailMsg *>::pair<int const ,CMailMsg *>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __V1$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8b 11		 mov	 edx, DWORD PTR [ecx]
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@$$CBHPAVCMailMsg@@@std@@QAE@ABHABQAVCMailMsg@@@Z ENDP ; std::pair<int const ,CMailMsg *>::pair<int const ,CMailMsg *>
_TEXT	ENDS
PUBLIC	?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsg@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Value
;	COMDAT ??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsg@@@2@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsg@@@2@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator*, COMDAT

; 127  :                         {return (_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsg@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsg@@@2@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@ABQAV3@@Z ; std::allocator<CMailMsg *>::construct
PUBLIC	?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev
PUBLIC	?_Mynode@const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEPAU_Node@23@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::_Mynode
;	COMDAT ?insert@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCMailMsg@@@Z
_TEXT	SEGMENT
__P$ = 12
__X$ = 16
___$ReturnUdt$ = 8
_this$ = -12
__S$ = -4
$T163580 = -8
?insert@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCMailMsg@@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::insert, COMDAT

; 218  : 		{_Nodeptr _S = _P._Mynode();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  0000d	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEPAU_Node@23@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::_Mynode
  00012	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 219  : 		_Acc::_Prev(_S) = _Buynode(_S, _Acc::_Prev(_S));

  00015	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev
  0001e	83 c4 04	 add	 esp, 4
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	51		 push	 ecx
  00024	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00027	52		 push	 edx
  00028	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Buynode
  00030	8b f0		 mov	 esi, eax
  00032	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev
  0003b	83 c4 04	 add	 esp, 4
  0003e	89 30		 mov	 DWORD PTR [eax], esi

; 220  : 		_S = _Acc::_Prev(_S);

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	89 55 fc	 mov	 DWORD PTR __S$[ebp], edx

; 221  : 		_Acc::_Next(_Acc::_Prev(_S)) = _S;

  00051	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev
  0005a	83 c4 04	 add	 esp, 4
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Next
  00065	83 c4 04	 add	 esp, 4
  00068	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0006b	89 10		 mov	 DWORD PTR [eax], edx

; 222  : 		allocator.construct(&_Acc::_Value(_S), _X);

  0006d	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAVCMailMsg@@PAU_Node@23@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Value
  0007a	83 c4 04	 add	 esp, 4
  0007d	50		 push	 eax
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@ABQAV3@@Z ; std::allocator<CMailMsg *>::construct

; 223  : 		++_Size;

  00086	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00089	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0008c	83 c0 01	 add	 eax, 1
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 224  : 		return (iterator(_S)); }

  00095	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00098	52		 push	 edx
  00099	8d 4d f8	 lea	 ecx, DWORD PTR $T163580[ebp]
  0009c	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator
  000a1	8b 00		 mov	 eax, DWORD PTR [eax]
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000a6	89 01		 mov	 DWORD PTR [ecx], eax
  000a8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000ab	5e		 pop	 esi
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCMailMsg@@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::insert
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@@Z ; std::allocator<CMailMsg *>::destroy
;	COMDAT ?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__P$ = 12
___$ReturnUdt$ = 8
_this$ = -12
__S$ = -4
$T163582 = -8
?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::erase, COMDAT

; 235  : 		{_Nodeptr _S = (_P++)._Mynode();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	6a 00		 push	 0
  0000c	8d 45 f8	 lea	 eax, DWORD PTR $T163582[ebp]
  0000f	50		 push	 eax
  00010	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00013	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
  00018	8b c8		 mov	 ecx, eax
  0001a	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEPAU_Node@23@XZ ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::_Mynode
  0001f	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 236  : 		_Acc::_Next(_Acc::_Prev(_S)) = _Acc::_Next(_S);

  00022	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Next
  0002b	83 c4 04	 add	 esp, 4
  0002e	8b f0		 mov	 esi, eax
  00030	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 00		 mov	 eax, DWORD PTR [eax]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Next
  00044	83 c4 04	 add	 esp, 4
  00047	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00049	89 08		 mov	 DWORD PTR [eax], ecx

; 237  : 		_Acc::_Prev(_Acc::_Next(_S)) = _Acc::_Prev(_S);

  0004b	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev
  00054	83 c4 04	 add	 esp, 4
  00057	8b f0		 mov	 esi, eax
  00059	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Next
  00062	83 c4 04	 add	 esp, 4
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev
  0006d	83 c4 04	 add	 esp, 4
  00070	8b 16		 mov	 edx, DWORD PTR [esi]
  00072	89 10		 mov	 DWORD PTR [eax], edx

; 238  : 		allocator.destroy(&_Acc::_Value(_S));

  00074	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAVCMailMsg@@PAU_Node@23@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Value
  0007d	83 c4 04	 add	 esp, 4
  00080	50		 push	 eax
  00081	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@@Z ; std::allocator<CMailMsg *>::destroy

; 239  : 		_Freenode(_S);

  00089	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  0008c	51		 push	 ecx
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Freenode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Freenode

; 240  : 		--_Size;

  00095	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00098	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009b	83 e8 01	 sub	 eax, 1
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 241  : 		return (_P); }

  000a4	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  000a7	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  000aa	89 02		 mov	 DWORD PTR [edx], eax
  000ac	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000af	5e		 pop	 esi
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 08 00	 ret	 8
?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::erase
_TEXT	ENDS
;	COMDAT ?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
__F$ = 12
__L$ = 16
___$ReturnUdt$ = 8
_this$ = -12
$T163584 = -4
$T163585 = -8
?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::erase, COMDAT

; 243  : 		{while (_F != _L)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
$L158413:
  00009	8d 45 10	 lea	 eax, DWORD PTR __L$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00010	e8 00 00 00 00	 call	 ??9iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator!=
  00015	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001a	85 c0		 test	 eax, eax
  0001c	74 1f		 je	 SHORT $L158414

; 244  : 			erase(_F++);

  0001e	6a 00		 push	 0
  00020	8d 4d fc	 lea	 ecx, DWORD PTR $T163584[ebp]
  00023	51		 push	 ecx
  00024	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00027	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
  0002c	8b 10		 mov	 edx, DWORD PTR [eax]
  0002e	52		 push	 edx
  0002f	8d 45 f8	 lea	 eax, DWORD PTR $T163585[ebp]
  00032	50		 push	 eax
  00033	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::erase
  0003b	eb cc		 jmp	 SHORT $L158413
$L158414:

; 245  : 		return (_F); }

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00040	8b 55 0c	 mov	 edx, DWORD PTR __F$[ebp]
  00043	89 11		 mov	 DWORD PTR [ecx], edx
  00045	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::erase
_TEXT	ENDS
PUBLIC	?_Charalloc@?$allocator@PAVCMailMsg@@@std@@QAEPADI@Z ; std::allocator<CMailMsg *>::_Charalloc
;	COMDAT ?_Buynode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z
_TEXT	SEGMENT
__Narg$ = 8
__Parg$ = 12
_this$ = -8
__S$ = -4
?_Buynode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Buynode, COMDAT

; 386  : 		{_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 387  : 			1 * sizeof (_Node));

  00009	6a 0c		 push	 12			; 0000000cH
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCMailMsg@@@std@@QAEPADI@Z ; std::allocator<CMailMsg *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 388  : 		_Acc::_Next(_S) = _Narg != 0 ? _Narg : _S;

  00016	83 7d 08 00	 cmp	 DWORD PTR __Narg$[ebp], 0
  0001a	74 08		 je	 SHORT $L163587
  0001c	8b 45 08	 mov	 eax, DWORD PTR __Narg$[ebp]
  0001f	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00022	eb 06		 jmp	 SHORT $L163588
$L163587:
  00024	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00027	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
$L163588:
  0002a	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002d	52		 push	 edx
  0002e	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Next
  00033	83 c4 04	 add	 esp, 4
  00036	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  00039	89 08		 mov	 DWORD PTR [eax], ecx

; 389  : 		_Acc::_Prev(_S) = _Parg != 0 ? _Parg : _S;

  0003b	83 7d 0c 00	 cmp	 DWORD PTR __Parg$[ebp], 0
  0003f	74 08		 je	 SHORT $L163589
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Parg$[ebp]
  00044	89 55 f0	 mov	 DWORD PTR -16+[ebp], edx
  00047	eb 06		 jmp	 SHORT $L163590
$L163589:
  00049	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0004c	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
$L163590:
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev
  00058	83 c4 04	 add	 esp, 4
  0005b	8b 55 f0	 mov	 edx, DWORD PTR -16+[ebp]
  0005e	89 10		 mov	 DWORD PTR [eax], edx

; 390  : 		return (_S); }

  00060	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
?_Buynode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Buynode
_TEXT	ENDS
;	COMDAT ?_Freenode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__S$ = 8
_this$ = -4
?_Freenode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Freenode, COMDAT

; 392  : 		{allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCMailMsg@@@std@@QAEXPAXI@Z ; std::allocator<CMailMsg *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@IAEXPAU_Node@12@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Freenode
_TEXT	ENDS
;	COMDAT ?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT
__P$ = 8
?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Next, COMDAT

; 37   : 			{return ((_Nodepref)(*_P)._Next); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Next
_TEXT	ENDS
;	COMDAT ?_Value@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAVCMailMsg@@PAU_Node@23@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAVCMailMsg@@PAU_Node@23@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Value, COMDAT

; 41   : 			{return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAVCMailMsg@@PAU_Node@23@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Value
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::const_iterator, COMDAT

; 59   : 		const_iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@XZ ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator, COMDAT

; 98   : 		iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::iterator
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++, COMDAT

; 105  : 			{_Ptr = _Acc::_Next(_Ptr);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Next
  00012	83 c4 04	 add	 esp, 4
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	89 02		 mov	 DWORD PTR [edx], eax

; 106  : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??Eiterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??8iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??8iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator==, COMDAT

; 119  : 			{return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::iterator::operator==
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>
PUBLIC	?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::insert
;	COMDAT ?insert@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -28
__Ans$ = -8
__X$ = 12
$T163599 = -16
$T163600 = -24
?insert@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z PROC NEAR ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::insert, COMDAT

; 96   : 		{_Imp::_Pairib _Ans = _Tr.insert(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f0	 lea	 ecx, DWORD PTR $T163599[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::insert
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __Ans$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __Ans$[ebp+4], eax

; 97   : 		return (_Pairib(_Ans.first, _Ans.second)); }

  00024	8d 4d fc	 lea	 ecx, DWORD PTR __Ans$[ebp+4]
  00027	51		 push	 ecx
  00028	8d 55 f8	 lea	 edx, DWORD PTR __Ans$[ebp]
  0002b	52		 push	 edx
  0002c	8d 4d e8	 lea	 ecx, DWORD PTR $T163600[ebp]
  0002f	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
  0003e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?insert@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ENDP ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::insert
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Init
;	COMDAT ??0?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsgWnd@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8
__Marg$ = 12
__Al$ = 16
_this$ = -4
??0?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsgWnd@@@1@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >, COMDAT

; 162  :                 {_Init(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	88 4a 01	 mov	 BYTE PTR [edx+1], cl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8a 4d 0c	 mov	 cl, BYTE PTR __Marg$[ebp]
  00022	88 48 08	 mov	 BYTE PTR [eax+8], cl
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Init
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??0?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@ABU?$less@H@1@_NABV?$allocator@PAVCMailMsgWnd@@@1@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost
;	COMDAT ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T163603 = -4
?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::begin, COMDAT

; 190  :                 {return (iterator(_Lmost())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T163603[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::iterator
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 0a		 mov	 DWORD PTR [edx], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T163605 = -4
?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::end, COMDAT

; 194  :                 {return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T163605[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::end
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AV012@H@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator++
PUBLIC	??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator!=
PUBLIC	?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEIXZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::size
PUBLIC	?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase
PUBLIC	?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Erase
PUBLIC	?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost
PUBLIC	?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163614 DD	019930520H
	DD	01H
	DD	FLAT:$T163616
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163616 DD	0ffffffffH
	DD	FLAT:$L163612
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
__F$ = 12
__L$ = 16
___$ReturnUdt$ = 8
_this$ = -40
_Lk$158473 = -16
$T163607 = -20
$T163608 = -24
$T163609 = -28
$T163610 = -32
$T163611 = -36
__$EHRec$ = -12
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase, COMDAT

; 365  :                 {if (size() == 0 || _F != begin() || _L != end())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163615
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEIXZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::size
  00026	85 c0		 test	 eax, eax
  00028	74 3c		 je	 SHORT $L158466
  0002a	8d 45 ec	 lea	 eax, DWORD PTR $T163607[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::begin
  00036	50		 push	 eax
  00037	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator!=
  0003f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00044	85 c0		 test	 eax, eax
  00046	75 1e		 jne	 SHORT $L158466
  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T163608[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?end@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::end
  00054	50		 push	 eax
  00055	8d 4d 10	 lea	 ecx, DWORD PTR __L$[ebp]
  00058	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator!=
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	74 44		 je	 SHORT $L158465
$L158466:

; 366  :                         {while (_F != _L)

  00066	8d 55 10	 lea	 edx, DWORD PTR __L$[ebp]
  00069	52		 push	 edx
  0006a	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0006d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator!=
  00072	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00077	85 c0		 test	 eax, eax
  00079	74 1f		 je	 SHORT $L158469

; 367  :                                 erase(_F++);

  0007b	6a 00		 push	 0
  0007d	8d 45 e4	 lea	 eax, DWORD PTR $T163609[ebp]
  00080	50		 push	 eax
  00081	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00084	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AV012@H@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator++
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	51		 push	 ecx
  0008c	8d 55 e0	 lea	 edx, DWORD PTR $T163610[ebp]
  0008f	52		 push	 edx
  00090	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase
  00098	eb cc		 jmp	 SHORT $L158466
$L158469:

; 368  :                         return (_F); }

  0009a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR __F$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a5	e9 83 00 00 00	 jmp	 $L158472
$L158465:

; 370  :                         {_Lockit Lk;

  000aa	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$158473[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 371  :                         _Erase(_Root());

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	52		 push	 edx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Erase

; 372  :                         _Root() = _Nil, _Size = 0;

  000cd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  000db	89 08		 mov	 DWORD PTR [eax], ecx
  000dd	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 373  :                         _Lmost() = _Head, _Rmost() = _Head;

  000e7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost
  000ef	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f5	89 10		 mov	 DWORD PTR [eax], edx
  000f7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost
  000ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00105	89 10		 mov	 DWORD PTR [eax], edx

; 374  :                         return (begin()); }}

  00107	8d 45 dc	 lea	 eax, DWORD PTR $T163611[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::begin
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	89 0a		 mov	 DWORD PTR [edx], ecx
  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$158473[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L158472:
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163612:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$158473[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163615:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163614
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase
PUBLIC	?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@2@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::equal_range
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAI@Z ; std::_Distance
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEIABH@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -28
__P$ = -8
$T163620 = -20
$T163621 = -24
__N$ = -12
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEIABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase, COMDAT

; 376  :                 {_Pairii _P = equal_range(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d ec	 lea	 ecx, DWORD PTR $T163620[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@2@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::equal_range
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __P$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __P$[ebp+4], eax

; 377  :                 size_type _N = 0;

  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0

; 378  :                 _Distance(_P.first, _P.second, _N);

  0002b	8d 4d f4	 lea	 ecx, DWORD PTR __N$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 fc	 mov	 edx, DWORD PTR __P$[ebp+4]
  00032	52		 push	 edx
  00033	8b 45 f8	 mov	 eax, DWORD PTR __P$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAI@Z ; std::_Distance
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 379  :                 erase(_P.first, _P.second);

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __P$[ebp+4]
  00042	51		 push	 ecx
  00043	8b 55 f8	 mov	 edx, DWORD PTR __P$[ebp]
  00046	52		 push	 edx
  00047	8d 45 e8	 lea	 eax, DWORD PTR $T163621[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase

; 380  :                 return (_N); }

  00053	8b 45 f4	 mov	 eax, DWORD PTR __N$[ebp]
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEIABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCMailMsgWnd@@@std@@QAEXPAXI@Z ; std::allocator<CMailMsgWnd *>::deallocate
;	COMDAT ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__S$ = 8
_this$ = -4
?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Freenode, COMDAT

; 596  :                 {allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCMailMsgWnd@@@std@@QAEXPAXI@Z ; std::allocator<CMailMsgWnd *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Freenode
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBHPAVCMailMsgWnd@@@std@@QAE@ABHABQAVCMailMsgWnd@@@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@$$CBHPAVCMailMsgWnd@@@std@@QAE@ABHABQAVCMailMsgWnd@@@Z PROC NEAR ; std::pair<int const ,CMailMsgWnd *>::pair<int const ,CMailMsgWnd *>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __V1$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8b 11		 mov	 edx, DWORD PTR [ecx]
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@$$CBHPAVCMailMsgWnd@@@std@@QAE@ABHABQAVCMailMsgWnd@@@Z ENDP ; std::pair<int const ,CMailMsgWnd *>::pair<int const ,CMailMsgWnd *>
_TEXT	ENDS
PUBLIC	?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Value
;	COMDAT ??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator*, COMDAT

; 127  :                         {return (_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?_Allocate@std@@YAPADHPAD@Z			; std::_Allocate
;	COMDAT ?_Charalloc@?$allocator@PAVCMailMsg@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4
__N$ = 8
?_Charalloc@?$allocator@PAVCMailMsg@@@std@@QAEPADI@Z PROC NEAR ; std::allocator<CMailMsg *>::_Charalloc, COMDAT

; 61   : 		{return (_Allocate((difference_type)_N,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 			(char _FARQ *)0)); }

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPADHPAD@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Charalloc@?$allocator@PAVCMailMsg@@@std@@QAEPADI@Z ENDP ; std::allocator<CMailMsg *>::_Charalloc
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCMailMsg@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?deallocate@?$allocator@PAVCMailMsg@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CMailMsg *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCMailMsg@@@std@@QAEXPAXI@Z ENDP ; std::allocator<CMailMsg *>::deallocate
_TEXT	ENDS
PUBLIC	?_Construct@std@@YAXPAPAVCMailMsg@@ABQAV2@@Z	; std::_Construct
;	COMDAT ?construct@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?construct@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@ABQAV3@@Z PROC NEAR ; std::allocator<CMailMsg *>::construct, COMDAT

; 66   : 		{_Construct(_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAPAVCMailMsg@@ABQAV2@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?construct@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@ABQAV3@@Z ENDP ; std::allocator<CMailMsg *>::construct
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAPAVCMailMsg@@@Z		; std::_Destroy
;	COMDAT ?destroy@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?destroy@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@@Z PROC NEAR ; std::allocator<CMailMsg *>::destroy, COMDAT

; 68   : 		{_Destroy(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAPAVCMailMsg@@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@PAVCMailMsg@@@std@@QAEXPAPAVCMailMsg@@@Z ENDP ; std::allocator<CMailMsg *>::destroy
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsg@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsg@@@2@PAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Value, COMDAT

; 46   :                 {return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsg@@@2@PAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Value
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEIXZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::size, COMDAT

; 206  :                 {return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEIXZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::size
_TEXT	ENDS
PUBLIC	??R_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn::operator()
PUBLIC	?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Key
PUBLIC	?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
PUBLIC	?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
PUBLIC	?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEPAU_Node@23@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Mynode
PUBLIC	??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator--
PUBLIC	??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator==
PUBLIC	?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Insert
PUBLIC	??R?$less@H@std@@QBE_NABH0@Z			; std::less<int>::operator()
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163651 DD	019930520H
	DD	01H
	DD	FLAT:$T163653
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163653 DD	0ffffffffH
	DD	FLAT:$L163649
xdata$x	ENDS
;	COMDAT ?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -112
__X$ = -24
__Y$ = -28
__Ans$ = -20
_Lk$158758 = -32
__P$ = -16
__V$ = 12
$T163632 = -36
$T163635 = -44
$T163636 = -48
$T163637 = -52
$T163638 = -56
$T163639 = -60
$T163640 = -68
$T163641 = -72
$T163642 = -76
$T163643 = -80
$T163644 = -88
$T163645 = -92
$T163646 = -96
$T163647 = -104
$T163648 = -108
__$EHRec$ = -12
?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::insert, COMDAT

; 216  :                 {_Nodeptr _X = _Root();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163652
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 68	 sub	 esp, 104		; 00000068H
  0001b	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax

; 217  :                 _Nodeptr _Y = _Head;

  0002b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	89 55 e4	 mov	 DWORD PTR __Y$[ebp], edx

; 218  :                 bool _Ans = true;

  00034	c6 45 ec 01	 mov	 BYTE PTR __Ans$[ebp], 1

; 219  :                 { _Lockit Lk;

  00038	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$158758[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L158760:

; 220  :                         while (_X != _Nil)

  00048	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  0004b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00051	74 67		 je	 SHORT $L158761

; 221  :                                 {_Y = _X;

  00053	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  00056	89 4d e4	 mov	 DWORD PTR __Y$[ebp], ecx

; 222  :                                 _Ans = key_compare(_Kfn()(_V), _Key(_X));

  00059	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Key
  00062	83 c4 04	 add	 esp, 4
  00065	50		 push	 eax
  00066	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d dc	 lea	 ecx, DWORD PTR $T163632[ebp]
  0006d	e8 00 00 00 00	 call	 ??R_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn::operator()
  00072	50		 push	 eax
  00073	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 01	 add	 ecx, 1
  00079	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0007e	88 45 ec	 mov	 BYTE PTR __Ans$[ebp], al

; 223  :                                 _X = _Ans ? _Left(_X) : _Right(_X); }

  00081	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	85 c9		 test	 ecx, ecx
  0008c	74 13		 je	 SHORT $L163633
  0008e	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 00		 mov	 eax, DWORD PTR [eax]
  0009c	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0009f	eb 11		 jmp	 SHORT $L163634
$L163633:
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	89 55 8c	 mov	 DWORD PTR -116+[ebp], edx
$L163634:
  000b2	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  000b5	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax
  000b8	eb 8e		 jmp	 SHORT $L158760
$L158761:

; 224  :                 }

  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$158758[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 225  :                 if (_Multi)

  000ca	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  000d2	85 d2		 test	 edx, edx
  000d4	74 3e		 je	 SHORT $L158763

; 226  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  000d6	c6 45 d0 01	 mov	 BYTE PTR $T163636[ebp], 1
  000da	8d 45 d0	 lea	 eax, DWORD PTR $T163636[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d cc	 lea	 ecx, DWORD PTR $T163637[ebp]
  000ed	51		 push	 ecx
  000ee	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Insert
  000f6	50		 push	 eax
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T163635[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	89 11		 mov	 DWORD PTR [ecx], edx
  00109	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0010f	e9 16 01 00 00	 jmp	 $L158754
$L158763:

; 227  :                 iterator _P = iterator(_Y);

  00114	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00117	52		 push	 edx
  00118	8d 4d c8	 lea	 ecx, DWORD PTR $T163638[ebp]
  0011b	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::iterator
  00120	8b 00		 mov	 eax, DWORD PTR [eax]
  00122	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax

; 228  :                 if (!_Ans)

  00125	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00128	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0012e	85 c9		 test	 ecx, ecx
  00130	75 02		 jne	 SHORT $L158773

; 230  :                 else if (_P == begin())

  00132	eb 64		 jmp	 SHORT $L158784
$L158773:
  00134	8d 55 c4	 lea	 edx, DWORD PTR $T163639[ebp]
  00137	52		 push	 edx
  00138	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::begin
  00140	50		 push	 eax
  00141	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00144	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator==
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	85 c0		 test	 eax, eax
  00150	74 3e		 je	 SHORT $L158776

; 231  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  00152	c6 45 b8 01	 mov	 BYTE PTR $T163641[ebp], 1
  00156	8d 45 b8	 lea	 eax, DWORD PTR $T163641[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00161	52		 push	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  00165	50		 push	 eax
  00166	8d 4d b4	 lea	 ecx, DWORD PTR $T163642[ebp]
  00169	51		 push	 ecx
  0016a	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Insert
  00172	50		 push	 eax
  00173	8d 4d bc	 lea	 ecx, DWORD PTR $T163640[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00180	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00183	89 11		 mov	 DWORD PTR [ecx], edx
  00185	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00188	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018b	e9 9a 00 00 00	 jmp	 $L158754
$L158776:

; 233  :                         --_P;

  00190	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00193	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator--
$L158784:

; 234  :                 if (key_compare(_Key(_P._Mynode()), _Kfn()(_V)))

  00198	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  0019b	52		 push	 edx
  0019c	8d 4d b0	 lea	 ecx, DWORD PTR $T163643[ebp]
  0019f	e8 00 00 00 00	 call	 ??R_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn::operator()
  001a4	50		 push	 eax
  001a5	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEPAU_Node@23@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Mynode
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Key
  001b3	83 c4 04	 add	 esp, 4
  001b6	50		 push	 eax
  001b7	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  001c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c7	85 c0		 test	 eax, eax
  001c9	74 3b		 je	 SHORT $L158786

; 235  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  001cb	c6 45 a4 01	 mov	 BYTE PTR $T163645[ebp], 1
  001cf	8d 45 a4	 lea	 eax, DWORD PTR $T163645[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  001d6	51		 push	 ecx
  001d7	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  001da	52		 push	 edx
  001db	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  001de	50		 push	 eax
  001df	8d 4d a0	 lea	 ecx, DWORD PTR $T163646[ebp]
  001e2	51		 push	 ecx
  001e3	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Insert
  001eb	50		 push	 eax
  001ec	8d 4d a8	 lea	 ecx, DWORD PTR $T163644[ebp]
  001ef	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001fc	89 11		 mov	 DWORD PTR [ecx], edx
  001fe	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00201	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00204	eb 24		 jmp	 SHORT $L158754
$L158786:

; 236  :                 return (_Pairib(_P, false)); }

  00206	c6 45 94 00	 mov	 BYTE PTR $T163648[ebp], 0
  0020a	8d 55 94	 lea	 edx, DWORD PTR $T163648[ebp]
  0020d	52		 push	 edx
  0020e	8d 45 f0	 lea	 eax, DWORD PTR __P$[ebp]
  00211	50		 push	 eax
  00212	8d 4d 98	 lea	 ecx, DWORD PTR $T163647[ebp]
  00215	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00222	89 08		 mov	 DWORD PTR [eax], ecx
  00224	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00227	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L158754:
  0022a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163649:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$158758[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163652:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163651
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::insert
PUBLIC	?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z ; std::swap
PUBLIC	?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
PUBLIC	?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
PUBLIC	?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lrotate
PUBLIC	?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Max
PUBLIC	?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Min
PUBLIC	?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rrotate
PUBLIC	?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Destval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163660 DD	019930520H
	DD	01H
	DD	FLAT:$T163662
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163662 DD	0ffffffffH
	DD	FLAT:$L163658
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -44
__X$ = -16
__Y$ = -20
__Z$ = -28
__Lk$ = -24
__W$158842 = -32
__W$158848 = -36
__P$ = 12
$T163657 = -40
__$EHRec$ = -12
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase, COMDAT

; 264  :                 {_Nodeptr _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163661
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	56		 push	 esi
  0001c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 265  :                 _Nodeptr _Y = (_P++)._Mynode();

  0001f	6a 00		 push	 0
  00021	8d 45 d8	 lea	 eax, DWORD PTR $T163657[ebp]
  00024	50		 push	 eax
  00025	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00028	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AV012@H@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator++
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEPAU_Node@23@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Mynode
  00034	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax

; 266  :                 _Nodeptr _Z = _Y;

  00037	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0003a	89 4d e4	 mov	 DWORD PTR __Z$[ebp], ecx

; 267  :                 _Lockit _Lk;

  0003d	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  :                 if (_Left(_Y) == _Nil)

  0004d	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00056	83 c4 04	 add	 esp, 4
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00061	75 13		 jne	 SHORT $L158808

; 269  :                         _X = _Right(_Y);

  00063	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 270  :                 else if (_Right(_Y) == _Nil)

  00074	eb 54		 jmp	 SHORT $L158811
$L158808:
  00076	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  0008a	75 13		 jne	 SHORT $L158810

; 271  :                         _X = _Left(_Y);

  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00095	83 c4 04	 add	 esp, 4
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 272  :                 else

  0009d	eb 2b		 jmp	 SHORT $L158811
$L158810:

; 273  :                         _Y = _Min(_Right(_Y)), _X = _Right(_Y);

  0009f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Min
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  000b9	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L158811:

; 274  :                 if (_Y != _Z)

  000ca	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000cd	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  000d0	0f 84 95 01 00
	00		 je	 $L158812

; 275  :                         {_Parent(_Left(_Z)) = _Y;

  000d6	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  000df	83 c4 04	 add	 esp, 4
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  000ea	83 c4 04	 add	 esp, 4
  000ed	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000f0	89 10		 mov	 DWORD PTR [eax], edx

; 276  :                         _Left(_Y) = _Left(_Z);

  000f2	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  000fb	83 c4 04	 add	 esp, 4
  000fe	8b f0		 mov	 esi, eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00109	83 c4 04	 add	 esp, 4
  0010c	8b 16		 mov	 edx, DWORD PTR [esi]
  0010e	89 10		 mov	 DWORD PTR [eax], edx

; 277  :                         if (_Y == _Right(_Z))

  00110	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00119	83 c4 04	 add	 esp, 4
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0011f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00121	75 13		 jne	 SHORT $L158813

; 278  :                                 _Parent(_X) = _Y;

  00123	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0012c	83 c4 04	 add	 esp, 4
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx

; 279  :                         else

  00134	eb 74		 jmp	 SHORT $L158814
$L158813:

; 280  :                                 {_Parent(_X) = _Parent(_Y);

  00136	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0013f	83 c4 04	 add	 esp, 4
  00142	8b f0		 mov	 esi, eax
  00144	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0014d	83 c4 04	 add	 esp, 4
  00150	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00152	89 08		 mov	 DWORD PTR [eax], ecx

; 281  :                                 _Left(_Parent(_Y)) = _X;

  00154	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00157	52		 push	 edx
  00158	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0015d	83 c4 04	 add	 esp, 4
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00168	83 c4 04	 add	 esp, 4
  0016b	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0016e	89 08		 mov	 DWORD PTR [eax], ecx

; 282  :                                 _Right(_Y) = _Right(_Z);

  00170	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00179	83 c4 04	 add	 esp, 4
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00187	83 c4 04	 add	 esp, 4
  0018a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0018c	89 08		 mov	 DWORD PTR [eax], ecx

; 283  :                                 _Parent(_Right(_Z)) = _Y; }

  0018e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00197	83 c4 04	 add	 esp, 4
  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  001a2	83 c4 04	 add	 esp, 4
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
$L158814:

; 284  :                         if (_Root() == _Z)

  001aa	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  001b2	8b 10		 mov	 edx, DWORD PTR [eax]
  001b4	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  001b7	75 0f		 jne	 SHORT $L158815

; 285  :                                 _Root() = _Y;

  001b9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001c4	89 08		 mov	 DWORD PTR [eax], ecx

; 286  :                         else if (_Left(_Parent(_Z)) == _Z)

  001c6	eb 58		 jmp	 SHORT $L158818
$L158815:
  001c8	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  001d1	83 c4 04	 add	 esp, 4
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  001dc	83 c4 04	 add	 esp, 4
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  001e4	75 1e		 jne	 SHORT $L158817

; 287  :                                 _Left(_Parent(_Z)) = _Y;

  001e6	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001e9	52		 push	 edx
  001ea	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  001ef	83 c4 04	 add	 esp, 4
  001f2	8b 00		 mov	 eax, DWORD PTR [eax]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  001fa	83 c4 04	 add	 esp, 4
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00200	89 08		 mov	 DWORD PTR [eax], ecx

; 288  :                         else

  00202	eb 1c		 jmp	 SHORT $L158818
$L158817:

; 289  :                                 _Right(_Parent(_Z)) = _Y;

  00204	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 00		 mov	 eax, DWORD PTR [eax]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00218	83 c4 04	 add	 esp, 4
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0021e	89 08		 mov	 DWORD PTR [eax], ecx
$L158818:

; 290  :                         _Parent(_Y) = _Parent(_Z);

  00220	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00237	83 c4 04	 add	 esp, 4
  0023a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023c	89 08		 mov	 DWORD PTR [eax], ecx

; 291  :                         std::swap(_Color(_Y), _Color(_Z));

  0023e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00247	83 c4 04	 add	 esp, 4
  0024a	50		 push	 eax
  0024b	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00254	83 c4 04	 add	 esp, 4
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z ; std::swap
  0025d	83 c4 08	 add	 esp, 8

; 292  :                         _Y = _Z; }

  00260	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  00263	89 4d ec	 mov	 DWORD PTR __Y$[ebp], ecx

; 293  :                 else

  00266	e9 4a 01 00 00	 jmp	 $L158836
$L158812:

; 294  :                         {_Parent(_X) = _Parent(_Y);

  0026b	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00274	83 c4 04	 add	 esp, 4
  00277	8b f0		 mov	 esi, eax
  00279	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00282	83 c4 04	 add	 esp, 4
  00285	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00287	89 08		 mov	 DWORD PTR [eax], ecx

; 295  :                         if (_Root() == _Z)

  00289	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  00296	75 0f		 jne	 SHORT $L158825

; 296  :                                 _Root() = _X;

  00298	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 297  :                         else if (_Left(_Parent(_Z)) == _Z)

  002a5	eb 58		 jmp	 SHORT $L158828
$L158825:
  002a7	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002aa	52		 push	 edx
  002ab	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  002b0	83 c4 04	 add	 esp, 4
  002b3	8b 00		 mov	 eax, DWORD PTR [eax]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  002bb	83 c4 04	 add	 esp, 4
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  002c3	75 1e		 jne	 SHORT $L158827

; 298  :                                 _Left(_Parent(_Z)) = _X;

  002c5	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  002ce	83 c4 04	 add	 esp, 4
  002d1	8b 00		 mov	 eax, DWORD PTR [eax]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002df	89 08		 mov	 DWORD PTR [eax], ecx

; 299  :                         else

  002e1	eb 1c		 jmp	 SHORT $L158828
$L158827:

; 300  :                                 _Right(_Parent(_Z)) = _X;

  002e3	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  002ec	83 c4 04	 add	 esp, 4
  002ef	8b 00		 mov	 eax, DWORD PTR [eax]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  002f7	83 c4 04	 add	 esp, 4
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	89 08		 mov	 DWORD PTR [eax], ecx
$L158828:

; 301  :                         if (_Lmost() != _Z)

  002ff	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost
  00307	8b 10		 mov	 edx, DWORD PTR [eax]
  00309	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  0030c	74 02		 je	 SHORT $L158829

; 303  :                         else if (_Right(_Z) == _Nil)

  0030e	eb 4a		 jmp	 SHORT $L158832
$L158829:
  00310	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00319	83 c4 04	 add	 esp, 4
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00324	75 1c		 jne	 SHORT $L158831

; 304  :                                 _Lmost() = _Parent(_Z);

  00326	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0032f	83 c4 04	 add	 esp, 4
  00332	8b f0		 mov	 esi, eax
  00334	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost
  0033c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0033e	89 08		 mov	 DWORD PTR [eax], ecx

; 305  :                         else

  00340	eb 18		 jmp	 SHORT $L158832
$L158831:

; 306  :                                 _Lmost() = _Min(_X);

  00342	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00345	52		 push	 edx
  00346	e8 00 00 00 00	 call	 ?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Min
  0034b	83 c4 04	 add	 esp, 4
  0034e	8b f0		 mov	 esi, eax
  00350	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost
  00358	89 30		 mov	 DWORD PTR [eax], esi
$L158832:

; 307  :                         if (_Rmost() != _Z)

  0035a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	3b 45 e4	 cmp	 eax, DWORD PTR __Z$[ebp]
  00367	74 02		 je	 SHORT $L158833

; 309  :                         else if (_Left(_Z) == _Nil)

  00369	eb 4a		 jmp	 SHORT $L158836
$L158833:
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00374	83 c4 04	 add	 esp, 4
  00377	8b 10		 mov	 edx, DWORD PTR [eax]
  00379	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  0037f	75 1c		 jne	 SHORT $L158835

; 310  :                                 _Rmost() = _Parent(_Z);

  00381	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0038a	83 c4 04	 add	 esp, 4
  0038d	8b f0		 mov	 esi, eax
  0038f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost
  00397	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00399	89 08		 mov	 DWORD PTR [eax], ecx

; 311  :                         else

  0039b	eb 18		 jmp	 SHORT $L158836
$L158835:

; 312  :                                 _Rmost() = _Max(_X); }

  0039d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Max
  003a6	83 c4 04	 add	 esp, 4
  003a9	8b f0		 mov	 esi, eax
  003ab	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ae	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost
  003b3	89 30		 mov	 DWORD PTR [eax], esi
$L158836:

; 313  :                 if (_Color(_Y) == _Black)

  003b5	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  003be	83 c4 04	 add	 esp, 4
  003c1	83 38 01	 cmp	 DWORD PTR [eax], 1
  003c4	0f 85 25 04 00
	00		 jne	 $L158837
$L158839:

; 314  :                         {while (_X != _Root() && _Color(_X) == _Black)

  003ca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  003d2	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  003d5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d7	0f 84 00 04 00
	00		 je	 $L158840
  003dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  003e6	83 c4 04	 add	 esp, 4
  003e9	83 38 01	 cmp	 DWORD PTR [eax], 1
  003ec	0f 85 eb 03 00
	00		 jne	 $L158840

; 315  :                                 if (_X == _Left(_Parent(_X)))

  003f2	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  003fb	83 c4 04	 add	 esp, 4
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	51		 push	 ecx
  00401	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00406	83 c4 04	 add	 esp, 4
  00409	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0040c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0040e	0f 85 e6 01 00
	00		 jne	 $L158841

; 316  :                                         {_Nodeptr _W = _Right(_Parent(_X));

  00414	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0041d	83 c4 04	 add	 esp, 4
  00420	8b 08		 mov	 ecx, DWORD PTR [eax]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 10		 mov	 edx, DWORD PTR [eax]
  0042d	89 55 e0	 mov	 DWORD PTR __W$158842[ebp], edx

; 317  :                                         if (_Color(_W) == _Red)

  00430	8b 45 e0	 mov	 eax, DWORD PTR __W$158842[ebp]
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0043f	75 62		 jne	 SHORT $L158843

; 318  :                                                 {_Color(_W) = _Black;

  00441	8b 4d e0	 mov	 ecx, DWORD PTR __W$158842[ebp]
  00444	51		 push	 ecx
  00445	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  0044a	83 c4 04	 add	 esp, 4
  0044d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 319  :                                                 _Color(_Parent(_X)) = _Red;

  00453	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0045c	83 c4 04	 add	 esp, 4
  0045f	8b 00		 mov	 eax, DWORD PTR [eax]
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00467	83 c4 04	 add	 esp, 4
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 320  :                                                 _Lrotate(_Parent(_X));

  00470	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00473	51		 push	 ecx
  00474	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00479	83 c4 04	 add	 esp, 4
  0047c	8b 10		 mov	 edx, DWORD PTR [eax]
  0047e	52		 push	 edx
  0047f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lrotate

; 321  :                                                 _W = _Right(_Parent(_X)); }

  00487	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00490	83 c4 04	 add	 esp, 4
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	51		 push	 ecx
  00496	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0049b	83 c4 04	 add	 esp, 4
  0049e	8b 10		 mov	 edx, DWORD PTR [eax]
  004a0	89 55 e0	 mov	 DWORD PTR __W$158842[ebp], edx
$L158843:

; 323  :                                                 && _Color(_Right(_W)) == _Black)

  004a3	8b 45 e0	 mov	 eax, DWORD PTR __W$158842[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  004ac	83 c4 04	 add	 esp, 4
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  004b7	83 c4 04	 add	 esp, 4
  004ba	83 38 01	 cmp	 DWORD PTR [eax], 1
  004bd	75 44		 jne	 SHORT $L158844
  004bf	8b 55 e0	 mov	 edx, DWORD PTR __W$158842[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  004c8	83 c4 04	 add	 esp, 4
  004cb	8b 00		 mov	 eax, DWORD PTR [eax]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  004d3	83 c4 04	 add	 esp, 4
  004d6	83 38 01	 cmp	 DWORD PTR [eax], 1
  004d9	75 28		 jne	 SHORT $L158844

; 324  :                                                 {_Color(_W) = _Red;

  004db	8b 4d e0	 mov	 ecx, DWORD PTR __W$158842[ebp]
  004de	51		 push	 ecx
  004df	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  004e4	83 c4 04	 add	 esp, 4
  004e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  :                                                 _X = _Parent(_X); }

  004ed	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  004f0	52		 push	 edx
  004f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  004f6	83 c4 04	 add	 esp, 4
  004f9	8b 00		 mov	 eax, DWORD PTR [eax]
  004fb	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 326  :                                         else

  004fe	e9 f2 00 00 00	 jmp	 $L158845
$L158844:

; 327  :                                                 {if (_Color(_Right(_W)) == _Black)

  00503	8b 4d e0	 mov	 ecx, DWORD PTR __W$158842[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0050c	83 c4 04	 add	 esp, 4
  0050f	8b 10		 mov	 edx, DWORD PTR [eax]
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00517	83 c4 04	 add	 esp, 4
  0051a	83 38 01	 cmp	 DWORD PTR [eax], 1
  0051d	75 57		 jne	 SHORT $L158846

; 328  :                                                         {_Color(_Left(_W)) = _Black;

  0051f	8b 45 e0	 mov	 eax, DWORD PTR __W$158842[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00528	83 c4 04	 add	 esp, 4
  0052b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052d	51		 push	 ecx
  0052e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00533	83 c4 04	 add	 esp, 4
  00536	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 329  :                                                         _Color(_W) = _Red;

  0053c	8b 55 e0	 mov	 edx, DWORD PTR __W$158842[ebp]
  0053f	52		 push	 edx
  00540	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00545	83 c4 04	 add	 esp, 4
  00548	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 330  :                                                         _Rrotate(_W);

  0054e	8b 45 e0	 mov	 eax, DWORD PTR __W$158842[ebp]
  00551	50		 push	 eax
  00552	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rrotate

; 331  :                                                         _W = _Right(_Parent(_X)); }

  0055a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0055d	51		 push	 ecx
  0055e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00563	83 c4 04	 add	 esp, 4
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	52		 push	 edx
  00569	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0056e	83 c4 04	 add	 esp, 4
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	89 45 e0	 mov	 DWORD PTR __W$158842[ebp], eax
$L158846:

; 332  :                                                 _Color(_W) = _Color(_Parent(_X));

  00576	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0057f	83 c4 04	 add	 esp, 4
  00582	8b 10		 mov	 edx, DWORD PTR [eax]
  00584	52		 push	 edx
  00585	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  0058a	83 c4 04	 add	 esp, 4
  0058d	8b f0		 mov	 esi, eax
  0058f	8b 45 e0	 mov	 eax, DWORD PTR __W$158842[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0059d	89 08		 mov	 DWORD PTR [eax], ecx

; 333  :                                                 _Color(_Parent(_X)) = _Black;

  0059f	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005a2	52		 push	 edx
  005a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  005a8	83 c4 04	 add	 esp, 4
  005ab	8b 00		 mov	 eax, DWORD PTR [eax]
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  005b3	83 c4 04	 add	 esp, 4
  005b6	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 334  :                                                 _Color(_Right(_W)) = _Black;

  005bc	8b 4d e0	 mov	 ecx, DWORD PTR __W$158842[ebp]
  005bf	51		 push	 ecx
  005c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  005c5	83 c4 04	 add	 esp, 4
  005c8	8b 10		 mov	 edx, DWORD PTR [eax]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 335  :                                                 _Lrotate(_Parent(_X));

  005d9	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	51		 push	 ecx
  005e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lrotate

; 336  :                                                 break; }}

  005f0	e9 e8 01 00 00	 jmp	 $L158840
$L158845:

; 337  :                                 else

  005f5	e9 de 01 00 00	 jmp	 $L158851
$L158841:

; 338  :                                         {_Nodeptr _W = _Left(_Parent(_X));

  005fa	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005fd	52		 push	 edx
  005fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00603	83 c4 04	 add	 esp, 4
  00606	8b 00		 mov	 eax, DWORD PTR [eax]
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  0060e	83 c4 04	 add	 esp, 4
  00611	8b 08		 mov	 ecx, DWORD PTR [eax]
  00613	89 4d dc	 mov	 DWORD PTR __W$158848[ebp], ecx

; 339  :                                         if (_Color(_W) == _Red)

  00616	8b 55 dc	 mov	 edx, DWORD PTR __W$158848[ebp]
  00619	52		 push	 edx
  0061a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  0061f	83 c4 04	 add	 esp, 4
  00622	83 38 00	 cmp	 DWORD PTR [eax], 0
  00625	75 62		 jne	 SHORT $L158849

; 340  :                                                 {_Color(_W) = _Black;

  00627	8b 45 dc	 mov	 eax, DWORD PTR __W$158848[ebp]
  0062a	50		 push	 eax
  0062b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00630	83 c4 04	 add	 esp, 4
  00633	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 341  :                                                 _Color(_Parent(_X)) = _Red;

  00639	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0063c	51		 push	 ecx
  0063d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00642	83 c4 04	 add	 esp, 4
  00645	8b 10		 mov	 edx, DWORD PTR [eax]
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  0064d	83 c4 04	 add	 esp, 4
  00650	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 342  :                                                 _Rrotate(_Parent(_X));

  00656	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00659	50		 push	 eax
  0065a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0065f	83 c4 04	 add	 esp, 4
  00662	8b 08		 mov	 ecx, DWORD PTR [eax]
  00664	51		 push	 ecx
  00665	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rrotate

; 343  :                                                 _W = _Left(_Parent(_X)); }

  0066d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00670	52		 push	 edx
  00671	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00676	83 c4 04	 add	 esp, 4
  00679	8b 00		 mov	 eax, DWORD PTR [eax]
  0067b	50		 push	 eax
  0067c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00681	83 c4 04	 add	 esp, 4
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 4d dc	 mov	 DWORD PTR __W$158848[ebp], ecx
$L158849:

; 345  :                                                 && _Color(_Left(_W)) == _Black)

  00689	8b 55 dc	 mov	 edx, DWORD PTR __W$158848[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00692	83 c4 04	 add	 esp, 4
  00695	8b 00		 mov	 eax, DWORD PTR [eax]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  0069d	83 c4 04	 add	 esp, 4
  006a0	83 38 01	 cmp	 DWORD PTR [eax], 1
  006a3	75 44		 jne	 SHORT $L158850
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR __W$158848[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  006ae	83 c4 04	 add	 esp, 4
  006b1	8b 10		 mov	 edx, DWORD PTR [eax]
  006b3	52		 push	 edx
  006b4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  006b9	83 c4 04	 add	 esp, 4
  006bc	83 38 01	 cmp	 DWORD PTR [eax], 1
  006bf	75 28		 jne	 SHORT $L158850

; 346  :                                                 {_Color(_W) = _Red;

  006c1	8b 45 dc	 mov	 eax, DWORD PTR __W$158848[ebp]
  006c4	50		 push	 eax
  006c5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  006ca	83 c4 04	 add	 esp, 4
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 347  :                                                 _X = _Parent(_X); }

  006d3	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  006d6	51		 push	 ecx
  006d7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  006dc	83 c4 04	 add	 esp, 4
  006df	8b 10		 mov	 edx, DWORD PTR [eax]
  006e1	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 348  :                                         else

  006e4	e9 ef 00 00 00	 jmp	 $L158851
$L158850:

; 349  :                                                 {if (_Color(_Left(_W)) == _Black)

  006e9	8b 45 dc	 mov	 eax, DWORD PTR __W$158848[ebp]
  006ec	50		 push	 eax
  006ed	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  006f2	83 c4 04	 add	 esp, 4
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  006fd	83 c4 04	 add	 esp, 4
  00700	83 38 01	 cmp	 DWORD PTR [eax], 1
  00703	75 57		 jne	 SHORT $L158852

; 350  :                                                         {_Color(_Right(_W)) = _Black;

  00705	8b 55 dc	 mov	 edx, DWORD PTR __W$158848[ebp]
  00708	52		 push	 edx
  00709	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0070e	83 c4 04	 add	 esp, 4
  00711	8b 00		 mov	 eax, DWORD PTR [eax]
  00713	50		 push	 eax
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 351  :                                                         _Color(_W) = _Red;

  00722	8b 4d dc	 mov	 ecx, DWORD PTR __W$158848[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  0072b	83 c4 04	 add	 esp, 4
  0072e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 352  :                                                         _Lrotate(_W);

  00734	8b 55 dc	 mov	 edx, DWORD PTR __W$158848[ebp]
  00737	52		 push	 edx
  00738	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lrotate

; 353  :                                                         _W = _Left(_Parent(_X)); }

  00740	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00749	83 c4 04	 add	 esp, 4
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	51		 push	 ecx
  0074f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00754	83 c4 04	 add	 esp, 4
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	89 55 dc	 mov	 DWORD PTR __W$158848[ebp], edx
$L158852:

; 354  :                                                 _Color(_W) = _Color(_Parent(_X));

  0075c	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00765	83 c4 04	 add	 esp, 4
  00768	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00770	83 c4 04	 add	 esp, 4
  00773	8b f0		 mov	 esi, eax
  00775	8b 55 dc	 mov	 edx, DWORD PTR __W$158848[ebp]
  00778	52		 push	 edx
  00779	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  0077e	83 c4 04	 add	 esp, 4
  00781	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00783	89 08		 mov	 DWORD PTR [eax], ecx

; 355  :                                                 _Color(_Parent(_X)) = _Black;

  00785	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0078e	83 c4 04	 add	 esp, 4
  00791	8b 00		 mov	 eax, DWORD PTR [eax]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00799	83 c4 04	 add	 esp, 4
  0079c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 356  :                                                 _Color(_Left(_W)) = _Black;

  007a2	8b 4d dc	 mov	 ecx, DWORD PTR __W$158848[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  007ab	83 c4 04	 add	 esp, 4
  007ae	8b 10		 mov	 edx, DWORD PTR [eax]
  007b0	52		 push	 edx
  007b1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  007b6	83 c4 04	 add	 esp, 4
  007b9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 357  :                                                 _Rrotate(_Parent(_X));

  007bf	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  007c8	83 c4 04	 add	 esp, 4
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	51		 push	 ecx
  007ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rrotate

; 358  :                                                 break; }}

  007d6	eb 05		 jmp	 SHORT $L158840
$L158851:
  007d8	e9 ed fb ff ff	 jmp	 $L158839
$L158840:

; 359  :                         _Color(_X) = _Black; }

  007dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  007e0	52		 push	 edx
  007e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  007e6	83 c4 04	 add	 esp, 4
  007e9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L158837:

; 360  :                 _Destval(&_Value(_Y));

  007ef	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsg@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Value
  007f8	83 c4 04	 add	 esp, 4
  007fb	50		 push	 eax
  007fc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Destval

; 361  :                 _Freenode(_Y);

  00804	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00807	51		 push	 ecx
  00808	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Freenode

; 362  :                 --_Size;

  00810	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00813	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00816	83 e8 01	 sub	 eax, 1
  00819	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 363  :                 return (_P); }

  0081f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00822	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00825	89 02		 mov	 DWORD PTR [edx], eax
  00827	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0082e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00831	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00837	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0083a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0083d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00844	5e		 pop	 esi
  00845	8b e5		 mov	 esp, ebp
  00847	5d		 pop	 ebp
  00848	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163658:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163661:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163660
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::erase
PUBLIC	?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::lower_bound
PUBLIC	?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::upper_bound
PUBLIC	??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator>
;	COMDAT ?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@2@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -20
__Kv$ = 12
$T163666 = -8
$T163667 = -12
$T163668 = -16
?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@2@ABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::equal_range, COMDAT

; 410  :                 {return (_Pairii(lower_bound(_Kv), upper_bound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f4	 lea	 ecx, DWORD PTR $T163667[ebp]
  00010	51		 push	 ecx
  00011	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::upper_bound
  00019	50		 push	 eax
  0001a	8b 55 0c	 mov	 edx, DWORD PTR __Kv$[ebp]
  0001d	52		 push	 edx
  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T163668[ebp]
  00021	50		 push	 eax
  00022	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::lower_bound
  0002a	50		 push	 eax
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR $T163666[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator>
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	89 08		 mov	 DWORD PTR [eax], ecx
  0003d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00040	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@2@ABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::equal_range
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163672 DD	019930520H
	DD	01H
	DD	FLAT:$T163674
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163674 DD	0ffffffffH
	DD	FLAT:$L163670
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
__$EHRec$ = -12
?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Erase, COMDAT

; 449  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163673
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 450  :                 for (_Nodeptr _Y = _X; _Y != _Nil; _X = _Y)

  0002e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax
  00034	eb 06		 jmp	 SHORT $L158867
$L158868:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00039	89 4d 08	 mov	 DWORD PTR __X$[ebp], ecx
$L158867:
  0003c	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  0003f	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00045	74 4b		 je	 SHORT $L158869

; 451  :                         {_Erase(_Right(_Y));

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Erase

; 452  :                         _Y = _Left(_Y);

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax

; 453  :                         _Destval(&_Value(_X));

  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsg@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Value
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Destval

; 454  :                         _Freenode(_X); }}

  00084	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00087	52		 push	 edx
  00088	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Freenode
  00090	eb a4		 jmp	 SHORT $L158868
$L158869:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163670:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163673:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163672
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Erase
PUBLIC	?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Buynode
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163680 DD	019930520H
	DD	01H
	DD	FLAT:$T163682
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163682 DD	0ffffffffH
	DD	FLAT:$L163678
xdata$x	ENDS
;	COMDAT ?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -20
__Lk$ = -16
__$EHRec$ = -12
?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXXZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Init, COMDAT

; 456  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163681
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :                 if (_Nil == 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A, 0 ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00035	75 3a		 jne	 SHORT $L158873

; 458  :                         {_Nil = _Buynode(0, _Black);

  00037	6a 01		 push	 1
  00039	6a 00		 push	 0
  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Buynode
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A, eax ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil

; 459  :                         _Left(_Nil) = 0, _Right(_Nil) = 0; }

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00068	83 c4 04	 add	 esp, 4
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L158873:

; 460  :                 ++_Nilrefs;

  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1IA ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nilrefs
  00077	83 c2 01	 add	 edx, 1
  0007a	89 15 00 00 00
	00		 mov	 DWORD PTR ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1IA, edx ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nilrefs

; 461  :                 _Head = _Buynode(_Nil, _Red), _Size = 0;

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Buynode
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00096	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00099	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 462  :                 _Lmost() = _Head, _Rmost() = _Head; }

  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	89 10		 mov	 DWORD PTR [eax], edx
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost
  000b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	89 10		 mov	 DWORD PTR [eax], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163678:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163681:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163680
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXXZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Init
;	COMDAT ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost, COMDAT

; 524  :                 {return (_Left(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost, COMDAT

; 553  :                 {return (_Right(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root, COMDAT

; 557  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::iterator, COMDAT

; 124  :                 iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator++
;	COMDAT ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator++, COMDAT

; 134  :                         {iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 135  :                         ++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator++

; 136  :                         return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator!=, COMDAT

; 147  :                         {return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator!=
_TEXT	ENDS
;	COMDAT ?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT
__P$ = 8
?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev, COMDAT

; 39   : 			{return ((_Nodepref)(*_P)._Prev); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Prev@_Acc@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::_Acc::_Prev
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::const_iterator, COMDAT

; 61   : 		const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QAE@PAU_Node@12@@Z ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::const_iterator
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::_Mynode, COMDAT

; 88   : 			{return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$list@PAVCMailMsg@@V?$allocator@PAVCMailMsg@@@std@@@std@@QBEPAU_Node@23@XZ ENDP ; std::list<CMailMsg *,std::allocator<CMailMsg *> >::const_iterator::_Mynode
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCMailMsgWnd@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?deallocate@?$allocator@PAVCMailMsgWnd@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CMailMsgWnd *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCMailMsgWnd@@@std@@QAEXPAXI@Z ENDP ; std::allocator<CMailMsgWnd *>::deallocate
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@PAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Value, COMDAT

; 46   :                 {return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@PAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Value
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEIXZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::size, COMDAT

; 206  :                 {return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEIXZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::size
_TEXT	ENDS
PUBLIC	??R_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn::operator()
PUBLIC	?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Key
PUBLIC	?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
PUBLIC	?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
PUBLIC	?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEPAU_Node@23@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Mynode
PUBLIC	??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator--
PUBLIC	??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator==
PUBLIC	?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Insert
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163717 DD	019930520H
	DD	01H
	DD	FLAT:$T163719
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163719 DD	0ffffffffH
	DD	FLAT:$L163715
xdata$x	ENDS
;	COMDAT ?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -112
__X$ = -24
__Y$ = -28
__Ans$ = -20
_Lk$158906 = -32
__P$ = -16
__V$ = 12
$T163698 = -36
$T163701 = -44
$T163702 = -48
$T163703 = -52
$T163704 = -56
$T163705 = -60
$T163706 = -68
$T163707 = -72
$T163708 = -76
$T163709 = -80
$T163710 = -88
$T163711 = -92
$T163712 = -96
$T163713 = -104
$T163714 = -108
__$EHRec$ = -12
?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::insert, COMDAT

; 216  :                 {_Nodeptr _X = _Root();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163718
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 68	 sub	 esp, 104		; 00000068H
  0001b	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax

; 217  :                 _Nodeptr _Y = _Head;

  0002b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	89 55 e4	 mov	 DWORD PTR __Y$[ebp], edx

; 218  :                 bool _Ans = true;

  00034	c6 45 ec 01	 mov	 BYTE PTR __Ans$[ebp], 1

; 219  :                 { _Lockit Lk;

  00038	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$158906[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L158908:

; 220  :                         while (_X != _Nil)

  00048	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  0004b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00051	74 67		 je	 SHORT $L158909

; 221  :                                 {_Y = _X;

  00053	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  00056	89 4d e4	 mov	 DWORD PTR __Y$[ebp], ecx

; 222  :                                 _Ans = key_compare(_Kfn()(_V), _Key(_X));

  00059	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Key
  00062	83 c4 04	 add	 esp, 4
  00065	50		 push	 eax
  00066	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d dc	 lea	 ecx, DWORD PTR $T163698[ebp]
  0006d	e8 00 00 00 00	 call	 ??R_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn::operator()
  00072	50		 push	 eax
  00073	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 01	 add	 ecx, 1
  00079	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0007e	88 45 ec	 mov	 BYTE PTR __Ans$[ebp], al

; 223  :                                 _X = _Ans ? _Left(_X) : _Right(_X); }

  00081	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	85 c9		 test	 ecx, ecx
  0008c	74 13		 je	 SHORT $L163699
  0008e	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 00		 mov	 eax, DWORD PTR [eax]
  0009c	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0009f	eb 11		 jmp	 SHORT $L163700
$L163699:
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	89 55 8c	 mov	 DWORD PTR -116+[ebp], edx
$L163700:
  000b2	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  000b5	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax
  000b8	eb 8e		 jmp	 SHORT $L158908
$L158909:

; 224  :                 }

  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$158906[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 225  :                 if (_Multi)

  000ca	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  000d2	85 d2		 test	 edx, edx
  000d4	74 3e		 je	 SHORT $L158911

; 226  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  000d6	c6 45 d0 01	 mov	 BYTE PTR $T163702[ebp], 1
  000da	8d 45 d0	 lea	 eax, DWORD PTR $T163702[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d cc	 lea	 ecx, DWORD PTR $T163703[ebp]
  000ed	51		 push	 ecx
  000ee	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Insert
  000f6	50		 push	 eax
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T163701[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	89 11		 mov	 DWORD PTR [ecx], edx
  00109	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0010f	e9 16 01 00 00	 jmp	 $L158902
$L158911:

; 227  :                 iterator _P = iterator(_Y);

  00114	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00117	52		 push	 edx
  00118	8d 4d c8	 lea	 ecx, DWORD PTR $T163704[ebp]
  0011b	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::iterator
  00120	8b 00		 mov	 eax, DWORD PTR [eax]
  00122	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax

; 228  :                 if (!_Ans)

  00125	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00128	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0012e	85 c9		 test	 ecx, ecx
  00130	75 02		 jne	 SHORT $L158921

; 230  :                 else if (_P == begin())

  00132	eb 64		 jmp	 SHORT $L158932
$L158921:
  00134	8d 55 c4	 lea	 edx, DWORD PTR $T163705[ebp]
  00137	52		 push	 edx
  00138	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?begin@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::begin
  00140	50		 push	 eax
  00141	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00144	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator==
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	85 c0		 test	 eax, eax
  00150	74 3e		 je	 SHORT $L158924

; 231  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  00152	c6 45 b8 01	 mov	 BYTE PTR $T163707[ebp], 1
  00156	8d 45 b8	 lea	 eax, DWORD PTR $T163707[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00161	52		 push	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  00165	50		 push	 eax
  00166	8d 4d b4	 lea	 ecx, DWORD PTR $T163708[ebp]
  00169	51		 push	 ecx
  0016a	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Insert
  00172	50		 push	 eax
  00173	8d 4d bc	 lea	 ecx, DWORD PTR $T163706[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00180	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00183	89 11		 mov	 DWORD PTR [ecx], edx
  00185	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00188	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018b	e9 9a 00 00 00	 jmp	 $L158902
$L158924:

; 233  :                         --_P;

  00190	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00193	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator--
$L158932:

; 234  :                 if (key_compare(_Key(_P._Mynode()), _Kfn()(_V)))

  00198	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  0019b	52		 push	 edx
  0019c	8d 4d b0	 lea	 ecx, DWORD PTR $T163709[ebp]
  0019f	e8 00 00 00 00	 call	 ??R_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn::operator()
  001a4	50		 push	 eax
  001a5	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEPAU_Node@23@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Mynode
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Key
  001b3	83 c4 04	 add	 esp, 4
  001b6	50		 push	 eax
  001b7	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  001c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c7	85 c0		 test	 eax, eax
  001c9	74 3b		 je	 SHORT $L158934

; 235  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  001cb	c6 45 a4 01	 mov	 BYTE PTR $T163711[ebp], 1
  001cf	8d 45 a4	 lea	 eax, DWORD PTR $T163711[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  001d6	51		 push	 ecx
  001d7	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  001da	52		 push	 edx
  001db	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  001de	50		 push	 eax
  001df	8d 4d a0	 lea	 ecx, DWORD PTR $T163712[ebp]
  001e2	51		 push	 ecx
  001e3	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Insert
  001eb	50		 push	 eax
  001ec	8d 4d a8	 lea	 ecx, DWORD PTR $T163710[ebp]
  001ef	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001fc	89 11		 mov	 DWORD PTR [ecx], edx
  001fe	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00201	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00204	eb 24		 jmp	 SHORT $L158902
$L158934:

; 236  :                 return (_Pairib(_P, false)); }

  00206	c6 45 94 00	 mov	 BYTE PTR $T163714[ebp], 0
  0020a	8d 55 94	 lea	 edx, DWORD PTR $T163714[ebp]
  0020d	52		 push	 edx
  0020e	8d 45 f0	 lea	 eax, DWORD PTR __P$[ebp]
  00211	50		 push	 eax
  00212	8d 4d 98	 lea	 ecx, DWORD PTR $T163713[ebp]
  00215	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@AB_N@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00222	89 08		 mov	 DWORD PTR [eax], ecx
  00224	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00227	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L158902:
  0022a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163715:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$158906[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163718:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163717
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@2@ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::insert
PUBLIC	?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z ; std::swap
PUBLIC	?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
PUBLIC	?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
PUBLIC	?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lrotate
PUBLIC	?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Max
PUBLIC	?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Min
PUBLIC	?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rrotate
PUBLIC	?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Destval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163726 DD	019930520H
	DD	01H
	DD	FLAT:$T163728
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163728 DD	0ffffffffH
	DD	FLAT:$L163724
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -44
__X$ = -16
__Y$ = -20
__Z$ = -28
__Lk$ = -24
__W$158990 = -32
__W$158996 = -36
__P$ = 12
$T163723 = -40
__$EHRec$ = -12
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase, COMDAT

; 264  :                 {_Nodeptr _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163727
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	56		 push	 esi
  0001c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 265  :                 _Nodeptr _Y = (_P++)._Mynode();

  0001f	6a 00		 push	 0
  00021	8d 45 d8	 lea	 eax, DWORD PTR $T163723[ebp]
  00024	50		 push	 eax
  00025	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00028	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AV012@H@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator++
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEPAU_Node@23@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Mynode
  00034	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax

; 266  :                 _Nodeptr _Z = _Y;

  00037	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0003a	89 4d e4	 mov	 DWORD PTR __Z$[ebp], ecx

; 267  :                 _Lockit _Lk;

  0003d	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  :                 if (_Left(_Y) == _Nil)

  0004d	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00056	83 c4 04	 add	 esp, 4
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00061	75 13		 jne	 SHORT $L158956

; 269  :                         _X = _Right(_Y);

  00063	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 270  :                 else if (_Right(_Y) == _Nil)

  00074	eb 54		 jmp	 SHORT $L158959
$L158956:
  00076	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  0008a	75 13		 jne	 SHORT $L158958

; 271  :                         _X = _Left(_Y);

  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00095	83 c4 04	 add	 esp, 4
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 272  :                 else

  0009d	eb 2b		 jmp	 SHORT $L158959
$L158958:

; 273  :                         _Y = _Min(_Right(_Y)), _X = _Right(_Y);

  0009f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Min
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  000b9	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L158959:

; 274  :                 if (_Y != _Z)

  000ca	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000cd	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  000d0	0f 84 95 01 00
	00		 je	 $L158960

; 275  :                         {_Parent(_Left(_Z)) = _Y;

  000d6	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  000df	83 c4 04	 add	 esp, 4
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  000ea	83 c4 04	 add	 esp, 4
  000ed	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000f0	89 10		 mov	 DWORD PTR [eax], edx

; 276  :                         _Left(_Y) = _Left(_Z);

  000f2	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  000fb	83 c4 04	 add	 esp, 4
  000fe	8b f0		 mov	 esi, eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00109	83 c4 04	 add	 esp, 4
  0010c	8b 16		 mov	 edx, DWORD PTR [esi]
  0010e	89 10		 mov	 DWORD PTR [eax], edx

; 277  :                         if (_Y == _Right(_Z))

  00110	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00119	83 c4 04	 add	 esp, 4
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0011f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00121	75 13		 jne	 SHORT $L158961

; 278  :                                 _Parent(_X) = _Y;

  00123	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0012c	83 c4 04	 add	 esp, 4
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx

; 279  :                         else

  00134	eb 74		 jmp	 SHORT $L158962
$L158961:

; 280  :                                 {_Parent(_X) = _Parent(_Y);

  00136	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0013f	83 c4 04	 add	 esp, 4
  00142	8b f0		 mov	 esi, eax
  00144	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0014d	83 c4 04	 add	 esp, 4
  00150	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00152	89 08		 mov	 DWORD PTR [eax], ecx

; 281  :                                 _Left(_Parent(_Y)) = _X;

  00154	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00157	52		 push	 edx
  00158	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0015d	83 c4 04	 add	 esp, 4
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00168	83 c4 04	 add	 esp, 4
  0016b	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0016e	89 08		 mov	 DWORD PTR [eax], ecx

; 282  :                                 _Right(_Y) = _Right(_Z);

  00170	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00179	83 c4 04	 add	 esp, 4
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00187	83 c4 04	 add	 esp, 4
  0018a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0018c	89 08		 mov	 DWORD PTR [eax], ecx

; 283  :                                 _Parent(_Right(_Z)) = _Y; }

  0018e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00197	83 c4 04	 add	 esp, 4
  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  001a2	83 c4 04	 add	 esp, 4
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
$L158962:

; 284  :                         if (_Root() == _Z)

  001aa	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  001b2	8b 10		 mov	 edx, DWORD PTR [eax]
  001b4	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  001b7	75 0f		 jne	 SHORT $L158963

; 285  :                                 _Root() = _Y;

  001b9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001c4	89 08		 mov	 DWORD PTR [eax], ecx

; 286  :                         else if (_Left(_Parent(_Z)) == _Z)

  001c6	eb 58		 jmp	 SHORT $L158966
$L158963:
  001c8	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  001d1	83 c4 04	 add	 esp, 4
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  001dc	83 c4 04	 add	 esp, 4
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  001e4	75 1e		 jne	 SHORT $L158965

; 287  :                                 _Left(_Parent(_Z)) = _Y;

  001e6	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001e9	52		 push	 edx
  001ea	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  001ef	83 c4 04	 add	 esp, 4
  001f2	8b 00		 mov	 eax, DWORD PTR [eax]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  001fa	83 c4 04	 add	 esp, 4
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00200	89 08		 mov	 DWORD PTR [eax], ecx

; 288  :                         else

  00202	eb 1c		 jmp	 SHORT $L158966
$L158965:

; 289  :                                 _Right(_Parent(_Z)) = _Y;

  00204	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 00		 mov	 eax, DWORD PTR [eax]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00218	83 c4 04	 add	 esp, 4
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0021e	89 08		 mov	 DWORD PTR [eax], ecx
$L158966:

; 290  :                         _Parent(_Y) = _Parent(_Z);

  00220	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00237	83 c4 04	 add	 esp, 4
  0023a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023c	89 08		 mov	 DWORD PTR [eax], ecx

; 291  :                         std::swap(_Color(_Y), _Color(_Z));

  0023e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00247	83 c4 04	 add	 esp, 4
  0024a	50		 push	 eax
  0024b	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00254	83 c4 04	 add	 esp, 4
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z ; std::swap
  0025d	83 c4 08	 add	 esp, 8

; 292  :                         _Y = _Z; }

  00260	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  00263	89 4d ec	 mov	 DWORD PTR __Y$[ebp], ecx

; 293  :                 else

  00266	e9 4a 01 00 00	 jmp	 $L158984
$L158960:

; 294  :                         {_Parent(_X) = _Parent(_Y);

  0026b	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00274	83 c4 04	 add	 esp, 4
  00277	8b f0		 mov	 esi, eax
  00279	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00282	83 c4 04	 add	 esp, 4
  00285	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00287	89 08		 mov	 DWORD PTR [eax], ecx

; 295  :                         if (_Root() == _Z)

  00289	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  00296	75 0f		 jne	 SHORT $L158973

; 296  :                                 _Root() = _X;

  00298	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 297  :                         else if (_Left(_Parent(_Z)) == _Z)

  002a5	eb 58		 jmp	 SHORT $L158976
$L158973:
  002a7	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002aa	52		 push	 edx
  002ab	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  002b0	83 c4 04	 add	 esp, 4
  002b3	8b 00		 mov	 eax, DWORD PTR [eax]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  002bb	83 c4 04	 add	 esp, 4
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  002c3	75 1e		 jne	 SHORT $L158975

; 298  :                                 _Left(_Parent(_Z)) = _X;

  002c5	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  002ce	83 c4 04	 add	 esp, 4
  002d1	8b 00		 mov	 eax, DWORD PTR [eax]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002df	89 08		 mov	 DWORD PTR [eax], ecx

; 299  :                         else

  002e1	eb 1c		 jmp	 SHORT $L158976
$L158975:

; 300  :                                 _Right(_Parent(_Z)) = _X;

  002e3	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  002ec	83 c4 04	 add	 esp, 4
  002ef	8b 00		 mov	 eax, DWORD PTR [eax]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  002f7	83 c4 04	 add	 esp, 4
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	89 08		 mov	 DWORD PTR [eax], ecx
$L158976:

; 301  :                         if (_Lmost() != _Z)

  002ff	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost
  00307	8b 10		 mov	 edx, DWORD PTR [eax]
  00309	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  0030c	74 02		 je	 SHORT $L158977

; 303  :                         else if (_Right(_Z) == _Nil)

  0030e	eb 4a		 jmp	 SHORT $L158980
$L158977:
  00310	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00319	83 c4 04	 add	 esp, 4
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00324	75 1c		 jne	 SHORT $L158979

; 304  :                                 _Lmost() = _Parent(_Z);

  00326	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0032f	83 c4 04	 add	 esp, 4
  00332	8b f0		 mov	 esi, eax
  00334	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost
  0033c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0033e	89 08		 mov	 DWORD PTR [eax], ecx

; 305  :                         else

  00340	eb 18		 jmp	 SHORT $L158980
$L158979:

; 306  :                                 _Lmost() = _Min(_X);

  00342	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00345	52		 push	 edx
  00346	e8 00 00 00 00	 call	 ?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Min
  0034b	83 c4 04	 add	 esp, 4
  0034e	8b f0		 mov	 esi, eax
  00350	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost
  00358	89 30		 mov	 DWORD PTR [eax], esi
$L158980:

; 307  :                         if (_Rmost() != _Z)

  0035a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	3b 45 e4	 cmp	 eax, DWORD PTR __Z$[ebp]
  00367	74 02		 je	 SHORT $L158981

; 309  :                         else if (_Left(_Z) == _Nil)

  00369	eb 4a		 jmp	 SHORT $L158984
$L158981:
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00374	83 c4 04	 add	 esp, 4
  00377	8b 10		 mov	 edx, DWORD PTR [eax]
  00379	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  0037f	75 1c		 jne	 SHORT $L158983

; 310  :                                 _Rmost() = _Parent(_Z);

  00381	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0038a	83 c4 04	 add	 esp, 4
  0038d	8b f0		 mov	 esi, eax
  0038f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost
  00397	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00399	89 08		 mov	 DWORD PTR [eax], ecx

; 311  :                         else

  0039b	eb 18		 jmp	 SHORT $L158984
$L158983:

; 312  :                                 _Rmost() = _Max(_X); }

  0039d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Max
  003a6	83 c4 04	 add	 esp, 4
  003a9	8b f0		 mov	 esi, eax
  003ab	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ae	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost
  003b3	89 30		 mov	 DWORD PTR [eax], esi
$L158984:

; 313  :                 if (_Color(_Y) == _Black)

  003b5	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  003be	83 c4 04	 add	 esp, 4
  003c1	83 38 01	 cmp	 DWORD PTR [eax], 1
  003c4	0f 85 25 04 00
	00		 jne	 $L158985
$L158987:

; 314  :                         {while (_X != _Root() && _Color(_X) == _Black)

  003ca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  003d2	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  003d5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d7	0f 84 00 04 00
	00		 je	 $L158988
  003dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  003e6	83 c4 04	 add	 esp, 4
  003e9	83 38 01	 cmp	 DWORD PTR [eax], 1
  003ec	0f 85 eb 03 00
	00		 jne	 $L158988

; 315  :                                 if (_X == _Left(_Parent(_X)))

  003f2	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  003fb	83 c4 04	 add	 esp, 4
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	51		 push	 ecx
  00401	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00406	83 c4 04	 add	 esp, 4
  00409	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0040c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0040e	0f 85 e6 01 00
	00		 jne	 $L158989

; 316  :                                         {_Nodeptr _W = _Right(_Parent(_X));

  00414	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0041d	83 c4 04	 add	 esp, 4
  00420	8b 08		 mov	 ecx, DWORD PTR [eax]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 10		 mov	 edx, DWORD PTR [eax]
  0042d	89 55 e0	 mov	 DWORD PTR __W$158990[ebp], edx

; 317  :                                         if (_Color(_W) == _Red)

  00430	8b 45 e0	 mov	 eax, DWORD PTR __W$158990[ebp]
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0043f	75 62		 jne	 SHORT $L158991

; 318  :                                                 {_Color(_W) = _Black;

  00441	8b 4d e0	 mov	 ecx, DWORD PTR __W$158990[ebp]
  00444	51		 push	 ecx
  00445	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  0044a	83 c4 04	 add	 esp, 4
  0044d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 319  :                                                 _Color(_Parent(_X)) = _Red;

  00453	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0045c	83 c4 04	 add	 esp, 4
  0045f	8b 00		 mov	 eax, DWORD PTR [eax]
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00467	83 c4 04	 add	 esp, 4
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 320  :                                                 _Lrotate(_Parent(_X));

  00470	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00473	51		 push	 ecx
  00474	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00479	83 c4 04	 add	 esp, 4
  0047c	8b 10		 mov	 edx, DWORD PTR [eax]
  0047e	52		 push	 edx
  0047f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lrotate

; 321  :                                                 _W = _Right(_Parent(_X)); }

  00487	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00490	83 c4 04	 add	 esp, 4
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	51		 push	 ecx
  00496	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0049b	83 c4 04	 add	 esp, 4
  0049e	8b 10		 mov	 edx, DWORD PTR [eax]
  004a0	89 55 e0	 mov	 DWORD PTR __W$158990[ebp], edx
$L158991:

; 323  :                                                 && _Color(_Right(_W)) == _Black)

  004a3	8b 45 e0	 mov	 eax, DWORD PTR __W$158990[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  004ac	83 c4 04	 add	 esp, 4
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  004b7	83 c4 04	 add	 esp, 4
  004ba	83 38 01	 cmp	 DWORD PTR [eax], 1
  004bd	75 44		 jne	 SHORT $L158992
  004bf	8b 55 e0	 mov	 edx, DWORD PTR __W$158990[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  004c8	83 c4 04	 add	 esp, 4
  004cb	8b 00		 mov	 eax, DWORD PTR [eax]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  004d3	83 c4 04	 add	 esp, 4
  004d6	83 38 01	 cmp	 DWORD PTR [eax], 1
  004d9	75 28		 jne	 SHORT $L158992

; 324  :                                                 {_Color(_W) = _Red;

  004db	8b 4d e0	 mov	 ecx, DWORD PTR __W$158990[ebp]
  004de	51		 push	 ecx
  004df	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  004e4	83 c4 04	 add	 esp, 4
  004e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  :                                                 _X = _Parent(_X); }

  004ed	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  004f0	52		 push	 edx
  004f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  004f6	83 c4 04	 add	 esp, 4
  004f9	8b 00		 mov	 eax, DWORD PTR [eax]
  004fb	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 326  :                                         else

  004fe	e9 f2 00 00 00	 jmp	 $L158993
$L158992:

; 327  :                                                 {if (_Color(_Right(_W)) == _Black)

  00503	8b 4d e0	 mov	 ecx, DWORD PTR __W$158990[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0050c	83 c4 04	 add	 esp, 4
  0050f	8b 10		 mov	 edx, DWORD PTR [eax]
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00517	83 c4 04	 add	 esp, 4
  0051a	83 38 01	 cmp	 DWORD PTR [eax], 1
  0051d	75 57		 jne	 SHORT $L158994

; 328  :                                                         {_Color(_Left(_W)) = _Black;

  0051f	8b 45 e0	 mov	 eax, DWORD PTR __W$158990[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00528	83 c4 04	 add	 esp, 4
  0052b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052d	51		 push	 ecx
  0052e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00533	83 c4 04	 add	 esp, 4
  00536	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 329  :                                                         _Color(_W) = _Red;

  0053c	8b 55 e0	 mov	 edx, DWORD PTR __W$158990[ebp]
  0053f	52		 push	 edx
  00540	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00545	83 c4 04	 add	 esp, 4
  00548	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 330  :                                                         _Rrotate(_W);

  0054e	8b 45 e0	 mov	 eax, DWORD PTR __W$158990[ebp]
  00551	50		 push	 eax
  00552	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rrotate

; 331  :                                                         _W = _Right(_Parent(_X)); }

  0055a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0055d	51		 push	 ecx
  0055e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00563	83 c4 04	 add	 esp, 4
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	52		 push	 edx
  00569	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0056e	83 c4 04	 add	 esp, 4
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	89 45 e0	 mov	 DWORD PTR __W$158990[ebp], eax
$L158994:

; 332  :                                                 _Color(_W) = _Color(_Parent(_X));

  00576	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0057f	83 c4 04	 add	 esp, 4
  00582	8b 10		 mov	 edx, DWORD PTR [eax]
  00584	52		 push	 edx
  00585	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  0058a	83 c4 04	 add	 esp, 4
  0058d	8b f0		 mov	 esi, eax
  0058f	8b 45 e0	 mov	 eax, DWORD PTR __W$158990[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0059d	89 08		 mov	 DWORD PTR [eax], ecx

; 333  :                                                 _Color(_Parent(_X)) = _Black;

  0059f	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005a2	52		 push	 edx
  005a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  005a8	83 c4 04	 add	 esp, 4
  005ab	8b 00		 mov	 eax, DWORD PTR [eax]
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  005b3	83 c4 04	 add	 esp, 4
  005b6	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 334  :                                                 _Color(_Right(_W)) = _Black;

  005bc	8b 4d e0	 mov	 ecx, DWORD PTR __W$158990[ebp]
  005bf	51		 push	 ecx
  005c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  005c5	83 c4 04	 add	 esp, 4
  005c8	8b 10		 mov	 edx, DWORD PTR [eax]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 335  :                                                 _Lrotate(_Parent(_X));

  005d9	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	51		 push	 ecx
  005e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lrotate

; 336  :                                                 break; }}

  005f0	e9 e8 01 00 00	 jmp	 $L158988
$L158993:

; 337  :                                 else

  005f5	e9 de 01 00 00	 jmp	 $L158999
$L158989:

; 338  :                                         {_Nodeptr _W = _Left(_Parent(_X));

  005fa	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005fd	52		 push	 edx
  005fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00603	83 c4 04	 add	 esp, 4
  00606	8b 00		 mov	 eax, DWORD PTR [eax]
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  0060e	83 c4 04	 add	 esp, 4
  00611	8b 08		 mov	 ecx, DWORD PTR [eax]
  00613	89 4d dc	 mov	 DWORD PTR __W$158996[ebp], ecx

; 339  :                                         if (_Color(_W) == _Red)

  00616	8b 55 dc	 mov	 edx, DWORD PTR __W$158996[ebp]
  00619	52		 push	 edx
  0061a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  0061f	83 c4 04	 add	 esp, 4
  00622	83 38 00	 cmp	 DWORD PTR [eax], 0
  00625	75 62		 jne	 SHORT $L158997

; 340  :                                                 {_Color(_W) = _Black;

  00627	8b 45 dc	 mov	 eax, DWORD PTR __W$158996[ebp]
  0062a	50		 push	 eax
  0062b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00630	83 c4 04	 add	 esp, 4
  00633	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 341  :                                                 _Color(_Parent(_X)) = _Red;

  00639	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0063c	51		 push	 ecx
  0063d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00642	83 c4 04	 add	 esp, 4
  00645	8b 10		 mov	 edx, DWORD PTR [eax]
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  0064d	83 c4 04	 add	 esp, 4
  00650	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 342  :                                                 _Rrotate(_Parent(_X));

  00656	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00659	50		 push	 eax
  0065a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0065f	83 c4 04	 add	 esp, 4
  00662	8b 08		 mov	 ecx, DWORD PTR [eax]
  00664	51		 push	 ecx
  00665	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rrotate

; 343  :                                                 _W = _Left(_Parent(_X)); }

  0066d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00670	52		 push	 edx
  00671	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00676	83 c4 04	 add	 esp, 4
  00679	8b 00		 mov	 eax, DWORD PTR [eax]
  0067b	50		 push	 eax
  0067c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00681	83 c4 04	 add	 esp, 4
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 4d dc	 mov	 DWORD PTR __W$158996[ebp], ecx
$L158997:

; 345  :                                                 && _Color(_Left(_W)) == _Black)

  00689	8b 55 dc	 mov	 edx, DWORD PTR __W$158996[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00692	83 c4 04	 add	 esp, 4
  00695	8b 00		 mov	 eax, DWORD PTR [eax]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  0069d	83 c4 04	 add	 esp, 4
  006a0	83 38 01	 cmp	 DWORD PTR [eax], 1
  006a3	75 44		 jne	 SHORT $L158998
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR __W$158996[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  006ae	83 c4 04	 add	 esp, 4
  006b1	8b 10		 mov	 edx, DWORD PTR [eax]
  006b3	52		 push	 edx
  006b4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  006b9	83 c4 04	 add	 esp, 4
  006bc	83 38 01	 cmp	 DWORD PTR [eax], 1
  006bf	75 28		 jne	 SHORT $L158998

; 346  :                                                 {_Color(_W) = _Red;

  006c1	8b 45 dc	 mov	 eax, DWORD PTR __W$158996[ebp]
  006c4	50		 push	 eax
  006c5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  006ca	83 c4 04	 add	 esp, 4
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 347  :                                                 _X = _Parent(_X); }

  006d3	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  006d6	51		 push	 ecx
  006d7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  006dc	83 c4 04	 add	 esp, 4
  006df	8b 10		 mov	 edx, DWORD PTR [eax]
  006e1	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 348  :                                         else

  006e4	e9 ef 00 00 00	 jmp	 $L158999
$L158998:

; 349  :                                                 {if (_Color(_Left(_W)) == _Black)

  006e9	8b 45 dc	 mov	 eax, DWORD PTR __W$158996[ebp]
  006ec	50		 push	 eax
  006ed	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  006f2	83 c4 04	 add	 esp, 4
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  006fd	83 c4 04	 add	 esp, 4
  00700	83 38 01	 cmp	 DWORD PTR [eax], 1
  00703	75 57		 jne	 SHORT $L159000

; 350  :                                                         {_Color(_Right(_W)) = _Black;

  00705	8b 55 dc	 mov	 edx, DWORD PTR __W$158996[ebp]
  00708	52		 push	 edx
  00709	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0070e	83 c4 04	 add	 esp, 4
  00711	8b 00		 mov	 eax, DWORD PTR [eax]
  00713	50		 push	 eax
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 351  :                                                         _Color(_W) = _Red;

  00722	8b 4d dc	 mov	 ecx, DWORD PTR __W$158996[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  0072b	83 c4 04	 add	 esp, 4
  0072e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 352  :                                                         _Lrotate(_W);

  00734	8b 55 dc	 mov	 edx, DWORD PTR __W$158996[ebp]
  00737	52		 push	 edx
  00738	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lrotate

; 353  :                                                         _W = _Left(_Parent(_X)); }

  00740	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00749	83 c4 04	 add	 esp, 4
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	51		 push	 ecx
  0074f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00754	83 c4 04	 add	 esp, 4
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	89 55 dc	 mov	 DWORD PTR __W$158996[ebp], edx
$L159000:

; 354  :                                                 _Color(_W) = _Color(_Parent(_X));

  0075c	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00765	83 c4 04	 add	 esp, 4
  00768	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00770	83 c4 04	 add	 esp, 4
  00773	8b f0		 mov	 esi, eax
  00775	8b 55 dc	 mov	 edx, DWORD PTR __W$158996[ebp]
  00778	52		 push	 edx
  00779	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  0077e	83 c4 04	 add	 esp, 4
  00781	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00783	89 08		 mov	 DWORD PTR [eax], ecx

; 355  :                                                 _Color(_Parent(_X)) = _Black;

  00785	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0078e	83 c4 04	 add	 esp, 4
  00791	8b 00		 mov	 eax, DWORD PTR [eax]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00799	83 c4 04	 add	 esp, 4
  0079c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 356  :                                                 _Color(_Left(_W)) = _Black;

  007a2	8b 4d dc	 mov	 ecx, DWORD PTR __W$158996[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  007ab	83 c4 04	 add	 esp, 4
  007ae	8b 10		 mov	 edx, DWORD PTR [eax]
  007b0	52		 push	 edx
  007b1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  007b6	83 c4 04	 add	 esp, 4
  007b9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 357  :                                                 _Rrotate(_Parent(_X));

  007bf	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  007c8	83 c4 04	 add	 esp, 4
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	51		 push	 ecx
  007ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rrotate

; 358  :                                                 break; }}

  007d6	eb 05		 jmp	 SHORT $L158988
$L158999:
  007d8	e9 ed fb ff ff	 jmp	 $L158987
$L158988:

; 359  :                         _Color(_X) = _Black; }

  007dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  007e0	52		 push	 edx
  007e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  007e6	83 c4 04	 add	 esp, 4
  007e9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L158985:

; 360  :                 _Destval(&_Value(_Y));

  007ef	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Value
  007f8	83 c4 04	 add	 esp, 4
  007fb	50		 push	 eax
  007fc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Destval

; 361  :                 _Freenode(_Y);

  00804	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00807	51		 push	 ecx
  00808	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Freenode

; 362  :                 --_Size;

  00810	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00813	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00816	83 e8 01	 sub	 eax, 1
  00819	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 363  :                 return (_P); }

  0081f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00822	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00825	89 02		 mov	 DWORD PTR [edx], eax
  00827	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0082e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00831	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00837	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0083a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0083d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00844	5e		 pop	 esi
  00845	8b e5		 mov	 esp, ebp
  00847	5d		 pop	 ebp
  00848	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163724:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163727:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163726
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::erase
PUBLIC	?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::lower_bound
PUBLIC	?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::upper_bound
PUBLIC	??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator>
;	COMDAT ?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@2@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -20
__Kv$ = 12
$T163732 = -8
$T163733 = -12
$T163734 = -16
?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@2@ABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::equal_range, COMDAT

; 410  :                 {return (_Pairii(lower_bound(_Kv), upper_bound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f4	 lea	 ecx, DWORD PTR $T163733[ebp]
  00010	51		 push	 ecx
  00011	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::upper_bound
  00019	50		 push	 eax
  0001a	8b 55 0c	 mov	 edx, DWORD PTR __Kv$[ebp]
  0001d	52		 push	 edx
  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T163734[ebp]
  00021	50		 push	 eax
  00022	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::lower_bound
  0002a	50		 push	 eax
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR $T163732[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator>
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	89 08		 mov	 DWORD PTR [eax], ecx
  0003d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00040	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?equal_range@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@2@ABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::equal_range
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163738 DD	019930520H
	DD	01H
	DD	FLAT:$T163740
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163740 DD	0ffffffffH
	DD	FLAT:$L163736
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
__$EHRec$ = -12
?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Erase, COMDAT

; 449  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163739
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 450  :                 for (_Nodeptr _Y = _X; _Y != _Nil; _X = _Y)

  0002e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax
  00034	eb 06		 jmp	 SHORT $L159015
$L159016:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00039	89 4d 08	 mov	 DWORD PTR __X$[ebp], ecx
$L159015:
  0003c	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  0003f	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00045	74 4b		 je	 SHORT $L159017

; 451  :                         {_Erase(_Right(_Y));

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Erase

; 452  :                         _Y = _Left(_Y);

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax

; 453  :                         _Destval(&_Value(_X));

  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Value
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Destval

; 454  :                         _Freenode(_X); }}

  00084	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00087	52		 push	 edx
  00088	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Freenode
  00090	eb a4		 jmp	 SHORT $L159016
$L159017:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163736:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163739:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163738
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Erase@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Erase
PUBLIC	?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Buynode
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163746 DD	019930520H
	DD	01H
	DD	FLAT:$T163748
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163748 DD	0ffffffffH
	DD	FLAT:$L163744
xdata$x	ENDS
;	COMDAT ?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -20
__Lk$ = -16
__$EHRec$ = -12
?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXXZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Init, COMDAT

; 456  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163747
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :                 if (_Nil == 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A, 0 ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00035	75 3a		 jne	 SHORT $L159021

; 458  :                         {_Nil = _Buynode(0, _Black);

  00037	6a 01		 push	 1
  00039	6a 00		 push	 0
  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Buynode
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A, eax ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil

; 459  :                         _Left(_Nil) = 0, _Right(_Nil) = 0; }

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00068	83 c4 04	 add	 esp, 4
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L159021:

; 460  :                 ++_Nilrefs;

  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1IA ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nilrefs
  00077	83 c2 01	 add	 edx, 1
  0007a	89 15 00 00 00
	00		 mov	 DWORD PTR ?_Nilrefs@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1IA, edx ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nilrefs

; 461  :                 _Head = _Buynode(_Nil, _Red), _Size = 0;

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Buynode
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00096	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00099	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 462  :                 _Lmost() = _Head, _Rmost() = _Head; }

  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	89 10		 mov	 DWORD PTR [eax], edx
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost
  000b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	89 10		 mov	 DWORD PTR [eax], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163744:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163747:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163746
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Init@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXXZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Init
;	COMDAT ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost, COMDAT

; 524  :                 {return (_Left(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost, COMDAT

; 553  :                 {return (_Right(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root, COMDAT

; 557  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::iterator, COMDAT

; 124  :                 iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator++
;	COMDAT ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator++, COMDAT

; 134  :                         {iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 135  :                         ++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator++

; 136  :                         return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator!=, COMDAT

; 147  :                         {return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator!=
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@AB_N@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@AB_N@Z ENDP ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,bool>
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@AB_N@Z ENDP ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,bool>
_TEXT	ENDS
;	COMDAT ??R?$less@H@std@@QBE_NABH0@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__Y$ = 12
??R?$less@H@std@@QBE_NABH0@Z PROC NEAR			; std::less<int>::operator(), COMDAT

; 86   : 		{return (_X < _Y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Y$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 9c c0	 setl	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
??R?$less@H@std@@QBE_NABH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsg@@@2@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??R_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsg@@@2@@Z PROC NEAR ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn::operator(), COMDAT

; 26   : 		{return (_X.first); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??R_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ENDP ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn::operator()
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color, COMDAT

; 36   :                 {return ((_Rbref)(*_P)._Color); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 14	 add	 eax, 20			; 00000014H
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAABHPAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
$T163763 = -4
?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAABHPAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Key, COMDAT

; 38   :                 {return (_Kfn()(_Value(_P))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsg@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Value
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T163763[ebp]
  00014	e8 00 00 00 00	 call	 ??R_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn::operator()
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAABHPAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Key
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left, COMDAT

; 40   :                 {return ((_Nodepref)(*_P)._Left); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent, COMDAT

; 42   :                 {return ((_Nodepref)(*_P)._Parent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right, COMDAT

; 44   :                 {return ((_Nodepref)(*_P)._Right); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lbound
;	COMDAT ?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
$T163768 = -4
?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::lower_bound, COMDAT

; 402  :                 {return (iterator(_Lbound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lbound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T163768[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Ubound
;	COMDAT ?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
$T163770 = -4
?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::upper_bound, COMDAT

; 406  :                 {return (iterator(_Ubound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Ubound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T163770[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE?AViterator@12@ABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@ABU32@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Consval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163776 DD	019930520H
	DD	01H
	DD	FLAT:$T163778
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163778 DD	0ffffffffH
	DD	FLAT:$L163774
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -32
__Lk$ = -20
__Z$ = -16
__X$ = 12
__Y$ = 16
__V$ = 20
$T163772 = -24
$T163773 = -28
__$EHRec$ = -12
?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Insert, COMDAT

; 464  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163777
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	56		 push	 esi
  0001c	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 465  :                 _Nodeptr _Z = _Buynode(_Y, _Red);

  0002f	6a 00		 push	 0
  00031	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  00034	50		 push	 eax
  00035	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Buynode
  0003d	89 45 f0	 mov	 DWORD PTR __Z$[ebp], eax

; 466  :                 _Left(_Z) = _Nil, _Right(_Z) = _Nil;

  00040	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00052	89 10		 mov	 DWORD PTR [eax], edx
  00054	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00066	89 08		 mov	 DWORD PTR [eax], ecx

; 467  :                 _Consval(&_Value(_Z), _V);

  00068	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsg@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Value
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@ABU32@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Consval

; 468  :                 ++_Size;

  00081	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00087	83 c2 01	 add	 edx, 1
  0008a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 470  :                         || key_compare(_Kfn()(_V), _Key(_Y)))

  00090	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00096	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00099	74 39		 je	 SHORT $L159143
  0009b	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0009e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  000a4	75 2e		 jne	 SHORT $L159143
  000a6	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Key
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  000b6	52		 push	 edx
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR $T163772[ebp]
  000ba	e8 00 00 00 00	 call	 ??R_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ; std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn::operator()
  000bf	50		 push	 eax
  000c0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 01	 add	 ecx, 1
  000c6	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  000cb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000d0	85 c0		 test	 eax, eax
  000d2	74 56		 je	 SHORT $L159142
$L159143:

; 471  :                         {_Left(_Y) = _Z;

  000d4	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000e3	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :                         if (_Y == _Head)

  000e5	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000eb	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000ee	75 1c		 jne	 SHORT $L159144

; 473  :                                 {_Root() = _Z;

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx

; 474  :                                 _Rmost() = _Z; }

  000fd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost
  00105	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00108	89 10		 mov	 DWORD PTR [eax], edx

; 475  :                         else if (_Y == _Lmost())

  0010a	eb 1c		 jmp	 SHORT $L159146
$L159144:
  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost
  00114	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00117	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00119	75 0d		 jne	 SHORT $L159146

; 476  :                                 _Lmost() = _Z; }

  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lmost
  00123	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00126	89 10		 mov	 DWORD PTR [eax], edx
$L159146:

; 477  :                 else

  00128	eb 2d		 jmp	 SHORT $L159148
$L159142:

; 478  :                         {_Right(_Y) = _Z;

  0012a	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00139	89 08		 mov	 DWORD PTR [eax], ecx

; 479  :                         if (_Y == _Rmost())

  0013b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost
  00143	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00146	3b 10		 cmp	 edx, DWORD PTR [eax]
  00148	75 0d		 jne	 SHORT $L159148

; 480  :                                 _Rmost() = _Z; }

  0014a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rmost
  00152	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00155	89 08		 mov	 DWORD PTR [eax], ecx
$L159148:

; 481  :                 for (_X = _Z; _X != _Root()

  00157	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  0015a	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx
$L159150:

; 482  :                         && _Color(_Parent(_X)) == _Red; )

  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00168	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016a	0f 84 08 03 00
	00		 je	 $L159151
  00170	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00179	83 c4 04	 add	 esp, 4
  0017c	8b 00		 mov	 eax, DWORD PTR [eax]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00184	83 c4 04	 add	 esp, 4
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	0f 85 e8 02 00
	00		 jne	 $L159151

; 483  :                         if (_Parent(_X) == _Left(_Parent(_Parent(_X))))

  00190	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00199	83 c4 04	 add	 esp, 4
  0019c	8b f0		 mov	 esi, eax
  0019e	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  001a7	83 c4 04	 add	 esp, 4
  001aa	8b 00		 mov	 eax, DWORD PTR [eax]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  001b2	83 c4 04	 add	 esp, 4
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  001bd	83 c4 04	 add	 esp, 4
  001c0	8b 16		 mov	 edx, DWORD PTR [esi]
  001c2	3b 10		 cmp	 edx, DWORD PTR [eax]
  001c4	0f 85 57 01 00
	00		 jne	 $L159152

; 484  :                                 {_Y = _Right(_Parent(_Parent(_X)));

  001ca	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  001d3	83 c4 04	 add	 esp, 4
  001d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  001de	83 c4 04	 add	 esp, 4
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  001e9	83 c4 04	 add	 esp, 4
  001ec	8b 00		 mov	 eax, DWORD PTR [eax]
  001ee	89 45 10	 mov	 DWORD PTR __Y$[ebp], eax

; 485  :                                 if (_Color(_Y) == _Red)

  001f1	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  001fa	83 c4 04	 add	 esp, 4
  001fd	83 38 00	 cmp	 DWORD PTR [eax], 0
  00200	75 78		 jne	 SHORT $L159153

; 486  :                                         {_Color(_Parent(_X)) = _Black;

  00202	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0020b	83 c4 04	 add	 esp, 4
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00216	83 c4 04	 add	 esp, 4
  00219	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 487  :                                         _Color(_Y) = _Black;

  0021f	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00228	83 c4 04	 add	 esp, 4
  0022b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 488  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00231	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0023a	83 c4 04	 add	 esp, 4
  0023d	8b 00		 mov	 eax, DWORD PTR [eax]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00245	83 c4 04	 add	 esp, 4
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00250	83 c4 04	 add	 esp, 4
  00253	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 489  :                                         _X = _Parent(_Parent(_X)); }

  00259	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00262	83 c4 04	 add	 esp, 4
  00265	8b 00		 mov	 eax, DWORD PTR [eax]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0026d	83 c4 04	 add	 esp, 4
  00270	8b 08		 mov	 ecx, DWORD PTR [eax]
  00272	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 490  :                                 else

  00275	e9 a2 00 00 00	 jmp	 $L159154
$L159153:

; 491  :                                         {if (_X == _Right(_Parent(_X)))

  0027a	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 00		 mov	 eax, DWORD PTR [eax]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0028e	83 c4 04	 add	 esp, 4
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00294	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00296	75 1d		 jne	 SHORT $L159155

; 492  :                                                 {_X = _Parent(_X);

  00298	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0029b	52		 push	 edx
  0029c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 00		 mov	 eax, DWORD PTR [eax]
  002a6	89 45 0c	 mov	 DWORD PTR __X$[ebp], eax

; 493  :                                                 _Lrotate(_X); }

  002a9	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002ac	51		 push	 ecx
  002ad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lrotate
$L159155:

; 494  :                                         _Color(_Parent(_X)) = _Black;

  002b5	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  002be	83 c4 04	 add	 esp, 4
  002c1	8b 00		 mov	 eax, DWORD PTR [eax]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  002c9	83 c4 04	 add	 esp, 4
  002cc	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 495  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  002d2	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  002db	83 c4 04	 add	 esp, 4
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  002e6	83 c4 04	 add	 esp, 4
  002e9	8b 00		 mov	 eax, DWORD PTR [eax]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  002f1	83 c4 04	 add	 esp, 4
  002f4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 496  :                                         _Rrotate(_Parent(_Parent(_X))); }}

  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00303	83 c4 04	 add	 esp, 4
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0030e	83 c4 04	 add	 esp, 4
  00311	8b 00		 mov	 eax, DWORD PTR [eax]
  00313	50		 push	 eax
  00314	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rrotate
$L159154:

; 497  :                         else

  0031c	e9 52 01 00 00	 jmp	 $L159158
$L159152:

; 498  :                                 {_Y = _Left(_Parent(_Parent(_X)));

  00321	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0032a	83 c4 04	 add	 esp, 4
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00340	83 c4 04	 add	 esp, 4
  00343	8b 08		 mov	 ecx, DWORD PTR [eax]
  00345	89 4d 10	 mov	 DWORD PTR __Y$[ebp], ecx

; 499  :                                 if (_Color(_Y) == _Red)

  00348	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  0034b	52		 push	 edx
  0034c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00351	83 c4 04	 add	 esp, 4
  00354	83 38 00	 cmp	 DWORD PTR [eax], 0
  00357	75 78		 jne	 SHORT $L159157

; 500  :                                         {_Color(_Parent(_X)) = _Black;

  00359	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00362	83 c4 04	 add	 esp, 4
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  0036d	83 c4 04	 add	 esp, 4
  00370	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 501  :                                         _Color(_Y) = _Black;

  00376	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00379	52		 push	 edx
  0037a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  0037f	83 c4 04	 add	 esp, 4
  00382	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 502  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00388	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00391	83 c4 04	 add	 esp, 4
  00394	8b 08		 mov	 ecx, DWORD PTR [eax]
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0039c	83 c4 04	 add	 esp, 4
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  003a7	83 c4 04	 add	 esp, 4
  003aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 503  :                                         _X = _Parent(_Parent(_X)); }

  003b0	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	51		 push	 ecx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 10		 mov	 edx, DWORD PTR [eax]
  003c9	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx

; 504  :                                 else

  003cc	e9 a2 00 00 00	 jmp	 $L159158
$L159157:

; 505  :                                         {if (_X == _Left(_Parent(_X)))

  003d1	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  003da	83 c4 04	 add	 esp, 4
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	51		 push	 ecx
  003e0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  003e5	83 c4 04	 add	 esp, 4
  003e8	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  003eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ed	75 1d		 jne	 SHORT $L159159

; 506  :                                                 {_X = _Parent(_X);

  003ef	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  003f8	83 c4 04	 add	 esp, 4
  003fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fd	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 507  :                                                 _Rrotate(_X); }

  00400	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00403	52		 push	 edx
  00404	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00407	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rrotate
$L159159:

; 508  :                                         _Color(_Parent(_X)) = _Black;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00415	83 c4 04	 add	 esp, 4
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00420	83 c4 04	 add	 esp, 4
  00423	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 509  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00429	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00432	83 c4 04	 add	 esp, 4
  00435	8b 00		 mov	 eax, DWORD PTR [eax]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0043d	83 c4 04	 add	 esp, 4
  00440	8b 08		 mov	 ecx, DWORD PTR [eax]
  00442	51		 push	 ecx
  00443	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00448	83 c4 04	 add	 esp, 4
  0044b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 510  :                                         _Lrotate(_Parent(_Parent(_X))); }}

  00451	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0045a	83 c4 04	 add	 esp, 4
  0045d	8b 00		 mov	 eax, DWORD PTR [eax]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00465	83 c4 04	 add	 esp, 4
  00468	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046a	51		 push	 ecx
  0046b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lrotate
$L159158:
  00473	e9 e5 fc ff ff	 jmp	 $L159150
$L159151:

; 511  :                 _Color(_Root()) = _Black;

  00478	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  00480	8b 10		 mov	 edx, DWORD PTR [eax]
  00482	52		 push	 edx
  00483	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00488	83 c4 04	 add	 esp, 4
  0048b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 512  :                 return (iterator(_Z)); }

  00491	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e4	 lea	 ecx, DWORD PTR $T163773[ebp]
  00498	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::iterator
  0049d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  004a2	89 0a		 mov	 DWORD PTR [edx], ecx
  004a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ab	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  004b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	5e		 pop	 esi
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163774:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163777:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163776
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsg@@@2@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Insert
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163784 DD	019930520H
	DD	01H
	DD	FLAT:$T163786
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163786 DD	0ffffffffH
	DD	FLAT:$L163782
xdata$x	ENDS
;	COMDAT ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
__$EHRec$ = -12
?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lrotate, COMDAT

; 528  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163785
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 529  :                 _Nodeptr _Y = _Right(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 530  :                 _Right(_X) = _Left(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 531  :                 if (_Left(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00072	74 1c		 je	 SHORT $L159165

; 532  :                         _Parent(_Left(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L159165:

; 533  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 534  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L159166

; 535  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 536  :                 else if (_X == _Left(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L159169
$L159166:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L159168

; 537  :                         _Left(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 538  :                 else

  00106	eb 1c		 jmp	 SHORT $L159169
$L159168:

; 539  :                         _Right(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L159169:

; 540  :                 _Left(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163782:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163785:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163784
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lrotate
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163793 DD	019930520H
	DD	01H
	DD	FLAT:$T163795
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163795 DD	0ffffffffH
	DD	FLAT:$L163791
xdata$x	ENDS
;	COMDAT ?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__Lk$ = -16
__P$ = 8
$T163790 = -20
__$EHRec$ = -12
?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Max, COMDAT

; 543  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163794
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L159173:

; 544  :                 while (_Right(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  0003f	74 13		 je	 SHORT $L159174

; 545  :                         _P = _Right(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L159173
$L159174:

; 546  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T163790[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T163790[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163791:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163794:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163793
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Max
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163802 DD	019930520H
	DD	01H
	DD	FLAT:$T163804
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163804 DD	0ffffffffH
	DD	FLAT:$L163800
xdata$x	ENDS
;	COMDAT ?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__Lk$ = -16
__P$ = 8
$T163799 = -20
__$EHRec$ = -12
?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Min, COMDAT

; 548  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163803
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L159179:

; 549  :                 while (_Left(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  0003f	74 13		 je	 SHORT $L159180

; 550  :                         _P = _Left(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L159179
$L159180:

; 551  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T163799[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T163799[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163800:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163803:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163802
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Min
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163810 DD	019930520H
	DD	01H
	DD	FLAT:$T163812
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163812 DD	0ffffffffH
	DD	FLAT:$L163808
xdata$x	ENDS
;	COMDAT ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
__$EHRec$ = -12
?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rrotate, COMDAT

; 561  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163811
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :                 _Nodeptr _Y = _Left(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 563  :                 _Left(_X) = _Right(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 564  :                 if (_Right(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00072	74 1c		 je	 SHORT $L159186

; 565  :                         _Parent(_Right(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L159186:

; 566  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 567  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L159187

; 568  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 569  :                 else if (_X == _Right(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L159190
$L159187:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L159189

; 570  :                         _Right(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 571  :                 else

  00106	eb 1c		 jmp	 SHORT $L159190
$L159189:

; 572  :                         _Left(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L159190:

; 573  :                 _Right(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 574  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163808:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163811:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163810
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Rrotate
;	COMDAT ?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT
_this$ = -8
__S$ = -4
__Parg$ = 8
__Carg$ = 12
?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Buynode, COMDAT

; 586  :                 {_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  :                         1 * sizeof (_Node));

  00009	6a 18		 push	 24			; 00000018H
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCMailMsg@@@std@@QAEPADI@Z ; std::allocator<CMailMsg *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 588  :                 _Parent(_S) = _Parg;

  00016	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 589  :                 _Color(_S) = _Carg;

  00027	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00030	83 c4 04	 add	 esp, 4
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Carg$[ebp]
  00036	89 08		 mov	 DWORD PTR [eax], ecx

; 590  :                 return (_S); }

  00038	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@@Z ; std::_Destroy
;	COMDAT ?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Destval, COMDAT

; 594  :                 {_Destroy(&*_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Destval
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::const_iterator, COMDAT

; 65   :                 const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::const_iterator
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Mynode, COMDAT

; 114  :                         {return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBEPAU_Node@23@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Inc
;	COMDAT ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator++, COMDAT

; 131  :                         {_Inc();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Inc

; 132  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Dec
;	COMDAT ??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator--, COMDAT

; 138  :                         {_Dec();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Dec

; 139  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator--
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator==, COMDAT

; 145  :                         {return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator==
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??R_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z PROC NEAR ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn::operator(), COMDAT

; 26   : 		{return (_X.first); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??R_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ENDP ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn::operator()
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color, COMDAT

; 36   :                 {return ((_Rbref)(*_P)._Color); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 14	 add	 eax, 20			; 00000014H
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAABHPAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
$T163825 = -4
?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAABHPAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Key, COMDAT

; 38   :                 {return (_Kfn()(_Value(_P))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Value
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T163825[ebp]
  00014	e8 00 00 00 00	 call	 ??R_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn::operator()
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAABHPAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Key
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left, COMDAT

; 40   :                 {return ((_Nodepref)(*_P)._Left); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent, COMDAT

; 42   :                 {return ((_Nodepref)(*_P)._Parent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right, COMDAT

; 44   :                 {return ((_Nodepref)(*_P)._Right); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lbound
;	COMDAT ?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
$T163830 = -4
?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::lower_bound, COMDAT

; 402  :                 {return (iterator(_Lbound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lbound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T163830[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?lower_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Ubound
;	COMDAT ?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
$T163832 = -4
?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::upper_bound, COMDAT

; 406  :                 {return (iterator(_Ubound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Ubound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T163832[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?upper_bound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE?AViterator@12@ABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@ABU32@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Consval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163838 DD	019930520H
	DD	01H
	DD	FLAT:$T163840
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163840 DD	0ffffffffH
	DD	FLAT:$L163836
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -32
__Lk$ = -20
__Z$ = -16
__X$ = 12
__Y$ = 16
__V$ = 20
$T163834 = -24
$T163835 = -28
__$EHRec$ = -12
?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Insert, COMDAT

; 464  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163839
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	56		 push	 esi
  0001c	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 465  :                 _Nodeptr _Z = _Buynode(_Y, _Red);

  0002f	6a 00		 push	 0
  00031	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  00034	50		 push	 eax
  00035	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Buynode
  0003d	89 45 f0	 mov	 DWORD PTR __Z$[ebp], eax

; 466  :                 _Left(_Z) = _Nil, _Right(_Z) = _Nil;

  00040	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00052	89 10		 mov	 DWORD PTR [eax], edx
  00054	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00066	89 08		 mov	 DWORD PTR [eax], ecx

; 467  :                 _Consval(&_Value(_Z), _V);

  00068	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?_Value@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAU?$pair@$$CBHPAVCMailMsgWnd@@@2@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Value
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@ABU32@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Consval

; 468  :                 ++_Size;

  00081	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00087	83 c2 01	 add	 edx, 1
  0008a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 470  :                         || key_compare(_Kfn()(_V), _Key(_Y)))

  00090	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00096	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00099	74 39		 je	 SHORT $L159239
  0009b	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0009e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  000a4	75 2e		 jne	 SHORT $L159239
  000a6	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Key
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  000b6	52		 push	 edx
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR $T163834[ebp]
  000ba	e8 00 00 00 00	 call	 ??R_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@std@@QBEABHABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ; std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn::operator()
  000bf	50		 push	 eax
  000c0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 01	 add	 ecx, 1
  000c6	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  000cb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000d0	85 c0		 test	 eax, eax
  000d2	74 56		 je	 SHORT $L159238
$L159239:

; 471  :                         {_Left(_Y) = _Z;

  000d4	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000e3	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :                         if (_Y == _Head)

  000e5	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000eb	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000ee	75 1c		 jne	 SHORT $L159240

; 473  :                                 {_Root() = _Z;

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx

; 474  :                                 _Rmost() = _Z; }

  000fd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost
  00105	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00108	89 10		 mov	 DWORD PTR [eax], edx

; 475  :                         else if (_Y == _Lmost())

  0010a	eb 1c		 jmp	 SHORT $L159242
$L159240:
  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost
  00114	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00117	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00119	75 0d		 jne	 SHORT $L159242

; 476  :                                 _Lmost() = _Z; }

  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lmost
  00123	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00126	89 10		 mov	 DWORD PTR [eax], edx
$L159242:

; 477  :                 else

  00128	eb 2d		 jmp	 SHORT $L159244
$L159238:

; 478  :                         {_Right(_Y) = _Z;

  0012a	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00139	89 08		 mov	 DWORD PTR [eax], ecx

; 479  :                         if (_Y == _Rmost())

  0013b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost
  00143	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00146	3b 10		 cmp	 edx, DWORD PTR [eax]
  00148	75 0d		 jne	 SHORT $L159244

; 480  :                                 _Rmost() = _Z; }

  0014a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rmost
  00152	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00155	89 08		 mov	 DWORD PTR [eax], ecx
$L159244:

; 481  :                 for (_X = _Z; _X != _Root()

  00157	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  0015a	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx
$L159246:

; 482  :                         && _Color(_Parent(_X)) == _Red; )

  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00168	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016a	0f 84 08 03 00
	00		 je	 $L159247
  00170	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00179	83 c4 04	 add	 esp, 4
  0017c	8b 00		 mov	 eax, DWORD PTR [eax]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00184	83 c4 04	 add	 esp, 4
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	0f 85 e8 02 00
	00		 jne	 $L159247

; 483  :                         if (_Parent(_X) == _Left(_Parent(_Parent(_X))))

  00190	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00199	83 c4 04	 add	 esp, 4
  0019c	8b f0		 mov	 esi, eax
  0019e	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  001a7	83 c4 04	 add	 esp, 4
  001aa	8b 00		 mov	 eax, DWORD PTR [eax]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  001b2	83 c4 04	 add	 esp, 4
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  001bd	83 c4 04	 add	 esp, 4
  001c0	8b 16		 mov	 edx, DWORD PTR [esi]
  001c2	3b 10		 cmp	 edx, DWORD PTR [eax]
  001c4	0f 85 57 01 00
	00		 jne	 $L159248

; 484  :                                 {_Y = _Right(_Parent(_Parent(_X)));

  001ca	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  001d3	83 c4 04	 add	 esp, 4
  001d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  001de	83 c4 04	 add	 esp, 4
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  001e9	83 c4 04	 add	 esp, 4
  001ec	8b 00		 mov	 eax, DWORD PTR [eax]
  001ee	89 45 10	 mov	 DWORD PTR __Y$[ebp], eax

; 485  :                                 if (_Color(_Y) == _Red)

  001f1	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  001fa	83 c4 04	 add	 esp, 4
  001fd	83 38 00	 cmp	 DWORD PTR [eax], 0
  00200	75 78		 jne	 SHORT $L159249

; 486  :                                         {_Color(_Parent(_X)) = _Black;

  00202	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0020b	83 c4 04	 add	 esp, 4
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00216	83 c4 04	 add	 esp, 4
  00219	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 487  :                                         _Color(_Y) = _Black;

  0021f	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00228	83 c4 04	 add	 esp, 4
  0022b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 488  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00231	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0023a	83 c4 04	 add	 esp, 4
  0023d	8b 00		 mov	 eax, DWORD PTR [eax]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00245	83 c4 04	 add	 esp, 4
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00250	83 c4 04	 add	 esp, 4
  00253	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 489  :                                         _X = _Parent(_Parent(_X)); }

  00259	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00262	83 c4 04	 add	 esp, 4
  00265	8b 00		 mov	 eax, DWORD PTR [eax]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0026d	83 c4 04	 add	 esp, 4
  00270	8b 08		 mov	 ecx, DWORD PTR [eax]
  00272	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 490  :                                 else

  00275	e9 a2 00 00 00	 jmp	 $L159250
$L159249:

; 491  :                                         {if (_X == _Right(_Parent(_X)))

  0027a	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 00		 mov	 eax, DWORD PTR [eax]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0028e	83 c4 04	 add	 esp, 4
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00294	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00296	75 1d		 jne	 SHORT $L159251

; 492  :                                                 {_X = _Parent(_X);

  00298	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0029b	52		 push	 edx
  0029c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 00		 mov	 eax, DWORD PTR [eax]
  002a6	89 45 0c	 mov	 DWORD PTR __X$[ebp], eax

; 493  :                                                 _Lrotate(_X); }

  002a9	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002ac	51		 push	 ecx
  002ad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lrotate
$L159251:

; 494  :                                         _Color(_Parent(_X)) = _Black;

  002b5	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  002be	83 c4 04	 add	 esp, 4
  002c1	8b 00		 mov	 eax, DWORD PTR [eax]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  002c9	83 c4 04	 add	 esp, 4
  002cc	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 495  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  002d2	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  002db	83 c4 04	 add	 esp, 4
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  002e6	83 c4 04	 add	 esp, 4
  002e9	8b 00		 mov	 eax, DWORD PTR [eax]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  002f1	83 c4 04	 add	 esp, 4
  002f4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 496  :                                         _Rrotate(_Parent(_Parent(_X))); }}

  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00303	83 c4 04	 add	 esp, 4
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0030e	83 c4 04	 add	 esp, 4
  00311	8b 00		 mov	 eax, DWORD PTR [eax]
  00313	50		 push	 eax
  00314	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rrotate
$L159250:

; 497  :                         else

  0031c	e9 52 01 00 00	 jmp	 $L159254
$L159248:

; 498  :                                 {_Y = _Left(_Parent(_Parent(_X)));

  00321	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0032a	83 c4 04	 add	 esp, 4
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00340	83 c4 04	 add	 esp, 4
  00343	8b 08		 mov	 ecx, DWORD PTR [eax]
  00345	89 4d 10	 mov	 DWORD PTR __Y$[ebp], ecx

; 499  :                                 if (_Color(_Y) == _Red)

  00348	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  0034b	52		 push	 edx
  0034c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00351	83 c4 04	 add	 esp, 4
  00354	83 38 00	 cmp	 DWORD PTR [eax], 0
  00357	75 78		 jne	 SHORT $L159253

; 500  :                                         {_Color(_Parent(_X)) = _Black;

  00359	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00362	83 c4 04	 add	 esp, 4
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  0036d	83 c4 04	 add	 esp, 4
  00370	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 501  :                                         _Color(_Y) = _Black;

  00376	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00379	52		 push	 edx
  0037a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  0037f	83 c4 04	 add	 esp, 4
  00382	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 502  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00388	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00391	83 c4 04	 add	 esp, 4
  00394	8b 08		 mov	 ecx, DWORD PTR [eax]
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0039c	83 c4 04	 add	 esp, 4
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  003a7	83 c4 04	 add	 esp, 4
  003aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 503  :                                         _X = _Parent(_Parent(_X)); }

  003b0	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	51		 push	 ecx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 10		 mov	 edx, DWORD PTR [eax]
  003c9	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx

; 504  :                                 else

  003cc	e9 a2 00 00 00	 jmp	 $L159254
$L159253:

; 505  :                                         {if (_X == _Left(_Parent(_X)))

  003d1	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  003da	83 c4 04	 add	 esp, 4
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	51		 push	 ecx
  003e0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  003e5	83 c4 04	 add	 esp, 4
  003e8	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  003eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ed	75 1d		 jne	 SHORT $L159255

; 506  :                                                 {_X = _Parent(_X);

  003ef	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  003f8	83 c4 04	 add	 esp, 4
  003fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fd	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 507  :                                                 _Rrotate(_X); }

  00400	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00403	52		 push	 edx
  00404	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00407	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rrotate
$L159255:

; 508  :                                         _Color(_Parent(_X)) = _Black;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00415	83 c4 04	 add	 esp, 4
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00420	83 c4 04	 add	 esp, 4
  00423	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 509  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00429	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00432	83 c4 04	 add	 esp, 4
  00435	8b 00		 mov	 eax, DWORD PTR [eax]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0043d	83 c4 04	 add	 esp, 4
  00440	8b 08		 mov	 ecx, DWORD PTR [eax]
  00442	51		 push	 ecx
  00443	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00448	83 c4 04	 add	 esp, 4
  0044b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 510  :                                         _Lrotate(_Parent(_Parent(_X))); }}

  00451	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0045a	83 c4 04	 add	 esp, 4
  0045d	8b 00		 mov	 eax, DWORD PTR [eax]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00465	83 c4 04	 add	 esp, 4
  00468	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046a	51		 push	 ecx
  0046b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lrotate
$L159254:
  00473	e9 e5 fc ff ff	 jmp	 $L159246
$L159247:

; 511  :                 _Color(_Root()) = _Black;

  00478	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  00480	8b 10		 mov	 edx, DWORD PTR [eax]
  00482	52		 push	 edx
  00483	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00488	83 c4 04	 add	 esp, 4
  0048b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 512  :                 return (iterator(_Z)); }

  00491	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e4	 lea	 ecx, DWORD PTR $T163835[ebp]
  00498	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::iterator
  0049d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  004a2	89 0a		 mov	 DWORD PTR [edx], ecx
  004a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ab	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  004b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	5e		 pop	 esi
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163836:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163839:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163838
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Insert
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163846 DD	019930520H
	DD	01H
	DD	FLAT:$T163848
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163848 DD	0ffffffffH
	DD	FLAT:$L163844
xdata$x	ENDS
;	COMDAT ?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lrotate, COMDAT

; 528  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163847
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 529  :                 _Nodeptr _Y = _Right(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 530  :                 _Right(_X) = _Left(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 531  :                 if (_Left(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00072	74 1c		 je	 SHORT $L159261

; 532  :                         _Parent(_Left(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L159261:

; 533  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 534  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L159262

; 535  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 536  :                 else if (_X == _Left(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L159265
$L159262:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L159264

; 537  :                         _Left(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 538  :                 else

  00106	eb 1c		 jmp	 SHORT $L159265
$L159264:

; 539  :                         _Right(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L159265:

; 540  :                 _Left(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163844:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163847:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163846
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lrotate
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163855 DD	019930520H
	DD	01H
	DD	FLAT:$T163857
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163857 DD	0ffffffffH
	DD	FLAT:$L163853
xdata$x	ENDS
;	COMDAT ?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
$T163852 = -20
__$EHRec$ = -12
__Lk$ = -16
__P$ = 8
?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Max, COMDAT

; 543  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163856
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L159269:

; 544  :                 while (_Right(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  0003f	74 13		 je	 SHORT $L159270

; 545  :                         _P = _Right(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L159269
$L159270:

; 546  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T163852[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T163852[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163853:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163856:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163855
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Max
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163864 DD	019930520H
	DD	01H
	DD	FLAT:$T163866
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163866 DD	0ffffffffH
	DD	FLAT:$L163862
xdata$x	ENDS
;	COMDAT ?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
$T163861 = -20
__$EHRec$ = -12
__Lk$ = -16
__P$ = 8
?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Min, COMDAT

; 548  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163865
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L159275:

; 549  :                 while (_Left(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  0003f	74 13		 je	 SHORT $L159276

; 550  :                         _P = _Left(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L159275
$L159276:

; 551  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T163861[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T163861[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163862:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163865:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163864
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Min
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163872 DD	019930520H
	DD	01H
	DD	FLAT:$T163874
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163874 DD	0ffffffffH
	DD	FLAT:$L163870
xdata$x	ENDS
;	COMDAT ?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rrotate, COMDAT

; 561  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163873
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :                 _Nodeptr _Y = _Left(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 563  :                 _Left(_X) = _Right(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 564  :                 if (_Right(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00072	74 1c		 je	 SHORT $L159282

; 565  :                         _Parent(_Right(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L159282:

; 566  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 567  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L159283

; 568  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 569  :                 else if (_X == _Right(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L159286
$L159283:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L159285

; 570  :                         _Right(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 571  :                 else

  00106	eb 1c		 jmp	 SHORT $L159286
$L159285:

; 572  :                         _Left(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L159286:

; 573  :                 _Right(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 574  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163870:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163873:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163872
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Rrotate@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Rrotate
PUBLIC	?_Charalloc@?$allocator@PAVCMailMsgWnd@@@std@@QAEPADI@Z ; std::allocator<CMailMsgWnd *>::_Charalloc
;	COMDAT ?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT
_this$ = -8
__S$ = -4
__Parg$ = 8
__Carg$ = 12
?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Buynode, COMDAT

; 586  :                 {_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  :                         1 * sizeof (_Node));

  00009	6a 18		 push	 24			; 00000018H
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCMailMsgWnd@@@std@@QAEPADI@Z ; std::allocator<CMailMsgWnd *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 588  :                 _Parent(_S) = _Parg;

  00016	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 589  :                 _Color(_S) = _Carg;

  00027	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00030	83 c4 04	 add	 esp, 4
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Carg$[ebp]
  00036	89 08		 mov	 DWORD PTR [eax], ecx

; 590  :                 return (_S); }

  00038	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?_Buynode@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@@Z ; std::_Destroy
;	COMDAT ?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Destval, COMDAT

; 594  :                 {_Destroy(&*_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Destval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Destval
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::const_iterator, COMDAT

; 65   :                 const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::const_iterator
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Mynode, COMDAT

; 114  :                         {return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBEPAU_Node@23@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Inc
;	COMDAT ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator++, COMDAT

; 131  :                         {_Inc();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Inc

; 132  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Dec
;	COMDAT ??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator--, COMDAT

; 138  :                         {_Dec();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Dec

; 139  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator--
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator==, COMDAT

; 145  :                         {return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator==
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z PROC NEAR ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 0c	 mov	 eax, DWORD PTR __V2$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z ENDP ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator>::pair<std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator>
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z PROC NEAR ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 0c	 mov	 eax, DWORD PTR __V2$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@V123@@std@@QAE@ABViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z ENDP ; std::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator>::pair<std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator,std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator>
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163890 DD	019930520H
	DD	01H
	DD	FLAT:$T163892
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163892 DD	0ffffffffH
	DD	FLAT:$L163888
xdata$x	ENDS
;	COMDAT ?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z
_TEXT	SEGMENT
$T163887 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
__Kv$ = 8
?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lbound, COMDAT

; 514  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163891
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 515  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 516  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L159354:

; 517  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  0004d	74 51		 je	 SHORT $L159355

; 518  :                         if (key_compare(_Key(_X), _Kv))

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Key
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 13		 je	 SHORT $L159356

; 519  :                                 _X = _Right(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx

; 520  :                         else

  00085	eb 17		 jmp	 SHORT $L159357
$L159356:

; 521  :                                 _Y = _X, _X = _Left(_X);

  00087	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0008a	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L159357:
  0009e	eb a4		 jmp	 SHORT $L159354
$L159355:

; 522  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T163887[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T163887[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163888:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163891:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163890
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Lbound
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163899 DD	019930520H
	DD	01H
	DD	FLAT:$T163901
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163901 DD	0ffffffffH
	DD	FLAT:$L163897
xdata$x	ENDS
;	COMDAT ?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z
_TEXT	SEGMENT
$T163896 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
__Kv$ = 8
?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Ubound, COMDAT

; 576  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163900
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 577  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 578  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L159365:

; 579  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  0004d	74 51		 je	 SHORT $L159366

; 580  :                         if (key_compare(_Kv, _Key(_X)))

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Key
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 55 08	 mov	 edx, DWORD PTR __Kv$[ebp]
  0005f	52		 push	 edx
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 19		 je	 SHORT $L159367

; 581  :                                 _Y = _X, _X = _Left(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00083	83 c4 04	 add	 esp, 4
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 582  :                         else

  0008b	eb 11		 jmp	 SHORT $L159368
$L159367:

; 583  :                                 _X = _Right(_X);

  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L159368:
  0009e	eb a4		 jmp	 SHORT $L159365
$L159366:

; 584  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T163896[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T163896[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163897:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163900:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163899
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEPAU_Node@12@ABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Ubound
PUBLIC	?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@ABU21@@Z ; std::_Construct
;	COMDAT ?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@ABU32@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@ABU32@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Consval, COMDAT

; 592  :                 {_Construct(&*_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@ABU21@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsg@@@2@ABU32@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Consval
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163908 DD	019930520H
	DD	01H
	DD	FLAT:$T163910
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163910 DD	0ffffffffH
	DD	FLAT:$L163906
xdata$x	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$159385 = -20
?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Dec, COMDAT

; 92   :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163909
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :                                 && _Parent(_Parent(_Ptr)) == _Ptr)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Color
  00039	83 c4 04	 add	 esp, 4
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 39		 jne	 SHORT $L159381
  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 02		 mov	 eax, DWORD PTR [edx]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 00		 mov	 eax, DWORD PTR [eax]
  0005f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00061	75 17		 jne	 SHORT $L159381

; 95   :                                 _Ptr = _Right(_Ptr);

  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 11		 mov	 DWORD PTR [ecx], edx

; 96   :                         else if (_Left(_Ptr) != _Nil)

  00078	eb 72		 jmp	 SHORT $L159384
$L159381:
  0007a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  00085	83 c4 04	 add	 esp, 4
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00090	74 20		 je	 SHORT $L159383

; 97   :                                 _Ptr = _Max(_Left(_Ptr));

  00092	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Max
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :                         else

  000b0	eb 3a		 jmp	 SHORT $L159384
$L159383:

; 100  :                                 while (_Ptr == _Left(_P = _Parent(_Ptr)))

  000b2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ec	 mov	 DWORD PTR __P$159385[ebp], ecx
  000c5	8b 55 ec	 mov	 edx, DWORD PTR __P$159385[ebp]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Left
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d8	75 0a		 jne	 SHORT $L159388

; 101  :                                         _Ptr = _P;

  000da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __P$159385[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx
  000e2	eb ce		 jmp	 SHORT $L159383
$L159388:

; 102  :                                 _Ptr = _P; }}

  000e4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 45 ec	 mov	 eax, DWORD PTR __P$159385[ebp]
  000ea	89 02		 mov	 DWORD PTR [edx], eax
$L159384:
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163906:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163909:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163908
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Dec
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163916 DD	019930520H
	DD	01H
	DD	FLAT:$T163918
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163918 DD	0ffffffffH
	DD	FLAT:$L163914
xdata$x	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$159394 = -20
?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Inc, COMDAT

; 104  :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163917
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  :                         if (_Right(_Ptr) != _Nil)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Nil
  00044	74 20		 je	 SHORT $L159392

; 106  :                                 _Ptr = _Min(_Right(_Ptr));

  00046	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 107  :                         else

  00064	eb 4f		 jmp	 SHORT $L159398
$L159392:

; 109  :                                 while (_Ptr == _Right(_P = _Parent(_Ptr)))

  00066	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d ec	 mov	 DWORD PTR __P$159394[ebp], ecx
  00079	8b 55 ec	 mov	 edx, DWORD PTR __P$159394[ebp]
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  00082	83 c4 04	 add	 esp, 4
  00085	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0008c	75 0a		 jne	 SHORT $L159397

; 110  :                                         _Ptr = _P;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __P$159394[ebp]
  00094	89 08		 mov	 DWORD PTR [eax], ecx
  00096	eb ce		 jmp	 SHORT $L159392
$L159397:

; 111  :                                 if (_Right(_Ptr) != _P)

  00098	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Right
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	3b 4d ec	 cmp	 ecx, DWORD PTR __P$159394[ebp]
  000ab	74 08		 je	 SHORT $L159398

; 112  :                                         _Ptr = _P; }}

  000ad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __P$159394[ebp]
  000b3	89 02		 mov	 DWORD PTR [edx], eax
$L159398:
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163914:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163917:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163916
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEXXZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::const_iterator::_Inc
;	COMDAT ?_Charalloc@?$allocator@PAVCMailMsgWnd@@@std@@QAEPADI@Z
_TEXT	SEGMENT
__N$ = 8
_this$ = -4
?_Charalloc@?$allocator@PAVCMailMsgWnd@@@std@@QAEPADI@Z PROC NEAR ; std::allocator<CMailMsgWnd *>::_Charalloc, COMDAT

; 61   : 		{return (_Allocate((difference_type)_N,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 			(char _FARQ *)0)); }

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPADHPAD@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Charalloc@?$allocator@PAVCMailMsgWnd@@@std@@QAEPADI@Z ENDP ; std::allocator<CMailMsgWnd *>::_Charalloc
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163926 DD	019930520H
	DD	01H
	DD	FLAT:$T163928
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163928 DD	0ffffffffH
	DD	FLAT:$L163924
xdata$x	ENDS
;	COMDAT ?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z
_TEXT	SEGMENT
$T163923 = -28
__$EHRec$ = -12
__Kv$ = 8
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lbound, COMDAT

; 514  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163927
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 515  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 516  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L159413:

; 517  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  0004d	74 51		 je	 SHORT $L159414

; 518  :                         if (key_compare(_Key(_X), _Kv))

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Key
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 13		 je	 SHORT $L159415

; 519  :                                 _X = _Right(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx

; 520  :                         else

  00085	eb 17		 jmp	 SHORT $L159416
$L159415:

; 521  :                                 _Y = _X, _X = _Left(_X);

  00087	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0008a	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L159416:
  0009e	eb a4		 jmp	 SHORT $L159413
$L159414:

; 522  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T163923[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T163923[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163924:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163927:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163926
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lbound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Lbound
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163935 DD	019930520H
	DD	01H
	DD	FLAT:$T163937
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163937 DD	0ffffffffH
	DD	FLAT:$L163933
xdata$x	ENDS
;	COMDAT ?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z
_TEXT	SEGMENT
$T163932 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
__Kv$ = 8
?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Ubound, COMDAT

; 576  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163936
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 577  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 578  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L159424:

; 579  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  0004d	74 51		 je	 SHORT $L159425

; 580  :                         if (key_compare(_Kv, _Key(_X)))

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Key@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAABHPAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Key
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 55 08	 mov	 edx, DWORD PTR __Kv$[ebp]
  0005f	52		 push	 edx
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@H@std@@QBE_NABH0@Z ; std::less<int>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 19		 je	 SHORT $L159426

; 581  :                                 _Y = _X, _X = _Left(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00083	83 c4 04	 add	 esp, 4
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 582  :                         else

  0008b	eb 11		 jmp	 SHORT $L159427
$L159426:

; 583  :                                 _X = _Right(_X);

  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L159427:
  0009e	eb a4		 jmp	 SHORT $L159424
$L159425:

; 584  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T163932[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T163932[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163933:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163936:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163935
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Ubound@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEPAU_Node@12@ABH@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Ubound
PUBLIC	?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@ABU21@@Z ; std::_Construct
;	COMDAT ?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@ABU32@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@ABU32@@Z PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Consval, COMDAT

; 592  :                 {_Construct(&*_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@ABU21@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Consval@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IAEXPAU?$pair@$$CBHPAVCMailMsgWnd@@@2@ABU32@@Z ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Consval
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163944 DD	019930520H
	DD	01H
	DD	FLAT:$T163946
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163946 DD	0ffffffffH
	DD	FLAT:$L163942
xdata$x	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$159444 = -20
?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Dec, COMDAT

; 92   :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163945
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :                                 && _Parent(_Parent(_Ptr)) == _Ptr)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Color@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Color
  00039	83 c4 04	 add	 esp, 4
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 39		 jne	 SHORT $L159440
  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 02		 mov	 eax, DWORD PTR [edx]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 00		 mov	 eax, DWORD PTR [eax]
  0005f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00061	75 17		 jne	 SHORT $L159440

; 95   :                                 _Ptr = _Right(_Ptr);

  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 11		 mov	 DWORD PTR [ecx], edx

; 96   :                         else if (_Left(_Ptr) != _Nil)

  00078	eb 72		 jmp	 SHORT $L159443
$L159440:
  0007a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  00085	83 c4 04	 add	 esp, 4
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00090	74 20		 je	 SHORT $L159442

; 97   :                                 _Ptr = _Max(_Left(_Ptr));

  00092	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?_Max@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Max
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :                         else

  000b0	eb 3a		 jmp	 SHORT $L159443
$L159442:

; 100  :                                 while (_Ptr == _Left(_P = _Parent(_Ptr)))

  000b2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ec	 mov	 DWORD PTR __P$159444[ebp], ecx
  000c5	8b 55 ec	 mov	 edx, DWORD PTR __P$159444[ebp]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Left
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d8	75 0a		 jne	 SHORT $L159447

; 101  :                                         _Ptr = _P;

  000da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __P$159444[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx
  000e2	eb ce		 jmp	 SHORT $L159442
$L159447:

; 102  :                                 _Ptr = _P; }}

  000e4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 45 ec	 mov	 eax, DWORD PTR __P$159444[ebp]
  000ea	89 02		 mov	 DWORD PTR [edx], eax
$L159443:
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163942:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163945:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163944
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Dec@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Dec
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T163952 DD	019930520H
	DD	01H
	DD	FLAT:$T163954
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T163954 DD	0ffffffffH
	DD	FLAT:$L163950
xdata$x	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$159453 = -20
?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Inc, COMDAT

; 104  :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L163953
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  :                         if (_Right(_Ptr) != _Nil)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@1PAU_Node@12@A ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Nil
  00044	74 20		 je	 SHORT $L159451

; 106  :                                 _Ptr = _Min(_Right(_Ptr));

  00046	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 107  :                         else

  00064	eb 4f		 jmp	 SHORT $L159457
$L159451:

; 109  :                                 while (_Ptr == _Right(_P = _Parent(_Ptr)))

  00066	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d ec	 mov	 DWORD PTR __P$159453[ebp], ecx
  00079	8b 55 ec	 mov	 edx, DWORD PTR __P$159453[ebp]
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  00082	83 c4 04	 add	 esp, 4
  00085	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0008c	75 0a		 jne	 SHORT $L159456

; 110  :                                         _Ptr = _P;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __P$159453[ebp]
  00094	89 08		 mov	 DWORD PTR [eax], ecx
  00096	eb ce		 jmp	 SHORT $L159451
$L159456:

; 111  :                                 if (_Right(_Ptr) != _P)

  00098	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Right
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	3b 4d ec	 cmp	 ecx, DWORD PTR __P$159453[ebp]
  000ab	74 08		 je	 SHORT $L159457

; 112  :                                         _Ptr = _P; }}

  000ad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __P$159453[ebp]
  000b3	89 02		 mov	 DWORD PTR [edx], eax
$L159457:
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163950:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L163953:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163952
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Inc@const_iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEXXZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::const_iterator::_Inc
;	COMDAT ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root, COMDAT

; 559  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@IBEAAPAU_Node@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::_Root
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root, COMDAT

; 559  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@IBEAAPAU_Node@12@XZ ENDP ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::_Root
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
;	COMDAT ?GetItemCount@CListCtrl@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetItemCount@CListCtrl@@QBEHXZ PROC NEAR		; CListCtrl::GetItemCount, COMDAT

; 132  : 	{ ASSERT(::IsWindow(m_hWnd)); return (int) ::SendMessage(m_hWnd, LVM_GETITEMCOUNT, 0, 0L); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 04 10 00 00	 push	 4100			; 00001004H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetItemCount@CListCtrl@@QBEHXZ ENDP			; CListCtrl::GetItemCount
_TEXT	ENDS
PUBLIC	?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsg@@@2@H@1@@Z ; std::_Iter_cat
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAI@Z
_TEXT	SEGMENT
$T163961 = -4
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAI@Z PROC NEAR ; std::_Distance, COMDAT

; 106  : 	{_Distance(_F, _L, _N, _Iter_cat(_F)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8d 45 08	 lea	 eax, DWORD PTR __F$[ebp]
  00007	50		 push	 eax
  00008	8d 4d fc	 lea	 ecx, DWORD PTR $T163961[ebp]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsg@@@2@H@1@@Z ; std::_Iter_cat
  00011	83 c4 08	 add	 esp, 8
  00014	8a 10		 mov	 dl, BYTE PTR [eax]
  00016	52		 push	 edx
  00017	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAI@Z ENDP ; std::_Distance
_TEXT	ENDS
PUBLIC	?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsgWnd@@@2@H@1@@Z ; std::_Iter_cat
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAI@Z
_TEXT	SEGMENT
$T163963 = -4
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAI@Z PROC NEAR ; std::_Distance, COMDAT

; 106  : 	{_Distance(_F, _L, _N, _Iter_cat(_F)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8d 45 08	 lea	 eax, DWORD PTR __F$[ebp]
  00007	50		 push	 eax
  00008	8d 4d fc	 lea	 ecx, DWORD PTR $T163963[ebp]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsgWnd@@@2@H@1@@Z ; std::_Iter_cat
  00011	83 c4 08	 add	 esp, 8
  00014	8a 10		 mov	 dl, BYTE PTR [eax]
  00016	52		 push	 edx
  00017	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAI@Z ENDP ; std::_Distance
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT
__N$ = 8
?_Allocate@std@@YAPADHPAD@Z PROC NEAR			; std::_Allocate, COMDAT

; 27   : 	{if (_N < 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 08 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	7d 07		 jge	 SHORT $L159957

; 28   : 		_N = 0;

  00009	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0
$L159957:

; 30   : 		(_SIZT)_N * sizeof (_Ty))); }

  00010	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00019	83 c4 04	 add	 esp, 4
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Allocate@std@@YAPADHPAD@Z ENDP			; std::_Allocate
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT ?_Construct@std@@YAXPAPAVCMailMsg@@ABQAV2@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
$T163966 = -4
?_Construct@std@@YAXPAPAVCMailMsg@@ABQAV2@@Z PROC NEAR	; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00009	50		 push	 eax
  0000a	6a 04		 push	 4
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T163966[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T163966[ebp], 0
  0001b	74 12		 je	 SHORT $L163967
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR $T163966[ebp]
  00020	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 01		 mov	 DWORD PTR [ecx], eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR $T163966[ebp]
  0002a	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  0002d	eb 07		 jmp	 SHORT $L163968
$L163967:
  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L163968:
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?_Construct@std@@YAXPAPAVCMailMsg@@ABQAV2@@Z ENDP	; std::_Construct
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCMailMsg@@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAPAVCMailMsg@@@Z PROC NEAR		; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAPAVCMailMsg@@@Z ENDP		; std::_Destroy
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
__Tmp$ = -4
?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z PROC NEAR ; std::swap, COMDAT

; 100  : 	{_Ty _Tmp = _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 101  : 	_X = _Y, _Y = _Tmp; }

  0000c	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Y$[ebp]
  00019	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0@Z ENDP ; std::swap
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z
_TEXT	SEGMENT
__Tmp$ = -4
__X$ = 8
__Y$ = 12
?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z PROC NEAR ; std::swap, COMDAT

; 100  : 	{_Ty _Tmp = _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 101  : 	_X = _Y, _Y = _Tmp; }

  0000c	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Y$[ebp]
  00019	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?swap@std@@YAXAAW4_Redbl@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0@Z ENDP ; std::swap
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@@Z PROC NEAR ; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@@Z ENDP ; std::_Destroy
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@@Z PROC NEAR ; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@@Z ENDP ; std::_Destroy
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@ABU21@@Z
_TEXT	SEGMENT
$T163975 = -4
__P$ = 8
__V$ = 12
?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@ABU21@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00009	50		 push	 eax
  0000a	6a 08		 push	 8
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T163975[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T163975[ebp], 0
  0001b	74 18		 je	 SHORT $L163976
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00025	8b 4d fc	 mov	 ecx, DWORD PTR $T163975[ebp]
  00028	89 11		 mov	 DWORD PTR [ecx], edx
  0002a	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002d	8b 55 fc	 mov	 edx, DWORD PTR $T163975[ebp]
  00030	89 55 f8	 mov	 DWORD PTR -8+[ebp], edx
  00033	eb 07		 jmp	 SHORT $L163977
$L163976:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L163977:
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsg@@@1@ABU21@@Z ENDP ; std::_Construct
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@ABU21@@Z
_TEXT	SEGMENT
$T163979 = -4
__P$ = 8
__V$ = 12
?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@ABU21@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00009	50		 push	 eax
  0000a	6a 08		 push	 8
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T163979[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T163979[ebp], 0
  0001b	74 18		 je	 SHORT $L163980
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00025	8b 4d fc	 mov	 ecx, DWORD PTR $T163979[ebp]
  00028	89 11		 mov	 DWORD PTR [ecx], edx
  0002a	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002d	8b 55 fc	 mov	 edx, DWORD PTR $T163979[ebp]
  00030	89 55 f8	 mov	 DWORD PTR -8+[ebp], edx
  00033	eb 07		 jmp	 SHORT $L163981
$L163980:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L163981:
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?_Construct@std@@YAXPAU?$pair@$$CBHPAVCMailMsgWnd@@@1@ABU21@@Z ENDP ; std::_Construct
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsg@@@2@H@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
__IterCatTag$ = -4
__pIterCatTag$ = -8
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsg@@@2@H@1@@Z PROC NEAR ; std::_Iter_cat, COMDAT

; 88   : 	{_C _IterCatTag;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 89   : 	 _C* _pIterCatTag;
; 90   : 	_pIterCatTag = &_IterCatTag;	// Workaround for C4700 warning

  00006	8d 45 fc	 lea	 eax, DWORD PTR __IterCatTag$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __pIterCatTag$[ebp], eax

; 91   : 	return (_IterCatTag); }

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	8a 55 fc	 mov	 dl, BYTE PTR __IterCatTag$[ebp]
  00012	88 11		 mov	 BYTE PTR [ecx], dl
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsg@@@2@H@1@@Z ENDP ; std::_Iter_cat
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z PROC NEAR ; std::_Distance, COMDAT

; 118  : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 08		 jmp	 SHORT $L160127
$L160128:
  00005	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00008	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QAEAAV012@XZ ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator++
$L160127:
  0000d	8d 45 0c	 lea	 eax, DWORD PTR __L$[ebp]
  00010	50		 push	 eax
  00011	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00014	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsg *>,std::map<int,CMailMsg *,std::less<int>,std::allocator<CMailMsg *> >::_Kfn,std::less<int>,std::allocator<CMailMsg *> >::iterator::operator!=
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $L160129

; 119  : 		++_N; }

  00022	8b 4d 10	 mov	 ecx, DWORD PTR __N$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	83 c2 01	 add	 edx, 1
  0002a	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	eb d4		 jmp	 SHORT $L160128
$L160129:
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsg@@@std@@U_Kfn@?$map@HPAVCMailMsg@@U?$less@H@std@@V?$allocator@PAVCMailMsg@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsg@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z ENDP ; std::_Distance
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsgWnd@@@2@H@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
__IterCatTag$ = -4
__pIterCatTag$ = -8
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsgWnd@@@2@H@1@@Z PROC NEAR ; std::_Iter_cat, COMDAT

; 88   : 	{_C _IterCatTag;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 89   : 	 _C* _pIterCatTag;
; 90   : 	_pIterCatTag = &_IterCatTag;	// Workaround for C4700 warning

  00006	8d 45 fc	 lea	 eax, DWORD PTR __IterCatTag$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __pIterCatTag$[ebp], eax

; 91   : 	return (_IterCatTag); }

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	8a 55 fc	 mov	 dl, BYTE PTR __IterCatTag$[ebp]
  00012	88 11		 mov	 BYTE PTR [ecx], dl
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBHPAVCMailMsgWnd@@@2@H@1@@Z ENDP ; std::_Iter_cat
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z PROC NEAR ; std::_Distance, COMDAT

; 118  : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 08		 jmp	 SHORT $L160135
$L160136:
  00005	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00008	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QAEAAV012@XZ ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator++
$L160135:
  0000d	8d 45 0c	 lea	 eax, DWORD PTR __L$[ebp]
  00010	50		 push	 eax
  00011	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00014	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@std@@QBE_NABV012@@Z ; std::_Tree<int,std::pair<int const ,CMailMsgWnd *>,std::map<int,CMailMsgWnd *,std::less<int>,std::allocator<CMailMsgWnd *> >::_Kfn,std::less<int>,std::allocator<CMailMsgWnd *> >::iterator::operator!=
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $L160137

; 119  : 		++_N; }

  00022	8b 4d 10	 mov	 ecx, DWORD PTR __N$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	83 c2 01	 add	 edx, 1
  0002a	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	eb d4		 jmp	 SHORT $L160136
$L160137:
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@HU?$pair@$$CBHPAVCMailMsgWnd@@@std@@U_Kfn@?$map@HPAVCMailMsgWnd@@U?$less@H@std@@V?$allocator@PAVCMailMsgWnd@@@3@@2@U?$less@H@2@V?$allocator@PAVCMailMsgWnd@@@2@@1@0AAIUbidirectional_iterator_tag@1@@Z ENDP ; std::_Distance
_TEXT	ENDS
;	COMDAT ??_ECMailListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT
??_ECMailListCtrl@@WEA@AEPAXI@Z PROC NEAR		; CMailListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 40	 sub	 ecx, 64			; 00000040H
  00003	e9 00 00 00 00	 jmp	 ??_ECMailListCtrl@@UAEPAXI@Z ; CMailListCtrl::`vector deleting destructor'
??_ECMailListCtrl@@WEA@AEPAXI@Z ENDP			; CMailListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECMailListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECMailListCtrl@@WHE@AEPAXI@Z PROC NEAR		; CMailListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECMailListCtrl@@UAEPAXI@Z ; CMailListCtrl::`vector deleting destructor'
??_ECMailListCtrl@@WHE@AEPAXI@Z ENDP			; CMailListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ?LimitText@CRichEditCtrl@@QAEXJ@Z
_TEXT	SEGMENT
_nChars$ = 8
_this$ = -4
?LimitText@CRichEditCtrl@@QAEXJ@Z PROC NEAR		; CRichEditCtrl::LimitText, COMDAT

; 642  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_EXLIMITTEXT, 0, nChars); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _nChars$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 35 04 00 00	 push	 1077			; 00000435H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?LimitText@CRichEditCtrl@@QAEXJ@Z ENDP			; CRichEditCtrl::LimitText
_TEXT	ENDS
;	COMDAT ?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z
_TEXT	SEGMENT
_bSysColor$ = 8
_cr$ = 12
_this$ = -4
?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z PROC NEAR	; CRichEditCtrl::SetBackgroundColor, COMDAT

; 675  : 	{ ASSERT(::IsWindow(m_hWnd)); return (COLORREF)::SendMessage(m_hWnd, EM_SETBKGNDCOLOR, bSysColor, cr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _cr$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _bSysColor$[ebp]
  0000e	51		 push	 ecx
  0000f	68 43 04 00 00	 push	 1091			; 00000443H
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z ENDP	; CRichEditCtrl::SetBackgroundColor
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__P$ = 12
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 42   : 	{return (_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@ABVMemID@@@Z		; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABV0@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 229  : 	ObjectID(const ObjectID& id) : FakeObjectID((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABV0@@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@ABV0@@Z				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeObjectID@@QAE@ABVMemID@@@Z PROC NEAR		; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@ABVMemID@@@Z ENDP			; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0MemID@@QAE@ABV0@@Z PROC NEAR				; MemID::MemID, COMDAT

; 19   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  0000d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00010	66 89 10	 mov	 WORD PTR [eax], dx

; 20   : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0MemID@@QAE@ABV0@@Z ENDP				; MemID::MemID
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0StringID@@QAE@ABVMemID@@@Z PROC NEAR			; StringID::StringID, COMDAT

; 58   : 	StringID ( const MemID &id ) : MemID ( id ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0StringID@@QAE@ABVMemID@@@Z ENDP			; StringID::StringID
_TEXT	ENDS
PUBLIC	?GetProperty@Object@@QAEFG@Z			; Object::GetProperty
PUBLIC	??CFakeObjectID@@QBEPAUObject@@XZ		; FakeObjectID::operator->
PUBLIC	??0ObjectID@@QAE@G@Z				; ObjectID::ObjectID
PUBLIC	?IsObject@ObjectID@@QBEHXZ			; ObjectID::IsObject
PUBLIC	??DTextID@@QAEPADXZ				; TextID::operator*
EXTRN	??0TextID@@QAE@G@Z:NEAR				; TextID::TextID
;	COMDAT ??DStringID@@QAEPADXZ
_TEXT	SEGMENT
$T163996 = -8
$T163997 = -12
_this$ = -16
_obj$ = -4
??DStringID@@QAEPADXZ PROC NEAR				; StringID::operator*, COMDAT

; 63   : 	char * operator *() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 		ObjectID obj ( handle );

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  00013	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID

; 65   : 
; 66   : 		if ( obj.IsObject() ) {

  00018	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  0001b	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  00020	85 c0		 test	 eax, eax
  00022	74 23		 je	 SHORT $L118466

; 67   : 			return *(TextID)obj->GetProperty ( s_data );

  00024	6a 71		 push	 113			; 00000071H
  00026	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  00029	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0002e	8b c8		 mov	 ecx, eax
  00030	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty
  00035	50		 push	 eax
  00036	8d 4d f8	 lea	 ecx, DWORD PTR $T163996[ebp]
  00039	e8 00 00 00 00	 call	 ??0TextID@@QAE@G@Z	; TextID::TextID
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
  00045	eb 16		 jmp	 SHORT $L118464
$L118466:

; 69   : 
; 70   : 		return *(TextID)handle;

  00047	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	66 8b 02	 mov	 ax, WORD PTR [edx]
  0004d	50		 push	 eax
  0004e	8d 4d f4	 lea	 ecx, DWORD PTR $T163997[ebp]
  00051	e8 00 00 00 00	 call	 ??0TextID@@QAE@G@Z	; TextID::TextID
  00056	8b c8		 mov	 ecx, eax
  00058	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
$L118464:

; 71   : 	}

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??DStringID@@QAEPADXZ ENDP				; StringID::operator*
_TEXT	ENDS
PUBLIC	?GetPropAddrCheck@Object@@QAEPAFG@Z		; Object::GetPropAddrCheck
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@Object@@QAEFG@Z PROC NEAR			; Object::GetProperty, COMDAT

; 170  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 		//	get a property given a selector
; 172  : 		return *GetPropAddrCheck(selector);

  00007	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetPropAddrCheck@Object@@QAEPAFG@Z ; Object::GetPropAddrCheck
  00014	66 8b 00	 mov	 ax, WORD PTR [eax]

; 173  : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?GetProperty@Object@@QAEFG@Z ENDP			; Object::GetProperty
_TEXT	ENDS
PUBLIC	?GetPropAddr@Object@@QAEPAFG@Z			; Object::GetPropAddr
EXTRN	?msgMgr@@3PAVMsgMgr@@A:DWORD			; msgMgr
EXTRN	?Fatal@MsgMgr@@QAAXHZZ:NEAR			; MsgMgr::Fatal
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_property$ = -4
?GetPropAddrCheck@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddrCheck, COMDAT

; 153  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 154  : 		//	get a property's address, checking for valid property
; 155  : 		Property* property = GetPropAddr(selector);

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetPropAddr@Object@@QAEPAFG@Z ; Object::GetPropAddr
  00016	89 45 fc	 mov	 DWORD PTR _property$[ebp], eax

; 156  : 		if (!property)

  00019	83 7d fc 00	 cmp	 DWORD PTR _property$[ebp], 0
  0001d	75 1b		 jne	 SHORT $L118082

; 157  : 			msgMgr->Fatal(Msg_InvalidProperty, selector);

  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _selector$[ebp]
  00022	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00028	51		 push	 ecx
  00029	6a 29		 push	 41			; 00000029H
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$L118082:

; 158  : 		return property;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _property$[ebp]

; 159  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?GetPropAddrCheck@Object@@QAEPAFG@Z ENDP		; Object::GetPropAddrCheck
_TEXT	ENDS
PUBLIC	?selectorDict@Object@@QAEPAVSelectorDict@@XZ	; Object::selectorDict
PUBLIC	??AObject@@QAEAAFH@Z				; Object::operator[]
EXTRN	?get@SelectorDict@@QAEHG@Z:NEAR			; SelectorDict::get
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_index$ = -4
?GetPropAddr@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddr, COMDAT

; 127  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 128  : 		int index = selectorDict()->get ( selector );

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?get@SelectorDict@@QAEHG@Z ; SelectorDict::get
  0001d	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 129  : 
; 130  : 		if ( index != -1 && !selectorDict()->script )

  00020	83 7d fc ff	 cmp	 DWORD PTR _index$[ebp], -1
  00024	74 2b		 je	 SHORT $L118073
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  0002e	33 c9		 xor	 ecx, ecx
  00030	66 8b 48 16	 mov	 cx, WORD PTR [eax+22]
  00034	85 c9		 test	 ecx, ecx
  00036	75 19		 jne	 SHORT $L118073

; 131  : 			return &(*this)[selectorDict()->offset]; 

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00040	33 d2		 xor	 edx, edx
  00042	66 8b 50 14	 mov	 dx, WORD PTR [eax+20]
  00046	52		 push	 edx
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??AObject@@QAEAAFH@Z	; Object::operator[]
  0004f	eb 02		 jmp	 SHORT $L118071
$L118073:

; 132  : 
; 133  : 		return 0;

  00051	33 c0		 xor	 eax, eax
$L118071:

; 134  : 	}

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?GetPropAddr@Object@@QAEPAFG@Z ENDP			; Object::GetPropAddr
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT
_this$ = -4
?selectorDict@Object@@QAEPAVSelectorDict@@XZ PROC NEAR	; Object::selectorDict, COMDAT

; 102  : 	SelectorDict *selectorDict ( void ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 		return _selectorDict;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 104  : 	};

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?selectorDict@Object@@QAEPAVSelectorDict@@XZ ENDP	; Object::selectorDict
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT
_index$ = 8
_this$ = -4
??AObject@@QAEAAFH@Z PROC NEAR				; Object::operator[], COMDAT

; 117  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 		//	get a reference to a property given the number of the property
; 119  : 		return ((Property*) this)[index];

  00007	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]

; 120  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??AObject@@QAEAAFH@Z ENDP				; Object::operator[]
_TEXT	ENDS
PUBLIC	??DMemID@@QBEPAXXZ				; MemID::operator*
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT
_this$ = -4
??CFakeObjectID@@QBEPAUObject@@XZ PROC NEAR		; FakeObjectID::operator->, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CFakeObjectID@@QBEPAUObject@@XZ ENDP			; FakeObjectID::operator->
_TEXT	ENDS
PUBLIC	?GetAddr@MemoryMgr@@QAEPAXG@Z			; MemoryMgr::GetAddr
EXTRN	_memMgr:DWORD
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4
??DMemID@@QBEPAXXZ PROC NEAR				; MemID::operator*, COMDAT

; 98   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		return memMgr->GetAddr(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?GetAddr@MemoryMgr@@QAEPAXG@Z ; MemoryMgr::GetAddr

; 100  : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??DMemID@@QBEPAXXZ ENDP					; MemID::operator*
_TEXT	ENDS
EXTRN	__descPtrTable:BYTE
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -4
?GetAddr@MemoryMgr@@QAEPAXG@Z PROC NEAR			; MemoryMgr::GetAddr, COMDAT

; 462  : 	inline void* MemoryMgr::GetAddr(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : //		CheckValid(theID);
; 464  : 		return _descPtrTable[(unsigned int)((unsigned short)theID)];

  00007	8b 45 08	 mov	 eax, DWORD PTR _theID$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR __descPtrTable[eax*4]

; 465  : 	}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?GetAddr@MemoryMgr@@QAEPAXG@Z ENDP			; MemoryMgr::GetAddr
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@G@Z			; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0ObjectID@@QAE@G@Z PROC NEAR				; ObjectID::ObjectID, COMDAT

; 230  : 	ObjectID(SOL_Handle h) : FakeObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@G@Z ; FakeObjectID::FakeObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0ObjectID@@QAE@G@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@G@Z				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0FakeObjectID@@QAE@G@Z PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@G@Z ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0MemID@@QAE@G@Z PROC NEAR				; MemID::MemID, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _h$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 24   : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0MemID@@QAE@G@Z ENDP					; MemID::MemID
_TEXT	ENDS
PUBLIC	?IsValid@MemID@@QBEHXZ				; MemID::IsValid
EXTRN	?GetMemType@MemID@@QBE?AW4MemType@@XZ:NEAR	; MemID::GetMemType
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsObject@ObjectID@@QBEHXZ PROC NEAR			; ObjectID::IsObject, COMDAT

; 247  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 248  : 		return IsValid() && GetMemType() == MemObject;

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?IsValid@MemID@@QBEHXZ	; MemID::IsValid
  00011	85 c0		 test	 eax, eax
  00013	74 16		 je	 SHORT $L164010
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetMemType@MemID@@QBE?AW4MemType@@XZ ; MemID::GetMemType
  0001d	83 f8 34	 cmp	 eax, 52			; 00000034H
  00020	75 09		 jne	 SHORT $L164010
  00022	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR -8+[ebp], 1
  00029	eb 07		 jmp	 SHORT $L164011
$L164010:
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L164011:
  00032	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 249  : 	}

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?IsObject@ObjectID@@QBEHXZ ENDP				; ObjectID::IsObject
_TEXT	ENDS
PUBLIC	?IsValid@MemoryMgr@@QAEHG@Z			; MemoryMgr::IsValid
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsValid@MemID@@QBEHXZ PROC NEAR			; MemID::IsValid, COMDAT

; 62   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 		return memMgr->IsValid(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?IsValid@MemoryMgr@@QAEHG@Z ; MemoryMgr::IsValid

; 64   : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?IsValid@MemID@@QBEHXZ ENDP				; MemID::IsValid
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -8
_tempID$ = -4
?IsValid@MemoryMgr@@QAEHG@Z PROC NEAR			; MemoryMgr::IsValid, COMDAT

; 475  : 	inline Bool MemoryMgr::IsValid(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 		unsigned short tempID = (unsigned short)theID;

  00009	66 8b 45 08	 mov	 ax, WORD PTR _theID$[ebp]
  0000d	66 89 45 fc	 mov	 WORD PTR _tempID$[ebp], ax

; 477  : 
; 478  : 		return(
; 479  : 				(tempID)															&&
; 480  : 				(tempID < maxDescriptors)									&&
; 481  : 				(desc[tempID].memInfo.bits.freeDescriptor == False)	&&
; 482  : 				(desc[tempID].memInfo.bits.freeMemory == False)
; 483  : 				);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00014	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 58		 je	 SHORT $L164014
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00021	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00027	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  0002d	73 47		 jae	 SHORT $L164014
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00032	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00038	c1 e1 04	 shl	 ecx, 4
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00041	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00044	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  00047	c1 f9 1f	 sar	 ecx, 31			; 0000001fH
  0004a	85 c9		 test	 ecx, ecx
  0004c	75 28		 jne	 SHORT $L164014
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00051	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00057	c1 e2 04	 shl	 edx, 4
  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00060	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00063	c1 e2 14	 shl	 edx, 20			; 00000014H
  00066	c1 fa 1f	 sar	 edx, 31			; 0000001fH
  00069	85 d2		 test	 edx, edx
  0006b	75 09		 jne	 SHORT $L164014
  0006d	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR -12+[ebp], 1
  00074	eb 07		 jmp	 SHORT $L164015
$L164014:
  00076	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L164015:
  0007d	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 484  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?IsValid@MemoryMgr@@QAEHG@Z ENDP			; MemoryMgr::IsValid
_TEXT	ENDS
PUBLIC	??_C@_00A@?$AA@					; `string'
;	COMDAT ??_C@_00A@?$AA@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\textid.hpp
_BSS	SEGMENT
??_C@_00A@?$AA@ DB 01H DUP (?)				; `string'
_BSS	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4
??DTextID@@QAEPADXZ PROC NEAR				; TextID::operator*, COMDAT

; 24   : 	char	*operator *() { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 		return handle ? (char *)MemID::operator*() : ""; 

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	33 c9		 xor	 ecx, ecx
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	85 c9		 test	 ecx, ecx
  00013	74 0d		 je	 SHORT $L164017
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0001d	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  00020	eb 07		 jmp	 SHORT $L164018
$L164017:
  00022	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
$L164018:
  00029	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 26   : 	}

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??DTextID@@QAEPADXZ ENDP				; TextID::operator*
_TEXT	ENDS
PUBLIC	?GetProperty@ObjectID@@QBEFG@Z			; ObjectID::GetProperty
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_lowWord@CSCI_LongInt@@QAEFXZ PROC NEAR		; CSCI_LongInt::get_lowWord, COMDAT

; 726  : 	Property get_lowWord() { return GetProperty ( s_lowWord ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 0d 01 00 00	 push	 269			; 0000010dH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_lowWord@CSCI_LongInt@@QAEFXZ ENDP			; CSCI_LongInt::get_lowWord
_TEXT	ENDS
PUBLIC	?AssureValid@ObjectID@@QBEXXZ			; ObjectID::AssureValid
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@ObjectID@@QBEFG@Z PROC NEAR		; ObjectID::GetProperty, COMDAT

; 290  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  : 		//	get a property given a selector
; 292  : 		AssureValid();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?AssureValid@ObjectID@@QBEXXZ ; ObjectID::AssureValid

; 293  : 		return (*this)->GetProperty(selector);

  0000f	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty

; 294  : 	}

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetProperty@ObjectID@@QBEFG@Z ENDP			; ObjectID::GetProperty
_TEXT	ENDS
PUBLIC	??BMemID@@QBEGXZ				; MemID::operator unsigned short
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssureValid@ObjectID@@QBEXXZ PROC NEAR			; ObjectID::AssureValid, COMDAT

; 238  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 239  : 		if (!IsObject())

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  0000f	85 c0		 test	 eax, eax
  00011	75 1e		 jne	 SHORT $L118241

; 240  : 			msgMgr->Fatal(Msg_NotObject, (int) *this);

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0001b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00020	50		 push	 eax
  00021	6a 2f		 push	 47			; 0000002fH
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
$L118241:

; 241  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?AssureValid@ObjectID@@QBEXXZ ENDP			; ObjectID::AssureValid
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4
??BMemID@@QBEGXZ PROC NEAR				; MemID::operator unsigned short, COMDAT

; 93   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : 		return handle;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 00	 mov	 ax, WORD PTR [eax]

; 95   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BMemID@@QBEGXZ ENDP					; MemID::operator unsigned short
_TEXT	ENDS
PUBLIC	?get_hiWord@CSCI_LongInt@@QAEFXZ		; CSCI_LongInt::get_hiWord
;	COMDAT ?get_nValue@CSCI_LongInt@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?get_nValue@CSCI_LongInt@@QAEHXZ PROC NEAR		; CSCI_LongInt::get_nValue, COMDAT

; 732  : 	int get_nValue() { return ( ( ((int) get_hiWord()) << 16) + ( (int) get_lowWord() & 0x0000ffff ) ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e8 00 00 00 00	 call	 ?get_hiWord@CSCI_LongInt@@QAEFXZ ; CSCI_LongInt::get_hiWord
  00010	0f bf f0	 movsx	 esi, ax
  00013	c1 e6 10	 shl	 esi, 16			; 00000010H
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?get_lowWord@CSCI_LongInt@@QAEFXZ ; CSCI_LongInt::get_lowWord
  0001e	0f bf c0	 movsx	 eax, ax
  00021	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00026	03 c6		 add	 eax, esi
  00028	5e		 pop	 esi
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?get_nValue@CSCI_LongInt@@QAEHXZ ENDP			; CSCI_LongInt::get_nValue
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_hiWord@CSCI_LongInt@@QAEFXZ PROC NEAR		; CSCI_LongInt::get_hiWord, COMDAT

; 729  : 	Property get_hiWord() { return GetProperty ( s_hiWord ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 0e 01 00 00	 push	 270			; 0000010eH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_hiWord@CSCI_LongInt@@QAEFXZ ENDP			; CSCI_LongInt::get_hiWord
_TEXT	ENDS
;	COMDAT ?get_pCommand@CSCI_NetMsg@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pCommand@CSCI_NetMsg@@QAEFXZ PROC NEAR		; CSCI_NetMsg::get_pCommand, COMDAT

; 3561 : 	Property get_pCommand() { return GetProperty ( s_pCommand ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 dd 02 00 00	 push	 733			; 000002ddH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pCommand@CSCI_NetMsg@@QAEFXZ ENDP			; CSCI_NetMsg::get_pCommand
_TEXT	ENDS
PUBLIC	??0CSCI_LongInt@@QAE@G@Z			; CSCI_LongInt::CSCI_LongInt
;	COMDAT ?get_pAckCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -4
?get_pAckCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ PROC NEAR ; CSCI_NetMsg::get_pAckCmd, COMDAT

; 3570 : 	CSCI_LongInt get_pAckCmd() { return GetProperty ( s_pAckCmd ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 df 02 00 00	 push	 735			; 000002dfH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00018	e8 00 00 00 00	 call	 ??0CSCI_LongInt@@QAE@G@Z ; CSCI_LongInt::CSCI_LongInt
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?get_pAckCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ ENDP	; CSCI_NetMsg::get_pAckCmd
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@G@Z				; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_LongInt@@QAE@G@Z PROC NEAR			; CSCI_LongInt::CSCI_LongInt, COMDAT

; 724  : 	CSCI_LongInt(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_LongInt@@QAE@G@Z ENDP				; CSCI_LongInt::CSCI_LongInt
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Object@@QAE@G@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 13   : 	CSCI_Object(SOL_Handle h) : ObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@G@Z ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
;	COMDAT ?get_pNakCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -4
?get_pNakCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ PROC NEAR ; CSCI_NetMsg::get_pNakCmd, COMDAT

; 3573 : 	CSCI_LongInt get_pNakCmd() { return GetProperty ( s_pNakCmd ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 e0 02 00 00	 push	 736			; 000002e0H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00018	e8 00 00 00 00	 call	 ??0CSCI_LongInt@@QAE@G@Z ; CSCI_LongInt::CSCI_LongInt
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?get_pNakCmd@CSCI_NetMsg@@QAE?AVCSCI_LongInt@@XZ ENDP	; CSCI_NetMsg::get_pNakCmd
_TEXT	ENDS
PUBLIC	??0CSCI_Game@@QAE@G@Z				; CSCI_Game::CSCI_Game
;	COMDAT ??0CSCI_RoomZero@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_RoomZero@@QAE@G@Z PROC NEAR			; CSCI_RoomZero::CSCI_RoomZero, COMDAT

; 9596 : 	CSCI_RoomZero(SOL_Handle h) : CSCI_Game(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Game@@QAE@G@Z	; CSCI_Game::CSCI_Game
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_RoomZero@@QAE@G@Z ENDP				; CSCI_RoomZero::CSCI_RoomZero
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Game@@QAE@G@Z PROC NEAR				; CSCI_Game::CSCI_Game, COMDAT

; 2667 : 	CSCI_Game(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Game@@QAE@G@Z ENDP				; CSCI_Game::CSCI_Game
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Next, COMDAT

; 275  : 	virtual void Next ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Next
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Previous, COMDAT

; 276  : 	virtual void Previous ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Previous
_TEXT	ENDS
;	COMDAT ?GetItemTextColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT
_this$ = -4
?GetItemTextColor@CSkinListCtrl@@MAEKH@Z PROC NEAR	; CSkinListCtrl::GetItemTextColor, COMDAT

; 90   : 	virtual COLORREF GetItemTextColor( int nItem ) { return colItemText; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [eax+168]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?GetItemTextColor@CSkinListCtrl@@MAEKH@Z ENDP		; CSkinListCtrl::GetItemTextColor
_TEXT	ENDS
;	COMDAT ?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT
_this$ = -4
?GetItemBGColor@CSkinListCtrl@@MAEKH@Z PROC NEAR	; CSkinListCtrl::GetItemBGColor, COMDAT

; 91   : 	virtual COLORREF GetItemBGColor( int nItem ) { return colItemBG; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?GetItemBGColor@CSkinListCtrl@@MAEKH@Z ENDP		; CSkinListCtrl::GetItemBGColor
_TEXT	ENDS
PUBLIC	?CheckBounds@OCArray@@IAEXH@Z			; OCArray::CheckBounds
;	COMDAT ?PutByte@CPackedData@@QAEXE@Z
_TEXT	SEGMENT
_cValue$ = 8
_this$ = -4
?PutByte@CPackedData@@QAEXE@Z PROC NEAR			; CPackedData::PutByte, COMDAT

; 99   : 	inline void PutByte ( unsigned char cValue ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 100  : 		if ( !this )

  00007	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000b	75 02		 jne	 SHORT $L149162

; 101  : 			return;

  0000d	eb 36		 jmp	 SHORT $L149161
$L149162:

; 102  : 
; 103  : 		CheckBounds ( m_nPutIndex + 1 );

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00015	83 c1 01	 add	 ecx, 1
  00018	51		 push	 ecx
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 04	 add	 ecx, 4
  0001f	e8 00 00 00 00	 call	 ?CheckBounds@OCArray@@IAEXH@Z ; OCArray::CheckBounds

; 104  : 		m_pData[m_nPutIndex++] = cValue;

  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00030	8a 4d 08	 mov	 cl, BYTE PTR _cValue$[ebp]
  00033	88 0c 10	 mov	 BYTE PTR [eax+edx], cl
  00036	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00039	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0003c	83 c0 01	 add	 eax, 1
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$L149161:

; 105  : 	};

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?PutByte@CPackedData@@QAEXE@Z ENDP			; CPackedData::PutByte
_TEXT	ENDS
EXTRN	?Grow@OCArray@@IAEXH@Z:NEAR			; OCArray::Grow
;	COMDAT ?CheckBounds@OCArray@@IAEXH@Z
_TEXT	SEGMENT
_nIndex$ = 8
_this$ = -4
?CheckBounds@OCArray@@IAEXH@Z PROC NEAR			; OCArray::CheckBounds, COMDAT

; 41   : 	inline void CheckBounds ( int nIndex ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 		if ( nIndex >= m_nActualSize )

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0000d	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00010	7c 17		 jl	 SHORT $L149054

; 43   : 			Grow ( (nIndex - m_nActualSize) + _ARRAY_GROW_SIZE );

  00012	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00015	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00018	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  0001b	05 10 27 00 00	 add	 eax, 10000		; 00002710H
  00020	50		 push	 eax
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?Grow@OCArray@@IAEXH@Z	; OCArray::Grow
$L149054:

; 44   : 
; 45   : 		if ( nIndex >= m_nSize )

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  0002f	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00032	7c 0c		 jl	 SHORT $L149055

; 46   : 			m_nSize = nIndex + 1;

  00034	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00037	83 c0 01	 add	 eax, 1
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$L149055:

; 47   : 	};

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?CheckBounds@OCArray@@IAEXH@Z ENDP			; OCArray::CheckBounds
_TEXT	ENDS
;	COMDAT ?PutLong@CPackedData@@QAEXH@Z
_TEXT	SEGMENT
_nValue$ = 8
_this$ = -4
?PutLong@CPackedData@@QAEXH@Z PROC NEAR			; CPackedData::PutLong, COMDAT

; 175  : 	inline void PutLong ( int nValue ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 176  : 		if ( !this )

  00007	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000b	75 02		 jne	 SHORT $L149190

; 177  : 			return;

  0000d	eb 4f		 jmp	 SHORT $L149189
$L149190:

; 178  : 
; 179  : 		PutByte ( (nValue & 0x000000FF) );	

  0000f	8b 45 08	 mov	 eax, DWORD PTR _nValue$[ebp]
  00012	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00017	50		 push	 eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte

; 180  : 		PutByte ( (nValue & 0x0000FF00) >> 8 );

  00020	8b 4d 08	 mov	 ecx, DWORD PTR _nValue$[ebp]
  00023	81 e1 00 ff 00
	00		 and	 ecx, 65280		; 0000ff00H
  00029	c1 f9 08	 sar	 ecx, 8
  0002c	51		 push	 ecx
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte

; 181  : 		PutByte ( (nValue & 0x00FF0000) >> 16 );

  00035	8b 55 08	 mov	 edx, DWORD PTR _nValue$[ebp]
  00038	81 e2 00 00 ff
	00		 and	 edx, 16711680		; 00ff0000H
  0003e	c1 fa 10	 sar	 edx, 16			; 00000010H
  00041	52		 push	 edx
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte

; 182  : 		PutByte ( (nValue & 0xFF000000) >> 24 );

  0004a	8b 45 08	 mov	 eax, DWORD PTR _nValue$[ebp]
  0004d	25 00 00 00 ff	 and	 eax, -16777216		; ff000000H
  00052	c1 e8 18	 shr	 eax, 24			; 00000018H
  00055	50		 push	 eax
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte
$L149189:

; 183  : 	};

  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
?PutLong@CPackedData@@QAEXH@Z ENDP			; CPackedData::PutLong
_TEXT	ENDS
PUBLIC	?Data@OCArray@@QAEPAEXZ				; OCArray::Data
PUBLIC	?PutWord@CPackedData@@QAEXF@Z			; CPackedData::PutWord
EXTRN	_memcpy:NEAR
;	COMDAT ?PutString@CPackedData@@QAEXPADH@Z
_TEXT	SEGMENT
_pStr$ = 8
_nLength$ = 12
_this$ = -4
?PutString@CPackedData@@QAEXPADH@Z PROC NEAR		; CPackedData::PutString, COMDAT

; 241  : 	inline void PutString ( char *pStr, int nLength = 0 ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 242  : 		if ( !this )

  00007	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000b	75 02		 jne	 SHORT $L149215

; 243  : 			return;

  0000d	eb 6c		 jmp	 SHORT $L149214
$L149215:

; 244  : 
; 245  : 		if ( !nLength ) {

  0000f	83 7d 0c 00	 cmp	 DWORD PTR _nLength$[ebp], 0
  00013	75 1c		 jne	 SHORT $L149216

; 246  : 			nLength = strlen ( pStr ); 

  00015	8b 45 08	 mov	 eax, DWORD PTR _pStr$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 _strlen
  0001e	83 c4 04	 add	 esp, 4
  00021	89 45 0c	 mov	 DWORD PTR _nLength$[ebp], eax

; 247  : 			PutWord ( nLength );

  00024	66 8b 4d 0c	 mov	 cx, WORD PTR _nLength$[ebp]
  00028	51		 push	 ecx
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?PutWord@CPackedData@@QAEXF@Z ; CPackedData::PutWord
$L149216:

; 249  : 
; 250  : 		CheckBounds ( m_nPutIndex + nLength + 1 );

  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00037	8b 4d 0c	 mov	 ecx, DWORD PTR _nLength$[ebp]
  0003a	8d 54 08 01	 lea	 edx, DWORD PTR [eax+ecx+1]
  0003e	52		 push	 edx
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	83 c1 04	 add	 ecx, 4
  00045	e8 00 00 00 00	 call	 ?CheckBounds@OCArray@@IAEXH@Z ; OCArray::CheckBounds

; 251  : 		memcpy ( Data() + m_nPutIndex, pStr, nLength );

  0004a	8b 45 0c	 mov	 eax, DWORD PTR _nLength$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _pStr$[ebp]
  00051	51		 push	 ecx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 04	 add	 ecx, 4
  00058	e8 00 00 00 00	 call	 ?Data@OCArray@@QAEPAEXZ	; OCArray::Data
  0005d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00060	03 42 18	 add	 eax, DWORD PTR [edx+24]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _memcpy
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH

; 252  : 		m_nPutIndex += nLength;

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00072	03 4d 0c	 add	 ecx, DWORD PTR _nLength$[ebp]
  00075	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00078	89 4a 18	 mov	 DWORD PTR [edx+24], ecx
$L149214:

; 253  : 	};

  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?PutString@CPackedData@@QAEXPADH@Z ENDP			; CPackedData::PutString
_TEXT	ENDS
;	COMDAT ?Data@OCArray@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4
?Data@OCArray@@QAEPAEXZ PROC NEAR			; OCArray::Data, COMDAT

; 56   : 	inline unsigned char *Data ( void ) { return m_pData; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?Data@OCArray@@QAEPAEXZ ENDP				; OCArray::Data
_TEXT	ENDS
;	COMDAT ?PutWord@CPackedData@@QAEXF@Z
_TEXT	SEGMENT
_nValue$ = 8
_this$ = -4
?PutWord@CPackedData@@QAEXF@Z PROC NEAR			; CPackedData::PutWord, COMDAT

; 136  : 	inline void PutWord ( short nValue ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 137  : 		if ( !this )

  00007	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000b	75 02		 jne	 SHORT $L149176

; 138  : 			return;

  0000d	eb 28		 jmp	 SHORT $L149175
$L149176:

; 139  : 
; 140  : 		PutByte ( (nValue & 0x00FF) );

  0000f	0f bf 45 08	 movsx	 eax, WORD PTR _nValue$[ebp]
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte

; 141  : 		PutByte ( (nValue & 0xFF00) >> 8 );

  00021	0f bf 4d 08	 movsx	 ecx, WORD PTR _nValue$[ebp]
  00025	81 e1 00 ff 00
	00		 and	 ecx, 65280		; 0000ff00H
  0002b	c1 f9 08	 sar	 ecx, 8
  0002e	51		 push	 ecx
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte
$L149175:

; 142  : 	};

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?PutWord@CPackedData@@QAEXF@Z ENDP			; CPackedData::PutWord
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABV0@@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABV0@@Z ENDP			; CSCI_Object::CSCI_Object
_TEXT	ENDS
;	COMDAT ?GetReferralID@CMailMsg@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetReferralID@CMailMsg@@QAEHXZ PROC NEAR		; CMailMsg::GetReferralID, COMDAT

; 244  : 	int GetReferralID ( void ) { return m_nReferralID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 60	 mov	 eax, DWORD PTR [eax+96]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetReferralID@CMailMsg@@QAEHXZ ENDP			; CMailMsg::GetReferralID
_TEXT	ENDS
;	COMDAT ?EnableRefresh@CMailMgrWnd@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EnableRefresh@CMailMgrWnd@@QAEXXZ PROC NEAR		; CMailMgrWnd::EnableRefresh, COMDAT

; 380  :     void EnableRefresh()  { if ( m_pRefresh ) { m_pRefresh->Enable(); m_pRefresh->Refresh(); } }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 9c 00 00
	00 00		 cmp	 DWORD PTR [eax+156], 0
  00011	74 2e		 je	 SHORT $L151863
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 89 9c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+156]
  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	ff 52 14	 call	 DWORD PTR [edx+20]
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [eax+156]
  00033	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	ff 52 08	 call	 DWORD PTR [edx+8]
$L151863:
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?EnableRefresh@CMailMgrWnd@@QAEXXZ ENDP			; CMailMgrWnd::EnableRefresh
_TEXT	ENDS
;	COMDAT ?EnableArchive@CMailMgrWnd@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EnableArchive@CMailMgrWnd@@QAEXXZ PROC NEAR		; CMailMgrWnd::EnableArchive, COMDAT

; 384  : 	void EnableArchive() { if ( m_pArchive ) { m_pArchive->Enable(); m_pArchive->Refresh(); } }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 a0 00 00
	00 00		 cmp	 DWORD PTR [eax+160], 0
  00011	74 2e		 je	 SHORT $L151869
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 89 a0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+160]
  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	ff 52 14	 call	 DWORD PTR [edx+20]
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 88 a0 00 00
	00		 mov	 ecx, DWORD PTR [eax+160]
  00033	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	ff 52 08	 call	 DWORD PTR [edx+8]
$L151869:
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?EnableArchive@CMailMgrWnd@@QAEXXZ ENDP			; CMailMgrWnd::EnableArchive
_TEXT	ENDS
PUBLIC	??_7CConfirmDlg@@6B@				; CConfirmDlg::`vftable'
PUBLIC	??_GCConfirmDlg@@UAEPAXI@Z			; CConfirmDlg::`scalar deleting destructor'
PUBLIC	??_ECConfirmDlg@@UAEPAXI@Z			; CConfirmDlg::`vector deleting destructor'
PUBLIC	??0CDoubleButtonDlg@@QAE@XZ			; CDoubleButtonDlg::CDoubleButtonDlg
EXTRN	?CloseSelf@CNoButtonDlg@@UAEX_N@Z:NEAR		; CNoButtonDlg::CloseSelf
EXTRN	?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CNoButtonDlg::MakeSkinCtrl
EXTRN	?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CNoButtonDlg::GetMessageMap
;	COMDAT ??_7CConfirmDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.hpp
CONST	SEGMENT
??_7CConfirmDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CConfirmDlg::`vftable'
	DD	FLAT:??_ECConfirmDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CConfirmDlg@@UAEXH@Z
CONST	ENDS
;	COMDAT ??0CConfirmDlg@@QAE@H@Z
_TEXT	SEGMENT
_nUniqueID$ = 8
_this$ = -4
??0CConfirmDlg@@QAE@H@Z PROC NEAR			; CConfirmDlg::CConfirmDlg, COMDAT

; 483  : 	CConfirmDlg( int nUniqueID ) { m_nUniqueID = nUniqueID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CDoubleButtonDlg@@QAE@XZ ; CDoubleButtonDlg::CDoubleButtonDlg
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CConfirmDlg@@6B@ ; CConfirmDlg::`vftable'
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _nUniqueID$[ebp]
  0001e	89 91 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0CConfirmDlg@@QAE@H@Z ENDP				; CConfirmDlg::CConfirmDlg
_TEXT	ENDS
PUBLIC	??_7CDoubleButtonDlg@@6B@			; CDoubleButtonDlg::`vftable'
PUBLIC	??_GCDoubleButtonDlg@@UAEPAXI@Z			; CDoubleButtonDlg::`scalar deleting destructor'
PUBLIC	??_ECDoubleButtonDlg@@UAEPAXI@Z			; CDoubleButtonDlg::`vector deleting destructor'
EXTRN	??0CNoButtonDlg@@QAE@XZ:NEAR			; CNoButtonDlg::CNoButtonDlg
EXTRN	?ExecuteButton@CNoButtonDlg@@UAEXH@Z:NEAR	; CNoButtonDlg::ExecuteButton
;	COMDAT ??_7CDoubleButtonDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\GenericDlg.hpp
CONST	SEGMENT
??_7CDoubleButtonDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CDoubleButtonDlg::`vftable'
	DD	FLAT:??_ECDoubleButtonDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CNoButtonDlg@@UAEXH@Z
CONST	ENDS
;	COMDAT ??0CDoubleButtonDlg@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CDoubleButtonDlg@@QAE@XZ PROC NEAR			; CDoubleButtonDlg::CDoubleButtonDlg, COMDAT

; 129  : 	CDoubleButtonDlg() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CNoButtonDlg@@QAE@XZ	; CNoButtonDlg::CNoButtonDlg
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CDoubleButtonDlg@@6B@ ; CDoubleButtonDlg::`vftable'
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CDoubleButtonDlg@@QAE@XZ ENDP			; CDoubleButtonDlg::CDoubleButtonDlg
_TEXT	ENDS
PUBLIC	??1CDoubleButtonDlg@@UAE@XZ			; CDoubleButtonDlg::~CDoubleButtonDlg
;	COMDAT ??_GCDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCDoubleButtonDlg@@UAEPAXI@Z PROC NEAR		; CDoubleButtonDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L150439
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L150439:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCDoubleButtonDlg@@UAEPAXI@Z ENDP			; CDoubleButtonDlg::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CNoButtonDlg@@UAE@XZ:NEAR			; CNoButtonDlg::~CNoButtonDlg
;	COMDAT ??1CDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CDoubleButtonDlg@@UAE@XZ PROC NEAR			; CDoubleButtonDlg::~CDoubleButtonDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CNoButtonDlg@@UAE@XZ	; CNoButtonDlg::~CNoButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CDoubleButtonDlg@@UAE@XZ ENDP			; CDoubleButtonDlg::~CDoubleButtonDlg
_TEXT	ENDS
PUBLIC	??1CConfirmDlg@@UAE@XZ				; CConfirmDlg::~CConfirmDlg
;	COMDAT ??_GCConfirmDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCConfirmDlg@@UAEPAXI@Z PROC NEAR			; CConfirmDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CConfirmDlg@@UAE@XZ	; CConfirmDlg::~CConfirmDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L152455
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L152455:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCConfirmDlg@@UAEPAXI@Z ENDP				; CConfirmDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CConfirmDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CConfirmDlg@@UAE@XZ PROC NEAR			; CConfirmDlg::~CConfirmDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CConfirmDlg@@UAE@XZ ENDP				; CConfirmDlg::~CConfirmDlg
_TEXT	ENDS
PUBLIC	??_7CArchiveDlg@@6B@				; CArchiveDlg::`vftable'
PUBLIC	??_GCArchiveDlg@@UAEPAXI@Z			; CArchiveDlg::`scalar deleting destructor'
PUBLIC	??_ECArchiveDlg@@UAEPAXI@Z			; CArchiveDlg::`vector deleting destructor'
;	COMDAT ??_7CArchiveDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\MailMgr.hpp
CONST	SEGMENT
??_7CArchiveDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CArchiveDlg::`vftable'
	DD	FLAT:??_ECArchiveDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CNoButtonDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CNoButtonDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CNoButtonDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?ExecuteButton@CArchiveDlg@@UAEXH@Z
CONST	ENDS
;	COMDAT ??0CArchiveDlg@@QAE@H@Z
_TEXT	SEGMENT
_nUniqueID$ = 8
_this$ = -4
??0CArchiveDlg@@QAE@H@Z PROC NEAR			; CArchiveDlg::CArchiveDlg, COMDAT

; 496  : 	CArchiveDlg( int nUniqueID ) { m_nUniqueID = nUniqueID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CDoubleButtonDlg@@QAE@XZ ; CDoubleButtonDlg::CDoubleButtonDlg
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CArchiveDlg@@6B@ ; CArchiveDlg::`vftable'
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _nUniqueID$[ebp]
  0001e	89 91 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0CArchiveDlg@@QAE@H@Z ENDP				; CArchiveDlg::CArchiveDlg
_TEXT	ENDS
PUBLIC	??1CArchiveDlg@@UAE@XZ				; CArchiveDlg::~CArchiveDlg
;	COMDAT ??_GCArchiveDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCArchiveDlg@@UAEPAXI@Z PROC NEAR			; CArchiveDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CArchiveDlg@@UAE@XZ	; CArchiveDlg::~CArchiveDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L152476
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L152476:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCArchiveDlg@@UAEPAXI@Z ENDP				; CArchiveDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CArchiveDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CArchiveDlg@@UAE@XZ PROC NEAR			; CArchiveDlg::~CArchiveDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDoubleButtonDlg@@UAE@XZ ; CDoubleButtonDlg::~CDoubleButtonDlg
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CArchiveDlg@@UAE@XZ ENDP				; CArchiveDlg::~CArchiveDlg
_TEXT	ENDS
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinBtn@@UAE@XZ PROC NEAR				; CSkinBtn::~CSkinBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinBtn@@UAE@XZ ENDP				; CSkinBtn::~CSkinBtn
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L152744
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L152744:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?SetTabWindow@CTabDlg@@QAEXHPAVCWnd@@@Z:NEAR	; CTabDlg::SetTabWindow
;	COMDAT ?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z
_TEXT	SEGMENT
_nID$ = 8
_pWin$ = 12
_this$ = -4
?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z PROC NEAR	; CMainPanelWnd::SetTabWindow, COMDAT

; 260  :     void SetTabWindow( int nID, CWnd *pWin )    { if (m_pTabDlg) m_pTabDlg->SetTabWindow( nID, pWin ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 16		 je	 SHORT $L153705
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _pWin$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR _nID$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00024	e8 00 00 00 00	 call	 ?SetTabWindow@CTabDlg@@QAEXHPAVCWnd@@@Z ; CTabDlg::SetTabWindow
$L153705:
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?SetTabWindow@CMainPanelWnd@@QAEXHPAVCWnd@@@Z ENDP	; CMainPanelWnd::SetTabWindow
_TEXT	ENDS
EXTRN	?AlertTab@CTabDlg@@QAEXH@Z:NEAR			; CTabDlg::AlertTab
;	COMDAT ?AlertTab@CMainPanelWnd@@QAEXH@Z
_TEXT	SEGMENT
_nID$ = 8
_this$ = -4
?AlertTab@CMainPanelWnd@@QAEXH@Z PROC NEAR		; CMainPanelWnd::AlertTab, COMDAT

; 262  :     void AlertTab( int nID )                    { if (m_pTabDlg) m_pTabDlg->AlertTab( nID ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 12		 je	 SHORT $L153711
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 8a b0 00 00
	00		 mov	 ecx, DWORD PTR [edx+176]
  00020	e8 00 00 00 00	 call	 ?AlertTab@CTabDlg@@QAEXH@Z ; CTabDlg::AlertTab
$L153711:
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?AlertTab@CMainPanelWnd@@QAEXH@Z ENDP			; CMainPanelWnd::AlertTab
_TEXT	ENDS
EXTRN	?HideTab@CTabDlg@@QAEXHH@Z:NEAR			; CTabDlg::HideTab
;	COMDAT ?HideTab@CMainPanelWnd@@QAEXHH@Z
_TEXT	SEGMENT
_nID$ = 8
_boHide$ = 12
_this$ = -4
?HideTab@CMainPanelWnd@@QAEXHH@Z PROC NEAR		; CMainPanelWnd::HideTab, COMDAT

; 263  :     void HideTab( int nID, BOOL boHide )        { if (m_pTabDlg) m_pTabDlg->HideTab( nID, boHide ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 16		 je	 SHORT $L153714
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _boHide$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR _nID$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00024	e8 00 00 00 00	 call	 ?HideTab@CTabDlg@@QAEXHH@Z ; CTabDlg::HideTab
$L153714:
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?HideTab@CMainPanelWnd@@QAEXHH@Z ENDP			; CMainPanelWnd::HideTab
_TEXT	ENDS
;	COMDAT ?get_TabDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?get_TabDisplay@CToonSettings@@QAEHXZ PROC NEAR		; CToonSettings::get_TabDisplay, COMDAT

; 81   : 	BOOL	get_TabDisplay() { return m_bTabDisplay; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 40	 mov	 eax, DWORD PTR [eax+64]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?get_TabDisplay@CToonSettings@@QAEHXZ ENDP		; CToonSettings::get_TabDisplay
_TEXT	ENDS
;	COMDAT ?getRights@CToonSettings@@QAEHH@Z
_TEXT	SEGMENT
_nMask$ = 8
_this$ = -4
?getRights@CToonSettings@@QAEHH@Z PROC NEAR		; CToonSettings::getRights, COMDAT

; 132  : 	BOOL	getRights( int nMask ) { return ( m_nRights & nMask ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 60	 mov	 eax, DWORD PTR [eax+96]
  0000d	23 45 08	 and	 eax, DWORD PTR _nMask$[ebp]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?getRights@CToonSettings@@QAEHH@Z ENDP			; CToonSettings::getRights
_TEXT	ENDS
END
