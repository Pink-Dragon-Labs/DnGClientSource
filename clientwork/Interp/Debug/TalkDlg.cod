	TITLE	C:\Documents and Settings\don\Desktop\sciw\Interp\TalkDlg.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestResize@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetEventMask@CRichEditCtrl@@QAEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAllowResize@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemTextColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPBI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Zconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Mconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Miterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@Vconst_iterator@12@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@_NV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nw@?$vector@_NV?$allocator@I@std@@@std@@KAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$vector@_NV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@_NV?$allocator@I@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getClose@CSCIObjectMethod@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getTitle@CSCIObjectMethod@@QAE?AVCString@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@NN@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Rgb24@@QAE@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Rgb24@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8Rgb24F@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@HHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@VMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@Bitmap@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObj@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjView@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjView@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjView@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjView@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjMem@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjMem@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjMem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjMem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjColor@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjColor@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjColor@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjColor@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTalkListCtrl@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTalkListCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnItemActivate@CTalkListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMouseOver@CTalkListCtrl@@UAEXVCPoint@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTalkListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTalkDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSCIObjectMethod@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CSkinObj@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSCITalkButtonBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSCITalkButtonBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethod@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXABQAVCSCIObjectMethod@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@ABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEPAPAVCSCIObjectMethod@@PBQAV3@0PAPAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEPAPAVCSCIObjectMethod@@IPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@ABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAPAVCSCIObjectMethod@@0ABQAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCSCIObjectMethod@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAPAVCSCIObjectMethod@@HPAPAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAPAVCSCIObjectMethod@@ABQAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECTalkListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECTalkListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTalkListCtrl@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObjColor@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObjView@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTalkListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSCITalkButtonBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CelObjMem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTalkDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTalkListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTalkListCtrl@@6BCListCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	?OnResize@CTalkDlg@@QAEXPAUtagNMHDR@@PAJ@Z	; CTalkDlg::OnResize
PUBLIC	?_messageEntries@CTalkDlg@@0QBUAFX_MSGMAP_ENTRY@@B ; CTalkDlg::_messageEntries
PUBLIC	?messageMap@CTalkDlg@@1UAFX_MSGMAP@@B		; CTalkDlg::messageMap
PUBLIC	?_GetBaseMessageMap@CTalkDlg@@KGPBUAFX_MSGMAP@@XZ ; CTalkDlg::_GetBaseMessageMap
PUBLIC	?g_pTalkDlg@@3PAVCTalkDlg@@A			; g_pTalkDlg
PUBLIC	_LIBID_ATLLib
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
_BSS	SEGMENT
?g_pTalkDlg@@3PAVCTalkDlg@@A DD 01H DUP (?)		; g_pTalkDlg
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
CONST	SEGMENT
?messageMap@CTalkDlg@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CTalkDlg@@KGPBUAFX_MSGMAP@@XZ ; CTalkDlg::messageMap
	DD	FLAT:?_messageEntries@CTalkDlg@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CTalkDlg@@0QBUAFX_MSGMAP_ENTRY@@B DD 04eH ; CTalkDlg::_messageEntries
	DD	0701H
	DD	023dH
	DD	023dH
	DD	026H
	DD	FLAT:?OnResize@CTalkDlg@@QAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
EXTRN	?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B:QWORD	; CSkinWnd::messageMap
_TEXT	SEGMENT
?_GetBaseMessageMap@CTalkDlg@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CTalkDlg::_GetBaseMessageMap

; 46   : BEGIN_MESSAGE_MAP ( CTalkDlg, CSkinWnd )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B ; CSkinWnd::messageMap
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_GetBaseMessageMap@CTalkDlg@@KGPBUAFX_MSGMAP@@XZ ENDP	; CTalkDlg::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CTalkDlg@@MBEPBUAFX_MSGMAP@@XZ	; CTalkDlg::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CTalkDlg@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR	; CTalkDlg::GetMessageMap

; 46   : BEGIN_MESSAGE_MAP ( CTalkDlg, CSkinWnd )

  0000a	55		 push	 ebp
  0000b	8b ec		 mov	 ebp, esp
  0000d	51		 push	 ecx
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CTalkDlg@@1UAFX_MSGMAP@@B ; CTalkDlg::messageMap
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetMessageMap@CTalkDlg@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CTalkDlg::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	??0CTalkDlg@@QAE@XZ				; CTalkDlg::CTalkDlg
PUBLIC	?CloseSelf@CTalkDlg@@UAEX_N@Z			; CTalkDlg::CloseSelf
PUBLIC	?MakeSkinCtrl@CTalkDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CTalkDlg::MakeSkinCtrl
PUBLIC	??_7CTalkDlg@@6B@				; CTalkDlg::`vftable'
PUBLIC	??_GCTalkDlg@@UAEPAXI@Z				; CTalkDlg::`scalar deleting destructor'
PUBLIC	??_ECTalkDlg@@UAEPAXI@Z				; CTalkDlg::`vector deleting destructor'
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?Next@CSkinWnd@@UAEXXZ				; CSkinWnd::Next
PUBLIC	?Previous@CSkinWnd@@UAEXXZ			; CSkinWnd::Previous
PUBLIC	??0?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethod@@@1@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
PUBLIC	??1?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::~vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
PUBLIC	??0CPoint@@QAE@XZ				; CPoint::CPoint
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	??0CSkinObj@@QAE@XZ:NEAR			; CSkinObj::CSkinObj
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?GetProcessEvents@CSkinWnd@@MAE_NXZ:NEAR	; CSkinWnd::GetProcessEvents
EXTRN	??0CSkinWnd@@QAE@XZ:NEAR			; CSkinWnd::CSkinWnd
EXTRN	??1CSkinWnd@@UAE@XZ:NEAR			; CSkinWnd::~CSkinWnd
EXTRN	?Disable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Disable
EXTRN	?Enable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Enable
EXTRN	?EnableGameModal@CSkinWnd@@UAEXHPAH@Z:NEAR	; CSkinWnd::EnableGameModal
EXTRN	?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z:NEAR	; CSkinWnd::DisableGameModal
EXTRN	?ProcessRefreshList@CSkinWnd@@UAEHXZ:NEAR	; CSkinWnd::ProcessRefreshList
EXTRN	?UpdateTracking@CSkinWnd@@UAEXXZ:NEAR		; CSkinWnd::UpdateTracking
EXTRN	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CSkinWnd::GetEventSinkMap
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
;	COMDAT ??_7CTalkDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\TalkDlg.cpp
CONST	SEGMENT
??_7CTalkDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CTalkDlg::`vftable'
	DD	FLAT:??_ECTalkDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CTalkDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CTalkDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CTalkDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
xdata$x	SEGMENT
$T155099 DD	019930520H
	DD	03H
	DD	FLAT:$T155102
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155102 DD	0ffffffffH
	DD	FLAT:$L155092
	DD	00H
	DD	FLAT:$L155093
	DD	01H
	DD	FLAT:$L155094
xdata$x	ENDS
_TEXT	SEGMENT
$T155090 = -16
$T155091 = -20
_this$ = -24
__$EHRec$ = -12
??0CTalkDlg@@QAE@XZ PROC NEAR				; CTalkDlg::CTalkDlg

; 53   : {

  0001a	55		 push	 ebp
  0001b	8b ec		 mov	 ebp, esp
  0001d	6a ff		 push	 -1
  0001f	68 00 00 00 00	 push	 $L155100
  00024	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0002a	50		 push	 eax
  0002b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00032	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00035	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00038	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00047	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00050	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  00055	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00059	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00062	e8 00 00 00 00	 call	 ??0CPoint@@QAE@XZ	; CPoint::CPoint
  00067	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00070	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect
  00075	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  0007e	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect
  00083	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	81 c1 d4 00 00
	00		 add	 ecx, 212		; 000000d4H
  0008c	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect
  00091	8d 45 f0	 lea	 eax, DWORD PTR $T155090[ebp]
  00094	50		 push	 eax
  00095	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  0009e	e8 00 00 00 00	 call	 ??0?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethod@@@1@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
  000a3	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000a7	8d 4d ec	 lea	 ecx, DWORD PTR $T155091[ebp]
  000aa	51		 push	 ecx
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  000b4	e8 00 00 00 00	 call	 ??0?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethod@@@1@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
  000b9	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000bc	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:??_7CTalkDlg@@6B@ ; CTalkDlg::`vftable'

; 54   : 	m_bCreated      = false;

  000c2	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	c6 80 10 01 00
	00 00		 mov	 BYTE PTR [eax+272], 0

; 55   : 	m_pTalk         = NULL;

  000cc	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0

; 56   : 	m_pBio          = NULL;

  000d9	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000dc	c7 82 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+148], 0

; 57   :     m_pScrollBar    = NULL;

  000e6	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000e9	c7 80 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+156], 0

; 58   :     m_pBioScrollBar = NULL;

  000f3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0

; 59   : 	m_nButtons      = 0;

  00100	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00103	c7 82 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+264], 0

; 60   : 	m_nTalkPaths    = 0;

  0010d	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00110	c7 80 0c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+268], 0

; 61   : }

  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00124	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00127	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155092:
  00000	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00008	c3		 ret	 0
$L155093:
  00009	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00012	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00017	c3		 ret	 0
$L155094:
  00018	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  00021	e8 00 00 00 00	 call	 ??1?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::~vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
  00026	c3		 ret	 0
$L155100:
  00027	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155099
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTalkDlg@@QAE@XZ ENDP				; CTalkDlg::CTalkDlg
PUBLIC	??1CTalkDlg@@UAE@XZ				; CTalkDlg::~CTalkDlg
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
;	COMDAT ??_GCTalkDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCTalkDlg@@UAEPAXI@Z PROC NEAR			; CTalkDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CTalkDlg@@UAE@XZ	; CTalkDlg::~CTalkDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L148959
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L148959:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCTalkDlg@@UAEPAXI@Z ENDP				; CTalkDlg::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXXZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::clear
PUBLIC	??_GCSCIObjectMethod@@QAEPAXI@Z			; CSCIObjectMethod::`scalar deleting destructor'
PUBLIC	??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
xdata$x	SEGMENT
$T155127 DD	019930520H
	DD	04H
	DD	FLAT:$T155129
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155129 DD	0ffffffffH
	DD	FLAT:$L155122
	DD	00H
	DD	FLAT:$L155123
	DD	01H
	DD	FLAT:$L155124
	DD	02H
	DD	FLAT:$L155125
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -52
$T155106 = -20
$T155107 = -24
_i$ = -16
$T155110 = -28
$T155111 = -32
$T155114 = -36
$T155115 = -40
$T155118 = -44
$T155119 = -48
__$EHRec$ = -12
??1CTalkDlg@@UAE@XZ PROC NEAR				; CTalkDlg::~CTalkDlg

; 65   : {

  00132	55		 push	 ebp
  00133	8b ec		 mov	 ebp, esp
  00135	6a ff		 push	 -1
  00137	68 00 00 00 00	 push	 $L155128
  0013c	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00142	50		 push	 eax
  00143	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0014a	83 ec 38	 sub	 esp, 56			; 00000038H
  0014d	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx
  00150	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00153	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTalkDlg@@6B@ ; CTalkDlg::`vftable'
  00159	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3

; 66   : 	int i;
; 67   : 
; 68   : 	for ( i = 0;i < m_nButtons;i++) 

  00160	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00167	eb 09		 jmp	 SHORT $L148964
$L148965:
  00169	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  0016c	83 c1 01	 add	 ecx, 1
  0016f	89 4d f0	 mov	 DWORD PTR _i$[ebp], ecx
$L148964:
  00172	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00175	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  00178	3b 82 08 01 00
	00		 cmp	 eax, DWORD PTR [edx+264]
  0017e	7d 3b		 jge	 SHORT $L148966

; 70   : 		delete m_ButtonVector [ i ];

  00180	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  00183	51		 push	 ecx
  00184	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00187	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  0018d	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
  00192	8b 10		 mov	 edx, DWORD PTR [eax]
  00194	89 55 e8	 mov	 DWORD PTR $T155107[ebp], edx
  00197	8b 45 e8	 mov	 eax, DWORD PTR $T155107[ebp]
  0019a	89 45 ec	 mov	 DWORD PTR $T155106[ebp], eax
  0019d	83 7d ec 00	 cmp	 DWORD PTR $T155106[ebp], 0
  001a1	74 0f		 je	 SHORT $L155108
  001a3	6a 01		 push	 1
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR $T155106[ebp]
  001a8	e8 00 00 00 00	 call	 ??_GCSCIObjectMethod@@QAEPAXI@Z ; CSCIObjectMethod::`scalar deleting destructor'
  001ad	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  001b0	eb 07		 jmp	 SHORT $L155109
$L155108:
  001b2	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR -56+[ebp], 0
$L155109:

; 71   : 	}

  001b9	eb ae		 jmp	 SHORT $L148965
$L148966:

; 72   : 
; 73   : 	m_ButtonVector.clear();

  001bb	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  001be	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  001c4	e8 00 00 00 00	 call	 ?clear@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXXZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::clear

; 74   : 
; 75   : 	for ( i = 0;i < m_nTalkPaths;i++) 

  001c9	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  001d0	eb 09		 jmp	 SHORT $L148969
$L148970:
  001d2	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  001d5	83 c1 01	 add	 ecx, 1
  001d8	89 4d f0	 mov	 DWORD PTR _i$[ebp], ecx
$L148969:
  001db	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  001de	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  001e1	3b 82 0c 01 00
	00		 cmp	 eax, DWORD PTR [edx+268]
  001e7	7d 3b		 jge	 SHORT $L148971

; 77   : 		delete m_TalkVector [ i ];

  001e9	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  001ec	51		 push	 ecx
  001ed	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f0	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  001f6	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
  001fb	8b 10		 mov	 edx, DWORD PTR [eax]
  001fd	89 55 e0	 mov	 DWORD PTR $T155111[ebp], edx
  00200	8b 45 e0	 mov	 eax, DWORD PTR $T155111[ebp]
  00203	89 45 e4	 mov	 DWORD PTR $T155110[ebp], eax
  00206	83 7d e4 00	 cmp	 DWORD PTR $T155110[ebp], 0
  0020a	74 0f		 je	 SHORT $L155112
  0020c	6a 01		 push	 1
  0020e	8b 4d e4	 mov	 ecx, DWORD PTR $T155110[ebp]
  00211	e8 00 00 00 00	 call	 ??_GCSCIObjectMethod@@QAEPAXI@Z ; CSCIObjectMethod::`scalar deleting destructor'
  00216	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  00219	eb 07		 jmp	 SHORT $L155113
$L155112:
  0021b	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L155113:

; 78   : 	}

  00222	eb ae		 jmp	 SHORT $L148970
$L148971:

; 79   : 
; 80   : 	m_TalkVector.clear();

  00224	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00227	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  0022d	e8 00 00 00 00	 call	 ?clear@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXXZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::clear

; 81   : 
; 82   : 	if ( m_pBio )   delete m_pBio;

  00232	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00235	83 b9 94 00 00
	00 00		 cmp	 DWORD PTR [ecx+148], 0
  0023c	74 31		 je	 SHORT $L155117
  0023e	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00241	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00247	89 45 d8	 mov	 DWORD PTR $T155115[ebp], eax
  0024a	8b 4d d8	 mov	 ecx, DWORD PTR $T155115[ebp]
  0024d	89 4d dc	 mov	 DWORD PTR $T155114[ebp], ecx
  00250	83 7d dc 00	 cmp	 DWORD PTR $T155114[ebp], 0
  00254	74 12		 je	 SHORT $L155116
  00256	6a 01		 push	 1
  00258	8b 55 dc	 mov	 edx, DWORD PTR $T155114[ebp]
  0025b	8b 02		 mov	 eax, DWORD PTR [edx]
  0025d	8b 4d dc	 mov	 ecx, DWORD PTR $T155114[ebp]
  00260	ff 50 04	 call	 DWORD PTR [eax+4]
  00263	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  00266	eb 07		 jmp	 SHORT $L155117
$L155116:
  00268	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR -64+[ebp], 0
$L155117:

; 83   : 	if ( m_pTalk ) 	delete m_pTalk;

  0026f	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00272	83 b9 98 00 00
	00 00		 cmp	 DWORD PTR [ecx+152], 0
  00279	74 31		 je	 SHORT $L155121
  0027b	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0027e	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  00284	89 45 d0	 mov	 DWORD PTR $T155119[ebp], eax
  00287	8b 4d d0	 mov	 ecx, DWORD PTR $T155119[ebp]
  0028a	89 4d d4	 mov	 DWORD PTR $T155118[ebp], ecx
  0028d	83 7d d4 00	 cmp	 DWORD PTR $T155118[ebp], 0
  00291	74 12		 je	 SHORT $L155120
  00293	6a 01		 push	 1
  00295	8b 55 d4	 mov	 edx, DWORD PTR $T155118[ebp]
  00298	8b 02		 mov	 eax, DWORD PTR [edx]
  0029a	8b 4d d4	 mov	 ecx, DWORD PTR $T155118[ebp]
  0029d	ff 50 04	 call	 DWORD PTR [eax+4]
  002a0	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  002a3	eb 07		 jmp	 SHORT $L155121
$L155120:
  002a5	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR -68+[ebp], 0
$L155121:

; 84   : }

  002ac	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  002b0	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b3	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  002b9	e8 00 00 00 00	 call	 ??1?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::~vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
  002be	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  002c2	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c5	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  002cb	e8 00 00 00 00	 call	 ??1?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::~vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
  002d0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  002d4	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d7	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  002dd	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002e9	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  002ec	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  002f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002fb	8b e5		 mov	 esp, ebp
  002fd	5d		 pop	 ebp
  002fe	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155122:
  00031	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00039	c3		 ret	 0
$L155123:
  0003a	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00043	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00048	c3		 ret	 0
$L155124:
  00049	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  00052	e8 00 00 00 00	 call	 ??1?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::~vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
  00057	c3		 ret	 0
$L155125:
  00058	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  00061	e8 00 00 00 00	 call	 ??1?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::~vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
  00066	c3		 ret	 0
$L155128:
  00067	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155127
  0006c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CTalkDlg@@UAE@XZ ENDP				; CTalkDlg::~CTalkDlg
PUBLIC	??1CSCIObjectMethod@@QAE@XZ			; CSCIObjectMethod::~CSCIObjectMethod
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??_GCSCIObjectMethod@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSCIObjectMethod@@QAEPAXI@Z PROC NEAR		; CSCIObjectMethod::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSCIObjectMethod@@QAE@XZ ; CSCIObjectMethod::~CSCIObjectMethod
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L148983
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L148983:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSCIObjectMethod@@QAEPAXI@Z ENDP			; CSCIObjectMethod::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?CloseSelf@CSkinWnd@@UAEX_N@Z:NEAR		; CSkinWnd::CloseSelf
_TEXT	SEGMENT
_bTransient$ = 8
_this$ = -4
?CloseSelf@CTalkDlg@@UAEX_N@Z PROC NEAR			; CTalkDlg::CloseSelf

; 88   : {

  002ff	55		 push	 ebp
  00300	8b ec		 mov	 ebp, esp
  00302	51		 push	 ecx
  00303	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   : 	g_pTalkDlg = NULL;

  00306	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pTalkDlg@@3PAVCTalkDlg@@A, 0 ; g_pTalkDlg

; 90   : 	CSkinWnd::CloseSelf( bTransient );

  00310	8a 45 08	 mov	 al, BYTE PTR _bTransient$[ebp]
  00313	50		 push	 eax
  00314	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 91   : }

  0031c	8b e5		 mov	 esp, ebp
  0031e	5d		 pop	 ebp
  0031f	c2 04 00	 ret	 4
?CloseSelf@CTalkDlg@@UAEX_N@Z ENDP			; CTalkDlg::CloseSelf
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	?Create@CTalkDlg@@QAEHPAD0F@Z			; CTalkDlg::Create
PUBLIC	?SetBio@CTalkDlg@@QAEXPADK@Z			; CTalkDlg::SetBio
PUBLIC	?UpdateButtons@CTalkDlg@@QAEXXZ			; CTalkDlg::UpdateButtons
PUBLIC	?UpdateTalk@CTalkDlg@@QAEXXZ			; CTalkDlg::UpdateTalk
PUBLIC	??1CelObjMem@@UAE@XZ				; CelObjMem::~CelObjMem
PUBLIC	??0MemID@@QAE@G@Z				; MemID::MemID
PUBLIC	??4CSkinObj@@QAEAAV0@ABV0@@Z			; CSkinObj::operator=
PUBLIC	?SetAllowResize@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetAllowResize
PUBLIC	?SetTransient@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetTransient
PUBLIC	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetWindowRect
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??0CelObjMem@@QAE@VMemID@@@Z:NEAR		; CelObjMem::CelObjMem
EXTRN	?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CScrollable::SetScrollBar
EXTRN	?g_pMainWindow@@3PAVCMainWindow@@A:DWORD	; g_pMainWindow
EXTRN	?IsValid@CSkinObj@@QAEHXZ:NEAR			; CSkinObj::IsValid
EXTRN	?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z:NEAR	; CSkinObj::GetRect
EXTRN	?GetCenterPoint@CSkinObj@@QAEHAAVCPoint@@@Z:NEAR ; CSkinObj::GetCenterPoint
EXTRN	??0CSkinBitmap@@QAE@PAVCelObj@@@Z:NEAR		; CSkinBitmap::CSkinBitmap
EXTRN	?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z:NEAR ; CSkinObj::DrawBitmap
EXTRN	?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z:NEAR ; CSkinWnd::CreatePopupChild
EXTRN	?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z:NEAR ; CSkinWnd::FindObject
EXTRN	?SetPriority@CSkinWnd@@QAEXH@Z:NEAR		; CSkinWnd::SetPriority
EXTRN	?RestoreLocation@CSkinWnd@@QAE_NXZ:NEAR		; CSkinWnd::RestoreLocation
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
EXTRN	?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CSkinEdit::SetScrollBar
_DATA	SEGMENT
$SG148998 DB	'Dlg_Talk.skn', 00H
	ORG $+3
$SG149003 DB	'hs_Toon', 00H
$SG149007 DB	'hs_Shadow', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155149 DD	019930520H
	DD	04H
	DD	FLAT:$T155151
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155151 DD	0ffffffffH
	DD	FLAT:$L155144
	DD	0ffffffffH
	DD	FLAT:$L155145
	DD	01H
	DD	FLAT:$L155146
	DD	02H
	DD	FLAT:$L155147
xdata$x	ENDS
_TEXT	SEGMENT
_psTitle$ = 8
$T155133 = -120
_psBio$ = 12
$T155134 = -128
_nBitmap$ = 16
$T155135 = -132
$T155136 = -136
_this$ = -152
$T155137 = -140
$T155140 = -144
$T155141 = -148
__$EHRec$ = -12
_toonPosn$149005 = -104
_bitmapToon$149009 = -96
_pToonBitmap$149011 = -16
?Create@CTalkDlg@@QAEHPAD0F@Z PROC NEAR			; CTalkDlg::Create

; 95   : {

  00322	55		 push	 ebp
  00323	8b ec		 mov	 ebp, esp
  00325	6a ff		 push	 -1
  00327	68 00 00 00 00	 push	 $L155150
  0032c	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00332	50		 push	 eax
  00333	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0033a	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00340	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 96   : 	if ( m_bCreated ) 

  00346	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0034c	33 c9		 xor	 ecx, ecx
  0034e	8a 88 10 01 00
	00		 mov	 cl, BYTE PTR [eax+272]
  00354	85 c9		 test	 ecx, ecx
  00356	74 31		 je	 SHORT $L148994

; 98   : 		assert( NULL != m_pTalk );
; 99   : 		assert( NULL != m_pBio );
; 100  : 		
; 101  : 		// Display the bio text
; 102  :         SetBio( psBio, 0 );

  00358	6a 00		 push	 0
  0035a	8b 55 0c	 mov	 edx, DWORD PTR _psBio$[ebp]
  0035d	52		 push	 edx
  0035e	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00364	e8 00 00 00 00	 call	 ?SetBio@CTalkDlg@@QAEXPADK@Z ; CTalkDlg::SetBio

; 103  : 
; 104  : 		// Update the talk paths
; 105  : 		UpdateTalk();

  00369	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0036f	e8 00 00 00 00	 call	 ?UpdateTalk@CTalkDlg@@QAEXXZ ; CTalkDlg::UpdateTalk

; 106  : 
; 107  : 		// Update the button Layout
; 108  : 		UpdateButtons();

  00374	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0037a	e8 00 00 00 00	 call	 ?UpdateButtons@CTalkDlg@@QAEXXZ ; CTalkDlg::UpdateButtons

; 109  : 
; 110  : 		return TRUE;

  0037f	b8 01 00 00 00	 mov	 eax, 1
  00384	e9 3e 03 00 00	 jmp	 $L148993
$L148994:

; 112  : 	
; 113  : 	SetPriority( swPriDefault );

  00389	6a 01		 push	 1
  0038b	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00391	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 114  : 	SetTransient( true );

  00396	6a 01		 push	 1
  00398	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0039e	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 115  : 
; 116  : 	m_bCreated = CSkinWnd::CreatePopupChild( "Dlg_Talk.skn", psTitle, CRect( 0, 0, 0, 0 ), g_pMainWindow);

  003a3	6a 01		 push	 1
  003a5	6a 01		 push	 1
  003a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  003ac	50		 push	 eax
  003ad	6a 00		 push	 0
  003af	6a 00		 push	 0
  003b1	6a 00		 push	 0
  003b3	6a 00		 push	 0
  003b5	8d 4d 88	 lea	 ecx, DWORD PTR $T155133[ebp]
  003b8	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  003bd	50		 push	 eax
  003be	8b 4d 08	 mov	 ecx, DWORD PTR _psTitle$[ebp]
  003c1	51		 push	 ecx
  003c2	68 00 00 00 00	 push	 OFFSET FLAT:$SG148998
  003c7	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  003d2	f7 d8		 neg	 eax
  003d4	1b c0		 sbb	 eax, eax
  003d6	f7 d8		 neg	 eax
  003d8	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  003de	88 82 10 01 00
	00		 mov	 BYTE PTR [edx+272], al

; 117  : 
; 118  : 	if ( m_bCreated )

  003e4	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  003ea	33 c9		 xor	 ecx, ecx
  003ec	8a 88 10 01 00
	00		 mov	 cl, BYTE PTR [eax+272]
  003f2	85 c9		 test	 ecx, ecx
  003f4	0f 84 9a 02 00
	00		 je	 $L148999

; 120  : 		assert( NULL != m_pTalk );
; 121  : 		assert( NULL != m_pBio );
; 122  : 
; 123  : 		// Display the bio text
; 124  : 		SetBio( psBio, 0 );

  003fa	6a 00		 push	 0
  003fc	8b 55 0c	 mov	 edx, DWORD PTR _psBio$[ebp]
  003ff	52		 push	 edx
  00400	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00406	e8 00 00 00 00	 call	 ?SetBio@CTalkDlg@@QAEXPADK@Z ; CTalkDlg::SetBio

; 125  : 
; 126  :         // Get starting dimensions
; 127  : 	    m_pBio->GetWindowRect ( &rBioRect );

  0040b	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00411	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  00416	50		 push	 eax
  00417	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0041d	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  00423	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 128  :         m_pTalk->GetWindowRect ( &rTalkRect );

  00428	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0042e	81 c2 c4 00 00
	00		 add	 edx, 196		; 000000c4H
  00434	52		 push	 edx
  00435	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0043b	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00441	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 129  :         m_pScrollBar->GetRect ( &rSbRect );

  00446	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0044c	81 c1 d4 00 00
	00		 add	 ecx, 212		; 000000d4H
  00452	51		 push	 ecx
  00453	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00459	8b 8a 9c 00 00
	00		 mov	 ecx, DWORD PTR [edx+156]
  0045f	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 130  : 
; 131  : 		// get the toon skin object
; 132  : 		m_toonObj = FindObject ( "hs_Toon" );

  00464	68 00 00 00 00	 push	 OFFSET FLAT:$SG149003
  00469	8d 45 80	 lea	 eax, DWORD PTR $T155134[ebp]
  0046c	50		 push	 eax
  0046d	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00473	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  00478	89 85 64 ff ff
	ff		 mov	 DWORD PTR -156+[ebp], eax
  0047e	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR -156+[ebp]
  00484	89 8d 60 ff ff
	ff		 mov	 DWORD PTR -160+[ebp], ecx
  0048a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00491	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR -160+[ebp]
  00497	52		 push	 edx
  00498	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0049e	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  004a4	e8 00 00 00 00	 call	 ??4CSkinObj@@QAEAAV0@ABV0@@Z ; CSkinObj::operator=
  004a9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004b0	8d 4d 80	 lea	 ecx, DWORD PTR $T155134[ebp]
  004b3	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 133  : 
; 134  : 		if ( m_toonObj.IsValid() ) {

  004b8	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  004be	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  004c4	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  004c9	85 c0		 test	 eax, eax
  004cb	0f 84 32 01 00
	00		 je	 $L149004

; 135  : 			// get the point for the toon
; 136  : 			CSkinObj toonPosn = FindObject ( "hs_Shadow" );

  004d1	68 00 00 00 00	 push	 OFFSET FLAT:$SG149007
  004d6	8d 45 98	 lea	 eax, DWORD PTR _toonPosn$149005[ebp]
  004d9	50		 push	 eax
  004da	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  004e0	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  004e5	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 137  : 			assert ( toonPosn.IsValid() );
; 138  : 			toonPosn.GetCenterPoint ( m_toonPoint );

  004ec	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  004f2	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  004f8	51		 push	 ecx
  004f9	8d 4d 98	 lea	 ecx, DWORD PTR _toonPosn$149005[ebp]
  004fc	e8 00 00 00 00	 call	 ?GetCenterPoint@CSkinObj@@QAEHAAVCPoint@@@Z ; CSkinObj::GetCenterPoint

; 139  : 
; 140  : 			CelObjMem bitmapToon ( nBitmap );

  00501	51		 push	 ecx
  00502	8b cc		 mov	 ecx, esp
  00504	89 a5 7c ff ff
	ff		 mov	 DWORD PTR $T155135[ebp], esp
  0050a	66 8b 55 10	 mov	 dx, WORD PTR _nBitmap$[ebp]
  0050e	52		 push	 edx
  0050f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00514	8d 4d a0	 lea	 ecx, DWORD PTR _bitmapToon$149009[ebp]
  00517	e8 00 00 00 00	 call	 ??0CelObjMem@@QAE@VMemID@@@Z ; CelObjMem::CelObjMem
  0051c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 141  : 			CSkinBitmap* pToonBitmap = new CSkinBitmap( &bitmapToon );

  00520	6a 1c		 push	 28			; 0000001cH
  00522	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00527	83 c4 04	 add	 esp, 4
  0052a	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T155137[ebp], eax
  00530	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00534	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR $T155137[ebp], 0
  0053b	74 17		 je	 SHORT $L155138
  0053d	8d 45 a0	 lea	 eax, DWORD PTR _bitmapToon$149009[ebp]
  00540	50		 push	 eax
  00541	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR $T155137[ebp]
  00547	e8 00 00 00 00	 call	 ??0CSkinBitmap@@QAE@PAVCelObj@@@Z ; CSkinBitmap::CSkinBitmap
  0054c	89 85 5c ff ff
	ff		 mov	 DWORD PTR -164+[ebp], eax
  00552	eb 0a		 jmp	 SHORT $L155139
$L155138:
  00554	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -164+[ebp], 0
$L155139:
  0055e	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR -164+[ebp]
  00564	89 8d 78 ff ff
	ff		 mov	 DWORD PTR $T155136[ebp], ecx
  0056a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0056e	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR $T155136[ebp]
  00574	89 55 f0	 mov	 DWORD PTR _pToonBitmap$149011[ebp], edx

; 142  : 
; 143  : 			// draw the stance on the hot spot bitmap
; 144  : 			m_toonObj.DrawBitmap ( pToonBitmap, m_toonPoint.x, m_toonPoint.y );

  00577	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0057d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  00583	51		 push	 ecx
  00584	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0058a	8b 82 ac 00 00
	00		 mov	 eax, DWORD PTR [edx+172]
  00590	50		 push	 eax
  00591	8b 4d f0	 mov	 ecx, DWORD PTR _pToonBitmap$149011[ebp]
  00594	51		 push	 ecx
  00595	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0059b	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  005a1	e8 00 00 00 00	 call	 ?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z ; CSkinObj::DrawBitmap

; 145  : 
; 146  : 			delete pToonBitmap;

  005a6	8b 55 f0	 mov	 edx, DWORD PTR _pToonBitmap$149011[ebp]
  005a9	89 95 6c ff ff
	ff		 mov	 DWORD PTR $T155141[ebp], edx
  005af	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR $T155141[ebp]
  005b5	89 85 70 ff ff
	ff		 mov	 DWORD PTR $T155140[ebp], eax
  005bb	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR $T155140[ebp], 0
  005c2	74 1a		 je	 SHORT $L155142
  005c4	6a 01		 push	 1
  005c6	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T155140[ebp]
  005cc	8b 11		 mov	 edx, DWORD PTR [ecx]
  005ce	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T155140[ebp]
  005d4	ff 12		 call	 DWORD PTR [edx]
  005d6	89 85 58 ff ff
	ff		 mov	 DWORD PTR -168+[ebp], eax
  005dc	eb 0a		 jmp	 SHORT $L155143
$L155142:
  005de	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -168+[ebp], 0
$L155143:

; 147  : 		}

  005e8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  005ec	8d 4d a0	 lea	 ecx, DWORD PTR _bitmapToon$149009[ebp]
  005ef	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  005f4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005fb	8d 4d 98	 lea	 ecx, DWORD PTR _toonPosn$149005[ebp]
  005fe	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L149004:

; 148  : 
; 149  : 		// Find/Set the scrollbars
; 150  :         if ( m_pBio && m_pBioScrollBar )  m_pBio->SetScrollBar ( m_pBioScrollBar );

  00603	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00609	83 b8 94 00 00
	00 00		 cmp	 DWORD PTR [eax+148], 0
  00610	74 2d		 je	 SHORT $L149018
  00612	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00618	83 b9 a0 00 00
	00 00		 cmp	 DWORD PTR [ecx+160], 0
  0061f	74 1e		 je	 SHORT $L149018
  00621	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00627	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  0062d	50		 push	 eax
  0062e	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00634	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  0063a	e8 00 00 00 00	 call	 ?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z ; CSkinEdit::SetScrollBar
$L149018:

; 151  : 		if ( m_pTalk && m_pScrollBar )    m_pTalk->SetScrollBar ( m_pScrollBar );

  0063f	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00645	83 ba 98 00 00
	00 00		 cmp	 DWORD PTR [edx+152], 0
  0064c	74 30		 je	 SHORT $L149019
  0064e	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00654	83 b8 9c 00 00
	00 00		 cmp	 DWORD PTR [eax+156], 0
  0065b	74 21		 je	 SHORT $L149019
  0065d	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00663	8b 91 9c 00 00
	00		 mov	 edx, DWORD PTR [ecx+156]
  00669	52		 push	 edx
  0066a	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00670	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00676	83 c1 54	 add	 ecx, 84			; 00000054H
  00679	e8 00 00 00 00	 call	 ?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ; CScrollable::SetScrollBar
$L149019:

; 152  : 
; 153  : 		// Update the talk paths
; 154  : 		UpdateTalk();

  0067e	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00684	e8 00 00 00 00	 call	 ?UpdateTalk@CTalkDlg@@QAEXXZ ; CTalkDlg::UpdateTalk

; 155  : 
; 156  : 		// Update the button Layout
; 157  : 		UpdateButtons();

  00689	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0068f	e8 00 00 00 00	 call	 ?UpdateButtons@CTalkDlg@@QAEXXZ ; CTalkDlg::UpdateButtons
$L148999:

; 159  : 
; 160  : 	RestoreLocation();

  00694	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0069a	e8 00 00 00 00	 call	 ?RestoreLocation@CSkinWnd@@QAE_NXZ ; CSkinWnd::RestoreLocation

; 161  : 
; 162  : 	SetAllowResize( false );

  0069f	6a 00		 push	 0
  006a1	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  006a7	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 163  : 	ShowWindow( SW_SHOW );

  006ac	6a 05		 push	 5
  006ae	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  006b4	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 164  : 
; 165  : 	return m_bCreated;

  006b9	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  006bf	33 c0		 xor	 eax, eax
  006c1	8a 81 10 01 00
	00		 mov	 al, BYTE PTR [ecx+272]
$L148993:

; 166  : }

  006c7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  006ca	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  006d1	8b e5		 mov	 esp, ebp
  006d3	5d		 pop	 ebp
  006d4	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155144:
  00071	8d 4d 80	 lea	 ecx, DWORD PTR $T155134[ebp]
  00074	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00079	c3		 ret	 0
$L155145:
  0007a	8d 4d 98	 lea	 ecx, DWORD PTR _toonPosn$149005[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00082	c3		 ret	 0
$L155146:
  00083	8d 4d a0	 lea	 ecx, DWORD PTR _bitmapToon$149009[ebp]
  00086	e8 00 00 00 00	 call	 ??1CelObjMem@@UAE@XZ	; CelObjMem::~CelObjMem
  0008b	c3		 ret	 0
$L155147:
  0008c	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR $T155137[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00098	59		 pop	 ecx
  00099	c3		 ret	 0
$L155150:
  0009a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155149
  0009f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CTalkDlg@@QAEHPAD0F@Z ENDP			; CTalkDlg::Create
;	COMDAT ??4CSkinObj@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??4CSkinObj@@QAEAAV0@ABV0@@Z PROC NEAR			; CSkinObj::operator=, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??4CSkinObj@@QAEAAV0@ABV0@@Z ENDP			; CSkinObj::operator=
_TEXT	ENDS
PUBLIC	?Height@CRect@@QBEHXZ				; CRect::Height
PUBLIC	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z		; CWnd::MoveWindow
EXTRN	?MoveTo@CSkinObj@@QAEHHH@Z:NEAR			; CSkinObj::MoveTo
EXTRN	?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z:NEAR	; CWnd::ScreenToClient
_TEXT	SEGMENT
_pNMHDR$ = 8
_this$ = -64
_prr$ = -44
_talkRect$ = -16
_bioRect$ = -60
_scrollRect$ = -32
_nAdjust$ = -36
_bBottomOut$ = -40
?OnResize@CTalkDlg@@QAEXPAUtagNMHDR@@PAJ@Z PROC NEAR	; CTalkDlg::OnResize

; 170  : {

  006d7	55		 push	 ebp
  006d8	8b ec		 mov	 ebp, esp
  006da	83 ec 40	 sub	 esp, 64			; 00000040H
  006dd	56		 push	 esi
  006de	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 	REQRESIZE* prr = (REQRESIZE*)pNMHDR;

  006e1	8b 45 08	 mov	 eax, DWORD PTR _pNMHDR$[ebp]
  006e4	89 45 d4	 mov	 DWORD PTR _prr$[ebp], eax

; 172  : 	CRect	talkRect, bioRect; 

  006e7	8d 4d f0	 lea	 ecx, DWORD PTR _talkRect$[ebp]
  006ea	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect
  006ef	8d 4d c4	 lea	 ecx, DWORD PTR _bioRect$[ebp]
  006f2	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 173  :     RECT    scrollRect;
; 174  : 	int		nAdjust;
; 175  :     bool    bBottomOut = false;

  006f7	c6 45 d8 00	 mov	 BYTE PTR _bBottomOut$[ebp], 0

; 176  : 
; 177  :     // Get current dimensions
; 178  : 	m_pBio->GetWindowRect( &bioRect );

  006fb	8d 4d c4	 lea	 ecx, DWORD PTR _bioRect$[ebp]
  006fe	51		 push	 ecx
  006ff	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00702	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  00708	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 179  :     m_pTalk->GetWindowRect( &talkRect );

  0070d	8d 45 f0	 lea	 eax, DWORD PTR _talkRect$[ebp]
  00710	50		 push	 eax
  00711	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00714	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  0071a	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 180  : 
; 181  : 	ScreenToClient( &bioRect );

  0071f	8d 55 c4	 lea	 edx, DWORD PTR _bioRect$[ebp]
  00722	52		 push	 edx
  00723	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00726	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 182  : 	ScreenToClient( &talkRect );

  0072b	8d 45 f0	 lea	 eax, DWORD PTR _talkRect$[ebp]
  0072e	50		 push	 eax
  0072f	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00732	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 183  : 	ScreenToClient( &scrollRect );

  00737	8d 4d e0	 lea	 ecx, DWORD PTR _scrollRect$[ebp]
  0073a	51		 push	 ecx
  0073b	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  0073e	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ScreenToClient

; 184  : 
; 185  :     // Set new size for bio text
; 186  : 	nAdjust = ( prr->rc.bottom - prr->rc.top ) - bioRect.Height();

  00743	8b 55 d4	 mov	 edx, DWORD PTR _prr$[ebp]
  00746	8b 45 d4	 mov	 eax, DWORD PTR _prr$[ebp]
  00749	8b 72 18	 mov	 esi, DWORD PTR [edx+24]
  0074c	2b 70 10	 sub	 esi, DWORD PTR [eax+16]
  0074f	8d 4d c4	 lea	 ecx, DWORD PTR _bioRect$[ebp]
  00752	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00757	2b f0		 sub	 esi, eax
  00759	89 75 dc	 mov	 DWORD PTR _nAdjust$[ebp], esi

; 187  : 	bioRect.bottom += nAdjust;

  0075c	8b 4d d0	 mov	 ecx, DWORD PTR _bioRect$[ebp+12]
  0075f	03 4d dc	 add	 ecx, DWORD PTR _nAdjust$[ebp]
  00762	89 4d d0	 mov	 DWORD PTR _bioRect$[ebp+12], ecx

; 188  :     
; 189  :     if ( bioRect.bottom > talkRect.bottom )

  00765	8b 55 d0	 mov	 edx, DWORD PTR _bioRect$[ebp+12]
  00768	3b 55 fc	 cmp	 edx, DWORD PTR _talkRect$[ebp+12]
  0076b	7e 3b		 jle	 SHORT $L149035

; 191  :         bioRect.right = rTalkRect.right;

  0076d	8b 45 c0	 mov	 eax, DWORD PTR _this$[ebp]
  00770	8b 88 cc 00 00
	00		 mov	 ecx, DWORD PTR [eax+204]
  00776	89 4d cc	 mov	 DWORD PTR _bioRect$[ebp+8], ecx

; 192  :         bioRect.bottom = rTalkRect.bottom;

  00779	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  0077c	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00782	89 45 d0	 mov	 DWORD PTR _bioRect$[ebp+12], eax

; 193  :         m_pBioScrollBar->MoveTo( rTalkRect.right + 2, bioRect.top);

  00785	8b 4d c8	 mov	 ecx, DWORD PTR _bioRect$[ebp+4]
  00788	51		 push	 ecx
  00789	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  0078c	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  00792	83 c0 02	 add	 eax, 2
  00795	50		 push	 eax
  00796	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  00799	8b 89 a0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+160]
  0079f	e8 00 00 00 00	 call	 ?MoveTo@CSkinObj@@QAEHHH@Z ; CSkinObj::MoveTo

; 194  :         bBottomOut = true;

  007a4	c6 45 d8 01	 mov	 BYTE PTR _bBottomOut$[ebp], 1
$L149035:

; 201  : 
; 202  :     // Resize the bio window
; 203  : 	if (m_pBio) m_pBio->MoveWindow( &bioRect, false );

  007a8	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  007ab	83 ba 94 00 00
	00 00		 cmp	 DWORD PTR [edx+148], 0
  007b2	74 14		 je	 SHORT $L149036
  007b4	6a 00		 push	 0
  007b6	8d 45 c4	 lea	 eax, DWORD PTR _bioRect$[ebp]
  007b9	50		 push	 eax
  007ba	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  007bd	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  007c3	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow
$L149036:

; 204  : 
; 205  :     // adjust talk/scrollbar to fit
; 206  :     if ( bioRect.bottom >= talkRect.top )

  007c8	8b 55 d0	 mov	 edx, DWORD PTR _bioRect$[ebp+12]
  007cb	3b 55 f4	 cmp	 edx, DWORD PTR _talkRect$[ebp+4]
  007ce	7c 67		 jl	 SHORT $L149039

; 208  :         talkRect.top = bioRect.bottom + 5;

  007d0	8b 45 d0	 mov	 eax, DWORD PTR _bioRect$[ebp+12]
  007d3	83 c0 05	 add	 eax, 5
  007d6	89 45 f4	 mov	 DWORD PTR _talkRect$[ebp+4], eax

; 209  : 
; 210  :         // Text has moved so just hide the scrollbar.  Until we work out how to resize it.
; 211  :         if (!bBottomOut && m_pScrollBar )

  007d9	8b 4d d8	 mov	 ecx, DWORD PTR _bBottomOut$[ebp]
  007dc	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  007e2	85 c9		 test	 ecx, ecx
  007e4	75 29		 jne	 SHORT $L149038
  007e6	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  007e9	83 ba 9c 00 00
	00 00		 cmp	 DWORD PTR [edx+156], 0
  007f0	74 1d		 je	 SHORT $L149038

; 212  :             m_pScrollBar->MoveTo( 1000, rSbRect.top);

  007f2	8b 45 c0	 mov	 eax, DWORD PTR _this$[ebp]
  007f5	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]
  007fb	51		 push	 ecx
  007fc	68 e8 03 00 00	 push	 1000			; 000003e8H
  00801	8b 55 c0	 mov	 edx, DWORD PTR _this$[ebp]
  00804	8b 8a 9c 00 00
	00		 mov	 ecx, DWORD PTR [edx+156]
  0080a	e8 00 00 00 00	 call	 ?MoveTo@CSkinObj@@QAEHHH@Z ; CSkinObj::MoveTo
$L149038:

; 213  : 
; 214  :         if ( talkRect.top < talkRect.bottom && m_pTalk )

  0080f	8b 45 f4	 mov	 eax, DWORD PTR _talkRect$[ebp+4]
  00812	3b 45 fc	 cmp	 eax, DWORD PTR _talkRect$[ebp+12]
  00815	7d 20		 jge	 SHORT $L149039
  00817	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  0081a	83 b9 98 00 00
	00 00		 cmp	 DWORD PTR [ecx+152], 0
  00821	74 14		 je	 SHORT $L149039

; 216  :             m_pTalk->MoveWindow( &talkRect, false );

  00823	6a 00		 push	 0
  00825	8d 55 f0	 lea	 edx, DWORD PTR _talkRect$[ebp]
  00828	52		 push	 edx
  00829	8b 45 c0	 mov	 eax, DWORD PTR _this$[ebp]
  0082c	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00832	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow
$L149039:

; 219  : 
; 220  : 
; 221  : }

  00837	5e		 pop	 esi
  00838	8b e5		 mov	 esp, ebp
  0083a	5d		 pop	 ebp
  0083b	c2 08 00	 ret	 8
?OnResize@CTalkDlg@@QAEXPAUtagNMHDR@@PAJ@Z ENDP		; CTalkDlg::OnResize
_TEXT	ENDS
PUBLIC	?SetEventMask@CRichEditCtrl@@QAEKK@Z		; CRichEditCtrl::SetEventMask
PUBLIC	?RequestResize@CRichEditCtrl@@QAEXXZ		; CRichEditCtrl::RequestResize
EXTRN	__fltused:NEAR
EXTRN	?SetText@CSkinEdit@@QAEHPBD@Z:NEAR		; CSkinEdit::SetText
_TEXT	SEGMENT
_psText$ = 8
_this$ = -4
?SetBio@CTalkDlg@@QAEXPADK@Z PROC NEAR			; CTalkDlg::SetBio

; 224  : {

  0083e	55		 push	 ebp
  0083f	8b ec		 mov	 ebp, esp
  00841	51		 push	 ecx
  00842	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 225  :     if ( !m_pBio )

  00845	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00848	83 b8 94 00 00
	00 00		 cmp	 DWORD PTR [eax+148], 0
  0084f	75 02		 jne	 SHORT $L149045

; 226  :         return;

  00851	eb 6b		 jmp	 SHORT $L149044
$L149045:

; 227  : 
; 228  : 	m_pBio->SetText( psText );

  00853	8b 4d 08	 mov	 ecx, DWORD PTR _psText$[ebp]
  00856	51		 push	 ecx
  00857	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0085a	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  00860	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText

; 229  :     m_pBio->SetEventMask( ENM_REQUESTRESIZE ); 

  00865	68 00 00 04 00	 push	 262144			; 00040000H
  0086a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0086d	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  00873	e8 00 00 00 00	 call	 ?SetEventMask@CRichEditCtrl@@QAEKK@Z ; CRichEditCtrl::SetEventMask

; 230  : 	m_pBio->RequestResize();

  00878	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0087b	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  00881	e8 00 00 00 00	 call	 ?RequestResize@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::RequestResize

; 231  : 	m_pBio->Refresh();

  00886	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00889	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  0088f	83 c1 60	 add	 ecx, 96			; 00000060H
  00892	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00895	8b 90 94 00 00
	00		 mov	 edx, DWORD PTR [eax+148]
  0089b	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  0089e	ff 50 08	 call	 DWORD PTR [eax+8]

; 232  :     m_pBio->SetLocation( 0 );

  008a1	6a 00		 push	 0
  008a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008a6	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  008ac	83 c1 40	 add	 ecx, 64			; 00000040H
  008af	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  008b2	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  008b8	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  008bb	ff 52 04	 call	 DWORD PTR [edx+4]
$L149044:

; 233  : }

  008be	8b e5		 mov	 esp, ebp
  008c0	5d		 pop	 ebp
  008c1	c2 08 00	 ret	 8
?SetBio@CTalkDlg@@QAEXPADK@Z ENDP			; CTalkDlg::SetBio
_TEXT	ENDS
PUBLIC	??8@YG_NABVCString@@PBD@Z			; operator==
PUBLIC	??8@YG_NPBDABVCString@@@Z			; operator==
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
PUBLIC	??0CTalkListCtrl@@QAE@XZ			; CTalkListCtrl::CTalkListCtrl
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	??0CSCITalkButtonBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSCITalkButtonBtn::CSCITalkButtonBtn
EXTRN	??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinScrollBar::CSkinScrollBar
EXTRN	?Left@CString@@QBE?AV1@H@Z:NEAR			; CString::Left
EXTRN	?Find@CString@@QBEHPBDH@Z:NEAR			; CString::Find
EXTRN	?GetName@CSkinObj@@QAE?AVCString@@XZ:NEAR	; CSkinObj::GetName
EXTRN	?GetParentObj@CSkinObj@@QAE?AV1@XZ:NEAR		; CSkinObj::GetParentObj
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
EXTRN	?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z:NEAR ; CSkinListCtrl::Create
EXTRN	?AddColumn@CSkinListCtrl@@QAEHVCSkinObj@@H@Z:NEAR ; CSkinListCtrl::AddColumn
EXTRN	?SetItemColours@CSkinListCtrl@@QAEHKK@Z:NEAR	; CSkinListCtrl::SetItemColours
EXTRN	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::FindControl
EXTRN	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::MakeSkinCtrl
EXTRN	??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z:NEAR ; CSkinEdit::CSkinEdit
_DATA	SEGMENT
	ORG $+2
$SG149054 DB	'_', 00H
	ORG $+2
$SG149056 DB	'bio', 00H
$SG149064 DB	'talklist', 00H
	ORG $+3
$SG149084 DB	'sb_bio', 00H
	ORG $+1
$SG149092 DB	'sb_talk', 00H
$SG149100 DB	'ch', 00H
	ORG $+1
$SG149109 DB	'bn', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155215 DD	019930520H
	DD	08H
	DD	FLAT:$T155217
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155217 DD	0ffffffffH
	DD	FLAT:$L155198
	DD	00H
	DD	FLAT:$L155199
	DD	01H
	DD	FLAT:$L155200
	DD	02H
	DD	FLAT:$L155201
	DD	02H
	DD	FLAT:$L155203
	DD	02H
	DD	FLAT:$L155205
	DD	02H
	DD	FLAT:$L155207
	DD	02H
	DD	FLAT:$L155211
xdata$x	ENDS
_TEXT	SEGMENT
$T155157 = -32
$T155158 = -36
$T155159 = -40
$T155162 = -44
$T155165 = -48
$T155166 = -52
$T155169 = -56
$T155170 = -60
$T155173 = -64
$T155174 = -68
$T155175 = -72
$T155178 = -76
$T155179 = -80
$T155180 = -84
$T155181 = -88
$T155184 = -92
$T155185 = -96
$T155188 = -100
$T155189 = -104
$T155190 = -108
_obj$ = 8
$T155191 = -112
$T155192 = -116
_this$ = -132
_name$ = -16
$T155195 = -120
$T155196 = -124
_id$ = -20
$T155197 = -128
__$EHRec$ = -12
_pList$149101 = -24
_pButton$149110 = -28
?MakeSkinCtrl@CTalkDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CTalkDlg::MakeSkinCtrl

; 237  : {

  008c4	55		 push	 ebp
  008c5	8b ec		 mov	 ebp, esp
  008c7	6a ff		 push	 -1
  008c9	68 00 00 00 00	 push	 $L155216
  008ce	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  008d4	50		 push	 eax
  008d5	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  008dc	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  008e2	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  008e8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 238  : 	// the type of the control is specified by the left characters of the name up to the _
; 239  : 	CString name = obj.GetName();

  008ef	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  008f2	50		 push	 eax
  008f3	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  008f6	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  008fb	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 240  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  008ff	6a 00		 push	 0
  00901	68 00 00 00 00	 push	 OFFSET FLAT:$SG149054
  00906	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00909	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  0090e	50		 push	 eax
  0090f	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00912	51		 push	 ecx
  00913	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00916	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  0091b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 241  : 
; 242  : 	// Dialog biography
; 243  : 	if ( name == "bio" ) 

  0091f	68 00 00 00 00	 push	 OFFSET FLAT:$SG149056
  00924	8d 55 f0	 lea	 edx, DWORD PTR _name$[ebp]
  00927	52		 push	 edx
  00928	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  0092d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00932	85 c0		 test	 eax, eax
  00934	0f 84 ef 00 00
	00		 je	 $L149055

; 245  : 		m_pBio = new CSkinEdit ( obj, this, 573, CSkinEdit::READONLY | CSkinEdit::MULTILINE, false, true );

  0093a	68 d8 00 00 00	 push	 216			; 000000d8H
  0093f	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00944	89 45 dc	 mov	 DWORD PTR $T155158[ebp], eax
  00947	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0094b	83 7d dc 00	 cmp	 DWORD PTR $T155158[ebp], 0
  0094f	74 4a		 je	 SHORT $L155160
  00951	6a 00		 push	 0
  00953	6a 01		 push	 1
  00955	6a 00		 push	 0
  00957	68 04 08 00 00	 push	 2052			; 00000804H
  0095c	68 3d 02 00 00	 push	 573			; 0000023dH
  00961	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00967	50		 push	 eax
  00968	83 ec 08	 sub	 esp, 8
  0096b	8b cc		 mov	 ecx, esp
  0096d	89 65 d8	 mov	 DWORD PTR $T155159[ebp], esp
  00970	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00973	52		 push	 edx
  00974	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00979	89 85 78 ff ff
	ff		 mov	 DWORD PTR -136+[ebp], eax
  0097f	8b 4d dc	 mov	 ecx, DWORD PTR $T155158[ebp]
  00982	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  00987	89 85 74 ff ff
	ff		 mov	 DWORD PTR -140+[ebp], eax
  0098d	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR -140+[ebp]
  00993	89 85 70 ff ff
	ff		 mov	 DWORD PTR -144+[ebp], eax
  00999	eb 0a		 jmp	 SHORT $L155161
$L155160:
  0099b	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -144+[ebp], 0
$L155161:
  009a5	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR -144+[ebp]
  009ab	89 4d e0	 mov	 DWORD PTR $T155157[ebp], ecx
  009ae	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  009b2	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  009b8	8b 45 e0	 mov	 eax, DWORD PTR $T155157[ebp]
  009bb	89 82 94 00 00
	00		 mov	 DWORD PTR [edx+148], eax

; 246  : 		return m_pBio;

  009c1	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  009c7	83 b9 94 00 00
	00 00		 cmp	 DWORD PTR [ecx+148], 0
  009ce	74 17		 je	 SHORT $L155163
  009d0	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  009d6	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  009dc	83 c0 60	 add	 eax, 96			; 00000060H
  009df	89 85 6c ff ff
	ff		 mov	 DWORD PTR -148+[ebp], eax
  009e5	eb 0a		 jmp	 SHORT $L155164
$L155163:
  009e7	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -148+[ebp], 0
$L155164:
  009f1	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR -148+[ebp]
  009f7	89 4d d4	 mov	 DWORD PTR $T155162[ebp], ecx
  009fa	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  009fe	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00a01	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00a06	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00a0a	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00a0d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00a12	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a19	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00a1c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00a21	8b 45 d4	 mov	 eax, DWORD PTR $T155162[ebp]
  00a24	e9 bc 04 00 00	 jmp	 $L149049
$L149055:

; 248  : 
; 249  : 	// The talk list
; 250  : 	if ( name == "talklist" ) 

  00a29	68 00 00 00 00	 push	 OFFSET FLAT:$SG149064
  00a2e	8d 55 f0	 lea	 edx, DWORD PTR _name$[ebp]
  00a31	52		 push	 edx
  00a32	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00a37	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00a3c	85 c0		 test	 eax, eax
  00a3e	0f 84 07 01 00
	00		 je	 $L149063

; 252  : 		m_pTalk = new CTalkListCtrl();

  00a44	68 b4 00 00 00	 push	 180			; 000000b4H
  00a49	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00a4e	89 45 cc	 mov	 DWORD PTR $T155166[ebp], eax
  00a51	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00a55	83 7d cc 00	 cmp	 DWORD PTR $T155166[ebp], 0
  00a59	74 10		 je	 SHORT $L155167
  00a5b	8b 4d cc	 mov	 ecx, DWORD PTR $T155166[ebp]
  00a5e	e8 00 00 00 00	 call	 ??0CTalkListCtrl@@QAE@XZ ; CTalkListCtrl::CTalkListCtrl
  00a63	89 85 68 ff ff
	ff		 mov	 DWORD PTR -152+[ebp], eax
  00a69	eb 0a		 jmp	 SHORT $L155168
$L155167:
  00a6b	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -152+[ebp], 0
$L155168:
  00a75	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR -152+[ebp]
  00a7b	89 45 d0	 mov	 DWORD PTR $T155165[ebp], eax
  00a7e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00a82	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00a88	8b 55 d0	 mov	 edx, DWORD PTR $T155165[ebp]
  00a8b	89 91 98 00 00
	00		 mov	 DWORD PTR [ecx+152], edx

; 253  : 		m_pTalk->Create( obj, this, 800, false, true, true );

  00a91	6a 01		 push	 1
  00a93	6a 01		 push	 1
  00a95	6a 00		 push	 0
  00a97	68 20 03 00 00	 push	 800			; 00000320H
  00a9c	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00aa2	50		 push	 eax
  00aa3	83 ec 08	 sub	 esp, 8
  00aa6	8b cc		 mov	 ecx, esp
  00aa8	89 65 c8	 mov	 DWORD PTR $T155169[ebp], esp
  00aab	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00aae	52		 push	 edx
  00aaf	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00ab4	89 85 64 ff ff
	ff		 mov	 DWORD PTR -156+[ebp], eax
  00aba	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00ac0	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00ac6	e8 00 00 00 00	 call	 ?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z ; CSkinListCtrl::Create

; 254  : 		m_pTalk->SetItemColours(RGB(0,0,0), RGB(0,200,80));

  00acb	68 00 c8 50 00	 push	 5294080			; 0050c800H
  00ad0	6a 00		 push	 0
  00ad2	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00ad8	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  00ade	e8 00 00 00 00	 call	 ?SetItemColours@CSkinListCtrl@@QAEHKK@Z ; CSkinListCtrl::SetItemColours

; 255  : 		return m_pTalk;

  00ae3	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00ae9	83 ba 98 00 00
	00 00		 cmp	 DWORD PTR [edx+152], 0
  00af0	74 17		 je	 SHORT $L155171
  00af2	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00af8	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00afe	83 c1 40	 add	 ecx, 64			; 00000040H
  00b01	89 8d 60 ff ff
	ff		 mov	 DWORD PTR -160+[ebp], ecx
  00b07	eb 0a		 jmp	 SHORT $L155172
$L155171:
  00b09	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -160+[ebp], 0
$L155172:
  00b13	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR -160+[ebp]
  00b19	89 55 c4	 mov	 DWORD PTR $T155170[ebp], edx
  00b1c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00b20	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00b23	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00b28	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00b2c	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00b2f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00b34	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b3b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00b3e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00b43	8b 45 c4	 mov	 eax, DWORD PTR $T155170[ebp]
  00b46	e9 9a 03 00 00	 jmp	 $L149049
$L149063:

; 257  : 
; 258  :     if ( name == "sb_bio" )

  00b4b	68 00 00 00 00	 push	 OFFSET FLAT:$SG149084
  00b50	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  00b53	50		 push	 eax
  00b54	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00b59	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00b5e	85 c0		 test	 eax, eax
  00b60	0f 84 b5 00 00
	00		 je	 $L149083

; 260  :         m_pBioScrollBar = new CSkinScrollBar ( obj, this );

  00b66	6a 48		 push	 72			; 00000048H
  00b68	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00b6d	83 c4 04	 add	 esp, 4
  00b70	89 45 bc	 mov	 DWORD PTR $T155174[ebp], eax
  00b73	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00b77	83 7d bc 00	 cmp	 DWORD PTR $T155174[ebp], 0
  00b7b	74 3a		 je	 SHORT $L155176
  00b7d	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00b83	51		 push	 ecx
  00b84	83 ec 08	 sub	 esp, 8
  00b87	8b cc		 mov	 ecx, esp
  00b89	89 65 b8	 mov	 DWORD PTR $T155175[ebp], esp
  00b8c	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00b8f	52		 push	 edx
  00b90	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00b95	89 85 5c ff ff
	ff		 mov	 DWORD PTR -164+[ebp], eax
  00b9b	8b 4d bc	 mov	 ecx, DWORD PTR $T155174[ebp]
  00b9e	e8 00 00 00 00	 call	 ??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
  00ba3	89 85 58 ff ff
	ff		 mov	 DWORD PTR -168+[ebp], eax
  00ba9	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR -168+[ebp]
  00baf	89 85 54 ff ff
	ff		 mov	 DWORD PTR -172+[ebp], eax
  00bb5	eb 0a		 jmp	 SHORT $L155177
$L155176:
  00bb7	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -172+[ebp], 0
$L155177:
  00bc1	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR -172+[ebp]
  00bc7	89 4d c0	 mov	 DWORD PTR $T155173[ebp], ecx
  00bca	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00bce	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00bd4	8b 45 c0	 mov	 eax, DWORD PTR $T155173[ebp]
  00bd7	89 82 a0 00 00
	00		 mov	 DWORD PTR [edx+160], eax

; 261  : 		return m_pBioScrollBar;

  00bdd	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00be3	8b 91 a0 00 00
	00		 mov	 edx, DWORD PTR [ecx+160]
  00be9	89 55 b4	 mov	 DWORD PTR $T155178[ebp], edx
  00bec	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00bf0	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00bf3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00bf8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00bfc	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00bff	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00c04	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c0b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00c0e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00c13	8b 45 b4	 mov	 eax, DWORD PTR $T155178[ebp]
  00c16	e9 ca 02 00 00	 jmp	 $L149049
$L149083:

; 263  : 
; 264  :     if ( name == "sb_talk" )

  00c1b	68 00 00 00 00	 push	 OFFSET FLAT:$SG149092
  00c20	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  00c23	50		 push	 eax
  00c24	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00c29	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00c2e	85 c0		 test	 eax, eax
  00c30	0f 84 b5 00 00
	00		 je	 $L149091

; 266  :         m_pScrollBar = new CSkinScrollBar ( obj, this );

  00c36	6a 48		 push	 72			; 00000048H
  00c38	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c3d	83 c4 04	 add	 esp, 4
  00c40	89 45 ac	 mov	 DWORD PTR $T155180[ebp], eax
  00c43	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00c47	83 7d ac 00	 cmp	 DWORD PTR $T155180[ebp], 0
  00c4b	74 3a		 je	 SHORT $L155182
  00c4d	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00c53	51		 push	 ecx
  00c54	83 ec 08	 sub	 esp, 8
  00c57	8b cc		 mov	 ecx, esp
  00c59	89 65 a8	 mov	 DWORD PTR $T155181[ebp], esp
  00c5c	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00c5f	52		 push	 edx
  00c60	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00c65	89 85 50 ff ff
	ff		 mov	 DWORD PTR -176+[ebp], eax
  00c6b	8b 4d ac	 mov	 ecx, DWORD PTR $T155180[ebp]
  00c6e	e8 00 00 00 00	 call	 ??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
  00c73	89 85 4c ff ff
	ff		 mov	 DWORD PTR -180+[ebp], eax
  00c79	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR -180+[ebp]
  00c7f	89 85 48 ff ff
	ff		 mov	 DWORD PTR -184+[ebp], eax
  00c85	eb 0a		 jmp	 SHORT $L155183
$L155182:
  00c87	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -184+[ebp], 0
$L155183:
  00c91	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR -184+[ebp]
  00c97	89 4d b0	 mov	 DWORD PTR $T155179[ebp], ecx
  00c9a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00c9e	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00ca4	8b 45 b0	 mov	 eax, DWORD PTR $T155179[ebp]
  00ca7	89 82 9c 00 00
	00		 mov	 DWORD PTR [edx+156], eax

; 267  : 		return m_pScrollBar;

  00cad	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00cb3	8b 91 9c 00 00
	00		 mov	 edx, DWORD PTR [ecx+156]
  00cb9	89 55 a4	 mov	 DWORD PTR $T155184[ebp], edx
  00cbc	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00cc0	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00cc3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00cc8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ccc	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00ccf	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00cd4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00cdb	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00cde	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00ce3	8b 45 a4	 mov	 eax, DWORD PTR $T155184[ebp]
  00ce6	e9 fa 01 00 00	 jmp	 $L149049
$L149091:

; 269  : 
; 270  : 	if ( "ch" == id ) {

  00ceb	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00cee	50		 push	 eax
  00cef	68 00 00 00 00	 push	 OFFSET FLAT:$SG149100
  00cf4	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00cf9	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00cfe	85 c0		 test	 eax, eax
  00d00	0f 84 be 00 00
	00		 je	 $L149099

; 271  : 		CSkinListCtrl* pList = (CSkinListCtrl*) FindControl ( obj.GetParentObj() );

  00d06	83 ec 08	 sub	 esp, 8
  00d09	8b cc		 mov	 ecx, esp
  00d0b	89 65 a0	 mov	 DWORD PTR $T155185[ebp], esp
  00d0e	51		 push	 ecx
  00d0f	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00d12	e8 00 00 00 00	 call	 ?GetParentObj@CSkinObj@@QAE?AV1@XZ ; CSkinObj::GetParentObj
  00d17	89 85 44 ff ff
	ff		 mov	 DWORD PTR -188+[ebp], eax
  00d1d	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00d23	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  00d28	89 85 40 ff ff
	ff		 mov	 DWORD PTR -192+[ebp], eax
  00d2e	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR -192+[ebp]
  00d34	89 95 3c ff ff
	ff		 mov	 DWORD PTR -196+[ebp], edx
  00d3a	83 bd 3c ff ff
	ff 00		 cmp	 DWORD PTR -196+[ebp], 0
  00d41	74 11		 je	 SHORT $L155186
  00d43	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR -196+[ebp]
  00d49	83 e8 40	 sub	 eax, 64			; 00000040H
  00d4c	89 85 38 ff ff
	ff		 mov	 DWORD PTR -200+[ebp], eax
  00d52	eb 0a		 jmp	 SHORT $L155187
$L155186:
  00d54	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -200+[ebp], 0
$L155187:
  00d5e	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR -200+[ebp]
  00d64	89 4d e8	 mov	 DWORD PTR _pList$149101[ebp], ecx

; 272  : 
; 273  : 		if ( pList ) {

  00d67	83 7d e8 00	 cmp	 DWORD PTR _pList$149101[ebp], 0
  00d6b	74 21		 je	 SHORT $L149105

; 274  : 			pList->AddColumn( obj );

  00d6d	6a 00		 push	 0
  00d6f	83 ec 08	 sub	 esp, 8
  00d72	8b cc		 mov	 ecx, esp
  00d74	89 65 9c	 mov	 DWORD PTR $T155188[ebp], esp
  00d77	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00d7a	52		 push	 edx
  00d7b	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00d80	89 85 34 ff ff
	ff		 mov	 DWORD PTR -204+[ebp], eax
  00d86	8b 4d e8	 mov	 ecx, DWORD PTR _pList$149101[ebp]
  00d89	e8 00 00 00 00	 call	 ?AddColumn@CSkinListCtrl@@QAEHVCSkinObj@@H@Z ; CSkinListCtrl::AddColumn
$L149105:

; 276  : 
; 277  : 		return NULL;

  00d8e	c7 45 98 00 00
	00 00		 mov	 DWORD PTR $T155189[ebp], 0
  00d95	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00d99	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00d9c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00da1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00da5	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00da8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00dad	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00db4	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00db7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00dbc	8b 45 98	 mov	 eax, DWORD PTR $T155189[ebp]
  00dbf	e9 21 01 00 00	 jmp	 $L149049
$L149099:

; 279  : 
; 280  : 	// Make a SCI button
; 281  : 	if ( "bn" == id ) 

  00dc4	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00dc7	50		 push	 eax
  00dc8	68 00 00 00 00	 push	 OFFSET FLAT:$SG149109
  00dcd	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00dd2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00dd7	85 c0		 test	 eax, eax
  00dd9	0f 84 ab 00 00
	00		 je	 $L149108

; 283  : 		CSCITalkButtonBtn *pButton = new CSCITalkButtonBtn( obj, this );

  00ddf	6a 18		 push	 24			; 00000018H
  00de1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00de6	83 c4 04	 add	 esp, 4
  00de9	89 45 90	 mov	 DWORD PTR $T155191[ebp], eax
  00dec	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00df0	83 7d 90 00	 cmp	 DWORD PTR $T155191[ebp], 0
  00df4	74 3a		 je	 SHORT $L155193
  00df6	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00dfc	51		 push	 ecx
  00dfd	83 ec 08	 sub	 esp, 8
  00e00	8b cc		 mov	 ecx, esp
  00e02	89 65 8c	 mov	 DWORD PTR $T155192[ebp], esp
  00e05	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00e08	52		 push	 edx
  00e09	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00e0e	89 85 30 ff ff
	ff		 mov	 DWORD PTR -208+[ebp], eax
  00e14	8b 4d 90	 mov	 ecx, DWORD PTR $T155191[ebp]
  00e17	e8 00 00 00 00	 call	 ??0CSCITalkButtonBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSCITalkButtonBtn::CSCITalkButtonBtn
  00e1c	89 85 2c ff ff
	ff		 mov	 DWORD PTR -212+[ebp], eax
  00e22	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR -212+[ebp]
  00e28	89 85 28 ff ff
	ff		 mov	 DWORD PTR -216+[ebp], eax
  00e2e	eb 0a		 jmp	 SHORT $L155194
$L155193:
  00e30	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -216+[ebp], 0
$L155194:
  00e3a	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR -216+[ebp]
  00e40	89 4d 94	 mov	 DWORD PTR $T155190[ebp], ecx
  00e43	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00e47	8b 55 94	 mov	 edx, DWORD PTR $T155190[ebp]
  00e4a	89 55 e4	 mov	 DWORD PTR _pButton$149110[ebp], edx

; 284  : 		pButton->Disable();

  00e4d	8b 45 e4	 mov	 eax, DWORD PTR _pButton$149110[ebp]
  00e50	8b 10		 mov	 edx, DWORD PTR [eax]
  00e52	8b 4d e4	 mov	 ecx, DWORD PTR _pButton$149110[ebp]
  00e55	ff 52 0c	 call	 DWORD PTR [edx+12]

; 285  : 		return pButton;

  00e58	8b 45 e4	 mov	 eax, DWORD PTR _pButton$149110[ebp]
  00e5b	89 45 88	 mov	 DWORD PTR $T155195[ebp], eax
  00e5e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e62	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00e65	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00e6a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00e6e	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00e71	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00e76	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e7d	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00e80	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00e85	8b 45 88	 mov	 eax, DWORD PTR $T155195[ebp]
  00e88	eb 5b		 jmp	 SHORT $L149049
$L149108:

; 287  : 
; 288  : 	// Let the parent make the field
; 289  : 	return CSkinWnd::MakeSkinCtrl( obj );

  00e8a	83 ec 08	 sub	 esp, 8
  00e8d	8b cc		 mov	 ecx, esp
  00e8f	89 65 80	 mov	 DWORD PTR $T155197[ebp], esp
  00e92	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00e95	52		 push	 edx
  00e96	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00e9b	89 85 24 ff ff
	ff		 mov	 DWORD PTR -220+[ebp], eax
  00ea1	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00ea7	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  00eac	89 85 20 ff ff
	ff		 mov	 DWORD PTR -224+[ebp], eax
  00eb2	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR -224+[ebp]
  00eb8	89 45 84	 mov	 DWORD PTR $T155196[ebp], eax
  00ebb	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ebf	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00ec2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00ec7	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ecb	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00ece	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00ed3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00eda	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00edd	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00ee2	8b 45 84	 mov	 eax, DWORD PTR $T155196[ebp]
$L149049:

; 290  : }

  00ee5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00ee8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00eef	8b e5		 mov	 esp, ebp
  00ef1	5d		 pop	 ebp
  00ef2	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L155198:
  000a4	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000a7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000ac	c3		 ret	 0
$L155199:
  000ad	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  000b0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000b5	c3		 ret	 0
$L155200:
  000b6	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  000b9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000be	c3		 ret	 0
$L155201:
  000bf	8b 45 dc	 mov	 eax, DWORD PTR $T155158[ebp]
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000c8	c3		 ret	 0
$L155203:
  000c9	8b 45 cc	 mov	 eax, DWORD PTR $T155166[ebp]
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000d2	c3		 ret	 0
$L155205:
  000d3	8b 45 bc	 mov	 eax, DWORD PTR $T155174[ebp]
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000dc	59		 pop	 ecx
  000dd	c3		 ret	 0
$L155207:
  000de	8b 45 ac	 mov	 eax, DWORD PTR $T155180[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000e7	59		 pop	 ecx
  000e8	c3		 ret	 0
$L155211:
  000e9	8b 45 90	 mov	 eax, DWORD PTR $T155191[ebp]
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000f2	59		 pop	 ecx
  000f3	c3		 ret	 0
$L155216:
  000f4	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155215
  000f9	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CTalkDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CTalkDlg::MakeSkinCtrl
PUBLIC	??_ECTalkListCtrl@@WEA@AEPAXI@Z			; CTalkListCtrl::`vector deleting destructor'
PUBLIC	??_ECTalkListCtrl@@WHE@AEPAXI@Z			; CTalkListCtrl::`vector deleting destructor'
PUBLIC	?GetItemTextColor@CSkinListCtrl@@MAEKH@Z	; CSkinListCtrl::GetItemTextColor
PUBLIC	?GetItemBGColor@CSkinListCtrl@@MAEKH@Z		; CSkinListCtrl::GetItemBGColor
PUBLIC	?OnItemActivate@CTalkListCtrl@@UAEXH_N@Z	; CTalkListCtrl::OnItemActivate
PUBLIC	?OnMouseOver@CTalkListCtrl@@UAEXVCPoint@@@Z	; CTalkListCtrl::OnMouseOver
PUBLIC	??_7CTalkListCtrl@@6BCListCtrl@@@		; CTalkListCtrl::`vftable'
PUBLIC	??_7CTalkListCtrl@@6BCSkinCtrl@@@		; CTalkListCtrl::`vftable'
PUBLIC	??_7CTalkListCtrl@@6BCScrollable@@@		; CTalkListCtrl::`vftable'
PUBLIC	??_7CTalkListCtrl@@6BCMouseWheelable@@@		; CTalkListCtrl::`vftable'
PUBLIC	??_GCTalkListCtrl@@UAEPAXI@Z			; CTalkListCtrl::`scalar deleting destructor'
PUBLIC	??_ECTalkListCtrl@@UAEPAXI@Z			; CTalkListCtrl::`vector deleting destructor'
EXTRN	?OnMouseDown@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseDown
EXTRN	?OnMouseUp@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseUp
EXTRN	?OnActivate@CSkinCtrl@@UAEXFF@Z:NEAR		; CSkinCtrl::OnActivate
EXTRN	?SetLocation@CScrollable@@UAEXM@Z:NEAR		; CScrollable::SetLocation
EXTRN	?ChangeLocation@CScrollable@@UAEXH@Z:NEAR	; CScrollable::ChangeLocation
EXTRN	?ChangePage@CScrollable@@UAEXH@Z:NEAR		; CScrollable::ChangePage
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?SetRange@CScrollable@@UAEXHH@Z:NEAR		; CScrollable::SetRange
EXTRN	??0CSkinListCtrl@@QAE@H@Z:NEAR			; CSkinListCtrl::CSkinListCtrl
EXTRN	?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ:NEAR ; CListCtrl::GetRuntimeClass
EXTRN	?UpdateMe@CSkinListCtrl@@UAEXXZ:NEAR		; CSkinListCtrl::UpdateMe
EXTRN	?UpdateScrollBar@CSkinListCtrl@@UAEXXZ:NEAR	; CSkinListCtrl::UpdateScrollBar
EXTRN	?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z:NEAR	; CSkinListCtrl::OnMouseWheel
EXTRN	?GetMessageMap@CSkinListCtrl@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinListCtrl::GetMessageMap
EXTRN	?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:NEAR ; CListCtrl::DrawItem
EXTRN	?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z:NEAR	; CListCtrl::OnChildNotify
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?Refresh@CSkinCtrl@@UAEXXZ:NEAR			; CSkinCtrl::Refresh
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
;	COMDAT ??_7CTalkListCtrl@@6BCListCtrl@@@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\TalkDlg.cpp
CONST	SEGMENT
??_7CTalkListCtrl@@6BCListCtrl@@@ DD FLAT:?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ ; CTalkListCtrl::`vftable'
	DD	FLAT:??_ECTalkListCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinListCtrl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?GetItemTextColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?OnItemActivate@CTalkListCtrl@@UAEXH_N@Z
	DD	FLAT:?OnMouseOver@CTalkListCtrl@@UAEXVCPoint@@@Z
CONST	ENDS
;	COMDAT ??_7CTalkListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CTalkListCtrl@@6BCSkinCtrl@@@ DD FLAT:??_ECTalkListCtrl@@WEA@AEPAXI@Z ; CTalkListCtrl::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CTalkListCtrl@@6BCScrollable@@@
CONST	SEGMENT
??_7CTalkListCtrl@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinListCtrl@@UAEXXZ ; CTalkListCtrl::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CScrollable@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CSkinListCtrl@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CTalkListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CTalkListCtrl@@6BCMouseWheelable@@@ DD FLAT:??_ECTalkListCtrl@@WHE@AEPAXI@Z ; CTalkListCtrl::`vftable'
	DD	FLAT:?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z
CONST	ENDS
;	COMDAT ??0CTalkListCtrl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CTalkListCtrl@@QAE@XZ PROC NEAR			; CTalkListCtrl::CTalkListCtrl, COMDAT

; 26   : 	CTalkListCtrl() {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 5a		 push	 90			; 0000005aH
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CSkinListCtrl@@QAE@H@Z ; CSkinListCtrl::CSkinListCtrl
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTalkListCtrl@@6BCListCtrl@@@ ; CTalkListCtrl::`vftable'
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CTalkListCtrl@@6BCSkinCtrl@@@ ; CTalkListCtrl::`vftable'
  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	c7 42 54 00 00
	00 00		 mov	 DWORD PTR [edx+84], OFFSET FLAT:??_7CTalkListCtrl@@6BCScrollable@@@ ; CTalkListCtrl::`vftable'
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CTalkListCtrl@@6BCMouseWheelable@@@ ; CTalkListCtrl::`vftable'
  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??0CTalkListCtrl@@QAE@XZ ENDP				; CTalkListCtrl::CTalkListCtrl
_TEXT	ENDS
PUBLIC	?ExecuteTalk@CTalkDlg@@QAEXH@Z			; CTalkDlg::ExecuteTalk
;	COMDAT ?OnItemActivate@CTalkListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT
_nItemIndex$ = 8
_this$ = -4
?OnItemActivate@CTalkListCtrl@@UAEXH_N@Z PROC NEAR	; CTalkListCtrl::OnItemActivate, COMDAT

; 31   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 32   : 		if (m_pParentWnd)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 50 00	 cmp	 DWORD PTR [eax+80], 0
  0000e	74 0f		 je	 SHORT $L148926

; 33   : 			((CTalkDlg*) m_pParentWnd)->ExecuteTalk( nItemIndex );

  00010	8b 4d 08	 mov	 ecx, DWORD PTR _nItemIndex$[ebp]
  00013	51		 push	 ecx
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  0001a	e8 00 00 00 00	 call	 ?ExecuteTalk@CTalkDlg@@QAEXH@Z ; CTalkDlg::ExecuteTalk
$L148926:

; 34   : 	};

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
?OnItemActivate@CTalkListCtrl@@UAEXH_N@Z ENDP		; CTalkListCtrl::OnItemActivate
_TEXT	ENDS
EXTRN	?g_hArrowCursor@@3PAUHICON__@@A:DWORD		; g_hArrowCursor
EXTRN	?g_hWaitCursor@@3PAUHICON__@@A:DWORD		; g_hWaitCursor
EXTRN	?HandsAreOff@@YA_NXZ:NEAR			; HandsAreOff
EXTRN	__imp__SetCursor@4:NEAR
;	COMDAT ?OnMouseOver@CTalkListCtrl@@UAEXVCPoint@@@Z
_TEXT	SEGMENT
_this$ = -4
?OnMouseOver@CTalkListCtrl@@UAEXVCPoint@@@Z PROC NEAR	; CTalkListCtrl::OnMouseOver, COMDAT

; 37   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 38   : 		if ( HandsAreOff() ) {

  00007	e8 00 00 00 00	 call	 ?HandsAreOff@@YA_NXZ	; HandsAreOff
  0000c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00011	85 c0		 test	 eax, eax
  00013	74 0e		 je	 SHORT $L148930

; 39   : 			SetCursor ( g_hWaitCursor );

  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_hWaitCursor@@3PAUHICON__@@A ; g_hWaitCursor
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 40   : 		} else {

  00021	eb 0d		 jmp	 SHORT $L148931
$L148930:

; 41   : 			SetCursor ( g_hArrowCursor );

  00023	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_hArrowCursor@@3PAUHICON__@@A ; g_hArrowCursor
  00029	51		 push	 ecx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4
$L148931:

; 43   : 	};

  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
?OnMouseOver@CTalkListCtrl@@UAEXVCPoint@@@Z ENDP	; CTalkListCtrl::OnMouseOver
_TEXT	ENDS
PUBLIC	??1CTalkListCtrl@@UAE@XZ			; CTalkListCtrl::~CTalkListCtrl
;	COMDAT ??_GCTalkListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCTalkListCtrl@@UAEPAXI@Z PROC NEAR			; CTalkListCtrl::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CTalkListCtrl@@UAE@XZ ; CTalkListCtrl::~CTalkListCtrl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L148935
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L148935:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCTalkListCtrl@@UAEPAXI@Z ENDP			; CTalkListCtrl::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSkinListCtrl@@UAE@XZ:NEAR			; CSkinListCtrl::~CSkinListCtrl
;	COMDAT ??1CTalkListCtrl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CTalkListCtrl@@UAE@XZ PROC NEAR			; CTalkListCtrl::~CTalkListCtrl, COMDAT

; 27   : 	virtual ~CTalkListCtrl() {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTalkListCtrl@@6BCListCtrl@@@ ; CTalkListCtrl::`vftable'
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CTalkListCtrl@@6BCSkinCtrl@@@ ; CTalkListCtrl::`vftable'
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 54 00 00
	00 00		 mov	 DWORD PTR [edx+84], OFFSET FLAT:??_7CTalkListCtrl@@6BCScrollable@@@ ; CTalkListCtrl::`vftable'
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CTalkListCtrl@@6BCMouseWheelable@@@ ; CTalkListCtrl::`vftable'
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??1CSkinListCtrl@@UAE@XZ ; CSkinListCtrl::~CSkinListCtrl
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
??1CTalkListCtrl@@UAE@XZ ENDP				; CTalkListCtrl::~CTalkListCtrl
_TEXT	ENDS
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149125
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149125:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?ExecuteButton@CTalkDlg@@QAEXH@Z		; CTalkDlg::ExecuteButton
PUBLIC	?Execute@CSCIObjectMethod@@QAE_NXZ		; CSCIObjectMethod::Execute
_TEXT	SEGMENT
_nID$ = 8
_this$ = -4
?ExecuteButton@CTalkDlg@@QAEXH@Z PROC NEAR		; CTalkDlg::ExecuteButton

; 294  : {

  00ef5	55		 push	 ebp
  00ef6	8b ec		 mov	 ebp, esp
  00ef8	51		 push	 ecx
  00ef9	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 295  : 	// Only process button presses (let a press of button 0 fall through to the deconstructor)
; 296  : 	if ( nID > 0 && nID <= m_nButtons ) 

  00efc	83 7d 08 00	 cmp	 DWORD PTR _nID$[ebp], 0
  00f00	7e 43		 jle	 SHORT $L149131
  00f02	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00f05	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  00f08	3b 88 08 01 00
	00		 cmp	 ecx, DWORD PTR [eax+264]
  00f0e	7f 35		 jg	 SHORT $L149131

; 298  : 		if (m_ButtonVector[nID-1]->Execute())

  00f10	8b 55 08	 mov	 edx, DWORD PTR _nID$[ebp]
  00f13	83 ea 01	 sub	 edx, 1
  00f16	52		 push	 edx
  00f17	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f1a	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  00f20	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
  00f25	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f27	e8 00 00 00 00	 call	 ?Execute@CSCIObjectMethod@@QAE_NXZ ; CSCIObjectMethod::Execute
  00f2c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00f31	85 c0		 test	 eax, eax
  00f33	74 10		 je	 SHORT $L149131

; 300  : 			// Close the dialog
; 301  : 			CloseSelf();

  00f35	6a 00		 push	 0
  00f37	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00f3a	8b 10		 mov	 edx, DWORD PTR [eax]
  00f3c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f3f	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L149131:

; 304  : }

  00f45	8b e5		 mov	 esp, ebp
  00f47	5d		 pop	 ebp
  00f48	c2 04 00	 ret	 4
?ExecuteButton@CTalkDlg@@QAEXH@Z ENDP			; CTalkDlg::ExecuteButton
_nID$ = 8
_this$ = -4
?ExecuteTalk@CTalkDlg@@QAEXH@Z PROC NEAR		; CTalkDlg::ExecuteTalk

; 308  : {

  00f4b	55		 push	 ebp
  00f4c	8b ec		 mov	 ebp, esp
  00f4e	51		 push	 ecx
  00f4f	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 309  : 	// Only process button presses (let a press of button 0 fall through to the deconstructor)
; 310  : 	if ( nID >= 0 && nID < m_nTalkPaths ) 

  00f52	83 7d 08 00	 cmp	 DWORD PTR _nID$[ebp], 0
  00f56	7c 40		 jl	 SHORT $L149137
  00f58	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00f5b	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  00f5e	3b 88 0c 01 00
	00		 cmp	 ecx, DWORD PTR [eax+268]
  00f64	7d 32		 jge	 SHORT $L149137

; 312  : 		if (m_TalkVector[nID]->Execute())

  00f66	8b 55 08	 mov	 edx, DWORD PTR _nID$[ebp]
  00f69	52		 push	 edx
  00f6a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f6d	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  00f73	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
  00f78	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f7a	e8 00 00 00 00	 call	 ?Execute@CSCIObjectMethod@@QAE_NXZ ; CSCIObjectMethod::Execute
  00f7f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00f84	85 c0		 test	 eax, eax
  00f86	74 10		 je	 SHORT $L149137

; 314  : 			// Close the dialog
; 315  : 			CloseSelf();

  00f88	6a 00		 push	 0
  00f8a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00f8d	8b 10		 mov	 edx, DWORD PTR [eax]
  00f8f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f92	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L149137:

; 318  : }

  00f98	8b e5		 mov	 esp, ebp
  00f9a	5d		 pop	 ebp
  00f9b	c2 04 00	 ret	 4
?ExecuteTalk@CTalkDlg@@QAEXH@Z ENDP			; CTalkDlg::ExecuteTalk
_TEXT	ENDS
PUBLIC	?AddButton@CTalkDlg@@QAEXPADVCSCI_Object@@FFF@Z	; CTalkDlg::AddButton
PUBLIC	??0CSCI_Object@@QAE@ABV0@@Z			; CSCI_Object::CSCI_Object
PUBLIC	??0CSCIObjectMethod@@QAE@PBDVCSCI_Object@@FFF@Z	; CSCIObjectMethod::CSCIObjectMethod
PUBLIC	?push_back@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXABQAVCSCIObjectMethod@@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::push_back
xdata$x	SEGMENT
$T155237 DD	019930520H
	DD	01H
	DD	FLAT:$T155239
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155239 DD	0ffffffffH
	DD	FLAT:$L155235
xdata$x	ENDS
_TEXT	SEGMENT
$T155230 = -20
$T155231 = -24
$T155232 = -28
__$EHRec$ = -12
_psButtonName$ = 8
_Object$ = 12
_nMethod$ = 16
_nValue$ = 20
_nClose$ = 24
_this$ = -32
_pObject$ = -16
?AddButton@CTalkDlg@@QAEXPADVCSCI_Object@@FFF@Z PROC NEAR ; CTalkDlg::AddButton

; 322  : {

  00f9e	55		 push	 ebp
  00f9f	8b ec		 mov	 ebp, esp
  00fa1	6a ff		 push	 -1
  00fa3	68 00 00 00 00	 push	 $L155238
  00fa8	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00fae	50		 push	 eax
  00faf	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00fb6	83 ec 18	 sub	 esp, 24			; 00000018H
  00fb9	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 323  : 	// Have all our slots been used up?
; 324  : 	if (m_nButtons >= MAX_TALK_BUTTONS)

  00fbc	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00fbf	83 b8 08 01 00
	00 04		 cmp	 DWORD PTR [eax+264], 4
  00fc6	7c 05		 jl	 SHORT $L149146

; 326  : 		return;

  00fc8	e9 90 00 00 00	 jmp	 $L149145
$L149146:

; 328  : 
; 329  : 	// Create the button object
; 330  : 	CSCIObjectMethod* pObject = new CSCIObjectMethod( psButtonName, Object, nMethod, nValue, nClose);

  00fcd	6a 0c		 push	 12			; 0000000cH
  00fcf	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00fd4	83 c4 04	 add	 esp, 4
  00fd7	89 45 e8	 mov	 DWORD PTR $T155231[ebp], eax
  00fda	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00fe1	83 7d e8 00	 cmp	 DWORD PTR $T155231[ebp], 0
  00fe5	74 2f		 je	 SHORT $L155233
  00fe7	66 8b 4d 18	 mov	 cx, WORD PTR _nClose$[ebp]
  00feb	51		 push	 ecx
  00fec	66 8b 55 14	 mov	 dx, WORD PTR _nValue$[ebp]
  00ff0	52		 push	 edx
  00ff1	66 8b 45 10	 mov	 ax, WORD PTR _nMethod$[ebp]
  00ff5	50		 push	 eax
  00ff6	51		 push	 ecx
  00ff7	8b cc		 mov	 ecx, esp
  00ff9	89 65 e4	 mov	 DWORD PTR $T155232[ebp], esp
  00ffc	8d 55 0c	 lea	 edx, DWORD PTR _Object$[ebp]
  00fff	52		 push	 edx
  01000	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  01005	8b 45 08	 mov	 eax, DWORD PTR _psButtonName$[ebp]
  01008	50		 push	 eax
  01009	8b 4d e8	 mov	 ecx, DWORD PTR $T155231[ebp]
  0100c	e8 00 00 00 00	 call	 ??0CSCIObjectMethod@@QAE@PBDVCSCI_Object@@FFF@Z ; CSCIObjectMethod::CSCIObjectMethod
  01011	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  01014	eb 07		 jmp	 SHORT $L155234
$L155233:
  01016	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L155234:
  0101d	8b 4d dc	 mov	 ecx, DWORD PTR -36+[ebp]
  01020	89 4d ec	 mov	 DWORD PTR $T155230[ebp], ecx
  01023	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0102a	8b 55 ec	 mov	 edx, DWORD PTR $T155230[ebp]
  0102d	89 55 f0	 mov	 DWORD PTR _pObject$[ebp], edx

; 331  : 
; 332  : 	if (pObject)

  01030	83 7d f0 00	 cmp	 DWORD PTR _pObject$[ebp], 0
  01034	74 27		 je	 SHORT $L149153

; 334  : 		m_nButtons++;

  01036	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  01039	8b 88 08 01 00
	00		 mov	 ecx, DWORD PTR [eax+264]
  0103f	83 c1 01	 add	 ecx, 1
  01042	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  01045	89 8a 08 01 00
	00		 mov	 DWORD PTR [edx+264], ecx

; 335  : 
; 336  : 		// link it to the id of the button
; 337  : 		m_ButtonVector.push_back( pObject );

  0104b	8d 45 f0	 lea	 eax, DWORD PTR _pObject$[ebp]
  0104e	50		 push	 eax
  0104f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01052	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  01058	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXABQAVCSCIObjectMethod@@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::push_back
$L149153:
$L149145:

; 339  : }

  0105d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01060	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01067	8b e5		 mov	 esp, ebp
  01069	5d		 pop	 ebp
  0106a	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
text$x	SEGMENT
$L155235:
  000fe	8b 45 e8	 mov	 eax, DWORD PTR $T155231[ebp]
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00107	59		 pop	 ecx
  00108	c3		 ret	 0
$L155238:
  00109	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155237
  0010e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddButton@CTalkDlg@@QAEXPADVCSCI_Object@@FFF@Z ENDP	; CTalkDlg::AddButton
PUBLIC	?AddTalkPath@CTalkDlg@@QAEXPADVCSCI_Object@@FFF@Z ; CTalkDlg::AddTalkPath
xdata$x	SEGMENT
$T155248 DD	019930520H
	DD	01H
	DD	FLAT:$T155250
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155250 DD	0ffffffffH
	DD	FLAT:$L155246
xdata$x	ENDS
_TEXT	SEGMENT
$T155241 = -20
$T155242 = -24
$T155243 = -28
__$EHRec$ = -12
_psTalk$ = 8
_Object$ = 12
_nMethod$ = 16
_nValue$ = 20
_nClose$ = 24
_this$ = -32
_pObject$ = -16
?AddTalkPath@CTalkDlg@@QAEXPADVCSCI_Object@@FFF@Z PROC NEAR ; CTalkDlg::AddTalkPath

; 343  : {

  0106d	55		 push	 ebp
  0106e	8b ec		 mov	 ebp, esp
  01070	6a ff		 push	 -1
  01072	68 00 00 00 00	 push	 $L155249
  01077	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0107d	50		 push	 eax
  0107e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01085	83 ec 18	 sub	 esp, 24			; 00000018H
  01088	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 344  : 	// Have all our slots been used up?
; 345  : 	if (m_nButtons >= MAX_TALK_LIST)

  0108b	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0108e	83 b8 08 01 00
	00 0a		 cmp	 DWORD PTR [eax+264], 10	; 0000000aH
  01095	7c 05		 jl	 SHORT $L149162

; 347  : 		return;

  01097	e9 98 00 00 00	 jmp	 $L149161
$L149162:

; 349  : 
; 350  : 	// Create the button object
; 351  : 	CSCIObjectMethod* pObject = new CSCIObjectMethod( psTalk, Object, nMethod, nValue, nClose==1);

  0109c	6a 0c		 push	 12			; 0000000cH
  0109e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  010a3	83 c4 04	 add	 esp, 4
  010a6	89 45 e8	 mov	 DWORD PTR $T155242[ebp], eax
  010a9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  010b0	83 7d e8 00	 cmp	 DWORD PTR $T155242[ebp], 0
  010b4	74 37		 je	 SHORT $L155244
  010b6	0f bf 4d 18	 movsx	 ecx, WORD PTR _nClose$[ebp]
  010ba	83 e9 01	 sub	 ecx, 1
  010bd	f7 d9		 neg	 ecx
  010bf	1b c9		 sbb	 ecx, ecx
  010c1	41		 inc	 ecx
  010c2	51		 push	 ecx
  010c3	66 8b 55 14	 mov	 dx, WORD PTR _nValue$[ebp]
  010c7	52		 push	 edx
  010c8	66 8b 45 10	 mov	 ax, WORD PTR _nMethod$[ebp]
  010cc	50		 push	 eax
  010cd	51		 push	 ecx
  010ce	8b cc		 mov	 ecx, esp
  010d0	89 65 e4	 mov	 DWORD PTR $T155243[ebp], esp
  010d3	8d 55 0c	 lea	 edx, DWORD PTR _Object$[ebp]
  010d6	52		 push	 edx
  010d7	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  010dc	8b 45 08	 mov	 eax, DWORD PTR _psTalk$[ebp]
  010df	50		 push	 eax
  010e0	8b 4d e8	 mov	 ecx, DWORD PTR $T155242[ebp]
  010e3	e8 00 00 00 00	 call	 ??0CSCIObjectMethod@@QAE@PBDVCSCI_Object@@FFF@Z ; CSCIObjectMethod::CSCIObjectMethod
  010e8	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  010eb	eb 07		 jmp	 SHORT $L155245
$L155244:
  010ed	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L155245:
  010f4	8b 4d dc	 mov	 ecx, DWORD PTR -36+[ebp]
  010f7	89 4d ec	 mov	 DWORD PTR $T155241[ebp], ecx
  010fa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01101	8b 55 ec	 mov	 edx, DWORD PTR $T155241[ebp]
  01104	89 55 f0	 mov	 DWORD PTR _pObject$[ebp], edx

; 352  : 
; 353  : 	if (pObject)

  01107	83 7d f0 00	 cmp	 DWORD PTR _pObject$[ebp], 0
  0110b	74 27		 je	 SHORT $L149169

; 355  : 		m_nTalkPaths++;

  0110d	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  01110	8b 88 0c 01 00
	00		 mov	 ecx, DWORD PTR [eax+268]
  01116	83 c1 01	 add	 ecx, 1
  01119	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0111c	89 8a 0c 01 00
	00		 mov	 DWORD PTR [edx+268], ecx

; 356  : 
; 357  : 		// link it to the id of the list entry
; 358  : 		m_TalkVector.push_back( pObject );

  01122	8d 45 f0	 lea	 eax, DWORD PTR _pObject$[ebp]
  01125	50		 push	 eax
  01126	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01129	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  0112f	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXABQAVCSCIObjectMethod@@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::push_back
$L149169:
$L149161:

; 360  : }

  01134	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01137	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0113e	8b e5		 mov	 esp, ebp
  01140	5d		 pop	 ebp
  01141	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
text$x	SEGMENT
$L155246:
  00113	8b 45 e8	 mov	 eax, DWORD PTR $T155242[ebp]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011c	59		 pop	 ecx
  0011d	c3		 ret	 0
$L155249:
  0011e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155248
  00123	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddTalkPath@CTalkDlg@@QAEXPADVCSCI_Object@@FFF@Z ENDP	; CTalkDlg::AddTalkPath
PUBLIC	?getClose@CSCIObjectMethod@@QAEFXZ		; CSCIObjectMethod::getClose
PUBLIC	?getTitle@CSCIObjectMethod@@QAE?AVCString@@XZ	; CSCIObjectMethod::getTitle
EXTRN	?SetText@CSkinObj@@QAEHAAVCString@@@Z:NEAR	; CSkinObj::SetText
EXTRN	__imp__sprintf:NEAR
EXTRN	?SetText@CSkinObj@@QAAHPADZZ:NEAR		; CSkinObj::SetText
EXTRN	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z:NEAR ; CSkinWnd::FindControl
_BSS	SEGMENT
$SG149182 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+1
$SG149179 DB	'bn_BText%02d', 00H
	ORG $+3
$SG149187 DB	'bn_BText%02d', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155255 DD	019930520H
	DD	01H
	DD	FLAT:$T155257
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155257 DD	0ffffffffH
	DD	FLAT:$L155253
xdata$x	ENDS
_TEXT	SEGMENT
$T155252 = -96
__$EHRec$ = -12
_this$ = -100
_i$ = -16
_nPos$ = -20
_sButtonID$149178 = -52
_pCtrl$149180 = -56
_sButtonID$149186 = -88
_pCtrl$149188 = -92
?UpdateButtons@CTalkDlg@@QAEXXZ PROC NEAR		; CTalkDlg::UpdateButtons

; 364  : {

  01144	55		 push	 ebp
  01145	8b ec		 mov	 ebp, esp
  01147	6a ff		 push	 -1
  01149	68 00 00 00 00	 push	 $L155256
  0114e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01154	50		 push	 eax
  01155	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0115c	83 ec 60	 sub	 esp, 96			; 00000060H
  0115f	89 4d 9c	 mov	 DWORD PTR _this$[ebp], ecx

; 365  : 	int i, nPos = 25;

  01162	c7 45 ec 19 00
	00 00		 mov	 DWORD PTR _nPos$[ebp], 25 ; 00000019H

; 366  : 
; 367  : 	// Hide the extra buttons 
; 368  : 	for (i = m_nButtons; i < MAX_TALK_BUTTONS;i++) 

  01169	8b 45 9c	 mov	 eax, DWORD PTR _this$[ebp]
  0116c	8b 88 08 01 00
	00		 mov	 ecx, DWORD PTR [eax+264]
  01172	89 4d f0	 mov	 DWORD PTR _i$[ebp], ecx
  01175	eb 09		 jmp	 SHORT $L149175
$L149176:
  01177	8b 55 f0	 mov	 edx, DWORD PTR _i$[ebp]
  0117a	83 c2 01	 add	 edx, 1
  0117d	89 55 f0	 mov	 DWORD PTR _i$[ebp], edx
$L149175:
  01180	83 7d f0 04	 cmp	 DWORD PTR _i$[ebp], 4
  01184	7d 57		 jge	 SHORT $L149177

; 370  : 		char sButtonID[32];
; 371  : 		sprintf(sButtonID, "bn_BText%02d", i+1);

  01186	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  01189	83 c0 01	 add	 eax, 1
  0118c	50		 push	 eax
  0118d	68 00 00 00 00	 push	 OFFSET FLAT:$SG149179
  01192	8d 4d cc	 lea	 ecx, DWORD PTR _sButtonID$149178[ebp]
  01195	51		 push	 ecx
  01196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  0119c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 372  : 		CSkinCtrl* pCtrl = FindControl( sButtonID );

  0119f	8d 55 cc	 lea	 edx, DWORD PTR _sButtonID$149178[ebp]
  011a2	52		 push	 edx
  011a3	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  011a6	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  011ab	89 45 c8	 mov	 DWORD PTR _pCtrl$149180[ebp], eax

; 373  : 		if (pCtrl) 

  011ae	83 7d c8 00	 cmp	 DWORD PTR _pCtrl$149180[ebp], 0
  011b2	74 27		 je	 SHORT $L149181

; 375  : 			pCtrl->SetText("");

  011b4	68 00 00 00 00	 push	 OFFSET FLAT:$SG149182
  011b9	8b 45 c8	 mov	 eax, DWORD PTR _pCtrl$149180[ebp]
  011bc	50		 push	 eax
  011bd	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  011c2	83 c4 08	 add	 esp, 8

; 376  : 			pCtrl->Disable();

  011c5	8b 4d c8	 mov	 ecx, DWORD PTR _pCtrl$149180[ebp]
  011c8	8b 11		 mov	 edx, DWORD PTR [ecx]
  011ca	8b 4d c8	 mov	 ecx, DWORD PTR _pCtrl$149180[ebp]
  011cd	ff 52 0c	 call	 DWORD PTR [edx+12]

; 377  : 			pCtrl->Refresh();

  011d0	8b 45 c8	 mov	 eax, DWORD PTR _pCtrl$149180[ebp]
  011d3	8b 10		 mov	 edx, DWORD PTR [eax]
  011d5	8b 4d c8	 mov	 ecx, DWORD PTR _pCtrl$149180[ebp]
  011d8	ff 52 08	 call	 DWORD PTR [edx+8]
$L149181:

; 379  : 	}

  011db	eb 9a		 jmp	 SHORT $L149176
$L149177:

; 380  : 
; 381  : 	// Show the valid ones
; 382  : 	for (i = 0;i < m_nButtons;i++) 

  011dd	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  011e4	eb 09		 jmp	 SHORT $L149183
$L149184:
  011e6	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  011e9	83 c0 01	 add	 eax, 1
  011ec	89 45 f0	 mov	 DWORD PTR _i$[ebp], eax
$L149183:
  011ef	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  011f2	8b 55 f0	 mov	 edx, DWORD PTR _i$[ebp]
  011f5	3b 91 08 01 00
	00		 cmp	 edx, DWORD PTR [ecx+264]
  011fb	0f 8d c3 00 00
	00		 jge	 $L149185

; 384  : 		// Set the button titles
; 385  : 		char sButtonID[32];
; 386  : 		sprintf(sButtonID, "bn_BText%02d", i+1);

  01201	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  01204	83 c0 01	 add	 eax, 1
  01207	50		 push	 eax
  01208	68 00 00 00 00	 push	 OFFSET FLAT:$SG149187
  0120d	8d 4d a8	 lea	 ecx, DWORD PTR _sButtonID$149186[ebp]
  01210	51		 push	 ecx
  01211	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  01217	83 c4 0c	 add	 esp, 12			; 0000000cH

; 387  : 		CSkinCtrl* pCtrl = FindControl( sButtonID );

  0121a	8d 55 a8	 lea	 edx, DWORD PTR _sButtonID$149186[ebp]
  0121d	52		 push	 edx
  0121e	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  01221	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  01226	89 45 a4	 mov	 DWORD PTR _pCtrl$149188[ebp], eax

; 388  : 
; 389  : 		if (pCtrl)

  01229	83 7d a4 00	 cmp	 DWORD PTR _pCtrl$149188[ebp], 0
  0122d	0f 84 8c 00 00
	00		 je	 $L149189

; 391  :             if ( m_ButtonVector[i]->getClose() == 2 )

  01233	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  01236	50		 push	 eax
  01237	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  0123a	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  01240	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
  01245	8b 08		 mov	 ecx, DWORD PTR [eax]
  01247	e8 00 00 00 00	 call	 ?getClose@CSCIObjectMethod@@QAEFXZ ; CSCIObjectMethod::getClose
  0124c	0f bf c8	 movsx	 ecx, ax
  0124f	83 f9 02	 cmp	 ecx, 2
  01252	75 0d		 jne	 SHORT $L149190

; 392  : 			    pCtrl->Disable();

  01254	8b 55 a4	 mov	 edx, DWORD PTR _pCtrl$149188[ebp]
  01257	8b 02		 mov	 eax, DWORD PTR [edx]
  01259	8b 4d a4	 mov	 ecx, DWORD PTR _pCtrl$149188[ebp]
  0125c	ff 50 0c	 call	 DWORD PTR [eax+12]

; 393  :             else

  0125f	eb 0b		 jmp	 SHORT $L149191
$L149190:

; 394  : 			    pCtrl->Enable();

  01261	8b 4d a4	 mov	 ecx, DWORD PTR _pCtrl$149188[ebp]
  01264	8b 11		 mov	 edx, DWORD PTR [ecx]
  01266	8b 4d a4	 mov	 ecx, DWORD PTR _pCtrl$149188[ebp]
  01269	ff 52 14	 call	 DWORD PTR [edx+20]
$L149191:

; 395  :             
; 396  :             pCtrl->Refresh();

  0126c	8b 45 a4	 mov	 eax, DWORD PTR _pCtrl$149188[ebp]
  0126f	8b 10		 mov	 edx, DWORD PTR [eax]
  01271	8b 4d a4	 mov	 ecx, DWORD PTR _pCtrl$149188[ebp]
  01274	ff 52 08	 call	 DWORD PTR [edx+8]

; 397  : 			pCtrl->SetText( m_ButtonVector[i]->getTitle() );

  01277	8d 45 a0	 lea	 eax, DWORD PTR $T155252[ebp]
  0127a	50		 push	 eax
  0127b	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  0127e	51		 push	 ecx
  0127f	8b 4d 9c	 mov	 ecx, DWORD PTR _this$[ebp]
  01282	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  01288	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
  0128d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0128f	e8 00 00 00 00	 call	 ?getTitle@CSCIObjectMethod@@QAE?AVCString@@XZ ; CSCIObjectMethod::getTitle
  01294	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  01297	8b 55 98	 mov	 edx, DWORD PTR -104+[ebp]
  0129a	89 55 94	 mov	 DWORD PTR -108+[ebp], edx
  0129d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  012a4	8b 45 94	 mov	 eax, DWORD PTR -108+[ebp]
  012a7	50		 push	 eax
  012a8	8b 4d a4	 mov	 ecx, DWORD PTR _pCtrl$149188[ebp]
  012ab	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAEHAAVCString@@@Z ; CSkinObj::SetText
  012b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  012b7	8d 4d a0	 lea	 ecx, DWORD PTR $T155252[ebp]
  012ba	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L149189:

; 399  : 	}

  012bf	e9 22 ff ff ff	 jmp	 $L149184
$L149185:

; 400  : }

  012c4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  012c7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  012ce	8b e5		 mov	 esp, ebp
  012d0	5d		 pop	 ebp
  012d1	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155253:
  00128	8d 4d a0	 lea	 ecx, DWORD PTR $T155252[ebp]
  0012b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00130	c3		 ret	 0
$L155256:
  00131	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155255
  00136	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UpdateButtons@CTalkDlg@@QAEXXZ ENDP			; CTalkDlg::UpdateButtons
EXTRN	?GetBuffer@CString@@QAEPADH@Z:NEAR		; CString::GetBuffer
EXTRN	?AddLine@CSkinListCtrl@@QAAHHHZZ:NEAR		; CSkinListCtrl::AddLine
EXTRN	?DeleteAllItems@CSkinListCtrl@@QAEHXZ:NEAR	; CSkinListCtrl::DeleteAllItems
EXTRN	?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z:NEAR	; CWnd::SetWindowPos
xdata$x	SEGMENT
$T155262 DD	019930520H
	DD	01H
	DD	FLAT:$T155264
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155264 DD	0ffffffffH
	DD	FLAT:$L155260
xdata$x	ENDS
_TEXT	SEGMENT
$T155259 = -52
__$EHRec$ = -12
_this$ = -56
_i$ = -16
_rect1$ = -32
_rect2$ = -48
?UpdateTalk@CTalkDlg@@QAEXXZ PROC NEAR			; CTalkDlg::UpdateTalk

; 404  : {

  012d2	55		 push	 ebp
  012d3	8b ec		 mov	 ebp, esp
  012d5	6a ff		 push	 -1
  012d7	68 00 00 00 00	 push	 $L155263
  012dc	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  012e2	50		 push	 eax
  012e3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  012ea	83 ec 34	 sub	 esp, 52			; 00000034H
  012ed	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx

; 405  : 	int i;
; 406  : 	RECT rect1, rect2;
; 407  : 
; 408  : 	if (!m_pTalk || !m_pBio) return;

  012f0	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  012f3	83 b8 98 00 00
	00 00		 cmp	 DWORD PTR [eax+152], 0
  012fa	74 0c		 je	 SHORT $L149200
  012fc	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  012ff	83 b9 94 00 00
	00 00		 cmp	 DWORD PTR [ecx+148], 0
  01306	75 05		 jne	 SHORT $L149199
$L149200:
  01308	e9 2f 01 00 00	 jmp	 $L149195
$L149199:

; 409  : 
; 410  : 	m_pTalk->GetWindowRect(&rect1);

  0130d	8d 55 e0	 lea	 edx, DWORD PTR _rect1$[ebp]
  01310	52		 push	 edx
  01311	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  01314	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  0131a	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 411  : 	m_pBio->GetWindowRect(&rect2);

  0131f	8d 4d d0	 lea	 ecx, DWORD PTR _rect2$[ebp]
  01322	51		 push	 ecx
  01323	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  01326	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  0132c	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 412  : 
; 413  : 	// Clear all items from the list
; 414  : 	m_pTalk->DeleteAllItems();

  01331	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  01334	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  0133a	e8 00 00 00 00	 call	 ?DeleteAllItems@CSkinListCtrl@@QAEHXZ ; CSkinListCtrl::DeleteAllItems

; 415  : 
; 416  : 	if (m_nTalkPaths == 0)

  0133f	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  01342	83 b9 0c 01 00
	00 00		 cmp	 DWORD PTR [ecx+268], 0
  01349	75 39		 jne	 SHORT $L149201

; 418  : 		m_pTalk->ShowWindow( SW_HIDE );

  0134b	6a 00		 push	 0
  0134d	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  01350	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  01356	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 419  : 		m_pBio->SetWindowPos(0, 0, 0, rect2.right-rect2.left, rect1.bottom-rect2.top, SWP_NOZORDER | SWP_NOMOVE );

  0135b	6a 06		 push	 6
  0135d	8b 45 ec	 mov	 eax, DWORD PTR _rect1$[ebp+12]
  01360	2b 45 d4	 sub	 eax, DWORD PTR _rect2$[ebp+4]
  01363	50		 push	 eax
  01364	8b 4d d8	 mov	 ecx, DWORD PTR _rect2$[ebp+8]
  01367	2b 4d d0	 sub	 ecx, DWORD PTR _rect2$[ebp]
  0136a	51		 push	 ecx
  0136b	6a 00		 push	 0
  0136d	6a 00		 push	 0
  0136f	6a 00		 push	 0
  01371	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  01374	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  0137a	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 421  : 	else

  0137f	e9 b8 00 00 00	 jmp	 $L149202
$L149201:

; 423  : 		// Show titles
; 424  : 		for (i = 0;i < m_nTalkPaths;i++) 

  01384	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0138b	eb 09		 jmp	 SHORT $L149203
$L149204:
  0138d	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  01390	83 c0 01	 add	 eax, 1
  01393	89 45 f0	 mov	 DWORD PTR _i$[ebp], eax
$L149203:
  01396	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  01399	8b 55 f0	 mov	 edx, DWORD PTR _i$[ebp]
  0139c	3b 91 0c 01 00
	00		 cmp	 edx, DWORD PTR [ecx+268]
  013a2	7d 61		 jge	 SHORT $L149205

; 426  : 			m_pTalk->AddLine(i, 1, m_TalkVector[i]->getTitle().GetBuffer(0));

  013a4	6a 00		 push	 0
  013a6	8d 45 cc	 lea	 eax, DWORD PTR $T155259[ebp]
  013a9	50		 push	 eax
  013aa	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  013ad	51		 push	 ecx
  013ae	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  013b1	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  013b7	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
  013bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  013be	e8 00 00 00 00	 call	 ?getTitle@CSCIObjectMethod@@QAE?AVCString@@XZ ; CSCIObjectMethod::getTitle
  013c3	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  013c6	8b 55 c4	 mov	 edx, DWORD PTR -60+[ebp]
  013c9	89 55 c0	 mov	 DWORD PTR -64+[ebp], edx
  013cc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  013d3	8b 4d c0	 mov	 ecx, DWORD PTR -64+[ebp]
  013d6	e8 00 00 00 00	 call	 ?GetBuffer@CString@@QAEPADH@Z ; CString::GetBuffer
  013db	50		 push	 eax
  013dc	6a 01		 push	 1
  013de	8b 45 f0	 mov	 eax, DWORD PTR _i$[ebp]
  013e1	50		 push	 eax
  013e2	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  013e5	8b 91 98 00 00
	00		 mov	 edx, DWORD PTR [ecx+152]
  013eb	52		 push	 edx
  013ec	e8 00 00 00 00	 call	 ?AddLine@CSkinListCtrl@@QAAHHHZZ ; CSkinListCtrl::AddLine
  013f1	83 c4 10	 add	 esp, 16			; 00000010H
  013f4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  013fb	8d 4d cc	 lea	 ecx, DWORD PTR $T155259[ebp]
  013fe	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 427  : 		}

  01403	eb 88		 jmp	 SHORT $L149204
$L149205:

; 428  : 
; 429  : 		m_pBio->SetWindowPos(0, 0, 0, rect2.right-rect2.left, rect1.top-rect2.top-5, SWP_NOZORDER | SWP_NOMOVE );

  01405	6a 06		 push	 6
  01407	8b 45 e4	 mov	 eax, DWORD PTR _rect1$[ebp+4]
  0140a	2b 45 d4	 sub	 eax, DWORD PTR _rect2$[ebp+4]
  0140d	83 e8 05	 sub	 eax, 5
  01410	50		 push	 eax
  01411	8b 4d d8	 mov	 ecx, DWORD PTR _rect2$[ebp+8]
  01414	2b 4d d0	 sub	 ecx, DWORD PTR _rect2$[ebp]
  01417	51		 push	 ecx
  01418	6a 00		 push	 0
  0141a	6a 00		 push	 0
  0141c	6a 00		 push	 0
  0141e	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  01421	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  01427	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 430  : 		m_pTalk->ShowWindow( SW_SHOW );

  0142c	6a 05		 push	 5
  0142e	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  01431	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  01437	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L149202:
$L149195:

; 432  : }

  0143c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0143f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01446	8b e5		 mov	 esp, ebp
  01448	5d		 pop	 ebp
  01449	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155260:
  0013b	8d 4d cc	 lea	 ecx, DWORD PTR $T155259[ebp]
  0013e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00143	c3		 ret	 0
$L155263:
  00144	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155262
  00149	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UpdateTalk@CTalkDlg@@QAEXXZ ENDP			; CTalkDlg::UpdateTalk
PUBLIC	?ClearTalk@CTalkDlg@@QAEXXZ			; CTalkDlg::ClearTalk
_BSS	SEGMENT
	ALIGN	4

$SG149224 DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
$T155266 = -16
$T155267 = -20
$T155270 = -24
$T155271 = -28
_this$ = -32
_i$ = -8
_nBut$ = -4
_nTalk$ = -12
?ClearTalk@CTalkDlg@@QAEXXZ PROC NEAR			; CTalkDlg::ClearTalk

; 436  : {

  0144a	55		 push	 ebp
  0144b	8b ec		 mov	 ebp, esp
  0144d	83 ec 28	 sub	 esp, 40			; 00000028H
  01450	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 437  : 	int i;
; 438  : 	int nBut  = m_nButtons;

  01453	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  01456	8b 88 08 01 00
	00		 mov	 ecx, DWORD PTR [eax+264]
  0145c	89 4d fc	 mov	 DWORD PTR _nBut$[ebp], ecx

; 439  : 	int nTalk = m_nTalkPaths;

  0145f	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  01462	8b 82 0c 01 00
	00		 mov	 eax, DWORD PTR [edx+268]
  01468	89 45 f4	 mov	 DWORD PTR _nTalk$[ebp], eax

; 440  : 
; 441  : 	m_nButtons   = 0;

  0146b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0146e	c7 81 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+264], 0

; 442  : 	m_nTalkPaths = 0;

  01478	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0147b	c7 82 0c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+268], 0

; 443  : 
; 444  : 	for ( i = 0;i < m_nButtons;i++) 

  01485	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0148c	eb 09		 jmp	 SHORT $L149213
$L149214:
  0148e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01491	83 c0 01	 add	 eax, 1
  01494	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$L149213:
  01497	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0149a	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  0149d	3b 91 08 01 00
	00		 cmp	 edx, DWORD PTR [ecx+264]
  014a3	7d 3b		 jge	 SHORT $L149215

; 446  : 		delete m_ButtonVector [ i ];

  014a5	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  014a8	50		 push	 eax
  014a9	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  014ac	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  014b2	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
  014b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  014b9	89 4d ec	 mov	 DWORD PTR $T155267[ebp], ecx
  014bc	8b 55 ec	 mov	 edx, DWORD PTR $T155267[ebp]
  014bf	89 55 f0	 mov	 DWORD PTR $T155266[ebp], edx
  014c2	83 7d f0 00	 cmp	 DWORD PTR $T155266[ebp], 0
  014c6	74 0f		 je	 SHORT $L155268
  014c8	6a 01		 push	 1
  014ca	8b 4d f0	 mov	 ecx, DWORD PTR $T155266[ebp]
  014cd	e8 00 00 00 00	 call	 ??_GCSCIObjectMethod@@QAEPAXI@Z ; CSCIObjectMethod::`scalar deleting destructor'
  014d2	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  014d5	eb 07		 jmp	 SHORT $L155269
$L155268:
  014d7	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR -36+[ebp], 0
$L155269:

; 447  : 	}

  014de	eb ae		 jmp	 SHORT $L149214
$L149215:

; 448  : 
; 449  : 	m_ButtonVector.clear();

  014e0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  014e3	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  014e9	e8 00 00 00 00	 call	 ?clear@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXXZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::clear

; 450  : 
; 451  : 	for ( i = 0;i < m_nTalkPaths;i++) 

  014ee	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  014f5	eb 09		 jmp	 SHORT $L149218
$L149219:
  014f7	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  014fa	83 c0 01	 add	 eax, 1
  014fd	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$L149218:
  01500	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01503	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  01506	3b 91 0c 01 00
	00		 cmp	 edx, DWORD PTR [ecx+268]
  0150c	7d 3b		 jge	 SHORT $L149220

; 453  : 		delete m_TalkVector [ i ];

  0150e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01511	50		 push	 eax
  01512	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01515	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  0151b	e8 00 00 00 00	 call	 ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
  01520	8b 08		 mov	 ecx, DWORD PTR [eax]
  01522	89 4d e4	 mov	 DWORD PTR $T155271[ebp], ecx
  01525	8b 55 e4	 mov	 edx, DWORD PTR $T155271[ebp]
  01528	89 55 e8	 mov	 DWORD PTR $T155270[ebp], edx
  0152b	83 7d e8 00	 cmp	 DWORD PTR $T155270[ebp], 0
  0152f	74 0f		 je	 SHORT $L155272
  01531	6a 01		 push	 1
  01533	8b 4d e8	 mov	 ecx, DWORD PTR $T155270[ebp]
  01536	e8 00 00 00 00	 call	 ??_GCSCIObjectMethod@@QAEPAXI@Z ; CSCIObjectMethod::`scalar deleting destructor'
  0153b	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  0153e	eb 07		 jmp	 SHORT $L155273
$L155272:
  01540	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR -40+[ebp], 0
$L155273:

; 454  : 	}

  01547	eb ae		 jmp	 SHORT $L149219
$L149220:

; 455  : 
; 456  : 	m_TalkVector.clear();

  01549	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0154c	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  01552	e8 00 00 00 00	 call	 ?clear@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXXZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::clear

; 457  : 
; 458  : 	if ( m_pBio ) 

  01557	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0155a	83 b8 94 00 00
	00 00		 cmp	 DWORD PTR [eax+148], 0
  01561	74 13		 je	 SHORT $L149223

; 460  : 		m_pBio->SetText( "" );

  01563	68 00 00 00 00	 push	 OFFSET FLAT:$SG149224
  01568	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0156b	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  01571	e8 00 00 00 00	 call	 ?SetText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::SetText
$L149223:

; 462  : 
; 463  :     // Restore starting positions
; 464  :     if (m_pBio)          m_pBio->MoveWindow ( &rBioRect, false );

  01576	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  01579	83 ba 94 00 00
	00 00		 cmp	 DWORD PTR [edx+148], 0
  01580	74 19		 je	 SHORT $L149225
  01582	6a 00		 push	 0
  01584	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  01587	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  0158c	50		 push	 eax
  0158d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01590	8b 89 94 00 00
	00		 mov	 ecx, DWORD PTR [ecx+148]
  01596	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow
$L149225:

; 465  :     if (m_pTalk)         m_pTalk->MoveWindow ( &rTalkRect, false );

  0159b	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0159e	83 ba 98 00 00
	00 00		 cmp	 DWORD PTR [edx+152], 0
  015a5	74 19		 je	 SHORT $L149226
  015a7	6a 00		 push	 0
  015a9	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  015ac	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  015b1	50		 push	 eax
  015b2	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  015b5	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  015bb	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow
$L149226:

; 466  :     if (m_pScrollBar)    m_pScrollBar->MoveTo ( rSbRect.left, rSbRect.top );

  015c0	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  015c3	83 ba 9c 00 00
	00 00		 cmp	 DWORD PTR [edx+156], 0
  015ca	74 22		 je	 SHORT $L149227
  015cc	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  015cf	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]
  015d5	51		 push	 ecx
  015d6	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  015d9	8b 82 d4 00 00
	00		 mov	 eax, DWORD PTR [edx+212]
  015df	50		 push	 eax
  015e0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  015e3	8b 89 9c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+156]
  015e9	e8 00 00 00 00	 call	 ?MoveTo@CSkinObj@@QAEHHH@Z ; CSkinObj::MoveTo
$L149227:

; 467  :     if (m_pBioScrollBar) m_pBioScrollBar->MoveTo ( 1000, rSbRect.top ); // In effect hide it

  015ee	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  015f1	83 ba a0 00 00
	00 00		 cmp	 DWORD PTR [edx+160], 0
  015f8	74 1d		 je	 SHORT $L149228
  015fa	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  015fd	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]
  01603	51		 push	 ecx
  01604	68 e8 03 00 00	 push	 1000			; 000003e8H
  01609	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0160c	8b 8a a0 00 00
	00		 mov	 ecx, DWORD PTR [edx+160]
  01612	e8 00 00 00 00	 call	 ?MoveTo@CSkinObj@@QAEHHH@Z ; CSkinObj::MoveTo
$L149228:

; 468  : 
; 469  : 	UpdateButtons();

  01617	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0161a	e8 00 00 00 00	 call	 ?UpdateButtons@CTalkDlg@@QAEXXZ ; CTalkDlg::UpdateButtons

; 470  : }

  0161f	8b e5		 mov	 esp, ebp
  01621	5d		 pop	 ebp
  01622	c3		 ret	 0
?ClearTalk@CTalkDlg@@QAEXXZ ENDP			; CTalkDlg::ClearTalk
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@XZ				; CSCI_Object::CSCI_Object
PUBLIC	??0CSCIObjectMethod@@QAE@XZ			; CSCIObjectMethod::CSCIObjectMethod
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
EXTRN	??4CString@@QAEABV0@PBD@Z:NEAR			; CString::operator=
_BSS	SEGMENT
	ALIGN	4

$SG149232 DB	01H DUP (?)
_BSS	ENDS
xdata$x	SEGMENT
$T155277 DD	019930520H
	DD	01H
	DD	FLAT:$T155279
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155279 DD	0ffffffffH
	DD	FLAT:$L155275
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??0CSCIObjectMethod@@QAE@XZ PROC NEAR			; CSCIObjectMethod::CSCIObjectMethod

; 474  : {

  01623	55		 push	 ebp
  01624	8b ec		 mov	 ebp, esp
  01626	6a ff		 push	 -1
  01628	68 00 00 00 00	 push	 $L155278
  0162d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01633	50		 push	 eax
  01634	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0163b	51		 push	 ecx
  0163c	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0163f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01642	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@XZ	; CSCI_Object::CSCI_Object
  01647	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0164a	83 c1 04	 add	 ecx, 4
  0164d	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  01652	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 475  : 	m_nMethod      = 0;

  01659	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0165c	66 c7 40 02 00
	00		 mov	 WORD PTR [eax+2], 0

; 476  : 	m_nClose       = 0;

  01662	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01665	66 c7 41 0a 00
	00		 mov	 WORD PTR [ecx+10], 0

; 477  : 	m_nValue       = 0;

  0166b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0166e	66 c7 42 08 00
	00		 mov	 WORD PTR [edx+8], 0

; 478  :     m_sButtonTitle = "";

  01674	68 00 00 00 00	 push	 OFFSET FLAT:$SG149232
  01679	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0167c	83 c1 04	 add	 ecx, 4
  0167f	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 479  : }

  01684	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0168b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0168e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01691	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01698	8b e5		 mov	 esp, ebp
  0169a	5d		 pop	 ebp
  0169b	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155275:
  0014e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	83 c1 04	 add	 ecx, 4
  00154	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00159	c3		 ret	 0
$L155278:
  0015a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155277
  0015f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSCIObjectMethod@@QAE@XZ ENDP			; CSCIObjectMethod::CSCIObjectMethod
_TEXT	SEGMENT
_this$ = -4
??1CSCIObjectMethod@@QAE@XZ PROC NEAR			; CSCIObjectMethod::~CSCIObjectMethod

; 482  : {

  0169c	55		 push	 ebp
  0169d	8b ec		 mov	 ebp, esp
  0169f	51		 push	 ecx
  016a0	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 483  : }

  016a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  016a6	83 c1 04	 add	 ecx, 4
  016a9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  016ae	8b e5		 mov	 esp, ebp
  016b0	5d		 pop	 ebp
  016b1	c3		 ret	 0
??1CSCIObjectMethod@@QAE@XZ ENDP			; CSCIObjectMethod::~CSCIObjectMethod
_TEXT	ENDS
xdata$x	SEGMENT
$T155285 DD	019930520H
	DD	01H
	DD	FLAT:$T155287
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155287 DD	0ffffffffH
	DD	FLAT:$L155283
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_psButtonName$ = 8
_Object$ = 12
_nMethod$ = 16
_nValue$ = 20
_nClose$ = 24
_this$ = -16
??0CSCIObjectMethod@@QAE@PBDVCSCI_Object@@FFF@Z PROC NEAR ; CSCIObjectMethod::CSCIObjectMethod

; 487  : {

  016b2	55		 push	 ebp
  016b3	8b ec		 mov	 ebp, esp
  016b5	6a ff		 push	 -1
  016b7	68 00 00 00 00	 push	 $L155286
  016bc	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  016c2	50		 push	 eax
  016c3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  016ca	51		 push	 ecx
  016cb	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  016ce	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  016d1	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@XZ	; CSCI_Object::CSCI_Object
  016d6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  016d9	83 c1 04	 add	 ecx, 4
  016dc	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  016e1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 488  : 	m_Object       = Object;

  016e8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  016eb	66 8b 4d 0c	 mov	 cx, WORD PTR _Object$[ebp]
  016ef	66 89 08	 mov	 WORD PTR [eax], cx

; 489  : 	m_nMethod      = nMethod;

  016f2	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  016f5	66 8b 45 10	 mov	 ax, WORD PTR _nMethod$[ebp]
  016f9	66 89 42 02	 mov	 WORD PTR [edx+2], ax

; 490  : 	m_nValue       = nValue;

  016fd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01700	66 8b 55 14	 mov	 dx, WORD PTR _nValue$[ebp]
  01704	66 89 51 08	 mov	 WORD PTR [ecx+8], dx

; 491  : 	m_nClose       = nClose;

  01708	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0170b	66 8b 4d 18	 mov	 cx, WORD PTR _nClose$[ebp]
  0170f	66 89 48 0a	 mov	 WORD PTR [eax+10], cx

; 492  : 	m_sButtonTitle = psButtonName;

  01713	8b 55 08	 mov	 edx, DWORD PTR _psButtonName$[ebp]
  01716	52		 push	 edx
  01717	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0171a	83 c1 04	 add	 ecx, 4
  0171d	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 493  : }

  01722	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01729	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0172c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0172f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01736	8b e5		 mov	 esp, ebp
  01738	5d		 pop	 ebp
  01739	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
text$x	SEGMENT
$L155283:
  00164	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	83 c1 04	 add	 ecx, 4
  0016a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0016f	c3		 ret	 0
$L155286:
  00170	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155285
  00175	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSCIObjectMethod@@QAE@PBDVCSCI_Object@@FFF@Z ENDP	; CSCIObjectMethod::CSCIObjectMethod
PUBLIC	??BMemID@@QBEGXZ				; MemID::operator unsigned short
EXTRN	?CallMethod@CSCI_Object@@QAEXFF@Z:NEAR		; CSCI_Object::CallMethod
_TEXT	SEGMENT
_this$ = -4
?Execute@CSCIObjectMethod@@QAE_NXZ PROC NEAR		; CSCIObjectMethod::Execute

; 497  : {

  0173c	55		 push	 ebp
  0173d	8b ec		 mov	 ebp, esp
  0173f	51		 push	 ecx
  01740	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 498  : 	if ( m_Object ) m_Object.CallMethod( m_nMethod, m_nValue);

  01743	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01746	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0174b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  01750	85 c0		 test	 eax, eax
  01752	74 18		 je	 SHORT $L149247
  01754	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01757	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  0175b	51		 push	 ecx
  0175c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0175f	66 8b 42 02	 mov	 ax, WORD PTR [edx+2]
  01763	50		 push	 eax
  01764	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01767	e8 00 00 00 00	 call	 ?CallMethod@CSCI_Object@@QAEXFF@Z ; CSCI_Object::CallMethod
$L149247:

; 499  : 	return m_nClose==1;

  0176c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0176f	0f bf 41 0a	 movsx	 eax, WORD PTR [ecx+10]
  01773	83 e8 01	 sub	 eax, 1
  01776	f7 d8		 neg	 eax
  01778	1b c0		 sbb	 eax, eax
  0177a	40		 inc	 eax

; 500  : }

  0177b	8b e5		 mov	 esp, ebp
  0177d	5d		 pop	 ebp
  0177e	c3		 ret	 0
?Execute@CSCIObjectMethod@@QAE_NXZ ENDP			; CSCIObjectMethod::Execute
_TEXT	ENDS
PUBLIC	??1CSkinBtn@@UAE@XZ				; CSkinBtn::~CSkinBtn
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	?OnActivate@CSCITalkButtonBtn@@UAEXFF@Z		; CSCITalkButtonBtn::OnActivate
PUBLIC	??_7CSCITalkButtonBtn@@6B@			; CSCITalkButtonBtn::`vftable'
PUBLIC	??_GCSCITalkButtonBtn@@UAEPAXI@Z		; CSCITalkButtonBtn::`scalar deleting destructor'
PUBLIC	??_ECSCITalkButtonBtn@@UAEPAXI@Z		; CSCITalkButtonBtn::`vector deleting destructor'
EXTRN	??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinBtn::CSkinBtn
EXTRN	?OnMouseDown@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseDown
EXTRN	?OnMouseUp@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseUp
EXTRN	?Refresh@CSkinBtn@@UAEXXZ:NEAR			; CSkinBtn::Refresh
EXTRN	?Right@CString@@QBE?AV1@H@Z:NEAR		; CString::Right
EXTRN	__imp__atoi:NEAR
;	COMDAT ??_7CSCITalkButtonBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\TalkDlg.cpp
CONST	SEGMENT
??_7CSCITalkButtonBtn@@6B@ DD FLAT:??_ECSCITalkButtonBtn@@UAEPAXI@Z ; CSCITalkButtonBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSCITalkButtonBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T155298 DD	019930520H
	DD	05H
	DD	FLAT:$T155300
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155300 DD	0ffffffffH
	DD	FLAT:$L155292
	DD	00H
	DD	FLAT:$L155294
	DD	01H
	DD	FLAT:$L155295
	DD	02H
	DD	FLAT:$L155296
	DD	01H
	DD	FLAT:$L155296
xdata$x	ENDS
_TEXT	SEGMENT
$T155290 = -20
$T155291 = -24
__$EHRec$ = -12
_obj$ = 8
_pParent$ = 16
_this$ = -28
_idStr$ = -16
??0CSCITalkButtonBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z PROC NEAR ; CSCITalkButtonBtn::CSCITalkButtonBtn

; 504  : {

  0177f	55		 push	 ebp
  01780	8b ec		 mov	 ebp, esp
  01782	6a ff		 push	 -1
  01784	68 00 00 00 00	 push	 $L155299
  01789	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0178f	50		 push	 eax
  01790	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01797	83 ec 20	 sub	 esp, 32			; 00000020H
  0179a	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  0179d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  017a4	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  017a7	50		 push	 eax
  017a8	83 ec 08	 sub	 esp, 8
  017ab	8b cc		 mov	 ecx, esp
  017ad	89 65 ec	 mov	 DWORD PTR $T155290[ebp], esp
  017b0	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  017b3	52		 push	 edx
  017b4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  017b9	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  017bc	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  017bf	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  017c4	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  017c7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  017cb	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  017ce	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSCITalkButtonBtn@@6B@ ; CSCITalkButtonBtn::`vftable'

; 505  : 	// setup our internal properties based on this control's name
; 506  : 	CString idStr = GetName().Right ( 2 );

  017d4	6a 02		 push	 2
  017d6	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  017d9	51		 push	 ecx
  017da	8d 55 e8	 lea	 edx, DWORD PTR $T155291[ebp]
  017dd	52		 push	 edx
  017de	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  017e1	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  017e6	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  017e9	8b 45 d8	 mov	 eax, DWORD PTR -40+[ebp]
  017ec	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  017ef	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  017f3	8b 4d d4	 mov	 ecx, DWORD PTR -44+[ebp]
  017f6	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  017fb	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  017ff	8d 4d e8	 lea	 ecx, DWORD PTR $T155291[ebp]
  01802	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 507  : 
; 508  : 	// determine which feature this is for
; 509  : 	m_nID = atoi ( idStr );

  01807	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  0180a	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0180f	50		 push	 eax
  01810	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01816	83 c4 04	 add	 esp, 4
  01819	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0181c	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 510  : }

  0181f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01823	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  01826	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0182b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01832	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01835	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0183a	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0183d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01840	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01847	8b e5		 mov	 esp, ebp
  01849	5d		 pop	 ebp
  0184a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L155292:
  0017a	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0017d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00182	c3		 ret	 0
$L155294:
  00183	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00186	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0018b	c3		 ret	 0
$L155295:
  0018c	8d 4d e8	 lea	 ecx, DWORD PTR $T155291[ebp]
  0018f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00194	c3		 ret	 0
$L155296:
  00195	8d 4d f0	 lea	 ecx, DWORD PTR _idStr$[ebp]
  00198	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0019d	c3		 ret	 0
$L155299:
  0019e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155298
  001a3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSCITalkButtonBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ENDP ; CSCITalkButtonBtn::CSCITalkButtonBtn
PUBLIC	??1CSCITalkButtonBtn@@UAE@XZ			; CSCITalkButtonBtn::~CSCITalkButtonBtn
;	COMDAT ??_GCSCITalkButtonBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSCITalkButtonBtn@@UAEPAXI@Z PROC NEAR		; CSCITalkButtonBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSCITalkButtonBtn@@UAE@XZ ; CSCITalkButtonBtn::~CSCITalkButtonBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L149260
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L149260:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSCITalkButtonBtn@@UAEPAXI@Z ENDP			; CSCITalkButtonBtn::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinBtn@@UAE@XZ PROC NEAR				; CSkinBtn::~CSkinBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinBtn@@UAE@XZ ENDP				; CSkinBtn::~CSkinBtn
_TEXT	ENDS
;	COMDAT ??1CSCITalkButtonBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSCITalkButtonBtn@@UAE@XZ PROC NEAR			; CSCITalkButtonBtn::~CSCITalkButtonBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSCITalkButtonBtn@@UAE@XZ ENDP			; CSCITalkButtonBtn::~CSCITalkButtonBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CSCITalkButtonBtn@@UAEXFF@Z PROC NEAR	; CSCITalkButtonBtn::OnActivate

; 514  : {

  0184d	55		 push	 ebp
  0184e	8b ec		 mov	 ebp, esp
  01850	51		 push	 ecx
  01851	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 515  : 	// If there is a parent, tell it to press button m_nPosition
; 516  : 	if ( m_pParentWnd )

  01854	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01857	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0185b	74 12		 je	 SHORT $L149270

; 518  : 		((CTalkDlg*) m_pParentWnd)->ExecuteButton( m_nID );

  0185d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01860	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  01863	52		 push	 edx
  01864	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01867	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0186a	e8 00 00 00 00	 call	 ?ExecuteButton@CTalkDlg@@QAEXH@Z ; CTalkDlg::ExecuteButton
$L149270:

; 520  : }

  0186f	8b e5		 mov	 esp, ebp
  01871	5d		 pop	 ebp
  01872	c2 08 00	 ret	 8
?OnActivate@CSCITalkButtonBtn@@UAEXFF@Z ENDP		; CSCITalkButtonBtn::OnActivate
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NABVCString@@PBD@Z PROC NEAR			; operator==, COMDAT

; 183  : 	{ return s1.Compare(s2) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NABVCString@@PBD@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NPBDABVCString@@@Z PROC NEAR			; operator==, COMDAT

; 185  : 	{ return s2.Compare(s1) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _s1$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _s2$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NPBDABVCString@@@Z ENDP				; operator==
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CPoint@@QAE@XZ PROC NEAR				; CPoint::CPoint, COMDAT

; 83   : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CPoint@@QAE@XZ ENDP					; CPoint::CPoint
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT

; 132  : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?Height@CRect@@QBEHXZ PROC NEAR				; CRect::Height, COMDAT

; 147  : 	{ return bottom - top; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00010	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
;	COMDAT ??0?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethod@@@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Al$ = 8
??0?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethod@@@1@@Z PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >, COMDAT

; 39   : 	explicit vector(const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00025	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00028	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??0?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@ABV?$allocator@PAVCSCIObjectMethod@@@1@@Z ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@0@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Destroy
PUBLIC	?deallocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAXI@Z ; std::allocator<CSCIObjectMethod *>::deallocate
;	COMDAT ??1?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::~vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >, COMDAT

; 58   : 		{_Destroy(_First, _Last);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	51		 push	 ecx
  0000e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00011	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00014	50		 push	 eax
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@0@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Destroy

; 59   : 		allocator.deallocate(_First, _End - _First);

  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00026	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00029	c1 f8 02	 sar	 eax, 2
  0002c	50		 push	 eax
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00033	52		 push	 edx
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAXI@Z ; std::allocator<CSCIObjectMethod *>::deallocate

; 60   : 		_First = 0, _Last = 0, _End = 0; }

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00050	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00053	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??1?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAE@XZ ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::~vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::begin
;	COMDAT ??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[], COMDAT

; 132  : 		{return (*(begin() + _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::begin
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00012	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
??A?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEAAPAVCSCIObjectMethod@@I@Z ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::operator[]
_TEXT	ENDS
PUBLIC	?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@ABQAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::insert
PUBLIC	?end@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::end
;	COMDAT ?push_back@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXABQAVCSCIObjectMethod@@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
?push_back@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXABQAVCSCIObjectMethod@@@Z PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::push_back, COMDAT

; 142  : 		{insert(end(), _X); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?end@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::end
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@ABQAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::insert
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?push_back@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXABQAVCSCIObjectMethod@@@Z ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::push_back
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@0@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::erase
;	COMDAT ?clear@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?clear@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::clear, COMDAT

; 212  : 		{erase(begin(), end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?end@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::end
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::begin
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?erase@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@0@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::erase
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?clear@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXXZ ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::clear
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ
_TEXT	SEGMENT
_this$ = -4
?begin@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::begin, COMDAT

; 93   : 		{return (_First); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?begin@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ
_TEXT	SEGMENT
_this$ = -4
?end@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::end, COMDAT

; 97   : 		{return (_Last); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?end@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::end
_TEXT	ENDS
PUBLIC	?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::insert
;	COMDAT ?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@ABQAV3@@Z
_TEXT	SEGMENT
__P$ = 8
__X$ = 12
_this$ = -8
__O$ = -4
?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@ABQAV3@@Z PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::insert, COMDAT

; 152  : 		{size_type _O = _P - begin();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::begin
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00014	2b c8		 sub	 ecx, eax
  00016	c1 f9 02	 sar	 ecx, 2
  00019	89 4d fc	 mov	 DWORD PTR __O$[ebp], ecx

; 153  : 		insert(_P, 1, _X);

  0001c	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0001f	52		 push	 edx
  00020	6a 01		 push	 1
  00022	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00025	50		 push	 eax
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::insert

; 154  : 		return (begin() + _O); }

  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::begin
  00036	8b 4d fc	 mov	 ecx, DWORD PTR __O$[ebp]
  00039	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 08 00	 ret	 8
?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@ABQAV3@@Z ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::insert
_TEXT	ENDS
PUBLIC	?copy@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z	; std::copy
;	COMDAT ?erase@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@0@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
_this$ = -8
__S$ = -4
?erase@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@0@Z PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::erase, COMDAT

; 207  : 		{iterator _S = copy(_L, end(), _F);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::end
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?copy@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z ; std::copy
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 208  : 		_Destroy(_S, end());

  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?end@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@XZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::end
  0002d	50		 push	 eax
  0002e	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00031	52		 push	 edx
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@0@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Destroy

; 209  : 		_Last = _S;

  0003a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00040	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 210  : 		return (_F); }

  00043	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
?erase@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEPAPAVCSCIObjectMethod@@PAPAV3@0@Z ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::erase
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@@Z ; std::allocator<CSCIObjectMethod *>::destroy
;	COMDAT ?_Destroy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@0@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
_this$ = -4
?_Destroy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@0@Z PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Destroy, COMDAT

; 230  : 		{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	eb 09		 jmp	 SHORT $L151690
$L151691:
  00009	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 08	 mov	 DWORD PTR __F$[ebp], eax
$L151690:
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00015	3b 4d 0c	 cmp	 ecx, DWORD PTR __L$[ebp]
  00018	74 0e		 je	 SHORT $L151692

; 231  : 			allocator.destroy(_F); }

  0001a	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  0001d	52		 push	 edx
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@@Z ; std::allocator<CSCIObjectMethod *>::destroy
  00026	eb e1		 jmp	 SHORT $L151691
$L151692:
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@0@Z ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Destroy
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?deallocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CSCIObjectMethod *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAXI@Z ENDP ; std::allocator<CSCIObjectMethod *>::deallocate
_TEXT	ENDS
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:NEAR		; CWnd::MoveWindow
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT
_lpRect$ = 8
_bRepaint$ = 12
_this$ = -4
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z PROC NEAR		; CWnd::MoveWindow, COMDAT

; 80   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 		lpRect->bottom - lpRect->top, bRepaint); }

  00007	8b 45 0c	 mov	 eax, DWORD PTR _bRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ENDP		; CWnd::MoveWindow
_TEXT	ENDS
EXTRN	__imp__GetWindowRect@8:NEAR
;	COMDAT ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8
_this$ = -4
?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetWindowRect, COMDAT

; 96   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetWindowRect
_TEXT	ENDS
PUBLIC	?_Ucopy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEPAPAVCSCIObjectMethod@@PBQAV3@0PAPAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ucopy
PUBLIC	?_Ufill@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ufill
PUBLIC	?fill@std@@YAXPAPAVCSCIObjectMethod@@0ABQAV2@@Z	; std::fill
PUBLIC	?copy_backward@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z ; std::copy_backward
PUBLIC	?allocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEPAPAVCSCIObjectMethod@@IPBX@Z ; std::allocator<CSCIObjectMethod *>::allocate
PUBLIC	?size@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::size
;	COMDAT ?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z
_TEXT	SEGMENT
__P$ = 8
__M$ = 12
__X$ = 16
_this$ = -16
__N$151898 = -12
__S$151899 = -8
__Q$151901 = -4
?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::insert, COMDAT

; 156  : 		{if (_End - _Last < _M)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00012	2b 51 08	 sub	 edx, DWORD PTR [ecx+8]
  00015	c1 fa 02	 sar	 edx, 2
  00018	3b 55 0c	 cmp	 edx, DWORD PTR __M$[ebp]
  0001b	0f 83 f6 00 00
	00		 jae	 $L151897

; 157  : 			{size_type _N = size() + (_M < size() ? size() : _M);

  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?size@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::size
  00029	39 45 0c	 cmp	 DWORD PTR __M$[ebp], eax
  0002c	73 0d		 jae	 SHORT $L155335
  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?size@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::size
  00036	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  00039	eb 06		 jmp	 SHORT $L155336
$L155335:
  0003b	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  0003e	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
$L155336:
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?size@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::size
  00049	03 45 ec	 add	 eax, DWORD PTR -20+[ebp]
  0004c	89 45 f4	 mov	 DWORD PTR __N$151898[ebp], eax

; 158  : 			iterator _S = allocator.allocate(_N, (void *)0);

  0004f	6a 00		 push	 0
  00051	8b 4d f4	 mov	 ecx, DWORD PTR __N$151898[ebp]
  00054	51		 push	 ecx
  00055	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEPAPAVCSCIObjectMethod@@IPBX@Z ; std::allocator<CSCIObjectMethod *>::allocate
  0005d	89 45 f8	 mov	 DWORD PTR __S$151899[ebp], eax

; 159  : 			iterator _Q = _Ucopy(_First, _P, _S);

  00060	8b 55 f8	 mov	 edx, DWORD PTR __S$151899[ebp]
  00063	52		 push	 edx
  00064	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00067	50		 push	 eax
  00068	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0006e	52		 push	 edx
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEPAPAVCSCIObjectMethod@@PBQAV3@0PAPAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ucopy
  00077	89 45 fc	 mov	 DWORD PTR __Q$151901[ebp], eax

; 160  : 			_Ufill(_Q, _M, _X);

  0007a	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  00081	51		 push	 ecx
  00082	8b 55 fc	 mov	 edx, DWORD PTR __Q$151901[ebp]
  00085	52		 push	 edx
  00086	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ufill

; 161  : 			_Ucopy(_P, _Last, _Q + _M);

  0008e	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  00091	8b 4d fc	 mov	 ecx, DWORD PTR __Q$151901[ebp]
  00094	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00097	52		 push	 edx
  00098	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0009e	51		 push	 ecx
  0009f	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  000a2	52		 push	 edx
  000a3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEPAPAVCSCIObjectMethod@@PBQAV3@0PAPAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ucopy

; 162  : 			_Destroy(_First, _Last);

  000ab	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b1	51		 push	 ecx
  000b2	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b8	50		 push	 eax
  000b9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@0@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Destroy

; 163  : 			allocator.deallocate(_First, _End - _First);

  000c1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000c7	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000ca	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  000cd	c1 f8 02	 sar	 eax, 2
  000d0	50		 push	 eax
  000d1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d7	52		 push	 edx
  000d8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAXI@Z ; std::allocator<CSCIObjectMethod *>::deallocate

; 164  : 			_End = _S + _N;

  000e0	8b 45 f4	 mov	 eax, DWORD PTR __N$151898[ebp]
  000e3	8b 4d f8	 mov	 ecx, DWORD PTR __S$151899[ebp]
  000e6	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 165  : 			_Last = _S + size() + _M;

  000ef	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	e8 00 00 00 00	 call	 ?size@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QBEIXZ ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::size
  000f7	8b 4d f8	 mov	 ecx, DWORD PTR __S$151899[ebp]
  000fa	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000fd	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  00100	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  00103	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00106	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 166  : 			_First = _S; }

  00109	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d f8	 mov	 ecx, DWORD PTR __S$151899[ebp]
  0010f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 167  : 		else if (_Last - _P < _M)

  00112	e9 f7 00 00 00	 jmp	 $L151912
$L151897:
  00117	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0011a	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0011d	2b 45 08	 sub	 eax, DWORD PTR __P$[ebp]
  00120	c1 f8 02	 sar	 eax, 2
  00123	3b 45 0c	 cmp	 eax, DWORD PTR __M$[ebp]
  00126	73 6d		 jae	 SHORT $L151903

; 168  : 			{_Ucopy(_P, _Last, _P + _M);

  00128	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  0012b	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0012e	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00131	50		 push	 eax
  00132	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00138	52		 push	 edx
  00139	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0013c	50		 push	 eax
  0013d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00140	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEPAPAVCSCIObjectMethod@@PBQAV3@0PAPAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ucopy

; 169  : 			_Ufill(_Last, _M - (_Last - _P), _X);

  00145	8b 4d 10	 mov	 ecx, DWORD PTR __X$[ebp]
  00148	51		 push	 ecx
  00149	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0014c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0014f	2b 45 08	 sub	 eax, DWORD PTR __P$[ebp]
  00152	c1 f8 02	 sar	 eax, 2
  00155	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  00158	2b c8		 sub	 ecx, eax
  0015a	51		 push	 ecx
  0015b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0015e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00161	50		 push	 eax
  00162	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00165	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ufill

; 170  : 			fill(_P, _Last, _X);

  0016a	8b 4d 10	 mov	 ecx, DWORD PTR __X$[ebp]
  0016d	51		 push	 ecx
  0016e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00171	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00174	50		 push	 eax
  00175	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00178	51		 push	 ecx
  00179	e8 00 00 00 00	 call	 ?fill@std@@YAXPAPAVCSCIObjectMethod@@0ABQAV2@@Z ; std::fill
  0017e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 171  : 			_Last += _M; }

  00181	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00184	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00187	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  0018a	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  0018d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00190	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 172  : 		else if (0 < _M)

  00193	eb 79		 jmp	 SHORT $L151912
$L151903:
  00195	83 7d 0c 00	 cmp	 DWORD PTR __M$[ebp], 0
  00199	76 73		 jbe	 SHORT $L151912

; 173  : 			{_Ucopy(_Last - _M, _Last, _Last);

  0019b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001a1	52		 push	 edx
  001a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001a5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001a8	51		 push	 ecx
  001a9	8b 55 0c	 mov	 edx, DWORD PTR __M$[ebp]
  001ac	c1 e2 02	 shl	 edx, 2
  001af	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001b2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001b5	2b ca		 sub	 ecx, edx
  001b7	51		 push	 ecx
  001b8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001bb	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEPAPAVCSCIObjectMethod@@PBQAV3@0PAPAV3@@Z ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ucopy

; 174  : 			copy_backward(_P, _Last - _M, _Last);

  001c0	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001c3	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001c6	50		 push	 eax
  001c7	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  001ca	c1 e1 02	 shl	 ecx, 2
  001cd	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001d0	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001d3	2b c1		 sub	 eax, ecx
  001d5	50		 push	 eax
  001d6	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  001d9	51		 push	 ecx
  001da	e8 00 00 00 00	 call	 ?copy_backward@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z ; std::copy_backward
  001df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 175  : 			fill(_P, _P + _M, _X);

  001e2	8b 55 10	 mov	 edx, DWORD PTR __X$[ebp]
  001e5	52		 push	 edx
  001e6	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  001e9	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  001ec	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  001ef	52		 push	 edx
  001f0	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  001f3	50		 push	 eax
  001f4	e8 00 00 00 00	 call	 ?fill@std@@YAXPAPAVCSCIObjectMethod@@0ABQAV2@@Z ; std::fill
  001f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 176  : 			_Last += _M; }}

  001fc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ff	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00202	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  00205	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  00208	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0020b	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$L151912:
  0020e	8b e5		 mov	 esp, ebp
  00210	5d		 pop	 ebp
  00211	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::insert
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAPAVCSCIObjectMethod@@@Z	; std::_Destroy
;	COMDAT ?destroy@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?destroy@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@@Z PROC NEAR ; std::allocator<CSCIObjectMethod *>::destroy, COMDAT

; 68   : 		{_Destroy(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAPAVCSCIObjectMethod@@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@@Z ENDP ; std::allocator<CSCIObjectMethod *>::destroy
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::size, COMDAT

; 114  : 		{return (_First == 0 ? 0 : _Last - _First); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00010	75 09		 jne	 SHORT $L155339
  00012	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00019	eb 12		 jmp	 SHORT $L155340
$L155339:
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00024	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00027	c1 f8 02	 sar	 eax, 2
  0002a	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
$L155340:
  0002d	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?size@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@QBEIXZ ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::size
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@ABQAV3@@Z ; std::allocator<CSCIObjectMethod *>::construct
;	COMDAT ?_Ucopy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEPAPAVCSCIObjectMethod@@PBQAV3@0PAPAV3@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__P$ = 16
_this$ = -4
?_Ucopy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEPAPAVCSCIObjectMethod@@PBQAV3@0PAPAV3@@Z PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ucopy, COMDAT

; 234  : 		{for (; _F != _L; ++_P, ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	eb 12		 jmp	 SHORT $L152010
$L152011:
  00009	8b 45 10	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 10	 mov	 DWORD PTR __P$[ebp], eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 4d 08	 mov	 DWORD PTR __F$[ebp], ecx
$L152010:
  0001b	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  0001e	3b 55 0c	 cmp	 edx, DWORD PTR __L$[ebp]
  00021	74 12		 je	 SHORT $L152012

; 235  : 			allocator.construct(_P, *_F);

  00023	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 10	 mov	 ecx, DWORD PTR __P$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@ABQAV3@@Z ; std::allocator<CSCIObjectMethod *>::construct
  00033	eb d4		 jmp	 SHORT $L152011
$L152012:

; 236  : 		return (_P); }

  00035	8b 45 10	 mov	 eax, DWORD PTR __P$[ebp]
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 0c 00	 ret	 12			; 0000000cH
?_Ucopy@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEPAPAVCSCIObjectMethod@@PBQAV3@0PAPAV3@@Z ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ucopy
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z
_TEXT	SEGMENT
__F$ = 8
__N$ = 12
__X$ = 16
_this$ = -4
?_Ufill@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z PROC NEAR ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ufill, COMDAT

; 238  : 		{for (; 0 < _N; --_N, ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	eb 12		 jmp	 SHORT $L152015
$L152016:
  00009	8b 45 0c	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 0c	 mov	 DWORD PTR __N$[ebp], eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 4d 08	 mov	 DWORD PTR __F$[ebp], ecx
$L152015:
  0001b	83 7d 0c 00	 cmp	 DWORD PTR __N$[ebp], 0
  0001f	76 12		 jbe	 SHORT $L152017

; 239  : 			allocator.construct(_F, _X); }

  00021	8b 55 10	 mov	 edx, DWORD PTR __X$[ebp]
  00024	52		 push	 edx
  00025	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00028	50		 push	 eax
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@ABQAV3@@Z ; std::allocator<CSCIObjectMethod *>::construct
  00031	eb d6		 jmp	 SHORT $L152016
$L152017:
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@PAVCSCIObjectMethod@@V?$allocator@PAVCSCIObjectMethod@@@std@@@std@@IAEXPAPAVCSCIObjectMethod@@IABQAV3@@Z ENDP ; std::vector<CSCIObjectMethod *,std::allocator<CSCIObjectMethod *> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Allocate@std@@YAPAPAVCSCIObjectMethod@@HPAPAV2@@Z ; std::_Allocate
;	COMDAT ?allocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEPAPAVCSCIObjectMethod@@IPBX@Z
_TEXT	SEGMENT
_this$ = -4
__N$ = 8
?allocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEPAPAVCSCIObjectMethod@@IPBX@Z PROC NEAR ; std::allocator<CSCIObjectMethod *>::allocate, COMDAT

; 59   : 		{return (_Allocate((difference_type)_N, (pointer)0)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPAPAVCSCIObjectMethod@@HPAPAV2@@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?allocate@?$allocator@PAVCSCIObjectMethod@@@std@@QAEPAPAVCSCIObjectMethod@@IPBX@Z ENDP ; std::allocator<CSCIObjectMethod *>::allocate
_TEXT	ENDS
PUBLIC	?_Construct@std@@YAXPAPAVCSCIObjectMethod@@ABQAV2@@Z ; std::_Construct
;	COMDAT ?construct@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?construct@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@ABQAV3@@Z PROC NEAR ; std::allocator<CSCIObjectMethod *>::construct, COMDAT

; 66   : 		{_Construct(_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAPAVCSCIObjectMethod@@ABQAV2@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?construct@?$allocator@PAVCSCIObjectMethod@@@std@@QAEXPAPAVCSCIObjectMethod@@ABQAV3@@Z ENDP ; std::allocator<CSCIObjectMethod *>::construct
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__X$ = 16
?copy@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z PROC NEAR ; std::copy, COMDAT

; 18   : 	{for (; _F != _L; ++_X, ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 12		 jmp	 SHORT $L152482
$L152483:
  00005	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00008	83 c0 04	 add	 eax, 4
  0000b	89 45 10	 mov	 DWORD PTR __X$[ebp], eax
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00011	83 c1 04	 add	 ecx, 4
  00014	89 4d 08	 mov	 DWORD PTR __F$[ebp], ecx
$L152482:
  00017	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  0001a	3b 55 0c	 cmp	 edx, DWORD PTR __L$[ebp]
  0001d	74 0c		 je	 SHORT $L152484

; 19   : 		*_X = *_F;

  0001f	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 10		 mov	 DWORD PTR [eax], edx
  00029	eb da		 jmp	 SHORT $L152483
$L152484:

; 20   : 	return (_X); }

  0002b	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?copy@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z ENDP	; std::copy
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAPAVCSCIObjectMethod@@0ABQAV2@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__X$ = 16
?fill@std@@YAXPAPAVCSCIObjectMethod@@0ABQAV2@@Z PROC NEAR ; std::fill, COMDAT

; 38   : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 09		 jmp	 SHORT $L152491
$L152492:
  00005	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00008	83 c0 04	 add	 eax, 4
  0000b	89 45 08	 mov	 DWORD PTR __F$[ebp], eax
$L152491:
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00011	3b 4d 0c	 cmp	 ecx, DWORD PTR __L$[ebp]
  00014	74 0c		 je	 SHORT $L152493

; 39   : 		*_F = _X; }

  00016	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00019	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	89 0a		 mov	 DWORD PTR [edx], ecx
  00020	eb e3		 jmp	 SHORT $L152492
$L152493:
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?fill@std@@YAXPAPAVCSCIObjectMethod@@0ABQAV2@@Z ENDP	; std::fill
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__X$ = 16
?copy_backward@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z PROC NEAR ; std::copy_backward, COMDAT

; 24   : 	{while (_F != _L)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
$L152496:
  00003	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00006	3b 45 0c	 cmp	 eax, DWORD PTR __L$[ebp]
  00009	74 1e		 je	 SHORT $L152497

; 25   : 		*--_X = *--_L;

  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0000e	83 e9 04	 sub	 ecx, 4
  00011	89 4d 0c	 mov	 DWORD PTR __L$[ebp], ecx
  00014	8b 55 10	 mov	 edx, DWORD PTR __X$[ebp]
  00017	83 ea 04	 sub	 edx, 4
  0001a	89 55 10	 mov	 DWORD PTR __X$[ebp], edx
  0001d	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00020	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	89 10		 mov	 DWORD PTR [eax], edx
  00027	eb da		 jmp	 SHORT $L152496
$L152497:

; 26   : 	return (_X); }

  00029	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?copy_backward@std@@YAPAPAVCSCIObjectMethod@@PAPAV2@00@Z ENDP ; std::copy_backward
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCSCIObjectMethod@@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAPAVCSCIObjectMethod@@@Z PROC NEAR	; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAPAVCSCIObjectMethod@@@Z ENDP	; std::_Destroy
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAPAVCSCIObjectMethod@@HPAPAV2@@Z
_TEXT	SEGMENT
__N$ = 8
?_Allocate@std@@YAPAPAVCSCIObjectMethod@@HPAPAV2@@Z PROC NEAR ; std::_Allocate, COMDAT

; 27   : 	{if (_N < 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 08 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	7d 07		 jge	 SHORT $L152501

; 28   : 		_N = 0;

  00009	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0
$L152501:

; 30   : 		(_SIZT)_N * sizeof (_Ty))); }

  00010	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  00013	c1 e0 02	 shl	 eax, 2
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001c	83 c4 04	 add	 esp, 4
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Allocate@std@@YAPAPAVCSCIObjectMethod@@HPAPAV2@@Z ENDP ; std::_Allocate
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT ?_Construct@std@@YAXPAPAVCSCIObjectMethod@@ABQAV2@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
$T155351 = -4
?_Construct@std@@YAXPAPAVCSCIObjectMethod@@ABQAV2@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00009	50		 push	 eax
  0000a	6a 04		 push	 4
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T155351[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T155351[ebp], 0
  0001b	74 12		 je	 SHORT $L155352
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR $T155351[ebp]
  00020	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 01		 mov	 DWORD PTR [ecx], eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR $T155351[ebp]
  0002a	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  0002d	eb 07		 jmp	 SHORT $L155353
$L155352:
  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L155353:
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?_Construct@std@@YAXPAPAVCSCIObjectMethod@@ABQAV2@@Z ENDP ; std::_Construct
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
;	COMDAT ??_ECTalkListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT
??_ECTalkListCtrl@@WEA@AEPAXI@Z PROC NEAR		; CTalkListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 40	 sub	 ecx, 64			; 00000040H
  00003	e9 00 00 00 00	 jmp	 ??_ECTalkListCtrl@@UAEPAXI@Z ; CTalkListCtrl::`vector deleting destructor'
??_ECTalkListCtrl@@WEA@AEPAXI@Z ENDP			; CTalkListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECTalkListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECTalkListCtrl@@WHE@AEPAXI@Z PROC NEAR		; CTalkListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECTalkListCtrl@@UAEPAXI@Z ; CTalkListCtrl::`vector deleting destructor'
??_ECTalkListCtrl@@WHE@AEPAXI@Z ENDP			; CTalkListCtrl::`vector deleting destructor'
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
;	COMDAT ?RequestResize@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?RequestResize@CRichEditCtrl@@QAEXXZ PROC NEAR		; CRichEditCtrl::RequestResize, COMDAT

; 669  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_REQUESTRESIZE, 0, 0L); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 41 04 00 00	 push	 1089			; 00000441H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?RequestResize@CRichEditCtrl@@QAEXXZ ENDP		; CRichEditCtrl::RequestResize
_TEXT	ENDS
;	COMDAT ?SetEventMask@CRichEditCtrl@@QAEKK@Z
_TEXT	SEGMENT
_dwEventMask$ = 8
_this$ = -4
?SetEventMask@CRichEditCtrl@@QAEKK@Z PROC NEAR		; CRichEditCtrl::SetEventMask, COMDAT

; 678  : 	{ ASSERT(::IsWindow(m_hWnd)); return (DWORD)::SendMessage(m_hWnd, EM_SETEVENTMASK, 0, dwEventMask); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _dwEventMask$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 45 04 00 00	 push	 1093			; 00000445H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?SetEventMask@CRichEditCtrl@@QAEKK@Z ENDP		; CRichEditCtrl::SetEventMask
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__P$ = 12
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 42   : 	{return (_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0MemID@@QAE@G@Z PROC NEAR				; MemID::MemID, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _h$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 24   : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0MemID@@QAE@G@Z ENDP					; MemID::MemID
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4
??BMemID@@QBEGXZ PROC NEAR				; MemID::operator unsigned short, COMDAT

; 93   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : 		return handle;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 00	 mov	 ax, WORD PTR [eax]

; 95   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BMemID@@QBEGXZ ENDP					; MemID::operator unsigned short
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@XZ				; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Object@@QAE@XZ PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 10   : 	CSCI_Object() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@XZ	; ObjectID::ObjectID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Object@@QAE@XZ ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@XZ				; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0ObjectID@@QAE@XZ PROC NEAR				; ObjectID::ObjectID, COMDAT

; 227  : 	ObjectID() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@XZ	; FakeObjectID::FakeObjectID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0ObjectID@@QAE@XZ ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@XZ				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0FakeObjectID@@QAE@XZ PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0FakeObjectID@@QAE@XZ ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0MemID@@QAE@XZ PROC NEAR				; MemID::MemID, COMDAT

; 15   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 c7 00 00 00	 mov	 WORD PTR [eax], 0

; 16   : 	}

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0MemID@@QAE@XZ ENDP					; MemID::MemID
_TEXT	ENDS
PUBLIC	??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z	; std::bitset<6>::reference::operator=
PUBLIC	??A?$bitset@$05@std@@QAE?AVreference@01@I@Z	; std::bitset<6>::operator[]
;	COMDAT ?SetAllowResize@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_bValue$ = 8
$T155369 = -8
_this$ = -12
?SetAllowResize@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetAllowResize, COMDAT

; 132  : 	void SetAllowResize ( bool bValue ) { m_state[sknWndAllowResize] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 02		 push	 2
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T155369[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetAllowResize@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetAllowResize
_TEXT	ENDS
PUBLIC	??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z	; std::bitset<6>::reference::reference
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
__P$ = 12
$T155371 = -8
___$ReturnUdt$ = 8
_this$ = -12
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z PROC NEAR	; std::bitset<6>::operator[], COMDAT

; 54   : 		{return (reference(*this, _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	8d 4d f8	 lea	 ecx, DWORD PTR $T155371[ebp]
  00014	e8 00 00 00 00	 call	 ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ; std::bitset<6>::reference::reference
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx
  00023	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ENDP	; std::bitset<6>::operator[]
_TEXT	ENDS
PUBLIC	?set@?$bitset@$05@std@@QAEAAV12@I_N@Z		; std::bitset<6>::set
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z PROC NEAR	; std::bitset<6>::reference::operator=, COMDAT

; 24   : 			{_Pbs->set(_Off, _X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8a 45 08	 mov	 al, BYTE PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ; std::bitset<6>::set

; 25   : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ENDP	; std::bitset<6>::reference::operator=
_TEXT	ENDS
PUBLIC	?_Xran@?$bitset@$05@std@@ABEXXZ			; std::bitset<6>::_Xran
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__X$ = 12
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z PROC NEAR		; std::bitset<6>::set, COMDAT

; 119  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 06	 cmp	 DWORD PTR __P$[ebp], 6
  0000c	72 08		 jb	 SHORT $L151568

; 120  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$05@std@@ABEXXZ ; std::bitset<6>::_Xran
$L151568:

; 121  : 		if (_X)

  00016	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 31		 je	 SHORT $L151569

; 122  : 			_A[_P / _Nb] |= (_Ty)1 << _P % _Nb;

  00022	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00025	c1 ee 05	 shr	 esi, 5
  00028	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002b	33 d2		 xor	 edx, edx
  0002d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00032	f7 f1		 div	 ecx
  00034	8b ca		 mov	 ecx, edx
  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	d3 e2		 shl	 edx, cl
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00043	0b ca		 or	 ecx, edx
  00045	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00048	c1 ea 05	 shr	 edx, 5
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 123  : 		else

  00051	eb 31		 jmp	 SHORT $L151571
$L151569:

; 124  : 			_A[_P / _Nb] &= ~((_Ty)1 << _P % _Nb);

  00053	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00056	c1 ee 05	 shr	 esi, 5
  00059	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0005c	33 d2		 xor	 edx, edx
  0005e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00063	f7 f1		 div	 ecx
  00065	8b ca		 mov	 ecx, edx
  00067	ba 01 00 00 00	 mov	 edx, 1
  0006c	d3 e2		 shl	 edx, cl
  0006e	f7 d2		 not	 edx
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00076	23 ca		 and	 ecx, edx
  00078	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0007b	c1 ea 05	 shr	 edx, 5
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx
$L151571:

; 125  : 		return (*this); }

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ENDP		; std::bitset<6>::set
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__P$ = 12
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z PROC NEAR	; std::bitset<6>::reference::reference, COMDAT

; 37   : 		reference(bitset<_N>& _X, size_t _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ENDP	; std::bitset<6>::reference::reference
_TEXT	ENDS
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
PUBLIC	??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
EXTRN	__imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	??0logic_error@std@@QAE@ABV01@@Z:NEAR		; std::logic_error::logic_error
EXTRN	??1out_of_range@std@@UAE@XZ:NEAR		; std::out_of_range::~out_of_range
EXTRN	??0out_of_range@std@@QAE@ABV01@@Z:NEAR		; std::out_of_range::out_of_range
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT ??_R0?AVexception@@@8
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\bitset
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT
??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ DB 'invalid bitset'
	DB	'<N> position', 00H				; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T155382 DD	019930520H
	DD	01H
	DD	FLAT:$T155384
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155384 DD	0ffffffffH
	DD	FLAT:$L155380
xdata$x	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT
_this$ = -64
$T155376 = -40
$T155377 = -56
$T155378 = -60
__$EHRec$ = -12
?_Xran@?$bitset@$05@std@@ABEXXZ PROC NEAR		; std::bitset<6>::_Xran, COMDAT

; 250  : 		{_THROW(out_of_range, "invalid bitset<N> position"); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155383
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 c4	 lea	 eax, DWORD PTR $T155378[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
  00027	8d 4d c8	 lea	 ecx, DWORD PTR $T155377[ebp]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8d 4d c8	 lea	 ecx, DWORD PTR $T155377[ebp]
  0003a	51		 push	 ecx
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T155376[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00044	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00049	8d 55 d8	 lea	 edx, DWORD PTR $T155376[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$L151875:
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155380:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T155377[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00009	c3		 ret	 0
$L155383:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155382
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$bitset@$05@std@@ABEXXZ ENDP			; std::bitset<6>::_Xran
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_bValue$ = 8
$T155388 = -8
_this$ = -12
?SetTransient@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetTransient, COMDAT

; 150  : 	void SetTransient ( bool bValue ) { m_state[sknWndTransient] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 04		 push	 4
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T155388[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetTransient@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetTransient
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Next, COMDAT

; 275  : 	virtual void Next ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Next
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Previous, COMDAT

; 276  : 	virtual void Previous ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Previous
_TEXT	ENDS
;	COMDAT ?GetItemTextColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT
_this$ = -4
?GetItemTextColor@CSkinListCtrl@@MAEKH@Z PROC NEAR	; CSkinListCtrl::GetItemTextColor, COMDAT

; 90   : 	virtual COLORREF GetItemTextColor( int nItem ) { return colItemText; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [eax+168]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?GetItemTextColor@CSkinListCtrl@@MAEKH@Z ENDP		; CSkinListCtrl::GetItemTextColor
_TEXT	ENDS
;	COMDAT ?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT
_this$ = -4
?GetItemBGColor@CSkinListCtrl@@MAEKH@Z PROC NEAR	; CSkinListCtrl::GetItemBGColor, COMDAT

; 91   : 	virtual COLORREF GetItemBGColor( int nItem ) { return colItemBG; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?GetItemBGColor@CSkinListCtrl@@MAEKH@Z ENDP		; CSkinListCtrl::GetItemBGColor
_TEXT	ENDS
;	COMDAT ?getClose@CSCIObjectMethod@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?getClose@CSCIObjectMethod@@QAEFXZ PROC NEAR		; CSCIObjectMethod::getClose, COMDAT

; 59   : 	short			getClose()  { return m_nClose; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 40 0a	 mov	 ax, WORD PTR [eax+10]
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?getClose@CSCIObjectMethod@@QAEFXZ ENDP			; CSCIObjectMethod::getClose
_TEXT	ENDS
EXTRN	??0CString@@QAE@ABV0@@Z:NEAR			; CString::CString
;	COMDAT ?getTitle@CSCIObjectMethod@@QAE?AVCString@@XZ
_TEXT	SEGMENT
$T155396 = -4
___$ReturnUdt$ = 8
_this$ = -8
?getTitle@CSCIObjectMethod@@QAE?AVCString@@XZ PROC NEAR	; CSCIObjectMethod::getTitle, COMDAT

; 60   : 	CString			getTitle()  { return m_sButtonTitle; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T155396[ebp], 0
  00010	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	e8 00 00 00 00	 call	 ??0CString@@QAE@ABV0@@Z	; CString::CString
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR $T155396[ebp]
  00022	83 c9 01	 or	 ecx, 1
  00025	89 4d fc	 mov	 DWORD PTR $T155396[ebp], ecx
  00028	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?getTitle@CSCIObjectMethod@@QAE?AVCString@@XZ ENDP	; CSCIObjectMethod::getTitle
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@ABV0@@Z			; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABV0@@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABV0@@Z ENDP			; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@ABVMemID@@@Z		; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABV0@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 229  : 	ObjectID(const ObjectID& id) : FakeObjectID((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABV0@@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@ABV0@@Z				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeObjectID@@QAE@ABVMemID@@@Z PROC NEAR		; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@ABVMemID@@@Z ENDP			; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0MemID@@QAE@ABV0@@Z PROC NEAR				; MemID::MemID, COMDAT

; 19   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  0000d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00010	66 89 10	 mov	 WORD PTR [eax], dx

; 20   : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0MemID@@QAE@ABV0@@Z ENDP				; MemID::MemID
_TEXT	ENDS
PUBLIC	??1CelObj@@UAE@XZ				; CelObj::~CelObj
;	COMDAT ??1CelObjMem@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CelObjMem@@UAE@XZ PROC NEAR				; CelObjMem::~CelObjMem, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CelObj@@UAE@XZ	; CelObj::~CelObj
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CelObjMem@@UAE@XZ ENDP				; CelObjMem::~CelObjMem
_TEXT	ENDS
PUBLIC	??_7CelObj@@6B@					; CelObj::`vftable'
PUBLIC	??_GCelObj@@UAEPAXI@Z				; CelObj::`scalar deleting destructor'
PUBLIC	??_ECelObj@@UAEPAXI@Z				; CelObj::`vector deleting destructor'
EXTRN	__purecall:NEAR
EXTRN	?ReadPix@CelObj@@UAEEHHH@Z:NEAR			; CelObj::ReadPix
;	COMDAT ??_7CelObj@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\Celobj.hpp
CONST	SEGMENT
??_7CelObj@@6B@ DD FLAT:??_ECelObj@@UAEPAXI@Z		; CelObj::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?ReadPix@CelObj@@UAEEHHH@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??1CelObj@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CelObj@@UAE@XZ PROC NEAR				; CelObj::~CelObj, COMDAT

; 173  : 	virtual	~CelObj()  {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CelObj@@6B@ ; CelObj::`vftable'
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??1CelObj@@UAE@XZ ENDP					; CelObj::~CelObj
_TEXT	ENDS
;	COMDAT ??_GCelObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCelObj@@UAEPAXI@Z PROC NEAR				; CelObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CelObj@@UAE@XZ	; CelObj::~CelObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L148628
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L148628:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCelObj@@UAEPAXI@Z ENDP				; CelObj::`scalar deleting destructor'
_TEXT	ENDS
END
