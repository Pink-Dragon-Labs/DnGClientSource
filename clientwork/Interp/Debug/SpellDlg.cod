	TITLE	C:\Documents and Settings\don\Desktop\sciw\Interp\SpellDlg.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadBitmapA@CBitmap@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemCount@CListCtrl@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CImageList@@QAEHPAVCBitmap@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DStringID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_size@CSCI_Collection@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_view@CSCI_BitMap@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_loop@CSCI_BitMap@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pCombatGroup@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Spell@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Spell@@QAE@ABVObjectID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Spell@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pID@CSCI_Spell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pText@CSCI_Spell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pCost@CSCI_Spell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pIcon@CSCI_Spell@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGlobal@PMachine@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@NN@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Rgb24@@QAE@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Rgb24@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8Rgb24F@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@HHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@VMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@Bitmap@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObj@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjView@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjView@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjView@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjView@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjMem@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjMem@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjMem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjMem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjColor@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjColor@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjColor@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjColor@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPBI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Zconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Mconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Miterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@Vconst_iterator@12@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@_NV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nw@?$vector@_NV?$allocator@I@std@@@std@@KAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$vector@_NV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@_NV?$allocator@I@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSpell@CSpellDraggable@@QAE?AVCSCI_Spell@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndex@CSpellDraggable@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetList@CSpellDraggable@@QAEPAVCSpellListCtrl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Spell@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSpellListCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsFavorite@CSpellListCtrl@@QAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpellListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBounds@OCArray@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Data@OCArray@@QAEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ByteAt@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetByte@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetByte@CPackedData@@QAEXHE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutByte@CPackedData@@QAEXE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWord@CPackedData@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutWord@CPackedData@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LongAt@CPackedData@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutLong@CPackedData@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutArray@CPackedData@@QAEXPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WLE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpellDraggable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSpellDraggable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CFavoriteSpellsListCtrl@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnItemActivate@CFavoriteSpellsListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFavoriteSpellsListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFavoriteSpellsListCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAllSpellsListCtrl@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnItemActivate@CAllSpellsListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAllSpellsListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAllSpellsListCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpellListDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSpellListDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTabBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$04@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@ABV?$allocator@PAVCTabBtn@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXIABQAVCTabBtn@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEAAPAVCTabBtn@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$04@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXPAPAVCTabBtn@@IABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@PAPAV3@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCTabBtn@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$04@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEPAPAVCTabBtn@@PBQAV3@0PAPAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@IABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@PAVCTabBtn@@@std@@QAEPAPAVCTabBtn@@IPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@ABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAPAVCTabBtn@@0ABQAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAPAVCTabBtn@@HPAPAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCTabBtn@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAPAVCTabBtn@@ABQAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSpellListDlg@@WJE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECFavoriteSpellsListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECFavoriteSpellsListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECFavoriteSpellsListCtrl@@WLE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECAllSpellsListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECAllSpellsListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECAllSpellsListCtrl@@WLE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CFavoriteSpellsListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSpellDraggable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellListDlg@@6BCSkinWnd@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFavoriteSpellsListCtrl@@6BCListCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAllSpellsListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObjColor@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAllSpellsListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSpellListDlg@@6BCVerbHandler@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObjView@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CFavoriteSpellsListCtrl@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CelObjMem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAllSpellsListCtrl@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTabBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSpellListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAllSpellsListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CFavoriteSpellsListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAllSpellsListCtrl@@6BCListCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCListCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFavoriteSpellsListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?OnStartDrag@CSpellListCtrl@@QAEXPAUtagNMHDR@@PAJ@Z ; CSpellListCtrl::OnStartDrag
PUBLIC	?OnCreate@CSpellListCtrl@@QAEHPAUtagCREATESTRUCTA@@@Z ; CSpellListCtrl::OnCreate
PUBLIC	?_messageEntries@CSpellListCtrl@@0QBUAFX_MSGMAP_ENTRY@@B ; CSpellListCtrl::_messageEntries
PUBLIC	?messageMap@CSpellListCtrl@@1UAFX_MSGMAP@@B	; CSpellListCtrl::messageMap
PUBLIC	?_GetBaseMessageMap@CSpellListCtrl@@KGPBUAFX_MSGMAP@@XZ ; CSpellListCtrl::_GetBaseMessageMap
PUBLIC	?m_nSavedTab@CSpellListDlg@@1HA			; CSpellListDlg::m_nSavedTab
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	?g_pSpellListDialog@@3PAVCSpellListDlg@@A	; g_pSpellListDialog
PUBLIC	_IID_ISkinStorage
PUBLIC	?g_pSpellList@@3PAFA				; g_pSpellList
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
_BSS	SEGMENT
?m_nSavedTab@CSpellListDlg@@1HA DD 01H DUP (?)		; CSpellListDlg::m_nSavedTab
?g_pSpellListDialog@@3PAVCSpellListDlg@@A DD 01H DUP (?) ; g_pSpellListDialog
?g_pSpellList@@3PAFA DD 01H DUP (?)			; g_pSpellList
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
CONST	SEGMENT
?messageMap@CSpellListCtrl@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CSpellListCtrl@@KGPBUAFX_MSGMAP@@XZ ; CSpellListCtrl::messageMap
	DD	FLAT:?_messageEntries@CSpellListCtrl@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CSpellListCtrl@@0QBUAFX_MSGMAP_ENTRY@@B DD 01H ; CSpellListCtrl::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	09H
	DD	FLAT:?OnCreate@CSpellListCtrl@@QAEHPAUtagCREATESTRUCTA@@@Z
	DD	0bc4eH
	DD	0ff93H
	DD	00H
	DD	00H
	DD	026H
	DD	FLAT:?OnStartDrag@CSpellListCtrl@@QAEXPAUtagNMHDR@@PAJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	??0CSCI_Spell@@QAE@XZ				; CSCI_Spell::CSCI_Spell
PUBLIC	??1CelObjView@@UAE@XZ				; CelObjView::~CelObjView
PUBLIC	?get_view@CSCI_BitMap@@QAEFXZ			; CSCI_BitMap::get_view
PUBLIC	?get_loop@CSCI_BitMap@@QAEFXZ			; CSCI_BitMap::get_loop
PUBLIC	??0CSpellDraggable@@QAE@VCSCI_Spell@@HPAVCSpellListCtrl@@@Z ; CSpellDraggable::CSpellDraggable
PUBLIC	?GetType@CSpellDraggable@@UAE?AW4eDragType@CDraggable@@XZ ; CSpellDraggable::GetType
PUBLIC	??_7CSpellDraggable@@6B@			; CSpellDraggable::`vftable'
PUBLIC	??_GCSpellDraggable@@UAEPAXI@Z			; CSpellDraggable::`scalar deleting destructor'
PUBLIC	??_ECSpellDraggable@@UAEPAXI@Z			; CSpellDraggable::`vector deleting destructor'
EXTRN	??0CelObjView@@QAE@HHH@Z:NEAR			; CelObjView::CelObjView
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__except_list:DWORD
EXTRN	__fltused:NEAR
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??0CDraggable@@QAE@XZ:NEAR			; CDraggable::CDraggable
EXTRN	??1CDraggable@@UAE@XZ:NEAR			; CDraggable::~CDraggable
EXTRN	??0CSkinBitmap@@QAE@PAVCelObj@@N@Z:NEAR		; CSkinBitmap::CSkinBitmap
;	COMDAT ??_7CSpellDraggable@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\SpellDlg.cpp
CONST	SEGMENT
??_7CSpellDraggable@@6B@ DD FLAT:??_ECSpellDraggable@@UAEPAXI@Z ; CSpellDraggable::`vftable'
	DD	FLAT:?GetType@CSpellDraggable@@UAE?AW4eDragType@CDraggable@@XZ
CONST	ENDS
xdata$x	SEGMENT
$T159010 DD	019930520H
	DD	03H
	DD	FLAT:$T159014
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159014 DD	0ffffffffH
	DD	FLAT:$L159004
	DD	00H
	DD	FLAT:$L159005
	DD	01H
	DD	FLAT:$L159006
xdata$x	ENDS
_TEXT	SEGMENT
$T159000 = -96
$T159001 = -100
__$EHRec$ = -12
_hSpell$ = 8
_nIndex$ = 12
_pList$ = 16
_this$ = -104
_view$ = -92
??0CSpellDraggable@@QAE@VCSCI_Spell@@HPAVCSpellListCtrl@@@Z PROC NEAR ; CSpellDraggable::CSpellDraggable

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L159011
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 60	 sub	 esp, 96			; 00000060H
  0001b	89 4d 98	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 98	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ??0CDraggable@@QAE@XZ	; CDraggable::CDraggable
  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002d	8b 4d 98	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	83 c1 10	 add	 ecx, 16			; 00000010H
  00033	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@XZ	; CSCI_Spell::CSCI_Spell
  00038	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSpellDraggable@@6B@ ; CSpellDraggable::`vftable'

; 32   : 	m_hSpell = hSpell;

  00041	8b 4d 98	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	66 8b 55 08	 mov	 dx, WORD PTR _hSpell$[ebp]
  00048	66 89 51 10	 mov	 WORD PTR [ecx+16], dx

; 33   : 	m_nIndex = nIndex;

  0004c	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4d 0c	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00052	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 34   : 	m_pList = pList;

  00055	8b 55 98	 mov	 edx, DWORD PTR _this$[ebp]
  00058	8b 45 10	 mov	 eax, DWORD PTR _pList$[ebp]
  0005b	89 42 18	 mov	 DWORD PTR [edx+24], eax

; 35   : 
; 36   : 	CelObjView view( hSpell.get_view(), 0, hSpell.get_loop() );

  0005e	8d 4d 08	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  00061	e8 00 00 00 00	 call	 ?get_loop@CSCI_BitMap@@QAEFXZ ; CSCI_BitMap::get_loop
  00066	0f bf c8	 movsx	 ecx, ax
  00069	51		 push	 ecx
  0006a	6a 00		 push	 0
  0006c	8d 4d 08	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  0006f	e8 00 00 00 00	 call	 ?get_view@CSCI_BitMap@@QAEFXZ ; CSCI_BitMap::get_view
  00074	0f bf d0	 movsx	 edx, ax
  00077	52		 push	 edx
  00078	8d 4d a4	 lea	 ecx, DWORD PTR _view$[ebp]
  0007b	e8 00 00 00 00	 call	 ??0CelObjView@@QAE@HHH@Z ; CelObjView::CelObjView
  00080	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 37   : 	m_pBitmap = new CSkinBitmap ( &view, 1.0 );

  00084	6a 1c		 push	 28			; 0000001cH
  00086	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0008b	83 c4 04	 add	 esp, 4
  0008e	89 45 9c	 mov	 DWORD PTR $T159001[ebp], eax
  00091	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00095	83 7d 9c 00	 cmp	 DWORD PTR $T159001[ebp], 0
  00099	74 18		 je	 SHORT $L159002
  0009b	68 00 00 f0 3f	 push	 1072693248		; 3ff00000H
  000a0	6a 00		 push	 0
  000a2	8d 45 a4	 lea	 eax, DWORD PTR _view$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d 9c	 mov	 ecx, DWORD PTR $T159001[ebp]
  000a9	e8 00 00 00 00	 call	 ??0CSkinBitmap@@QAE@PAVCelObj@@N@Z ; CSkinBitmap::CSkinBitmap
  000ae	89 45 94	 mov	 DWORD PTR -108+[ebp], eax
  000b1	eb 07		 jmp	 SHORT $L159003
$L159002:
  000b3	c7 45 94 00 00
	00 00		 mov	 DWORD PTR -108+[ebp], 0
$L159003:
  000ba	8b 4d 94	 mov	 ecx, DWORD PTR -108+[ebp]
  000bd	89 4d a0	 mov	 DWORD PTR $T159000[ebp], ecx
  000c0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000c4	8b 55 98	 mov	 edx, DWORD PTR _this$[ebp]
  000c7	8b 45 a0	 mov	 eax, DWORD PTR $T159000[ebp]
  000ca	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 38   : }

  000cd	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000d1	8d 4d a4	 lea	 ecx, DWORD PTR _view$[ebp]
  000d4	e8 00 00 00 00	 call	 ??1CelObjView@@UAE@XZ	; CelObjView::~CelObjView
  000d9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e0	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  000e3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L159004:
  00000	8b 4d 98	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CDraggable@@UAE@XZ	; CDraggable::~CDraggable
  00008	c3		 ret	 0
$L159005:
  00009	8d 4d a4	 lea	 ecx, DWORD PTR _view$[ebp]
  0000c	e8 00 00 00 00	 call	 ??1CelObjView@@UAE@XZ	; CelObjView::~CelObjView
  00011	c3		 ret	 0
$L159006:
  00012	8b 45 9c	 mov	 eax, DWORD PTR $T159001[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001b	59		 pop	 ecx
  0001c	c3		 ret	 0
$L159011:
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159010
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSpellDraggable@@QAE@VCSCI_Spell@@HPAVCSpellListCtrl@@@Z ENDP ; CSpellDraggable::CSpellDraggable
PUBLIC	??1CSpellDraggable@@UAE@XZ			; CSpellDraggable::~CSpellDraggable
;	COMDAT ??_GCSpellDraggable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSpellDraggable@@UAEPAXI@Z PROC NEAR		; CSpellDraggable::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSpellDraggable@@UAE@XZ ; CSpellDraggable::~CSpellDraggable
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L152527
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L152527:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSpellDraggable@@UAEPAXI@Z ENDP			; CSpellDraggable::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSpellDraggable@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSpellDraggable@@UAE@XZ PROC NEAR			; CSpellDraggable::~CSpellDraggable, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDraggable@@UAE@XZ	; CDraggable::~CDraggable
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSpellDraggable@@UAE@XZ ENDP				; CSpellDraggable::~CSpellDraggable
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?GetType@CSpellDraggable@@UAE?AW4eDragType@CDraggable@@XZ PROC NEAR ; CSpellDraggable::GetType

; 42   : {

  000f3	55		 push	 ebp
  000f4	8b ec		 mov	 ebp, esp
  000f6	51		 push	 ecx
  000f7	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 43   : 	return CDraggable::eDragSpell;

  000fa	b8 02 00 00 00	 mov	 eax, 2

; 44   : }

  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
?GetType@CSpellDraggable@@UAE?AW4eDragType@CDraggable@@XZ ENDP ; CSpellDraggable::GetType
_TEXT	ENDS
EXTRN	?messageMap@CSkinListCtrl@@1UAFX_MSGMAP@@B:QWORD ; CSkinListCtrl::messageMap
_TEXT	SEGMENT
?_GetBaseMessageMap@CSpellListCtrl@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CSpellListCtrl::_GetBaseMessageMap

; 47   : BEGIN_MESSAGE_MAP ( CSpellListCtrl, CSkinListCtrl )

  00103	55		 push	 ebp
  00104	8b ec		 mov	 ebp, esp
  00106	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinListCtrl@@1UAFX_MSGMAP@@B ; CSkinListCtrl::messageMap
  0010b	5d		 pop	 ebp
  0010c	c3		 ret	 0
?_GetBaseMessageMap@CSpellListCtrl@@KGPBUAFX_MSGMAP@@XZ ENDP ; CSpellListCtrl::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CSpellListCtrl@@MBEPBUAFX_MSGMAP@@XZ ; CSpellListCtrl::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CSpellListCtrl@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CSpellListCtrl::GetMessageMap

; 47   : BEGIN_MESSAGE_MAP ( CSpellListCtrl, CSkinListCtrl )

  0010d	55		 push	 ebp
  0010e	8b ec		 mov	 ebp, esp
  00110	51		 push	 ecx
  00111	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00114	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSpellListCtrl@@1UAFX_MSGMAP@@B ; CSpellListCtrl::messageMap
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c3		 ret	 0
?GetMessageMap@CSpellListCtrl@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CSpellListCtrl::GetMessageMap
_TEXT	ENDS
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	?GetItemBGColor@CSkinListCtrl@@MAEKH@Z		; CSkinListCtrl::GetItemBGColor
PUBLIC	?GetItemTextColor@CSpellListCtrl@@MAEKH@Z	; CSpellListCtrl::GetItemTextColor
PUBLIC	??0CSpellListCtrl@@QAE@XZ			; CSpellListCtrl::CSpellListCtrl
PUBLIC	?CanAcceptDrop@CSpellListCtrl@@UAEPAUHICON__@@AAVCDraggable@@AAVCPoint@@@Z ; CSpellListCtrl::CanAcceptDrop
PUBLIC	?AcceptDrop@CSpellListCtrl@@UAEXAAVCDraggable@@AAVCPoint@@@Z ; CSpellListCtrl::AcceptDrop
PUBLIC	??_7CSpellListCtrl@@6BCListCtrl@@@		; CSpellListCtrl::`vftable'
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	??_7CSpellListCtrl@@6BCSkinCtrl@@@		; CSpellListCtrl::`vftable'
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	??_7CSpellListCtrl@@6BCScrollable@@@		; CSpellListCtrl::`vftable'
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??_7CSpellListCtrl@@6BCMouseWheelable@@@	; CSpellListCtrl::`vftable'
PUBLIC	??_7CSpellListCtrl@@6B@				; CSpellListCtrl::`vftable'
PUBLIC	??_GCSpellListCtrl@@UAEPAXI@Z			; CSpellListCtrl::`scalar deleting destructor'
PUBLIC	??_ECSpellListCtrl@@UAEPAXI@Z			; CSpellListCtrl::`vector deleting destructor'
PUBLIC	??_ECSpellListCtrl@@WEA@AEPAXI@Z		; CSpellListCtrl::`vector deleting destructor'
PUBLIC	??_ECSpellListCtrl@@WHE@AEPAXI@Z		; CSpellListCtrl::`vector deleting destructor'
PUBLIC	??_ECSpellListCtrl@@WLE@AEPAXI@Z		; CSpellListCtrl::`vector deleting destructor'
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?Refresh@CSkinCtrl@@UAEXXZ:NEAR			; CSkinCtrl::Refresh
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
EXTRN	?OnMouseDown@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseDown
EXTRN	?OnMouseUp@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseUp
EXTRN	?OnActivate@CSkinCtrl@@UAEXFF@Z:NEAR		; CSkinCtrl::OnActivate
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??0CSkinListCtrl@@QAE@H@Z:NEAR			; CSkinListCtrl::CSkinListCtrl
EXTRN	??1CSkinListCtrl@@UAE@XZ:NEAR			; CSkinListCtrl::~CSkinListCtrl
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?SetLocation@CScrollable@@UAEXM@Z:NEAR		; CScrollable::SetLocation
EXTRN	?ChangeLocation@CScrollable@@UAEXH@Z:NEAR	; CScrollable::ChangeLocation
EXTRN	?ChangePage@CScrollable@@UAEXH@Z:NEAR		; CScrollable::ChangePage
EXTRN	?SetRange@CScrollable@@UAEXHH@Z:NEAR		; CScrollable::SetRange
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ:NEAR ; CListCtrl::GetRuntimeClass
EXTRN	?UpdateMe@CSkinListCtrl@@UAEXXZ:NEAR		; CSkinListCtrl::UpdateMe
EXTRN	?UpdateScrollBar@CSkinListCtrl@@UAEXXZ:NEAR	; CSkinListCtrl::UpdateScrollBar
EXTRN	?OnItemActivate@CSkinListCtrl@@UAEXH_N@Z:NEAR	; CSkinListCtrl::OnItemActivate
EXTRN	?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z:NEAR	; CSkinListCtrl::OnMouseWheel
EXTRN	?OnMouseOver@CSkinListCtrl@@UAEXVCPoint@@@Z:NEAR ; CSkinListCtrl::OnMouseOver
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:NEAR ; CListCtrl::DrawItem
EXTRN	?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z:NEAR	; CListCtrl::OnChildNotify
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	??0CDropTarget@@QAE@XZ:NEAR			; CDropTarget::CDropTarget
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
;	COMDAT ??_7CSpellListCtrl@@6BCListCtrl@@@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\SpellDlg.cpp
CONST	SEGMENT
??_7CSpellListCtrl@@6BCListCtrl@@@ DD FLAT:?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ ; CSpellListCtrl::`vftable'
	DD	FLAT:??_ECSpellListCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSpellListCtrl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?GetItemTextColor@CSpellListCtrl@@MAEKH@Z
	DD	FLAT:?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?OnItemActivate@CSkinListCtrl@@UAEXH_N@Z
	DD	FLAT:?OnMouseOver@CSkinListCtrl@@UAEXVCPoint@@@Z
CONST	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CSpellListCtrl@@6BCSkinCtrl@@@ DD FLAT:??_ECSpellListCtrl@@WEA@AEPAXI@Z ; CSpellListCtrl::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCScrollable@@@
CONST	SEGMENT
??_7CSpellListCtrl@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinListCtrl@@UAEXXZ ; CSpellListCtrl::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CScrollable@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CSkinListCtrl@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CSpellListCtrl@@6BCMouseWheelable@@@ DD FLAT:??_ECSpellListCtrl@@WHE@AEPAXI@Z ; CSpellListCtrl::`vftable'
	DD	FLAT:?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z
CONST	ENDS
;	COMDAT ??_7CSpellListCtrl@@6B@
CONST	SEGMENT
??_7CSpellListCtrl@@6B@ DD FLAT:??_ECSpellListCtrl@@WLE@AEPAXI@Z ; CSpellListCtrl::`vftable'
	DD	FLAT:?CanAcceptDrop@CSpellListCtrl@@UAEPAUHICON__@@AAVCDraggable@@AAVCPoint@@@Z
	DD	FLAT:?AcceptDrop@CSpellListCtrl@@UAEXAAVCDraggable@@AAVCPoint@@@Z
CONST	ENDS
xdata$x	SEGMENT
$T159026 DD	019930520H
	DD	01H
	DD	FLAT:$T159028
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159028 DD	0ffffffffH
	DD	FLAT:$L159023
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??0CSpellListCtrl@@QAE@XZ PROC NEAR			; CSpellListCtrl::CSpellListCtrl

; 56   : {

  0011d	55		 push	 ebp
  0011e	8b ec		 mov	 ebp, esp
  00120	6a ff		 push	 -1
  00122	68 00 00 00 00	 push	 $L159027
  00127	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0012d	50		 push	 eax
  0012e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00135	51		 push	 ecx
  00136	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00139	6a 5a		 push	 90			; 0000005aH
  0013b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ??0CSkinListCtrl@@QAE@H@Z ; CSkinListCtrl::CSkinListCtrl
  00143	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0014a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00153	e8 00 00 00 00	 call	 ??0CDropTarget@@QAE@XZ	; CDropTarget::CDropTarget
  00158	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0015b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSpellListCtrl@@6BCListCtrl@@@ ; CSpellListCtrl::`vftable'
  00161	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00164	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CSpellListCtrl@@6BCSkinCtrl@@@ ; CSpellListCtrl::`vftable'
  0016b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0016e	c7 42 54 00 00
	00 00		 mov	 DWORD PTR [edx+84], OFFSET FLAT:??_7CSpellListCtrl@@6BCScrollable@@@ ; CSpellListCtrl::`vftable'
  00175	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00178	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CSpellListCtrl@@6BCMouseWheelable@@@ ; CSpellListCtrl::`vftable'
  0017f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	c7 81 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+180], OFFSET FLAT:??_7CSpellListCtrl@@6B@ ; CSpellListCtrl::`vftable'

; 57   : 	m_bFavorites = false;

  0018c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0018f	c7 82 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+188], 0

; 58   : }

  00199	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001a0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001a3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001a6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001ad	8b e5		 mov	 esp, ebp
  001af	5d		 pop	 ebp
  001b0	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L159023:
  00027	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??1CSkinListCtrl@@UAE@XZ ; CSkinListCtrl::~CSkinListCtrl
  0002f	c3		 ret	 0
$L159027:
  00030	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159026
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSpellListCtrl@@QAE@XZ ENDP				; CSpellListCtrl::CSpellListCtrl
PUBLIC	??0CSCI_Spell@@QAE@G@Z				; CSCI_Spell::CSCI_Spell
PUBLIC	??BMemID@@QBEGXZ				; MemID::operator unsigned short
EXTRN	?canCast@CSCI_Spell@@QAEFXZ:NEAR		; CSCI_Spell::canCast
EXTRN	?GetItemData@CListCtrl@@QBEKH@Z:NEAR		; CListCtrl::GetItemData
_TEXT	SEGMENT
_nItem$ = 8
_this$ = -8
_hSpell$ = -4
?GetItemTextColor@CSpellListCtrl@@MAEKH@Z PROC NEAR	; CSpellListCtrl::GetItemTextColor

; 61   : {

  001b1	55		 push	 ebp
  001b2	8b ec		 mov	 ebp, esp
  001b4	83 ec 08	 sub	 esp, 8
  001b7	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 	CSCI_Spell hSpell = GetItemData( nItem );

  001ba	8b 45 08	 mov	 eax, DWORD PTR _nItem$[ebp]
  001bd	50		 push	 eax
  001be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c1	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  001c6	50		 push	 eax
  001c7	8d 4d fc	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  001ca	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 63   : 
; 64   : 	if ( hSpell && hSpell.canCast() )

  001cf	8d 4d fc	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  001d2	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  001d7	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  001dc	85 c0		 test	 eax, eax
  001de	74 1a		 je	 SHORT $L152560
  001e0	8d 4d fc	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  001e3	e8 00 00 00 00	 call	 ?canCast@CSCI_Spell@@QAEFXZ ; CSCI_Spell::canCast
  001e8	0f bf c8	 movsx	 ecx, ax
  001eb	85 c9		 test	 ecx, ecx
  001ed	74 0b		 je	 SHORT $L152560

; 65   : 		return colItemText;

  001ef	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001f2	8b 82 a8 00 00
	00		 mov	 eax, DWORD PTR [edx+168]
  001f8	eb 05		 jmp	 SHORT $L152558
$L152560:

; 66   : 
; 67   : 	return 0x00a0a0a0;

  001fa	b8 a0 a0 a0 00	 mov	 eax, 10526880		; 00a0a0a0H
$L152558:

; 68   : }  

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 04 00	 ret	 4
?GetItemTextColor@CSpellListCtrl@@MAEKH@Z ENDP		; CSpellListCtrl::GetItemTextColor
_TEXT	ENDS
PUBLIC	?GetGlobal@PMachine@@QAEFH@Z			; PMachine::GetGlobal
PUBLIC	??0CSCI_Spell@@QAE@ABV0@@Z			; CSCI_Spell::CSCI_Spell
PUBLIC	??0CSCI_WorldEgo@@QAE@G@Z			; CSCI_WorldEgo::CSCI_WorldEgo
EXTRN	?pm@@3VPMachine@@A:BYTE				; pm
EXTRN	?stopTargetting@CSCI_WorldEgo@@QAEXXZ:NEAR	; CSCI_WorldEgo::stopTargetting
EXTRN	?StartDrag@CDragDropMgr@@QAEXPAVCDraggable@@@Z:NEAR ; CDragDropMgr::StartDrag
EXTRN	?HandsAreOff@@YA_NXZ:NEAR			; HandsAreOff
EXTRN	?g_pDragDropMgr@@3PAVCDragDropMgr@@A:DWORD	; g_pDragDropMgr
xdata$x	SEGMENT
$T159039 DD	019930520H
	DD	01H
	DD	FLAT:$T159041
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159041 DD	0ffffffffH
	DD	FLAT:$L159037
xdata$x	ENDS
_TEXT	SEGMENT
$T159031 = -32
$T159032 = -36
$T159033 = -40
$T159034 = -44
__$EHRec$ = -12
_pNotifyStruct$ = 8
_this$ = -48
_pListView$ = -16
_hSpell$ = -20
_hEgo$152571 = -24
_pSpellObj$152572 = -28
?OnStartDrag@CSpellListCtrl@@QAEXPAUtagNMHDR@@PAJ@Z PROC NEAR ; CSpellListCtrl::OnStartDrag

; 72   : {

  00205	55		 push	 ebp
  00206	8b ec		 mov	 ebp, esp
  00208	6a ff		 push	 -1
  0020a	68 00 00 00 00	 push	 $L159040
  0020f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00215	50		 push	 eax
  00216	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0021d	83 ec 28	 sub	 esp, 40			; 00000028H
  00220	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 73   : 	// do nothing if the game is hands off
; 74   : 	if ( HandsAreOff() )

  00223	e8 00 00 00 00	 call	 ?HandsAreOff@@YA_NXZ	; HandsAreOff
  00228	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0022d	85 c0		 test	 eax, eax
  0022f	74 05		 je	 SHORT $L152566

; 75   : 		return;

  00231	e9 cf 00 00 00	 jmp	 $L152565
$L152566:

; 76   : 
; 77   : 	NMLISTVIEW *pListView = (NMLISTVIEW *)pNotifyStruct;

  00236	8b 45 08	 mov	 eax, DWORD PTR _pNotifyStruct$[ebp]
  00239	89 45 f0	 mov	 DWORD PTR _pListView$[ebp], eax

; 78   : 	CSCI_Spell hSpell = GetItemData ( pListView->iItem );

  0023c	8b 4d f0	 mov	 ecx, DWORD PTR _pListView$[ebp]
  0023f	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00242	52		 push	 edx
  00243	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00246	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  0024b	50		 push	 eax
  0024c	8d 4d ec	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  0024f	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 79   : 
; 80   : 	if ( hSpell ) {

  00254	8d 4d ec	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  00257	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0025c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00261	85 c0		 test	 eax, eax
  00263	0f 84 9c 00 00
	00		 je	 $L152570

; 81   : 		// tell ego to stop targeting...
; 82   : 		CSCI_WorldEgo hEgo = pm.GetGlobal ( gSCI_ego );

  00269	6a 01		 push	 1
  0026b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?pm@@3VPMachine@@A
  00270	e8 00 00 00 00	 call	 ?GetGlobal@PMachine@@QAEFH@Z ; PMachine::GetGlobal
  00275	50		 push	 eax
  00276	8d 4d e8	 lea	 ecx, DWORD PTR _hEgo$152571[ebp]
  00279	e8 00 00 00 00	 call	 ??0CSCI_WorldEgo@@QAE@G@Z ; CSCI_WorldEgo::CSCI_WorldEgo

; 83   : 		hEgo.stopTargetting();

  0027e	8d 4d e8	 lea	 ecx, DWORD PTR _hEgo$152571[ebp]
  00281	e8 00 00 00 00	 call	 ?stopTargetting@CSCI_WorldEgo@@QAEXXZ ; CSCI_WorldEgo::stopTargetting

; 84   : 
; 85   : 		CSpellDraggable *pSpellObj = new CSpellDraggable ( (CSCI_Spell) GetItemData ( pListView->iItem ), pListView->iItem, this ); 

  00286	6a 1c		 push	 28			; 0000001cH
  00288	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0028d	83 c4 04	 add	 esp, 4
  00290	89 45 dc	 mov	 DWORD PTR $T159032[ebp], eax
  00293	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0029a	83 7d dc 00	 cmp	 DWORD PTR $T159032[ebp], 0
  0029e	74 3c		 je	 SHORT $L159035
  002a0	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  002a3	50		 push	 eax
  002a4	8b 4d f0	 mov	 ecx, DWORD PTR _pListView$[ebp]
  002a7	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  002aa	52		 push	 edx
  002ab	8b 45 f0	 mov	 eax, DWORD PTR _pListView$[ebp]
  002ae	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  002b1	51		 push	 ecx
  002b2	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b5	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  002ba	50		 push	 eax
  002bb	8d 4d d4	 lea	 ecx, DWORD PTR $T159034[ebp]
  002be	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell
  002c3	51		 push	 ecx
  002c4	8b cc		 mov	 ecx, esp
  002c6	89 65 d8	 mov	 DWORD PTR $T159033[ebp], esp
  002c9	50		 push	 eax
  002ca	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell
  002cf	8b 4d dc	 mov	 ecx, DWORD PTR $T159032[ebp]
  002d2	e8 00 00 00 00	 call	 ??0CSpellDraggable@@QAE@VCSCI_Spell@@HPAVCSpellListCtrl@@@Z ; CSpellDraggable::CSpellDraggable
  002d7	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  002da	eb 07		 jmp	 SHORT $L159036
$L159035:
  002dc	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR -52+[ebp], 0
$L159036:
  002e3	8b 55 cc	 mov	 edx, DWORD PTR -52+[ebp]
  002e6	89 55 e0	 mov	 DWORD PTR $T159031[ebp], edx
  002e9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002f0	8b 45 e0	 mov	 eax, DWORD PTR $T159031[ebp]
  002f3	89 45 e4	 mov	 DWORD PTR _pSpellObj$152572[ebp], eax

; 86   : 		g_pDragDropMgr->StartDrag ( pSpellObj );

  002f6	8b 4d e4	 mov	 ecx, DWORD PTR _pSpellObj$152572[ebp]
  002f9	51		 push	 ecx
  002fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDragDropMgr@@3PAVCDragDropMgr@@A ; g_pDragDropMgr
  00300	e8 00 00 00 00	 call	 ?StartDrag@CDragDropMgr@@QAEXPAVCDraggable@@@Z ; CDragDropMgr::StartDrag
$L152570:
$L152565:

; 88   : }

  00305	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00308	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0030f	8b e5		 mov	 esp, ebp
  00311	5d		 pop	 ebp
  00312	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L159037:
  0003a	8b 45 dc	 mov	 eax, DWORD PTR $T159032[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00043	59		 pop	 ecx
  00044	c3		 ret	 0
$L159040:
  00045	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159039
  0004a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnStartDrag@CSpellListCtrl@@QAEXPAUtagNMHDR@@PAJ@Z ENDP ; CSpellListCtrl::OnStartDrag
PUBLIC	?GetSpell@CSpellDraggable@@QAE?AVCSCI_Spell@@XZ	; CSpellDraggable::GetSpell
PUBLIC	?GetIndex@CSpellDraggable@@QAEHXZ		; CSpellDraggable::GetIndex
PUBLIC	?GetList@CSpellDraggable@@QAEPAVCSpellListCtrl@@XZ ; CSpellDraggable::GetList
PUBLIC	?IsFavorite@CSpellListCtrl@@QAE_NXZ		; CSpellListCtrl::IsFavorite
PUBLIC	?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z	; CWnd::ScreenToClient
EXTRN	?FindItem@CSkinListCtrl@@QAEHH@Z:NEAR		; CSkinListCtrl::FindItem
EXTRN	?HitTest@CListCtrl@@QBEHVCPoint@@PAI@Z:NEAR	; CListCtrl::HitTest
EXTRN	?g_hDropCursor@@3PAUHICON__@@A:DWORD		; g_hDropCursor
_TEXT	SEGMENT
_obj$ = 8
_point$ = 12
_this$ = -32
_hCursor$ = -4
_pSpellObj$152587 = -8
_nFlags$152597 = -12
_pnt$152598 = -24
_nItem$152599 = -16
$T159043 = -28
?CanAcceptDrop@CSpellListCtrl@@UAEPAUHICON__@@AAVCDraggable@@AAVCPoint@@@Z PROC NEAR ; CSpellListCtrl::CanAcceptDrop

; 92   : {

  00315	55		 push	 ebp
  00316	8b ec		 mov	 ebp, esp
  00318	83 ec 20	 sub	 esp, 32			; 00000020H
  0031b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 93   : 	HCURSOR hCursor = NULL;

  0031e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hCursor$[ebp], 0

; 94   : 
; 95   : 	if ( obj.GetType() == CDraggable::eDragSpell ) {

  00325	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00328	8b 10		 mov	 edx, DWORD PTR [eax]
  0032a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0032d	ff 52 04	 call	 DWORD PTR [edx+4]
  00330	83 f8 02	 cmp	 eax, 2
  00333	0f 85 e0 00 00
	00		 jne	 $L152600

; 96   : 		// convert the draggable object to what we expect...
; 97   : 		CSpellDraggable* pSpellObj = (CSpellDraggable *)&obj;

  00339	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0033c	89 45 f8	 mov	 DWORD PTR _pSpellObj$152587[ebp], eax

; 98   : 
; 99   : 		if ( !IsFavorite() ) {

  0033f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00342	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  00348	e8 00 00 00 00	 call	 ?IsFavorite@CSpellListCtrl@@QAE_NXZ ; CSpellListCtrl::IsFavorite
  0034d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00352	85 c0		 test	 eax, eax
  00354	75 27		 jne	 SHORT $L152589

; 100  : 			if ( pSpellObj->GetList()->IsFavorite() )

  00356	8b 4d f8	 mov	 ecx, DWORD PTR _pSpellObj$152587[ebp]
  00359	e8 00 00 00 00	 call	 ?GetList@CSpellDraggable@@QAEPAVCSpellListCtrl@@XZ ; CSpellDraggable::GetList
  0035e	8b c8		 mov	 ecx, eax
  00360	e8 00 00 00 00	 call	 ?IsFavorite@CSpellListCtrl@@QAE_NXZ ; CSpellListCtrl::IsFavorite
  00365	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0036a	85 c0		 test	 eax, eax
  0036c	74 0a		 je	 SHORT $L152590

; 101  : 				return g_hDropCursor;

  0036e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_hDropCursor@@3PAUHICON__@@A ; g_hDropCursor
  00373	e9 a4 00 00 00	 jmp	 $L152584
$L152590:

; 102  : 		} else {

  00378	e9 9c 00 00 00	 jmp	 $L152600
$L152589:

; 103  : 			if ( FindItem( (int) pSpellObj->GetSpell() ) == -1 ) {

  0037d	8d 4d e4	 lea	 ecx, DWORD PTR $T159043[ebp]
  00380	51		 push	 ecx
  00381	8b 4d f8	 mov	 ecx, DWORD PTR _pSpellObj$152587[ebp]
  00384	e8 00 00 00 00	 call	 ?GetSpell@CSpellDraggable@@QAE?AVCSCI_Spell@@XZ ; CSpellDraggable::GetSpell
  00389	8b c8		 mov	 ecx, eax
  0038b	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00390	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00395	50		 push	 eax
  00396	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00399	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  0039f	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  003a4	83 f8 ff	 cmp	 eax, -1
  003a7	75 07		 jne	 SHORT $L152594

; 104  : 				return g_hDropCursor;

  003a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_hDropCursor@@3PAUHICON__@@A ; g_hDropCursor
  003ae	eb 6c		 jmp	 SHORT $L152584
$L152594:

; 105  : 			} else if ( pSpellObj->GetList()->IsFavorite() ) {

  003b0	8b 4d f8	 mov	 ecx, DWORD PTR _pSpellObj$152587[ebp]
  003b3	e8 00 00 00 00	 call	 ?GetList@CSpellDraggable@@QAEPAVCSpellListCtrl@@XZ ; CSpellDraggable::GetList
  003b8	8b c8		 mov	 ecx, eax
  003ba	e8 00 00 00 00	 call	 ?IsFavorite@CSpellListCtrl@@QAE_NXZ ; CSpellListCtrl::IsFavorite
  003bf	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  003c4	85 c0		 test	 eax, eax
  003c6	74 51		 je	 SHORT $L152600

; 106  : 				UINT nFlags;
; 107  : 
; 108  : 				CPoint pnt( point );

  003c8	8b 55 0c	 mov	 edx, DWORD PTR _point$[ebp]
  003cb	8b 02		 mov	 eax, DWORD PTR [edx]
  003cd	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  003d0	89 45 e8	 mov	 DWORD PTR _pnt$152598[ebp], eax
  003d3	89 4d ec	 mov	 DWORD PTR _pnt$152598[ebp+4], ecx

; 109  : 				ScreenToClient( &pnt );

  003d6	8d 55 e8	 lea	 edx, DWORD PTR _pnt$152598[ebp]
  003d9	52		 push	 edx
  003da	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  003dd	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  003e3	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ScreenToClient

; 110  : 
; 111  : 				int nItem = CListCtrl::HitTest( pnt, &nFlags );

  003e8	8d 45 f4	 lea	 eax, DWORD PTR _nFlags$152597[ebp]
  003eb	50		 push	 eax
  003ec	8b 4d ec	 mov	 ecx, DWORD PTR _pnt$152598[ebp+4]
  003ef	51		 push	 ecx
  003f0	8b 55 e8	 mov	 edx, DWORD PTR _pnt$152598[ebp]
  003f3	52		 push	 edx
  003f4	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  003f7	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  003fd	e8 00 00 00 00	 call	 ?HitTest@CListCtrl@@QBEHVCPoint@@PAI@Z ; CListCtrl::HitTest
  00402	89 45 f0	 mov	 DWORD PTR _nItem$152599[ebp], eax

; 112  : 
; 113  : 				if ( nItem != pSpellObj->GetIndex() ) {

  00405	8b 4d f8	 mov	 ecx, DWORD PTR _pSpellObj$152587[ebp]
  00408	e8 00 00 00 00	 call	 ?GetIndex@CSpellDraggable@@QAEHXZ ; CSpellDraggable::GetIndex
  0040d	39 45 f0	 cmp	 DWORD PTR _nItem$152599[ebp], eax
  00410	74 07		 je	 SHORT $L152600

; 114  : 					return g_hDropCursor;

  00412	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_hDropCursor@@3PAUHICON__@@A ; g_hDropCursor
  00417	eb 03		 jmp	 SHORT $L152584
$L152600:

; 119  : 
; 120  : 	return hCursor;

  00419	8b 45 fc	 mov	 eax, DWORD PTR _hCursor$[ebp]
$L152584:

; 121  : }

  0041c	8b e5		 mov	 esp, ebp
  0041e	5d		 pop	 ebp
  0041f	c2 08 00	 ret	 8
?CanAcceptDrop@CSpellListCtrl@@UAEPAUHICON__@@AAVCDraggable@@AAVCPoint@@@Z ENDP ; CSpellListCtrl::CanAcceptDrop
_TEXT	ENDS
EXTRN	?CopyLine@CSkinListCtrl@@QAEHPAV1@HH@Z:NEAR	; CSkinListCtrl::CopyLine
EXTRN	?MoveLine@CSkinListCtrl@@QAEHHH@Z:NEAR		; CSkinListCtrl::MoveLine
EXTRN	?DeleteItem@CSkinListCtrl@@QAEHH@Z:NEAR		; CSkinListCtrl::DeleteItem
_TEXT	SEGMENT
_obj$ = 8
_point$ = 12
_this$ = -184
_pObj$152607 = -4
_pList$152609 = -8
_nFlags$152612 = -12
_pnt$152615 = -64
_nItem$152616 = -16
_nFlags$152618 = -168
_pnt$152619 = -180
_nItem$152620 = -172
?AcceptDrop@CSpellListCtrl@@UAEXAAVCDraggable@@AAVCPoint@@@Z PROC NEAR ; CSpellListCtrl::AcceptDrop

; 125  : {

  00422	55		 push	 ebp
  00423	8b ec		 mov	 ebp, esp
  00425	81 ec b8 00 00
	00		 sub	 esp, 184		; 000000b8H
  0042b	89 8d 48 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 126  : 	// extra check to make sure that we can accept this drop
; 127  : 	if ( CanAcceptDrop ( obj, point ) ) {

  00431	8b 45 0c	 mov	 eax, DWORD PTR _point$[ebp]
  00434	50		 push	 eax
  00435	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00438	51		 push	 ecx
  00439	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0043f	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00445	8b 02		 mov	 eax, DWORD PTR [edx]
  00447	ff 50 04	 call	 DWORD PTR [eax+4]
  0044a	85 c0		 test	 eax, eax
  0044c	0f 84 2a 01 00
	00		 je	 $L152621

; 128  : 		CSpellDraggable *pObj = (CSpellDraggable *)&obj;

  00452	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00455	89 4d fc	 mov	 DWORD PTR _pObj$152607[ebp], ecx

; 129  : 
; 130  : 		CSpellListCtrl* pList = pObj->GetList();

  00458	8b 4d fc	 mov	 ecx, DWORD PTR _pObj$152607[ebp]
  0045b	e8 00 00 00 00	 call	 ?GetList@CSpellDraggable@@QAEPAVCSpellListCtrl@@XZ ; CSpellDraggable::GetList
  00460	89 45 f8	 mov	 DWORD PTR _pList$152609[ebp], eax

; 131  : 
; 132  : 		if ( IsFavorite() ) {

  00463	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00469	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  0046f	e8 00 00 00 00	 call	 ?IsFavorite@CSpellListCtrl@@QAE_NXZ ; CSpellListCtrl::IsFavorite
  00474	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00479	85 c0		 test	 eax, eax
  0047b	0f 84 ea 00 00
	00		 je	 $L152610

; 133  : 			if ( pList->IsFavorite() ) {

  00481	8b 4d f8	 mov	 ecx, DWORD PTR _pList$152609[ebp]
  00484	e8 00 00 00 00	 call	 ?IsFavorite@CSpellListCtrl@@QAE_NXZ ; CSpellListCtrl::IsFavorite
  00489	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0048e	85 c0		 test	 eax, eax
  00490	74 5a		 je	 SHORT $L152611

; 134  : 				UINT nFlags;
; 135  : 				LVITEM pItem;
; 136  : 				char name[100];
; 137  : 
; 138  : 				CPoint pnt( point );

  00492	8b 55 0c	 mov	 edx, DWORD PTR _point$[ebp]
  00495	8b 02		 mov	 eax, DWORD PTR [edx]
  00497	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0049a	89 45 c0	 mov	 DWORD PTR _pnt$152615[ebp], eax
  0049d	89 4d c4	 mov	 DWORD PTR _pnt$152615[ebp+4], ecx

; 139  : 				ScreenToClient( &pnt );

  004a0	8d 55 c0	 lea	 edx, DWORD PTR _pnt$152615[ebp]
  004a3	52		 push	 edx
  004a4	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  004aa	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  004b0	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ScreenToClient

; 140  : 
; 141  : 				int nItem = CListCtrl::HitTest( pnt, &nFlags );

  004b5	8d 45 f4	 lea	 eax, DWORD PTR _nFlags$152612[ebp]
  004b8	50		 push	 eax
  004b9	8b 4d c4	 mov	 ecx, DWORD PTR _pnt$152615[ebp+4]
  004bc	51		 push	 ecx
  004bd	8b 55 c0	 mov	 edx, DWORD PTR _pnt$152615[ebp]
  004c0	52		 push	 edx
  004c1	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  004c7	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  004cd	e8 00 00 00 00	 call	 ?HitTest@CListCtrl@@QBEHVCPoint@@PAI@Z ; CListCtrl::HitTest
  004d2	89 45 f0	 mov	 DWORD PTR _nItem$152616[ebp], eax

; 142  : 
; 143  : 				pList->MoveLine( pObj->GetIndex(), nItem );

  004d5	8b 45 f0	 mov	 eax, DWORD PTR _nItem$152616[ebp]
  004d8	50		 push	 eax
  004d9	8b 4d fc	 mov	 ecx, DWORD PTR _pObj$152607[ebp]
  004dc	e8 00 00 00 00	 call	 ?GetIndex@CSpellDraggable@@QAEHXZ ; CSpellDraggable::GetIndex
  004e1	50		 push	 eax
  004e2	8b 4d f8	 mov	 ecx, DWORD PTR _pList$152609[ebp]
  004e5	e8 00 00 00 00	 call	 ?MoveLine@CSkinListCtrl@@QAEHHH@Z ; CSkinListCtrl::MoveLine

; 144  : 			} else {

  004ea	eb 7d		 jmp	 SHORT $L152617
$L152611:

; 145  : 				UINT nFlags;
; 146  : 				CPoint pnt( point );

  004ec	8b 4d 0c	 mov	 ecx, DWORD PTR _point$[ebp]
  004ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  004f1	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  004f4	89 95 4c ff ff
	ff		 mov	 DWORD PTR _pnt$152619[ebp], edx
  004fa	89 85 50 ff ff
	ff		 mov	 DWORD PTR _pnt$152619[ebp+4], eax

; 147  : 
; 148  : 				ScreenToClient( &pnt );

  00500	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _pnt$152619[ebp]
  00506	51		 push	 ecx
  00507	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0050d	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  00513	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ScreenToClient

; 149  : 
; 150  : 				int nItem = CListCtrl::HitTest( pnt, &nFlags );

  00518	8d 95 58 ff ff
	ff		 lea	 edx, DWORD PTR _nFlags$152618[ebp]
  0051e	52		 push	 edx
  0051f	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _pnt$152619[ebp+4]
  00525	50		 push	 eax
  00526	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _pnt$152619[ebp]
  0052c	51		 push	 ecx
  0052d	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00533	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  00539	e8 00 00 00 00	 call	 ?HitTest@CListCtrl@@QBEHVCPoint@@PAI@Z ; CListCtrl::HitTest
  0053e	89 85 54 ff ff
	ff		 mov	 DWORD PTR _nItem$152620[ebp], eax

; 151  : 
; 152  : 				CopyLine( pList, pObj->GetIndex(), nItem );

  00544	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _nItem$152620[ebp]
  0054a	52		 push	 edx
  0054b	8b 4d fc	 mov	 ecx, DWORD PTR _pObj$152607[ebp]
  0054e	e8 00 00 00 00	 call	 ?GetIndex@CSpellDraggable@@QAEHXZ ; CSpellDraggable::GetIndex
  00553	50		 push	 eax
  00554	8b 45 f8	 mov	 eax, DWORD PTR _pList$152609[ebp]
  00557	50		 push	 eax
  00558	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0055e	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  00564	e8 00 00 00 00	 call	 ?CopyLine@CSkinListCtrl@@QAEHPAV1@HH@Z ; CSkinListCtrl::CopyLine
$L152617:

; 154  : 		} else {

  00569	eb 11		 jmp	 SHORT $L152621
$L152610:

; 155  : 			pList->DeleteItem( pObj->GetIndex() );

  0056b	8b 4d fc	 mov	 ecx, DWORD PTR _pObj$152607[ebp]
  0056e	e8 00 00 00 00	 call	 ?GetIndex@CSpellDraggable@@QAEHXZ ; CSpellDraggable::GetIndex
  00573	50		 push	 eax
  00574	8b 4d f8	 mov	 ecx, DWORD PTR _pList$152609[ebp]
  00577	e8 00 00 00 00	 call	 ?DeleteItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::DeleteItem
$L152621:

; 158  : }

  0057c	8b e5		 mov	 esp, ebp
  0057e	5d		 pop	 ebp
  0057f	c2 08 00	 ret	 8
?AcceptDrop@CSpellListCtrl@@UAEXAAVCDraggable@@AAVCPoint@@@Z ENDP ; CSpellListCtrl::AcceptDrop
_TEXT	ENDS
PUBLIC	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ		; CWnd::GetSafeHwnd
PUBLIC	?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z	; CWnd::OnCreate
EXTRN	?LinkToWindow@CDropTarget@@IAEXPAUHWND__@@@Z:NEAR ; CDropTarget::LinkToWindow
_TEXT	SEGMENT
_lpCreateStruct$ = 8
_this$ = -4
?OnCreate@CSpellListCtrl@@QAEHPAUtagCREATESTRUCTA@@@Z PROC NEAR ; CSpellListCtrl::OnCreate

; 162  : {

  00582	55		 push	 ebp
  00583	8b ec		 mov	 ebp, esp
  00585	51		 push	 ecx
  00586	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 163  : 	CDropTarget::LinkToWindow ( GetSafeHwnd() );

  00589	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0058c	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00591	50		 push	 eax
  00592	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00595	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  0059b	e8 00 00 00 00	 call	 ?LinkToWindow@CDropTarget@@IAEXPAUHWND__@@@Z ; CDropTarget::LinkToWindow

; 164  : 	return CWnd::OnCreate ( lpCreateStruct );

  005a0	8b 45 08	 mov	 eax, DWORD PTR _lpCreateStruct$[ebp]
  005a3	50		 push	 eax
  005a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  005a7	e8 00 00 00 00	 call	 ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ; CWnd::OnCreate

; 165  : }

  005ac	8b e5		 mov	 esp, ebp
  005ae	5d		 pop	 ebp
  005af	c2 04 00	 ret	 4
?OnCreate@CSpellListCtrl@@QAEHPAUtagCREATESTRUCTA@@@Z ENDP ; CSpellListCtrl::OnCreate
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@XZ				; CSCI_Object::CSCI_Object
PUBLIC	??0?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@ABV?$allocator@PAVCTabBtn@@@1@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::vector<CTabBtn *,std::allocator<CTabBtn *> >
PUBLIC	??1?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::~vector<CTabBtn *,std::allocator<CTabBtn *> >
PUBLIC	?resize@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXIABQAVCTabBtn@@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::resize
PUBLIC	?Next@CSkinWnd@@UAEXXZ				; CSkinWnd::Next
PUBLIC	?Previous@CSkinWnd@@UAEXXZ			; CSkinWnd::Previous
PUBLIC	??0CSpellListDlg@@QAE@VCSCI_Object@@F@Z		; CSpellListDlg::CSpellListDlg
PUBLIC	?MakeSkinCtrl@CSpellListDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSpellListDlg::MakeSkinCtrl
PUBLIC	?CloseSelf@CSpellListDlg@@UAEX_N@Z		; CSpellListDlg::CloseSelf
PUBLIC	?HandleVerb@CSpellListDlg@@UAEHHVCSCI_WorldObject@@@Z ; CSpellListDlg::HandleVerb
PUBLIC	?EnableGameModal@CSpellListDlg@@UAEXHPAH@Z	; CSpellListDlg::EnableGameModal
PUBLIC	?DisableGameModal@CSpellListDlg@@UAEXHPAH_N@Z	; CSpellListDlg::DisableGameModal
PUBLIC	??_7CSpellListDlg@@6BCSkinWnd@@@		; CSpellListDlg::`vftable'
PUBLIC	??_7CSpellListDlg@@6BCVerbHandler@@@		; CSpellListDlg::`vftable'
PUBLIC	??_GCSpellListDlg@@UAEPAXI@Z			; CSpellListDlg::`scalar deleting destructor'
PUBLIC	??_ECSpellListDlg@@UAEPAXI@Z			; CSpellListDlg::`vector deleting destructor'
PUBLIC	??_ECSpellListDlg@@WJE@AEPAXI@Z			; CSpellListDlg::`vector deleting destructor'
EXTRN	??0CVerbHandler@@QAE@XZ:NEAR			; CVerbHandler::CVerbHandler
EXTRN	??1CVerbHandler@@UAE@XZ:NEAR			; CVerbHandler::~CVerbHandler
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	?GetProcessEvents@CSkinWnd@@MAE_NXZ:NEAR	; CSkinWnd::GetProcessEvents
EXTRN	??0CSkinWnd@@QAE@XZ:NEAR			; CSkinWnd::CSkinWnd
EXTRN	??1CSkinWnd@@UAE@XZ:NEAR			; CSkinWnd::~CSkinWnd
EXTRN	?Disable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Disable
EXTRN	?Enable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Enable
EXTRN	?ProcessRefreshList@CSkinWnd@@UAEHXZ:NEAR	; CSkinWnd::ProcessRefreshList
EXTRN	?UpdateTracking@CSkinWnd@@UAEXXZ:NEAR		; CSkinWnd::UpdateTracking
EXTRN	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CSkinWnd::GetEventSinkMap
EXTRN	?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinWnd::GetMessageMap
;	COMDAT ??_7CSpellListDlg@@6BCSkinWnd@@@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\SpellDlg.cpp
CONST	SEGMENT
??_7CSpellListDlg@@6BCSkinWnd@@@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CSpellListDlg::`vftable'
	DD	FLAT:??_ECSpellListDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CSpellListDlg@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSpellListDlg@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSpellListDlg@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CSpellListDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CSpellListDlg@@6BCVerbHandler@@@
CONST	SEGMENT
??_7CSpellListDlg@@6BCVerbHandler@@@ DD FLAT:??_ECSpellListDlg@@WJE@AEPAXI@Z ; CSpellListDlg::`vftable'
	DD	FLAT:?HandleVerb@CSpellListDlg@@UAEHHVCSCI_WorldObject@@@Z
CONST	ENDS
xdata$x	SEGMENT
$T159053 DD	019930520H
	DD	03H
	DD	FLAT:$T159055
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159055 DD	0ffffffffH
	DD	FLAT:$L159049
	DD	00H
	DD	FLAT:$L159050
	DD	01H
	DD	FLAT:$L159051
xdata$x	ENDS
_TEXT	SEGMENT
_Object$ = 8
_nMethod$ = 12
_this$ = -24
$T159047 = -16
$T159048 = -20
__$EHRec$ = -12
??0CSpellListDlg@@QAE@VCSCI_Object@@F@Z PROC NEAR	; CSpellListDlg::CSpellListDlg

; 203  : {

  005b2	55		 push	 ebp
  005b3	8b ec		 mov	 ebp, esp
  005b5	6a ff		 push	 -1
  005b7	68 00 00 00 00	 push	 $L159054
  005bc	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  005c2	50		 push	 eax
  005c3	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  005ca	83 ec 0c	 sub	 esp, 12			; 0000000cH
  005cd	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  005d0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  005d3	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  005d8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  005df	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  005e2	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  005e8	e8 00 00 00 00	 call	 ??0CVerbHandler@@QAE@XZ	; CVerbHandler::CVerbHandler
  005ed	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  005f1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  005f4	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  005fa	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@XZ	; CSCI_Object::CSCI_Object
  005ff	8d 45 f0	 lea	 eax, DWORD PTR $T159047[ebp]
  00602	50		 push	 eax
  00603	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00606	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0060c	e8 00 00 00 00	 call	 ??0?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@ABV?$allocator@PAVCTabBtn@@@1@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::vector<CTabBtn *,std::allocator<CTabBtn *> >
  00611	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00615	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00618	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CSpellListDlg@@6BCSkinWnd@@@ ; CSpellListDlg::`vftable'
  0061e	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00621	c7 82 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+148], OFFSET FLAT:??_7CSpellListDlg@@6BCVerbHandler@@@ ; CSpellListDlg::`vftable'

; 204  : 	if ( g_pSpellListDialog )

  0062b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSpellListDialog@@3PAVCSpellListDlg@@A, 0 ; g_pSpellListDialog
  00632	74 15		 je	 SHORT $L152699

; 205  : 		g_pSpellListDialog->CloseSelf();

  00634	6a 00		 push	 0
  00636	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pSpellListDialog@@3PAVCSpellListDlg@@A ; g_pSpellListDialog
  0063b	8b 10		 mov	 edx, DWORD PTR [eax]
  0063d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSpellListDialog@@3PAVCSpellListDlg@@A ; g_pSpellListDialog
  00643	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L152699:

; 206  : 
; 207  : 	m_pFavoritesList = NULL;

  00649	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0064c	c7 80 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+152], 0

; 208  : 	m_pSpellList = NULL;

  00656	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00659	c7 81 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+156], 0

; 209  : 
; 210  : 	m_hObject = Object;

  00663	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00666	66 8b 45 08	 mov	 ax, WORD PTR _Object$[ebp]
  0066a	66 89 82 a4 00
	00 00		 mov	 WORD PTR [edx+164], ax

; 211  : 	m_nMethod = nMethod;

  00671	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00674	66 8b 55 0c	 mov	 dx, WORD PTR _nMethod$[ebp]
  00678	66 89 91 a6 00
	00 00		 mov	 WORD PTR [ecx+166], dx

; 212  : 
; 213  : 	m_nCurrentTab = -1;

  0067f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00682	c7 80 a8 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+168], -1

; 214  : 
; 215  : 	m_Tabs.resize( 5 );

  0068c	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T159048[ebp], 0
  00693	8d 4d ec	 lea	 ecx, DWORD PTR $T159048[ebp]
  00696	51		 push	 ecx
  00697	6a 05		 push	 5
  00699	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0069c	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  006a2	e8 00 00 00 00	 call	 ?resize@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXIABQAVCTabBtn@@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::resize

; 216  : 
; 217  : 	g_pSpellListDialog = this;

  006a7	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  006aa	89 15 00 00 00
	00		 mov	 DWORD PTR ?g_pSpellListDialog@@3PAVCSpellListDlg@@A, edx ; g_pSpellListDialog

; 218  : }

  006b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  006b7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  006ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  006bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  006c4	8b e5		 mov	 esp, ebp
  006c6	5d		 pop	 ebp
  006c7	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L159049:
  0004f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00057	c3		 ret	 0
$L159050:
  00058	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00061	e8 00 00 00 00	 call	 ??1CVerbHandler@@UAE@XZ	; CVerbHandler::~CVerbHandler
  00066	c3		 ret	 0
$L159051:
  00067	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  00070	e8 00 00 00 00	 call	 ??1?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::~vector<CTabBtn *,std::allocator<CTabBtn *> >
  00075	c3		 ret	 0
$L159054:
  00076	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159053
  0007b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSpellListDlg@@QAE@VCSCI_Object@@F@Z ENDP		; CSpellListDlg::CSpellListDlg
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	??1CSpellListDlg@@UAE@XZ			; CSpellListDlg::~CSpellListDlg
;	COMDAT ??_GCSpellListDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSpellListDlg@@UAEPAXI@Z PROC NEAR			; CSpellListDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSpellListDlg@@UAE@XZ ; CSpellListDlg::~CSpellListDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L152705
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L152705:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCSpellListDlg@@UAEPAXI@Z ENDP			; CSpellListDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T159066 DD	019930520H
	DD	02H
	DD	FLAT:$T159068
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159068 DD	0ffffffffH
	DD	FLAT:$L159060
	DD	00H
	DD	FLAT:$L159063
xdata$x	ENDS
;	COMDAT ??1CSpellListDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??1CSpellListDlg@@UAE@XZ PROC NEAR			; CSpellListDlg::~CSpellListDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L159067
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00025	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0002e	e8 00 00 00 00	 call	 ??1?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::~vector<CTabBtn *,std::allocator<CTabBtn *> >
  00033	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00037	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  0003b	74 0d		 je	 SHORT $L159058
  0003d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00040	05 94 00 00 00	 add	 eax, 148		; 00000094H
  00045	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  00048	eb 07		 jmp	 SHORT $L159059
$L159058:
  0004a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR -20+[ebp], 0
$L159059:
  00051	8b 4d ec	 mov	 ecx, DWORD PTR -20+[ebp]
  00054	e8 00 00 00 00	 call	 ??1CVerbHandler@@UAE@XZ	; CVerbHandler::~CVerbHandler
  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159060:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00008	c3		 ret	 0
$L159063:
  00009	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	0f 84 10 00 00
	00		 je	 $L159061
  00013	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00016	05 94 00 00 00	 add	 eax, 148		; 00000094H
  0001b	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  0001e	e9 07 00 00 00	 jmp	 $L159062
$L159061:
  00023	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR -20+[ebp], 0
$L159062:
  0002a	8b 4d ec	 mov	 ecx, DWORD PTR -20+[ebp]
  0002d	e8 00 00 00 00	 call	 ??1CVerbHandler@@UAE@XZ	; CVerbHandler::~CVerbHandler
  00032	c3		 ret	 0
$L159067:
  00033	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159066
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CSpellListDlg@@UAE@XZ ENDP				; CSpellListDlg::~CSpellListDlg
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
_TEXT	SEGMENT
_nGameModalCount$ = 12
_this$ = -4
?EnableGameModal@CSpellListDlg@@UAEXHPAH@Z PROC NEAR	; CSpellListDlg::EnableGameModal

; 222  : {

  006ca	55		 push	 ebp
  006cb	8b ec		 mov	 ebp, esp
  006cd	51		 push	 ecx
  006ce	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 223  :     if ( !nGameModalCount[gmGameModal] && !nGameModalCount[gmCombatModal])

  006d1	8b 45 0c	 mov	 eax, DWORD PTR _nGameModalCount$[ebp]
  006d4	83 38 00	 cmp	 DWORD PTR [eax], 0
  006d7	75 13		 jne	 SHORT $L152713
  006d9	8b 4d 0c	 mov	 ecx, DWORD PTR _nGameModalCount$[ebp]
  006dc	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  006e0	75 0a		 jne	 SHORT $L152713

; 225  :         ShowWindow( SW_SHOW );

  006e2	6a 05		 push	 5
  006e4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  006e7	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L152713:

; 227  : }

  006ec	8b e5		 mov	 esp, ebp
  006ee	5d		 pop	 ebp
  006ef	c2 08 00	 ret	 8
?EnableGameModal@CSpellListDlg@@UAEXHPAH@Z ENDP		; CSpellListDlg::EnableGameModal
_nMode$ = 8
_nGameModalCount$ = 12
_bInProgress$ = 16
_this$ = -4
?DisableGameModal@CSpellListDlg@@UAEXHPAH_N@Z PROC NEAR	; CSpellListDlg::DisableGameModal

; 231  : {

  006f2	55		 push	 ebp
  006f3	8b ec		 mov	 ebp, esp
  006f5	51		 push	 ecx
  006f6	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 232  :     if ( !nGameModalCount[gmGameModal] && nMode == gmGameModal)

  006f9	8b 45 0c	 mov	 eax, DWORD PTR _nGameModalCount$[ebp]
  006fc	83 38 00	 cmp	 DWORD PTR [eax], 0
  006ff	75 10		 jne	 SHORT $L152720
  00701	83 7d 08 00	 cmp	 DWORD PTR _nMode$[ebp], 0
  00705	75 0a		 jne	 SHORT $L152720

; 234  :         ShowWindow( SW_HIDE );

  00707	6a 00		 push	 0
  00709	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0070c	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L152720:

; 236  : 
; 237  :     // When going into combat, close the spell window
; 238  :     if ( !nGameModalCount[gmCombatModal] && nMode == gmCombatModal && !bInProgress )

  00711	8b 4d 0c	 mov	 ecx, DWORD PTR _nGameModalCount$[ebp]
  00714	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00718	75 23		 jne	 SHORT $L152721
  0071a	83 7d 08 01	 cmp	 DWORD PTR _nMode$[ebp], 1
  0071e	75 1d		 jne	 SHORT $L152721
  00720	8b 55 10	 mov	 edx, DWORD PTR _bInProgress$[ebp]
  00723	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00729	85 d2		 test	 edx, edx
  0072b	75 10		 jne	 SHORT $L152721

; 240  :         CloseSelf( false );

  0072d	6a 00		 push	 0
  0072f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00732	8b 10		 mov	 edx, DWORD PTR [eax]
  00734	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00737	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L152721:

; 242  : }

  0073d	8b e5		 mov	 esp, ebp
  0073f	5d		 pop	 ebp
  00740	c2 0c 00	 ret	 12			; 0000000cH
?DisableGameModal@CSpellListDlg@@UAEXHPAH_N@Z ENDP	; CSpellListDlg::DisableGameModal
_TEXT	ENDS
PUBLIC	?GetItemCount@CListCtrl@@QBEHXZ			; CListCtrl::GetItemCount
PUBLIC	?SaveFavoriteSpells@CSpellListDlg@@QAEXXZ	; CSpellListDlg::SaveFavoriteSpells
PUBLIC	??0CSCI_List@@QAE@G@Z				; CSCI_List::CSCI_List
EXTRN	?GetClassByName@@YAGPAD@Z:NEAR			; GetClassByName
EXTRN	?CloseSelf@CSkinWnd@@UAEX_N@Z:NEAR		; CSkinWnd::CloseSelf
EXTRN	?release@CSCI_Collection@@QAEXXZ:NEAR		; CSCI_Collection::release
EXTRN	?addToEnd@CSCI_List@@QAEXF@Z:NEAR		; CSCI_List::addToEnd
_DATA	SEGMENT
$SG152728 DB	'FavoriteSpells', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -16
_hList$152727 = -4
_i$152729 = -8
_hSpell$152733 = -12
?CloseSelf@CSpellListDlg@@UAEX_N@Z PROC NEAR		; CSpellListDlg::CloseSelf

; 245  : {

  00743	55		 push	 ebp
  00744	8b ec		 mov	 ebp, esp
  00746	83 ec 10	 sub	 esp, 16			; 00000010H
  00749	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 246  : 	if ( g_pSpellListDialog ) {

  0074c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSpellListDialog@@3PAVCSpellListDlg@@A, 0 ; g_pSpellListDialog
  00753	0f 84 83 00 00
	00		 je	 $L152726

; 247  : 		g_pSpellListDialog = NULL;

  00759	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSpellListDialog@@3PAVCSpellListDlg@@A, 0 ; g_pSpellListDialog

; 248  : 
; 249  : 		CSCI_List hList = GetClassByName ( "FavoriteSpells" );

  00763	68 00 00 00 00	 push	 OFFSET FLAT:$SG152728
  00768	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  0076d	83 c4 04	 add	 esp, 4
  00770	50		 push	 eax
  00771	8d 4d fc	 lea	 ecx, DWORD PTR _hList$152727[ebp]
  00774	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List

; 250  : 
; 251  : 		hList.release();

  00779	8d 4d fc	 lea	 ecx, DWORD PTR _hList$152727[ebp]
  0077c	e8 00 00 00 00	 call	 ?release@CSCI_Collection@@QAEXXZ ; CSCI_Collection::release

; 252  : 
; 253  : 		for (int i = 0;i < m_pFavoritesList->GetItemCount();i++) {

  00781	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$152729[ebp], 0
  00788	eb 09		 jmp	 SHORT $L152730
$L152731:
  0078a	8b 45 f8	 mov	 eax, DWORD PTR _i$152729[ebp]
  0078d	83 c0 01	 add	 eax, 1
  00790	89 45 f8	 mov	 DWORD PTR _i$152729[ebp], eax
$L152730:
  00793	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00796	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  0079c	e8 00 00 00 00	 call	 ?GetItemCount@CListCtrl@@QBEHXZ ; CListCtrl::GetItemCount
  007a1	39 45 f8	 cmp	 DWORD PTR _i$152729[ebp], eax
  007a4	7d 2e		 jge	 SHORT $L152732

; 254  : 			CSCI_Spell hSpell = m_pFavoritesList->GetItemData( i );

  007a6	8b 55 f8	 mov	 edx, DWORD PTR _i$152729[ebp]
  007a9	52		 push	 edx
  007aa	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  007ad	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  007b3	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  007b8	50		 push	 eax
  007b9	8d 4d f4	 lea	 ecx, DWORD PTR _hSpell$152733[ebp]
  007bc	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 255  : 
; 256  : 			hList.addToEnd( hSpell );

  007c1	8d 4d f4	 lea	 ecx, DWORD PTR _hSpell$152733[ebp]
  007c4	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  007c9	50		 push	 eax
  007ca	8d 4d fc	 lea	 ecx, DWORD PTR _hList$152727[ebp]
  007cd	e8 00 00 00 00	 call	 ?addToEnd@CSCI_List@@QAEXF@Z ; CSCI_List::addToEnd

; 257  : 		}

  007d2	eb b6		 jmp	 SHORT $L152731
$L152732:

; 258  : 
; 259  : 		SaveFavoriteSpells();

  007d4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007d7	e8 00 00 00 00	 call	 ?SaveFavoriteSpells@CSpellListDlg@@QAEXXZ ; CSpellListDlg::SaveFavoriteSpells
$L152726:

; 261  : 
; 262  : 	CSkinWnd::CloseSelf();

  007dc	6a 00		 push	 0
  007de	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007e1	e8 00 00 00 00	 call	 ?CloseSelf@CSkinWnd@@UAEX_N@Z ; CSkinWnd::CloseSelf

; 263  : }

  007e6	8b e5		 mov	 esp, ebp
  007e8	5d		 pop	 ebp
  007e9	c2 04 00	 ret	 4
?CloseSelf@CSpellListDlg@@UAEX_N@Z ENDP			; CSpellListDlg::CloseSelf
_TEXT	ENDS
PUBLIC	?get_pText@CSCI_Spell@@QAEFXZ			; CSCI_Spell::get_pText
PUBLIC	?get_pCost@CSCI_Spell@@QAEFXZ			; CSCI_Spell::get_pCost
PUBLIC	?get_pIcon@CSCI_Spell@@QAEFXZ			; CSCI_Spell::get_pIcon
PUBLIC	??0MemID@@QAE@G@Z				; MemID::MemID
PUBLIC	?AddToSpellList@CSpellListDlg@@IAEXVCSCI_List@@@Z ; CSpellListDlg::AddToSpellList
PUBLIC	??0StringID@@QAE@ABVMemID@@@Z			; StringID::StringID
PUBLIC	??DStringID@@QAEPADXZ				; StringID::operator*
PUBLIC	?Sort@CSpellListDlg@@QAEXXZ			; CSpellListDlg::Sort
PUBLIC	?get_size@CSCI_Collection@@QAEFXZ		; CSCI_Collection::get_size
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
EXTRN	?Format@CString@@QAAXPBDZZ:NEAR			; CString::Format
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
EXTRN	?AddLine@CSkinListCtrl@@QAAHHHZZ:NEAR		; CSkinListCtrl::AddLine
EXTRN	?Reset@CScrollable@@QAEXXZ:NEAR			; CScrollable::Reset
EXTRN	?SetItemIcon@CSkinListCtrl@@QAEXHH@Z:NEAR	; CSkinListCtrl::SetItemIcon
EXTRN	?DeleteAllItems@CSkinListCtrl@@QAEHXZ:NEAR	; CSkinListCtrl::DeleteAllItems
EXTRN	?at@CSCI_List@@QAEFF@Z:NEAR			; CSCI_List::at
_DATA	SEGMENT
	ORG $+1
$SG152746 DB	'%d', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T159079 DD	019930520H
	DD	01H
	DD	FLAT:$T159081
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159081 DD	0ffffffffH
	DD	FLAT:$L159077
xdata$x	ENDS
_TEXT	SEGMENT
_hList$ = 8
_this$ = -44
_nSpells$152739 = -16
_i$152740 = -20
_hSpell$152744 = -32
_sCost$152745 = -24
_nIndex$152750 = -28
$T159075 = -36
$T159076 = -40
__$EHRec$ = -12
?AddToSpellList@CSpellListDlg@@IAEXVCSCI_List@@@Z PROC NEAR ; CSpellListDlg::AddToSpellList

; 266  : {

  007ec	55		 push	 ebp
  007ed	8b ec		 mov	 ebp, esp
  007ef	6a ff		 push	 -1
  007f1	68 00 00 00 00	 push	 $L159080
  007f6	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  007fc	50		 push	 eax
  007fd	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00804	83 ec 20	 sub	 esp, 32			; 00000020H
  00807	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 267  : 	if ( m_pSpellList ) {

  0080a	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  0080d	83 b8 9c 00 00
	00 00		 cmp	 DWORD PTR [eax+156], 0
  00814	0f 84 31 01 00
	00		 je	 $L152738

; 268  : 		m_pSpellList->DeleteAllItems();

  0081a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081d	8b 89 9c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+156]
  00823	e8 00 00 00 00	 call	 ?DeleteAllItems@CSkinListCtrl@@QAEHXZ ; CSkinListCtrl::DeleteAllItems

; 269  : 
; 270  : 		m_pSpellList->Reset();

  00828	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  0082b	8b 8a 9c 00 00
	00		 mov	 ecx, DWORD PTR [edx+156]
  00831	83 c1 54	 add	 ecx, 84			; 00000054H
  00834	e8 00 00 00 00	 call	 ?Reset@CScrollable@@QAEXXZ ; CScrollable::Reset

; 271  : 
; 272  : 		// step through the list of spells and add them all in...
; 273  : 		int nSpells = hList.get_size();

  00839	8d 4d 08	 lea	 ecx, DWORD PTR _hList$[ebp]
  0083c	e8 00 00 00 00	 call	 ?get_size@CSCI_Collection@@QAEFXZ ; CSCI_Collection::get_size
  00841	0f bf c0	 movsx	 eax, ax
  00844	89 45 f0	 mov	 DWORD PTR _nSpells$152739[ebp], eax

; 274  : 
; 275  : 		for (int i = 0;i < nSpells;i++) {

  00847	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$152740[ebp], 0
  0084e	eb 09		 jmp	 SHORT $L152741
$L152742:
  00850	8b 4d ec	 mov	 ecx, DWORD PTR _i$152740[ebp]
  00853	83 c1 01	 add	 ecx, 1
  00856	89 4d ec	 mov	 DWORD PTR _i$152740[ebp], ecx
$L152741:
  00859	8b 55 ec	 mov	 edx, DWORD PTR _i$152740[ebp]
  0085c	3b 55 f0	 cmp	 edx, DWORD PTR _nSpells$152739[ebp]
  0085f	0f 8d de 00 00
	00		 jge	 $L152743

; 276  : 			CSCI_Spell hSpell = hList.at ( i );

  00865	66 8b 45 ec	 mov	 ax, WORD PTR _i$152740[ebp]
  00869	50		 push	 eax
  0086a	8d 4d 08	 lea	 ecx, DWORD PTR _hList$[ebp]
  0086d	e8 00 00 00 00	 call	 ?at@CSCI_List@@QAEFF@Z	; CSCI_List::at
  00872	50		 push	 eax
  00873	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152744[ebp]
  00876	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 277  : 
; 278  : 			CString sCost;

  0087b	8d 4d e8	 lea	 ecx, DWORD PTR _sCost$152745[ebp]
  0087e	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00883	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 279  : 			sCost.Format( "%d", hSpell.get_pCost() );

  0088a	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152744[ebp]
  0088d	e8 00 00 00 00	 call	 ?get_pCost@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pCost
  00892	0f bf c8	 movsx	 ecx, ax
  00895	51		 push	 ecx
  00896	68 00 00 00 00	 push	 OFFSET FLAT:$SG152746
  0089b	8d 55 e8	 lea	 edx, DWORD PTR _sCost$152745[ebp]
  0089e	52		 push	 edx
  0089f	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  008a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 280  : 
; 281  : 			m_pSpellList->AddLine( hSpell, 2, *((StringID) hSpell.get_pText() ), sCost );

  008a7	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152744[ebp]
  008aa	e8 00 00 00 00	 call	 ?get_pText@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pText
  008af	50		 push	 eax
  008b0	8d 4d d8	 lea	 ecx, DWORD PTR $T159076[ebp]
  008b3	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  008b8	8b 45 e8	 mov	 eax, DWORD PTR _sCost$152745[ebp]
  008bb	50		 push	 eax
  008bc	8d 4d d8	 lea	 ecx, DWORD PTR $T159076[ebp]
  008bf	51		 push	 ecx
  008c0	8d 4d dc	 lea	 ecx, DWORD PTR $T159075[ebp]
  008c3	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  008c8	8b c8		 mov	 ecx, eax
  008ca	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  008cf	50		 push	 eax
  008d0	6a 02		 push	 2
  008d2	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152744[ebp]
  008d5	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  008da	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  008df	50		 push	 eax
  008e0	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  008e3	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  008e9	50		 push	 eax
  008ea	e8 00 00 00 00	 call	 ?AddLine@CSkinListCtrl@@QAAHHHZZ ; CSkinListCtrl::AddLine
  008ef	83 c4 14	 add	 esp, 20			; 00000014H

; 282  : 			int nIndex = m_pSpellList->FindItem ( hSpell );

  008f2	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152744[ebp]
  008f5	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  008fa	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  008ff	50		 push	 eax
  00900	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00903	8b 89 9c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+156]
  00909	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  0090e	89 45 e4	 mov	 DWORD PTR _nIndex$152750[ebp], eax

; 283  : 			m_pSpellList->SetItemIcon ( nIndex, hSpell.get_pIcon() );

  00911	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152744[ebp]
  00914	e8 00 00 00 00	 call	 ?get_pIcon@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pIcon
  00919	0f bf d0	 movsx	 edx, ax
  0091c	52		 push	 edx
  0091d	8b 45 e4	 mov	 eax, DWORD PTR _nIndex$152750[ebp]
  00920	50		 push	 eax
  00921	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00924	8b 89 9c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+156]
  0092a	e8 00 00 00 00	 call	 ?SetItemIcon@CSkinListCtrl@@QAEXHH@Z ; CSkinListCtrl::SetItemIcon

; 284  : 		}

  0092f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00936	8d 4d e8	 lea	 ecx, DWORD PTR _sCost$152745[ebp]
  00939	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0093e	e9 0d ff ff ff	 jmp	 $L152742
$L152743:

; 285  : 
; 286  : 		Sort();

  00943	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00946	e8 00 00 00 00	 call	 ?Sort@CSpellListDlg@@QAEXXZ ; CSpellListDlg::Sort
$L152738:

; 288  : }

  0094b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0094e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00955	8b e5		 mov	 esp, ebp
  00957	5d		 pop	 ebp
  00958	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L159077:
  00080	8d 4d e8	 lea	 ecx, DWORD PTR _sCost$152745[ebp]
  00083	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00088	c3		 ret	 0
$L159080:
  00089	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159079
  0008e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddToSpellList@CSpellListDlg@@IAEXVCSCI_List@@@Z ENDP	; CSpellListDlg::AddToSpellList
PUBLIC	?AddToFavoritesList@CSpellListDlg@@IAEXVCSCI_List@@@Z ; CSpellListDlg::AddToFavoritesList
PUBLIC	?OpenFavoriteSpells@CSpellListDlg@@QAEXXZ	; CSpellListDlg::OpenFavoriteSpells
_DATA	SEGMENT
	ORG $+1
$SG152764 DB	'%d', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T159087 DD	019930520H
	DD	01H
	DD	FLAT:$T159089
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159089 DD	0ffffffffH
	DD	FLAT:$L159085
xdata$x	ENDS
_TEXT	SEGMENT
_hList$ = 8
_this$ = -44
_nSpells$152756 = -16
_i$152758 = -20
_hSpell$152762 = -32
_sCost$152763 = -24
_nIndex$152768 = -28
$T159083 = -36
$T159084 = -40
__$EHRec$ = -12
?AddToFavoritesList@CSpellListDlg@@IAEXVCSCI_List@@@Z PROC NEAR ; CSpellListDlg::AddToFavoritesList

; 291  : {

  0095b	55		 push	 ebp
  0095c	8b ec		 mov	 ebp, esp
  0095e	6a ff		 push	 -1
  00960	68 00 00 00 00	 push	 $L159088
  00965	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0096b	50		 push	 eax
  0096c	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00973	83 ec 20	 sub	 esp, 32			; 00000020H
  00976	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 292  : 	if ( m_pFavoritesList ) {

  00979	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  0097c	83 b8 98 00 00
	00 00		 cmp	 DWORD PTR [eax+152], 0
  00983	0f 84 26 01 00
	00		 je	 $L152761

; 293  : 		// step through the list of spells and add them all in...
; 294  : 		int nSpells = hList.get_size();

  00989	8d 4d 08	 lea	 ecx, DWORD PTR _hList$[ebp]
  0098c	e8 00 00 00 00	 call	 ?get_size@CSCI_Collection@@QAEFXZ ; CSCI_Collection::get_size
  00991	0f bf c8	 movsx	 ecx, ax
  00994	89 4d f0	 mov	 DWORD PTR _nSpells$152756[ebp], ecx

; 295  : 
; 296  : 		if ( ! nSpells ) {

  00997	83 7d f0 00	 cmp	 DWORD PTR _nSpells$152756[ebp], 0
  0099b	75 16		 jne	 SHORT $L152757

; 297  : 			OpenFavoriteSpells();

  0099d	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  009a0	e8 00 00 00 00	 call	 ?OpenFavoriteSpells@CSpellListDlg@@QAEXXZ ; CSpellListDlg::OpenFavoriteSpells

; 298  : 
; 299  : 			nSpells = hList.get_size();

  009a5	8d 4d 08	 lea	 ecx, DWORD PTR _hList$[ebp]
  009a8	e8 00 00 00 00	 call	 ?get_size@CSCI_Collection@@QAEFXZ ; CSCI_Collection::get_size
  009ad	0f bf d0	 movsx	 edx, ax
  009b0	89 55 f0	 mov	 DWORD PTR _nSpells$152756[ebp], edx
$L152757:

; 301  : 
; 302  : 		for (int i = 0;i < nSpells;i++) {

  009b3	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$152758[ebp], 0
  009ba	eb 09		 jmp	 SHORT $L152759
$L152760:
  009bc	8b 45 ec	 mov	 eax, DWORD PTR _i$152758[ebp]
  009bf	83 c0 01	 add	 eax, 1
  009c2	89 45 ec	 mov	 DWORD PTR _i$152758[ebp], eax
$L152759:
  009c5	8b 4d ec	 mov	 ecx, DWORD PTR _i$152758[ebp]
  009c8	3b 4d f0	 cmp	 ecx, DWORD PTR _nSpells$152756[ebp]
  009cb	0f 8d de 00 00
	00		 jge	 $L152761

; 303  : 			CSCI_Spell hSpell = hList.at ( i );

  009d1	66 8b 55 ec	 mov	 dx, WORD PTR _i$152758[ebp]
  009d5	52		 push	 edx
  009d6	8d 4d 08	 lea	 ecx, DWORD PTR _hList$[ebp]
  009d9	e8 00 00 00 00	 call	 ?at@CSCI_List@@QAEFF@Z	; CSCI_List::at
  009de	50		 push	 eax
  009df	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152762[ebp]
  009e2	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 304  : 
; 305  : 			CString sCost;

  009e7	8d 4d e8	 lea	 ecx, DWORD PTR _sCost$152763[ebp]
  009ea	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  009ef	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 306  : 			sCost.Format( "%d", hSpell.get_pCost() );

  009f6	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152762[ebp]
  009f9	e8 00 00 00 00	 call	 ?get_pCost@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pCost
  009fe	0f bf c0	 movsx	 eax, ax
  00a01	50		 push	 eax
  00a02	68 00 00 00 00	 push	 OFFSET FLAT:$SG152764
  00a07	8d 4d e8	 lea	 ecx, DWORD PTR _sCost$152763[ebp]
  00a0a	51		 push	 ecx
  00a0b	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  00a10	83 c4 0c	 add	 esp, 12			; 0000000cH

; 307  : 
; 308  : 			m_pFavoritesList->AddLine( hSpell, 2, *((StringID) hSpell.get_pText() ), sCost );

  00a13	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152762[ebp]
  00a16	e8 00 00 00 00	 call	 ?get_pText@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pText
  00a1b	50		 push	 eax
  00a1c	8d 4d d8	 lea	 ecx, DWORD PTR $T159084[ebp]
  00a1f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00a24	8b 55 e8	 mov	 edx, DWORD PTR _sCost$152763[ebp]
  00a27	52		 push	 edx
  00a28	8d 45 d8	 lea	 eax, DWORD PTR $T159084[ebp]
  00a2b	50		 push	 eax
  00a2c	8d 4d dc	 lea	 ecx, DWORD PTR $T159083[ebp]
  00a2f	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  00a34	8b c8		 mov	 ecx, eax
  00a36	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  00a3b	50		 push	 eax
  00a3c	6a 02		 push	 2
  00a3e	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152762[ebp]
  00a41	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00a46	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00a4b	50		 push	 eax
  00a4c	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00a4f	8b 91 98 00 00
	00		 mov	 edx, DWORD PTR [ecx+152]
  00a55	52		 push	 edx
  00a56	e8 00 00 00 00	 call	 ?AddLine@CSkinListCtrl@@QAAHHHZZ ; CSkinListCtrl::AddLine
  00a5b	83 c4 14	 add	 esp, 20			; 00000014H

; 309  : 			int nIndex = m_pFavoritesList->FindItem ( hSpell );

  00a5e	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152762[ebp]
  00a61	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00a66	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00a6b	50		 push	 eax
  00a6c	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  00a6f	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00a75	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  00a7a	89 45 e4	 mov	 DWORD PTR _nIndex$152768[ebp], eax

; 310  : 			m_pFavoritesList->SetItemIcon ( nIndex, hSpell.get_pIcon() );

  00a7d	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$152762[ebp]
  00a80	e8 00 00 00 00	 call	 ?get_pIcon@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pIcon
  00a85	0f bf c8	 movsx	 ecx, ax
  00a88	51		 push	 ecx
  00a89	8b 55 e4	 mov	 edx, DWORD PTR _nIndex$152768[ebp]
  00a8c	52		 push	 edx
  00a8d	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  00a90	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00a96	e8 00 00 00 00	 call	 ?SetItemIcon@CSkinListCtrl@@QAEXHH@Z ; CSkinListCtrl::SetItemIcon

; 311  : 		}

  00a9b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00aa2	8d 4d e8	 lea	 ecx, DWORD PTR _sCost$152763[ebp]
  00aa5	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00aaa	e9 0d ff ff ff	 jmp	 $L152760
$L152761:

; 313  : }

  00aaf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00ab2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00ab9	8b e5		 mov	 esp, ebp
  00abb	5d		 pop	 ebp
  00abc	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L159085:
  00093	8d 4d e8	 lea	 ecx, DWORD PTR _sCost$152763[ebp]
  00096	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0009b	c3		 ret	 0
$L159088:
  0009c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159087
  000a1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddToFavoritesList@CSpellListDlg@@IAEXVCSCI_List@@@Z ENDP ; CSpellListDlg::AddToFavoritesList
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	??0CBitmap@@QAE@XZ				; CBitmap::CBitmap
PUBLIC	?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ; CListCtrl::SetImageList
PUBLIC	?LoadBitmapA@CBitmap@@QAEHI@Z			; CBitmap::LoadBitmapA
PUBLIC	?Add@CImageList@@QAEHPAVCBitmap@@0@Z		; CImageList::Add
PUBLIC	??1CBitmap@@UAE@XZ				; CBitmap::~CBitmap
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	?SetTransient@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetTransient
PUBLIC	?Create@CSpellListDlg@@QAEHPAVCWnd@@@Z		; CSpellListDlg::Create
PUBLIC	?SelectTab@CSpellListDlg@@QAEXH@Z		; CSpellListDlg::SelectTab
EXTRN	?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CScrollable::SetScrollBar
EXTRN	??0CImageList@@QAE@XZ:NEAR			; CImageList::CImageList
EXTRN	?Create@CImageList@@QAEHHHIHH@Z:NEAR		; CImageList::Create
EXTRN	?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z:NEAR ; CSkinWnd::CreatePopupChild
EXTRN	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z:NEAR ; CSkinWnd::FindControl
EXTRN	?SetPriority@CSkinWnd@@QAEXH@Z:NEAR		; CSkinWnd::SetPriority
EXTRN	?RestoreLocation@CSkinWnd@@QAE_NXZ:NEAR		; CSkinWnd::RestoreLocation
EXTRN	?g_pMainWindow@@3PAVCMainWindow@@A:DWORD	; g_pMainWindow
_DATA	SEGMENT
	ORG $+1
$SG152775 DB	'Spell List', 00H
	ORG $+1
$SG152776 DB	'Dlg_Spells.skn', 00H
	ORG $+1
$SG152782 DB	'sb_textscrollerFaves', 00H
	ORG $+3
$SG152785 DB	'sb_textscrollerSpells', 00H
	ORG $+2
$SG152794 DB	'FavoriteSpells', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T159100 DD	019930520H
	DD	02H
	DD	FLAT:$T159102
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159102 DD	0ffffffffH
	DD	FLAT:$L159097
	DD	0ffffffffH
	DD	FLAT:$L159098
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -60
_bCreated$ = -16
_barObj$152780 = -28
_bitmap$152791 = -24
$T159091 = -44
$T159092 = -48
$T159093 = -52
$T159096 = -56
__$EHRec$ = -12
?Create@CSpellListDlg@@QAEHPAVCWnd@@@Z PROC NEAR	; CSpellListDlg::Create

; 317  : {

  00abf	55		 push	 ebp
  00ac0	8b ec		 mov	 ebp, esp
  00ac2	6a ff		 push	 -1
  00ac4	68 00 00 00 00	 push	 $L159101
  00ac9	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00acf	50		 push	 eax
  00ad0	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ad7	83 ec 34	 sub	 esp, 52			; 00000034H
  00ada	89 4d c4	 mov	 DWORD PTR _this$[ebp], ecx

; 318  : 	// set the priority of this window
; 319  : 	SetPriority ( swPriDefault );

  00add	6a 01		 push	 1
  00adf	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00ae2	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 320  : 
; 321  : 	// set that the window should go away
; 322  : 	SetTransient( true );

  00ae7	6a 01		 push	 1
  00ae9	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00aec	e8 00 00 00 00	 call	 ?SetTransient@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetTransient

; 323  : 
; 324  : 	BOOL bCreated = CreatePopupChild ( "Dlg_Spells.skn", "Spell List", CRect ( 0, 0, 0, 0 ), g_pMainWindow, FALSE );

  00af1	6a 01		 push	 1
  00af3	6a 00		 push	 0
  00af5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  00afa	50		 push	 eax
  00afb	6a 00		 push	 0
  00afd	6a 00		 push	 0
  00aff	6a 00		 push	 0
  00b01	6a 00		 push	 0
  00b03	8d 4d d4	 lea	 ecx, DWORD PTR $T159091[ebp]
  00b06	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  00b0b	50		 push	 eax
  00b0c	68 00 00 00 00	 push	 OFFSET FLAT:$SG152775
  00b11	68 00 00 00 00	 push	 OFFSET FLAT:$SG152776
  00b16	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00b19	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  00b1e	89 45 f0	 mov	 DWORD PTR _bCreated$[ebp], eax

; 325  : 
; 326  : 	if ( TRUE == bCreated ) {

  00b21	83 7d f0 01	 cmp	 DWORD PTR _bCreated$[ebp], 1
  00b25	0f 85 63 01 00
	00		 jne	 $L152777

; 327  : 		assert( NULL != m_pFavoritesList );
; 328  : 		assert( NULL != m_pSpellList );
; 329  : 
; 330  : 		CSkinScrollBar* barObj = (CSkinScrollBar*) FindControl ( "sb_textscrollerFaves" );

  00b2b	68 00 00 00 00	 push	 OFFSET FLAT:$SG152782
  00b30	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00b33	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  00b38	89 45 e4	 mov	 DWORD PTR _barObj$152780[ebp], eax

; 331  : 		assert( NULL != barObj );
; 332  : 
; 333  : 		m_pFavoritesList->SetScrollBar ( barObj );

  00b3b	8b 4d e4	 mov	 ecx, DWORD PTR _barObj$152780[ebp]
  00b3e	51		 push	 ecx
  00b3f	8b 55 c4	 mov	 edx, DWORD PTR _this$[ebp]
  00b42	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  00b48	83 c1 54	 add	 ecx, 84			; 00000054H
  00b4b	e8 00 00 00 00	 call	 ?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ; CScrollable::SetScrollBar

; 334  : 
; 335  : 		barObj = (CSkinScrollBar*) FindControl ( "sb_textscrollerSpells" );

  00b50	68 00 00 00 00	 push	 OFFSET FLAT:$SG152785
  00b55	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00b58	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  00b5d	89 45 e4	 mov	 DWORD PTR _barObj$152780[ebp], eax

; 336  : 		assert( NULL != barObj );
; 337  : 
; 338  : 		m_pSpellList->SetScrollBar ( barObj );

  00b60	8b 45 e4	 mov	 eax, DWORD PTR _barObj$152780[ebp]
  00b63	50		 push	 eax
  00b64	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00b67	8b 89 9c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+156]
  00b6d	83 c1 54	 add	 ecx, 84			; 00000054H
  00b70	e8 00 00 00 00	 call	 ?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ; CScrollable::SetScrollBar

; 339  : 
; 340  : 		// create the image list
; 341  : 		m_pImageList = new CImageList;

  00b75	6a 08		 push	 8
  00b77	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00b7c	89 45 cc	 mov	 DWORD PTR $T159093[ebp], eax
  00b7f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00b86	83 7d cc 00	 cmp	 DWORD PTR $T159093[ebp], 0
  00b8a	74 0d		 je	 SHORT $L159094
  00b8c	8b 4d cc	 mov	 ecx, DWORD PTR $T159093[ebp]
  00b8f	e8 00 00 00 00	 call	 ??0CImageList@@QAE@XZ	; CImageList::CImageList
  00b94	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  00b97	eb 07		 jmp	 SHORT $L159095
$L159094:
  00b99	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR -64+[ebp], 0
$L159095:
  00ba0	8b 55 c0	 mov	 edx, DWORD PTR -64+[ebp]
  00ba3	89 55 d0	 mov	 DWORD PTR $T159092[ebp], edx
  00ba6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00bad	8b 45 c4	 mov	 eax, DWORD PTR _this$[ebp]
  00bb0	8b 4d d0	 mov	 ecx, DWORD PTR $T159092[ebp]
  00bb3	89 88 a0 00 00
	00		 mov	 DWORD PTR [eax+160], ecx

; 342  : 		m_pImageList->Create ( 16, 16, ILC_COLOR24, 110, 0 );

  00bb9	6a 00		 push	 0
  00bbb	6a 6e		 push	 110			; 0000006eH
  00bbd	6a 18		 push	 24			; 00000018H
  00bbf	6a 10		 push	 16			; 00000010H
  00bc1	6a 10		 push	 16			; 00000010H
  00bc3	8b 55 c4	 mov	 edx, DWORD PTR _this$[ebp]
  00bc6	8b 8a a0 00 00
	00		 mov	 ecx, DWORD PTR [edx+160]
  00bcc	e8 00 00 00 00	 call	 ?Create@CImageList@@QAEHHHIHH@Z ; CImageList::Create

; 343  : 		
; 344  : 		CBitmap bitmap;

  00bd1	8d 4d e8	 lea	 ecx, DWORD PTR _bitmap$152791[ebp]
  00bd4	e8 00 00 00 00	 call	 ??0CBitmap@@QAE@XZ	; CBitmap::CBitmap
  00bd9	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 345  : 		bitmap.LoadBitmap( IDB_SPELL_LIST );

  00be0	6a 73		 push	 115			; 00000073H
  00be2	8d 4d e8	 lea	 ecx, DWORD PTR _bitmap$152791[ebp]
  00be5	e8 00 00 00 00	 call	 ?LoadBitmapA@CBitmap@@QAEHI@Z ; CBitmap::LoadBitmapA

; 346  : 
; 347  : 		m_pImageList->Add( &bitmap, (CBitmap*) NULL );

  00bea	6a 00		 push	 0
  00bec	8d 45 e8	 lea	 eax, DWORD PTR _bitmap$152791[ebp]
  00bef	50		 push	 eax
  00bf0	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00bf3	8b 89 a0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+160]
  00bf9	e8 00 00 00 00	 call	 ?Add@CImageList@@QAEHPAVCBitmap@@0@Z ; CImageList::Add

; 348  : 
; 349  : 		m_pFavoritesList->SetImageList ( m_pImageList, LVSIL_SMALL );

  00bfe	6a 01		 push	 1
  00c00	8b 55 c4	 mov	 edx, DWORD PTR _this$[ebp]
  00c03	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  00c09	50		 push	 eax
  00c0a	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00c0d	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  00c13	e8 00 00 00 00	 call	 ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ; CListCtrl::SetImageList

; 350  : 		m_pSpellList->SetImageList ( m_pImageList, LVSIL_SMALL );

  00c18	6a 01		 push	 1
  00c1a	8b 55 c4	 mov	 edx, DWORD PTR _this$[ebp]
  00c1d	8b 82 a0 00 00
	00		 mov	 eax, DWORD PTR [edx+160]
  00c23	50		 push	 eax
  00c24	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00c27	8b 89 9c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+156]
  00c2d	e8 00 00 00 00	 call	 ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ; CListCtrl::SetImageList

; 351  : 
; 352  : 		AddToFavoritesList( GetClassByName ( "FavoriteSpells" ) );

  00c32	68 00 00 00 00	 push	 OFFSET FLAT:$SG152794
  00c37	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  00c3c	8b cc		 mov	 ecx, esp
  00c3e	89 65 c8	 mov	 DWORD PTR $T159096[ebp], esp
  00c41	50		 push	 eax
  00c42	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  00c47	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00c4a	e8 00 00 00 00	 call	 ?AddToFavoritesList@CSpellListDlg@@IAEXVCSCI_List@@@Z ; CSpellListDlg::AddToFavoritesList

; 353  : 
; 354  : 		// restore my screen location
; 355  : 		RestoreLocation();

  00c4f	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00c52	e8 00 00 00 00	 call	 ?RestoreLocation@CSkinWnd@@QAE_NXZ ; CSkinWnd::RestoreLocation

; 356  : 
; 357  : 		ShowWindow( SW_SHOW );

  00c57	6a 05		 push	 5
  00c59	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00c5c	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 358  : 
; 359  : 		// Even though these windows are children of the spell dialog they appear
; 360  : 		// to be drawn first which is very unsightly.  The work around is to display 
; 361  : 		// them after their parent has been drawn.  An activeskin bug??
; 362  : 		m_pFavoritesList->ShowWindow( SW_SHOW );

  00c61	6a 05		 push	 5
  00c63	8b 55 c4	 mov	 edx, DWORD PTR _this$[ebp]
  00c66	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  00c6c	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 363  : 
; 364  : 		SelectTab( m_nSavedTab );

  00c71	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nSavedTab@CSpellListDlg@@1HA ; CSpellListDlg::m_nSavedTab
  00c76	50		 push	 eax
  00c77	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  00c7a	e8 00 00 00 00	 call	 ?SelectTab@CSpellListDlg@@QAEXH@Z ; CSpellListDlg::SelectTab

; 365  : 	}

  00c7f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c86	8d 4d e8	 lea	 ecx, DWORD PTR _bitmap$152791[ebp]
  00c89	e8 00 00 00 00	 call	 ??1CBitmap@@UAE@XZ	; CBitmap::~CBitmap
$L152777:

; 366  : 
; 367  : 	return bCreated;

  00c8e	8b 45 f0	 mov	 eax, DWORD PTR _bCreated$[ebp]

; 368  : }

  00c91	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00c94	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00c9b	8b e5		 mov	 esp, ebp
  00c9d	5d		 pop	 ebp
  00c9e	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L159097:
  000a6	8b 45 cc	 mov	 eax, DWORD PTR $T159093[ebp]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000af	c3		 ret	 0
$L159098:
  000b0	8d 4d e8	 lea	 ecx, DWORD PTR _bitmap$152791[ebp]
  000b3	e8 00 00 00 00	 call	 ??1CBitmap@@UAE@XZ	; CBitmap::~CBitmap
  000b8	c3		 ret	 0
$L159101:
  000b9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159100
  000be	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CSpellListDlg@@QAEHPAVCWnd@@@Z ENDP		; CSpellListDlg::Create
PUBLIC	??0CFavoriteSpellsListCtrl@@QAE@XZ		; CFavoriteSpellsListCtrl::CFavoriteSpellsListCtrl
PUBLIC	??0CAllSpellsListCtrl@@QAE@XZ			; CAllSpellsListCtrl::CAllSpellsListCtrl
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	??0CTabBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z	; CTabBtn::CTabBtn
PUBLIC	??8@YG_NPBDABVCString@@@Z			; operator==
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
PUBLIC	??A?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEAAPAVCTabBtn@@I@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::operator[]
EXTRN	?Left@CString@@QBE?AV1@H@Z:NEAR			; CString::Left
EXTRN	?Right@CString@@QBE?AV1@H@Z:NEAR		; CString::Right
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	?Find@CString@@QBEHPBDH@Z:NEAR			; CString::Find
EXTRN	?GetName@CSkinObj@@QAE?AVCString@@XZ:NEAR	; CSkinObj::GetName
EXTRN	?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z:NEAR ; CSkinListCtrl::Create
EXTRN	?AddColumn@CSkinListCtrl@@QAEHVCSkinObj@@H@Z:NEAR ; CSkinListCtrl::AddColumn
EXTRN	?GetParentObj@CSkinObj@@QAE?AV1@XZ:NEAR		; CSkinObj::GetParentObj
EXTRN	??0COkBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR	; COkBtn::COkBtn
EXTRN	__imp__atoi:NEAR
EXTRN	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::FindControl
EXTRN	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::MakeSkinCtrl
_DATA	SEGMENT
	ORG $+1
$SG152803 DB	'_', 00H
	ORG $+2
$SG152805 DB	'OK', 00H
	ORG $+1
$SG152813 DB	'lc', 00H
	ORG $+1
$SG152815 DB	'lc_Favorites', 00H
	ORG $+3
$SG152824 DB	'lc_AllSpells', 00H
	ORG $+3
$SG152832 DB	'tab', 00H
$SG152844 DB	'ch', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T159155 DD	019930520H
	DD	08H
	DD	FLAT:$T159157
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159157 DD	0ffffffffH
	DD	FLAT:$L159139
	DD	00H
	DD	FLAT:$L159140
	DD	01H
	DD	FLAT:$L159141
	DD	02H
	DD	FLAT:$L159142
	DD	02H
	DD	FLAT:$L159144
	DD	02H
	DD	FLAT:$L159146
	DD	02H
	DD	FLAT:$L159148
	DD	06H
	DD	FLAT:$L159149
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_this$ = -124
_name$ = -16
_id$ = -20
_idStr$152833 = -28
_nID$152835 = -24
_pTab$152836 = -32
_pList$152845 = -36
$T159104 = -40
$T159105 = -44
$T159106 = -48
$T159107 = -52
$T159110 = -56
$T159111 = -60
$T159114 = -64
$T159115 = -68
$T159118 = -72
$T159119 = -76
$T159122 = -80
$T159123 = -84
$T159126 = -88
$T159127 = -92
$T159128 = -96
$T159131 = -100
$T159132 = -104
$T159135 = -108
$T159136 = -112
$T159137 = -116
$T159138 = -120
__$EHRec$ = -12
?MakeSkinCtrl@CSpellListDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CSpellListDlg::MakeSkinCtrl

; 372  : {

  00ca1	55		 push	 ebp
  00ca2	8b ec		 mov	 ebp, esp
  00ca4	6a ff		 push	 -1
  00ca6	68 00 00 00 00	 push	 $L159156
  00cab	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00cb1	50		 push	 eax
  00cb2	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00cb9	81 ec bc 00 00
	00		 sub	 esp, 188		; 000000bcH
  00cbf	89 4d 84	 mov	 DWORD PTR _this$[ebp], ecx
  00cc2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 373  : 	// the type of the control is specified by the 3 left characters of the name
; 374  : 	CString name = obj.GetName();

  00cc9	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  00ccc	50		 push	 eax
  00ccd	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00cd0	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  00cd5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 375  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  00cd9	6a 00		 push	 0
  00cdb	68 00 00 00 00	 push	 OFFSET FLAT:$SG152803
  00ce0	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00ce3	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  00ce8	50		 push	 eax
  00ce9	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00cec	51		 push	 ecx
  00ced	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00cf0	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  00cf5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 376  : 
; 377  : 	if ( "OK" == id ) {

  00cf9	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  00cfc	52		 push	 edx
  00cfd	68 00 00 00 00	 push	 OFFSET FLAT:$SG152805
  00d02	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00d07	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00d0c	85 c0		 test	 eax, eax
  00d0e	0f 84 97 00 00
	00		 je	 $L152804

; 378  : 		return new COkBtn( obj, this );

  00d14	6a 14		 push	 20			; 00000014H
  00d16	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00d1b	83 c4 04	 add	 esp, 4
  00d1e	89 45 d0	 mov	 DWORD PTR $T159106[ebp], eax
  00d21	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00d25	83 7d d0 00	 cmp	 DWORD PTR $T159106[ebp], 0
  00d29	74 34		 je	 SHORT $L159108
  00d2b	8b 45 84	 mov	 eax, DWORD PTR _this$[ebp]
  00d2e	50		 push	 eax
  00d2f	83 ec 08	 sub	 esp, 8
  00d32	8b cc		 mov	 ecx, esp
  00d34	89 65 cc	 mov	 DWORD PTR $T159107[ebp], esp
  00d37	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00d3a	52		 push	 edx
  00d3b	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00d40	89 45 80	 mov	 DWORD PTR -128+[ebp], eax
  00d43	8b 4d d0	 mov	 ecx, DWORD PTR $T159106[ebp]
  00d46	e8 00 00 00 00	 call	 ??0COkBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; COkBtn::COkBtn
  00d4b	89 85 7c ff ff
	ff		 mov	 DWORD PTR -132+[ebp], eax
  00d51	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR -132+[ebp]
  00d57	89 85 78 ff ff
	ff		 mov	 DWORD PTR -136+[ebp], eax
  00d5d	eb 0a		 jmp	 SHORT $L159109
$L159108:
  00d5f	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -136+[ebp], 0
$L159109:
  00d69	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR -136+[ebp]
  00d6f	89 4d d4	 mov	 DWORD PTR $T159105[ebp], ecx
  00d72	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00d76	8b 55 d4	 mov	 edx, DWORD PTR $T159105[ebp]
  00d79	89 55 d8	 mov	 DWORD PTR $T159104[ebp], edx
  00d7c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00d80	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00d83	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00d88	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00d8c	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00d8f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00d94	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d9b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00d9e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00da3	8b 45 d8	 mov	 eax, DWORD PTR $T159104[ebp]
  00da6	e9 45 04 00 00	 jmp	 $L152798
$L152804:

; 380  : 
; 381  : 	if ( "lc" == id ) {

  00dab	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00dae	50		 push	 eax
  00daf	68 00 00 00 00	 push	 OFFSET FLAT:$SG152813
  00db4	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00db9	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00dbe	85 c0		 test	 eax, eax
  00dc0	0f 84 f6 01 00
	00		 je	 $L152823

; 382  : 		if ( "lc_Favorites" == name ) {

  00dc6	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00dc9	51		 push	 ecx
  00dca	68 00 00 00 00	 push	 OFFSET FLAT:$SG152815
  00dcf	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00dd4	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00dd9	85 c0		 test	 eax, eax
  00ddb	0f 84 e0 00 00
	00		 je	 $L152814

; 383  : 			m_pFavoritesList = new CFavoriteSpellsListCtrl();

  00de1	68 c0 00 00 00	 push	 192			; 000000c0H
  00de6	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00deb	89 45 c4	 mov	 DWORD PTR $T159111[ebp], eax
  00dee	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00df2	83 7d c4 00	 cmp	 DWORD PTR $T159111[ebp], 0
  00df6	74 10		 je	 SHORT $L159112
  00df8	8b 4d c4	 mov	 ecx, DWORD PTR $T159111[ebp]
  00dfb	e8 00 00 00 00	 call	 ??0CFavoriteSpellsListCtrl@@QAE@XZ ; CFavoriteSpellsListCtrl::CFavoriteSpellsListCtrl
  00e00	89 85 74 ff ff
	ff		 mov	 DWORD PTR -140+[ebp], eax
  00e06	eb 0a		 jmp	 SHORT $L159113
$L159112:
  00e08	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -140+[ebp], 0
$L159113:
  00e12	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR -140+[ebp]
  00e18	89 55 c8	 mov	 DWORD PTR $T159110[ebp], edx
  00e1b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00e1f	8b 45 84	 mov	 eax, DWORD PTR _this$[ebp]
  00e22	8b 4d c8	 mov	 ecx, DWORD PTR $T159110[ebp]
  00e25	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx

; 384  : 			m_pFavoritesList->Create( obj, this, 777, false );

  00e2b	6a 00		 push	 0
  00e2d	6a 01		 push	 1
  00e2f	6a 00		 push	 0
  00e31	68 09 03 00 00	 push	 777			; 00000309H
  00e36	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  00e39	52		 push	 edx
  00e3a	83 ec 08	 sub	 esp, 8
  00e3d	8b cc		 mov	 ecx, esp
  00e3f	89 65 c0	 mov	 DWORD PTR $T159114[ebp], esp
  00e42	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  00e45	50		 push	 eax
  00e46	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00e4b	89 85 70 ff ff
	ff		 mov	 DWORD PTR -144+[ebp], eax
  00e51	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  00e54	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  00e5a	e8 00 00 00 00	 call	 ?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z ; CSkinListCtrl::Create

; 385  : 			return m_pFavoritesList;

  00e5f	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  00e62	83 ba 98 00 00
	00 00		 cmp	 DWORD PTR [edx+152], 0
  00e69	74 14		 je	 SHORT $L159116
  00e6b	8b 45 84	 mov	 eax, DWORD PTR _this$[ebp]
  00e6e	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00e74	83 c1 40	 add	 ecx, 64			; 00000040H
  00e77	89 8d 6c ff ff
	ff		 mov	 DWORD PTR -148+[ebp], ecx
  00e7d	eb 0a		 jmp	 SHORT $L159117
$L159116:
  00e7f	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -148+[ebp], 0
$L159117:
  00e89	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR -148+[ebp]
  00e8f	89 55 bc	 mov	 DWORD PTR $T159115[ebp], edx
  00e92	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e96	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00e99	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00e9e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ea2	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00ea5	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00eaa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00eb1	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00eb4	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00eb9	8b 45 bc	 mov	 eax, DWORD PTR $T159115[ebp]
  00ebc	e9 2f 03 00 00	 jmp	 $L152798
$L152814:

; 386  : 		} else if ( "lc_AllSpells" == name ) {

  00ec1	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  00ec4	50		 push	 eax
  00ec5	68 00 00 00 00	 push	 OFFSET FLAT:$SG152824
  00eca	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00ecf	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00ed4	85 c0		 test	 eax, eax
  00ed6	0f 84 e0 00 00
	00		 je	 $L152823

; 387  : 			m_pSpellList = new CAllSpellsListCtrl();

  00edc	68 c0 00 00 00	 push	 192			; 000000c0H
  00ee1	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00ee6	89 45 b4	 mov	 DWORD PTR $T159119[ebp], eax
  00ee9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00eed	83 7d b4 00	 cmp	 DWORD PTR $T159119[ebp], 0
  00ef1	74 10		 je	 SHORT $L159120
  00ef3	8b 4d b4	 mov	 ecx, DWORD PTR $T159119[ebp]
  00ef6	e8 00 00 00 00	 call	 ??0CAllSpellsListCtrl@@QAE@XZ ; CAllSpellsListCtrl::CAllSpellsListCtrl
  00efb	89 85 68 ff ff
	ff		 mov	 DWORD PTR -152+[ebp], eax
  00f01	eb 0a		 jmp	 SHORT $L159121
$L159120:
  00f03	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -152+[ebp], 0
$L159121:
  00f0d	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR -152+[ebp]
  00f13	89 4d b8	 mov	 DWORD PTR $T159118[ebp], ecx
  00f16	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00f1a	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  00f1d	8b 45 b8	 mov	 eax, DWORD PTR $T159118[ebp]
  00f20	89 82 9c 00 00
	00		 mov	 DWORD PTR [edx+156], eax

; 388  : 			m_pSpellList->Create( obj, this, 778, false  );

  00f26	6a 00		 push	 0
  00f28	6a 01		 push	 1
  00f2a	6a 00		 push	 0
  00f2c	68 0a 03 00 00	 push	 778			; 0000030aH
  00f31	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  00f34	51		 push	 ecx
  00f35	83 ec 08	 sub	 esp, 8
  00f38	8b cc		 mov	 ecx, esp
  00f3a	89 65 b0	 mov	 DWORD PTR $T159122[ebp], esp
  00f3d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00f40	52		 push	 edx
  00f41	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00f46	89 85 64 ff ff
	ff		 mov	 DWORD PTR -156+[ebp], eax
  00f4c	8b 45 84	 mov	 eax, DWORD PTR _this$[ebp]
  00f4f	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [eax+156]
  00f55	e8 00 00 00 00	 call	 ?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z ; CSkinListCtrl::Create

; 389  : 			return m_pSpellList;

  00f5a	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  00f5d	83 b9 9c 00 00
	00 00		 cmp	 DWORD PTR [ecx+156], 0
  00f64	74 14		 je	 SHORT $L159124
  00f66	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  00f69	8b 82 9c 00 00
	00		 mov	 eax, DWORD PTR [edx+156]
  00f6f	83 c0 40	 add	 eax, 64			; 00000040H
  00f72	89 85 60 ff ff
	ff		 mov	 DWORD PTR -160+[ebp], eax
  00f78	eb 0a		 jmp	 SHORT $L159125
$L159124:
  00f7a	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -160+[ebp], 0
$L159125:
  00f84	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR -160+[ebp]
  00f8a	89 4d ac	 mov	 DWORD PTR $T159123[ebp], ecx
  00f8d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00f91	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00f94	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00f99	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00f9d	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00fa0	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00fa5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00fac	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00faf	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00fb4	8b 45 ac	 mov	 eax, DWORD PTR $T159123[ebp]
  00fb7	e9 34 02 00 00	 jmp	 $L152798
$L152823:

; 392  : 
; 393  : 	if ( "tab" == id ) {

  00fbc	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  00fbf	52		 push	 edx
  00fc0	68 00 00 00 00	 push	 OFFSET FLAT:$SG152832
  00fc5	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00fca	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00fcf	85 c0		 test	 eax, eax
  00fd1	0f 84 ee 00 00
	00		 je	 $L152831

; 394  : 		// setup our internal properties based on this control's name
; 395  : 		CString idStr = name.Right ( 1 );

  00fd7	6a 01		 push	 1
  00fd9	8d 45 e4	 lea	 eax, DWORD PTR _idStr$152833[ebp]
  00fdc	50		 push	 eax
  00fdd	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00fe0	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  00fe5	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 396  : 
; 397  : 		// determine which feature this is for
; 398  : 		int nID = atoi ( idStr );

  00fe9	8d 4d e4	 lea	 ecx, DWORD PTR _idStr$152833[ebp]
  00fec	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00ff1	50		 push	 eax
  00ff2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00ff8	83 c4 04	 add	 esp, 4
  00ffb	89 45 e8	 mov	 DWORD PTR _nID$152835[ebp], eax

; 399  : 
; 400  : 		CTabBtn* pTab = new CTabBtn( obj, this, nID );

  00ffe	6a 18		 push	 24			; 00000018H
  01000	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01005	83 c4 04	 add	 esp, 4
  01008	89 45 a4	 mov	 DWORD PTR $T159127[ebp], eax
  0100b	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0100f	83 7d a4 00	 cmp	 DWORD PTR $T159127[ebp], 0
  01013	74 3b		 je	 SHORT $L159129
  01015	8b 4d e8	 mov	 ecx, DWORD PTR _nID$152835[ebp]
  01018	51		 push	 ecx
  01019	8b 55 84	 mov	 edx, DWORD PTR _this$[ebp]
  0101c	52		 push	 edx
  0101d	83 ec 08	 sub	 esp, 8
  01020	8b cc		 mov	 ecx, esp
  01022	89 65 a0	 mov	 DWORD PTR $T159128[ebp], esp
  01025	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  01028	50		 push	 eax
  01029	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0102e	89 85 5c ff ff
	ff		 mov	 DWORD PTR -164+[ebp], eax
  01034	8b 4d a4	 mov	 ecx, DWORD PTR $T159127[ebp]
  01037	e8 00 00 00 00	 call	 ??0CTabBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ; CTabBtn::CTabBtn
  0103c	89 85 58 ff ff
	ff		 mov	 DWORD PTR -168+[ebp], eax
  01042	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR -168+[ebp]
  01048	89 8d 54 ff ff
	ff		 mov	 DWORD PTR -172+[ebp], ecx
  0104e	eb 0a		 jmp	 SHORT $L159130
$L159129:
  01050	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -172+[ebp], 0
$L159130:
  0105a	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR -172+[ebp]
  01060	89 55 a8	 mov	 DWORD PTR $T159126[ebp], edx
  01063	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  01067	8b 45 a8	 mov	 eax, DWORD PTR $T159126[ebp]
  0106a	89 45 e0	 mov	 DWORD PTR _pTab$152836[ebp], eax

; 401  : 
; 402  : 		m_Tabs[ nID ] = pTab;

  0106d	8b 4d e8	 mov	 ecx, DWORD PTR _nID$152835[ebp]
  01070	51		 push	 ecx
  01071	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  01074	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  0107a	e8 00 00 00 00	 call	 ??A?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEAAPAVCTabBtn@@I@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::operator[]
  0107f	8b 55 e0	 mov	 edx, DWORD PTR _pTab$152836[ebp]
  01082	89 10		 mov	 DWORD PTR [eax], edx

; 403  : 
; 404  : 		return pTab;

  01084	8b 45 e0	 mov	 eax, DWORD PTR _pTab$152836[ebp]
  01087	89 45 9c	 mov	 DWORD PTR $T159131[ebp], eax
  0108a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0108e	8d 4d e4	 lea	 ecx, DWORD PTR _idStr$152833[ebp]
  01091	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01096	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0109a	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0109d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  010a2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  010a6	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  010a9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  010ae	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  010b5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  010b8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  010bd	8b 45 9c	 mov	 eax, DWORD PTR $T159131[ebp]
  010c0	e9 2b 01 00 00	 jmp	 $L152798
$L152831:

; 406  : 
; 407  : 	if ( "ch" == id ) {

  010c5	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  010c8	51		 push	 ecx
  010c9	68 00 00 00 00	 push	 OFFSET FLAT:$SG152844
  010ce	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  010d3	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  010d8	85 c0		 test	 eax, eax
  010da	0f 84 b8 00 00
	00		 je	 $L152843

; 408  : 		CSkinListCtrl* pList = (CSkinListCtrl*) FindControl ( obj.GetParentObj() );

  010e0	83 ec 08	 sub	 esp, 8
  010e3	8b d4		 mov	 edx, esp
  010e5	89 65 98	 mov	 DWORD PTR $T159132[ebp], esp
  010e8	52		 push	 edx
  010e9	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  010ec	e8 00 00 00 00	 call	 ?GetParentObj@CSkinObj@@QAE?AV1@XZ ; CSkinObj::GetParentObj
  010f1	89 85 50 ff ff
	ff		 mov	 DWORD PTR -176+[ebp], eax
  010f7	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  010fa	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  010ff	89 85 4c ff ff
	ff		 mov	 DWORD PTR -180+[ebp], eax
  01105	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR -180+[ebp]
  0110b	89 85 48 ff ff
	ff		 mov	 DWORD PTR -184+[ebp], eax
  01111	83 bd 48 ff ff
	ff 00		 cmp	 DWORD PTR -184+[ebp], 0
  01118	74 11		 je	 SHORT $L159133
  0111a	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR -184+[ebp]
  01120	83 e9 40	 sub	 ecx, 64			; 00000040H
  01123	89 8d 44 ff ff
	ff		 mov	 DWORD PTR -188+[ebp], ecx
  01129	eb 0a		 jmp	 SHORT $L159134
$L159133:
  0112b	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -188+[ebp], 0
$L159134:
  01135	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR -188+[ebp]
  0113b	89 55 dc	 mov	 DWORD PTR _pList$152845[ebp], edx

; 409  : 
; 410  : 		if ( pList ) {

  0113e	83 7d dc 00	 cmp	 DWORD PTR _pList$152845[ebp], 0
  01142	74 21		 je	 SHORT $L152849

; 411  : 			pList->AddColumn( obj );

  01144	6a 00		 push	 0
  01146	83 ec 08	 sub	 esp, 8
  01149	8b cc		 mov	 ecx, esp
  0114b	89 65 94	 mov	 DWORD PTR $T159135[ebp], esp
  0114e	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  01151	50		 push	 eax
  01152	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01157	89 85 40 ff ff
	ff		 mov	 DWORD PTR -192+[ebp], eax
  0115d	8b 4d dc	 mov	 ecx, DWORD PTR _pList$152845[ebp]
  01160	e8 00 00 00 00	 call	 ?AddColumn@CSkinListCtrl@@QAEHVCSkinObj@@H@Z ; CSkinListCtrl::AddColumn
$L152849:

; 413  : 
; 414  : 		return NULL;

  01165	c7 45 90 00 00
	00 00		 mov	 DWORD PTR $T159136[ebp], 0
  0116c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01170	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01173	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01178	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0117c	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0117f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01184	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0118b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0118e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01193	8b 45 90	 mov	 eax, DWORD PTR $T159136[ebp]
  01196	eb 58		 jmp	 SHORT $L152798
$L152843:

; 416  : 
; 417  : 	return CSkinWnd::MakeSkinCtrl( obj );

  01198	83 ec 08	 sub	 esp, 8
  0119b	8b cc		 mov	 ecx, esp
  0119d	89 65 88	 mov	 DWORD PTR $T159138[ebp], esp
  011a0	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  011a3	52		 push	 edx
  011a4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  011a9	89 85 3c ff ff
	ff		 mov	 DWORD PTR -196+[ebp], eax
  011af	8b 4d 84	 mov	 ecx, DWORD PTR _this$[ebp]
  011b2	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  011b7	89 85 38 ff ff
	ff		 mov	 DWORD PTR -200+[ebp], eax
  011bd	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR -200+[ebp]
  011c3	89 45 8c	 mov	 DWORD PTR $T159137[ebp], eax
  011c6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  011ca	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  011cd	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  011d2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  011d6	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  011d9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  011de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  011e5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  011e8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  011ed	8b 45 8c	 mov	 eax, DWORD PTR $T159137[ebp]
$L152798:

; 418  : }

  011f0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  011f3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  011fa	8b e5		 mov	 esp, ebp
  011fc	5d		 pop	 ebp
  011fd	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L159139:
  000c3	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000c6	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000cb	c3		 ret	 0
$L159140:
  000cc	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  000cf	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000d4	c3		 ret	 0
$L159141:
  000d5	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  000d8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000dd	c3		 ret	 0
$L159142:
  000de	8b 45 d0	 mov	 eax, DWORD PTR $T159106[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000e7	59		 pop	 ecx
  000e8	c3		 ret	 0
$L159144:
  000e9	8b 45 c4	 mov	 eax, DWORD PTR $T159111[ebp]
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000f2	c3		 ret	 0
$L159146:
  000f3	8b 45 b4	 mov	 eax, DWORD PTR $T159119[ebp]
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000fc	c3		 ret	 0
$L159148:
  000fd	8d 4d e4	 lea	 ecx, DWORD PTR _idStr$152833[ebp]
  00100	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00105	c3		 ret	 0
$L159149:
  00106	8b 45 a4	 mov	 eax, DWORD PTR $T159127[ebp]
  00109	50		 push	 eax
  0010a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0010f	59		 pop	 ecx
  00110	c3		 ret	 0
$L159156:
  00111	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159155
  00116	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CSpellListDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CSpellListDlg::MakeSkinCtrl
PUBLIC	?OnItemActivate@CFavoriteSpellsListCtrl@@UAEXH_N@Z ; CFavoriteSpellsListCtrl::OnItemActivate
PUBLIC	??_7CFavoriteSpellsListCtrl@@6BCListCtrl@@@	; CFavoriteSpellsListCtrl::`vftable'
PUBLIC	??_7CFavoriteSpellsListCtrl@@6BCSkinCtrl@@@	; CFavoriteSpellsListCtrl::`vftable'
PUBLIC	??_7CFavoriteSpellsListCtrl@@6BCScrollable@@@	; CFavoriteSpellsListCtrl::`vftable'
PUBLIC	??_7CFavoriteSpellsListCtrl@@6BCMouseWheelable@@@ ; CFavoriteSpellsListCtrl::`vftable'
PUBLIC	??_7CFavoriteSpellsListCtrl@@6B@		; CFavoriteSpellsListCtrl::`vftable'
PUBLIC	??_GCFavoriteSpellsListCtrl@@UAEPAXI@Z		; CFavoriteSpellsListCtrl::`scalar deleting destructor'
PUBLIC	??_ECFavoriteSpellsListCtrl@@UAEPAXI@Z		; CFavoriteSpellsListCtrl::`vector deleting destructor'
PUBLIC	??_ECFavoriteSpellsListCtrl@@WEA@AEPAXI@Z	; CFavoriteSpellsListCtrl::`vector deleting destructor'
PUBLIC	??_ECFavoriteSpellsListCtrl@@WHE@AEPAXI@Z	; CFavoriteSpellsListCtrl::`vector deleting destructor'
PUBLIC	??_ECFavoriteSpellsListCtrl@@WLE@AEPAXI@Z	; CFavoriteSpellsListCtrl::`vector deleting destructor'
;	COMDAT ??_7CFavoriteSpellsListCtrl@@6BCListCtrl@@@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\SpellDlg.cpp
CONST	SEGMENT
??_7CFavoriteSpellsListCtrl@@6BCListCtrl@@@ DD FLAT:?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ ; CFavoriteSpellsListCtrl::`vftable'
	DD	FLAT:??_ECFavoriteSpellsListCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSpellListCtrl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?GetItemTextColor@CSpellListCtrl@@MAEKH@Z
	DD	FLAT:?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?OnItemActivate@CFavoriteSpellsListCtrl@@UAEXH_N@Z
	DD	FLAT:?OnMouseOver@CSkinListCtrl@@UAEXVCPoint@@@Z
CONST	ENDS
;	COMDAT ??_7CFavoriteSpellsListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CFavoriteSpellsListCtrl@@6BCSkinCtrl@@@ DD FLAT:??_ECFavoriteSpellsListCtrl@@WEA@AEPAXI@Z ; CFavoriteSpellsListCtrl::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CFavoriteSpellsListCtrl@@6BCScrollable@@@
CONST	SEGMENT
??_7CFavoriteSpellsListCtrl@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinListCtrl@@UAEXXZ ; CFavoriteSpellsListCtrl::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CScrollable@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CSkinListCtrl@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CFavoriteSpellsListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CFavoriteSpellsListCtrl@@6BCMouseWheelable@@@ DD FLAT:??_ECFavoriteSpellsListCtrl@@WHE@AEPAXI@Z ; CFavoriteSpellsListCtrl::`vftable'
	DD	FLAT:?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z
CONST	ENDS
;	COMDAT ??_7CFavoriteSpellsListCtrl@@6B@
CONST	SEGMENT
??_7CFavoriteSpellsListCtrl@@6B@ DD FLAT:??_ECFavoriteSpellsListCtrl@@WLE@AEPAXI@Z ; CFavoriteSpellsListCtrl::`vftable'
	DD	FLAT:?CanAcceptDrop@CSpellListCtrl@@UAEPAUHICON__@@AAVCDraggable@@AAVCPoint@@@Z
	DD	FLAT:?AcceptDrop@CSpellListCtrl@@UAEXAAVCDraggable@@AAVCPoint@@@Z
CONST	ENDS
;	COMDAT ??0CFavoriteSpellsListCtrl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CFavoriteSpellsListCtrl@@QAE@XZ PROC NEAR		; CFavoriteSpellsListCtrl::CFavoriteSpellsListCtrl, COMDAT

; 173  : 	CFavoriteSpellsListCtrl() { m_bFavorites = true; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSpellListCtrl@@QAE@XZ ; CSpellListCtrl::CSpellListCtrl
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CFavoriteSpellsListCtrl@@6BCListCtrl@@@ ; CFavoriteSpellsListCtrl::`vftable'
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CFavoriteSpellsListCtrl@@6BCSkinCtrl@@@ ; CFavoriteSpellsListCtrl::`vftable'
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	c7 42 54 00 00
	00 00		 mov	 DWORD PTR [edx+84], OFFSET FLAT:??_7CFavoriteSpellsListCtrl@@6BCScrollable@@@ ; CFavoriteSpellsListCtrl::`vftable'
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CFavoriteSpellsListCtrl@@6BCMouseWheelable@@@ ; CFavoriteSpellsListCtrl::`vftable'
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	c7 81 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+180], OFFSET FLAT:??_7CFavoriteSpellsListCtrl@@6B@ ; CFavoriteSpellsListCtrl::`vftable'
  00043	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00046	c7 82 bc 00 00
	00 01 00 00 00	 mov	 DWORD PTR [edx+188], 1
  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??0CFavoriteSpellsListCtrl@@QAE@XZ ENDP			; CFavoriteSpellsListCtrl::CFavoriteSpellsListCtrl
_TEXT	ENDS
PUBLIC	?OnFavorite@CSpellListDlg@@QAEXVCSCI_Spell@@_N@Z ; CSpellListDlg::OnFavorite
;	COMDAT ?OnItemActivate@CFavoriteSpellsListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT
_nItemIndex$ = 8
_bDoubleClick$ = 12
_this$ = -8
?OnItemActivate@CFavoriteSpellsListCtrl@@UAEXH_N@Z PROC NEAR ; CFavoriteSpellsListCtrl::OnItemActivate, COMDAT

; 176  : 	virtual void OnItemActivate ( int nItemIndex, bool bDoubleClick ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 177  : 		((CSpellListDlg*) m_pParentWnd)->OnFavorite( GetItemData( nItemIndex ), bDoubleClick );

  00009	8a 45 0c	 mov	 al, BYTE PTR _bDoubleClick$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _nItemIndex$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  00019	51		 push	 ecx
  0001a	8b cc		 mov	 ecx, esp
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell
  00022	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  00028	e8 00 00 00 00	 call	 ?OnFavorite@CSpellListDlg@@QAEXVCSCI_Spell@@_N@Z ; CSpellListDlg::OnFavorite

; 178  : 	};

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?OnItemActivate@CFavoriteSpellsListCtrl@@UAEXH_N@Z ENDP	; CFavoriteSpellsListCtrl::OnItemActivate
_TEXT	ENDS
PUBLIC	??1CFavoriteSpellsListCtrl@@UAE@XZ		; CFavoriteSpellsListCtrl::~CFavoriteSpellsListCtrl
;	COMDAT ??_GCFavoriteSpellsListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCFavoriteSpellsListCtrl@@UAEPAXI@Z PROC NEAR	; CFavoriteSpellsListCtrl::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CFavoriteSpellsListCtrl@@UAE@XZ ; CFavoriteSpellsListCtrl::~CFavoriteSpellsListCtrl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L152656
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L152656:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCFavoriteSpellsListCtrl@@UAEPAXI@Z ENDP		; CFavoriteSpellsListCtrl::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CSpellListCtrl@@UAE@XZ			; CSpellListCtrl::~CSpellListCtrl
;	COMDAT ??1CFavoriteSpellsListCtrl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CFavoriteSpellsListCtrl@@UAE@XZ PROC NEAR		; CFavoriteSpellsListCtrl::~CFavoriteSpellsListCtrl, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSpellListCtrl@@UAE@XZ ; CSpellListCtrl::~CSpellListCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CFavoriteSpellsListCtrl@@UAE@XZ ENDP			; CFavoriteSpellsListCtrl::~CFavoriteSpellsListCtrl
_TEXT	ENDS
PUBLIC	?OnItemActivate@CAllSpellsListCtrl@@UAEXH_N@Z	; CAllSpellsListCtrl::OnItemActivate
PUBLIC	??_7CAllSpellsListCtrl@@6BCListCtrl@@@		; CAllSpellsListCtrl::`vftable'
PUBLIC	??_7CAllSpellsListCtrl@@6BCSkinCtrl@@@		; CAllSpellsListCtrl::`vftable'
PUBLIC	??_7CAllSpellsListCtrl@@6BCScrollable@@@	; CAllSpellsListCtrl::`vftable'
PUBLIC	??_7CAllSpellsListCtrl@@6BCMouseWheelable@@@	; CAllSpellsListCtrl::`vftable'
PUBLIC	??_7CAllSpellsListCtrl@@6B@			; CAllSpellsListCtrl::`vftable'
PUBLIC	??_GCAllSpellsListCtrl@@UAEPAXI@Z		; CAllSpellsListCtrl::`scalar deleting destructor'
PUBLIC	??_ECAllSpellsListCtrl@@UAEPAXI@Z		; CAllSpellsListCtrl::`vector deleting destructor'
PUBLIC	??_ECAllSpellsListCtrl@@WEA@AEPAXI@Z		; CAllSpellsListCtrl::`vector deleting destructor'
PUBLIC	??_ECAllSpellsListCtrl@@WHE@AEPAXI@Z		; CAllSpellsListCtrl::`vector deleting destructor'
PUBLIC	??_ECAllSpellsListCtrl@@WLE@AEPAXI@Z		; CAllSpellsListCtrl::`vector deleting destructor'
;	COMDAT ??_7CAllSpellsListCtrl@@6BCListCtrl@@@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\SpellDlg.cpp
CONST	SEGMENT
??_7CAllSpellsListCtrl@@6BCListCtrl@@@ DD FLAT:?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ ; CAllSpellsListCtrl::`vftable'
	DD	FLAT:??_ECAllSpellsListCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSpellListCtrl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CListCtrl@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?DrawItem@CListCtrl@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?GetItemTextColor@CSpellListCtrl@@MAEKH@Z
	DD	FLAT:?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
	DD	FLAT:?OnItemActivate@CAllSpellsListCtrl@@UAEXH_N@Z
	DD	FLAT:?OnMouseOver@CSkinListCtrl@@UAEXVCPoint@@@Z
CONST	ENDS
;	COMDAT ??_7CAllSpellsListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CAllSpellsListCtrl@@6BCSkinCtrl@@@ DD FLAT:??_ECAllSpellsListCtrl@@WEA@AEPAXI@Z ; CAllSpellsListCtrl::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CAllSpellsListCtrl@@6BCScrollable@@@
CONST	SEGMENT
??_7CAllSpellsListCtrl@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinListCtrl@@UAEXXZ ; CAllSpellsListCtrl::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CScrollable@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CSkinListCtrl@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CAllSpellsListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CAllSpellsListCtrl@@6BCMouseWheelable@@@ DD FLAT:??_ECAllSpellsListCtrl@@WHE@AEPAXI@Z ; CAllSpellsListCtrl::`vftable'
	DD	FLAT:?OnMouseWheel@CSkinListCtrl@@UAEXIF@Z
CONST	ENDS
;	COMDAT ??_7CAllSpellsListCtrl@@6B@
CONST	SEGMENT
??_7CAllSpellsListCtrl@@6B@ DD FLAT:??_ECAllSpellsListCtrl@@WLE@AEPAXI@Z ; CAllSpellsListCtrl::`vftable'
	DD	FLAT:?CanAcceptDrop@CSpellListCtrl@@UAEPAUHICON__@@AAVCDraggable@@AAVCPoint@@@Z
	DD	FLAT:?AcceptDrop@CSpellListCtrl@@UAEXAAVCDraggable@@AAVCPoint@@@Z
CONST	ENDS
;	COMDAT ??0CAllSpellsListCtrl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CAllSpellsListCtrl@@QAE@XZ PROC NEAR			; CAllSpellsListCtrl::CAllSpellsListCtrl, COMDAT

; 187  : 	CAllSpellsListCtrl() {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSpellListCtrl@@QAE@XZ ; CSpellListCtrl::CSpellListCtrl
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CAllSpellsListCtrl@@6BCListCtrl@@@ ; CAllSpellsListCtrl::`vftable'
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CAllSpellsListCtrl@@6BCSkinCtrl@@@ ; CAllSpellsListCtrl::`vftable'
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	c7 42 54 00 00
	00 00		 mov	 DWORD PTR [edx+84], OFFSET FLAT:??_7CAllSpellsListCtrl@@6BCScrollable@@@ ; CAllSpellsListCtrl::`vftable'
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CAllSpellsListCtrl@@6BCMouseWheelable@@@ ; CAllSpellsListCtrl::`vftable'
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	c7 81 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+180], OFFSET FLAT:??_7CAllSpellsListCtrl@@6B@ ; CAllSpellsListCtrl::`vftable'
  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
??0CAllSpellsListCtrl@@QAE@XZ ENDP			; CAllSpellsListCtrl::CAllSpellsListCtrl
_TEXT	ENDS
PUBLIC	?OnSpell@CSpellListDlg@@QAEXVCSCI_Spell@@_N@Z	; CSpellListDlg::OnSpell
;	COMDAT ?OnItemActivate@CAllSpellsListCtrl@@UAEXH_N@Z
_TEXT	SEGMENT
_nItemIndex$ = 8
_bDoubleClick$ = 12
_this$ = -8
?OnItemActivate@CAllSpellsListCtrl@@UAEXH_N@Z PROC NEAR	; CAllSpellsListCtrl::OnItemActivate, COMDAT

; 190  : 	virtual void OnItemActivate ( int nItemIndex, bool bDoubleClick ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 191  : 		((CSpellListDlg*) m_pParentWnd)->OnSpell( GetItemData( nItemIndex ), bDoubleClick );

  00009	8a 45 0c	 mov	 al, BYTE PTR _bDoubleClick$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _nItemIndex$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  00019	51		 push	 ecx
  0001a	8b cc		 mov	 ecx, esp
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell
  00022	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  00028	e8 00 00 00 00	 call	 ?OnSpell@CSpellListDlg@@QAEXVCSCI_Spell@@_N@Z ; CSpellListDlg::OnSpell

; 192  : 	}

  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
?OnItemActivate@CAllSpellsListCtrl@@UAEXH_N@Z ENDP	; CAllSpellsListCtrl::OnItemActivate
_TEXT	ENDS
PUBLIC	??1CAllSpellsListCtrl@@UAE@XZ			; CAllSpellsListCtrl::~CAllSpellsListCtrl
;	COMDAT ??_GCAllSpellsListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCAllSpellsListCtrl@@UAEPAXI@Z PROC NEAR		; CAllSpellsListCtrl::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CAllSpellsListCtrl@@UAE@XZ ; CAllSpellsListCtrl::~CAllSpellsListCtrl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L152689
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L152689:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCAllSpellsListCtrl@@UAEPAXI@Z ENDP			; CAllSpellsListCtrl::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CAllSpellsListCtrl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CAllSpellsListCtrl@@UAE@XZ PROC NEAR			; CAllSpellsListCtrl::~CAllSpellsListCtrl, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSpellListCtrl@@UAE@XZ ; CSpellListCtrl::~CSpellListCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CAllSpellsListCtrl@@UAE@XZ ENDP			; CAllSpellsListCtrl::~CAllSpellsListCtrl
_TEXT	ENDS
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L152860
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L152860:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+1
$SG152872 DB	'SorcerySpells', 00H
	ORG $+2
$SG152875 DB	'ElementalismSpells', 00H
	ORG $+1
$SG152878 DB	'MysticismSpells', 00H
$SG152881 DB	'ThaumaturgySpells', 00H
	ORG $+2
$SG152884 DB	'NecromancySpells', 00H
_DATA	ENDS
_TEXT	SEGMENT
_nTab$ = 8
_this$ = -32
_i$ = -4
_pTab$152889 = -8
?SelectTab@CSpellListDlg@@QAEXH@Z PROC NEAR		; CSpellListDlg::SelectTab

; 421  : {

  01200	55		 push	 ebp
  01201	8b ec		 mov	 ebp, esp
  01203	83 ec 24	 sub	 esp, 36			; 00000024H
  01206	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 422  : 	if ( nTab == m_nCurrentTab )

  01209	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0120c	8b 4d 08	 mov	 ecx, DWORD PTR _nTab$[ebp]
  0120f	3b 88 a8 00 00
	00		 cmp	 ecx, DWORD PTR [eax+168]
  01215	75 05		 jne	 SHORT $L152865

; 423  : 		return;

  01217	e9 56 01 00 00	 jmp	 $L152864
$L152865:

; 424  : 
; 425  : 	switch ( nTab ) {

  0121c	8b 55 08	 mov	 edx, DWORD PTR _nTab$[ebp]
  0121f	89 55 dc	 mov	 DWORD PTR -36+[ebp], edx
  01222	83 7d dc 04	 cmp	 DWORD PTR -36+[ebp], 4
  01226	0f 87 94 00 00
	00		 ja	 $L152867
  0122c	8b 45 dc	 mov	 eax, DWORD PTR -36+[ebp]
  0122f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L159180[eax*4]
$L152870:

; 426  : 		case 0:
; 427  : 			AddToSpellList( GetClassByName ( "SorcerySpells" ) );

  01236	68 00 00 00 00	 push	 OFFSET FLAT:$SG152872
  0123b	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  01240	8b cc		 mov	 ecx, esp
  01242	50		 push	 eax
  01243	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  01248	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0124b	e8 00 00 00 00	 call	 ?AddToSpellList@CSpellListDlg@@IAEXVCSCI_List@@@Z ; CSpellListDlg::AddToSpellList

; 428  : 			break;

  01250	eb 6e		 jmp	 SHORT $L152867
$L152873:

; 429  : 		case 1:
; 430  : 			AddToSpellList( GetClassByName ( "ElementalismSpells" ) );

  01252	68 00 00 00 00	 push	 OFFSET FLAT:$SG152875
  01257	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  0125c	8b cc		 mov	 ecx, esp
  0125e	50		 push	 eax
  0125f	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  01264	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01267	e8 00 00 00 00	 call	 ?AddToSpellList@CSpellListDlg@@IAEXVCSCI_List@@@Z ; CSpellListDlg::AddToSpellList

; 431  : 			break;

  0126c	eb 52		 jmp	 SHORT $L152867
$L152876:

; 432  : 		case 2:
; 433  : 			AddToSpellList( GetClassByName ( "MysticismSpells" ) );

  0126e	68 00 00 00 00	 push	 OFFSET FLAT:$SG152878
  01273	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  01278	8b cc		 mov	 ecx, esp
  0127a	50		 push	 eax
  0127b	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  01280	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01283	e8 00 00 00 00	 call	 ?AddToSpellList@CSpellListDlg@@IAEXVCSCI_List@@@Z ; CSpellListDlg::AddToSpellList

; 434  : 			break;

  01288	eb 36		 jmp	 SHORT $L152867
$L152879:

; 435  : 		case 3:
; 436  : 			AddToSpellList( GetClassByName ( "ThaumaturgySpells" ) );

  0128a	68 00 00 00 00	 push	 OFFSET FLAT:$SG152881
  0128f	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  01294	8b cc		 mov	 ecx, esp
  01296	50		 push	 eax
  01297	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  0129c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0129f	e8 00 00 00 00	 call	 ?AddToSpellList@CSpellListDlg@@IAEXVCSCI_List@@@Z ; CSpellListDlg::AddToSpellList

; 437  : 			break;

  012a4	eb 1a		 jmp	 SHORT $L152867
$L152882:

; 438  : 		case 4:
; 439  : 			AddToSpellList( GetClassByName ( "NecromancySpells" ) );

  012a6	68 00 00 00 00	 push	 OFFSET FLAT:$SG152884
  012ab	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  012b0	8b cc		 mov	 ecx, esp
  012b2	50		 push	 eax
  012b3	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  012b8	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  012bb	e8 00 00 00 00	 call	 ?AddToSpellList@CSpellListDlg@@IAEXVCSCI_List@@@Z ; CSpellListDlg::AddToSpellList
$L152867:

; 442  : 
; 443  : 	for (int i = 0;i < 5;i++) {

  012c0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  012c7	eb 09		 jmp	 SHORT $L152886
$L152887:
  012c9	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  012cc	83 c1 01	 add	 ecx, 1
  012cf	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx
$L152886:
  012d2	83 7d fc 05	 cmp	 DWORD PTR _i$[ebp], 5
  012d6	7d 4f		 jge	 SHORT $L152888

; 444  : 		CTabBtn* pTab = m_Tabs[i];

  012d8	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  012db	52		 push	 edx
  012dc	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  012df	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  012e5	e8 00 00 00 00	 call	 ??A?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEAAPAVCTabBtn@@I@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::operator[]
  012ea	8b 00		 mov	 eax, DWORD PTR [eax]
  012ec	89 45 f8	 mov	 DWORD PTR _pTab$152889[ebp], eax

; 445  : 
; 446  : 		if ( i == nTab ) {

  012ef	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  012f2	3b 4d 08	 cmp	 ecx, DWORD PTR _nTab$[ebp]
  012f5	75 18		 jne	 SHORT $L152890

; 447  : 			pTab->Activate();

  012f7	8b 55 f8	 mov	 edx, DWORD PTR _pTab$152889[ebp]
  012fa	8b 02		 mov	 eax, DWORD PTR [edx]
  012fc	8b 4d f8	 mov	 ecx, DWORD PTR _pTab$152889[ebp]
  012ff	ff 50 18	 call	 DWORD PTR [eax+24]

; 448  : 			pTab->Refresh();

  01302	8b 4d f8	 mov	 ecx, DWORD PTR _pTab$152889[ebp]
  01305	8b 11		 mov	 edx, DWORD PTR [ecx]
  01307	8b 4d f8	 mov	 ecx, DWORD PTR _pTab$152889[ebp]
  0130a	ff 52 08	 call	 DWORD PTR [edx+8]

; 449  : 		} else {

  0130d	eb 16		 jmp	 SHORT $L152891
$L152890:

; 450  : 			pTab->Deactivate();

  0130f	8b 45 f8	 mov	 eax, DWORD PTR _pTab$152889[ebp]
  01312	8b 10		 mov	 edx, DWORD PTR [eax]
  01314	8b 4d f8	 mov	 ecx, DWORD PTR _pTab$152889[ebp]
  01317	ff 52 1c	 call	 DWORD PTR [edx+28]

; 451  : 			pTab->Refresh();

  0131a	8b 45 f8	 mov	 eax, DWORD PTR _pTab$152889[ebp]
  0131d	8b 10		 mov	 edx, DWORD PTR [eax]
  0131f	8b 4d f8	 mov	 ecx, DWORD PTR _pTab$152889[ebp]
  01322	ff 52 08	 call	 DWORD PTR [edx+8]
$L152891:

; 453  : 	}

  01325	eb a2		 jmp	 SHORT $L152887
$L152888:

; 454  : 
; 455  : 	if ( m_pSpellList->GetItemCount() ) {

  01327	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0132a	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [eax+156]
  01330	e8 00 00 00 00	 call	 ?GetItemCount@CListCtrl@@QBEHXZ ; CListCtrl::GetItemCount
  01335	85 c0		 test	 eax, eax
  01337	74 12		 je	 SHORT $L152892

; 456  : 		m_pSpellList->ShowWindow( SW_SHOW );

  01339	6a 05		 push	 5
  0133b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0133e	8b 89 9c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+156]
  01344	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 457  : 	} else {

  01349	eb 10		 jmp	 SHORT $L152893
$L152892:

; 458  : 		m_pSpellList->ShowWindow( SW_HIDE );

  0134b	6a 00		 push	 0
  0134d	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  01350	8b 8a 9c 00 00
	00		 mov	 ecx, DWORD PTR [edx+156]
  01356	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L152893:

; 460  : 
; 461  : 	m_nCurrentTab = m_nSavedTab = nTab;

  0135b	8b 45 08	 mov	 eax, DWORD PTR _nTab$[ebp]
  0135e	a3 00 00 00 00	 mov	 DWORD PTR ?m_nSavedTab@CSpellListDlg@@1HA, eax ; CSpellListDlg::m_nSavedTab
  01363	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01366	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nSavedTab@CSpellListDlg@@1HA ; CSpellListDlg::m_nSavedTab
  0136c	89 91 a8 00 00
	00		 mov	 DWORD PTR [ecx+168], edx
$L152864:

; 462  : }

  01372	8b e5		 mov	 esp, ebp
  01374	5d		 pop	 ebp
  01375	c2 04 00	 ret	 4
$L159180:
  01378	00 00 00 00	 DD	 $L152870
  0137c	00 00 00 00	 DD	 $L152873
  01380	00 00 00 00	 DD	 $L152876
  01384	00 00 00 00	 DD	 $L152879
  01388	00 00 00 00	 DD	 $L152882
?SelectTab@CSpellListDlg@@QAEXH@Z ENDP			; CSpellListDlg::SelectTab
_TEXT	ENDS
PUBLIC	?CompareSpells@CSpellListDlg@@KGHVCSCI_Spell@@0PAVCSkinListCtrl@@@Z ; CSpellListDlg::CompareSpells
EXTRN	__imp__stricmp:NEAR
_TEXT	SEGMENT
_hSpellA$ = 8
_hSpellB$ = 12
$T159182 = -4
$T159183 = -8
$T159184 = -12
$T159185 = -16
?CompareSpells@CSpellListDlg@@KGHVCSCI_Spell@@0PAVCSkinListCtrl@@@Z PROC NEAR ; CSpellListDlg::CompareSpells

; 466  : {

  0138c	55		 push	 ebp
  0138d	8b ec		 mov	 ebp, esp
  0138f	83 ec 10	 sub	 esp, 16			; 00000010H

; 467  : 	return stricmp( *((StringID) hSpellA.get_pText() ), *((StringID) hSpellB.get_pText() ) );

  01392	8d 4d 0c	 lea	 ecx, DWORD PTR _hSpellB$[ebp]
  01395	e8 00 00 00 00	 call	 ?get_pText@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pText
  0139a	50		 push	 eax
  0139b	8d 4d f8	 lea	 ecx, DWORD PTR $T159183[ebp]
  0139e	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  013a3	8d 4d 08	 lea	 ecx, DWORD PTR _hSpellA$[ebp]
  013a6	e8 00 00 00 00	 call	 ?get_pText@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pText
  013ab	50		 push	 eax
  013ac	8d 4d f0	 lea	 ecx, DWORD PTR $T159185[ebp]
  013af	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  013b4	8d 45 f8	 lea	 eax, DWORD PTR $T159183[ebp]
  013b7	50		 push	 eax
  013b8	8d 4d fc	 lea	 ecx, DWORD PTR $T159182[ebp]
  013bb	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  013c0	8b c8		 mov	 ecx, eax
  013c2	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  013c7	50		 push	 eax
  013c8	8d 4d f0	 lea	 ecx, DWORD PTR $T159185[ebp]
  013cb	51		 push	 ecx
  013cc	8d 4d f4	 lea	 ecx, DWORD PTR $T159184[ebp]
  013cf	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABVMemID@@@Z ; StringID::StringID
  013d4	8b c8		 mov	 ecx, eax
  013d6	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  013db	50		 push	 eax
  013dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__stricmp
  013e2	83 c4 08	 add	 esp, 8

; 468  : }

  013e5	8b e5		 mov	 esp, ebp
  013e7	5d		 pop	 ebp
  013e8	c2 0c 00	 ret	 12			; 0000000cH
?CompareSpells@CSpellListDlg@@KGHVCSCI_Spell@@0PAVCSkinListCtrl@@@Z ENDP ; CSpellListDlg::CompareSpells
_TEXT	ENDS
PUBLIC	?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z		; CListCtrl::SortItems
_TEXT	SEGMENT
_this$ = -4
?Sort@CSpellListDlg@@QAEXXZ PROC NEAR			; CSpellListDlg::Sort

; 472  : {

  013eb	55		 push	 ebp
  013ec	8b ec		 mov	 ebp, esp
  013ee	51		 push	 ecx
  013ef	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 473  : 	if ( m_pSpellList->GetItemCount() == 1 )

  013f2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  013f5	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [eax+156]
  013fb	e8 00 00 00 00	 call	 ?GetItemCount@CListCtrl@@QBEHXZ ; CListCtrl::GetItemCount
  01400	83 f8 01	 cmp	 eax, 1
  01403	75 02		 jne	 SHORT $L152909

; 474  : 		return;

  01405	eb 1d		 jmp	 SHORT $L152908
$L152909:

; 475  : 
; 476  : 	m_pSpellList->SortItems ( (PFNLVCOMPARE)CSpellListDlg::CompareSpells, (int) m_pSpellList );

  01407	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0140a	8b 91 9c 00 00
	00		 mov	 edx, DWORD PTR [ecx+156]
  01410	52		 push	 edx
  01411	68 00 00 00 00	 push	 OFFSET FLAT:?CompareSpells@CSpellListDlg@@KGHVCSCI_Spell@@0PAVCSkinListCtrl@@@Z ; CSpellListDlg::CompareSpells
  01416	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01419	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [eax+156]
  0141f	e8 00 00 00 00	 call	 ?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z ; CListCtrl::SortItems
$L152908:

; 477  : }

  01424	8b e5		 mov	 esp, ebp
  01426	5d		 pop	 ebp
  01427	c3		 ret	 0
?Sort@CSpellListDlg@@QAEXXZ ENDP			; CSpellListDlg::Sort
_TEXT	ENDS
PUBLIC	?get_pCombatGroup@CSCI_WorldObject@@QAEFXZ	; CSCI_WorldObject::get_pCombatGroup
EXTRN	?cast@CSCI_Spell@@QAEXXZ:NEAR			; CSCI_Spell::cast
EXTRN	?AddVerb@CVerbDialog@@QAEXHH@Z:NEAR		; CVerbDialog::AddVerb
EXTRN	?Show@CVerbDialog@@QAEXXZ:NEAR			; CVerbDialog::Show
EXTRN	?CallMethod@CSCI_Object@@QAEXFF@Z:NEAR		; CSCI_Object::CallMethod
EXTRN	__imp__GetKeyState@4:NEAR
EXTRN	??0CSpellVerbDialog@@QAE@XZ:NEAR		; CSpellVerbDialog::CSpellVerbDialog
EXTRN	__imp__MessageBeep@4:NEAR
xdata$x	SEGMENT
$T159197 DD	019930520H
	DD	01H
	DD	FLAT:$T159199
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159199 DD	0ffffffffH
	DD	FLAT:$L159195
xdata$x	ENDS
_TEXT	SEGMENT
_hSpell$ = 8
_bDoubleClick$ = 12
_this$ = -40
_hEgo$152922 = -16
_hCombatGroup$152923 = -20
_pVerbDlg$152928 = -24
$T159188 = -28
$T159189 = -32
$T159194 = -36
__$EHRec$ = -12
?OnSpell@CSpellListDlg@@QAEXVCSCI_Spell@@_N@Z PROC NEAR	; CSpellListDlg::OnSpell

; 480  : {

  01428	55		 push	 ebp
  01429	8b ec		 mov	 ebp, esp
  0142b	6a ff		 push	 -1
  0142d	68 00 00 00 00	 push	 $L159198
  01432	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01438	50		 push	 eax
  01439	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01440	83 ec 24	 sub	 esp, 36			; 00000024H
  01443	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	if ( hSpell ) {

  01446	8d 4d 08	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  01449	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0144e	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  01453	85 c0		 test	 eax, eax
  01455	0f 84 83 01 00
	00		 je	 $L152927

; 482  : 		if ( bDoubleClick ) {

  0145b	8b 45 0c	 mov	 eax, DWORD PTR _bDoubleClick$[ebp]
  0145e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01463	85 c0		 test	 eax, eax
  01465	0f 84 ad 00 00
	00		 je	 $L152918

; 483  : 			if ( hSpell.canCast() ) {

  0146b	8d 4d 08	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  0146e	e8 00 00 00 00	 call	 ?canCast@CSCI_Spell@@QAEFXZ ; CSCI_Spell::canCast
  01473	0f bf c8	 movsx	 ecx, ax
  01476	85 c9		 test	 ecx, ecx
  01478	0f 84 8d 00 00
	00		 je	 $L152919

; 484  : 				if ( m_hObject ) {		// delayed action

  0147e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01481	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  01487	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0148c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  01491	85 c0		 test	 eax, eax
  01493	74 24		 je	 SHORT $L152920

; 485  : 					m_hObject.CallMethod( m_nMethod, hSpell );

  01495	8d 4d 08	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  01498	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0149d	50		 push	 eax
  0149e	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  014a1	66 8b 82 a6 00
	00 00		 mov	 ax, WORD PTR [edx+166]
  014a8	50		 push	 eax
  014a9	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  014ac	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  014b2	e8 00 00 00 00	 call	 ?CallMethod@CSCI_Object@@QAEXFF@Z ; CSCI_Object::CallMethod

; 486  : 				} else {

  014b7	eb 08		 jmp	 SHORT $L152921
$L152920:

; 487  : 					hSpell.cast();

  014b9	8d 4d 08	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  014bc	e8 00 00 00 00	 call	 ?cast@CSCI_Spell@@QAEXXZ ; CSCI_Spell::cast
$L152921:

; 489  : 				
; 490  : 				CSCI_WorldEgo hEgo = pm.GetGlobal ( gSCI_ego );

  014c1	6a 01		 push	 1
  014c3	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?pm@@3VPMachine@@A
  014c8	e8 00 00 00 00	 call	 ?GetGlobal@PMachine@@QAEFH@Z ; PMachine::GetGlobal
  014cd	50		 push	 eax
  014ce	8d 4d f0	 lea	 ecx, DWORD PTR _hEgo$152922[ebp]
  014d1	e8 00 00 00 00	 call	 ??0CSCI_WorldEgo@@QAE@G@Z ; CSCI_WorldEgo::CSCI_WorldEgo

; 491  : 				Property hCombatGroup = hEgo.get_pCombatGroup();

  014d6	8d 4d f0	 lea	 ecx, DWORD PTR _hEgo$152922[ebp]
  014d9	e8 00 00 00 00	 call	 ?get_pCombatGroup@CSCI_WorldObject@@QAEFXZ ; CSCI_WorldObject::get_pCombatGroup
  014de	66 89 45 ec	 mov	 WORD PTR _hCombatGroup$152923[ebp], ax

; 492  : 
; 493  : 				if ( hCombatGroup || (GetKeyState ( VK_CONTROL ) >= 0) ) {

  014e2	0f bf 4d ec	 movsx	 ecx, WORD PTR _hCombatGroup$152923[ebp]
  014e6	85 c9		 test	 ecx, ecx
  014e8	75 0f		 jne	 SHORT $L152925
  014ea	6a 11		 push	 17			; 00000011H
  014ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  014f2	0f bf d0	 movsx	 edx, ax
  014f5	85 d2		 test	 edx, edx
  014f7	7c 10		 jl	 SHORT $L152924
$L152925:

; 494  : 					CloseSelf();

  014f9	6a 00		 push	 0
  014fb	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  014fe	8b 10		 mov	 edx, DWORD PTR [eax]
  01500	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01503	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L152924:

; 496  : 			} else {

  01509	eb 08		 jmp	 SHORT $L152926
$L152919:

; 497  : 				MessageBeep ( 0 );

  0150b	6a 00		 push	 0
  0150d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4
$L152926:

; 499  : 		} else {

  01513	e9 c6 00 00 00	 jmp	 $L152927
$L152918:

; 500  : 			// create a new verb dialog...
; 501  : 			CSpellVerbDialog *pVerbDlg = new CSpellVerbDialog();

  01518	68 ec 00 00 00	 push	 236			; 000000ecH
  0151d	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01522	89 45 e0	 mov	 DWORD PTR $T159189[ebp], eax
  01525	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0152c	83 7d e0 00	 cmp	 DWORD PTR $T159189[ebp], 0
  01530	74 0d		 je	 SHORT $L159190
  01532	8b 4d e0	 mov	 ecx, DWORD PTR $T159189[ebp]
  01535	e8 00 00 00 00	 call	 ??0CSpellVerbDialog@@QAE@XZ ; CSpellVerbDialog::CSpellVerbDialog
  0153a	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  0153d	eb 07		 jmp	 SHORT $L159191
$L159190:
  0153f	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L159191:
  01546	8b 45 d4	 mov	 eax, DWORD PTR -44+[ebp]
  01549	89 45 e4	 mov	 DWORD PTR $T159188[ebp], eax
  0154c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01553	8b 4d e4	 mov	 ecx, DWORD PTR $T159188[ebp]
  01556	89 4d e8	 mov	 DWORD PTR _pVerbDlg$152928[ebp], ecx

; 502  : 			pVerbDlg->Create ( hSpell, this );

  01559	83 7d d8 00	 cmp	 DWORD PTR _this$[ebp], 0
  0155d	74 0e		 je	 SHORT $L159192
  0155f	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  01562	81 c2 94 00 00
	00		 add	 edx, 148		; 00000094H
  01568	89 55 d0	 mov	 DWORD PTR -48+[ebp], edx
  0156b	eb 07		 jmp	 SHORT $L159193
$L159192:
  0156d	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR -48+[ebp], 0
$L159193:
  01574	8b 45 d0	 mov	 eax, DWORD PTR -48+[ebp]
  01577	50		 push	 eax
  01578	51		 push	 ecx
  01579	8b cc		 mov	 ecx, esp
  0157b	89 65 dc	 mov	 DWORD PTR $T159194[ebp], esp
  0157e	8d 55 08	 lea	 edx, DWORD PTR _hSpell$[ebp]
  01581	52		 push	 edx
  01582	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell
  01587	8b 45 e8	 mov	 eax, DWORD PTR _pVerbDlg$152928[ebp]
  0158a	8b 10		 mov	 edx, DWORD PTR [eax]
  0158c	8b 4d e8	 mov	 ecx, DWORD PTR _pVerbDlg$152928[ebp]
  0158f	ff 92 fc 00 00
	00		 call	 DWORD PTR [edx+252]

; 503  : 
; 504  : 			if ( m_pFavoritesList->FindItem( hSpell ) == -1 )

  01595	8d 4d 08	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  01598	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0159d	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  015a2	50		 push	 eax
  015a3	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  015a6	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  015ac	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  015b1	83 f8 ff	 cmp	 eax, -1
  015b4	75 11		 jne	 SHORT $L152934

; 505  : 				pVerbDlg->AddVerb ( _VERB_ADD );

  015b6	6a 01		 push	 1
  015b8	68 13 27 00 00	 push	 10003			; 00002713H
  015bd	8b 4d e8	 mov	 ecx, DWORD PTR _pVerbDlg$152928[ebp]
  015c0	e8 00 00 00 00	 call	 ?AddVerb@CVerbDialog@@QAEXHH@Z ; CVerbDialog::AddVerb

; 506  : 			else

  015c5	eb 0f		 jmp	 SHORT $L152935
$L152934:

; 507  : 				pVerbDlg->AddVerb ( _VERB_REMOVE );

  015c7	6a 01		 push	 1
  015c9	68 14 27 00 00	 push	 10004			; 00002714H
  015ce	8b 4d e8	 mov	 ecx, DWORD PTR _pVerbDlg$152928[ebp]
  015d1	e8 00 00 00 00	 call	 ?AddVerb@CVerbDialog@@QAEXHH@Z ; CVerbDialog::AddVerb
$L152935:

; 508  : 
; 509  : 			pVerbDlg->Show();

  015d6	8b 4d e8	 mov	 ecx, DWORD PTR _pVerbDlg$152928[ebp]
  015d9	e8 00 00 00 00	 call	 ?Show@CVerbDialog@@QAEXXZ ; CVerbDialog::Show
$L152927:

; 512  : }

  015de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  015e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  015e8	8b e5		 mov	 esp, ebp
  015ea	5d		 pop	 ebp
  015eb	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L159195:
  0011b	8b 45 e0	 mov	 eax, DWORD PTR $T159189[ebp]
  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00124	c3		 ret	 0
$L159198:
  00125	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159197
  0012a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnSpell@CSpellListDlg@@QAEXVCSCI_Spell@@_N@Z ENDP	; CSpellListDlg::OnSpell
xdata$x	SEGMENT
$T159210 DD	019930520H
	DD	01H
	DD	FLAT:$T159212
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159212 DD	0ffffffffH
	DD	FLAT:$L159208
xdata$x	ENDS
_TEXT	SEGMENT
_hSpell$ = 8
_bDoubleClick$ = 12
_this$ = -40
_hEgo$152945 = -16
_hCombatGroup$152946 = -20
_pVerbDlg$152951 = -24
$T159201 = -28
$T159202 = -32
$T159207 = -36
__$EHRec$ = -12
?OnFavorite@CSpellListDlg@@QAEXVCSCI_Spell@@_N@Z PROC NEAR ; CSpellListDlg::OnFavorite

; 515  : {

  015ee	55		 push	 ebp
  015ef	8b ec		 mov	 ebp, esp
  015f1	6a ff		 push	 -1
  015f3	68 00 00 00 00	 push	 $L159211
  015f8	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  015fe	50		 push	 eax
  015ff	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01606	83 ec 24	 sub	 esp, 36			; 00000024H
  01609	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 516  : 	if ( bDoubleClick ) {

  0160c	8b 45 0c	 mov	 eax, DWORD PTR _bDoubleClick$[ebp]
  0160f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01614	85 c0		 test	 eax, eax
  01616	0f 84 ad 00 00
	00		 je	 $L152941

; 517  : 		if ( hSpell.canCast() ) {

  0161c	8d 4d 08	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  0161f	e8 00 00 00 00	 call	 ?canCast@CSCI_Spell@@QAEFXZ ; CSCI_Spell::canCast
  01624	0f bf c8	 movsx	 ecx, ax
  01627	85 c9		 test	 ecx, ecx
  01629	0f 84 8d 00 00
	00		 je	 $L152942

; 518  : 			if ( m_hObject ) {		// delayed action

  0162f	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  01632	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  01638	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0163d	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  01642	85 c0		 test	 eax, eax
  01644	74 24		 je	 SHORT $L152943

; 519  : 				m_hObject.CallMethod( m_nMethod, hSpell );

  01646	8d 4d 08	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  01649	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0164e	50		 push	 eax
  0164f	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  01652	66 8b 82 a6 00
	00 00		 mov	 ax, WORD PTR [edx+166]
  01659	50		 push	 eax
  0165a	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0165d	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  01663	e8 00 00 00 00	 call	 ?CallMethod@CSCI_Object@@QAEXFF@Z ; CSCI_Object::CallMethod

; 520  : 			} else {

  01668	eb 08		 jmp	 SHORT $L152944
$L152943:

; 521  : 				hSpell.cast();

  0166a	8d 4d 08	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  0166d	e8 00 00 00 00	 call	 ?cast@CSCI_Spell@@QAEXXZ ; CSCI_Spell::cast
$L152944:

; 523  : 
; 524  : 			CSCI_WorldEgo hEgo = pm.GetGlobal ( gSCI_ego );

  01672	6a 01		 push	 1
  01674	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?pm@@3VPMachine@@A
  01679	e8 00 00 00 00	 call	 ?GetGlobal@PMachine@@QAEFH@Z ; PMachine::GetGlobal
  0167e	50		 push	 eax
  0167f	8d 4d f0	 lea	 ecx, DWORD PTR _hEgo$152945[ebp]
  01682	e8 00 00 00 00	 call	 ??0CSCI_WorldEgo@@QAE@G@Z ; CSCI_WorldEgo::CSCI_WorldEgo

; 525  : 			Property hCombatGroup = hEgo.get_pCombatGroup();

  01687	8d 4d f0	 lea	 ecx, DWORD PTR _hEgo$152945[ebp]
  0168a	e8 00 00 00 00	 call	 ?get_pCombatGroup@CSCI_WorldObject@@QAEFXZ ; CSCI_WorldObject::get_pCombatGroup
  0168f	66 89 45 ec	 mov	 WORD PTR _hCombatGroup$152946[ebp], ax

; 526  : 
; 527  : 			if ( hCombatGroup || (GetKeyState ( VK_CONTROL ) >= 0) ) {

  01693	0f bf 4d ec	 movsx	 ecx, WORD PTR _hCombatGroup$152946[ebp]
  01697	85 c9		 test	 ecx, ecx
  01699	75 0f		 jne	 SHORT $L152948
  0169b	6a 11		 push	 17			; 00000011H
  0169d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  016a3	0f bf d0	 movsx	 edx, ax
  016a6	85 d2		 test	 edx, edx
  016a8	7c 10		 jl	 SHORT $L152947
$L152948:

; 528  : 				CloseSelf();

  016aa	6a 00		 push	 0
  016ac	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  016af	8b 10		 mov	 edx, DWORD PTR [eax]
  016b1	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  016b4	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L152947:

; 530  : 		} else {

  016ba	eb 08		 jmp	 SHORT $L152949
$L152942:

; 531  : 			MessageBeep ( 0 );

  016bc	6a 00		 push	 0
  016be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4
$L152949:

; 533  : 	} else {

  016c4	e9 94 00 00 00	 jmp	 $L152950
$L152941:

; 534  : 		// create a new verb dialog...
; 535  : 		CSpellVerbDialog *pVerbDlg = new CSpellVerbDialog();

  016c9	68 ec 00 00 00	 push	 236			; 000000ecH
  016ce	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  016d3	89 45 e0	 mov	 DWORD PTR $T159202[ebp], eax
  016d6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  016dd	83 7d e0 00	 cmp	 DWORD PTR $T159202[ebp], 0
  016e1	74 0d		 je	 SHORT $L159203
  016e3	8b 4d e0	 mov	 ecx, DWORD PTR $T159202[ebp]
  016e6	e8 00 00 00 00	 call	 ??0CSpellVerbDialog@@QAE@XZ ; CSpellVerbDialog::CSpellVerbDialog
  016eb	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  016ee	eb 07		 jmp	 SHORT $L159204
$L159203:
  016f0	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L159204:
  016f7	8b 45 d4	 mov	 eax, DWORD PTR -44+[ebp]
  016fa	89 45 e4	 mov	 DWORD PTR $T159201[ebp], eax
  016fd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01704	8b 4d e4	 mov	 ecx, DWORD PTR $T159201[ebp]
  01707	89 4d e8	 mov	 DWORD PTR _pVerbDlg$152951[ebp], ecx

; 536  : 		pVerbDlg->Create ( hSpell, this );

  0170a	83 7d d8 00	 cmp	 DWORD PTR _this$[ebp], 0
  0170e	74 0e		 je	 SHORT $L159205
  01710	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  01713	81 c2 94 00 00
	00		 add	 edx, 148		; 00000094H
  01719	89 55 d0	 mov	 DWORD PTR -48+[ebp], edx
  0171c	eb 07		 jmp	 SHORT $L159206
$L159205:
  0171e	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR -48+[ebp], 0
$L159206:
  01725	8b 45 d0	 mov	 eax, DWORD PTR -48+[ebp]
  01728	50		 push	 eax
  01729	51		 push	 ecx
  0172a	8b cc		 mov	 ecx, esp
  0172c	89 65 dc	 mov	 DWORD PTR $T159207[ebp], esp
  0172f	8d 55 08	 lea	 edx, DWORD PTR _hSpell$[ebp]
  01732	52		 push	 edx
  01733	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell
  01738	8b 45 e8	 mov	 eax, DWORD PTR _pVerbDlg$152951[ebp]
  0173b	8b 10		 mov	 edx, DWORD PTR [eax]
  0173d	8b 4d e8	 mov	 ecx, DWORD PTR _pVerbDlg$152951[ebp]
  01740	ff 92 fc 00 00
	00		 call	 DWORD PTR [edx+252]

; 537  : 
; 538  : 		pVerbDlg->AddVerb ( _VERB_REMOVE );

  01746	6a 01		 push	 1
  01748	68 14 27 00 00	 push	 10004			; 00002714H
  0174d	8b 4d e8	 mov	 ecx, DWORD PTR _pVerbDlg$152951[ebp]
  01750	e8 00 00 00 00	 call	 ?AddVerb@CVerbDialog@@QAEXHH@Z ; CVerbDialog::AddVerb

; 539  : 
; 540  : 		pVerbDlg->Show();

  01755	8b 4d e8	 mov	 ecx, DWORD PTR _pVerbDlg$152951[ebp]
  01758	e8 00 00 00 00	 call	 ?Show@CVerbDialog@@QAEXXZ ; CVerbDialog::Show
$L152950:

; 542  : }

  0175d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01760	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01767	8b e5		 mov	 esp, ebp
  01769	5d		 pop	 ebp
  0176a	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L159208:
  0012f	8b 45 e0	 mov	 eax, DWORD PTR $T159202[ebp]
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00138	c3		 ret	 0
$L159211:
  00139	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159210
  0013e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnFavorite@CSpellListDlg@@QAEXVCSCI_Spell@@_N@Z ENDP	; CSpellListDlg::OnFavorite
PUBLIC	??0CSCI_Spell@@QAE@ABVObjectID@@@Z		; CSCI_Spell::CSCI_Spell
_TEXT	SEGMENT
_nVerbID$ = 8
_hObject$ = 12
_this$ = -16
_hSpell$ = -4
_nItem$152968 = -8
_nItem$152970 = -12
?HandleVerb@CSpellListDlg@@UAEHHVCSCI_WorldObject@@@Z PROC NEAR ; CSpellListDlg::HandleVerb

; 546  : {

  0176d	55		 push	 ebp
  0176e	8b ec		 mov	 ebp, esp
  01770	83 ec 14	 sub	 esp, 20			; 00000014H
  01773	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 547  : 	CSCI_Spell hSpell = hObject;

  01776	8d 45 0c	 lea	 eax, DWORD PTR _hObject$[ebp]
  01779	50		 push	 eax
  0177a	8d 4d fc	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  0177d	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABVObjectID@@@Z ; CSCI_Spell::CSCI_Spell

; 548  : 
; 549  : 	switch ( nVerbID ) {

  01782	8b 4d 08	 mov	 ecx, DWORD PTR _nVerbID$[ebp]
  01785	89 4d ec	 mov	 DWORD PTR -20+[ebp], ecx
  01788	83 7d ec 3a	 cmp	 DWORD PTR -20+[ebp], 58	; 0000003aH
  0178c	74 7d		 je	 SHORT $L152971
  0178e	81 7d ec 13 27
	00 00		 cmp	 DWORD PTR -20+[ebp], 10003 ; 00002713H
  01795	74 0e		 je	 SHORT $L152967
  01797	81 7d ec 14 27
	00 00		 cmp	 DWORD PTR -20+[ebp], 10004 ; 00002714H
  0179e	74 3e		 je	 SHORT $L152969
  017a0	e9 ba 00 00 00	 jmp	 $L152964
$L152967:

; 551  : 			int nItem = m_pSpellList->FindItem( hSpell );

  017a5	8d 4d fc	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  017a8	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  017ad	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  017b2	50		 push	 eax
  017b3	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  017b6	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  017b9	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  017be	89 45 f8	 mov	 DWORD PTR _nItem$152968[ebp], eax

; 552  : 
; 553  : 			m_pFavoritesList->CopyLine( m_pSpellList, nItem );

  017c1	6a ff		 push	 -1
  017c3	8b 45 f8	 mov	 eax, DWORD PTR _nItem$152968[ebp]
  017c6	50		 push	 eax
  017c7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  017ca	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  017cd	52		 push	 edx
  017ce	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  017d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  017d4	e8 00 00 00 00	 call	 ?CopyLine@CSkinListCtrl@@QAEHPAV1@HH@Z ; CSkinListCtrl::CopyLine

; 555  : 
; 556  : 		break;

  017d9	e9 81 00 00 00	 jmp	 $L152964
$L152969:

; 559  : 			int nItem = m_pFavoritesList->FindItem( hSpell );

  017de	8d 4d fc	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  017e1	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  017e6	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  017eb	50		 push	 eax
  017ec	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  017ef	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  017f2	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  017f7	89 45 f4	 mov	 DWORD PTR _nItem$152970[ebp], eax

; 560  : 			m_pFavoritesList->DeleteItem( nItem );

  017fa	8b 55 f4	 mov	 edx, DWORD PTR _nItem$152970[ebp]
  017fd	52		 push	 edx
  017fe	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01801	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01804	e8 00 00 00 00	 call	 ?DeleteItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::DeleteItem

; 562  : 
; 563  : 		break;

  01809	eb 54		 jmp	 SHORT $L152964
$L152971:

; 566  : 			if ( m_hObject ) {		// delayed action

  0180b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0180e	83 c1 10	 add	 ecx, 16			; 00000010H
  01811	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  01816	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0181b	85 c0		 test	 eax, eax
  0181d	74 1e		 je	 SHORT $L152972

; 567  : 				m_hObject.CallMethod( m_nMethod, hSpell );

  0181f	8d 4d fc	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  01822	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  01827	50		 push	 eax
  01828	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0182b	66 8b 51 12	 mov	 dx, WORD PTR [ecx+18]
  0182f	52		 push	 edx
  01830	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  01833	83 c1 10	 add	 ecx, 16			; 00000010H
  01836	e8 00 00 00 00	 call	 ?CallMethod@CSCI_Object@@QAEXFF@Z ; CSCI_Object::CallMethod

; 568  : 			} else {

  0183b	eb 08		 jmp	 SHORT $L152973
$L152972:

; 569  : 				hSpell.cast();

  0183d	8d 4d fc	 lea	 ecx, DWORD PTR _hSpell$[ebp]
  01840	e8 00 00 00 00	 call	 ?cast@CSCI_Spell@@QAEXXZ ; CSCI_Spell::cast
$L152973:

; 571  : 
; 572  : 			CloseSelf();

  01845	6a 00		 push	 0
  01847	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0184a	81 e9 94 00 00
	00		 sub	 ecx, 148		; 00000094H
  01850	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  01853	8b 90 6c ff ff
	ff		 mov	 edx, DWORD PTR [eax-148]
  01859	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L152964:

; 577  : 
; 578  : 	return TRUE;

  0185f	b8 01 00 00 00	 mov	 eax, 1

; 579  : }

  01864	8b e5		 mov	 esp, ebp
  01866	5d		 pop	 ebp
  01867	c2 08 00	 ret	 8
?HandleVerb@CSpellListDlg@@UAEHHVCSCI_WorldObject@@@Z ENDP ; CSpellListDlg::HandleVerb
_TEXT	ENDS
PUBLIC	?get_pID@CSCI_Spell@@QAEFXZ			; CSCI_Spell::get_pID
PUBLIC	?FindSpellID@CSpellListDlg@@QAE?AVCSCI_Spell@@F@Z ; CSpellListDlg::FindSpellID
PUBLIC	??0CSCI_List@@QAE@XZ				; CSCI_List::CSCI_List
_DATA	SEGMENT
	ORG $+3
$SG152983 DB	'SorcerySpells', 00H
	ORG $+2
$SG152990 DB	'ElementalismSpells', 00H
	ORG $+1
$SG152997 DB	'MysticismSpells', 00H
$SG153004 DB	'ThaumaturgySpells', 00H
	ORG $+2
$SG153011 DB	'NecromancySpells', 00H
_DATA	ENDS
_TEXT	SEGMENT
_pID$ = 12
___$ReturnUdt$ = 8
_this$ = -56
_hList$ = -8
_nSpells$ = -4
_i$ = -12
_hSpell$152987 = -16
_hSpell$152994 = -20
_hSpell$153001 = -24
_hSpell$153008 = -28
_hSpell$153015 = -32
$T159215 = -36
$T159216 = -40
$T159217 = -44
$T159218 = -48
$T159219 = -52
?FindSpellID@CSpellListDlg@@QAE?AVCSCI_Spell@@F@Z PROC NEAR ; CSpellListDlg::FindSpellID

; 582  : {

  0186a	55		 push	 ebp
  0186b	8b ec		 mov	 ebp, esp
  0186d	83 ec 38	 sub	 esp, 56			; 00000038H
  01870	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx

; 583  : 	CSCI_List hList;

  01873	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  01876	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@XZ	; CSCI_List::CSCI_List

; 584  : 	int nSpells;
; 585  : 	int i;
; 586  : 
; 587  : 	hList = GetClassByName ( "SorcerySpells" );

  0187b	68 00 00 00 00	 push	 OFFSET FLAT:$SG152983
  01880	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  01885	83 c4 04	 add	 esp, 4
  01888	50		 push	 eax
  01889	8d 4d dc	 lea	 ecx, DWORD PTR $T159215[ebp]
  0188c	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  01891	66 8b 45 dc	 mov	 ax, WORD PTR $T159215[ebp]
  01895	66 89 45 f8	 mov	 WORD PTR _hList$[ebp], ax

; 588  : 
; 589  : 	nSpells = hList.get_size();

  01899	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  0189c	e8 00 00 00 00	 call	 ?get_size@CSCI_Collection@@QAEFXZ ; CSCI_Collection::get_size
  018a1	0f bf c8	 movsx	 ecx, ax
  018a4	89 4d fc	 mov	 DWORD PTR _nSpells$[ebp], ecx

; 590  : 
; 591  : 	for (i = 0;i < nSpells;i++) {

  018a7	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  018ae	eb 09		 jmp	 SHORT $L152984
$L152985:
  018b0	8b 55 f4	 mov	 edx, DWORD PTR _i$[ebp]
  018b3	83 c2 01	 add	 edx, 1
  018b6	89 55 f4	 mov	 DWORD PTR _i$[ebp], edx
$L152984:
  018b9	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  018bc	3b 45 fc	 cmp	 eax, DWORD PTR _nSpells$[ebp]
  018bf	7d 3f		 jge	 SHORT $L152986

; 592  : 		CSCI_Spell hSpell = hList.at ( i );

  018c1	66 8b 4d f4	 mov	 cx, WORD PTR _i$[ebp]
  018c5	51		 push	 ecx
  018c6	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  018c9	e8 00 00 00 00	 call	 ?at@CSCI_List@@QAEFF@Z	; CSCI_List::at
  018ce	50		 push	 eax
  018cf	8d 4d f0	 lea	 ecx, DWORD PTR _hSpell$152987[ebp]
  018d2	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 593  : 
; 594  : 		if ( hSpell.get_pID() == pID )

  018d7	8d 4d f0	 lea	 ecx, DWORD PTR _hSpell$152987[ebp]
  018da	e8 00 00 00 00	 call	 ?get_pID@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pID
  018df	0f bf d0	 movsx	 edx, ax
  018e2	0f bf 45 0c	 movsx	 eax, WORD PTR _pID$[ebp]
  018e6	3b d0		 cmp	 edx, eax
  018e8	75 14		 jne	 SHORT $L152988

; 595  : 			return hSpell;

  018ea	8d 4d f0	 lea	 ecx, DWORD PTR _hSpell$152987[ebp]
  018ed	51		 push	 ecx
  018ee	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  018f1	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell
  018f6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  018f9	e9 20 02 00 00	 jmp	 $L152978
$L152988:

; 596  : 	}

  018fe	eb b0		 jmp	 SHORT $L152985
$L152986:

; 597  : 		
; 598  : 	hList = GetClassByName ( "ElementalismSpells" );

  01900	68 00 00 00 00	 push	 OFFSET FLAT:$SG152990
  01905	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  0190a	83 c4 04	 add	 esp, 4
  0190d	50		 push	 eax
  0190e	8d 4d d8	 lea	 ecx, DWORD PTR $T159216[ebp]
  01911	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  01916	66 8b 55 d8	 mov	 dx, WORD PTR $T159216[ebp]
  0191a	66 89 55 f8	 mov	 WORD PTR _hList$[ebp], dx

; 599  : 
; 600  : 	nSpells = hList.get_size();

  0191e	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  01921	e8 00 00 00 00	 call	 ?get_size@CSCI_Collection@@QAEFXZ ; CSCI_Collection::get_size
  01926	0f bf c0	 movsx	 eax, ax
  01929	89 45 fc	 mov	 DWORD PTR _nSpells$[ebp], eax

; 601  : 
; 602  : 	for (i = 0;i < nSpells;i++) {

  0192c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  01933	eb 09		 jmp	 SHORT $L152991
$L152992:
  01935	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  01938	83 c1 01	 add	 ecx, 1
  0193b	89 4d f4	 mov	 DWORD PTR _i$[ebp], ecx
$L152991:
  0193e	8b 55 f4	 mov	 edx, DWORD PTR _i$[ebp]
  01941	3b 55 fc	 cmp	 edx, DWORD PTR _nSpells$[ebp]
  01944	7d 3f		 jge	 SHORT $L152993

; 603  : 		CSCI_Spell hSpell = hList.at ( i );

  01946	66 8b 45 f4	 mov	 ax, WORD PTR _i$[ebp]
  0194a	50		 push	 eax
  0194b	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  0194e	e8 00 00 00 00	 call	 ?at@CSCI_List@@QAEFF@Z	; CSCI_List::at
  01953	50		 push	 eax
  01954	8d 4d ec	 lea	 ecx, DWORD PTR _hSpell$152994[ebp]
  01957	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 604  : 
; 605  : 		if ( hSpell.get_pID() == pID )

  0195c	8d 4d ec	 lea	 ecx, DWORD PTR _hSpell$152994[ebp]
  0195f	e8 00 00 00 00	 call	 ?get_pID@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pID
  01964	0f bf c8	 movsx	 ecx, ax
  01967	0f bf 55 0c	 movsx	 edx, WORD PTR _pID$[ebp]
  0196b	3b ca		 cmp	 ecx, edx
  0196d	75 14		 jne	 SHORT $L152995

; 606  : 			return hSpell;

  0196f	8d 45 ec	 lea	 eax, DWORD PTR _hSpell$152994[ebp]
  01972	50		 push	 eax
  01973	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01976	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell
  0197b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0197e	e9 9b 01 00 00	 jmp	 $L152978
$L152995:

; 607  : 	}

  01983	eb b0		 jmp	 SHORT $L152992
$L152993:

; 608  : 		
; 609  : 	hList = GetClassByName ( "MysticismSpells" );

  01985	68 00 00 00 00	 push	 OFFSET FLAT:$SG152997
  0198a	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  0198f	83 c4 04	 add	 esp, 4
  01992	50		 push	 eax
  01993	8d 4d d4	 lea	 ecx, DWORD PTR $T159217[ebp]
  01996	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  0199b	66 8b 4d d4	 mov	 cx, WORD PTR $T159217[ebp]
  0199f	66 89 4d f8	 mov	 WORD PTR _hList$[ebp], cx

; 610  : 
; 611  : 	nSpells = hList.get_size();

  019a3	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  019a6	e8 00 00 00 00	 call	 ?get_size@CSCI_Collection@@QAEFXZ ; CSCI_Collection::get_size
  019ab	0f bf d0	 movsx	 edx, ax
  019ae	89 55 fc	 mov	 DWORD PTR _nSpells$[ebp], edx

; 612  : 
; 613  : 	for (i = 0;i < nSpells;i++) {

  019b1	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  019b8	eb 09		 jmp	 SHORT $L152998
$L152999:
  019ba	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  019bd	83 c0 01	 add	 eax, 1
  019c0	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
$L152998:
  019c3	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  019c6	3b 4d fc	 cmp	 ecx, DWORD PTR _nSpells$[ebp]
  019c9	7d 3f		 jge	 SHORT $L153000

; 614  : 		CSCI_Spell hSpell = hList.at ( i );

  019cb	66 8b 55 f4	 mov	 dx, WORD PTR _i$[ebp]
  019cf	52		 push	 edx
  019d0	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  019d3	e8 00 00 00 00	 call	 ?at@CSCI_List@@QAEFF@Z	; CSCI_List::at
  019d8	50		 push	 eax
  019d9	8d 4d e8	 lea	 ecx, DWORD PTR _hSpell$153001[ebp]
  019dc	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 615  : 
; 616  : 		if ( hSpell.get_pID() == pID )

  019e1	8d 4d e8	 lea	 ecx, DWORD PTR _hSpell$153001[ebp]
  019e4	e8 00 00 00 00	 call	 ?get_pID@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pID
  019e9	0f bf c0	 movsx	 eax, ax
  019ec	0f bf 4d 0c	 movsx	 ecx, WORD PTR _pID$[ebp]
  019f0	3b c1		 cmp	 eax, ecx
  019f2	75 14		 jne	 SHORT $L153002

; 617  : 			return hSpell;

  019f4	8d 55 e8	 lea	 edx, DWORD PTR _hSpell$153001[ebp]
  019f7	52		 push	 edx
  019f8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  019fb	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell
  01a00	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  01a03	e9 16 01 00 00	 jmp	 $L152978
$L153002:

; 618  : 	}

  01a08	eb b0		 jmp	 SHORT $L152999
$L153000:

; 619  : 		
; 620  : 	hList = GetClassByName ( "ThaumaturgySpells" );

  01a0a	68 00 00 00 00	 push	 OFFSET FLAT:$SG153004
  01a0f	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  01a14	83 c4 04	 add	 esp, 4
  01a17	50		 push	 eax
  01a18	8d 4d d0	 lea	 ecx, DWORD PTR $T159218[ebp]
  01a1b	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  01a20	66 8b 45 d0	 mov	 ax, WORD PTR $T159218[ebp]
  01a24	66 89 45 f8	 mov	 WORD PTR _hList$[ebp], ax

; 621  : 
; 622  : 	nSpells = hList.get_size();

  01a28	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  01a2b	e8 00 00 00 00	 call	 ?get_size@CSCI_Collection@@QAEFXZ ; CSCI_Collection::get_size
  01a30	0f bf c8	 movsx	 ecx, ax
  01a33	89 4d fc	 mov	 DWORD PTR _nSpells$[ebp], ecx

; 623  : 
; 624  : 	for (i = 0;i < nSpells;i++) {

  01a36	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  01a3d	eb 09		 jmp	 SHORT $L153005
$L153006:
  01a3f	8b 55 f4	 mov	 edx, DWORD PTR _i$[ebp]
  01a42	83 c2 01	 add	 edx, 1
  01a45	89 55 f4	 mov	 DWORD PTR _i$[ebp], edx
$L153005:
  01a48	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  01a4b	3b 45 fc	 cmp	 eax, DWORD PTR _nSpells$[ebp]
  01a4e	7d 3f		 jge	 SHORT $L153007

; 625  : 		CSCI_Spell hSpell = hList.at ( i );

  01a50	66 8b 4d f4	 mov	 cx, WORD PTR _i$[ebp]
  01a54	51		 push	 ecx
  01a55	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  01a58	e8 00 00 00 00	 call	 ?at@CSCI_List@@QAEFF@Z	; CSCI_List::at
  01a5d	50		 push	 eax
  01a5e	8d 4d e4	 lea	 ecx, DWORD PTR _hSpell$153008[ebp]
  01a61	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 626  : 
; 627  : 		if ( hSpell.get_pID() == pID )

  01a66	8d 4d e4	 lea	 ecx, DWORD PTR _hSpell$153008[ebp]
  01a69	e8 00 00 00 00	 call	 ?get_pID@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pID
  01a6e	0f bf d0	 movsx	 edx, ax
  01a71	0f bf 45 0c	 movsx	 eax, WORD PTR _pID$[ebp]
  01a75	3b d0		 cmp	 edx, eax
  01a77	75 14		 jne	 SHORT $L153009

; 628  : 			return hSpell;

  01a79	8d 4d e4	 lea	 ecx, DWORD PTR _hSpell$153008[ebp]
  01a7c	51		 push	 ecx
  01a7d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01a80	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell
  01a85	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  01a88	e9 91 00 00 00	 jmp	 $L152978
$L153009:

; 629  : 	}

  01a8d	eb b0		 jmp	 SHORT $L153006
$L153007:

; 630  : 		
; 631  : 	hList = GetClassByName ( "NecromancySpells" );

  01a8f	68 00 00 00 00	 push	 OFFSET FLAT:$SG153011
  01a94	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  01a99	83 c4 04	 add	 esp, 4
  01a9c	50		 push	 eax
  01a9d	8d 4d cc	 lea	 ecx, DWORD PTR $T159219[ebp]
  01aa0	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List
  01aa5	66 8b 55 cc	 mov	 dx, WORD PTR $T159219[ebp]
  01aa9	66 89 55 f8	 mov	 WORD PTR _hList$[ebp], dx

; 632  : 
; 633  : 	nSpells = hList.get_size();

  01aad	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  01ab0	e8 00 00 00 00	 call	 ?get_size@CSCI_Collection@@QAEFXZ ; CSCI_Collection::get_size
  01ab5	0f bf c0	 movsx	 eax, ax
  01ab8	89 45 fc	 mov	 DWORD PTR _nSpells$[ebp], eax

; 634  : 
; 635  : 	for (i = 0;i < nSpells;i++) {

  01abb	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  01ac2	eb 09		 jmp	 SHORT $L153012
$L153013:
  01ac4	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  01ac7	83 c1 01	 add	 ecx, 1
  01aca	89 4d f4	 mov	 DWORD PTR _i$[ebp], ecx
$L153012:
  01acd	8b 55 f4	 mov	 edx, DWORD PTR _i$[ebp]
  01ad0	3b 55 fc	 cmp	 edx, DWORD PTR _nSpells$[ebp]
  01ad3	7d 3c		 jge	 SHORT $L153014

; 636  : 		CSCI_Spell hSpell = hList.at ( i );

  01ad5	66 8b 45 f4	 mov	 ax, WORD PTR _i$[ebp]
  01ad9	50		 push	 eax
  01ada	8d 4d f8	 lea	 ecx, DWORD PTR _hList$[ebp]
  01add	e8 00 00 00 00	 call	 ?at@CSCI_List@@QAEFF@Z	; CSCI_List::at
  01ae2	50		 push	 eax
  01ae3	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$153015[ebp]
  01ae6	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 637  : 
; 638  : 		if ( hSpell.get_pID() == pID )

  01aeb	8d 4d e0	 lea	 ecx, DWORD PTR _hSpell$153015[ebp]
  01aee	e8 00 00 00 00	 call	 ?get_pID@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pID
  01af3	0f bf c8	 movsx	 ecx, ax
  01af6	0f bf 55 0c	 movsx	 edx, WORD PTR _pID$[ebp]
  01afa	3b ca		 cmp	 ecx, edx
  01afc	75 11		 jne	 SHORT $L153016

; 639  : 			return hSpell;

  01afe	8d 45 e0	 lea	 eax, DWORD PTR _hSpell$153015[ebp]
  01b01	50		 push	 eax
  01b02	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01b05	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell
  01b0a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  01b0d	eb 0f		 jmp	 SHORT $L152978
$L153016:

; 640  : 	}

  01b0f	eb b3		 jmp	 SHORT $L153013
$L153014:

; 641  : 		
; 642  : 	return 0;

  01b11	6a 00		 push	 0
  01b13	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  01b16	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell
  01b1b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L152978:

; 643  : }

  01b1e	8b e5		 mov	 esp, ebp
  01b20	5d		 pop	 ebp
  01b21	c2 08 00	 ret	 8
?FindSpellID@CSpellListDlg@@QAE?AVCSCI_Spell@@F@Z ENDP	; CSpellListDlg::FindSpellID
_TEXT	ENDS
PUBLIC	??DTextID@@QAEPADXZ				; TextID::operator*
EXTRN	?g_pCurrentServer@@3PAUServerInfo@@A:DWORD	; g_pCurrentServer
EXTRN	__imp__unlink:NEAR
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:NEAR
EXTRN	??0CFile@@QAE@XZ:NEAR				; CFile::CFile
EXTRN	?Open@CFile@@UAEHPBDIPAVCFileException@@@Z:NEAR	; CFile::Open
EXTRN	?Read@CFile@@UAEIPAXI@Z:NEAR			; CFile::Read
EXTRN	?g_sConfigDir@@3PADA:BYTE			; g_sConfigDir
EXTRN	?Close@CFile@@UAEXXZ:NEAR			; CFile::Close
EXTRN	??1CFile@@UAE@XZ:NEAR				; CFile::~CFile
EXTRN	?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE ; g_sCharacterName
_DATA	SEGMENT
	ORG $+3
$SG153021 DB	'%s\realm.spells.%s.%s', 00H
	ORG $+2
$SG153026 DB	'FavoriteSpells', 00H
	ORG $+1
$SG153037 DB	'FavoriteSpells', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T159226 DD	019930520H
	DD	02H
	DD	FLAT:$T159228
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159228 DD	0ffffffffH
	DD	FLAT:$L159223
	DD	00H
	DD	FLAT:$L159224
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -76
_sFilename$ = -16
_file$ = -32
_nSize$153024 = -36
_hList$153025 = -40
_i$153027 = -44
_pID$153031 = -48
_hSpell$153032 = -52
_hList$153036 = -56
_i$153038 = -60
_hSpell$153042 = -64
$T159221 = -68
$T159222 = -72
__$EHRec$ = -12
?OpenFavoriteSpells@CSpellListDlg@@QAEXXZ PROC NEAR	; CSpellListDlg::OpenFavoriteSpells

; 645  : void CSpellListDlg::OpenFavoriteSpells () {

  01b24	55		 push	 ebp
  01b25	8b ec		 mov	 ebp, esp
  01b27	6a ff		 push	 -1
  01b29	68 00 00 00 00	 push	 $L159227
  01b2e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01b34	50		 push	 eax
  01b35	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01b3c	83 ec 40	 sub	 esp, 64			; 00000040H
  01b3f	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 646  : 	CString sFilename;

  01b42	8d 4d f0	 lea	 ecx, DWORD PTR _sFilename$[ebp]
  01b45	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  01b4a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 647  : 
; 648  : 	sFilename.Format( "%s\\realm.spells.%s.%s", g_sConfigDir, *g_pCurrentServer->m_hName, g_sCharacterName.c_str() );

  01b51	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_sCharacterName@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
  01b56	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  01b5c	50		 push	 eax
  01b5d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pCurrentServer@@3PAUServerInfo@@A ; g_pCurrentServer
  01b63	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
  01b68	50		 push	 eax
  01b69	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  01b6e	68 00 00 00 00	 push	 OFFSET FLAT:$SG153021
  01b73	8d 45 f0	 lea	 eax, DWORD PTR _sFilename$[ebp]
  01b76	50		 push	 eax
  01b77	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  01b7c	83 c4 14	 add	 esp, 20			; 00000014H

; 649  : 
; 650  : 	CFile file;

  01b7f	8d 4d e0	 lea	 ecx, DWORD PTR _file$[ebp]
  01b82	e8 00 00 00 00	 call	 ??0CFile@@QAE@XZ	; CFile::CFile
  01b87	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 651  : 
; 652  : 	if ( file.Open( sFilename, CFile::modeRead ) ) {

  01b8b	6a 00		 push	 0
  01b8d	6a 00		 push	 0
  01b8f	8d 4d f0	 lea	 ecx, DWORD PTR _sFilename$[ebp]
  01b92	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01b97	50		 push	 eax
  01b98	8d 4d e0	 lea	 ecx, DWORD PTR _file$[ebp]
  01b9b	e8 00 00 00 00	 call	 ?Open@CFile@@UAEHPBDIPAVCFileException@@@Z ; CFile::Open
  01ba0	85 c0		 test	 eax, eax
  01ba2	0f 84 ad 00 00
	00		 je	 $L153023

; 653  : 		Property nSize;
; 654  : 
; 655  : 		CSCI_List hList = GetClassByName ( "FavoriteSpells" );

  01ba8	68 00 00 00 00	 push	 OFFSET FLAT:$SG153026
  01bad	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  01bb2	83 c4 04	 add	 esp, 4
  01bb5	50		 push	 eax
  01bb6	8d 4d d8	 lea	 ecx, DWORD PTR _hList$153025[ebp]
  01bb9	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List

; 656  : 
; 657  : 		file.Read( &nSize, 2 );

  01bbe	6a 02		 push	 2
  01bc0	8d 4d dc	 lea	 ecx, DWORD PTR _nSize$153024[ebp]
  01bc3	51		 push	 ecx
  01bc4	8d 4d e0	 lea	 ecx, DWORD PTR _file$[ebp]
  01bc7	e8 00 00 00 00	 call	 ?Read@CFile@@UAEIPAXI@Z	; CFile::Read

; 658  : 
; 659  : 		for (int i = 0;i < nSize;i++) {

  01bcc	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _i$153027[ebp], 0
  01bd3	eb 09		 jmp	 SHORT $L153028
$L153029:
  01bd5	8b 55 d4	 mov	 edx, DWORD PTR _i$153027[ebp]
  01bd8	83 c2 01	 add	 edx, 1
  01bdb	89 55 d4	 mov	 DWORD PTR _i$153027[ebp], edx
$L153028:
  01bde	0f bf 45 dc	 movsx	 eax, WORD PTR _nSize$153024[ebp]
  01be2	39 45 d4	 cmp	 DWORD PTR _i$153027[ebp], eax
  01be5	7d 4c		 jge	 SHORT $L153030

; 660  : 			Property pID;
; 661  : 
; 662  : 			file.Read( &pID, 2 );

  01be7	6a 02		 push	 2
  01be9	8d 4d d0	 lea	 ecx, DWORD PTR _pID$153031[ebp]
  01bec	51		 push	 ecx
  01bed	8d 4d e0	 lea	 ecx, DWORD PTR _file$[ebp]
  01bf0	e8 00 00 00 00	 call	 ?Read@CFile@@UAEIPAXI@Z	; CFile::Read

; 663  : 
; 664  : 			CSCI_Spell hSpell = FindSpellID( pID );

  01bf5	66 8b 55 d0	 mov	 dx, WORD PTR _pID$153031[ebp]
  01bf9	52		 push	 edx
  01bfa	8d 45 bc	 lea	 eax, DWORD PTR $T159221[ebp]
  01bfd	50		 push	 eax
  01bfe	8b 4d b4	 mov	 ecx, DWORD PTR _this$[ebp]
  01c01	e8 00 00 00 00	 call	 ?FindSpellID@CSpellListDlg@@QAE?AVCSCI_Spell@@F@Z ; CSpellListDlg::FindSpellID
  01c06	50		 push	 eax
  01c07	8d 4d cc	 lea	 ecx, DWORD PTR _hSpell$153032[ebp]
  01c0a	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell

; 665  : 
; 666  : 			if ( hSpell )

  01c0f	8d 4d cc	 lea	 ecx, DWORD PTR _hSpell$153032[ebp]
  01c12	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  01c17	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  01c1c	85 c0		 test	 eax, eax
  01c1e	74 11		 je	 SHORT $L153034

; 667  : 				hList.addToEnd( hSpell );

  01c20	8d 4d cc	 lea	 ecx, DWORD PTR _hSpell$153032[ebp]
  01c23	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  01c28	50		 push	 eax
  01c29	8d 4d d8	 lea	 ecx, DWORD PTR _hList$153025[ebp]
  01c2c	e8 00 00 00 00	 call	 ?addToEnd@CSCI_List@@QAEXF@Z ; CSCI_List::addToEnd
$L153034:

; 668  : 		}

  01c31	eb a2		 jmp	 SHORT $L153029
$L153030:

; 669  : 
; 670  : 		file.Close();

  01c33	8d 4d e0	 lea	 ecx, DWORD PTR _file$[ebp]
  01c36	e8 00 00 00 00	 call	 ?Close@CFile@@UAEXXZ	; CFile::Close

; 671  : 
; 672  : 		unlink( sFilename );

  01c3b	8d 4d f0	 lea	 ecx, DWORD PTR _sFilename$[ebp]
  01c3e	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01c43	50		 push	 eax
  01c44	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__unlink
  01c4a	83 c4 04	 add	 esp, 4

; 673  : 
; 674  : 		SaveFavoriteSpells();

  01c4d	8b 4d b4	 mov	 ecx, DWORD PTR _this$[ebp]
  01c50	e8 00 00 00 00	 call	 ?SaveFavoriteSpells@CSpellListDlg@@QAEXXZ ; CSpellListDlg::SaveFavoriteSpells
$L153023:

; 676  : 
; 677  : 	if ( g_pSpellList ) {

  01c55	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSpellList@@3PAFA, 0 ; g_pSpellList
  01c5c	74 7d		 je	 SHORT $L153041

; 678  : 		CSCI_List hList = GetClassByName ( "FavoriteSpells" );

  01c5e	68 00 00 00 00	 push	 OFFSET FLAT:$SG153037
  01c63	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  01c68	83 c4 04	 add	 esp, 4
  01c6b	50		 push	 eax
  01c6c	8d 4d c8	 lea	 ecx, DWORD PTR _hList$153036[ebp]
  01c6f	e8 00 00 00 00	 call	 ??0CSCI_List@@QAE@G@Z	; CSCI_List::CSCI_List

; 679  : 
; 680  : 		for (int i = 1;i <= g_pSpellList[0];i++) {

  01c74	c7 45 c4 01 00
	00 00		 mov	 DWORD PTR _i$153038[ebp], 1
  01c7b	eb 09		 jmp	 SHORT $L153039
$L153040:
  01c7d	8b 4d c4	 mov	 ecx, DWORD PTR _i$153038[ebp]
  01c80	83 c1 01	 add	 ecx, 1
  01c83	89 4d c4	 mov	 DWORD PTR _i$153038[ebp], ecx
$L153039:
  01c86	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSpellList@@3PAFA ; g_pSpellList
  01c8c	0f bf 02	 movsx	 eax, WORD PTR [edx]
  01c8f	39 45 c4	 cmp	 DWORD PTR _i$153038[ebp], eax
  01c92	7f 47		 jg	 SHORT $L153041

; 681  : 			CSCI_Spell hSpell = FindSpellID( g_pSpellList[ i ] );

  01c94	8b 4d c4	 mov	 ecx, DWORD PTR _i$153038[ebp]
  01c97	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSpellList@@3PAFA ; g_pSpellList
  01c9d	66 8b 04 4a	 mov	 ax, WORD PTR [edx+ecx*2]
  01ca1	50		 push	 eax
  01ca2	8d 4d b8	 lea	 ecx, DWORD PTR $T159222[ebp]
  01ca5	51		 push	 ecx
  01ca6	8b 4d b4	 mov	 ecx, DWORD PTR _this$[ebp]
  01ca9	e8 00 00 00 00	 call	 ?FindSpellID@CSpellListDlg@@QAE?AVCSCI_Spell@@F@Z ; CSpellListDlg::FindSpellID
  01cae	50		 push	 eax
  01caf	8d 4d c0	 lea	 ecx, DWORD PTR _hSpell$153042[ebp]
  01cb2	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell

; 682  : 
; 683  : 			if ( hSpell )

  01cb7	8d 4d c0	 lea	 ecx, DWORD PTR _hSpell$153042[ebp]
  01cba	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  01cbf	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  01cc4	85 c0		 test	 eax, eax
  01cc6	74 11		 je	 SHORT $L153044

; 684  : 				hList.addToEnd( hSpell );

  01cc8	8d 4d c0	 lea	 ecx, DWORD PTR _hSpell$153042[ebp]
  01ccb	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  01cd0	50		 push	 eax
  01cd1	8d 4d c8	 lea	 ecx, DWORD PTR _hList$153036[ebp]
  01cd4	e8 00 00 00 00	 call	 ?addToEnd@CSCI_List@@QAEXF@Z ; CSCI_List::addToEnd
$L153044:

; 685  : 		}

  01cd9	eb a2		 jmp	 SHORT $L153040
$L153041:

; 688  : }

  01cdb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01cdf	8d 4d e0	 lea	 ecx, DWORD PTR _file$[ebp]
  01ce2	e8 00 00 00 00	 call	 ??1CFile@@UAE@XZ	; CFile::~CFile
  01ce7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01cee	8d 4d f0	 lea	 ecx, DWORD PTR _sFilename$[ebp]
  01cf1	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01cf6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01cf9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01d00	8b e5		 mov	 esp, ebp
  01d02	5d		 pop	 ebp
  01d03	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L159223:
  00143	8d 4d f0	 lea	 ecx, DWORD PTR _sFilename$[ebp]
  00146	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0014b	c3		 ret	 0
$L159224:
  0014c	8d 4d e0	 lea	 ecx, DWORD PTR _file$[ebp]
  0014f	e8 00 00 00 00	 call	 ??1CFile@@UAE@XZ	; CFile::~CFile
  00154	c3		 ret	 0
$L159227:
  00155	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159226
  0015a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OpenFavoriteSpells@CSpellListDlg@@QAEXXZ ENDP		; CSpellListDlg::OpenFavoriteSpells
PUBLIC	?PutLong@CPackedData@@QAEXH@Z			; CPackedData::PutLong
PUBLIC	?PutArray@CPackedData@@QAEXPAXH@Z		; CPackedData::PutArray
EXTRN	??0CPackedData@@QAE@XZ:NEAR			; CPackedData::CPackedData
EXTRN	??1CPackedData@@UAE@XZ:NEAR			; CPackedData::~CPackedData
EXTRN	__imp__malloc:NEAR
EXTRN	?CNetSend@@YAHPADZZ:NEAR			; CNetSend
_DATA	SEGMENT
	ORG $+1
$SG153059 DB	'tp', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T159233 DD	019930520H
	DD	01H
	DD	FLAT:$T159235
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159235 DD	0ffffffffH
	DD	FLAT:$L159231
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -60
_nSize$ = -16
_i$153053 = -48
_hSpell$153057 = -52
_data$153058 = -44
$T159230 = -56
__$EHRec$ = -12
?SaveFavoriteSpells@CSpellListDlg@@QAEXXZ PROC NEAR	; CSpellListDlg::SaveFavoriteSpells

; 689  : void CSpellListDlg::SaveFavoriteSpells () {

  01d04	55		 push	 ebp
  01d05	8b ec		 mov	 ebp, esp
  01d07	6a ff		 push	 -1
  01d09	68 00 00 00 00	 push	 $L159234
  01d0e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01d14	50		 push	 eax
  01d15	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01d1c	83 ec 30	 sub	 esp, 48			; 00000030H
  01d1f	89 4d c4	 mov	 DWORD PTR _this$[ebp], ecx

; 690  : 	Property nSize = m_pFavoritesList->GetItemCount();

  01d22	8b 45 c4	 mov	 eax, DWORD PTR _this$[ebp]
  01d25	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  01d2b	e8 00 00 00 00	 call	 ?GetItemCount@CListCtrl@@QBEHXZ ; CListCtrl::GetItemCount
  01d30	66 89 45 f0	 mov	 WORD PTR _nSize$[ebp], ax

; 691  : 
; 692  : 	if ( nSize ) {

  01d34	0f bf 4d f0	 movsx	 ecx, WORD PTR _nSize$[ebp]
  01d38	85 c9		 test	 ecx, ecx
  01d3a	0f 84 f6 00 00
	00		 je	 $L153049

; 693  : 		if ( g_pSpellList ) {

  01d40	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSpellList@@3PAFA, 0 ; g_pSpellList
  01d47	74 1f		 je	 SHORT $L153050

; 694  : 			delete g_pSpellList;

  01d49	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSpellList@@3PAFA ; g_pSpellList
  01d4f	89 55 c8	 mov	 DWORD PTR $T159230[ebp], edx
  01d52	8b 45 c8	 mov	 eax, DWORD PTR $T159230[ebp]
  01d55	50		 push	 eax
  01d56	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  01d5b	83 c4 04	 add	 esp, 4

; 695  : 			g_pSpellList = NULL;

  01d5e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSpellList@@3PAFA, 0 ; g_pSpellList
$L153050:

; 697  : 
; 698  : 		g_pSpellList = (Property*) malloc( nSize * 2 + 2 );

  01d68	0f bf 4d f0	 movsx	 ecx, WORD PTR _nSize$[ebp]
  01d6c	8d 54 09 02	 lea	 edx, DWORD PTR [ecx+ecx+2]
  01d70	52		 push	 edx
  01d71	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  01d77	83 c4 04	 add	 esp, 4
  01d7a	a3 00 00 00 00	 mov	 DWORD PTR ?g_pSpellList@@3PAFA, eax ; g_pSpellList

; 699  : 
; 700  : 		g_pSpellList[0] = nSize;

  01d7f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pSpellList@@3PAFA ; g_pSpellList
  01d84	66 8b 4d f0	 mov	 cx, WORD PTR _nSize$[ebp]
  01d88	66 89 08	 mov	 WORD PTR [eax], cx

; 701  : 
; 702  : 		for (int i = 0;i < nSize;i++) {

  01d8b	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _i$153053[ebp], 0
  01d92	eb 09		 jmp	 SHORT $L153054
$L153055:
  01d94	8b 55 d0	 mov	 edx, DWORD PTR _i$153053[ebp]
  01d97	83 c2 01	 add	 edx, 1
  01d9a	89 55 d0	 mov	 DWORD PTR _i$153053[ebp], edx
$L153054:
  01d9d	0f bf 45 f0	 movsx	 eax, WORD PTR _nSize$[ebp]
  01da1	39 45 d0	 cmp	 DWORD PTR _i$153053[ebp], eax
  01da4	7d 33		 jge	 SHORT $L153056

; 703  : 			CSCI_Spell hSpell = m_pFavoritesList->GetItemData( i );

  01da6	8b 4d d0	 mov	 ecx, DWORD PTR _i$153053[ebp]
  01da9	51		 push	 ecx
  01daa	8b 55 c4	 mov	 edx, DWORD PTR _this$[ebp]
  01dad	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  01db3	e8 00 00 00 00	 call	 ?GetItemData@CListCtrl@@QBEKH@Z ; CListCtrl::GetItemData
  01db8	50		 push	 eax
  01db9	8d 4d cc	 lea	 ecx, DWORD PTR _hSpell$153057[ebp]
  01dbc	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@G@Z	; CSCI_Spell::CSCI_Spell

; 704  : 
; 705  : 			g_pSpellList[ i + 1 ] = hSpell.get_pID();

  01dc1	8d 4d cc	 lea	 ecx, DWORD PTR _hSpell$153057[ebp]
  01dc4	e8 00 00 00 00	 call	 ?get_pID@CSCI_Spell@@QAEFXZ ; CSCI_Spell::get_pID
  01dc9	8b 4d d0	 mov	 ecx, DWORD PTR _i$153053[ebp]
  01dcc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSpellList@@3PAFA ; g_pSpellList
  01dd2	66 89 44 4a 02	 mov	 WORD PTR [edx+ecx*2+2], ax

; 706  : 		}

  01dd7	eb bb		 jmp	 SHORT $L153055
$L153056:

; 707  : 
; 708  : 		CPackedData data;

  01dd9	8d 4d d4	 lea	 ecx, DWORD PTR _data$153058[ebp]
  01ddc	e8 00 00 00 00	 call	 ??0CPackedData@@QAE@XZ	; CPackedData::CPackedData
  01de1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 709  : 
; 710  : 		data.PutLong( ( nSize * 2 + 2 ) );

  01de8	0f bf 45 f0	 movsx	 eax, WORD PTR _nSize$[ebp]
  01dec	8d 4c 00 02	 lea	 ecx, DWORD PTR [eax+eax+2]
  01df0	51		 push	 ecx
  01df1	8d 4d d4	 lea	 ecx, DWORD PTR _data$153058[ebp]
  01df4	e8 00 00 00 00	 call	 ?PutLong@CPackedData@@QAEXH@Z ; CPackedData::PutLong

; 711  : 		data.PutArray( g_pSpellList, ( nSize * 2 + 2 ) );

  01df9	0f bf 55 f0	 movsx	 edx, WORD PTR _nSize$[ebp]
  01dfd	8d 44 12 02	 lea	 eax, DWORD PTR [edx+edx+2]
  01e01	50		 push	 eax
  01e02	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSpellList@@3PAFA ; g_pSpellList
  01e08	51		 push	 ecx
  01e09	8d 4d d4	 lea	 ecx, DWORD PTR _data$153058[ebp]
  01e0c	e8 00 00 00 00	 call	 ?PutArray@CPackedData@@QAEXPAXH@Z ; CPackedData::PutArray

; 712  : 
; 713  : 		CNetSend ( "tp", REALM_WRITE_SPELLS, &data );

  01e11	8d 55 d4	 lea	 edx, DWORD PTR _data$153058[ebp]
  01e14	52		 push	 edx
  01e15	68 91 00 00 00	 push	 145			; 00000091H
  01e1a	68 00 00 00 00	 push	 OFFSET FLAT:$SG153059
  01e1f	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  01e24	83 c4 0c	 add	 esp, 12			; 0000000cH

; 714  : 	}

  01e27	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01e2e	8d 4d d4	 lea	 ecx, DWORD PTR _data$153058[ebp]
  01e31	e8 00 00 00 00	 call	 ??1CPackedData@@UAE@XZ	; CPackedData::~CPackedData
$L153049:

; 715  : }

  01e36	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01e39	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01e40	8b e5		 mov	 esp, ebp
  01e42	5d		 pop	 ebp
  01e43	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L159231:
  0015f	8d 4d d4	 lea	 ecx, DWORD PTR _data$153058[ebp]
  00162	e8 00 00 00 00	 call	 ??1CPackedData@@UAE@XZ	; CPackedData::~CPackedData
  00167	c3		 ret	 0
$L159234:
  00168	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159233
  0016d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SaveFavoriteSpells@CSpellListDlg@@QAEXXZ ENDP		; CSpellListDlg::SaveFavoriteSpells
PUBLIC	?OnActivate@CTabBtn@@UAEXFF@Z			; CTabBtn::OnActivate
PUBLIC	?ShowNormal@CTabBtn@@UAEXXZ			; CTabBtn::ShowNormal
PUBLIC	?ShowHighlighted@CTabBtn@@UAEXXZ		; CTabBtn::ShowHighlighted
PUBLIC	??_7CTabBtn@@6B@				; CTabBtn::`vftable'
PUBLIC	??_GCTabBtn@@UAEPAXI@Z				; CTabBtn::`scalar deleting destructor'
PUBLIC	??_ECTabBtn@@UAEPAXI@Z				; CTabBtn::`vector deleting destructor'
EXTRN	??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinBtn::CSkinBtn
EXTRN	?OnMouseDown@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseDown
EXTRN	?OnMouseUp@CSkinBtn@@UAEXHFF@Z:NEAR		; CSkinBtn::OnMouseUp
EXTRN	?Refresh@CSkinBtn@@UAEXXZ:NEAR			; CSkinBtn::Refresh
;	COMDAT ??_7CTabBtn@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\SpellDlg.cpp
CONST	SEGMENT
??_7CTabBtn@@6B@ DD FLAT:??_ECTabBtn@@UAEPAXI@Z		; CTabBtn::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinBtn@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CTabBtn@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CTabBtn@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinBtn@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CTabBtn@@UAEXFF@Z
CONST	ENDS
xdata$x	SEGMENT
$T159242 DD	019930520H
	DD	01H
	DD	FLAT:$T159244
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159244 DD	0ffffffffH
	DD	FLAT:$L159238
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_nID$ = 20
_this$ = -20
$T159237 = -16
__$EHRec$ = -12
??0CTabBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z PROC NEAR	; CTabBtn::CTabBtn

; 721  : {

  01e44	55		 push	 ebp
  01e45	8b ec		 mov	 ebp, esp
  01e47	6a ff		 push	 -1
  01e49	68 00 00 00 00	 push	 $L159243
  01e4e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01e54	50		 push	 eax
  01e55	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01e5c	83 ec 10	 sub	 esp, 16			; 00000010H
  01e5f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  01e62	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01e69	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  01e6c	50		 push	 eax
  01e6d	83 ec 08	 sub	 esp, 8
  01e70	8b cc		 mov	 ecx, esp
  01e72	89 65 f0	 mov	 DWORD PTR $T159237[ebp], esp
  01e75	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01e78	52		 push	 edx
  01e79	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01e7e	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  01e81	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  01e84	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  01e89	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  01e8c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01e8f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CTabBtn@@6B@ ; CTabBtn::`vftable'

; 722  : 	m_nID = nID;

  01e95	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  01e98	8b 55 14	 mov	 edx, DWORD PTR _nID$[ebp]
  01e9b	89 51 14	 mov	 DWORD PTR [ecx+20], edx

; 723  : }

  01e9e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01ea5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01ea8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01ead	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01eb0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01eb3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01eba	8b e5		 mov	 esp, ebp
  01ebc	5d		 pop	 ebp
  01ebd	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L159238:
  00172	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00175	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0017a	c3		 ret	 0
$L159243:
  0017b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159242
  00180	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTabBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ENDP	; CTabBtn::CTabBtn
PUBLIC	??1CTabBtn@@UAE@XZ				; CTabBtn::~CTabBtn
;	COMDAT ??_GCTabBtn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCTabBtn@@UAEPAXI@Z PROC NEAR			; CTabBtn::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CTabBtn@@UAE@XZ	; CTabBtn::~CTabBtn
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153070
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153070:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCTabBtn@@UAEPAXI@Z ENDP				; CTabBtn::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CSkinBtn@@UAE@XZ				; CSkinBtn::~CSkinBtn
;	COMDAT ??1CTabBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CTabBtn@@UAE@XZ PROC NEAR				; CTabBtn::~CTabBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinBtn@@UAE@XZ	; CSkinBtn::~CSkinBtn
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CTabBtn@@UAE@XZ ENDP					; CTabBtn::~CTabBtn
_TEXT	ENDS
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinBtn@@UAE@XZ PROC NEAR				; CSkinBtn::~CSkinBtn, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinBtn@@UAE@XZ ENDP				; CSkinBtn::~CSkinBtn
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CTabBtn@@UAEXFF@Z PROC NEAR			; CTabBtn::OnActivate

; 727  : {

  01ec0	55		 push	 ebp
  01ec1	8b ec		 mov	 ebp, esp
  01ec3	51		 push	 ecx
  01ec4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 728  : 	if ( m_pParentWnd )

  01ec7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01eca	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  01ece	74 12		 je	 SHORT $L153080

; 729  : 		((CSpellListDlg*) m_pParentWnd)->SelectTab( m_nID );

  01ed0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ed3	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  01ed6	52		 push	 edx
  01ed7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01eda	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  01edd	e8 00 00 00 00	 call	 ?SelectTab@CSpellListDlg@@QAEXH@Z ; CSpellListDlg::SelectTab
$L153080:

; 730  : }

  01ee2	8b e5		 mov	 esp, ebp
  01ee4	5d		 pop	 ebp
  01ee5	c2 08 00	 ret	 8
?OnActivate@CTabBtn@@UAEXFF@Z ENDP			; CTabBtn::OnActivate
_TEXT	ENDS
PUBLIC	??Breference@?$bitset@$04@std@@QBE_NXZ		; std::bitset<5>::reference::operator bool
PUBLIC	??A?$bitset@$04@std@@QAE?AVreference@01@I@Z	; std::bitset<5>::operator[]
EXTRN	?ExecuteScript@CSkinObj@@QAEHPBD@Z:NEAR		; CSkinObj::ExecuteScript
_DATA	SEGMENT
	ORG $+1
$SG153088 DB	'goto - Activated', 00H
	ORG $+3
$SG153090 DB	'goto - Normal', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -12
$T159252 = -8
?ShowNormal@CTabBtn@@UAEXXZ PROC NEAR			; CTabBtn::ShowNormal

; 734  : {

  01ee8	55		 push	 ebp
  01ee9	8b ec		 mov	 ebp, esp
  01eeb	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01eee	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 735  : 	if ( m_state[sknCtrlActivated] ) {

  01ef1	6a 02		 push	 2
  01ef3	8d 45 f8	 lea	 eax, DWORD PTR $T159252[ebp]
  01ef6	50		 push	 eax
  01ef7	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01efa	83 c1 08	 add	 ecx, 8
  01efd	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  01f02	8b c8		 mov	 ecx, eax
  01f04	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  01f09	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01f0e	85 c0		 test	 eax, eax
  01f10	74 0f		 je	 SHORT $L153087

; 736  : 		ExecuteScript ( "goto - Activated" );

  01f12	68 00 00 00 00	 push	 OFFSET FLAT:$SG153088
  01f17	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01f1a	e8 00 00 00 00	 call	 ?ExecuteScript@CSkinObj@@QAEHPBD@Z ; CSkinObj::ExecuteScript

; 737  : 	} else {

  01f1f	eb 0d		 jmp	 SHORT $L153089
$L153087:

; 738  : 		ExecuteScript ( "goto - Normal" );

  01f21	68 00 00 00 00	 push	 OFFSET FLAT:$SG153090
  01f26	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01f29	e8 00 00 00 00	 call	 ?ExecuteScript@CSkinObj@@QAEHPBD@Z ; CSkinObj::ExecuteScript
$L153089:

; 740  : }

  01f2e	8b e5		 mov	 esp, ebp
  01f30	5d		 pop	 ebp
  01f31	c3		 ret	 0
?ShowNormal@CTabBtn@@UAEXXZ ENDP			; CTabBtn::ShowNormal
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+2
$SG153097 DB	'goto - Activated', 00H
	ORG $+3
$SG153099 DB	'goto - Normal', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -12
$T159254 = -8
?ShowHighlighted@CTabBtn@@UAEXXZ PROC NEAR		; CTabBtn::ShowHighlighted

; 744  : {

  01f32	55		 push	 ebp
  01f33	8b ec		 mov	 ebp, esp
  01f35	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01f38	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 745  : 	if ( m_state[sknCtrlActivated] ) {

  01f3b	6a 02		 push	 2
  01f3d	8d 45 f8	 lea	 eax, DWORD PTR $T159254[ebp]
  01f40	50		 push	 eax
  01f41	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01f44	83 c1 08	 add	 ecx, 8
  01f47	e8 00 00 00 00	 call	 ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ; std::bitset<5>::operator[]
  01f4c	8b c8		 mov	 ecx, eax
  01f4e	e8 00 00 00 00	 call	 ??Breference@?$bitset@$04@std@@QBE_NXZ ; std::bitset<5>::reference::operator bool
  01f53	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01f58	85 c0		 test	 eax, eax
  01f5a	74 0f		 je	 SHORT $L153096

; 746  : 		ExecuteScript ( "goto - Activated" );

  01f5c	68 00 00 00 00	 push	 OFFSET FLAT:$SG153097
  01f61	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01f64	e8 00 00 00 00	 call	 ?ExecuteScript@CSkinObj@@QAEHPBD@Z ; CSkinObj::ExecuteScript

; 747  : 	} else {

  01f69	eb 0d		 jmp	 SHORT $L153098
$L153096:

; 748  : 		ExecuteScript ( "goto - Normal" );

  01f6b	68 00 00 00 00	 push	 OFFSET FLAT:$SG153099
  01f70	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  01f73	e8 00 00 00 00	 call	 ?ExecuteScript@CSkinObj@@QAEHPBD@Z ; CSkinObj::ExecuteScript
$L153098:

; 750  : }

  01f78	8b e5		 mov	 esp, ebp
  01f7a	5d		 pop	 ebp
  01f7b	c3		 ret	 0
?ShowHighlighted@CTabBtn@@UAEXXZ ENDP			; CTabBtn::ShowHighlighted
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NPBDABVCString@@@Z PROC NEAR			; operator==, COMDAT

; 185  : 	{ return s2.Compare(s1) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _s1$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _s2$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NPBDABVCString@@@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
PUBLIC	??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z	; std::bitset<5>::reference::reference
;	COMDAT ??A?$bitset@$04@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
$T159266 = -8
___$ReturnUdt$ = 8
_this$ = -12
__P$ = 12
??A?$bitset@$04@std@@QAE?AVreference@01@I@Z PROC NEAR	; std::bitset<5>::operator[], COMDAT

; 54   : 		{return (reference(*this, _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	8d 4d f8	 lea	 ecx, DWORD PTR $T159266[ebp]
  00014	e8 00 00 00 00	 call	 ??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z ; std::bitset<5>::reference::reference
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx
  00023	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??A?$bitset@$04@std@@QAE?AVreference@01@I@Z ENDP	; std::bitset<5>::operator[]
_TEXT	ENDS
PUBLIC	?test@?$bitset@$04@std@@QBE_NI@Z		; std::bitset<5>::test
;	COMDAT ??Breference@?$bitset@$04@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4
??Breference@?$bitset@$04@std@@QBE_NXZ PROC NEAR	; std::bitset<5>::reference::operator bool, COMDAT

; 35   : 			{return (_Pbs->test(_Off)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00011	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00013	e8 00 00 00 00	 call	 ?test@?$bitset@$04@std@@QBE_NI@Z ; std::bitset<5>::test
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??Breference@?$bitset@$04@std@@QBE_NXZ ENDP		; std::bitset<5>::reference::operator bool
_TEXT	ENDS
;	COMDAT ??0?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@ABV?$allocator@PAVCTabBtn@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8
_this$ = -4
??0?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@ABV?$allocator@PAVCTabBtn@@@1@@Z PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::vector<CTabBtn *,std::allocator<CTabBtn *> >, COMDAT

; 39   : 	explicit vector(const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00025	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00028	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??0?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@ABV?$allocator@PAVCTabBtn@@@1@@Z ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::vector<CTabBtn *,std::allocator<CTabBtn *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCTabBtn@@@std@@QAEXPAXI@Z ; std::allocator<CTabBtn *>::deallocate
PUBLIC	?_Destroy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@0@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Destroy
;	COMDAT ??1?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::~vector<CTabBtn *,std::allocator<CTabBtn *> >, COMDAT

; 58   : 		{_Destroy(_First, _Last);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000d	51		 push	 ecx
  0000e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00011	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00014	50		 push	 eax
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@0@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Destroy

; 59   : 		allocator.deallocate(_First, _End - _First);

  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00026	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00029	c1 f8 02	 sar	 eax, 2
  0002c	50		 push	 eax
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00033	52		 push	 edx
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCTabBtn@@@std@@QAEXPAXI@Z ; std::allocator<CTabBtn *>::deallocate

; 60   : 		_First = 0, _Last = 0, _End = 0; }

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00050	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00053	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??1?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAE@XZ ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::~vector<CTabBtn *,std::allocator<CTabBtn *> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::begin
PUBLIC	?end@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::end
PUBLIC	?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::size
PUBLIC	?insert@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXPAPAVCTabBtn@@IABQAV3@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::insert
PUBLIC	?erase@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@PAPAV3@0@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::erase
;	COMDAT ?resize@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXIABQAVCTabBtn@@@Z
_TEXT	SEGMENT
__N$ = 8
__X$ = 12
_this$ = -4
?resize@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXIABQAVCTabBtn@@@Z PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::resize, COMDAT

; 109  : 		{if (size() < _N)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::size
  0000f	3b 45 08	 cmp	 eax, DWORD PTR __N$[ebp]
  00012	73 25		 jae	 SHORT $L154275

; 110  : 			insert(end(), _N - size(), _X);

  00014	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  00017	50		 push	 eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::size
  00020	8b 4d 08	 mov	 ecx, DWORD PTR __N$[ebp]
  00023	2b c8		 sub	 ecx, eax
  00025	51		 push	 ecx
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?end@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::end
  0002e	50		 push	 eax
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?insert@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXPAPAVCTabBtn@@IABQAV3@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::insert

; 111  : 		else if (_N < size())

  00037	eb 2d		 jmp	 SHORT $L154277
$L154275:
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::size
  00041	39 45 08	 cmp	 DWORD PTR __N$[ebp], eax
  00044	73 20		 jae	 SHORT $L154277

; 112  : 			erase(begin() + _N, end()); }

  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?end@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::end
  0004e	50		 push	 eax
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::begin
  00057	8b 55 08	 mov	 edx, DWORD PTR __N$[ebp]
  0005a	8d 04 90	 lea	 eax, DWORD PTR [eax+edx*4]
  0005d	50		 push	 eax
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?erase@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@PAPAV3@0@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::erase
$L154277:
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 08 00	 ret	 8
?resize@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXIABQAVCTabBtn@@@Z ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::resize
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEAAPAVCTabBtn@@I@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??A?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEAAPAVCTabBtn@@I@Z PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::operator[], COMDAT

; 132  : 		{return (*(begin() + _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?begin@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::begin
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00012	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
??A?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEAAPAVCTabBtn@@I@Z ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::operator[]
_TEXT	ENDS
PUBLIC	??0CGdiObject@@QAE@XZ				; CGdiObject::CGdiObject
PUBLIC	??_7CBitmap@@6B@				; CBitmap::`vftable'
PUBLIC	??_GCBitmap@@UAEPAXI@Z				; CBitmap::`scalar deleting destructor'
PUBLIC	??_ECBitmap@@UAEPAXI@Z				; CBitmap::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ:NEAR ; CBitmap::GetRuntimeClass
;	COMDAT ??_7CBitmap@@6B@
; File C:\Program Files\Microsoft Visual Studio\VC98\MFC\INCLUDE\afxwin1.inl
CONST	SEGMENT
??_7CBitmap@@6B@ DD FLAT:?GetRuntimeClass@CBitmap@@UBEPAUCRuntimeClass@@XZ ; CBitmap::`vftable'
	DD	FLAT:??_ECBitmap@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CBitmap@@QAE@XZ PROC NEAR				; CBitmap::CBitmap, COMDAT

; 374  : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CGdiObject@@QAE@XZ	; CGdiObject::CGdiObject
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CBitmap@@6B@ ; CBitmap::`vftable'
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CBitmap@@QAE@XZ ENDP					; CBitmap::CBitmap
_TEXT	ENDS
PUBLIC	??_7CGdiObject@@6B@				; CGdiObject::`vftable'
PUBLIC	??_GCGdiObject@@UAEPAXI@Z			; CGdiObject::`scalar deleting destructor'
PUBLIC	??_ECGdiObject@@UAEPAXI@Z			; CGdiObject::`vector deleting destructor'
PUBLIC	??0CObject@@IAE@XZ				; CObject::CObject
EXTRN	?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ:NEAR ; CGdiObject::GetRuntimeClass
;	COMDAT ??_7CGdiObject@@6B@
; File C:\Program Files\Microsoft Visual Studio\VC98\MFC\INCLUDE\afxwin1.inl
CONST	SEGMENT
??_7CGdiObject@@6B@ DD FLAT:?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ ; CGdiObject::`vftable'
	DD	FLAT:??_ECGdiObject@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CGdiObject@@QAE@XZ PROC NEAR				; CGdiObject::CGdiObject, COMDAT

; 279  : 	{ m_hObject = NULL; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGdiObject@@6B@ ; CGdiObject::`vftable'
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0CGdiObject@@QAE@XZ ENDP				; CGdiObject::CGdiObject
_TEXT	ENDS
PUBLIC	??_7CObject@@6B@				; CObject::`vftable'
PUBLIC	??_GCObject@@UAEPAXI@Z				; CObject::`scalar deleting destructor'
PUBLIC	??_ECObject@@UAEPAXI@Z				; CObject::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:NEAR ; CObject::GetRuntimeClass
;	COMDAT ??_7CObject@@6B@
; File C:\Program Files\Microsoft Visual Studio\VC98\MFC\INCLUDE\afx.inl
CONST	SEGMENT
??_7CObject@@6B@ DD FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ ; CObject::`vftable'
	DD	FLAT:??_ECObject@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CObject@@IAE@XZ PROC NEAR				; CObject::CObject, COMDAT

; 17   : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CObject@@6B@ ; CObject::`vftable'
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0CObject@@IAE@XZ ENDP					; CObject::CObject
_TEXT	ENDS
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCObject@@UAEPAXI@Z PROC NEAR			; CObject::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L34924
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L34924:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCObject@@UAEPAXI@Z ENDP				; CObject::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CObject@@UAE@XZ PROC NEAR				; CObject::~CObject, COMDAT

; 19   : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CObject@@6B@ ; CObject::`vftable'
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
PUBLIC	??1CGdiObject@@UAE@XZ				; CGdiObject::~CGdiObject
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCGdiObject@@UAEPAXI@Z PROC NEAR			; CGdiObject::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L43278
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L43278:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCGdiObject@@UAEPAXI@Z ENDP				; CGdiObject::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?DeleteObject@CGdiObject@@QAEHXZ:NEAR		; CGdiObject::DeleteObject
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\MFC\INCLUDE\afxwin1.inl
xdata$x	SEGMENT
$T159283 DD	019930520H
	DD	01H
	DD	FLAT:$T159285
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159285 DD	0ffffffffH
	DD	FLAT:$L159281
xdata$x	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??1CGdiObject@@UAE@XZ PROC NEAR				; CGdiObject::~CGdiObject, COMDAT

; 281  : 	{ DeleteObject(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L159284
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CGdiObject@@6B@ ; CGdiObject::`vftable'
  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?DeleteObject@CGdiObject@@QAEHXZ ; CGdiObject::DeleteObject
  00034	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159281:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00008	c3		 ret	 0
$L159284:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159283
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CGdiObject@@UAE@XZ ENDP				; CGdiObject::~CGdiObject
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCBitmap@@UAEPAXI@Z PROC NEAR			; CBitmap::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CBitmap@@UAE@XZ	; CBitmap::~CBitmap
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L43468
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L43468:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCBitmap@@UAEPAXI@Z ENDP				; CBitmap::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CBitmap@@UAE@XZ PROC NEAR				; CBitmap::~CBitmap, COMDAT

; 376  : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CBitmap@@6B@ ; CBitmap::`vftable'
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CGdiObject@@UAE@XZ	; CGdiObject::~CGdiObject
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CBitmap@@UAE@XZ ENDP					; CBitmap::~CBitmap
_TEXT	ENDS
EXTRN	?AfxFindResourceHandle@@YGPAUHINSTANCE__@@PBD0@Z:NEAR ; AfxFindResourceHandle
EXTRN	__imp__LoadBitmapA@8:NEAR
EXTRN	?Attach@CGdiObject@@QAEHPAX@Z:NEAR		; CGdiObject::Attach
;	COMDAT ?LoadBitmapA@CBitmap@@QAEHI@Z
_TEXT	SEGMENT
_nIDResource$ = 8
_this$ = -4
?LoadBitmapA@CBitmap@@QAEHI@Z PROC NEAR			; CBitmap::LoadBitmapA, COMDAT

; 409  : 	{ return Attach(::LoadBitmap(AfxFindResourceHandle(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 410  : 		MAKEINTRESOURCE(nIDResource), RT_BITMAP), MAKEINTRESOURCE(nIDResource))); }

  00007	8b 45 08	 mov	 eax, DWORD PTR _nIDResource$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	50		 push	 eax
  00010	6a 02		 push	 2
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _nIDResource$[ebp]
  00015	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?AfxFindResourceHandle@@YGPAUHINSTANCE__@@PBD0@Z ; AfxFindResourceHandle
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadBitmapA@8
  00028	50		 push	 eax
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?Attach@CGdiObject@@QAEHPAX@Z ; CGdiObject::Attach
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
?LoadBitmapA@CBitmap@@QAEHI@Z ENDP			; CBitmap::LoadBitmapA
_TEXT	ENDS
PUBLIC	?_Xran@?$bitset@$04@std@@ABEXXZ			; std::bitset<5>::_Xran
;	COMDAT ?test@?$bitset@$04@std@@QBE_NI@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
?test@?$bitset@$04@std@@QBE_NI@Z PROC NEAR		; std::bitset<5>::test, COMDAT

; 177  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 05	 cmp	 DWORD PTR __P$[ebp], 5
  0000c	72 08		 jb	 SHORT $L155416

; 178  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$04@std@@ABEXXZ ; std::bitset<5>::_Xran
$L155416:

; 179  : 		return ((_A[_P / _Nb] & ((_Ty)1 << _P % _Nb)) != 0); }

  00016	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00019	c1 ee 05	 shr	 esi, 5
  0001c	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001f	33 d2		 xor	 edx, edx
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	f7 f1		 div	 ecx
  00028	8b ca		 mov	 ecx, edx
  0002a	ba 01 00 00 00	 mov	 edx, 1
  0002f	d3 e2		 shl	 edx, cl
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  00037	23 c2		 and	 eax, edx
  00039	f7 d8		 neg	 eax
  0003b	1b c0		 sbb	 eax, eax
  0003d	f7 d8		 neg	 eax
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?test@?$bitset@$04@std@@QBE_NI@Z ENDP			; std::bitset<5>::test
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__P$ = 12
??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z PROC NEAR	; std::bitset<5>::reference::reference, COMDAT

; 37   : 		reference(bitset<_N>& _X, size_t _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0reference@?$bitset@$04@std@@AAE@AAV12@I@Z ENDP	; std::bitset<5>::reference::reference
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ PROC NEAR		; CWnd::GetSafeHwnd, COMDAT

; 23   : 	{ return this == NULL ? NULL : m_hWnd; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L159295
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00016	eb 09		 jmp	 SHORT $L159296
$L159295:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0001e	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
$L159296:
  00021	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ENDP		; CWnd::GetSafeHwnd
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ
_TEXT	SEGMENT
_this$ = -4
?begin@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::begin, COMDAT

; 93   : 		{return (_First); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?begin@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ
_TEXT	SEGMENT
_this$ = -4
?end@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::end, COMDAT

; 97   : 		{return (_Last); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?end@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::end
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::size, COMDAT

; 114  : 		{return (_First == 0 ? 0 : _Last - _First); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00010	75 09		 jne	 SHORT $L159300
  00012	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00019	eb 12		 jmp	 SHORT $L159301
$L159300:
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00024	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00027	c1 f8 02	 sar	 eax, 2
  0002a	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
$L159301:
  0002d	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVCTabBtn@@@std@@QAEPAPAVCTabBtn@@IPBX@Z ; std::allocator<CTabBtn *>::allocate
PUBLIC	?_Ucopy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEPAPAVCTabBtn@@PBQAV3@0PAPAV3@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ucopy
PUBLIC	?_Ufill@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@IABQAV3@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ufill
PUBLIC	?fill@std@@YAXPAPAVCTabBtn@@0ABQAV2@@Z		; std::fill
PUBLIC	?copy_backward@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z	; std::copy_backward
;	COMDAT ?insert@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXPAPAVCTabBtn@@IABQAV3@@Z
_TEXT	SEGMENT
__P$ = 8
__M$ = 12
__X$ = 16
_this$ = -16
__N$155521 = -12
__S$155522 = -8
__Q$155524 = -4
?insert@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXPAPAVCTabBtn@@IABQAV3@@Z PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::insert, COMDAT

; 156  : 		{if (_End - _Last < _M)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00012	2b 51 08	 sub	 edx, DWORD PTR [ecx+8]
  00015	c1 fa 02	 sar	 edx, 2
  00018	3b 55 0c	 cmp	 edx, DWORD PTR __M$[ebp]
  0001b	0f 83 f6 00 00
	00		 jae	 $L155520

; 157  : 			{size_type _N = size() + (_M < size() ? size() : _M);

  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::size
  00029	39 45 0c	 cmp	 DWORD PTR __M$[ebp], eax
  0002c	73 0d		 jae	 SHORT $L159303
  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::size
  00036	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  00039	eb 06		 jmp	 SHORT $L159304
$L159303:
  0003b	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  0003e	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
$L159304:
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::size
  00049	03 45 ec	 add	 eax, DWORD PTR -20+[ebp]
  0004c	89 45 f4	 mov	 DWORD PTR __N$155521[ebp], eax

; 158  : 			iterator _S = allocator.allocate(_N, (void *)0);

  0004f	6a 00		 push	 0
  00051	8b 4d f4	 mov	 ecx, DWORD PTR __N$155521[ebp]
  00054	51		 push	 ecx
  00055	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAVCTabBtn@@@std@@QAEPAPAVCTabBtn@@IPBX@Z ; std::allocator<CTabBtn *>::allocate
  0005d	89 45 f8	 mov	 DWORD PTR __S$155522[ebp], eax

; 159  : 			iterator _Q = _Ucopy(_First, _P, _S);

  00060	8b 55 f8	 mov	 edx, DWORD PTR __S$155522[ebp]
  00063	52		 push	 edx
  00064	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00067	50		 push	 eax
  00068	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0006e	52		 push	 edx
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEPAPAVCTabBtn@@PBQAV3@0PAPAV3@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ucopy
  00077	89 45 fc	 mov	 DWORD PTR __Q$155524[ebp], eax

; 160  : 			_Ufill(_Q, _M, _X);

  0007a	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  00081	51		 push	 ecx
  00082	8b 55 fc	 mov	 edx, DWORD PTR __Q$155524[ebp]
  00085	52		 push	 edx
  00086	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@IABQAV3@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ufill

; 161  : 			_Ucopy(_P, _Last, _Q + _M);

  0008e	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  00091	8b 4d fc	 mov	 ecx, DWORD PTR __Q$155524[ebp]
  00094	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00097	52		 push	 edx
  00098	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0009e	51		 push	 ecx
  0009f	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  000a2	52		 push	 edx
  000a3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEPAPAVCTabBtn@@PBQAV3@0PAPAV3@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ucopy

; 162  : 			_Destroy(_First, _Last);

  000ab	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b1	51		 push	 ecx
  000b2	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b8	50		 push	 eax
  000b9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@0@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Destroy

; 163  : 			allocator.deallocate(_First, _End - _First);

  000c1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000c7	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000ca	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  000cd	c1 f8 02	 sar	 eax, 2
  000d0	50		 push	 eax
  000d1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d7	52		 push	 edx
  000d8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCTabBtn@@@std@@QAEXPAXI@Z ; std::allocator<CTabBtn *>::deallocate

; 164  : 			_End = _S + _N;

  000e0	8b 45 f4	 mov	 eax, DWORD PTR __N$155521[ebp]
  000e3	8b 4d f8	 mov	 ecx, DWORD PTR __S$155522[ebp]
  000e6	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 165  : 			_Last = _S + size() + _M;

  000ef	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	e8 00 00 00 00	 call	 ?size@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QBEIXZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::size
  000f7	8b 4d f8	 mov	 ecx, DWORD PTR __S$155522[ebp]
  000fa	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000fd	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  00100	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  00103	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00106	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 166  : 			_First = _S; }

  00109	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d f8	 mov	 ecx, DWORD PTR __S$155522[ebp]
  0010f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 167  : 		else if (_Last - _P < _M)

  00112	e9 f7 00 00 00	 jmp	 $L155535
$L155520:
  00117	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0011a	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0011d	2b 45 08	 sub	 eax, DWORD PTR __P$[ebp]
  00120	c1 f8 02	 sar	 eax, 2
  00123	3b 45 0c	 cmp	 eax, DWORD PTR __M$[ebp]
  00126	73 6d		 jae	 SHORT $L155526

; 168  : 			{_Ucopy(_P, _Last, _P + _M);

  00128	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  0012b	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0012e	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00131	50		 push	 eax
  00132	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00138	52		 push	 edx
  00139	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0013c	50		 push	 eax
  0013d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00140	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEPAPAVCTabBtn@@PBQAV3@0PAPAV3@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ucopy

; 169  : 			_Ufill(_Last, _M - (_Last - _P), _X);

  00145	8b 4d 10	 mov	 ecx, DWORD PTR __X$[ebp]
  00148	51		 push	 ecx
  00149	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0014c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0014f	2b 45 08	 sub	 eax, DWORD PTR __P$[ebp]
  00152	c1 f8 02	 sar	 eax, 2
  00155	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  00158	2b c8		 sub	 ecx, eax
  0015a	51		 push	 ecx
  0015b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0015e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00161	50		 push	 eax
  00162	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00165	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@IABQAV3@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ufill

; 170  : 			fill(_P, _Last, _X);

  0016a	8b 4d 10	 mov	 ecx, DWORD PTR __X$[ebp]
  0016d	51		 push	 ecx
  0016e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00171	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00174	50		 push	 eax
  00175	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00178	51		 push	 ecx
  00179	e8 00 00 00 00	 call	 ?fill@std@@YAXPAPAVCTabBtn@@0ABQAV2@@Z ; std::fill
  0017e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 171  : 			_Last += _M; }

  00181	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00184	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00187	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  0018a	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  0018d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00190	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 172  : 		else if (0 < _M)

  00193	eb 79		 jmp	 SHORT $L155535
$L155526:
  00195	83 7d 0c 00	 cmp	 DWORD PTR __M$[ebp], 0
  00199	76 73		 jbe	 SHORT $L155535

; 173  : 			{_Ucopy(_Last - _M, _Last, _Last);

  0019b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001a1	52		 push	 edx
  001a2	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001a5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001a8	51		 push	 ecx
  001a9	8b 55 0c	 mov	 edx, DWORD PTR __M$[ebp]
  001ac	c1 e2 02	 shl	 edx, 2
  001af	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001b2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001b5	2b ca		 sub	 ecx, edx
  001b7	51		 push	 ecx
  001b8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001bb	e8 00 00 00 00	 call	 ?_Ucopy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEPAPAVCTabBtn@@PBQAV3@0PAPAV3@@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ucopy

; 174  : 			copy_backward(_P, _Last - _M, _Last);

  001c0	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001c3	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001c6	50		 push	 eax
  001c7	8b 4d 0c	 mov	 ecx, DWORD PTR __M$[ebp]
  001ca	c1 e1 02	 shl	 ecx, 2
  001cd	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  001d0	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001d3	2b c1		 sub	 eax, ecx
  001d5	50		 push	 eax
  001d6	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  001d9	51		 push	 ecx
  001da	e8 00 00 00 00	 call	 ?copy_backward@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z ; std::copy_backward
  001df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 175  : 			fill(_P, _P + _M, _X);

  001e2	8b 55 10	 mov	 edx, DWORD PTR __X$[ebp]
  001e5	52		 push	 edx
  001e6	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  001e9	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  001ec	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  001ef	52		 push	 edx
  001f0	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  001f3	50		 push	 eax
  001f4	e8 00 00 00 00	 call	 ?fill@std@@YAXPAPAVCTabBtn@@0ABQAV2@@Z ; std::fill
  001f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 176  : 			_Last += _M; }}

  001fc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ff	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00202	8b 45 0c	 mov	 eax, DWORD PTR __M$[ebp]
  00205	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  00208	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0020b	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$L155535:
  0020e	8b e5		 mov	 esp, ebp
  00210	5d		 pop	 ebp
  00211	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEXPAPAVCTabBtn@@IABQAV3@@Z ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::insert
_TEXT	ENDS
PUBLIC	?copy@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z		; std::copy
;	COMDAT ?erase@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@PAPAV3@0@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
_this$ = -8
__S$ = -4
?erase@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@PAPAV3@0@Z PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::erase, COMDAT

; 207  : 		{iterator _S = copy(_L, end(), _F);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::end
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?copy@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z ; std::copy
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 208  : 		_Destroy(_S, end());

  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?end@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@XZ ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::end
  0002d	50		 push	 eax
  0002e	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00031	52		 push	 edx
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@0@Z ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Destroy

; 209  : 		_Last = _S;

  0003a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00040	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 210  : 		return (_F); }

  00043	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
?erase@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@QAEPAPAVCTabBtn@@PAPAV3@0@Z ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::erase
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@@Z ; std::allocator<CTabBtn *>::destroy
;	COMDAT ?_Destroy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@0@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
_this$ = -4
?_Destroy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@0@Z PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Destroy, COMDAT

; 230  : 		{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	eb 09		 jmp	 SHORT $L155561
$L155562:
  00009	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 08	 mov	 DWORD PTR __F$[ebp], eax
$L155561:
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00015	3b 4d 0c	 cmp	 ecx, DWORD PTR __L$[ebp]
  00018	74 0e		 je	 SHORT $L155563

; 231  : 			allocator.destroy(_F); }

  0001a	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  0001d	52		 push	 edx
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@@Z ; std::allocator<CTabBtn *>::destroy
  00026	eb e1		 jmp	 SHORT $L155562
$L155563:
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@0@Z ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Destroy
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCTabBtn@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
?deallocate@?$allocator@PAVCTabBtn@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CTabBtn *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCTabBtn@@@std@@QAEXPAXI@Z ENDP ; std::allocator<CTabBtn *>::deallocate
_TEXT	ENDS
EXTRN	__imp__ScreenToClient@8:NEAR
;	COMDAT ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT
_lpPoint$ = 8
_this$ = -4
?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z PROC NEAR	; CWnd::ScreenToClient, COMDAT

; 106  : 	{ ASSERT(::IsWindow(m_hWnd)); ::ScreenToClient(m_hWnd, lpPoint); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpPoint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z ENDP		; CWnd::ScreenToClient
_TEXT	ENDS
PUBLIC	??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
EXTRN	??0logic_error@std@@QAE@ABV01@@Z:NEAR		; std::logic_error::logic_error
EXTRN	??1out_of_range@std@@UAE@XZ:NEAR		; std::out_of_range::~out_of_range
EXTRN	??0out_of_range@std@@QAE@ABV01@@Z:NEAR		; std::out_of_range::out_of_range
EXTRN	__imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z:NEAR
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT ??_R0?AVexception@@@8
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\bitset
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT
??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ DB 'invalid bitset'
	DB	'<N> position', 00H				; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T159316 DD	019930520H
	DD	01H
	DD	FLAT:$T159318
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159318 DD	0ffffffffH
	DD	FLAT:$L159314
xdata$x	ENDS
;	COMDAT ?_Xran@?$bitset@$04@std@@ABEXXZ
_TEXT	SEGMENT
_this$ = -64
$T159310 = -40
$T159311 = -56
$T159312 = -60
__$EHRec$ = -12
?_Xran@?$bitset@$04@std@@ABEXXZ PROC NEAR		; std::bitset<5>::_Xran, COMDAT

; 250  : 		{_THROW(out_of_range, "invalid bitset<N> position"); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L159317
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 c4	 lea	 eax, DWORD PTR $T159312[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
  00027	8d 4d c8	 lea	 ecx, DWORD PTR $T159311[ebp]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8d 4d c8	 lea	 ecx, DWORD PTR $T159311[ebp]
  0003a	51		 push	 ecx
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T159310[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00044	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00049	8d 55 d8	 lea	 edx, DWORD PTR $T159310[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$L155753:
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159314:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T159311[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00009	c3		 ret	 0
$L159317:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159316
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$bitset@$04@std@@ABEXXZ ENDP			; std::bitset<5>::_Xran
EXTRN	?Default@CWnd@@IAEJXZ:NEAR			; CWnd::Default
;	COMDAT ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT
_this$ = -4
?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z PROC NEAR	; CWnd::OnCreate, COMDAT

; 338  : 	{ return (int)Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ENDP	; CWnd::OnCreate
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@ABQAV3@@Z ; std::allocator<CTabBtn *>::construct
;	COMDAT ?_Ucopy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEPAPAVCTabBtn@@PBQAV3@0PAPAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__F$ = 8
__L$ = 12
__P$ = 16
?_Ucopy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEPAPAVCTabBtn@@PBQAV3@0PAPAV3@@Z PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ucopy, COMDAT

; 234  : 		{for (; _F != _L; ++_P, ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	eb 12		 jmp	 SHORT $L155774
$L155775:
  00009	8b 45 10	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 10	 mov	 DWORD PTR __P$[ebp], eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 4d 08	 mov	 DWORD PTR __F$[ebp], ecx
$L155774:
  0001b	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  0001e	3b 55 0c	 cmp	 edx, DWORD PTR __L$[ebp]
  00021	74 12		 je	 SHORT $L155776

; 235  : 			allocator.construct(_P, *_F);

  00023	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 10	 mov	 ecx, DWORD PTR __P$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@ABQAV3@@Z ; std::allocator<CTabBtn *>::construct
  00033	eb d4		 jmp	 SHORT $L155775
$L155776:

; 236  : 		return (_P); }

  00035	8b 45 10	 mov	 eax, DWORD PTR __P$[ebp]
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 0c 00	 ret	 12			; 0000000cH
?_Ucopy@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEPAPAVCTabBtn@@PBQAV3@0PAPAV3@@Z ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ucopy
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@IABQAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__F$ = 8
__N$ = 12
__X$ = 16
?_Ufill@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@IABQAV3@@Z PROC NEAR ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ufill, COMDAT

; 238  : 		{for (; 0 < _N; --_N, ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	eb 12		 jmp	 SHORT $L155779
$L155780:
  00009	8b 45 0c	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	83 e8 01	 sub	 eax, 1
  0000f	89 45 0c	 mov	 DWORD PTR __N$[ebp], eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 4d 08	 mov	 DWORD PTR __F$[ebp], ecx
$L155779:
  0001b	83 7d 0c 00	 cmp	 DWORD PTR __N$[ebp], 0
  0001f	76 12		 jbe	 SHORT $L155781

; 239  : 			allocator.construct(_F, _X); }

  00021	8b 55 10	 mov	 edx, DWORD PTR __X$[ebp]
  00024	52		 push	 edx
  00025	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00028	50		 push	 eax
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@ABQAV3@@Z ; std::allocator<CTabBtn *>::construct
  00031	eb d6		 jmp	 SHORT $L155780
$L155781:
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@PAVCTabBtn@@V?$allocator@PAVCTabBtn@@@std@@@std@@IAEXPAPAVCTabBtn@@IABQAV3@@Z ENDP ; std::vector<CTabBtn *,std::allocator<CTabBtn *> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Allocate@std@@YAPAPAVCTabBtn@@HPAPAV2@@Z	; std::_Allocate
;	COMDAT ?allocate@?$allocator@PAVCTabBtn@@@std@@QAEPAPAVCTabBtn@@IPBX@Z
_TEXT	SEGMENT
_this$ = -4
__N$ = 8
?allocate@?$allocator@PAVCTabBtn@@@std@@QAEPAPAVCTabBtn@@IPBX@Z PROC NEAR ; std::allocator<CTabBtn *>::allocate, COMDAT

; 59   : 		{return (_Allocate((difference_type)_N, (pointer)0)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPAPAVCTabBtn@@HPAPAV2@@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?allocate@?$allocator@PAVCTabBtn@@@std@@QAEPAPAVCTabBtn@@IPBX@Z ENDP ; std::allocator<CTabBtn *>::allocate
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAPAVCTabBtn@@@Z		; std::_Destroy
;	COMDAT ?destroy@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?destroy@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@@Z PROC NEAR ; std::allocator<CTabBtn *>::destroy, COMDAT

; 68   : 		{_Destroy(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAPAVCTabBtn@@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@@Z ENDP ; std::allocator<CTabBtn *>::destroy
_TEXT	ENDS
PUBLIC	?_Construct@std@@YAXPAPAVCTabBtn@@ABQAV2@@Z	; std::_Construct
;	COMDAT ?construct@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?construct@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@ABQAV3@@Z PROC NEAR ; std::allocator<CTabBtn *>::construct, COMDAT

; 66   : 		{_Construct(_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAPAVCTabBtn@@ABQAV2@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?construct@?$allocator@PAVCTabBtn@@@std@@QAEXPAPAVCTabBtn@@ABQAV3@@Z ENDP ; std::allocator<CTabBtn *>::construct
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAPAVCTabBtn@@0ABQAV2@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__X$ = 16
?fill@std@@YAXPAPAVCTabBtn@@0ABQAV2@@Z PROC NEAR	; std::fill, COMDAT

; 38   : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 09		 jmp	 SHORT $L156326
$L156327:
  00005	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00008	83 c0 04	 add	 eax, 4
  0000b	89 45 08	 mov	 DWORD PTR __F$[ebp], eax
$L156326:
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00011	3b 4d 0c	 cmp	 ecx, DWORD PTR __L$[ebp]
  00014	74 0c		 je	 SHORT $L156328

; 39   : 		*_F = _X; }

  00016	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00019	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	89 0a		 mov	 DWORD PTR [edx], ecx
  00020	eb e3		 jmp	 SHORT $L156327
$L156328:
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?fill@std@@YAXPAPAVCTabBtn@@0ABQAV2@@Z ENDP		; std::fill
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__X$ = 16
?copy_backward@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z PROC NEAR ; std::copy_backward, COMDAT

; 24   : 	{while (_F != _L)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
$L156331:
  00003	8b 45 08	 mov	 eax, DWORD PTR __F$[ebp]
  00006	3b 45 0c	 cmp	 eax, DWORD PTR __L$[ebp]
  00009	74 1e		 je	 SHORT $L156332

; 25   : 		*--_X = *--_L;

  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0000e	83 e9 04	 sub	 ecx, 4
  00011	89 4d 0c	 mov	 DWORD PTR __L$[ebp], ecx
  00014	8b 55 10	 mov	 edx, DWORD PTR __X$[ebp]
  00017	83 ea 04	 sub	 edx, 4
  0001a	89 55 10	 mov	 DWORD PTR __X$[ebp], edx
  0001d	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00020	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	89 10		 mov	 DWORD PTR [eax], edx
  00027	eb da		 jmp	 SHORT $L156331
$L156332:

; 26   : 	return (_X); }

  00029	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?copy_backward@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z ENDP	; std::copy_backward
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__X$ = 16
?copy@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z PROC NEAR	; std::copy, COMDAT

; 18   : 	{for (; _F != _L; ++_X, ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 12		 jmp	 SHORT $L156334
$L156335:
  00005	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00008	83 c0 04	 add	 eax, 4
  0000b	89 45 10	 mov	 DWORD PTR __X$[ebp], eax
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00011	83 c1 04	 add	 ecx, 4
  00014	89 4d 08	 mov	 DWORD PTR __F$[ebp], ecx
$L156334:
  00017	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  0001a	3b 55 0c	 cmp	 edx, DWORD PTR __L$[ebp]
  0001d	74 0c		 je	 SHORT $L156336

; 19   : 		*_X = *_F;

  0001f	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __F$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	89 10		 mov	 DWORD PTR [eax], edx
  00029	eb da		 jmp	 SHORT $L156335
$L156336:

; 20   : 	return (_X); }

  0002b	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?copy@std@@YAPAPAVCTabBtn@@PAPAV2@00@Z ENDP		; std::copy
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAPAVCTabBtn@@HPAPAV2@@Z
_TEXT	SEGMENT
__N$ = 8
?_Allocate@std@@YAPAPAVCTabBtn@@HPAPAV2@@Z PROC NEAR	; std::_Allocate, COMDAT

; 27   : 	{if (_N < 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 08 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	7d 07		 jge	 SHORT $L156343

; 28   : 		_N = 0;

  00009	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0
$L156343:

; 30   : 		(_SIZT)_N * sizeof (_Ty))); }

  00010	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  00013	c1 e0 02	 shl	 eax, 2
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001c	83 c4 04	 add	 esp, 4
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Allocate@std@@YAPAPAVCTabBtn@@HPAPAV2@@Z ENDP		; std::_Allocate
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCTabBtn@@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAPAVCTabBtn@@@Z PROC NEAR		; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAPAVCTabBtn@@@Z ENDP			; std::_Destroy
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT ?_Construct@std@@YAXPAPAVCTabBtn@@ABQAV2@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
$T159336 = -4
?_Construct@std@@YAXPAPAVCTabBtn@@ABQAV2@@Z PROC NEAR	; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00009	50		 push	 eax
  0000a	6a 04		 push	 4
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T159336[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T159336[ebp], 0
  0001b	74 12		 je	 SHORT $L159337
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR $T159336[ebp]
  00020	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 01		 mov	 DWORD PTR [ecx], eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR $T159336[ebp]
  0002a	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  0002d	eb 07		 jmp	 SHORT $L159338
$L159337:
  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L159338:
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?_Construct@std@@YAXPAPAVCTabBtn@@ABQAV2@@Z ENDP	; std::_Construct
_TEXT	ENDS
;	COMDAT ??_ECSpellListDlg@@WJE@AEPAXI@Z
_TEXT	SEGMENT
??_ECSpellListDlg@@WJE@AEPAXI@Z PROC NEAR		; CSpellListDlg::`vector deleting destructor', COMDAT
  00000	81 e9 94 00 00
	00		 sub	 ecx, 148		; 00000094H
  00006	e9 00 00 00 00	 jmp	 ??_ECSpellListDlg@@UAEPAXI@Z ; CSpellListDlg::`vector deleting destructor'
??_ECSpellListDlg@@WJE@AEPAXI@Z ENDP			; CSpellListDlg::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECFavoriteSpellsListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT
??_ECFavoriteSpellsListCtrl@@WEA@AEPAXI@Z PROC NEAR	; CFavoriteSpellsListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 40	 sub	 ecx, 64			; 00000040H
  00003	e9 00 00 00 00	 jmp	 ??_ECFavoriteSpellsListCtrl@@UAEPAXI@Z ; CFavoriteSpellsListCtrl::`vector deleting destructor'
??_ECFavoriteSpellsListCtrl@@WEA@AEPAXI@Z ENDP		; CFavoriteSpellsListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECFavoriteSpellsListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECFavoriteSpellsListCtrl@@WHE@AEPAXI@Z PROC NEAR	; CFavoriteSpellsListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECFavoriteSpellsListCtrl@@UAEPAXI@Z ; CFavoriteSpellsListCtrl::`vector deleting destructor'
??_ECFavoriteSpellsListCtrl@@WHE@AEPAXI@Z ENDP		; CFavoriteSpellsListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECFavoriteSpellsListCtrl@@WLE@AEPAXI@Z
_TEXT	SEGMENT
??_ECFavoriteSpellsListCtrl@@WLE@AEPAXI@Z PROC NEAR	; CFavoriteSpellsListCtrl::`vector deleting destructor', COMDAT
  00000	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  00006	e9 00 00 00 00	 jmp	 ??_ECFavoriteSpellsListCtrl@@UAEPAXI@Z ; CFavoriteSpellsListCtrl::`vector deleting destructor'
??_ECFavoriteSpellsListCtrl@@WLE@AEPAXI@Z ENDP		; CFavoriteSpellsListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECAllSpellsListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT
??_ECAllSpellsListCtrl@@WEA@AEPAXI@Z PROC NEAR		; CAllSpellsListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 40	 sub	 ecx, 64			; 00000040H
  00003	e9 00 00 00 00	 jmp	 ??_ECAllSpellsListCtrl@@UAEPAXI@Z ; CAllSpellsListCtrl::`vector deleting destructor'
??_ECAllSpellsListCtrl@@WEA@AEPAXI@Z ENDP		; CAllSpellsListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECAllSpellsListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECAllSpellsListCtrl@@WHE@AEPAXI@Z PROC NEAR		; CAllSpellsListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECAllSpellsListCtrl@@UAEPAXI@Z ; CAllSpellsListCtrl::`vector deleting destructor'
??_ECAllSpellsListCtrl@@WHE@AEPAXI@Z ENDP		; CAllSpellsListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECAllSpellsListCtrl@@WLE@AEPAXI@Z
_TEXT	SEGMENT
??_ECAllSpellsListCtrl@@WLE@AEPAXI@Z PROC NEAR		; CAllSpellsListCtrl::`vector deleting destructor', COMDAT
  00000	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  00006	e9 00 00 00 00	 jmp	 ??_ECAllSpellsListCtrl@@UAEPAXI@Z ; CAllSpellsListCtrl::`vector deleting destructor'
??_ECAllSpellsListCtrl@@WLE@AEPAXI@Z ENDP		; CAllSpellsListCtrl::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ	; CImageList::GetSafeHandle
EXTRN	__imp__SendMessageA@16:NEAR
EXTRN	?FromHandle@CImageList@@SGPAV1@PAU_IMAGELIST@@@Z:NEAR ; CImageList::FromHandle
;	COMDAT ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z
_TEXT	SEGMENT
_pImageList$ = 8
_nImageList$ = 12
_this$ = -4
?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z PROC NEAR ; CListCtrl::SetImageList, COMDAT

; 130  : 	{ ASSERT(::IsWindow(m_hWnd)); return CImageList::FromHandle((HIMAGELIST) ::SendMessage(m_hWnd, LVM_SETIMAGELIST, nImageList, (LPARAM)pImageList->GetSafeHandle())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pImageList$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ ; CImageList::GetSafeHandle
  0000f	50		 push	 eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _nImageList$[ebp]
  00013	50		 push	 eax
  00014	68 03 10 00 00	 push	 4099			; 00001003H
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0001f	52		 push	 edx
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?FromHandle@CImageList@@SGPAV1@PAU_IMAGELIST@@@Z ; CImageList::FromHandle
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ENDP ; CListCtrl::SetImageList
_TEXT	ENDS
;	COMDAT ?GetItemCount@CListCtrl@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetItemCount@CListCtrl@@QBEHXZ PROC NEAR		; CListCtrl::GetItemCount, COMDAT

; 132  : 	{ ASSERT(::IsWindow(m_hWnd)); return (int) ::SendMessage(m_hWnd, LVM_GETITEMCOUNT, 0, 0L); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 04 10 00 00	 push	 4100			; 00001004H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetItemCount@CListCtrl@@QBEHXZ ENDP			; CListCtrl::GetItemCount
_TEXT	ENDS
;	COMDAT ?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z
_TEXT	SEGMENT
_pfnCompare$ = 8
_dwData$ = 12
_this$ = -4
?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z PROC NEAR	; CListCtrl::SortItems, COMDAT

; 218  : 	{ ASSERT(::IsWindow(m_hWnd)); ASSERT((GetStyle() & LVS_OWNERDATA)==0); return (BOOL) ::SendMessage(m_hWnd, LVM_SORTITEMS, dwData, (LPARAM)pfnCompare); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _pfnCompare$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _dwData$[ebp]
  0000e	51		 push	 ecx
  0000f	68 30 10 00 00	 push	 4144			; 00001030H
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?SortItems@CListCtrl@@QAEHP6GHJJJ@ZK@Z ENDP		; CListCtrl::SortItems
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ PROC NEAR ; CImageList::GetSafeHandle, COMDAT

; 473  : 	{ return (this == NULL) ? NULL : m_hImageList; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L159350
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00016	eb 09		 jmp	 SHORT $L159351
$L159350:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001e	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
$L159351:
  00021	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ ENDP	; CImageList::GetSafeHandle
_TEXT	ENDS
PUBLIC	?GetSafeHandle@CGdiObject@@QBEPAXXZ		; CGdiObject::GetSafeHandle
EXTRN	__imp__ImageList_Add@12:NEAR
;	COMDAT ?Add@CImageList@@QAEHPAVCBitmap@@0@Z
_TEXT	SEGMENT
_pbmImage$ = 8
_pbmMask$ = 12
_this$ = -4
?Add@CImageList@@QAEHPAVCBitmap@@0@Z PROC NEAR		; CImageList::Add, COMDAT

; 477  : 	{ ASSERT(m_hImageList != NULL); return ImageList_Add(m_hImageList, (HBITMAP)pbmImage->GetSafeHandle(), (HBITMAP)pbmMask->GetSafeHandle()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _pbmMask$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetSafeHandle@CGdiObject@@QBEPAXXZ ; CGdiObject::GetSafeHandle
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _pbmImage$[ebp]
  00013	e8 00 00 00 00	 call	 ?GetSafeHandle@CGdiObject@@QBEPAXXZ ; CGdiObject::GetSafeHandle
  00018	50		 push	 eax
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001f	51		 push	 ecx
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_Add@12
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?Add@CImageList@@QAEHPAVCBitmap@@0@Z ENDP		; CImageList::Add
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4
?GetSafeHandle@CGdiObject@@QBEPAXXZ PROC NEAR		; CGdiObject::GetSafeHandle, COMDAT

; 277  : 	{ return this == NULL ? NULL : m_hObject; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L159354
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00016	eb 09		 jmp	 SHORT $L159355
$L159354:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001e	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
$L159355:
  00021	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHandle@CGdiObject@@QBEPAXXZ ENDP		; CGdiObject::GetSafeHandle
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__P$ = 12
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 42   : 	{return (_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0MemID@@QAE@G@Z PROC NEAR				; MemID::MemID, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _h$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 24   : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0MemID@@QAE@G@Z ENDP					; MemID::MemID
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4
??BMemID@@QBEGXZ PROC NEAR				; MemID::operator unsigned short, COMDAT

; 93   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : 		return handle;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 00	 mov	 ax, WORD PTR [eax]

; 95   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BMemID@@QBEGXZ ENDP					; MemID::operator unsigned short
_TEXT	ENDS
PUBLIC	??_C@_00A@?$AA@					; `string'
PUBLIC	??DMemID@@QBEPAXXZ				; MemID::operator*
;	COMDAT ??_C@_00A@?$AA@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\textid.hpp
_BSS	SEGMENT
??_C@_00A@?$AA@ DB 01H DUP (?)				; `string'
_BSS	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4
??DTextID@@QAEPADXZ PROC NEAR				; TextID::operator*, COMDAT

; 24   : 	char	*operator *() { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 		return handle ? (char *)MemID::operator*() : ""; 

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	33 c9		 xor	 ecx, ecx
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	85 c9		 test	 ecx, ecx
  00013	74 0d		 je	 SHORT $L159360
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0001d	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  00020	eb 07		 jmp	 SHORT $L159361
$L159360:
  00022	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
$L159361:
  00029	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 26   : 	}

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??DTextID@@QAEPADXZ ENDP				; TextID::operator*
_TEXT	ENDS
PUBLIC	?GetAddr@MemoryMgr@@QAEPAXG@Z			; MemoryMgr::GetAddr
EXTRN	_memMgr:DWORD
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4
??DMemID@@QBEPAXXZ PROC NEAR				; MemID::operator*, COMDAT

; 98   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		return memMgr->GetAddr(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?GetAddr@MemoryMgr@@QAEPAXG@Z ; MemoryMgr::GetAddr

; 100  : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??DMemID@@QBEPAXXZ ENDP					; MemID::operator*
_TEXT	ENDS
EXTRN	__descPtrTable:BYTE
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -4
?GetAddr@MemoryMgr@@QAEPAXG@Z PROC NEAR			; MemoryMgr::GetAddr, COMDAT

; 462  : 	inline void* MemoryMgr::GetAddr(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : //		CheckValid(theID);
; 464  : 		return _descPtrTable[(unsigned int)((unsigned short)theID)];

  00007	8b 45 08	 mov	 eax, DWORD PTR _theID$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR __descPtrTable[eax*4]

; 465  : 	}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?GetAddr@MemoryMgr@@QAEPAXG@Z ENDP			; MemoryMgr::GetAddr
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@ABV0@@Z				; MemID::MemID
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0StringID@@QAE@ABVMemID@@@Z PROC NEAR			; StringID::StringID, COMDAT

; 58   : 	StringID ( const MemID &id ) : MemID ( id ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0StringID@@QAE@ABVMemID@@@Z ENDP			; StringID::StringID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0MemID@@QAE@ABV0@@Z PROC NEAR				; MemID::MemID, COMDAT

; 19   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  0000d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00010	66 89 10	 mov	 WORD PTR [eax], dx

; 20   : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0MemID@@QAE@ABV0@@Z ENDP				; MemID::MemID
_TEXT	ENDS
PUBLIC	?GetProperty@Object@@QAEFG@Z			; Object::GetProperty
PUBLIC	??CFakeObjectID@@QBEPAUObject@@XZ		; FakeObjectID::operator->
PUBLIC	??0ObjectID@@QAE@G@Z				; ObjectID::ObjectID
PUBLIC	?IsObject@ObjectID@@QBEHXZ			; ObjectID::IsObject
EXTRN	??0TextID@@QAE@G@Z:NEAR				; TextID::TextID
;	COMDAT ??DStringID@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -16
_obj$ = -4
$T159368 = -8
$T159369 = -12
??DStringID@@QAEPADXZ PROC NEAR				; StringID::operator*, COMDAT

; 63   : 	char * operator *() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 		ObjectID obj ( handle );

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  00013	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID

; 65   : 
; 66   : 		if ( obj.IsObject() ) {

  00018	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  0001b	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  00020	85 c0		 test	 eax, eax
  00022	74 23		 je	 SHORT $L117287

; 67   : 			return *(TextID)obj->GetProperty ( s_data );

  00024	6a 71		 push	 113			; 00000071H
  00026	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  00029	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0002e	8b c8		 mov	 ecx, eax
  00030	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty
  00035	50		 push	 eax
  00036	8d 4d f8	 lea	 ecx, DWORD PTR $T159368[ebp]
  00039	e8 00 00 00 00	 call	 ??0TextID@@QAE@G@Z	; TextID::TextID
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
  00045	eb 16		 jmp	 SHORT $L117285
$L117287:

; 69   : 
; 70   : 		return *(TextID)handle;

  00047	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	66 8b 02	 mov	 ax, WORD PTR [edx]
  0004d	50		 push	 eax
  0004e	8d 4d f4	 lea	 ecx, DWORD PTR $T159369[ebp]
  00051	e8 00 00 00 00	 call	 ??0TextID@@QAE@G@Z	; TextID::TextID
  00056	8b c8		 mov	 ecx, eax
  00058	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
$L117285:

; 71   : 	}

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??DStringID@@QAEPADXZ ENDP				; StringID::operator*
_TEXT	ENDS
PUBLIC	?GetPropAddrCheck@Object@@QAEPAFG@Z		; Object::GetPropAddrCheck
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@Object@@QAEFG@Z PROC NEAR			; Object::GetProperty, COMDAT

; 170  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 		//	get a property given a selector
; 172  : 		return *GetPropAddrCheck(selector);

  00007	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetPropAddrCheck@Object@@QAEPAFG@Z ; Object::GetPropAddrCheck
  00014	66 8b 00	 mov	 ax, WORD PTR [eax]

; 173  : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?GetProperty@Object@@QAEFG@Z ENDP			; Object::GetProperty
_TEXT	ENDS
PUBLIC	?GetPropAddr@Object@@QAEPAFG@Z			; Object::GetPropAddr
EXTRN	?Fatal@MsgMgr@@QAAXHZZ:NEAR			; MsgMgr::Fatal
EXTRN	?msgMgr@@3PAVMsgMgr@@A:DWORD			; msgMgr
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_property$ = -4
?GetPropAddrCheck@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddrCheck, COMDAT

; 153  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 154  : 		//	get a property's address, checking for valid property
; 155  : 		Property* property = GetPropAddr(selector);

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetPropAddr@Object@@QAEPAFG@Z ; Object::GetPropAddr
  00016	89 45 fc	 mov	 DWORD PTR _property$[ebp], eax

; 156  : 		if (!property)

  00019	83 7d fc 00	 cmp	 DWORD PTR _property$[ebp], 0
  0001d	75 1b		 jne	 SHORT $L116903

; 157  : 			msgMgr->Fatal(Msg_InvalidProperty, selector);

  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _selector$[ebp]
  00022	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00028	51		 push	 ecx
  00029	6a 29		 push	 41			; 00000029H
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$L116903:

; 158  : 		return property;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _property$[ebp]

; 159  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?GetPropAddrCheck@Object@@QAEPAFG@Z ENDP		; Object::GetPropAddrCheck
_TEXT	ENDS
PUBLIC	?selectorDict@Object@@QAEPAVSelectorDict@@XZ	; Object::selectorDict
PUBLIC	??AObject@@QAEAAFH@Z				; Object::operator[]
EXTRN	?get@SelectorDict@@QAEHG@Z:NEAR			; SelectorDict::get
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_index$ = -4
?GetPropAddr@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddr, COMDAT

; 127  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 128  : 		int index = selectorDict()->get ( selector );

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?get@SelectorDict@@QAEHG@Z ; SelectorDict::get
  0001d	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 129  : 
; 130  : 		if ( index != -1 && !selectorDict()->script )

  00020	83 7d fc ff	 cmp	 DWORD PTR _index$[ebp], -1
  00024	74 2b		 je	 SHORT $L116894
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  0002e	33 c9		 xor	 ecx, ecx
  00030	66 8b 48 16	 mov	 cx, WORD PTR [eax+22]
  00034	85 c9		 test	 ecx, ecx
  00036	75 19		 jne	 SHORT $L116894

; 131  : 			return &(*this)[selectorDict()->offset]; 

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00040	33 d2		 xor	 edx, edx
  00042	66 8b 50 14	 mov	 dx, WORD PTR [eax+20]
  00046	52		 push	 edx
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??AObject@@QAEAAFH@Z	; Object::operator[]
  0004f	eb 02		 jmp	 SHORT $L116892
$L116894:

; 132  : 
; 133  : 		return 0;

  00051	33 c0		 xor	 eax, eax
$L116892:

; 134  : 	}

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?GetPropAddr@Object@@QAEPAFG@Z ENDP			; Object::GetPropAddr
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT
_this$ = -4
?selectorDict@Object@@QAEPAVSelectorDict@@XZ PROC NEAR	; Object::selectorDict, COMDAT

; 102  : 	SelectorDict *selectorDict ( void ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 		return _selectorDict;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 104  : 	};

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?selectorDict@Object@@QAEPAVSelectorDict@@XZ ENDP	; Object::selectorDict
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT
_index$ = 8
_this$ = -4
??AObject@@QAEAAFH@Z PROC NEAR				; Object::operator[], COMDAT

; 117  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 		//	get a reference to a property given the number of the property
; 119  : 		return ((Property*) this)[index];

  00007	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]

; 120  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??AObject@@QAEAAFH@Z ENDP				; Object::operator[]
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT
_this$ = -4
??CFakeObjectID@@QBEPAUObject@@XZ PROC NEAR		; FakeObjectID::operator->, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CFakeObjectID@@QBEPAUObject@@XZ ENDP			; FakeObjectID::operator->
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@G@Z			; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0ObjectID@@QAE@G@Z PROC NEAR				; ObjectID::ObjectID, COMDAT

; 230  : 	ObjectID(SOL_Handle h) : FakeObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@G@Z ; FakeObjectID::FakeObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0ObjectID@@QAE@G@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0FakeObjectID@@QAE@G@Z PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@G@Z ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
PUBLIC	?IsValid@MemID@@QBEHXZ				; MemID::IsValid
EXTRN	?GetMemType@MemID@@QBE?AW4MemType@@XZ:NEAR	; MemID::GetMemType
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsObject@ObjectID@@QBEHXZ PROC NEAR			; ObjectID::IsObject, COMDAT

; 247  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 248  : 		return IsValid() && GetMemType() == MemObject;

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?IsValid@MemID@@QBEHXZ	; MemID::IsValid
  00011	85 c0		 test	 eax, eax
  00013	74 16		 je	 SHORT $L159379
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetMemType@MemID@@QBE?AW4MemType@@XZ ; MemID::GetMemType
  0001d	83 f8 34	 cmp	 eax, 52			; 00000034H
  00020	75 09		 jne	 SHORT $L159379
  00022	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR -8+[ebp], 1
  00029	eb 07		 jmp	 SHORT $L159380
$L159379:
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L159380:
  00032	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 249  : 	}

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?IsObject@ObjectID@@QBEHXZ ENDP				; ObjectID::IsObject
_TEXT	ENDS
PUBLIC	?IsValid@MemoryMgr@@QAEHG@Z			; MemoryMgr::IsValid
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsValid@MemID@@QBEHXZ PROC NEAR			; MemID::IsValid, COMDAT

; 62   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 		return memMgr->IsValid(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?IsValid@MemoryMgr@@QAEHG@Z ; MemoryMgr::IsValid

; 64   : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?IsValid@MemID@@QBEHXZ ENDP				; MemID::IsValid
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -8
_tempID$ = -4
?IsValid@MemoryMgr@@QAEHG@Z PROC NEAR			; MemoryMgr::IsValid, COMDAT

; 475  : 	inline Bool MemoryMgr::IsValid(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 		unsigned short tempID = (unsigned short)theID;

  00009	66 8b 45 08	 mov	 ax, WORD PTR _theID$[ebp]
  0000d	66 89 45 fc	 mov	 WORD PTR _tempID$[ebp], ax

; 477  : 
; 478  : 		return(
; 479  : 				(tempID)															&&
; 480  : 				(tempID < maxDescriptors)									&&
; 481  : 				(desc[tempID].memInfo.bits.freeDescriptor == False)	&&
; 482  : 				(desc[tempID].memInfo.bits.freeMemory == False)
; 483  : 				);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00014	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 58		 je	 SHORT $L159383
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00021	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00027	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  0002d	73 47		 jae	 SHORT $L159383
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00032	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00038	c1 e1 04	 shl	 ecx, 4
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00041	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00044	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  00047	c1 f9 1f	 sar	 ecx, 31			; 0000001fH
  0004a	85 c9		 test	 ecx, ecx
  0004c	75 28		 jne	 SHORT $L159383
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00051	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00057	c1 e2 04	 shl	 edx, 4
  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00060	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00063	c1 e2 14	 shl	 edx, 20			; 00000014H
  00066	c1 fa 1f	 sar	 edx, 31			; 0000001fH
  00069	85 d2		 test	 edx, edx
  0006b	75 09		 jne	 SHORT $L159383
  0006d	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR -12+[ebp], 1
  00074	eb 07		 jmp	 SHORT $L159384
$L159383:
  00076	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L159384:
  0007d	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 484  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?IsValid@MemoryMgr@@QAEHG@Z ENDP			; MemoryMgr::IsValid
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@XZ				; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Object@@QAE@XZ PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 10   : 	CSCI_Object() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@XZ	; ObjectID::ObjectID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Object@@QAE@XZ ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@XZ				; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0ObjectID@@QAE@XZ PROC NEAR				; ObjectID::ObjectID, COMDAT

; 227  : 	ObjectID() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@XZ	; FakeObjectID::FakeObjectID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0ObjectID@@QAE@XZ ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@XZ				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0FakeObjectID@@QAE@XZ PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0FakeObjectID@@QAE@XZ ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0MemID@@QAE@XZ PROC NEAR				; MemID::MemID, COMDAT

; 15   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 c7 00 00 00	 mov	 WORD PTR [eax], 0

; 16   : 	}

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0MemID@@QAE@XZ ENDP					; MemID::MemID
_TEXT	ENDS
PUBLIC	?GetProperty@ObjectID@@QBEFG@Z			; ObjectID::GetProperty
;	COMDAT ?get_size@CSCI_Collection@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_size@CSCI_Collection@@QAEFXZ PROC NEAR		; CSCI_Collection::get_size, COMDAT

; 89   : 	Property get_size() { return GetProperty ( s_size ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 5a		 push	 90			; 0000005aH
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_size@CSCI_Collection@@QAEFXZ ENDP			; CSCI_Collection::get_size
_TEXT	ENDS
PUBLIC	?AssureValid@ObjectID@@QBEXXZ			; ObjectID::AssureValid
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@ObjectID@@QBEFG@Z PROC NEAR		; ObjectID::GetProperty, COMDAT

; 290  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  : 		//	get a property given a selector
; 292  : 		AssureValid();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?AssureValid@ObjectID@@QBEXXZ ; ObjectID::AssureValid

; 293  : 		return (*this)->GetProperty(selector);

  0000f	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty

; 294  : 	}

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetProperty@ObjectID@@QBEFG@Z ENDP			; ObjectID::GetProperty
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssureValid@ObjectID@@QBEXXZ PROC NEAR			; ObjectID::AssureValid, COMDAT

; 238  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 239  : 		if (!IsObject())

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  0000f	85 c0		 test	 eax, eax
  00011	75 1e		 jne	 SHORT $L117062

; 240  : 			msgMgr->Fatal(Msg_NotObject, (int) *this);

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0001b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00020	50		 push	 eax
  00021	6a 2f		 push	 47			; 0000002fH
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
$L117062:

; 241  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?AssureValid@ObjectID@@QBEXXZ ENDP			; ObjectID::AssureValid
_TEXT	ENDS
PUBLIC	??0CSCI_Collection@@QAE@XZ			; CSCI_Collection::CSCI_Collection
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_List@@QAE@XZ PROC NEAR				; CSCI_List::CSCI_List, COMDAT

; 114  : 	CSCI_List() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Collection@@QAE@XZ ; CSCI_Collection::CSCI_Collection
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_List@@QAE@XZ ENDP				; CSCI_List::CSCI_List
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Collection@@QAE@XZ PROC NEAR			; CSCI_Collection::CSCI_Collection, COMDAT

; 81   : 	CSCI_Collection() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@XZ	; CSCI_Object::CSCI_Object
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Collection@@QAE@XZ ENDP				; CSCI_Collection::CSCI_Collection
_TEXT	ENDS
PUBLIC	??0CSCI_Collection@@QAE@G@Z			; CSCI_Collection::CSCI_Collection
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_List@@QAE@G@Z PROC NEAR				; CSCI_List::CSCI_List, COMDAT

; 117  : 	CSCI_List(SOL_Handle h) : CSCI_Collection(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Collection@@QAE@G@Z ; CSCI_Collection::CSCI_Collection
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_List@@QAE@G@Z ENDP				; CSCI_List::CSCI_List
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@G@Z				; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Collection@@QAE@G@Z PROC NEAR			; CSCI_Collection::CSCI_Collection, COMDAT

; 84   : 	CSCI_Collection(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Collection@@QAE@G@Z ENDP			; CSCI_Collection::CSCI_Collection
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Object@@QAE@G@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 13   : 	CSCI_Object(SOL_Handle h) : ObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@G@Z ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
;	COMDAT ?get_view@CSCI_BitMap@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_view@CSCI_BitMap@@QAEFXZ PROC NEAR			; CSCI_BitMap::get_view, COMDAT

; 1390 : 	Property get_view() { return GetProperty ( s_view ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 0e		 push	 14			; 0000000eH
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_view@CSCI_BitMap@@QAEFXZ ENDP			; CSCI_BitMap::get_view
_TEXT	ENDS
;	COMDAT ?get_loop@CSCI_BitMap@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_loop@CSCI_BitMap@@QAEFXZ PROC NEAR			; CSCI_BitMap::get_loop, COMDAT

; 1393 : 	Property get_loop() { return GetProperty ( s_loop ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 0f		 push	 15			; 0000000fH
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_loop@CSCI_BitMap@@QAEFXZ ENDP			; CSCI_BitMap::get_loop
_TEXT	ENDS
;	COMDAT ?get_pCombatGroup@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pCombatGroup@CSCI_WorldObject@@QAEFXZ PROC NEAR	; CSCI_WorldObject::get_pCombatGroup, COMDAT

; 4665 : 	Property get_pCombatGroup() { return GetProperty ( s_pCombatGroup ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 fb 02 00 00	 push	 763			; 000002fbH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pCombatGroup@CSCI_WorldObject@@QAEFXZ ENDP		; CSCI_WorldObject::get_pCombatGroup
_TEXT	ENDS
PUBLIC	??0CSCI_WorldActor@@QAE@G@Z			; CSCI_WorldActor::CSCI_WorldActor
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldEgo@@QAE@G@Z PROC NEAR			; CSCI_WorldEgo::CSCI_WorldEgo, COMDAT

; 5038 : 	CSCI_WorldEgo(SOL_Handle h) : CSCI_WorldActor(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldActor@@QAE@G@Z ; CSCI_WorldActor::CSCI_WorldActor
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldEgo@@QAE@G@Z ENDP				; CSCI_WorldEgo::CSCI_WorldEgo
_TEXT	ENDS
PUBLIC	??0CSCI_WorldObject@@QAE@G@Z			; CSCI_WorldObject::CSCI_WorldObject
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldActor@@QAE@G@Z PROC NEAR			; CSCI_WorldActor::CSCI_WorldActor, COMDAT

; 4932 : 	CSCI_WorldActor(SOL_Handle h) : CSCI_WorldObject(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@G@Z ; CSCI_WorldObject::CSCI_WorldObject
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldActor@@QAE@G@Z ENDP			; CSCI_WorldActor::CSCI_WorldActor
_TEXT	ENDS
PUBLIC	??0CSCI_Actor@@QAE@G@Z				; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldObject@@QAE@G@Z PROC NEAR			; CSCI_WorldObject::CSCI_WorldObject, COMDAT

; 4475 : 	CSCI_WorldObject(SOL_Handle h) : CSCI_Actor(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@G@Z	; CSCI_Actor::CSCI_Actor
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@G@Z ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@G@Z				; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@G@Z PROC NEAR			; CSCI_Actor::CSCI_Actor, COMDAT

; 1596 : 	CSCI_Actor(SOL_Handle h) : CSCI_Prop(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@G@Z	; CSCI_Prop::CSCI_Prop
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@G@Z ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@G@Z				; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@G@Z PROC NEAR				; CSCI_Prop::CSCI_Prop, COMDAT

; 1560 : 	CSCI_Prop(SOL_Handle h) : CSCI_View(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@G@Z	; CSCI_View::CSCI_View
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@G@Z ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@G@Z			; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_View@@QAE@G@Z PROC NEAR				; CSCI_View::CSCI_View, COMDAT

; 1515 : 	CSCI_View(SOL_Handle h) : CSCI_Feature(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@G@Z ; CSCI_Feature::CSCI_Feature
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_View@@QAE@G@Z ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@G@Z				; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@G@Z PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT

; 1437 : 	CSCI_Feature(SOL_Handle h) : CSCI_BitMap(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@G@Z	; CSCI_BitMap::CSCI_BitMap
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@G@Z ENDP				; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@G@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@G@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT

; 1358 : 	CSCI_BitMap(SOL_Handle h) : CSCI_Rectangle(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@G@Z ; CSCI_Rectangle::CSCI_Rectangle
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@G@Z ENDP				; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@G@Z PROC NEAR			; CSCI_Rectangle::CSCI_Rectangle, COMDAT

; 517  : 	CSCI_Rectangle(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@G@Z ENDP				; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@XZ				; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Spell@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Spell@@QAE@XZ PROC NEAR				; CSCI_Spell::CSCI_Spell, COMDAT

; 6322 : 	CSCI_Spell() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@XZ	; CSCI_BitMap::CSCI_BitMap
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Spell@@QAE@XZ ENDP				; CSCI_Spell::CSCI_Spell
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@XZ			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_BitMap@@QAE@XZ PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT

; 1355 : 	CSCI_BitMap() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@XZ ; CSCI_Rectangle::CSCI_Rectangle
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_BitMap@@QAE@XZ ENDP				; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Rectangle@@QAE@XZ PROC NEAR			; CSCI_Rectangle::CSCI_Rectangle, COMDAT

; 514  : 	CSCI_Rectangle() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@XZ	; CSCI_Object::CSCI_Object
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Rectangle@@QAE@XZ ENDP				; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@ABVMemID@@@Z		; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Spell@@QAE@ABVObjectID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_Spell@@QAE@ABVObjectID@@@Z PROC NEAR		; CSCI_Spell::CSCI_Spell, COMDAT

; 6324 : 	CSCI_Spell(const ObjectID& id) : CSCI_BitMap((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@ABVMemID@@@Z ; CSCI_BitMap::CSCI_BitMap
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Spell@@QAE@ABVObjectID@@@Z ENDP			; CSCI_Spell::CSCI_Spell
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@ABVMemID@@@Z		; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_BitMap::CSCI_BitMap, COMDAT

; 1356 : 	CSCI_BitMap(const MemID& id) : CSCI_Rectangle(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z ; CSCI_Rectangle::CSCI_Rectangle
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@ABVMemID@@@Z ENDP			; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@ABVMemID@@@Z		; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_Rectangle::CSCI_Rectangle, COMDAT

; 515  : 	CSCI_Rectangle(const MemID& id) : CSCI_Object(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABVMemID@@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@ABVMemID@@@Z ENDP		; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@ABVMemID@@@Z			; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABVMemID@@@Z PROC NEAR		; CSCI_Object::CSCI_Object, COMDAT

; 11   : 	CSCI_Object(const MemID& id) : ObjectID(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABVMemID@@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABVMemID@@@Z ENDP			; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@ABVMemID@@@Z		; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABVMemID@@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 228  : 	ObjectID(const MemID& id) : FakeObjectID(id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABVMemID@@@Z ENDP			; ObjectID::ObjectID
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeObjectID@@QAE@ABVMemID@@@Z PROC NEAR		; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@ABVMemID@@@Z ENDP			; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0CSCI_Spell@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Spell@@QAE@G@Z PROC NEAR			; CSCI_Spell::CSCI_Spell, COMDAT

; 6325 : 	CSCI_Spell(SOL_Handle h) : CSCI_BitMap(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@G@Z	; CSCI_BitMap::CSCI_BitMap
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Spell@@QAE@G@Z ENDP				; CSCI_Spell::CSCI_Spell
_TEXT	ENDS
;	COMDAT ?get_pID@CSCI_Spell@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pID@CSCI_Spell@@QAEFXZ PROC NEAR			; CSCI_Spell::get_pID, COMDAT

; 6327 : 	Property get_pID() { return GetProperty ( s_pID ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 21 03 00 00	 push	 801			; 00000321H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pID@CSCI_Spell@@QAEFXZ ENDP			; CSCI_Spell::get_pID
_TEXT	ENDS
;	COMDAT ?get_pText@CSCI_Spell@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pText@CSCI_Spell@@QAEFXZ PROC NEAR			; CSCI_Spell::get_pText, COMDAT

; 6330 : 	Property get_pText() { return GetProperty ( s_pText ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 fc 02 00 00	 push	 764			; 000002fcH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pText@CSCI_Spell@@QAEFXZ ENDP			; CSCI_Spell::get_pText
_TEXT	ENDS
;	COMDAT ?get_pCost@CSCI_Spell@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pCost@CSCI_Spell@@QAEFXZ PROC NEAR			; CSCI_Spell::get_pCost, COMDAT

; 6360 : 	Property get_pCost() { return GetProperty ( s_pCost ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 2d 06 00 00	 push	 1581			; 0000062dH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pCost@CSCI_Spell@@QAEFXZ ENDP			; CSCI_Spell::get_pCost
_TEXT	ENDS
;	COMDAT ?get_pIcon@CSCI_Spell@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pIcon@CSCI_Spell@@QAEFXZ PROC NEAR			; CSCI_Spell::get_pIcon, COMDAT

; 6363 : 	Property get_pIcon() { return GetProperty ( s_pIcon ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 2e 06 00 00	 push	 1582			; 0000062eH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pIcon@CSCI_Spell@@QAEFXZ ENDP			; CSCI_Spell::get_pIcon
_TEXT	ENDS
;	COMDAT ?GetGlobal@PMachine@@QAEFH@Z
_TEXT	SEGMENT
_nGlobal$ = 8
_this$ = -4
?GetGlobal@PMachine@@QAEFH@Z PROC NEAR			; PMachine::GetGlobal, COMDAT

; 74   : 	Property	GetGlobal( int nGlobal ) { return GlobalPtr[ nGlobal ]; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0000d	8b 55 08	 mov	 edx, DWORD PTR _nGlobal$[ebp]
  00010	66 8b 04 51	 mov	 ax, WORD PTR [ecx+edx*2]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?GetGlobal@PMachine@@QAEFH@Z ENDP			; PMachine::GetGlobal
_TEXT	ENDS
PUBLIC	??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z	; std::bitset<6>::reference::operator=
PUBLIC	??A?$bitset@$05@std@@QAE?AVreference@01@I@Z	; std::bitset<6>::operator[]
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_bValue$ = 8
$T159425 = -8
_this$ = -12
?SetTransient@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetTransient, COMDAT

; 150  : 	void SetTransient ( bool bValue ) { m_state[sknWndTransient] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 04		 push	 4
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T159425[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetTransient@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetTransient
_TEXT	ENDS
PUBLIC	??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z	; std::bitset<6>::reference::reference
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
__P$ = 12
___$ReturnUdt$ = 8
_this$ = -12
$T159427 = -8
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z PROC NEAR	; std::bitset<6>::operator[], COMDAT

; 54   : 		{return (reference(*this, _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	8d 4d f8	 lea	 ecx, DWORD PTR $T159427[ebp]
  00014	e8 00 00 00 00	 call	 ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ; std::bitset<6>::reference::reference
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx
  00023	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ENDP	; std::bitset<6>::operator[]
_TEXT	ENDS
PUBLIC	?set@?$bitset@$05@std@@QAEAAV12@I_N@Z		; std::bitset<6>::set
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z PROC NEAR	; std::bitset<6>::reference::operator=, COMDAT

; 24   : 			{_Pbs->set(_Off, _X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8a 45 08	 mov	 al, BYTE PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ; std::bitset<6>::set

; 25   : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ENDP	; std::bitset<6>::reference::operator=
_TEXT	ENDS
PUBLIC	?_Xran@?$bitset@$05@std@@ABEXXZ			; std::bitset<6>::_Xran
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT
__P$ = 8
__X$ = 12
_this$ = -4
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z PROC NEAR		; std::bitset<6>::set, COMDAT

; 119  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 06	 cmp	 DWORD PTR __P$[ebp], 6
  0000c	72 08		 jb	 SHORT $L155403

; 120  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$05@std@@ABEXXZ ; std::bitset<6>::_Xran
$L155403:

; 121  : 		if (_X)

  00016	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 31		 je	 SHORT $L155404

; 122  : 			_A[_P / _Nb] |= (_Ty)1 << _P % _Nb;

  00022	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00025	c1 ee 05	 shr	 esi, 5
  00028	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002b	33 d2		 xor	 edx, edx
  0002d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00032	f7 f1		 div	 ecx
  00034	8b ca		 mov	 ecx, edx
  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	d3 e2		 shl	 edx, cl
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00043	0b ca		 or	 ecx, edx
  00045	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00048	c1 ea 05	 shr	 edx, 5
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 123  : 		else

  00051	eb 31		 jmp	 SHORT $L155406
$L155404:

; 124  : 			_A[_P / _Nb] &= ~((_Ty)1 << _P % _Nb);

  00053	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00056	c1 ee 05	 shr	 esi, 5
  00059	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0005c	33 d2		 xor	 edx, edx
  0005e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00063	f7 f1		 div	 ecx
  00065	8b ca		 mov	 ecx, edx
  00067	ba 01 00 00 00	 mov	 edx, 1
  0006c	d3 e2		 shl	 edx, cl
  0006e	f7 d2		 not	 edx
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00076	23 ca		 and	 ecx, edx
  00078	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0007b	c1 ea 05	 shr	 edx, 5
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx
$L155406:

; 125  : 		return (*this); }

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ENDP		; std::bitset<6>::set
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT
__X$ = 8
__P$ = 12
_this$ = -4
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z PROC NEAR	; std::bitset<6>::reference::reference, COMDAT

; 37   : 		reference(bitset<_N>& _X, size_t _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ENDP	; std::bitset<6>::reference::reference
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\bitset
xdata$x	SEGMENT
$T159437 DD	019930520H
	DD	01H
	DD	FLAT:$T159439
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159439 DD	0ffffffffH
	DD	FLAT:$L159435
xdata$x	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT
_this$ = -64
$T159432 = -40
$T159433 = -56
$T159434 = -60
__$EHRec$ = -12
?_Xran@?$bitset@$05@std@@ABEXXZ PROC NEAR		; std::bitset<6>::_Xran, COMDAT

; 250  : 		{_THROW(out_of_range, "invalid bitset<N> position"); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L159438
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 c4	 lea	 eax, DWORD PTR $T159434[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
  00027	8d 4d c8	 lea	 ecx, DWORD PTR $T159433[ebp]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8d 4d c8	 lea	 ecx, DWORD PTR $T159433[ebp]
  0003a	51		 push	 ecx
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T159432[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00044	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00049	8d 55 d8	 lea	 edx, DWORD PTR $T159432[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$L155746:
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159435:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T159433[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00009	c3		 ret	 0
$L159438:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159437
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$bitset@$05@std@@ABEXXZ ENDP			; std::bitset<6>::_Xran
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Next, COMDAT

; 275  : 	virtual void Next ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Next
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Previous, COMDAT

; 276  : 	virtual void Previous ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Previous
_TEXT	ENDS
PUBLIC	??1CelObj@@UAE@XZ				; CelObj::~CelObj
;	COMDAT ??1CelObjView@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CelObjView@@UAE@XZ PROC NEAR				; CelObjView::~CelObjView, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CelObj@@UAE@XZ	; CelObj::~CelObj
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CelObjView@@UAE@XZ ENDP				; CelObjView::~CelObjView
_TEXT	ENDS
PUBLIC	??_7CelObj@@6B@					; CelObj::`vftable'
PUBLIC	??_GCelObj@@UAEPAXI@Z				; CelObj::`scalar deleting destructor'
PUBLIC	??_ECelObj@@UAEPAXI@Z				; CelObj::`vector deleting destructor'
EXTRN	__purecall:NEAR
EXTRN	?ReadPix@CelObj@@UAEEHHH@Z:NEAR			; CelObj::ReadPix
;	COMDAT ??_7CelObj@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\CelObj.hpp
CONST	SEGMENT
??_7CelObj@@6B@ DD FLAT:??_ECelObj@@UAEPAXI@Z		; CelObj::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?ReadPix@CelObj@@UAEEHHH@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??1CelObj@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CelObj@@UAE@XZ PROC NEAR				; CelObj::~CelObj, COMDAT

; 173  : 	virtual	~CelObj()  {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CelObj@@6B@ ; CelObj::`vftable'
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??1CelObj@@UAE@XZ ENDP					; CelObj::~CelObj
_TEXT	ENDS
;	COMDAT ??_GCelObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCelObj@@UAEPAXI@Z PROC NEAR				; CelObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CelObj@@UAE@XZ	; CelObj::~CelObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L144512
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L144512:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCelObj@@UAEPAXI@Z ENDP				; CelObj::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT
_this$ = -4
?GetItemBGColor@CSkinListCtrl@@MAEKH@Z PROC NEAR	; CSkinListCtrl::GetItemBGColor, COMDAT

; 91   : 	virtual COLORREF GetItemBGColor( int nItem ) { return colItemBG; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?GetItemBGColor@CSkinListCtrl@@MAEKH@Z ENDP		; CSkinListCtrl::GetItemBGColor
_TEXT	ENDS
;	COMDAT ?GetSpell@CSpellDraggable@@QAE?AVCSCI_Spell@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -4
?GetSpell@CSpellDraggable@@QAE?AVCSCI_Spell@@XZ PROC NEAR ; CSpellDraggable::GetSpell, COMDAT

; 61   : 	CSCI_Spell GetSpell ( void ) { return m_hSpell; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 c0 10	 add	 eax, 16			; 00000010H
  0000d	50		 push	 eax
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CSCI_Spell@@QAE@ABV0@@Z ; CSCI_Spell::CSCI_Spell
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?GetSpell@CSpellDraggable@@QAE?AVCSCI_Spell@@XZ ENDP	; CSpellDraggable::GetSpell
_TEXT	ENDS
;	COMDAT ?GetIndex@CSpellDraggable@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetIndex@CSpellDraggable@@QAEHXZ PROC NEAR		; CSpellDraggable::GetIndex, COMDAT

; 64   : 	int GetIndex() { return m_nIndex; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetIndex@CSpellDraggable@@QAEHXZ ENDP			; CSpellDraggable::GetIndex
_TEXT	ENDS
;	COMDAT ?GetList@CSpellDraggable@@QAEPAVCSpellListCtrl@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetList@CSpellDraggable@@QAEPAVCSpellListCtrl@@XZ PROC NEAR ; CSpellDraggable::GetList, COMDAT

; 67   : 	CSpellListCtrl* GetList ( void ) { return m_pList; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetList@CSpellDraggable@@QAEPAVCSpellListCtrl@@XZ ENDP	; CSpellDraggable::GetList
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@ABV0@@Z			; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Spell@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Spell@@QAE@ABV0@@Z PROC NEAR			; CSCI_Spell::CSCI_Spell, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@ABV0@@Z ; CSCI_BitMap::CSCI_BitMap
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Spell@@QAE@ABV0@@Z ENDP				; CSCI_Spell::CSCI_Spell
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@ABV0@@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@ABV0@@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@ABV0@@Z ; CSCI_Rectangle::CSCI_Rectangle
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@ABV0@@Z ENDP			; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@ABV0@@Z			; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_Rectangle@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@ABV0@@Z PROC NEAR		; CSCI_Rectangle::CSCI_Rectangle, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@ABV0@@Z ENDP			; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@ABV0@@Z			; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABV0@@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABV0@@Z ENDP			; CSCI_Object::CSCI_Object
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABV0@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 229  : 	ObjectID(const ObjectID& id) : FakeObjectID((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABV0@@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
EXTRN	??1CDropTarget@@UAE@XZ:NEAR			; CDropTarget::~CDropTarget
;	COMDAT xdata$x
; File C:\Documents and Settings\don\Desktop\sciw\Interp\SpellDlg.hpp
xdata$x	SEGMENT
$T159465 DD	019930520H
	DD	01H
	DD	FLAT:$T159467
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T159467 DD	0ffffffffH
	DD	FLAT:$L159460
xdata$x	ENDS
;	COMDAT ??1CSpellListCtrl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??1CSpellListCtrl@@UAE@XZ PROC NEAR			; CSpellListCtrl::~CSpellListCtrl, COMDAT

; 84   : 	virtual ~CSpellListCtrl() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L159466
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSpellListCtrl@@6BCListCtrl@@@ ; CSpellListCtrl::`vftable'
  00027	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CSpellListCtrl@@6BCSkinCtrl@@@ ; CSpellListCtrl::`vftable'
  00031	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00034	c7 42 54 00 00
	00 00		 mov	 DWORD PTR [edx+84], OFFSET FLAT:??_7CSpellListCtrl@@6BCScrollable@@@ ; CSpellListCtrl::`vftable'
  0003b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CSpellListCtrl@@6BCMouseWheelable@@@ ; CSpellListCtrl::`vftable'
  00045	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	c7 81 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+180], OFFSET FLAT:??_7CSpellListCtrl@@6B@ ; CSpellListCtrl::`vftable'
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00059	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  0005d	74 0e		 je	 SHORT $L159458
  0005f	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00062	81 c2 b4 00 00
	00		 add	 edx, 180		; 000000b4H
  00068	89 55 ec	 mov	 DWORD PTR -20+[ebp], edx
  0006b	eb 07		 jmp	 SHORT $L159459
$L159458:
  0006d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR -20+[ebp], 0
$L159459:
  00074	8b 4d ec	 mov	 ecx, DWORD PTR -20+[ebp]
  00077	e8 00 00 00 00	 call	 ??1CDropTarget@@UAE@XZ	; CDropTarget::~CDropTarget
  0007c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00083	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ??1CSkinListCtrl@@UAE@XZ ; CSkinListCtrl::~CSkinListCtrl
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159460:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinListCtrl@@UAE@XZ ; CSkinListCtrl::~CSkinListCtrl
  00008	c3		 ret	 0
$L159466:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159465
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CSpellListCtrl@@UAE@XZ ENDP				; CSpellListCtrl::~CSpellListCtrl
;	COMDAT ?IsFavorite@CSpellListCtrl@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4
?IsFavorite@CSpellListCtrl@@QAE_NXZ PROC NEAR		; CSpellListCtrl::IsFavorite, COMDAT

; 92   : 	bool IsFavorite() { return m_bFavorites; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	33 c9		 xor	 ecx, ecx
  0000c	83 b8 bc 00 00
	00 00		 cmp	 DWORD PTR [eax+188], 0
  00013	0f 95 c1	 setne	 cl
  00016	8a c1		 mov	 al, cl
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?IsFavorite@CSpellListCtrl@@QAE_NXZ ENDP		; CSpellListCtrl::IsFavorite
_TEXT	ENDS
;	COMDAT ??_GCSpellListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSpellListCtrl@@UAEPAXI@Z PROC NEAR			; CSpellListCtrl::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSpellListCtrl@@UAE@XZ ; CSpellListCtrl::~CSpellListCtrl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L150023
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L150023:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCSpellListCtrl@@UAEPAXI@Z ENDP			; CSpellListCtrl::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?PutByte@CPackedData@@QAEXE@Z			; CPackedData::PutByte
;	COMDAT ?PutLong@CPackedData@@QAEXH@Z
_TEXT	SEGMENT
_nValue$ = 8
_this$ = -4
?PutLong@CPackedData@@QAEXH@Z PROC NEAR			; CPackedData::PutLong, COMDAT

; 175  : 	inline void PutLong ( int nValue ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 176  : 		if ( !this )

  00007	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000b	75 02		 jne	 SHORT $L151728

; 177  : 			return;

  0000d	eb 4f		 jmp	 SHORT $L151727
$L151728:

; 178  : 
; 179  : 		PutByte ( (nValue & 0x000000FF) );	

  0000f	8b 45 08	 mov	 eax, DWORD PTR _nValue$[ebp]
  00012	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00017	50		 push	 eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte

; 180  : 		PutByte ( (nValue & 0x0000FF00) >> 8 );

  00020	8b 4d 08	 mov	 ecx, DWORD PTR _nValue$[ebp]
  00023	81 e1 00 ff 00
	00		 and	 ecx, 65280		; 0000ff00H
  00029	c1 f9 08	 sar	 ecx, 8
  0002c	51		 push	 ecx
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte

; 181  : 		PutByte ( (nValue & 0x00FF0000) >> 16 );

  00035	8b 55 08	 mov	 edx, DWORD PTR _nValue$[ebp]
  00038	81 e2 00 00 ff
	00		 and	 edx, 16711680		; 00ff0000H
  0003e	c1 fa 10	 sar	 edx, 16			; 00000010H
  00041	52		 push	 edx
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte

; 182  : 		PutByte ( (nValue & 0xFF000000) >> 24 );

  0004a	8b 45 08	 mov	 eax, DWORD PTR _nValue$[ebp]
  0004d	25 00 00 00 ff	 and	 eax, -16777216		; ff000000H
  00052	c1 e8 18	 shr	 eax, 24			; 00000018H
  00055	50		 push	 eax
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?PutByte@CPackedData@@QAEXE@Z ; CPackedData::PutByte
$L151727:

; 183  : 	};

  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
?PutLong@CPackedData@@QAEXH@Z ENDP			; CPackedData::PutLong
_TEXT	ENDS
PUBLIC	?CheckBounds@OCArray@@IAEXH@Z			; OCArray::CheckBounds
;	COMDAT ?PutByte@CPackedData@@QAEXE@Z
_TEXT	SEGMENT
_cValue$ = 8
_this$ = -4
?PutByte@CPackedData@@QAEXE@Z PROC NEAR			; CPackedData::PutByte, COMDAT

; 99   : 	inline void PutByte ( unsigned char cValue ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 100  : 		if ( !this )

  00007	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000b	75 02		 jne	 SHORT $L151700

; 101  : 			return;

  0000d	eb 36		 jmp	 SHORT $L151699
$L151700:

; 102  : 
; 103  : 		CheckBounds ( m_nPutIndex + 1 );

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00015	83 c1 01	 add	 ecx, 1
  00018	51		 push	 ecx
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 04	 add	 ecx, 4
  0001f	e8 00 00 00 00	 call	 ?CheckBounds@OCArray@@IAEXH@Z ; OCArray::CheckBounds

; 104  : 		m_pData[m_nPutIndex++] = cValue;

  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00030	8a 4d 08	 mov	 cl, BYTE PTR _cValue$[ebp]
  00033	88 0c 10	 mov	 BYTE PTR [eax+edx], cl
  00036	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00039	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0003c	83 c0 01	 add	 eax, 1
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$L151699:

; 105  : 	};

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?PutByte@CPackedData@@QAEXE@Z ENDP			; CPackedData::PutByte
_TEXT	ENDS
EXTRN	?Grow@OCArray@@IAEXH@Z:NEAR			; OCArray::Grow
;	COMDAT ?CheckBounds@OCArray@@IAEXH@Z
_TEXT	SEGMENT
_nIndex$ = 8
_this$ = -4
?CheckBounds@OCArray@@IAEXH@Z PROC NEAR			; OCArray::CheckBounds, COMDAT

; 41   : 	inline void CheckBounds ( int nIndex ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 		if ( nIndex >= m_nActualSize )

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0000d	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00010	7c 17		 jl	 SHORT $L151592

; 43   : 			Grow ( (nIndex - m_nActualSize) + _ARRAY_GROW_SIZE );

  00012	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00015	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00018	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  0001b	05 10 27 00 00	 add	 eax, 10000		; 00002710H
  00020	50		 push	 eax
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?Grow@OCArray@@IAEXH@Z	; OCArray::Grow
$L151592:

; 44   : 
; 45   : 		if ( nIndex >= m_nSize )

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  0002f	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  00032	7c 0c		 jl	 SHORT $L151593

; 46   : 			m_nSize = nIndex + 1;

  00034	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00037	83 c0 01	 add	 eax, 1
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$L151593:

; 47   : 	};

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?CheckBounds@OCArray@@IAEXH@Z ENDP			; OCArray::CheckBounds
_TEXT	ENDS
PUBLIC	?Data@OCArray@@QAEPAEXZ				; OCArray::Data
EXTRN	_memcpy:NEAR
;	COMDAT ?PutArray@CPackedData@@QAEXPAXH@Z
_TEXT	SEGMENT
_pPtr$ = 8
_nSize$ = 12
_this$ = -4
?PutArray@CPackedData@@QAEXPAXH@Z PROC NEAR		; CPackedData::PutArray, COMDAT

; 256  : 	inline void PutArray ( void *pPtr, int nSize ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 257  : 		if ( !this )

  00007	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000b	75 02		 jne	 SHORT $L151757

; 258  : 			return;

  0000d	eb 46		 jmp	 SHORT $L151756
$L151757:

; 259  : 
; 260  : 		CheckBounds ( m_nPutIndex + nSize );

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00015	03 4d 0c	 add	 ecx, DWORD PTR _nSize$[ebp]
  00018	51		 push	 ecx
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 04	 add	 ecx, 4
  0001f	e8 00 00 00 00	 call	 ?CheckBounds@OCArray@@IAEXH@Z ; OCArray::CheckBounds

; 261  : 		memcpy ( Data() + m_nPutIndex, pPtr, nSize );

  00024	8b 55 0c	 mov	 edx, DWORD PTR _nSize$[ebp]
  00027	52		 push	 edx
  00028	8b 45 08	 mov	 eax, DWORD PTR _pPtr$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 04	 add	 ecx, 4
  00032	e8 00 00 00 00	 call	 ?Data@OCArray@@QAEPAEXZ	; OCArray::Data
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	03 41 18	 add	 eax, DWORD PTR [ecx+24]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 _memcpy
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH

; 262  : 
; 263  : 		m_nPutIndex += nSize;

  00046	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00049	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0004c	03 45 0c	 add	 eax, DWORD PTR _nSize$[ebp]
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$L151756:

; 264  : 	};

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
?PutArray@CPackedData@@QAEXPAXH@Z ENDP			; CPackedData::PutArray
_TEXT	ENDS
;	COMDAT ?Data@OCArray@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4
?Data@OCArray@@QAEPAEXZ PROC NEAR			; OCArray::Data, COMDAT

; 56   : 	inline unsigned char *Data ( void ) { return m_pData; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?Data@OCArray@@QAEPAEXZ ENDP				; OCArray::Data
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT
??_ECSpellListCtrl@@WEA@AEPAXI@Z PROC NEAR		; CSpellListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 40	 sub	 ecx, 64			; 00000040H
  00003	e9 00 00 00 00	 jmp	 ??_ECSpellListCtrl@@UAEPAXI@Z ; CSpellListCtrl::`vector deleting destructor'
??_ECSpellListCtrl@@WEA@AEPAXI@Z ENDP			; CSpellListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECSpellListCtrl@@WHE@AEPAXI@Z PROC NEAR		; CSpellListCtrl::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECSpellListCtrl@@UAEPAXI@Z ; CSpellListCtrl::`vector deleting destructor'
??_ECSpellListCtrl@@WHE@AEPAXI@Z ENDP			; CSpellListCtrl::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WLE@AEPAXI@Z
_TEXT	SEGMENT
??_ECSpellListCtrl@@WLE@AEPAXI@Z PROC NEAR		; CSpellListCtrl::`vector deleting destructor', COMDAT
  00000	81 e9 b4 00 00
	00		 sub	 ecx, 180		; 000000b4H
  00006	e9 00 00 00 00	 jmp	 ??_ECSpellListCtrl@@UAEPAXI@Z ; CSpellListCtrl::`vector deleting destructor'
??_ECSpellListCtrl@@WLE@AEPAXI@Z ENDP			; CSpellListCtrl::`vector deleting destructor'
_TEXT	ENDS
END
