	TITLE	C:\Documents and Settings\don\Desktop\sciw\Interp\inventorydlg.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CImageList@@QAEHPAUHICON__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeSOL_ListID@@QBEPAVSOL_List@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DStringID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BContainer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BContainer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pContents@CSCI_BContainer@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pIsWorn@CSCI_BWearable@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGlobal@PMachine@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPBI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Zconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Mconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Miterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@Vconst_iterator@12@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@_NV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nw@?$vector@_NV?$allocator@I@std@@@std@@KAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$vector@_NV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@_NV?$allocator@I@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFastScrollCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCInventoryDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_ListID@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BHead@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWeapon@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCFastScrollCtrl@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEAAPAVCFastScrollCtrl@@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@ABV?$allocator@PAVCInventoryDlg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEAAPAVCInventoryDlg@@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEIABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@ABV?$allocator@PAVCInventoryDlg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?remove@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEAAPAVCInventoryDlg@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCFastScrollCtrl@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCFastScrollCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@_NABV?$allocator@PAVCInventoryDlg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEIABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABVCSCI_WorldObject@@ABQAVCInventoryDlg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCInventoryDlg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAVCInventoryDlg@@PAU_Node@23@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCFastScrollCtrl@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@PAVCInventoryDlg@@@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@ABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@2@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QBEABVCSCI_WorldObject@@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@PAVCFastScrollCtrl@@@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@ABU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@ABU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAPAVCInventoryDlg@@ABQAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCInventoryDlg@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@ABU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@ABU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFastScrollCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CInventoryDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCA, CRT$XCU, CRT$XCL, CRT$XCC, CRT$XCZ, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?m_objMap@CInventoryDlg@@1V?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@A ; CInventoryDlg::m_objMap
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	?m_luggageList@CInventoryDlg@@1V?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@A ; CInventoryDlg::m_luggageList
PUBLIC	?m_nMaxLuggageCount@CInventoryDlg@@1HA		; CInventoryDlg::m_nMaxLuggageCount
PUBLIC	?m_HandleMap@CFastScrollCtrl@@2V?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@A ; CFastScrollCtrl::m_HandleMap
PUBLIC	_IID_IInternalConnection
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_LIBID_ATLLib
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
_BSS	SEGMENT
?m_objMap@CInventoryDlg@@1V?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@A DB 010H DUP (?) ; CInventoryDlg::m_objMap
?m_luggageList@CInventoryDlg@@1V?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@A DB 0cH DUP (?) ; CInventoryDlg::m_luggageList
?m_HandleMap@CFastScrollCtrl@@2V?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@A DB 010H DUP (?) ; CFastScrollCtrl::m_HandleMap
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
CRT$XCU	SEGMENT
_$S335	DD	FLAT:_$E334
_$S341	DD	FLAT:_$E340
_$S347	DD	FLAT:_$E346
CRT$XCU	ENDS
_DATA	SEGMENT
?m_nMaxLuggageCount@CInventoryDlg@@1HA DD 03H		; CInventoryDlg::m_nMaxLuggageCount
_DATA	ENDS
_TEXT	SEGMENT
_$E334	PROC NEAR
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 _$E330
  00008	e8 00 00 00 00	 call	 _$E333
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
_$E334	ENDP
_TEXT	ENDS
PUBLIC	??0?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCFastScrollCtrl@@@1@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
_TEXT	SEGMENT
$T160681 = -4
$T160682 = -8
_$E330	PROC NEAR

; 22   : map<CSkinObj, CFastScrollCtrl *> CFastScrollCtrl::m_HandleMap;

  0000f	55		 push	 ebp
  00010	8b ec		 mov	 ebp, esp
  00012	83 ec 08	 sub	 esp, 8
  00015	8d 45 fc	 lea	 eax, DWORD PTR $T160681[ebp]
  00018	50		 push	 eax
  00019	8d 4d f8	 lea	 ecx, DWORD PTR $T160682[ebp]
  0001c	51		 push	 ecx
  0001d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_HandleMap@CFastScrollCtrl@@2V?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@A
  00022	e8 00 00 00 00	 call	 ??0?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCFastScrollCtrl@@@1@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_$E330	ENDP
_TEXT	ENDS
EXTRN	_atexit:NEAR
_TEXT	SEGMENT
_$E333	PROC NEAR
  0002b	55		 push	 ebp
  0002c	8b ec		 mov	 ebp, esp
  0002e	68 00 00 00 00	 push	 OFFSET FLAT:_$E331
  00033	e8 00 00 00 00	 call	 _atexit
  00038	83 c4 04	 add	 esp, 4
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_$E333	ENDP
_TEXT	ENDS
PUBLIC	??1?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@XZ ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::~map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
_BSS	SEGMENT
_$S332	DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_$E331	PROC NEAR
  0003d	55		 push	 ebp
  0003e	8b ec		 mov	 ebp, esp
  00040	33 c0		 xor	 eax, eax
  00042	a0 00 00 00 00	 mov	 al, BYTE PTR _$S332
  00047	83 e0 01	 and	 eax, 1
  0004a	85 c0		 test	 eax, eax
  0004c	75 19		 jne	 SHORT $L153370
  0004e	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR _$S332
  00054	80 c9 01	 or	 cl, 1
  00057	88 0d 00 00 00
	00		 mov	 BYTE PTR _$S332, cl
  0005d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_HandleMap@CFastScrollCtrl@@2V?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@A
  00062	e8 00 00 00 00	 call	 ??1?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@XZ ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::~map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
$L153370:
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_$E331	ENDP
_TEXT	ENDS
PUBLIC	??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::~_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
;	COMDAT ??1?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@XZ PROC NEAR ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::~map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::~_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@XZ ENDP ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::~map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
_TEXT	ENDS
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
PUBLIC	??A?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEAAPAVCFastScrollCtrl@@ABVCSkinObj@@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::operator[]
PUBLIC	??0CFastScrollCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ; CFastScrollCtrl::CFastScrollCtrl
PUBLIC	?Refresh@CFastScrollCtrl@@UAEXXZ		; CFastScrollCtrl::Refresh
PUBLIC	?GetCursor@CFastScrollCtrl@@UAEPAUHICON__@@XZ	; CFastScrollCtrl::GetCursor
PUBLIC	??_7CFastScrollCtrl@@6B@			; CFastScrollCtrl::`vftable'
PUBLIC	??_GCFastScrollCtrl@@UAEPAXI@Z			; CFastScrollCtrl::`scalar deleting destructor'
PUBLIC	??_ECFastScrollCtrl@@UAEPAXI@Z			; CFastScrollCtrl::`vector deleting destructor'
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
EXTRN	?OnMouseDown@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseDown
EXTRN	?OnMouseUp@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseUp
EXTRN	?OnActivate@CSkinCtrl@@UAEXFF@Z:NEAR		; CSkinCtrl::OnActivate
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??0CSkinCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinCtrl::CSkinCtrl
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
;	COMDAT ??_7CFastScrollCtrl@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\inventorydlg.cpp
CONST	SEGMENT
??_7CFastScrollCtrl@@6B@ DD FLAT:??_ECFastScrollCtrl@@UAEPAXI@Z ; CFastScrollCtrl::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CFastScrollCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
	DD	FLAT:?GetCursor@CFastScrollCtrl@@UAEPAUHICON__@@XZ
CONST	ENDS
xdata$x	SEGMENT
$T160695 DD	019930520H
	DD	02H
	DD	FLAT:$T160698
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160698 DD	0ffffffffH
	DD	FLAT:$L160689
	DD	00H
	DD	FLAT:$L160691
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_pParent$ = 16
_nDirection$ = 20
_this$ = -20
$T160688 = -16
__$EHRec$ = -12
??0CFastScrollCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z PROC NEAR ; CFastScrollCtrl::CFastScrollCtrl

; 29   : {

  00069	55		 push	 ebp
  0006a	8b ec		 mov	 ebp, esp
  0006c	6a ff		 push	 -1
  0006e	68 00 00 00 00	 push	 $L160696
  00073	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00079	50		 push	 eax
  0007a	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00081	83 ec 10	 sub	 esp, 16			; 00000010H
  00084	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00087	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0008e	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00091	50		 push	 eax
  00092	83 ec 08	 sub	 esp, 8
  00095	8b cc		 mov	 ecx, esp
  00097	89 65 f0	 mov	 DWORD PTR $T160688[ebp], esp
  0009a	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  0009d	52		 push	 edx
  0009e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  000a3	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  000a6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ??0CSkinCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinCtrl::CSkinCtrl
  000ae	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  000b1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000b5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b8	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CFastScrollCtrl@@6B@ ; CFastScrollCtrl::`vftable'

; 30   : 	m_nDirection = nDirection;

  000be	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	8b 55 14	 mov	 edx, DWORD PTR _nDirection$[ebp]
  000c4	89 51 14	 mov	 DWORD PTR [ecx+20], edx

; 31   : 	m_pScrollTarget = NULL;

  000c7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 32   : 	m_HandleMap[obj] = this;

  000d1	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000d4	51		 push	 ecx
  000d5	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_HandleMap@CFastScrollCtrl@@2V?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@A
  000da	e8 00 00 00 00	 call	 ??A?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEAAPAVCFastScrollCtrl@@ABVCSkinObj@@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::operator[]
  000df	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000e2	89 10		 mov	 DWORD PTR [eax], edx

; 33   : 	m_nLastScrollTime = 0;

  000e4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 34   : }

  000ee	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f5	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000f8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000fd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00103	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L160689:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00008	c3		 ret	 0
$L160691:
  00009	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  00011	c3		 ret	 0
$L160696:
  00012	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160695
  00017	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CFastScrollCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ENDP ; CFastScrollCtrl::CFastScrollCtrl
PUBLIC	??1CFastScrollCtrl@@UAE@XZ			; CFastScrollCtrl::~CFastScrollCtrl
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??_GCFastScrollCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCFastScrollCtrl@@UAEPAXI@Z PROC NEAR		; CFastScrollCtrl::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CFastScrollCtrl@@UAE@XZ ; CFastScrollCtrl::~CFastScrollCtrl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153394
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153394:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCFastScrollCtrl@@UAEPAXI@Z ENDP			; CFastScrollCtrl::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L153400
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L153400:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?erase@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
xdata$x	SEGMENT
$T160708 DD	019930520H
	DD	02H
	DD	FLAT:$T160710
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160710 DD	0ffffffffH
	DD	FLAT:$L160705
	DD	00H
	DD	FLAT:$L160706
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24
$T160704 = -20
__$EHRec$ = -12
??1CFastScrollCtrl@@UAE@XZ PROC NEAR			; CFastScrollCtrl::~CFastScrollCtrl

; 37   : {

  00110	55		 push	 ebp
  00111	8b ec		 mov	 ebp, esp
  00113	6a ff		 push	 -1
  00115	68 00 00 00 00	 push	 $L160709
  0011a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00120	50		 push	 eax
  00121	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00128	83 ec 14	 sub	 esp, 20			; 00000014H
  0012b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0012e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00131	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CFastScrollCtrl@@6B@ ; CFastScrollCtrl::`vftable'
  00137	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 38   : 	m_HandleMap.erase ( (CSkinObj)*this );

  0013e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00141	51		 push	 ecx
  00142	8d 4d ec	 lea	 ecx, DWORD PTR $T160704[ebp]
  00145	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0014a	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  0014d	8b 55 e4	 mov	 edx, DWORD PTR -28+[ebp]
  00150	89 55 e0	 mov	 DWORD PTR -32+[ebp], edx
  00153	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00157	8b 45 e0	 mov	 eax, DWORD PTR -32+[ebp]
  0015a	50		 push	 eax
  0015b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_HandleMap@CFastScrollCtrl@@2V?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@A
  00160	e8 00 00 00 00	 call	 ?erase@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
  00165	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00169	8d 4d ec	 lea	 ecx, DWORD PTR $T160704[ebp]
  0016c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 39   : }

  00171	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00178	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017b	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  00180	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00183	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0018a	8b e5		 mov	 esp, ebp
  0018c	5d		 pop	 ebp
  0018d	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L160705:
  0001c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  00024	c3		 ret	 0
$L160706:
  00025	8d 4d ec	 lea	 ecx, DWORD PTR $T160704[ebp]
  00028	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0002d	c3		 ret	 0
$L160709:
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160708
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CFastScrollCtrl@@UAE@XZ ENDP				; CFastScrollCtrl::~CFastScrollCtrl
_TEXT	SEGMENT
_this$ = -4
?Refresh@CFastScrollCtrl@@UAEXXZ PROC NEAR		; CFastScrollCtrl::Refresh

; 43   : {

  0018e	55		 push	 ebp
  0018f	8b ec		 mov	 ebp, esp
  00191	51		 push	 ecx
  00192	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 44   : }

  00195	8b e5		 mov	 esp, ebp
  00197	5d		 pop	 ebp
  00198	c3		 ret	 0
?Refresh@CFastScrollCtrl@@UAEXXZ ENDP			; CFastScrollCtrl::Refresh
_TEXT	ENDS
EXTRN	?g_hExitUpCursor@@3PAUHICON__@@A:DWORD		; g_hExitUpCursor
EXTRN	?g_hExitDownCursor@@3PAUHICON__@@A:DWORD	; g_hExitDownCursor
_TEXT	SEGMENT
_this$ = -4
?GetCursor@CFastScrollCtrl@@UAEPAUHICON__@@XZ PROC NEAR	; CFastScrollCtrl::GetCursor

; 48   : {

  00199	55		 push	 ebp
  0019a	8b ec		 mov	 ebp, esp
  0019c	51		 push	 ecx
  0019d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 49   : 	// return an UP arrow if we scroll up...
; 50   : 	if ( m_nDirection == -1 ) {

  001a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001a3	83 78 14 ff	 cmp	 DWORD PTR [eax+20], -1
  001a7	75 07		 jne	 SHORT $L153414

; 51   : 		return g_hExitUpCursor;

  001a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_hExitUpCursor@@3PAUHICON__@@A ; g_hExitUpCursor
  001ae	eb 05		 jmp	 SHORT $L153413
$L153414:

; 53   : 
; 54   : 	return g_hExitDownCursor;

  001b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_hExitDownCursor@@3PAUHICON__@@A ; g_hExitDownCursor
$L153413:

; 55   : }

  001b5	8b e5		 mov	 esp, ebp
  001b7	5d		 pop	 ebp
  001b8	c3		 ret	 0
?GetCursor@CFastScrollCtrl@@UAEPAUHICON__@@XZ ENDP	; CFastScrollCtrl::GetCursor
_TEXT	ENDS
PUBLIC	?SetScrollable@CFastScrollCtrl@@QAEXPAVCScrollable@@@Z ; CFastScrollCtrl::SetScrollable
_TEXT	SEGMENT
_pScrollable$ = 8
_this$ = -4
?SetScrollable@CFastScrollCtrl@@QAEXPAVCScrollable@@@Z PROC NEAR ; CFastScrollCtrl::SetScrollable

; 59   : {

  001b9	55		 push	 ebp
  001ba	8b ec		 mov	 ebp, esp
  001bc	51		 push	 ecx
  001bd	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 	m_pScrollTarget = pScrollable;

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c3	8b 4d 08	 mov	 ecx, DWORD PTR _pScrollable$[ebp]
  001c6	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 61   : }

  001c9	8b e5		 mov	 esp, ebp
  001cb	5d		 pop	 ebp
  001cc	c2 04 00	 ret	 4
?SetScrollable@CFastScrollCtrl@@QAEXPAVCScrollable@@@Z ENDP ; CFastScrollCtrl::SetScrollable
_TEXT	ENDS
PUBLIC	?Scroll@CFastScrollCtrl@@QAEXXZ			; CFastScrollCtrl::Scroll
EXTRN	__imp__timeGetTime@0:NEAR
_TEXT	SEGMENT
_this$ = -8
_nScrollTime$ = -4
?Scroll@CFastScrollCtrl@@QAEXXZ PROC NEAR		; CFastScrollCtrl::Scroll

; 65   : {

  001cf	55		 push	 ebp
  001d0	8b ec		 mov	 ebp, esp
  001d2	83 ec 08	 sub	 esp, 8
  001d5	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 66   : 	// number of milliseconds that must elapse between scroll calls...
; 67   : 	const int nScrollTime = 250;

  001d8	c7 45 fc fa 00
	00 00		 mov	 DWORD PTR _nScrollTime$[ebp], 250 ; 000000faH

; 68   : 
; 69   : 	if ( m_pScrollTarget ) {

  001df	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001e2	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  001e6	74 37		 je	 SHORT $L153425

; 70   : 		if ( (timeGetTime() - m_nLastScrollTime) > nScrollTime ) {

  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  001ee	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f1	2b 41 1c	 sub	 eax, DWORD PTR [ecx+28]
  001f4	3d fa 00 00 00	 cmp	 eax, 250		; 000000faH
  001f9	76 24		 jbe	 SHORT $L153425

; 71   : 			m_pScrollTarget->ChangeLocation ( m_nDirection );

  001fb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  001fe	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00201	50		 push	 eax
  00202	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00205	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  00208	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0020b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0020e	8b 10		 mov	 edx, DWORD PTR [eax]
  00210	ff 52 08	 call	 DWORD PTR [edx+8]

; 72   : 			m_nLastScrollTime = timeGetTime();

  00213	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__timeGetTime@0
  00219	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0021c	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
$L153425:

; 75   : }

  0021f	8b e5		 mov	 esp, ebp
  00221	5d		 pop	 ebp
  00222	c3		 ret	 0
?Scroll@CFastScrollCtrl@@QAEXXZ ENDP			; CFastScrollCtrl::Scroll
_TEXT	ENDS
PUBLIC	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ		; CWnd::GetSafeHwnd
PUBLIC	??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator
PUBLIC	??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator*
PUBLIC	??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator!=
PUBLIC	?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z	; CWnd::ScreenToClient
PUBLIC	?end@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@XZ ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end
PUBLIC	?find@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@ABVCSkinObj@@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::find
PUBLIC	?FromScreenPoint@CFastScrollCtrl@@SAPAV1@AAVCPoint@@@Z ; CFastScrollCtrl::FromScreenPoint
EXTRN	__imp__WindowFromPoint@8:NEAR
EXTRN	__imp__GetWindowLongA@8:NEAR
EXTRN	__imp__SetWindowLongA@12:NEAR
EXTRN	?FromHandle@CSkinWnd@@SAPAV1@PAUHWND__@@@Z:NEAR	; CSkinWnd::FromHandle
EXTRN	?HitTest@CSkinWnd@@QAEPAVCSkinCtrl@@HH@Z:NEAR	; CSkinWnd::HitTest
EXTRN	?g_pDragDropMgr@@3PAVCDragDropMgr@@A:DWORD	; g_pDragDropMgr
xdata$x	SEGMENT
$T160722 DD	019930520H
	DD	01H
	DD	FLAT:$T160724
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160724 DD	0ffffffffH
	DD	FLAT:$L160720
xdata$x	ENDS
_TEXT	SEGMENT
_point$ = 8
_pCtrl$ = -28
_nStyle$ = -20
_hTargetWnd$ = -24
_pWnd$ = -16
_localPoint$153437 = -36
_pHitCtrl$153438 = -40
_it$153445 = -44
$T160716 = -52
$T160717 = -60
$T160718 = -64
$T160719 = -68
__$EHRec$ = -12
?FromScreenPoint@CFastScrollCtrl@@SAPAV1@AAVCPoint@@@Z PROC NEAR ; CFastScrollCtrl::FromScreenPoint

; 79   : {

  00223	55		 push	 ebp
  00224	8b ec		 mov	 ebp, esp
  00226	6a ff		 push	 -1
  00228	68 00 00 00 00	 push	 $L160723
  0022d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00233	50		 push	 eax
  00234	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0023b	83 ec 40	 sub	 esp, 64			; 00000040H

; 80   : 	CFastScrollCtrl *pCtrl = NULL;

  0023e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pCtrl$[ebp], 0

; 81   : 
; 82   : 	// ignore the drag & drop window for now...
; 83   : 	int nStyle = GetWindowLong ( g_pDragDropMgr->GetSafeHwnd(), GWL_STYLE );

  00245	6a f0		 push	 -16			; fffffff0H
  00247	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDragDropMgr@@3PAVCDragDropMgr@@A ; g_pDragDropMgr
  0024d	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00252	50		 push	 eax
  00253	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8
  00259	89 45 ec	 mov	 DWORD PTR _nStyle$[ebp], eax

; 84   : 
; 85   : 	if ( nStyle & WS_VISIBLE )

  0025c	8b 45 ec	 mov	 eax, DWORD PTR _nStyle$[ebp]
  0025f	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00264	85 c0		 test	 eax, eax
  00266	74 16		 je	 SHORT $L153431

; 86   : 		SetWindowLong ( g_pDragDropMgr->GetSafeHwnd(), GWL_STYLE, 0 );

  00268	6a 00		 push	 0
  0026a	6a f0		 push	 -16			; fffffff0H
  0026c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDragDropMgr@@3PAVCDragDropMgr@@A ; g_pDragDropMgr
  00272	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00277	50		 push	 eax
  00278	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12
$L153431:

; 87   : 
; 88   : 	// find the window that we're pointing at...
; 89   : 	HWND hTargetWnd = ::WindowFromPoint ( point );

  0027e	8b 4d 08	 mov	 ecx, DWORD PTR _point$[ebp]
  00281	8b 11		 mov	 edx, DWORD PTR [ecx]
  00283	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00286	89 55 cc	 mov	 DWORD PTR $T160716[ebp], edx
  00289	89 45 d0	 mov	 DWORD PTR $T160716[ebp+4], eax
  0028c	8b 4d d0	 mov	 ecx, DWORD PTR $T160716[ebp+4]
  0028f	51		 push	 ecx
  00290	8b 55 cc	 mov	 edx, DWORD PTR $T160716[ebp]
  00293	52		 push	 edx
  00294	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WindowFromPoint@8
  0029a	89 45 e8	 mov	 DWORD PTR _hTargetWnd$[ebp], eax

; 90   : 
; 91   : 	// show the drag & drop window again...
; 92   : 	if ( nStyle & WS_VISIBLE )

  0029d	8b 45 ec	 mov	 eax, DWORD PTR _nStyle$[ebp]
  002a0	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  002a5	85 c0		 test	 eax, eax
  002a7	74 19		 je	 SHORT $L153434

; 93   : 		SetWindowLong ( g_pDragDropMgr->GetSafeHwnd(), GWL_STYLE, WS_VISIBLE );

  002a9	68 00 00 00 10	 push	 268435456		; 10000000H
  002ae	6a f0		 push	 -16			; fffffff0H
  002b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDragDropMgr@@3PAVCDragDropMgr@@A ; g_pDragDropMgr
  002b6	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  002bb	50		 push	 eax
  002bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12
$L153434:

; 94   : 
; 95   : 	// get the skin window that owns this point...
; 96   : 	CSkinWnd *pWnd = CSkinWnd::FromHandle ( hTargetWnd );

  002c2	8b 4d e8	 mov	 ecx, DWORD PTR _hTargetWnd$[ebp]
  002c5	51		 push	 ecx
  002c6	e8 00 00 00 00	 call	 ?FromHandle@CSkinWnd@@SAPAV1@PAUHWND__@@@Z ; CSkinWnd::FromHandle
  002cb	83 c4 04	 add	 esp, 4
  002ce	89 45 f0	 mov	 DWORD PTR _pWnd$[ebp], eax

; 97   : 
; 98   : 	if ( pWnd ) {

  002d1	83 7d f0 00	 cmp	 DWORD PTR _pWnd$[ebp], 0
  002d5	0f 84 ab 00 00
	00		 je	 $L153450

; 99   : 		// localize the point to the window
; 100  : 		CPoint localPoint = point;

  002db	8b 55 08	 mov	 edx, DWORD PTR _point$[ebp]
  002de	8b 02		 mov	 eax, DWORD PTR [edx]
  002e0	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  002e3	89 45 dc	 mov	 DWORD PTR _localPoint$153437[ebp], eax
  002e6	89 4d e0	 mov	 DWORD PTR _localPoint$153437[ebp+4], ecx

; 101  : 		pWnd->ScreenToClient ( &localPoint );

  002e9	8d 55 dc	 lea	 edx, DWORD PTR _localPoint$153437[ebp]
  002ec	52		 push	 edx
  002ed	8b 4d f0	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  002f0	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ScreenToClient

; 102  : 
; 103  : 		CSkinCtrl *pHitCtrl = pWnd->HitTest ( localPoint.x, localPoint.y );

  002f5	8b 45 e0	 mov	 eax, DWORD PTR _localPoint$153437[ebp+4]
  002f8	50		 push	 eax
  002f9	8b 4d dc	 mov	 ecx, DWORD PTR _localPoint$153437[ebp]
  002fc	51		 push	 ecx
  002fd	8b 4d f0	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  00300	e8 00 00 00 00	 call	 ?HitTest@CSkinWnd@@QAEPAVCSkinCtrl@@HH@Z ; CSkinWnd::HitTest
  00305	89 45 d8	 mov	 DWORD PTR _pHitCtrl$153438[ebp], eax

; 104  : 
; 105  : 		if ( pHitCtrl ) {

  00308	83 7d d8 00	 cmp	 DWORD PTR _pHitCtrl$153438[ebp], 0
  0030c	74 78		 je	 SHORT $L153450

; 106  : 			// see if this is a fast scroll ctrl...
; 107  : 			map<CSkinObj, CFastScrollCtrl *>::iterator it;

  0030e	8d 4d d4	 lea	 ecx, DWORD PTR _it$153445[ebp]
  00311	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator

; 108  : 			it = m_HandleMap.find ( (CSkinObj)*pHitCtrl );

  00316	8b 55 d8	 mov	 edx, DWORD PTR _pHitCtrl$153438[ebp]
  00319	52		 push	 edx
  0031a	8d 4d c4	 lea	 ecx, DWORD PTR $T160717[ebp]
  0031d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00322	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  00325	8b 45 b8	 mov	 eax, DWORD PTR -72+[ebp]
  00328	89 45 b4	 mov	 DWORD PTR -76+[ebp], eax
  0032b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00332	8b 4d b4	 mov	 ecx, DWORD PTR -76+[ebp]
  00335	51		 push	 ecx
  00336	8d 55 c0	 lea	 edx, DWORD PTR $T160718[ebp]
  00339	52		 push	 edx
  0033a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_HandleMap@CFastScrollCtrl@@2V?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@A
  0033f	e8 00 00 00 00	 call	 ?find@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@ABVCSkinObj@@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::find
  00344	8b 00		 mov	 eax, DWORD PTR [eax]
  00346	89 45 d4	 mov	 DWORD PTR _it$153445[ebp], eax
  00349	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00350	8d 4d c4	 lea	 ecx, DWORD PTR $T160717[ebp]
  00353	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 109  : 
; 110  : 			if ( it != m_HandleMap.end() ) {

  00358	8d 4d bc	 lea	 ecx, DWORD PTR $T160719[ebp]
  0035b	51		 push	 ecx
  0035c	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_HandleMap@CFastScrollCtrl@@2V?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@A
  00361	e8 00 00 00 00	 call	 ?end@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@XZ ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end
  00366	50		 push	 eax
  00367	8d 4d d4	 lea	 ecx, DWORD PTR _it$153445[ebp]
  0036a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator!=
  0036f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00374	85 c0		 test	 eax, eax
  00376	74 0e		 je	 SHORT $L153450

; 111  : 				pCtrl = (*it).second;

  00378	8d 4d d4	 lea	 ecx, DWORD PTR _it$153445[ebp]
  0037b	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator*
  00380	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00383	89 55 e4	 mov	 DWORD PTR _pCtrl$[ebp], edx
$L153450:

; 115  : 
; 116  : 	return pCtrl;

  00386	8b 45 e4	 mov	 eax, DWORD PTR _pCtrl$[ebp]

; 117  : }

  00389	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0038c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00393	8b e5		 mov	 esp, ebp
  00395	5d		 pop	 ebp
  00396	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L160720:
  00038	8d 4d c4	 lea	 ecx, DWORD PTR $T160717[ebp]
  0003b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00040	c3		 ret	 0
$L160723:
  00041	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160722
  00046	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?FromScreenPoint@CFastScrollCtrl@@SAPAV1@AAVCPoint@@@Z ENDP ; CFastScrollCtrl::FromScreenPoint
_TEXT	SEGMENT
_$E340	PROC NEAR
  00397	55		 push	 ebp
  00398	8b ec		 mov	 ebp, esp
  0039a	e8 00 00 00 00	 call	 _$E336
  0039f	e8 00 00 00 00	 call	 _$E339
  003a4	5d		 pop	 ebp
  003a5	c3		 ret	 0
_$E340	ENDP
_TEXT	ENDS
PUBLIC	??0?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@ABV?$allocator@PAVCInventoryDlg@@@1@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
_TEXT	SEGMENT
$T160727 = -4
$T160728 = -8
_$E336	PROC NEAR

; 124  : map<CSCI_WorldObject, CInventoryDlg *> CInventoryDlg::m_objMap;

  003a6	55		 push	 ebp
  003a7	8b ec		 mov	 ebp, esp
  003a9	83 ec 08	 sub	 esp, 8
  003ac	8d 45 fc	 lea	 eax, DWORD PTR $T160727[ebp]
  003af	50		 push	 eax
  003b0	8d 4d f8	 lea	 ecx, DWORD PTR $T160728[ebp]
  003b3	51		 push	 ecx
  003b4	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_objMap@CInventoryDlg@@1V?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@A
  003b9	e8 00 00 00 00	 call	 ??0?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@ABV?$allocator@PAVCInventoryDlg@@@1@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
  003be	8b e5		 mov	 esp, ebp
  003c0	5d		 pop	 ebp
  003c1	c3		 ret	 0
_$E336	ENDP
_$E339	PROC NEAR
  003c2	55		 push	 ebp
  003c3	8b ec		 mov	 ebp, esp
  003c5	68 00 00 00 00	 push	 OFFSET FLAT:_$E337
  003ca	e8 00 00 00 00	 call	 _atexit
  003cf	83 c4 04	 add	 esp, 4
  003d2	5d		 pop	 ebp
  003d3	c3		 ret	 0
_$E339	ENDP
_TEXT	ENDS
PUBLIC	??1?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@XZ ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::~map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
_BSS	SEGMENT
	ALIGN	4

_$S338	DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_$E337	PROC NEAR
  003d4	55		 push	 ebp
  003d5	8b ec		 mov	 ebp, esp
  003d7	33 c0		 xor	 eax, eax
  003d9	a0 00 00 00 00	 mov	 al, BYTE PTR _$S338
  003de	83 e0 01	 and	 eax, 1
  003e1	85 c0		 test	 eax, eax
  003e3	75 19		 jne	 SHORT $L153465
  003e5	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR _$S338
  003eb	80 c9 01	 or	 cl, 1
  003ee	88 0d 00 00 00
	00		 mov	 BYTE PTR _$S338, cl
  003f4	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_objMap@CInventoryDlg@@1V?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@A
  003f9	e8 00 00 00 00	 call	 ??1?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@XZ ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::~map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
$L153465:
  003fe	5d		 pop	 ebp
  003ff	c3		 ret	 0
_$E337	ENDP
_TEXT	ENDS
PUBLIC	??1?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::~_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
;	COMDAT ??1?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@XZ PROC NEAR ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::~map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::~_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@XZ ENDP ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::~map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
_TEXT	ENDS
_TEXT	SEGMENT
_$E346	PROC NEAR
  00400	55		 push	 ebp
  00401	8b ec		 mov	 ebp, esp
  00403	e8 00 00 00 00	 call	 _$E342
  00408	e8 00 00 00 00	 call	 _$E345
  0040d	5d		 pop	 ebp
  0040e	c3		 ret	 0
_$E346	ENDP
_TEXT	ENDS
PUBLIC	??0?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@ABV?$allocator@PAVCInventoryDlg@@@1@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >
_TEXT	SEGMENT
$T160735 = -4
_$E342	PROC NEAR

; 127  : list<CInventoryDlg *> CInventoryDlg::m_luggageList;

  0040f	55		 push	 ebp
  00410	8b ec		 mov	 ebp, esp
  00412	51		 push	 ecx
  00413	8d 45 fc	 lea	 eax, DWORD PTR $T160735[ebp]
  00416	50		 push	 eax
  00417	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_luggageList@CInventoryDlg@@1V?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@A
  0041c	e8 00 00 00 00	 call	 ??0?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@ABV?$allocator@PAVCInventoryDlg@@@1@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >
  00421	8b e5		 mov	 esp, ebp
  00423	5d		 pop	 ebp
  00424	c3		 ret	 0
_$E342	ENDP
_$E345	PROC NEAR
  00425	55		 push	 ebp
  00426	8b ec		 mov	 ebp, esp
  00428	68 00 00 00 00	 push	 OFFSET FLAT:_$E343
  0042d	e8 00 00 00 00	 call	 _atexit
  00432	83 c4 04	 add	 esp, 4
  00435	5d		 pop	 ebp
  00436	c3		 ret	 0
_$E345	ENDP
_TEXT	ENDS
PUBLIC	??1?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::~list<CInventoryDlg *,std::allocator<CInventoryDlg *> >
_BSS	SEGMENT
	ALIGN	4

_$S344	DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_$E343	PROC NEAR
  00437	55		 push	 ebp
  00438	8b ec		 mov	 ebp, esp
  0043a	33 c0		 xor	 eax, eax
  0043c	a0 00 00 00 00	 mov	 al, BYTE PTR _$S344
  00441	83 e0 01	 and	 eax, 1
  00444	85 c0		 test	 eax, eax
  00446	75 19		 jne	 SHORT $L153481
  00448	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR _$S344
  0044e	80 c9 01	 or	 cl, 1
  00451	88 0d 00 00 00
	00		 mov	 BYTE PTR _$S344, cl
  00457	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_luggageList@CInventoryDlg@@1V?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@A
  0045c	e8 00 00 00 00	 call	 ??1?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::~list<CInventoryDlg *,std::allocator<CInventoryDlg *> >
$L153481:
  00461	5d		 pop	 ebp
  00462	c3		 ret	 0
_$E343	ENDP
_TEXT	ENDS
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??0CSCI_BContainer@@QAE@XZ			; CSCI_BContainer::CSCI_BContainer
PUBLIC	??0CSCI_BContainer@@QAE@G@Z			; CSCI_BContainer::CSCI_BContainer
PUBLIC	??0CSCI_WorldObject@@QAE@XZ			; CSCI_WorldObject::CSCI_WorldObject
PUBLIC	??0CSCI_WorldObject@@QAE@G@Z			; CSCI_WorldObject::CSCI_WorldObject
PUBLIC	??0CInventoryDlg@@QAE@XZ			; CInventoryDlg::CInventoryDlg
PUBLIC	?EnableGameModal@CInventoryDlg@@UAEXHPAH@Z	; CInventoryDlg::EnableGameModal
PUBLIC	?DisableGameModal@CInventoryDlg@@UAEXHPAH_N@Z	; CInventoryDlg::DisableGameModal
PUBLIC	?MakeSkinCtrl@CInventoryDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CInventoryDlg::MakeSkinCtrl
PUBLIC	??_7CInventoryDlg@@6B@				; CInventoryDlg::`vftable'
PUBLIC	??_GCInventoryDlg@@UAEPAXI@Z			; CInventoryDlg::`scalar deleting destructor'
PUBLIC	??_ECInventoryDlg@@UAEPAXI@Z			; CInventoryDlg::`vector deleting destructor'
PUBLIC	?Next@CSkinWnd@@UAEXXZ				; CSkinWnd::Next
PUBLIC	?Previous@CSkinWnd@@UAEXXZ			; CSkinWnd::Previous
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?GetProcessEvents@CSkinWnd@@MAE_NXZ:NEAR	; CSkinWnd::GetProcessEvents
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	??0CSkinWnd@@QAE@XZ:NEAR			; CSkinWnd::CSkinWnd
EXTRN	??1CSkinWnd@@UAE@XZ:NEAR			; CSkinWnd::~CSkinWnd
EXTRN	?CloseSelf@CSkinWnd@@UAEX_N@Z:NEAR		; CSkinWnd::CloseSelf
EXTRN	?Disable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Disable
EXTRN	?Enable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Enable
EXTRN	?ProcessRefreshList@CSkinWnd@@UAEHXZ:NEAR	; CSkinWnd::ProcessRefreshList
EXTRN	?UpdateTracking@CSkinWnd@@UAEXXZ:NEAR		; CSkinWnd::UpdateTracking
EXTRN	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CSkinWnd::GetEventSinkMap
EXTRN	?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSkinWnd::GetMessageMap
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
;	COMDAT ??_7CInventoryDlg@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\inventorydlg.cpp
CONST	SEGMENT
??_7CInventoryDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CInventoryDlg::`vftable'
	DD	FLAT:??_ECInventoryDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CSkinWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CInventoryDlg@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CInventoryDlg@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CInventoryDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
xdata$x	SEGMENT
$T160743 DD	019930520H
	DD	01H
	DD	FLAT:$T160745
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160745 DD	0ffffffffH
	DD	FLAT:$L160741
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -24
$T160739 = -16
$T160740 = -20
__$EHRec$ = -12
??0CInventoryDlg@@QAE@XZ PROC NEAR			; CInventoryDlg::CInventoryDlg

; 133  : {

  00463	55		 push	 ebp
  00464	8b ec		 mov	 ebp, esp
  00466	6a ff		 push	 -1
  00468	68 00 00 00 00	 push	 $L160744
  0046d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00473	50		 push	 eax
  00474	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0047b	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0047e	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00481	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00484	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  00489	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00490	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00493	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00499	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@XZ ; CSCI_WorldObject::CSCI_WorldObject
  0049e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  004a1	81 c1 96 00 00
	00		 add	 ecx, 150		; 00000096H
  004a7	e8 00 00 00 00	 call	 ??0CSCI_BContainer@@QAE@XZ ; CSCI_BContainer::CSCI_BContainer
  004ac	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  004af	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CInventoryDlg@@6B@ ; CInventoryDlg::`vftable'

; 134  : 	m_hObject = 0;

  004b5	6a 00		 push	 0
  004b7	8d 4d f0	 lea	 ecx, DWORD PTR $T160739[ebp]
  004ba	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@G@Z ; CSCI_WorldObject::CSCI_WorldObject
  004bf	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  004c2	66 8b 55 f0	 mov	 dx, WORD PTR $T160739[ebp]
  004c6	66 89 91 94 00
	00 00		 mov	 WORD PTR [ecx+148], dx

; 135  : 	m_hContainer = 0;

  004cd	6a 00		 push	 0
  004cf	8d 4d ec	 lea	 ecx, DWORD PTR $T160740[ebp]
  004d2	e8 00 00 00 00	 call	 ??0CSCI_BContainer@@QAE@G@Z ; CSCI_BContainer::CSCI_BContainer
  004d7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  004da	66 8b 4d ec	 mov	 cx, WORD PTR $T160740[ebp]
  004de	66 89 88 96 00
	00 00		 mov	 WORD PTR [eax+150], cx

; 136  : 	m_pListCtrl = NULL;

  004e5	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  004e8	c7 82 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+152], 0

; 137  : 	m_pImageList = NULL;

  004f2	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  004f5	c7 80 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+156], 0

; 138  :     m_bHide = false;

  004ff	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00502	c6 81 a0 00 00
	00 00		 mov	 BYTE PTR [ecx+160], 0

; 139  : }

  00509	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00510	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00513	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00516	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0051d	8b e5		 mov	 esp, ebp
  0051f	5d		 pop	 ebp
  00520	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L160741:
  0004b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00053	c3		 ret	 0
$L160744:
  00054	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160743
  00059	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CInventoryDlg@@QAE@XZ ENDP				; CInventoryDlg::CInventoryDlg
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	??1CInventoryDlg@@UAE@XZ			; CInventoryDlg::~CInventoryDlg
;	COMDAT ??_GCInventoryDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCInventoryDlg@@UAEPAXI@Z PROC NEAR			; CInventoryDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CInventoryDlg@@UAE@XZ ; CInventoryDlg::~CInventoryDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L153495
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L153495:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCInventoryDlg@@UAEPAXI@Z ENDP			; CInventoryDlg::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?erase@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEIABVCSCI_WorldObject@@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase
PUBLIC	?remove@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::remove
xdata$x	SEGMENT
$T160759 DD	019930520H
	DD	01H
	DD	FLAT:$T160761
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160761 DD	0ffffffffH
	DD	FLAT:$L160757
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -36
$T160748 = -16
$T160749 = -20
$T160752 = -24
$T160753 = -28
$T160756 = -32
__$EHRec$ = -12
??1CInventoryDlg@@UAE@XZ PROC NEAR			; CInventoryDlg::~CInventoryDlg

; 142  : {

  00521	55		 push	 ebp
  00522	8b ec		 mov	 ebp, esp
  00524	6a ff		 push	 -1
  00526	68 00 00 00 00	 push	 $L160760
  0052b	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00531	50		 push	 eax
  00532	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00539	83 ec 20	 sub	 esp, 32			; 00000020H
  0053c	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx
  0053f	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  00542	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CInventoryDlg@@6B@ ; CInventoryDlg::`vftable'
  00548	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 143  : 	if ( m_pListCtrl ) {

  0054f	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00552	83 b9 98 00 00
	00 00		 cmp	 DWORD PTR [ecx+152], 0
  00559	74 3e		 je	 SHORT $L153499

; 144  : 		delete m_pListCtrl;

  0055b	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  0055e	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  00564	89 45 ec	 mov	 DWORD PTR $T160749[ebp], eax
  00567	8b 4d ec	 mov	 ecx, DWORD PTR $T160749[ebp]
  0056a	89 4d f0	 mov	 DWORD PTR $T160748[ebp], ecx
  0056d	83 7d f0 00	 cmp	 DWORD PTR $T160748[ebp], 0
  00571	74 12		 je	 SHORT $L160750
  00573	6a 01		 push	 1
  00575	8b 55 f0	 mov	 edx, DWORD PTR $T160748[ebp]
  00578	8b 02		 mov	 eax, DWORD PTR [edx]
  0057a	8b 4d f0	 mov	 ecx, DWORD PTR $T160748[ebp]
  0057d	ff 50 04	 call	 DWORD PTR [eax+4]
  00580	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  00583	eb 07		 jmp	 SHORT $L160751
$L160750:
  00585	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR -40+[ebp], 0
$L160751:

; 145  : 		m_pListCtrl = NULL;

  0058c	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0058f	c7 81 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+152], 0
$L153499:

; 147  : 
; 148  : 	if ( m_pImageList ) {

  00599	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  0059c	83 ba 9c 00 00
	00 00		 cmp	 DWORD PTR [edx+156], 0
  005a3	74 3e		 je	 SHORT $L153502

; 149  : 		delete m_pImageList;

  005a5	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  005a8	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [eax+156]
  005ae	89 4d e4	 mov	 DWORD PTR $T160753[ebp], ecx
  005b1	8b 55 e4	 mov	 edx, DWORD PTR $T160753[ebp]
  005b4	89 55 e8	 mov	 DWORD PTR $T160752[ebp], edx
  005b7	83 7d e8 00	 cmp	 DWORD PTR $T160752[ebp], 0
  005bb	74 12		 je	 SHORT $L160754
  005bd	6a 01		 push	 1
  005bf	8b 45 e8	 mov	 eax, DWORD PTR $T160752[ebp]
  005c2	8b 10		 mov	 edx, DWORD PTR [eax]
  005c4	8b 4d e8	 mov	 ecx, DWORD PTR $T160752[ebp]
  005c7	ff 52 04	 call	 DWORD PTR [edx+4]
  005ca	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  005cd	eb 07		 jmp	 SHORT $L160755
$L160754:
  005cf	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR -44+[ebp], 0
$L160755:

; 150  : 		m_pImageList = NULL;

  005d6	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  005d9	c7 80 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+156], 0
$L153502:

; 152  : 
; 153  : 	// remove this dialog from the global map
; 154  : 	m_objMap.erase ( m_hObject );

  005e3	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  005e6	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  005ec	51		 push	 ecx
  005ed	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_objMap@CInventoryDlg@@1V?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@A
  005f2	e8 00 00 00 00	 call	 ?erase@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEIABVCSCI_WorldObject@@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase

; 155  : 
; 156  : 	// remove this dialog from the luggage list
; 157  : 	m_luggageList.remove ( this );

  005f7	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  005fa	89 55 e0	 mov	 DWORD PTR $T160756[ebp], edx
  005fd	8d 45 e0	 lea	 eax, DWORD PTR $T160756[ebp]
  00600	50		 push	 eax
  00601	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_luggageList@CInventoryDlg@@1V?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@A
  00606	e8 00 00 00 00	 call	 ?remove@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::remove

; 158  : }

  0060b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00612	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00615	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0061a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0061d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00624	8b e5		 mov	 esp, ebp
  00626	5d		 pop	 ebp
  00627	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L160757:
  0005e	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  00066	c3		 ret	 0
$L160760:
  00067	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160759
  0006c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CInventoryDlg@@UAE@XZ ENDP				; CInventoryDlg::~CInventoryDlg
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
_TEXT	SEGMENT
_nGameModalCount$ = 12
_this$ = -4
?EnableGameModal@CInventoryDlg@@UAEXHPAH@Z PROC NEAR	; CInventoryDlg::EnableGameModal

; 162  : {

  00628	55		 push	 ebp
  00629	8b ec		 mov	 ebp, esp
  0062b	51		 push	 ecx
  0062c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 163  : 	// the inventory dialog should always hide / show due to game modal requirements...
; 164  :     if ( !nGameModalCount[gmGameModal] && !nGameModalCount[gmCombatModal] ) {

  0062f	8b 45 0c	 mov	 eax, DWORD PTR _nGameModalCount$[ebp]
  00632	83 38 00	 cmp	 DWORD PTR [eax], 0
  00635	75 1d		 jne	 SHORT $L153511
  00637	8b 4d 0c	 mov	 ecx, DWORD PTR _nGameModalCount$[ebp]
  0063a	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  0063e	75 14		 jne	 SHORT $L153511

; 165  :         ShowWindow( SW_SHOW );

  00640	6a 05		 push	 5
  00642	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00645	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 166  :         m_bHide = false;

  0064a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0064d	c6 82 a0 00 00
	00 00		 mov	 BYTE PTR [edx+160], 0
$L153511:

; 168  : }

  00654	8b e5		 mov	 esp, ebp
  00656	5d		 pop	 ebp
  00657	c2 08 00	 ret	 8
?EnableGameModal@CInventoryDlg@@UAEXHPAH@Z ENDP		; CInventoryDlg::EnableGameModal
_nMode$ = 8
_nGameModalCount$ = 12
_this$ = -4
?DisableGameModal@CInventoryDlg@@UAEXHPAH_N@Z PROC NEAR	; CInventoryDlg::DisableGameModal

; 172  : {

  0065a	55		 push	 ebp
  0065b	8b ec		 mov	 ebp, esp
  0065d	51		 push	 ecx
  0065e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 173  : 	// the inventory dialog should always hide / show due to game modal requirements...
; 174  :     if ( !nGameModalCount[nMode] ) {

  00661	8b 45 08	 mov	 eax, DWORD PTR _nMode$[ebp]
  00664	8b 4d 0c	 mov	 ecx, DWORD PTR _nGameModalCount$[ebp]
  00667	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  0066b	75 14		 jne	 SHORT $L153518

; 175  :         ShowWindow( SW_HIDE );

  0066d	6a 00		 push	 0
  0066f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00672	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 176  :         m_bHide = true;

  00677	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0067a	c6 82 a0 00 00
	00 01		 mov	 BYTE PTR [edx+160], 1
$L153518:

; 178  : }

  00681	8b e5		 mov	 esp, ebp
  00683	5d		 pop	 ebp
  00684	c2 0c 00	 ret	 12			; 0000000cH
?DisableGameModal@CInventoryDlg@@UAEXHPAH_N@Z ENDP	; CInventoryDlg::DisableGameModal
_TEXT	ENDS
PUBLIC	??A?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEAAPAVCInventoryDlg@@ABVCSCI_WorldObject@@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::operator[]
PUBLIC	?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ; CListCtrl::SetImageList
PUBLIC	?Add@CImageList@@QAEHPAUHICON__@@@Z		; CImageList::Add
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	?GetGlobal@PMachine@@QAEFH@Z			; PMachine::GetGlobal
PUBLIC	??Diterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEAAPAVCInventoryDlg@@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator*
PUBLIC	?begin@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::begin
PUBLIC	?size@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEIXZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::size
PUBLIC	?push_back@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::push_back
PUBLIC	?get_pContents@CSCI_BContainer@@QAEFXZ		; CSCI_BContainer::get_pContents
PUBLIC	??0ObjectID@@QAE@G@Z				; ObjectID::ObjectID
PUBLIC	?IsValid@MemID@@QBEHXZ				; MemID::IsValid
PUBLIC	?GetProperty@ObjectID@@QBEFG@Z			; ObjectID::GetProperty
PUBLIC	??BMemID@@QBEGXZ				; MemID::operator unsigned short
PUBLIC	?Create@CInventoryDlg@@QAEHVCSCI_WorldObject@@@Z ; CInventoryDlg::Create
PUBLIC	?AddObject@CInventoryDlg@@QAEXVCSCI_WorldObject@@@Z ; CInventoryDlg::AddObject
PUBLIC	??DStringID@@QAEPADXZ				; StringID::operator*
PUBLIC	??0StringID@@QAE@ABV0@@Z			; StringID::StringID
PUBLIC	?size@SOL_List@@QAEAAHXZ			; SOL_List::size
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	??CFakeSOL_ListID@@QBEPAVSOL_List@@XZ		; FakeSOL_ListID::operator->
PUBLIC	?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ	; AfxGetInstanceHandle
PUBLIC	??0CSCI_WorldObject@@QAE@ABV0@@Z		; CSCI_WorldObject::CSCI_WorldObject
PUBLIC	??0SOL_ListID@@QAE@G@Z				; SOL_ListID::SOL_ListID
PUBLIC	??0SOL_ListID@@QAE@ABU0@@Z			; SOL_ListID::SOL_ListID
EXTRN	??0CImageList@@QAE@XZ:NEAR			; CImageList::CImageList
EXTRN	?Create@CImageList@@QAEHHHIHH@Z:NEAR		; CImageList::Create
EXTRN	?pm@@3VPMachine@@A:BYTE				; pm
EXTRN	?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z:NEAR ; CScrollable::SetScrollBar
EXTRN	?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z:NEAR ; CSkinListCtrl::Create
EXTRN	?AddColumn@CSkinListCtrl@@QAEHVCSkinObj@@H@Z:NEAR ; CSkinListCtrl::AddColumn
EXTRN	?IsValid@CSkinObj@@QAEHXZ:NEAR			; CSkinObj::IsValid
EXTRN	?SetText@CSkinObj@@QAAHPADZZ:NEAR		; CSkinObj::SetText
EXTRN	?g_pMainWindow@@3PAVCMainWindow@@A:DWORD	; g_pMainWindow
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:NEAR
EXTRN	__imp__LoadIconA@8:NEAR
EXTRN	?getBaseContainer@CSCI_WorldObject@@QAE?AVCSCI_BContainer@@XZ:NEAR ; CSCI_WorldObject::getBaseContainer
EXTRN	?at@SOL_List@@QAEGH@Z:NEAR			; SOL_List::at
EXTRN	?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z:NEAR ; CSkinWnd::CreatePopupChild
EXTRN	?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z:NEAR ; CSkinWnd::FindObject
EXTRN	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z:NEAR ; CSkinWnd::FindControl
EXTRN	?SetPriority@CSkinWnd@@QAEXH@Z:NEAR		; CSkinWnd::SetPriority
EXTRN	?RestoreLocation@CSkinWnd@@QAE_NXZ:NEAR		; CSkinWnd::RestoreLocation
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:NEAR
EXTRN	?getName@CSCI_WorldObject@@QAE?AVStringID@@XZ:NEAR ; CSCI_WorldObject::getName
_DATA	SEGMENT
$SG153526 DB	'dlg_inventory.skn', 00H
	ORG $+2
$SG153529 DB	'dlg_luggage.skn', 00H
$SG153538 DB	'Inventory', 00H
	ORG $+2
$SG153543 DB	'containerName', 00H
	ORG $+2
$SG153547 DB	'Container', 00H
	ORG $+2
$SG153548 DB	'%s', 00H
	ORG $+1
$SG153551 DB	'InventoryList', 00H
	ORG $+2
$SG153557 DB	'sb_textscroller', 00H
$SG153562 DB	'fs_up', 00H
	ORG $+2
$SG153566 DB	'fs_down', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T160795 DD	019930520H
	DD	04H
	DD	FLAT:$T160797
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160797 DD	0ffffffffH
	DD	FLAT:$L160788
	DD	00H
	DD	FLAT:$L160789
	DD	01H
	DD	FLAT:$L160790
	DD	02H
	DD	FLAT:$L160793
xdata$x	ENDS
_TEXT	SEGMENT
$T160768 = -120
$T160769 = -124
$T160770 = -128
$T160773 = -132
$T160774 = -136
$T160779 = -140
$T160780 = -144
$T160783 = -148
$T160784 = -152
$T160785 = -156
$T160786 = -160
$T160787 = -164
__$EHRec$ = -12
_hObject$ = 8
_this$ = -168
_sSkinName$ = -64
_pDlg$153534 = -84
_bCreated$ = -44
_hContainerName$ = -80
_hName$153545 = -88
_hListControl$ = -72
_pBar$ = -20
_pFastScrollUpCtrl$ = -48
_pFastScrollDownCtrl$ = -16
_hInstance$ = -28
_hListObject$ = -24
_hList$ = -36
_nListSize$ = -32
_i$ = -40
_hObject$153589 = -92
$T160765 = -96
$T160766 = -100
$T160767 = -104
?Create@CInventoryDlg@@QAEHVCSCI_WorldObject@@@Z PROC NEAR ; CInventoryDlg::Create

; 182  : {

  00687	55		 push	 ebp
  00688	8b ec		 mov	 ebp, esp
  0068a	6a ff		 push	 -1
  0068c	68 00 00 00 00	 push	 $L160796
  00691	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00697	50		 push	 eax
  00698	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0069f	81 ec b4 00 00
	00		 sub	 esp, 180		; 000000b4H
  006a5	56		 push	 esi
  006a6	89 8d 58 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 183  : 	// fail if we try to create a second inventory dialog for an object
; 184  : 	assert ( FromObject ( hObject ) == NULL );
; 185  : 
; 186  : 	// link this dialog with the object
; 187  : 	m_objMap[hObject] = this;

  006ac	8d 45 08	 lea	 eax, DWORD PTR _hObject$[ebp]
  006af	50		 push	 eax
  006b0	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_objMap@CInventoryDlg@@1V?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@A
  006b5	e8 00 00 00 00	 call	 ??A?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEAAPAVCInventoryDlg@@ABVCSCI_WorldObject@@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::operator[]
  006ba	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  006c0	89 08		 mov	 DWORD PTR [eax], ecx

; 188  : 	m_hObject = hObject;

  006c2	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  006c8	66 8b 45 08	 mov	 ax, WORD PTR _hObject$[ebp]
  006cc	66 89 82 94 00
	00 00		 mov	 WORD PTR [edx+148], ax

; 189  : 
; 190  : 	// set the window priority...
; 191  : 	SetPriority ( swPriGossip );

  006d3	6a 03		 push	 3
  006d5	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  006db	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 192  : 
; 193  : 	// determine the skin name... it's different if ego is the target object
; 194  : 	string sSkinName = "dlg_inventory.skn";

  006e0	8d 4d a0	 lea	 ecx, DWORD PTR $T160765[ebp]
  006e3	51		 push	 ecx
  006e4	68 00 00 00 00	 push	 OFFSET FLAT:$SG153526
  006e9	8d 4d c0	 lea	 ecx, DWORD PTR _sSkinName$[ebp]
  006ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  006f2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 195  : 
; 196  : 	// change the name if not ego
; 197  : 	if ( (SOL_Handle)hObject != pm.GetGlobal ( gSCI_ego ) ) {

  006f9	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  006fc	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00701	66 8b f0	 mov	 si, ax
  00704	81 e6 ff ff 00
	00		 and	 esi, 65535		; 0000ffffH
  0070a	6a 01		 push	 1
  0070c	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?pm@@3VPMachine@@A
  00711	e8 00 00 00 00	 call	 ?GetGlobal@PMachine@@QAEFH@Z ; PMachine::GetGlobal
  00716	0f bf d0	 movsx	 edx, ax
  00719	3b f2		 cmp	 esi, edx
  0071b	74 71		 je	 SHORT $L153533

; 198  : 		sSkinName = "dlg_luggage.skn";

  0071d	68 00 00 00 00	 push	 OFFSET FLAT:$SG153529
  00722	8d 4d c0	 lea	 ecx, DWORD PTR _sSkinName$[ebp]
  00725	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 199  : 		m_luggageList.push_back ( this );

  0072b	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00731	89 45 9c	 mov	 DWORD PTR $T160766[ebp], eax
  00734	8d 4d 9c	 lea	 ecx, DWORD PTR $T160766[ebp]
  00737	51		 push	 ecx
  00738	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_luggageList@CInventoryDlg@@1V?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@A
  0073d	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::push_back
$L153532:

; 200  : 
; 201  : 		// if there are too many of the luggage dialogs, toss the first one...
; 202  : 		while ( m_luggageList.size() > m_nMaxLuggageCount ) {

  00742	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_luggageList@CInventoryDlg@@1V?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@A
  00747	e8 00 00 00 00	 call	 ?size@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEIXZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::size
  0074c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?m_nMaxLuggageCount@CInventoryDlg@@1HA ; CInventoryDlg::m_nMaxLuggageCount
  00752	76 3a		 jbe	 SHORT $L153533

; 203  : 			CInventoryDlg *pDlg = *m_luggageList.begin();

  00754	8d 55 98	 lea	 edx, DWORD PTR $T160767[ebp]
  00757	52		 push	 edx
  00758	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_luggageList@CInventoryDlg@@1V?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@A
  0075d	e8 00 00 00 00	 call	 ?begin@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::begin
  00762	8b c8		 mov	 ecx, eax
  00764	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEAAPAVCInventoryDlg@@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator*
  00769	8b 00		 mov	 eax, DWORD PTR [eax]
  0076b	89 45 ac	 mov	 DWORD PTR _pDlg$153534[ebp], eax

; 204  : 			pDlg->CloseSelf();

  0076e	6a 00		 push	 0
  00770	8b 4d ac	 mov	 ecx, DWORD PTR _pDlg$153534[ebp]
  00773	8b 11		 mov	 edx, DWORD PTR [ecx]
  00775	8b 4d ac	 mov	 ecx, DWORD PTR _pDlg$153534[ebp]
  00778	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 205  : 
; 206  : 			m_luggageList.remove ( pDlg );

  0077e	8d 45 ac	 lea	 eax, DWORD PTR _pDlg$153534[ebp]
  00781	50		 push	 eax
  00782	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_luggageList@CInventoryDlg@@1V?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@A
  00787	e8 00 00 00 00	 call	 ?remove@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::remove

; 207  : 		}

  0078c	eb b4		 jmp	 SHORT $L153532
$L153533:

; 209  : 
; 210  : 	// create the skin window...
; 211  : 	BOOL bCreated = CreatePopupChild ( sSkinName.c_str(), "Inventory", CRect ( 0, 0, 0, 0 ), g_pMainWindow, FALSE );

  0078e	6a 01		 push	 1
  00790	6a 00		 push	 0
  00792	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  00798	51		 push	 ecx
  00799	6a 00		 push	 0
  0079b	6a 00		 push	 0
  0079d	6a 00		 push	 0
  0079f	6a 00		 push	 0
  007a1	8d 4d 88	 lea	 ecx, DWORD PTR $T160768[ebp]
  007a4	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  007a9	50		 push	 eax
  007aa	68 00 00 00 00	 push	 OFFSET FLAT:$SG153538
  007af	8d 4d c0	 lea	 ecx, DWORD PTR _sSkinName$[ebp]
  007b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
  007b8	50		 push	 eax
  007b9	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  007bf	e8 00 00 00 00	 call	 ?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
  007c4	89 45 d4	 mov	 DWORD PTR _bCreated$[ebp], eax

; 212  : 
; 213  : 	if ( FALSE == bCreated )

  007c7	83 7d d4 00	 cmp	 DWORD PTR _bCreated$[ebp], 0
  007cb	75 1f		 jne	 SHORT $L153539

; 214  : 		return FALSE;

  007cd	c7 45 84 00 00
	00 00		 mov	 DWORD PTR $T160769[ebp], 0
  007d4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  007db	8d 4d c0	 lea	 ecx, DWORD PTR _sSkinName$[ebp]
  007de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  007e4	8b 45 84	 mov	 eax, DWORD PTR $T160769[ebp]
  007e7	e9 ee 03 00 00	 jmp	 $L153522
$L153539:

; 215  : 
; 216  : 	// set the name of the container...
; 217  : 	CSkinObj hContainerName = FindObject ( "containerName" );

  007ec	68 00 00 00 00	 push	 OFFSET FLAT:$SG153543
  007f1	8d 55 b0	 lea	 edx, DWORD PTR _hContainerName$[ebp]
  007f4	52		 push	 edx
  007f5	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  007fb	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  00800	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 218  : 
; 219  : 	if ( hContainerName.IsValid() ) {

  00804	8d 4d b0	 lea	 ecx, DWORD PTR _hContainerName$[ebp]
  00807	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  0080c	85 c0		 test	 eax, eax
  0080e	74 53		 je	 SHORT $L153544

; 220  : 		StringID hName = hObject.getName();

  00810	8d 45 80	 lea	 eax, DWORD PTR $T160770[ebp]
  00813	50		 push	 eax
  00814	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00817	e8 00 00 00 00	 call	 ?getName@CSCI_WorldObject@@QAE?AVStringID@@XZ ; CSCI_WorldObject::getName
  0081c	50		 push	 eax
  0081d	8d 4d a8	 lea	 ecx, DWORD PTR _hName$153545[ebp]
  00820	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABV0@@Z ; StringID::StringID

; 221  : 		hContainerName.SetText ( "%s", hName.IsValid()? *hName : "Container" );

  00825	8d 4d a8	 lea	 ecx, DWORD PTR _hName$153545[ebp]
  00828	e8 00 00 00 00	 call	 ?IsValid@MemID@@QBEHXZ	; MemID::IsValid
  0082d	85 c0		 test	 eax, eax
  0082f	74 10		 je	 SHORT $L160771
  00831	8d 4d a8	 lea	 ecx, DWORD PTR _hName$153545[ebp]
  00834	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  00839	89 85 54 ff ff
	ff		 mov	 DWORD PTR -172+[ebp], eax
  0083f	eb 0a		 jmp	 SHORT $L160772
$L160771:
  00841	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -172+[ebp], OFFSET FLAT:$SG153547
$L160772:
  0084b	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR -172+[ebp]
  00851	51		 push	 ecx
  00852	68 00 00 00 00	 push	 OFFSET FLAT:$SG153548
  00857	8d 55 b0	 lea	 edx, DWORD PTR _hContainerName$[ebp]
  0085a	52		 push	 edx
  0085b	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAAHPADZZ ; CSkinObj::SetText
  00860	83 c4 0c	 add	 esp, 12			; 0000000cH
$L153544:

; 223  : 	
; 224  : 	// get the list control object
; 225  : 	CSkinObj hListControl = FindObject ( "InventoryList" );

  00863	68 00 00 00 00	 push	 OFFSET FLAT:$SG153551
  00868	8d 45 b8	 lea	 eax, DWORD PTR _hListControl$[ebp]
  0086b	50		 push	 eax
  0086c	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00872	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  00877	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 226  : 
; 227  : 	// validate the list control object
; 228  : 	assert ( hListControl.IsValid() );
; 229  : 
; 230  : 	// create the skin list control
; 231  : 	m_pListCtrl->Create ( hListControl, this, 777, false, false );

  0087b	6a 00		 push	 0
  0087d	6a 00		 push	 0
  0087f	6a 00		 push	 0
  00881	68 09 03 00 00	 push	 777			; 00000309H
  00886	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0088c	51		 push	 ecx
  0088d	83 ec 08	 sub	 esp, 8
  00890	8b cc		 mov	 ecx, esp
  00892	89 a5 7c ff ff
	ff		 mov	 DWORD PTR $T160773[ebp], esp
  00898	8d 55 b8	 lea	 edx, DWORD PTR _hListControl$[ebp]
  0089b	52		 push	 edx
  0089c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  008a1	89 85 50 ff ff
	ff		 mov	 DWORD PTR -176+[ebp], eax
  008a7	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  008ad	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  008b3	e8 00 00 00 00	 call	 ?Create@CSkinListCtrl@@QAEHVCSkinObj@@PAVCSkinWnd@@I_N22@Z ; CSkinListCtrl::Create

; 232  : 	m_pListCtrl->AddColumn ( hListControl );

  008b8	6a 00		 push	 0
  008ba	83 ec 08	 sub	 esp, 8
  008bd	8b cc		 mov	 ecx, esp
  008bf	89 a5 78 ff ff
	ff		 mov	 DWORD PTR $T160774[ebp], esp
  008c5	8d 55 b8	 lea	 edx, DWORD PTR _hListControl$[ebp]
  008c8	52		 push	 edx
  008c9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  008ce	89 85 4c ff ff
	ff		 mov	 DWORD PTR -180+[ebp], eax
  008d4	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  008da	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  008e0	e8 00 00 00 00	 call	 ?AddColumn@CSkinListCtrl@@QAEHVCSkinObj@@H@Z ; CSkinListCtrl::AddColumn

; 233  : 
; 234  : 	// find the scroll bar and hook it up!
; 235  : 	CSkinScrollBar *pBar = (CSkinScrollBar*)FindControl ( "sb_textscroller" );

  008e5	68 00 00 00 00	 push	 OFFSET FLAT:$SG153557
  008ea	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  008f0	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  008f5	89 45 ec	 mov	 DWORD PTR _pBar$[ebp], eax

; 236  : 	assert ( pBar != NULL);
; 237  : 	assert ( NULL != m_pListCtrl );
; 238  : 	m_pListCtrl->SetScrollBar( pBar );

  008f8	8b 4d ec	 mov	 ecx, DWORD PTR _pBar$[ebp]
  008fb	51		 push	 ecx
  008fc	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00902	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  00908	83 c1 54	 add	 ecx, 84			; 00000054H
  0090b	e8 00 00 00 00	 call	 ?SetScrollBar@CScrollable@@QAEXPAVCSkinScrollBar@@@Z ; CScrollable::SetScrollBar

; 239  : 
; 240  : 	// attach the fast scroll controls to the list control...
; 241  : 	CFastScrollCtrl *pFastScrollUpCtrl = (CFastScrollCtrl *)FindControl ( "fs_up" );

  00910	68 00 00 00 00	 push	 OFFSET FLAT:$SG153562
  00915	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0091b	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  00920	89 45 d0	 mov	 DWORD PTR _pFastScrollUpCtrl$[ebp], eax

; 242  : 
; 243  : 	if ( pFastScrollUpCtrl ) {

  00923	83 7d d0 00	 cmp	 DWORD PTR _pFastScrollUpCtrl$[ebp], 0
  00927	74 3f		 je	 SHORT $L153563

; 244  : 		pFastScrollUpCtrl->SetScrollable ( m_pListCtrl );

  00929	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  0092f	83 b8 98 00 00
	00 00		 cmp	 DWORD PTR [eax+152], 0
  00936	74 17		 je	 SHORT $L160775
  00938	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0093e	8b 91 98 00 00
	00		 mov	 edx, DWORD PTR [ecx+152]
  00944	83 c2 54	 add	 edx, 84			; 00000054H
  00947	89 95 48 ff ff
	ff		 mov	 DWORD PTR -184+[ebp], edx
  0094d	eb 0a		 jmp	 SHORT $L160776
$L160775:
  0094f	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -184+[ebp], 0
$L160776:
  00959	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR -184+[ebp]
  0095f	50		 push	 eax
  00960	8b 4d d0	 mov	 ecx, DWORD PTR _pFastScrollUpCtrl$[ebp]
  00963	e8 00 00 00 00	 call	 ?SetScrollable@CFastScrollCtrl@@QAEXPAVCScrollable@@@Z ; CFastScrollCtrl::SetScrollable
$L153563:

; 246  : 
; 247  : 	CFastScrollCtrl *pFastScrollDownCtrl = (CFastScrollCtrl *)FindControl ( "fs_down" );

  00968	68 00 00 00 00	 push	 OFFSET FLAT:$SG153566
  0096d	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00973	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ; CSkinWnd::FindControl
  00978	89 45 f0	 mov	 DWORD PTR _pFastScrollDownCtrl$[ebp], eax

; 248  : 
; 249  : 	if ( pFastScrollDownCtrl ) {

  0097b	83 7d f0 00	 cmp	 DWORD PTR _pFastScrollDownCtrl$[ebp], 0
  0097f	74 3f		 je	 SHORT $L153567

; 250  : 		pFastScrollDownCtrl->SetScrollable ( m_pListCtrl );

  00981	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00987	83 b9 98 00 00
	00 00		 cmp	 DWORD PTR [ecx+152], 0
  0098e	74 17		 je	 SHORT $L160777
  00990	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00996	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  0099c	83 c0 54	 add	 eax, 84			; 00000054H
  0099f	89 85 44 ff ff
	ff		 mov	 DWORD PTR -188+[ebp], eax
  009a5	eb 0a		 jmp	 SHORT $L160778
$L160777:
  009a7	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -188+[ebp], 0
$L160778:
  009b1	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR -188+[ebp]
  009b7	51		 push	 ecx
  009b8	8b 4d f0	 mov	 ecx, DWORD PTR _pFastScrollDownCtrl$[ebp]
  009bb	e8 00 00 00 00	 call	 ?SetScrollable@CFastScrollCtrl@@QAEXPAVCScrollable@@@Z ; CFastScrollCtrl::SetScrollable
$L153567:

; 252  : 
; 253  : 	// SNTODO: make this a global image list...
; 254  : 
; 255  : 	// create the image list
; 256  : 	m_pImageList = new CImageList;

  009c0	6a 08		 push	 8
  009c2	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  009c7	89 85 70 ff ff
	ff		 mov	 DWORD PTR $T160780[ebp], eax
  009cd	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  009d1	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR $T160780[ebp], 0
  009d8	74 13		 je	 SHORT $L160781
  009da	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T160780[ebp]
  009e0	e8 00 00 00 00	 call	 ??0CImageList@@QAE@XZ	; CImageList::CImageList
  009e5	89 85 40 ff ff
	ff		 mov	 DWORD PTR -192+[ebp], eax
  009eb	eb 0a		 jmp	 SHORT $L160782
$L160781:
  009ed	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -192+[ebp], 0
$L160782:
  009f7	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR -192+[ebp]
  009fd	89 95 74 ff ff
	ff		 mov	 DWORD PTR $T160779[ebp], edx
  00a03	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00a07	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00a0d	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR $T160779[ebp]
  00a13	89 88 9c 00 00
	00		 mov	 DWORD PTR [eax+156], ecx

; 257  : 	m_pImageList->Create ( 16, 16, ILC_COLOR24, 2, 2 );

  00a19	6a 02		 push	 2
  00a1b	6a 02		 push	 2
  00a1d	6a 18		 push	 24			; 00000018H
  00a1f	6a 10		 push	 16			; 00000010H
  00a21	6a 10		 push	 16			; 00000010H
  00a23	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00a29	8b 8a 9c 00 00
	00		 mov	 ecx, DWORD PTR [edx+156]
  00a2f	e8 00 00 00 00	 call	 ?Create@CImageList@@QAEHHHIHH@Z ; CImageList::Create

; 258  : 
; 259  : 	HINSTANCE hInstance = AfxGetInstanceHandle();

  00a34	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  00a39	89 45 e4	 mov	 DWORD PTR _hInstance$[ebp], eax

; 260  : 
; 261  : 	m_pImageList->Add ( LoadIcon ( hInstance, MAKEINTRESOURCE ( IDI_INV_BLANK ) ) );

  00a3c	6a 74		 push	 116			; 00000074H
  00a3e	8b 45 e4	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00a41	50		 push	 eax
  00a42	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00a48	50		 push	 eax
  00a49	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00a4f	8b 89 9c 00 00
	00		 mov	 ecx, DWORD PTR [ecx+156]
  00a55	e8 00 00 00 00	 call	 ?Add@CImageList@@QAEHPAUHICON__@@@Z ; CImageList::Add

; 262  : 	m_pImageList->Add ( LoadIcon ( hInstance, MAKEINTRESOURCE ( IDI_INV_WORN ) ) );

  00a5a	6a 75		 push	 117			; 00000075H
  00a5c	8b 55 e4	 mov	 edx, DWORD PTR _hInstance$[ebp]
  00a5f	52		 push	 edx
  00a60	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00a66	50		 push	 eax
  00a67	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00a6d	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [eax+156]
  00a73	e8 00 00 00 00	 call	 ?Add@CImageList@@QAEHPAUHICON__@@@Z ; CImageList::Add

; 263  : 
; 264  : 	m_pListCtrl->SetImageList ( m_pImageList, LVSIL_SMALL );

  00a78	6a 01		 push	 1
  00a7a	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00a80	8b 91 9c 00 00
	00		 mov	 edx, DWORD PTR [ecx+156]
  00a86	52		 push	 edx
  00a87	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00a8d	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00a93	e8 00 00 00 00	 call	 ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ; CListCtrl::SetImageList

; 265  : 
; 266  : 	// get the list of contents for the given object
; 267  : 	m_hContainer = hObject.getBaseContainer();

  00a98	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T160783[ebp]
  00a9e	51		 push	 ecx
  00a9f	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00aa2	e8 00 00 00 00	 call	 ?getBaseContainer@CSCI_WorldObject@@QAE?AVCSCI_BContainer@@XZ ; CSCI_WorldObject::getBaseContainer
  00aa7	66 8b 10	 mov	 dx, WORD PTR [eax]
  00aaa	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00ab0	66 89 90 96 00
	00 00		 mov	 WORD PTR [eax+150], dx

; 268  : 	ObjectID hListObject = m_hContainer.get_pContents();

  00ab7	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00abd	81 c1 96 00 00
	00		 add	 ecx, 150		; 00000096H
  00ac3	e8 00 00 00 00	 call	 ?get_pContents@CSCI_BContainer@@QAEFXZ ; CSCI_BContainer::get_pContents
  00ac8	50		 push	 eax
  00ac9	8d 4d e8	 lea	 ecx, DWORD PTR _hListObject$[ebp]
  00acc	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID

; 269  : 	SOL_ListID hList = (SOL_ListID)hListObject.GetProperty ( s_elements );

  00ad1	6a 24		 push	 36			; 00000024H
  00ad3	8d 4d e8	 lea	 ecx, DWORD PTR _hListObject$[ebp]
  00ad6	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00adb	50		 push	 eax
  00adc	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR $T160784[ebp]
  00ae2	e8 00 00 00 00	 call	 ??0SOL_ListID@@QAE@G@Z	; SOL_ListID::SOL_ListID
  00ae7	50		 push	 eax
  00ae8	8d 4d dc	 lea	 ecx, DWORD PTR _hList$[ebp]
  00aeb	e8 00 00 00 00	 call	 ??0SOL_ListID@@QAE@ABU0@@Z ; SOL_ListID::SOL_ListID

; 270  : 
; 271  : 	// step through the list and add a line for each object...
; 272  : 	int nListSize = hList->size();

  00af0	8d 4d dc	 lea	 ecx, DWORD PTR _hList$[ebp]
  00af3	e8 00 00 00 00	 call	 ??CFakeSOL_ListID@@QBEPAVSOL_List@@XZ ; FakeSOL_ListID::operator->
  00af8	8b c8		 mov	 ecx, eax
  00afa	e8 00 00 00 00	 call	 ?size@SOL_List@@QAEAAHXZ ; SOL_List::size
  00aff	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b01	89 4d e0	 mov	 DWORD PTR _nListSize$[ebp], ecx

; 273  : 
; 274  : 	for ( int i=0; i<nListSize; i++ ) {

  00b04	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00b0b	eb 09		 jmp	 SHORT $L153586
$L153587:
  00b0d	8b 55 d8	 mov	 edx, DWORD PTR _i$[ebp]
  00b10	83 c2 01	 add	 edx, 1
  00b13	89 55 d8	 mov	 DWORD PTR _i$[ebp], edx
$L153586:
  00b16	8b 45 d8	 mov	 eax, DWORD PTR _i$[ebp]
  00b19	3b 45 e0	 cmp	 eax, DWORD PTR _nListSize$[ebp]
  00b1c	7d 47		 jge	 SHORT $L153588

; 275  : 		CSCI_WorldObject hObject = (CSCI_WorldObject)hList->at ( i );

  00b1e	8b 4d d8	 mov	 ecx, DWORD PTR _i$[ebp]
  00b21	51		 push	 ecx
  00b22	8d 4d dc	 lea	 ecx, DWORD PTR _hList$[ebp]
  00b25	e8 00 00 00 00	 call	 ??CFakeSOL_ListID@@QBEPAVSOL_List@@XZ ; FakeSOL_ListID::operator->
  00b2a	8b c8		 mov	 ecx, eax
  00b2c	e8 00 00 00 00	 call	 ?at@SOL_List@@QAEGH@Z	; SOL_List::at
  00b31	50		 push	 eax
  00b32	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T160785[ebp]
  00b38	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@G@Z ; CSCI_WorldObject::CSCI_WorldObject
  00b3d	50		 push	 eax
  00b3e	8d 4d a4	 lea	 ecx, DWORD PTR _hObject$153589[ebp]
  00b41	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject

; 276  : 		AddObject ( hObject );

  00b46	51		 push	 ecx
  00b47	8b cc		 mov	 ecx, esp
  00b49	89 a5 60 ff ff
	ff		 mov	 DWORD PTR $T160786[ebp], esp
  00b4f	8d 55 a4	 lea	 edx, DWORD PTR _hObject$153589[ebp]
  00b52	52		 push	 edx
  00b53	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject
  00b58	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00b5e	e8 00 00 00 00	 call	 ?AddObject@CInventoryDlg@@QAEXVCSCI_WorldObject@@@Z ; CInventoryDlg::AddObject

; 277  : 	}

  00b63	eb a8		 jmp	 SHORT $L153587
$L153588:

; 278  : 
; 279  : 	// put this window back where it was the last time...
; 280  : 	RestoreLocation();

  00b65	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00b6b	e8 00 00 00 00	 call	 ?RestoreLocation@CSkinWnd@@QAE_NXZ ; CSkinWnd::RestoreLocation

; 281  : 
; 282  : 	// show the window
; 283  :     if ( !m_bHide )

  00b70	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00b76	33 c9		 xor	 ecx, ecx
  00b78	8a 88 a0 00 00
	00		 mov	 cl, BYTE PTR [eax+160]
  00b7e	85 c9		 test	 ecx, ecx
  00b80	75 20		 jne	 SHORT $L153593

; 285  : 	    ShowWindow ( SW_SHOW );

  00b82	6a 05		 push	 5
  00b84	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00b8a	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 286  : 	    m_pListCtrl->ShowWindow  (SW_SHOW );

  00b8f	6a 05		 push	 5
  00b91	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00b97	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  00b9d	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow
$L153593:

; 288  : 
; 289  : 	return TRUE;

  00ba2	c7 85 5c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR $T160787[ebp], 1
  00bac	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00bb0	8d 4d b8	 lea	 ecx, DWORD PTR _hListControl$[ebp]
  00bb3	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00bb8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00bbc	8d 4d b0	 lea	 ecx, DWORD PTR _hContainerName$[ebp]
  00bbf	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00bc4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00bcb	8d 4d c0	 lea	 ecx, DWORD PTR _sSkinName$[ebp]
  00bce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00bd4	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR $T160787[ebp]
$L153522:

; 290  : }

  00bda	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00bdd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00be4	5e		 pop	 esi
  00be5	8b e5		 mov	 esp, ebp
  00be7	5d		 pop	 ebp
  00be8	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L160788:
  00071	8d 4d c0	 lea	 ecx, DWORD PTR _sSkinName$[ebp]
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0007a	c3		 ret	 0
$L160789:
  0007b	8d 4d b0	 lea	 ecx, DWORD PTR _hContainerName$[ebp]
  0007e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00083	c3		 ret	 0
$L160790:
  00084	8d 4d b8	 lea	 ecx, DWORD PTR _hListControl$[ebp]
  00087	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0008c	c3		 ret	 0
$L160793:
  0008d	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR $T160780[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00099	c3		 ret	 0
$L160796:
  0009a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160795
  0009f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Create@CInventoryDlg@@QAEHVCSCI_WorldObject@@@Z ENDP	; CInventoryDlg::Create
PUBLIC	??0MemID@@QAE@ABV0@@Z				; MemID::MemID
;	COMDAT ??0StringID@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0StringID@@QAE@ABV0@@Z PROC NEAR			; StringID::StringID, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0StringID@@QAE@ABV0@@Z ENDP				; StringID::StringID
_TEXT	ENDS
PUBLIC	??0FakeSOL_ListID@@QAE@ABU0@@Z			; FakeSOL_ListID::FakeSOL_ListID
;	COMDAT ??0SOL_ListID@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4
___that$ = 8
??0SOL_ListID@@QAE@ABU0@@Z PROC NEAR			; SOL_ListID::SOL_ListID, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeSOL_ListID@@QAE@ABU0@@Z ; FakeSOL_ListID::FakeSOL_ListID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0SOL_ListID@@QAE@ABU0@@Z ENDP				; SOL_ListID::SOL_ListID
_TEXT	ENDS
PUBLIC	??0CSCI_Actor@@QAE@ABV0@@Z			; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4
___that$ = 8
??0CSCI_WorldObject@@QAE@ABV0@@Z PROC NEAR		; CSCI_WorldObject::CSCI_WorldObject, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@ABV0@@Z ; CSCI_Actor::CSCI_Actor
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@ABV0@@Z ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0FakeSOL_ListID@@QAE@ABU0@@Z PROC NEAR		; FakeSOL_ListID::FakeSOL_ListID, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeSOL_ListID@@QAE@ABU0@@Z ENDP			; FakeSOL_ListID::FakeSOL_ListID
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@ABV0@@Z			; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@ABV0@@Z PROC NEAR			; CSCI_Actor::CSCI_Actor, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@ABV0@@Z ; CSCI_Prop::CSCI_Prop
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@ABV0@@Z ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@ABV0@@Z			; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@ABV0@@Z PROC NEAR			; CSCI_Prop::CSCI_Prop, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@ABV0@@Z ; CSCI_View::CSCI_View
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@ABV0@@Z ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@ABV0@@Z			; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_View@@QAE@ABV0@@Z PROC NEAR			; CSCI_View::CSCI_View, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@ABV0@@Z ; CSCI_Feature::CSCI_Feature
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_View@@QAE@ABV0@@Z ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@ABV0@@Z			; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@ABV0@@Z PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@ABV0@@Z ; CSCI_BitMap::CSCI_BitMap
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@ABV0@@Z ENDP			; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@ABV0@@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@ABV0@@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@ABV0@@Z ; CSCI_Rectangle::CSCI_Rectangle
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@ABV0@@Z ENDP			; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@ABV0@@Z			; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_Rectangle@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@ABV0@@Z PROC NEAR		; CSCI_Rectangle::CSCI_Rectangle, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@ABV0@@Z ENDP			; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@ABV0@@Z			; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABV0@@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABV0@@Z ENDP			; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0CSCI_BHead@@QAE@ABV0@@Z			; CSCI_BHead::CSCI_BHead
PUBLIC	?IsObject@ObjectID@@QBEHXZ			; ObjectID::IsObject
PUBLIC	?UpdateObjectIcon@CInventoryDlg@@QAEXVCSCI_WorldObject@@H@Z ; CInventoryDlg::UpdateObjectIcon
PUBLIC	?IsEmpty@CString@@QBEHXZ			; CString::IsEmpty
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
EXTRN	?AddLine@CSkinListCtrl@@QAAHHHZZ:NEAR		; CSkinListCtrl::AddLine
EXTRN	?FindItem@CSkinListCtrl@@QAEHH@Z:NEAR		; CSkinListCtrl::FindItem
EXTRN	?getBaseHead@CSCI_WorldObject@@QAE?AVCSCI_BHead@@XZ:NEAR ; CSCI_WorldObject::getBaseHead
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
EXTRN	??4CString@@QAEABV0@PBD@Z:NEAR			; CString::operator=
EXTRN	?TrimLeft@CString@@QAEXXZ:NEAR			; CString::TrimLeft
_DATA	SEGMENT
$SG153643 DB	'Unnamed Object', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T160815 DD	019930520H
	DD	01H
	DD	FLAT:$T160817
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160817 DD	0ffffffffH
	DD	FLAT:$L160813
xdata$x	ENDS
_TEXT	SEGMENT
_hObject$ = 8
_this$ = -44
_nItem$ = -24
_hHead$ = -20
_hName$ = -16
_sName$ = -28
$T160810 = -32
$T160811 = -36
$T160812 = -40
__$EHRec$ = -12
?AddObject@CInventoryDlg@@QAEXVCSCI_WorldObject@@@Z PROC NEAR ; CInventoryDlg::AddObject

; 294  : {

  00beb	55		 push	 ebp
  00bec	8b ec		 mov	 ebp, esp
  00bee	6a ff		 push	 -1
  00bf0	68 00 00 00 00	 push	 $L160816
  00bf5	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00bfb	50		 push	 eax
  00bfc	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00c03	83 ec 20	 sub	 esp, 32			; 00000020H
  00c06	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 295  : 	int nItem = m_pListCtrl->FindItem ( (SOL_Handle)hObject );

  00c09	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00c0c	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00c11	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00c16	50		 push	 eax
  00c17	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  00c1a	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00c20	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  00c25	89 45 e8	 mov	 DWORD PTR _nItem$[ebp], eax

; 296  : 
; 297  : 	if ( nItem != -1 )

  00c28	83 7d e8 ff	 cmp	 DWORD PTR _nItem$[ebp], -1
  00c2c	74 05		 je	 SHORT $L153634

; 298  : 		return;

  00c2e	e9 eb 00 00 00	 jmp	 $L153631
$L153634:

; 299  : 
; 300  : 	// don't let heads be added...
; 301  : 	CSCI_BHead hHead = hObject.getBaseHead();

  00c33	8d 4d e0	 lea	 ecx, DWORD PTR $T160810[ebp]
  00c36	51		 push	 ecx
  00c37	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00c3a	e8 00 00 00 00	 call	 ?getBaseHead@CSCI_WorldObject@@QAE?AVCSCI_BHead@@XZ ; CSCI_WorldObject::getBaseHead
  00c3f	50		 push	 eax
  00c40	8d 4d ec	 lea	 ecx, DWORD PTR _hHead$[ebp]
  00c43	e8 00 00 00 00	 call	 ??0CSCI_BHead@@QAE@ABV0@@Z ; CSCI_BHead::CSCI_BHead

; 302  : 
; 303  : 	if ( hHead.IsObject() )

  00c48	8d 4d ec	 lea	 ecx, DWORD PTR _hHead$[ebp]
  00c4b	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  00c50	85 c0		 test	 eax, eax
  00c52	74 05		 je	 SHORT $L153637

; 304  : 		return;

  00c54	e9 c5 00 00 00	 jmp	 $L153631
$L153637:

; 305  : 
; 306  : 	StringID hName = hObject.getName();

  00c59	8d 55 dc	 lea	 edx, DWORD PTR $T160811[ebp]
  00c5c	52		 push	 edx
  00c5d	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00c60	e8 00 00 00 00	 call	 ?getName@CSCI_WorldObject@@QAE?AVStringID@@XZ ; CSCI_WorldObject::getName
  00c65	50		 push	 eax
  00c66	8d 4d f0	 lea	 ecx, DWORD PTR _hName$[ebp]
  00c69	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABV0@@Z ; StringID::StringID

; 307  : 
; 308  : 	CString sName;

  00c6e	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  00c71	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00c76	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 309  : 	
; 310  : 	sName = *hName;

  00c7d	8d 4d f0	 lea	 ecx, DWORD PTR _hName$[ebp]
  00c80	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  00c85	50		 push	 eax
  00c86	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  00c89	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@PBD@Z ; CString::operator=

; 311  : 
; 312  : 	sName.TrimLeft();

  00c8e	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  00c91	e8 00 00 00 00	 call	 ?TrimLeft@CString@@QAEXXZ ; CString::TrimLeft

; 313  : 
; 314  : 	if ( sName.IsEmpty() )

  00c96	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  00c99	e8 00 00 00 00	 call	 ?IsEmpty@CString@@QBEHXZ ; CString::IsEmpty
  00c9e	85 c0		 test	 eax, eax
  00ca0	74 29		 je	 SHORT $L153641

; 315  : 		m_pListCtrl->AddLine ( (SOL_Handle)hObject, 1, "Unnamed Object" );

  00ca2	68 00 00 00 00	 push	 OFFSET FLAT:$SG153643
  00ca7	6a 01		 push	 1
  00ca9	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00cac	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00cb1	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00cb6	50		 push	 eax
  00cb7	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  00cba	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00cc0	51		 push	 ecx
  00cc1	e8 00 00 00 00	 call	 ?AddLine@CSkinListCtrl@@QAAHHHZZ ; CSkinListCtrl::AddLine
  00cc6	83 c4 10	 add	 esp, 16			; 00000010H

; 316  : 	else

  00cc9	eb 2b		 jmp	 SHORT $L153644
$L153641:

; 317  : 		m_pListCtrl->AddLine ( (SOL_Handle)hObject, 1, *hName );

  00ccb	8d 4d f0	 lea	 ecx, DWORD PTR _hName$[ebp]
  00cce	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  00cd3	50		 push	 eax
  00cd4	6a 01		 push	 1
  00cd6	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00cd9	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00cde	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00ce3	50		 push	 eax
  00ce4	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00ce7	8b 82 98 00 00
	00		 mov	 eax, DWORD PTR [edx+152]
  00ced	50		 push	 eax
  00cee	e8 00 00 00 00	 call	 ?AddLine@CSkinListCtrl@@QAAHHHZZ ; CSkinListCtrl::AddLine
  00cf3	83 c4 10	 add	 esp, 16			; 00000010H
$L153644:

; 318  : 
; 319  : 	// update the icon of this object
; 320  : 	UpdateObjectIcon ( hObject );

  00cf6	6a ff		 push	 -1
  00cf8	51		 push	 ecx
  00cf9	8b cc		 mov	 ecx, esp
  00cfb	89 65 d8	 mov	 DWORD PTR $T160812[ebp], esp
  00cfe	8d 55 08	 lea	 edx, DWORD PTR _hObject$[ebp]
  00d01	52		 push	 edx
  00d02	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject
  00d07	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d0a	e8 00 00 00 00	 call	 ?UpdateObjectIcon@CInventoryDlg@@QAEXVCSCI_WorldObject@@H@Z ; CInventoryDlg::UpdateObjectIcon

; 321  : }

  00d0f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d16	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  00d19	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L153631:
  00d1e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00d21	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00d28	8b e5		 mov	 esp, ebp
  00d2a	5d		 pop	 ebp
  00d2b	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L160813:
  000a4	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  000a7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000ac	c3		 ret	 0
$L160816:
  000ad	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160815
  000b2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddObject@CInventoryDlg@@QAEXVCSCI_WorldObject@@@Z ENDP ; CInventoryDlg::AddObject
PUBLIC	??0CSCI_BWearable@@QAE@ABV0@@Z			; CSCI_BWearable::CSCI_BWearable
;	COMDAT ??0CSCI_BHead@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BHead@@QAE@ABV0@@Z PROC NEAR			; CSCI_BHead::CSCI_BHead, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_BWearable@@QAE@ABV0@@Z ; CSCI_BWearable::CSCI_BWearable
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BHead@@QAE@ABV0@@Z ENDP				; CSCI_BHead::CSCI_BHead
_TEXT	ENDS
PUBLIC	??0CSCI_WorldObjectBase@@QAE@ABV0@@Z		; CSCI_WorldObjectBase::CSCI_WorldObjectBase
;	COMDAT ??0CSCI_BWearable@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BWearable@@QAE@ABV0@@Z PROC NEAR		; CSCI_BWearable::CSCI_BWearable, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_WorldObjectBase@@QAE@ABV0@@Z ; CSCI_WorldObjectBase::CSCI_WorldObjectBase
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BWearable@@QAE@ABV0@@Z ENDP			; CSCI_BWearable::CSCI_BWearable
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_WorldObjectBase@@QAE@ABV0@@Z PROC NEAR		; CSCI_WorldObjectBase::CSCI_WorldObjectBase, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_WorldObjectBase@@QAE@ABV0@@Z ENDP		; CSCI_WorldObjectBase::CSCI_WorldObjectBase
_TEXT	ENDS
PUBLIC	?DelObject@CInventoryDlg@@QAEXVCSCI_WorldObject@@@Z ; CInventoryDlg::DelObject
EXTRN	?DeleteItem@CSkinListCtrl@@QAEHH@Z:NEAR		; CSkinListCtrl::DeleteItem
_TEXT	SEGMENT
_hObject$ = 8
_this$ = -8
_nItem$ = -4
?DelObject@CInventoryDlg@@QAEXVCSCI_WorldObject@@@Z PROC NEAR ; CInventoryDlg::DelObject

; 325  : {

  00d2e	55		 push	 ebp
  00d2f	8b ec		 mov	 ebp, esp
  00d31	83 ec 08	 sub	 esp, 8
  00d34	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 326  : 	int nItem = m_pListCtrl->FindItem ( (SOL_Handle)hObject );

  00d37	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00d3a	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00d3f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00d44	50		 push	 eax
  00d45	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00d48	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00d4e	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  00d53	89 45 fc	 mov	 DWORD PTR _nItem$[ebp], eax

; 327  : 
; 328  : 	if ( nItem == -1 )

  00d56	83 7d fc ff	 cmp	 DWORD PTR _nItem$[ebp], -1
  00d5a	75 02		 jne	 SHORT $L153662

; 329  : 		return;

  00d5c	eb 12		 jmp	 SHORT $L153659
$L153662:

; 330  : 
; 331  : 	m_pListCtrl->DeleteItem ( nItem );

  00d5e	8b 4d fc	 mov	 ecx, DWORD PTR _nItem$[ebp]
  00d61	51		 push	 ecx
  00d62	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00d65	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  00d6b	e8 00 00 00 00	 call	 ?DeleteItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::DeleteItem
$L153659:

; 332  : }

  00d70	8b e5		 mov	 esp, ebp
  00d72	5d		 pop	 ebp
  00d73	c2 04 00	 ret	 4
?DelObject@CInventoryDlg@@QAEXVCSCI_WorldObject@@@Z ENDP ; CInventoryDlg::DelObject
_TEXT	ENDS
PUBLIC	?UpdateObject@CInventoryDlg@@QAEXVCSCI_WorldObject@@@Z ; CInventoryDlg::UpdateObject
EXTRN	?SetItemText@CListCtrl@@QAEHHHPBD@Z:NEAR	; CListCtrl::SetItemText
_TEXT	SEGMENT
$T160823 = -12
_hObject$ = 8
_this$ = -20
_nItem$ = -8
_hName$ = -4
?UpdateObject@CInventoryDlg@@QAEXVCSCI_WorldObject@@@Z PROC NEAR ; CInventoryDlg::UpdateObject

; 336  : {

  00d76	55		 push	 ebp
  00d77	8b ec		 mov	 ebp, esp
  00d79	83 ec 14	 sub	 esp, 20			; 00000014H
  00d7c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 337  : 	int nItem = m_pListCtrl->FindItem ( (SOL_Handle)hObject );

  00d7f	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00d82	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00d87	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00d8c	50		 push	 eax
  00d8d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00d90	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00d96	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  00d9b	89 45 f8	 mov	 DWORD PTR _nItem$[ebp], eax

; 338  : 
; 339  : 	if ( nItem == -1 )

  00d9e	83 7d f8 ff	 cmp	 DWORD PTR _nItem$[ebp], -1
  00da2	75 02		 jne	 SHORT $L153669

; 340  : 		return;

  00da4	eb 4a		 jmp	 SHORT $L153666
$L153669:

; 341  : 
; 342  : 	StringID hName = hObject.getName();

  00da6	8d 4d f4	 lea	 ecx, DWORD PTR $T160823[ebp]
  00da9	51		 push	 ecx
  00daa	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00dad	e8 00 00 00 00	 call	 ?getName@CSCI_WorldObject@@QAE?AVStringID@@XZ ; CSCI_WorldObject::getName
  00db2	50		 push	 eax
  00db3	8d 4d fc	 lea	 ecx, DWORD PTR _hName$[ebp]
  00db6	e8 00 00 00 00	 call	 ??0StringID@@QAE@ABV0@@Z ; StringID::StringID

; 343  : 	m_pListCtrl->SetItemText ( nItem, 0, *hName );

  00dbb	8d 4d fc	 lea	 ecx, DWORD PTR _hName$[ebp]
  00dbe	e8 00 00 00 00	 call	 ??DStringID@@QAEPADXZ	; StringID::operator*
  00dc3	50		 push	 eax
  00dc4	6a 00		 push	 0
  00dc6	8b 55 f8	 mov	 edx, DWORD PTR _nItem$[ebp]
  00dc9	52		 push	 edx
  00dca	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00dcd	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00dd3	e8 00 00 00 00	 call	 ?SetItemText@CListCtrl@@QAEHHHPBD@Z ; CListCtrl::SetItemText

; 344  : 
; 345  : 	// update the icon of this object
; 346  : 	UpdateObjectIcon ( hObject, nItem );

  00dd8	8b 4d f8	 mov	 ecx, DWORD PTR _nItem$[ebp]
  00ddb	51		 push	 ecx
  00ddc	51		 push	 ecx
  00ddd	8b cc		 mov	 ecx, esp
  00ddf	8d 55 08	 lea	 edx, DWORD PTR _hObject$[ebp]
  00de2	52		 push	 edx
  00de3	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject
  00de8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00deb	e8 00 00 00 00	 call	 ?UpdateObjectIcon@CInventoryDlg@@QAEXVCSCI_WorldObject@@H@Z ; CInventoryDlg::UpdateObjectIcon
$L153666:

; 347  : }

  00df0	8b e5		 mov	 esp, ebp
  00df2	5d		 pop	 ebp
  00df3	c2 04 00	 ret	 4
?UpdateObject@CInventoryDlg@@QAEXVCSCI_WorldObject@@@Z ENDP ; CInventoryDlg::UpdateObject
_TEXT	ENDS
PUBLIC	?get_pIsWorn@CSCI_BWearable@@QAEFXZ		; CSCI_BWearable::get_pIsWorn
PUBLIC	??0CSCI_BWeapon@@QAE@ABV0@@Z			; CSCI_BWeapon::CSCI_BWeapon
EXTRN	?SetItemIcon@CSkinListCtrl@@QAEXHH@Z:NEAR	; CSkinListCtrl::SetItemIcon
EXTRN	?getBaseWearable@CSCI_WorldObject@@QAE?AVCSCI_BWearable@@XZ:NEAR ; CSCI_WorldObject::getBaseWearable
EXTRN	?getBaseWeapon@CSCI_WorldObject@@QAE?AVCSCI_BWeapon@@XZ:NEAR ; CSCI_WorldObject::getBaseWeapon
_TEXT	SEGMENT
$T160828 = -16
$T160829 = -20
_hObject$ = 8
_nItemIndex$ = 12
_this$ = -24
_nItem$ = -8
_hWearable$ = -12
_hWeapon$ = -4
?UpdateObjectIcon@CInventoryDlg@@QAEXVCSCI_WorldObject@@H@Z PROC NEAR ; CInventoryDlg::UpdateObjectIcon

; 351  : {

  00df6	55		 push	 ebp
  00df7	8b ec		 mov	 ebp, esp
  00df9	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00dfc	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 352  : 	int nItem = (nItemIndex == -1)? m_pListCtrl->FindItem ( (SOL_Handle)hObject ) : nItemIndex;

  00dff	83 7d 0c ff	 cmp	 DWORD PTR _nItemIndex$[ebp], -1
  00e03	75 21		 jne	 SHORT $L160826
  00e05	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00e08	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00e0d	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00e12	50		 push	 eax
  00e13	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00e16	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [eax+152]
  00e1c	e8 00 00 00 00	 call	 ?FindItem@CSkinListCtrl@@QAEHH@Z ; CSkinListCtrl::FindItem
  00e21	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00e24	eb 06		 jmp	 SHORT $L160827
$L160826:
  00e26	8b 4d 0c	 mov	 ecx, DWORD PTR _nItemIndex$[ebp]
  00e29	89 4d e4	 mov	 DWORD PTR -28+[ebp], ecx
$L160827:
  00e2c	8b 55 e4	 mov	 edx, DWORD PTR -28+[ebp]
  00e2f	89 55 f8	 mov	 DWORD PTR _nItem$[ebp], edx

; 353  : 
; 354  : 	if ( nItem == -1 )

  00e32	83 7d f8 ff	 cmp	 DWORD PTR _nItem$[ebp], -1
  00e36	75 05		 jne	 SHORT $L153680

; 355  : 		return;

  00e38	e9 8a 00 00 00	 jmp	 $L153677
$L153680:

; 356  : 
; 357  : 	CSCI_BWearable hWearable = hObject.getBaseWearable();

  00e3d	8d 45 f0	 lea	 eax, DWORD PTR $T160828[ebp]
  00e40	50		 push	 eax
  00e41	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00e44	e8 00 00 00 00	 call	 ?getBaseWearable@CSCI_WorldObject@@QAE?AVCSCI_BWearable@@XZ ; CSCI_WorldObject::getBaseWearable
  00e49	50		 push	 eax
  00e4a	8d 4d f4	 lea	 ecx, DWORD PTR _hWearable$[ebp]
  00e4d	e8 00 00 00 00	 call	 ??0CSCI_BWearable@@QAE@ABV0@@Z ; CSCI_BWearable::CSCI_BWearable

; 358  : 	CSCI_BWeapon hWeapon = hObject.getBaseWeapon();

  00e52	8d 4d ec	 lea	 ecx, DWORD PTR $T160829[ebp]
  00e55	51		 push	 ecx
  00e56	8d 4d 08	 lea	 ecx, DWORD PTR _hObject$[ebp]
  00e59	e8 00 00 00 00	 call	 ?getBaseWeapon@CSCI_WorldObject@@QAE?AVCSCI_BWeapon@@XZ ; CSCI_WorldObject::getBaseWeapon
  00e5e	50		 push	 eax
  00e5f	8d 4d fc	 lea	 ecx, DWORD PTR _hWeapon$[ebp]
  00e62	e8 00 00 00 00	 call	 ??0CSCI_BWeapon@@QAE@ABV0@@Z ; CSCI_BWeapon::CSCI_BWeapon

; 359  : 
; 360  : 	if ( (hWearable.IsObject() && hWearable.get_pIsWorn()) || (hWeapon.IsObject() && hWeapon.get_pIsWorn()) ) {

  00e67	8d 4d f4	 lea	 ecx, DWORD PTR _hWearable$[ebp]
  00e6a	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  00e6f	85 c0		 test	 eax, eax
  00e71	74 0f		 je	 SHORT $L153687
  00e73	8d 4d f4	 lea	 ecx, DWORD PTR _hWearable$[ebp]
  00e76	e8 00 00 00 00	 call	 ?get_pIsWorn@CSCI_BWearable@@QAEFXZ ; CSCI_BWearable::get_pIsWorn
  00e7b	0f bf d0	 movsx	 edx, ax
  00e7e	85 d2		 test	 edx, edx
  00e80	75 1b		 jne	 SHORT $L153686
$L153687:
  00e82	8d 4d fc	 lea	 ecx, DWORD PTR _hWeapon$[ebp]
  00e85	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  00e8a	85 c0		 test	 eax, eax
  00e8c	74 25		 je	 SHORT $L153685
  00e8e	8d 4d fc	 lea	 ecx, DWORD PTR _hWeapon$[ebp]
  00e91	e8 00 00 00 00	 call	 ?get_pIsWorn@CSCI_BWearable@@QAEFXZ ; CSCI_BWearable::get_pIsWorn
  00e96	0f bf c0	 movsx	 eax, ax
  00e99	85 c0		 test	 eax, eax
  00e9b	74 16		 je	 SHORT $L153685
$L153686:

; 361  : 		m_pListCtrl->SetItemIcon ( nItem, 1 );

  00e9d	6a 01		 push	 1
  00e9f	8b 4d f8	 mov	 ecx, DWORD PTR _nItem$[ebp]
  00ea2	51		 push	 ecx
  00ea3	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00ea6	8b 8a 98 00 00
	00		 mov	 ecx, DWORD PTR [edx+152]
  00eac	e8 00 00 00 00	 call	 ?SetItemIcon@CSkinListCtrl@@QAEXHH@Z ; CSkinListCtrl::SetItemIcon

; 362  : 	} else {

  00eb1	eb 14		 jmp	 SHORT $L153688
$L153685:

; 363  : 		m_pListCtrl->SetItemIcon ( nItem, 0 );

  00eb3	6a 00		 push	 0
  00eb5	8b 45 f8	 mov	 eax, DWORD PTR _nItem$[ebp]
  00eb8	50		 push	 eax
  00eb9	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ebc	8b 89 98 00 00
	00		 mov	 ecx, DWORD PTR [ecx+152]
  00ec2	e8 00 00 00 00	 call	 ?SetItemIcon@CSkinListCtrl@@QAEXHH@Z ; CSkinListCtrl::SetItemIcon
$L153688:
$L153677:

; 365  : }

  00ec7	8b e5		 mov	 esp, ebp
  00ec9	5d		 pop	 ebp
  00eca	c2 08 00	 ret	 8
?UpdateObjectIcon@CInventoryDlg@@QAEXVCSCI_WorldObject@@H@Z ENDP ; CInventoryDlg::UpdateObjectIcon
_TEXT	ENDS
;	COMDAT ??0CSCI_BWeapon@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BWeapon@@QAE@ABV0@@Z PROC NEAR			; CSCI_BWeapon::CSCI_BWeapon, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_BWearable@@QAE@ABV0@@Z ; CSCI_BWearable::CSCI_BWearable
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BWeapon@@QAE@ABV0@@Z ENDP			; CSCI_BWeapon::CSCI_BWeapon
_TEXT	ENDS
PUBLIC	?end@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@XZ ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end
PUBLIC	?find@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@ABVCSCI_WorldObject@@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::find
PUBLIC	?FromObject@CInventoryDlg@@SAPAV1@VCSCI_WorldObject@@@Z ; CInventoryDlg::FromObject
PUBLIC	??Diterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator*
PUBLIC	??8iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator==
_TEXT	SEGMENT
$T160832 = -8
$T160833 = -12
_hObject$ = 8
_it$ = -4
?FromObject@CInventoryDlg@@SAPAV1@VCSCI_WorldObject@@@Z PROC NEAR ; CInventoryDlg::FromObject

; 369  : {

  00ecd	55		 push	 ebp
  00ece	8b ec		 mov	 ebp, esp
  00ed0	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 370  : 	map<CSCI_WorldObject, CInventoryDlg *>::iterator it = m_objMap.find ( hObject );

  00ed3	8d 45 08	 lea	 eax, DWORD PTR _hObject$[ebp]
  00ed6	50		 push	 eax
  00ed7	8d 4d f8	 lea	 ecx, DWORD PTR $T160832[ebp]
  00eda	51		 push	 ecx
  00edb	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_objMap@CInventoryDlg@@1V?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@A
  00ee0	e8 00 00 00 00	 call	 ?find@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@ABVCSCI_WorldObject@@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::find
  00ee5	8b 10		 mov	 edx, DWORD PTR [eax]
  00ee7	89 55 fc	 mov	 DWORD PTR _it$[ebp], edx

; 371  : 
; 372  : 	if ( it == m_objMap.end() )

  00eea	8d 45 f4	 lea	 eax, DWORD PTR $T160833[ebp]
  00eed	50		 push	 eax
  00eee	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_objMap@CInventoryDlg@@1V?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@A
  00ef3	e8 00 00 00 00	 call	 ?end@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@XZ ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end
  00ef8	50		 push	 eax
  00ef9	8d 4d fc	 lea	 ecx, DWORD PTR _it$[ebp]
  00efc	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator==
  00f01	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00f06	85 c0		 test	 eax, eax
  00f08	74 04		 je	 SHORT $L153703

; 373  : 		return NULL;

  00f0a	33 c0		 xor	 eax, eax
  00f0c	eb 0b		 jmp	 SHORT $L153694
$L153703:

; 374  : 
; 375  : 	return (*it).second;

  00f0e	8d 4d fc	 lea	 ecx, DWORD PTR _it$[ebp]
  00f11	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator*
  00f16	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$L153694:

; 376  : }

  00f19	8b e5		 mov	 esp, ebp
  00f1b	5d		 pop	 ebp
  00f1c	c3		 ret	 0
?FromObject@CInventoryDlg@@SAPAV1@VCSCI_WorldObject@@@Z ENDP ; CInventoryDlg::FromObject
_TEXT	ENDS
PUBLIC	??8@YG_NABVCString@@PBD@Z			; operator==
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	?GetName@CSkinObj@@QAE?AVCString@@XZ:NEAR	; CSkinObj::GetName
EXTRN	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::MakeSkinCtrl
EXTRN	??0CInventoryListCtrl@@QAE@VCSkinObj@@VCSCI_WorldObject@@@Z:NEAR ; CInventoryListCtrl::CInventoryListCtrl
_DATA	SEGMENT
	ORG $+1
$SG153711 DB	'InventoryList', 00H
	ORG $+2
$SG153721 DB	'fs_up', 00H
	ORG $+2
$SG153730 DB	'fs_down', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T160868 DD	019930520H
	DD	05H
	DD	FLAT:$T160870
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160870 DD	0ffffffffH
	DD	FLAT:$L160858
	DD	00H
	DD	FLAT:$L160859
	DD	01H
	DD	FLAT:$L160860
	DD	01H
	DD	FLAT:$L160862
	DD	01H
	DD	FLAT:$L160864
xdata$x	ENDS
_TEXT	SEGMENT
$T160835 = -20
$T160836 = -24
$T160837 = -28
$T160838 = -32
$T160839 = -36
$T160844 = -40
$T160845 = -44
$T160846 = -48
$T160847 = -52
$T160850 = -56
$T160851 = -60
$T160852 = -64
$T160853 = -68
$T160856 = -72
$T160857 = -76
__$EHRec$ = -12
_obj$ = 8
_this$ = -80
_id$ = -16
?MakeSkinCtrl@CInventoryDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CInventoryDlg::MakeSkinCtrl

; 380  : {

  00f1d	55		 push	 ebp
  00f1e	8b ec		 mov	 ebp, esp
  00f20	6a ff		 push	 -1
  00f22	68 00 00 00 00	 push	 $L160869
  00f27	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00f2d	50		 push	 eax
  00f2e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00f35	83 ec 74	 sub	 esp, 116		; 00000074H
  00f38	89 4d b0	 mov	 DWORD PTR _this$[ebp], ecx
  00f3b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 381  : 	CString id = obj.GetName();

  00f42	8d 45 f0	 lea	 eax, DWORD PTR _id$[ebp]
  00f45	50		 push	 eax
  00f46	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00f49	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  00f4e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 382  : 
; 383  : 	if ( id == "InventoryList" ) {

  00f52	68 00 00 00 00	 push	 OFFSET FLAT:$SG153711
  00f57	8d 4d f0	 lea	 ecx, DWORD PTR _id$[ebp]
  00f5a	51		 push	 ecx
  00f5b	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  00f60	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00f65	85 c0		 test	 eax, eax
  00f67	0f 84 b1 00 00
	00		 je	 $L153710

; 384  : 		return m_pListCtrl = new CInventoryListCtrl ( obj, m_hObject );

  00f6d	68 c8 00 00 00	 push	 200			; 000000c8H
  00f72	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00f77	89 45 e4	 mov	 DWORD PTR $T160837[ebp], eax
  00f7a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00f7e	83 7d e4 00	 cmp	 DWORD PTR $T160837[ebp], 0
  00f82	74 3c		 je	 SHORT $L160840
  00f84	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  00f87	81 c2 94 00 00
	00		 add	 edx, 148		; 00000094H
  00f8d	51		 push	 ecx
  00f8e	8b cc		 mov	 ecx, esp
  00f90	89 65 e0	 mov	 DWORD PTR $T160838[ebp], esp
  00f93	52		 push	 edx
  00f94	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject
  00f99	83 ec 08	 sub	 esp, 8
  00f9c	8b cc		 mov	 ecx, esp
  00f9e	89 65 dc	 mov	 DWORD PTR $T160839[ebp], esp
  00fa1	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  00fa4	50		 push	 eax
  00fa5	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00faa	89 45 ac	 mov	 DWORD PTR -84+[ebp], eax
  00fad	8b 4d e4	 mov	 ecx, DWORD PTR $T160837[ebp]
  00fb0	e8 00 00 00 00	 call	 ??0CInventoryListCtrl@@QAE@VCSkinObj@@VCSCI_WorldObject@@@Z ; CInventoryListCtrl::CInventoryListCtrl
  00fb5	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  00fb8	8b 4d a8	 mov	 ecx, DWORD PTR -88+[ebp]
  00fbb	89 4d a4	 mov	 DWORD PTR -92+[ebp], ecx
  00fbe	eb 07		 jmp	 SHORT $L160841
$L160840:
  00fc0	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR -92+[ebp], 0
$L160841:
  00fc7	8b 55 a4	 mov	 edx, DWORD PTR -92+[ebp]
  00fca	89 55 e8	 mov	 DWORD PTR $T160836[ebp], edx
  00fcd	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00fd1	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  00fd4	8b 4d e8	 mov	 ecx, DWORD PTR $T160836[ebp]
  00fd7	89 88 98 00 00
	00		 mov	 DWORD PTR [eax+152], ecx
  00fdd	83 7d e8 00	 cmp	 DWORD PTR $T160836[ebp], 0
  00fe1	74 0b		 je	 SHORT $L160842
  00fe3	8b 55 e8	 mov	 edx, DWORD PTR $T160836[ebp]
  00fe6	83 c2 40	 add	 edx, 64			; 00000040H
  00fe9	89 55 a0	 mov	 DWORD PTR -96+[ebp], edx
  00fec	eb 07		 jmp	 SHORT $L160843
$L160842:
  00fee	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR -96+[ebp], 0
$L160843:
  00ff5	8b 45 a0	 mov	 eax, DWORD PTR -96+[ebp]
  00ff8	89 45 ec	 mov	 DWORD PTR $T160835[ebp], eax
  00ffb	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00fff	8d 4d f0	 lea	 ecx, DWORD PTR _id$[ebp]
  01002	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01007	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0100e	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01011	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01016	8b 45 ec	 mov	 eax, DWORD PTR $T160835[ebp]
  01019	e9 6a 01 00 00	 jmp	 $L153707
$L153710:

; 386  : 
; 387  : 	else if ( id == "fs_up" ) {

  0101e	68 00 00 00 00	 push	 OFFSET FLAT:$SG153721
  01023	8d 4d f0	 lea	 ecx, DWORD PTR _id$[ebp]
  01026	51		 push	 ecx
  01027	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  0102c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01031	85 c0		 test	 eax, eax
  01033	74 7e		 je	 SHORT $L153720

; 388  : 		return new CFastScrollCtrl ( obj, this, -1 );

  01035	6a 20		 push	 32			; 00000020H
  01037	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0103c	83 c4 04	 add	 esp, 4
  0103f	89 45 d0	 mov	 DWORD PTR $T160846[ebp], eax
  01042	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  01046	83 7d d0 00	 cmp	 DWORD PTR $T160846[ebp], 0
  0104a	74 2d		 je	 SHORT $L160848
  0104c	6a ff		 push	 -1
  0104e	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  01051	52		 push	 edx
  01052	83 ec 08	 sub	 esp, 8
  01055	8b cc		 mov	 ecx, esp
  01057	89 65 cc	 mov	 DWORD PTR $T160847[ebp], esp
  0105a	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  0105d	50		 push	 eax
  0105e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01063	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  01066	8b 4d d0	 mov	 ecx, DWORD PTR $T160846[ebp]
  01069	e8 00 00 00 00	 call	 ??0CFastScrollCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ; CFastScrollCtrl::CFastScrollCtrl
  0106e	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  01071	8b 4d 98	 mov	 ecx, DWORD PTR -104+[ebp]
  01074	89 4d 94	 mov	 DWORD PTR -108+[ebp], ecx
  01077	eb 07		 jmp	 SHORT $L160849
$L160848:
  01079	c7 45 94 00 00
	00 00		 mov	 DWORD PTR -108+[ebp], 0
$L160849:
  01080	8b 55 94	 mov	 edx, DWORD PTR -108+[ebp]
  01083	89 55 d4	 mov	 DWORD PTR $T160845[ebp], edx
  01086	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0108a	8b 45 d4	 mov	 eax, DWORD PTR $T160845[ebp]
  0108d	89 45 d8	 mov	 DWORD PTR $T160844[ebp], eax
  01090	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01094	8d 4d f0	 lea	 ecx, DWORD PTR _id$[ebp]
  01097	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0109c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  010a3	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  010a6	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  010ab	8b 45 d8	 mov	 eax, DWORD PTR $T160844[ebp]
  010ae	e9 d5 00 00 00	 jmp	 $L153707
$L153720:

; 390  : 
; 391  : 	else if ( id == "fs_down" ) {

  010b3	68 00 00 00 00	 push	 OFFSET FLAT:$SG153730
  010b8	8d 4d f0	 lea	 ecx, DWORD PTR _id$[ebp]
  010bb	51		 push	 ecx
  010bc	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  010c1	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  010c6	85 c0		 test	 eax, eax
  010c8	74 7b		 je	 SHORT $L153729

; 392  : 		return new CFastScrollCtrl ( obj, this, 1 );

  010ca	6a 20		 push	 32			; 00000020H
  010cc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  010d1	83 c4 04	 add	 esp, 4
  010d4	89 45 c0	 mov	 DWORD PTR $T160852[ebp], eax
  010d7	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  010db	83 7d c0 00	 cmp	 DWORD PTR $T160852[ebp], 0
  010df	74 2d		 je	 SHORT $L160854
  010e1	6a 01		 push	 1
  010e3	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  010e6	52		 push	 edx
  010e7	83 ec 08	 sub	 esp, 8
  010ea	8b cc		 mov	 ecx, esp
  010ec	89 65 bc	 mov	 DWORD PTR $T160853[ebp], esp
  010ef	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  010f2	50		 push	 eax
  010f3	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  010f8	89 45 90	 mov	 DWORD PTR -112+[ebp], eax
  010fb	8b 4d c0	 mov	 ecx, DWORD PTR $T160852[ebp]
  010fe	e8 00 00 00 00	 call	 ??0CFastScrollCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@H@Z ; CFastScrollCtrl::CFastScrollCtrl
  01103	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  01106	8b 4d 8c	 mov	 ecx, DWORD PTR -116+[ebp]
  01109	89 4d 88	 mov	 DWORD PTR -120+[ebp], ecx
  0110c	eb 07		 jmp	 SHORT $L160855
$L160854:
  0110e	c7 45 88 00 00
	00 00		 mov	 DWORD PTR -120+[ebp], 0
$L160855:
  01115	8b 55 88	 mov	 edx, DWORD PTR -120+[ebp]
  01118	89 55 c4	 mov	 DWORD PTR $T160851[ebp], edx
  0111b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0111f	8b 45 c4	 mov	 eax, DWORD PTR $T160851[ebp]
  01122	89 45 c8	 mov	 DWORD PTR $T160850[ebp], eax
  01125	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01129	8d 4d f0	 lea	 ecx, DWORD PTR _id$[ebp]
  0112c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01131	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01138	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0113b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01140	8b 45 c8	 mov	 eax, DWORD PTR $T160850[ebp]
  01143	eb 43		 jmp	 SHORT $L153707
$L153729:

; 397  : 		return CSkinWnd::MakeSkinCtrl ( obj );

  01145	83 ec 08	 sub	 esp, 8
  01148	8b cc		 mov	 ecx, esp
  0114a	89 65 b4	 mov	 DWORD PTR $T160857[ebp], esp
  0114d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01150	52		 push	 edx
  01151	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01156	89 45 84	 mov	 DWORD PTR -124+[ebp], eax
  01159	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  0115c	e8 00 00 00 00	 call	 ?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
  01161	89 45 80	 mov	 DWORD PTR -128+[ebp], eax
  01164	8b 45 80	 mov	 eax, DWORD PTR -128+[ebp]
  01167	89 45 b8	 mov	 DWORD PTR $T160856[ebp], eax
  0116a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0116e	8d 4d f0	 lea	 ecx, DWORD PTR _id$[ebp]
  01171	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01176	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0117d	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01180	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01185	8b 45 b8	 mov	 eax, DWORD PTR $T160856[ebp]
$L153707:

; 399  : }

  01188	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0118b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01192	8b e5		 mov	 esp, ebp
  01194	5d		 pop	 ebp
  01195	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L160858:
  000b7	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000ba	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000bf	c3		 ret	 0
$L160859:
  000c0	8d 4d f0	 lea	 ecx, DWORD PTR _id$[ebp]
  000c3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000c8	c3		 ret	 0
$L160860:
  000c9	8b 45 e4	 mov	 eax, DWORD PTR $T160837[ebp]
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000d2	c3		 ret	 0
$L160862:
  000d3	8b 45 d0	 mov	 eax, DWORD PTR $T160846[ebp]
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000dc	59		 pop	 ecx
  000dd	c3		 ret	 0
$L160864:
  000de	8b 45 c0	 mov	 eax, DWORD PTR $T160852[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000e7	59		 pop	 ecx
  000e8	c3		 ret	 0
$L160869:
  000e9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160868
  000ee	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CInventoryDlg@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CInventoryDlg::MakeSkinCtrl
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
PUBLIC	?GetData@CString@@IBEPAUCStringData@@XZ		; CString::GetData
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsEmpty@CString@@QBEHXZ PROC NEAR			; CString::IsEmpty, COMDAT

; 149  : 	{ return GetData()->nDataLength == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetData@CString@@IBEPAUCStringData@@XZ ; CString::GetData
  0000f	33 c9		 xor	 ecx, ecx
  00011	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00015	0f 94 c1	 sete	 cl
  00018	8b c1		 mov	 eax, ecx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?IsEmpty@CString@@QBEHXZ ENDP				; CString::IsEmpty
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetData@CString@@IBEPAUCStringData@@XZ PROC NEAR	; CString::GetData, COMDAT

; 122  : 	{ ASSERT(m_pchData != NULL); return ((CStringData*)m_pchData)-1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?GetData@CString@@IBEPAUCStringData@@XZ ENDP		; CString::GetData
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NABVCString@@PBD@Z PROC NEAR			; operator==, COMDAT

; 183  : 	{ return s1.Compare(s2) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NABVCString@@PBD@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
PUBLIC	??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCFastScrollCtrl@@@1@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
;	COMDAT ??0?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCFastScrollCtrl@@@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Pred$ = 8
__Al$ = 12
??0?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCFastScrollCtrl@@@1@@Z PROC NEAR ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >, COMDAT

; 57   : 	explicit map(const _Pr& _Pred = _Pr(), const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCFastScrollCtrl@@@1@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
??0?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCFastScrollCtrl@@@1@@Z ENDP ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
_TEXT	ENDS
PUBLIC	?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end
;	COMDAT ?end@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@XZ
_TEXT	SEGMENT
$T160884 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@XZ PROC NEAR ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end, COMDAT

; 73   : 		{return (_Tr.end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T160884[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?end@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@XZ ENDP ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCFastScrollCtrl@@@Z ; std::pair<CSkinObj const ,CFastScrollCtrl *>::pair<CSkinObj const ,CFastScrollCtrl *>
PUBLIC	??1?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@XZ ; std::pair<CSkinObj const ,CFastScrollCtrl *>::~pair<CSkinObj const ,CFastScrollCtrl *>
PUBLIC	?insert@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::insert
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\map
xdata$x	SEGMENT
$T160891 DD	019930520H
	DD	01H
	DD	FLAT:$T160893
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160893 DD	0ffffffffH
	DD	FLAT:$L160889
xdata$x	ENDS
;	COMDAT ??A?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEAAPAVCFastScrollCtrl@@ABVCSkinObj@@@Z
_TEXT	SEGMENT
$T160886 = -28
$T160887 = -32
$T160888 = -40
__$EHRec$ = -12
_this$ = -44
__P$ = -16
__Kv$ = 8
??A?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEAAPAVCFastScrollCtrl@@ABVCSkinObj@@@Z PROC NEAR ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::operator[], COMDAT

; 93   : 		{iterator _P = insert(value_type(_Kv, _Ty())).first;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L160892
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 28	 sub	 esp, 40			; 00000028H
  0001b	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T160887[ebp], 0
  00025	8d 45 e0	 lea	 eax, DWORD PTR $T160887[ebp]
  00028	50		 push	 eax
  00029	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  0002c	51		 push	 ecx
  0002d	8d 4d e4	 lea	 ecx, DWORD PTR $T160886[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCFastScrollCtrl@@@Z ; std::pair<CSkinObj const ,CFastScrollCtrl *>::pair<CSkinObj const ,CFastScrollCtrl *>
  00035	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  00038	8b 55 d0	 mov	 edx, DWORD PTR -48+[ebp]
  0003b	89 55 cc	 mov	 DWORD PTR -52+[ebp], edx
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00045	8b 45 cc	 mov	 eax, DWORD PTR -52+[ebp]
  00048	50		 push	 eax
  00049	8d 4d d8	 lea	 ecx, DWORD PTR $T160888[ebp]
  0004c	51		 push	 ecx
  0004d	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?insert@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::insert
  00055	8b 10		 mov	 edx, DWORD PTR [eax]
  00057	89 55 f0	 mov	 DWORD PTR __P$[ebp], edx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d e4	 lea	 ecx, DWORD PTR $T160886[ebp]
  00064	e8 00 00 00 00	 call	 ??1?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@XZ ; std::pair<CSkinObj const ,CFastScrollCtrl *>::~pair<CSkinObj const ,CFastScrollCtrl *>

; 94   : 		return ((*_P).second); }

  00069	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  0006c	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator*
  00071	83 c0 08	 add	 eax, 8
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160889:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T160886[ebp]
  00003	e8 00 00 00 00	 call	 ??1?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@XZ ; std::pair<CSkinObj const ,CFastScrollCtrl *>::~pair<CSkinObj const ,CFastScrollCtrl *>
  00008	c3		 ret	 0
$L160892:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160891
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??A?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEAAPAVCFastScrollCtrl@@ABVCSkinObj@@@Z ENDP ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::operator[]
PUBLIC	?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
;	COMDAT ?erase@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z
_TEXT	SEGMENT
_this$ = -4
__Kv$ = 8
?erase@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z PROC NEAR ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase, COMDAT

; 109  : 		{return (_Tr.erase(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?erase@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z ENDP ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
_TEXT	ENDS
PUBLIC	?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::find
;	COMDAT ?find@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@ABVCSkinObj@@@Z
_TEXT	SEGMENT
$T160898 = -4
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
?find@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@ABVCSkinObj@@@Z PROC NEAR ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::find, COMDAT

; 121  : 		{return (_Tr.find(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T160898[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::find
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?find@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@2@ABVCSkinObj@@@Z ENDP ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::find
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::begin
PUBLIC	?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
PUBLIC	?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
PUBLIC	?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1IA ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nilrefs
PUBLIC	?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Freenode
EXTRN	__imp_??0_Lockit@std@@QAE@XZ:NEAR
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:NEAR
;	COMDAT ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
_BSS	SEGMENT
?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A DD 01H DUP (?) ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
_BSS	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1IA
_BSS	SEGMENT
?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1IA DD 01H DUP (?) ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nilrefs
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T160905 DD	019930520H
	DD	01H
	DD	FLAT:$T160907
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160907 DD	0ffffffffH
	DD	FLAT:$L160903
xdata$x	ENDS
;	COMDAT ??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T160900 = -20
$T160901 = -24
$T160902 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$154856 = -16
??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::~_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >, COMDAT

; 176  :                 {erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L160906
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 ec	 lea	 eax, DWORD PTR $T160900[ebp]
  00021	50		 push	 eax
  00022	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	8d 55 e8	 lea	 edx, DWORD PTR $T160901[ebp]
  00030	52		 push	 edx
  00031	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::begin
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	50		 push	 eax
  0003c	8d 4d e4	 lea	 ecx, DWORD PTR $T160902[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase

; 177  :                 _Freenode(_Head);

  00048	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	50		 push	 eax
  0004f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Freenode

; 178  :                 _Head = 0, _Size = 0;

  00057	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00061	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 179  :                         {_Lockit _Lk;

  0006b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$154856[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 180  :                         if (--_Nilrefs == 0)

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1IA ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nilrefs
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1IA, eax ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nilrefs
  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1IA, 0 ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nilrefs
  0008f	75 19		 jne	 SHORT $L154857

; 181  :                                 {_Freenode(_Nil);

  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00097	51		 push	 ecx
  00098	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Freenode

; 182  :                                 _Nil = 0; }}}

  000a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
$L154857:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$154856[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160903:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$154856[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L160906:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160905
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::~_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
PUBLIC	??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator, COMDAT

; 122  :                 iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::const_iterator
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Value
;	COMDAT ??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator*, COMDAT

; 127  :                         {return (_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator==
;	COMDAT ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator!=, COMDAT

; 147  :                         {return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@_NABV?$allocator@PAVCInventoryDlg@@@1@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
;	COMDAT ??0?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@ABV?$allocator@PAVCInventoryDlg@@@1@@Z
_TEXT	SEGMENT
__Pred$ = 8
__Al$ = 12
_this$ = -4
??0?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@ABV?$allocator@PAVCInventoryDlg@@@1@@Z PROC NEAR ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >, COMDAT

; 57   : 	explicit map(const _Pr& _Pred = _Pr(), const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@_NABV?$allocator@PAVCInventoryDlg@@@1@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
??0?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@ABV?$allocator@PAVCInventoryDlg@@@1@@Z ENDP ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
_TEXT	ENDS
PUBLIC	?end@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end
;	COMDAT ?end@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@XZ
_TEXT	SEGMENT
$T160918 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@XZ PROC NEAR ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end, COMDAT

; 73   : 		{return (_Tr.end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T160918[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?end@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@XZ ENDP ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end
_TEXT	ENDS
PUBLIC	?insert@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::insert
PUBLIC	??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABVCSCI_WorldObject@@ABQAVCInventoryDlg@@@Z ; std::pair<CSCI_WorldObject const ,CInventoryDlg *>::pair<CSCI_WorldObject const ,CInventoryDlg *>
;	COMDAT ??A?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEAAPAVCInventoryDlg@@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT
__Kv$ = 8
$T160920 = -12
$T160921 = -16
$T160922 = -24
_this$ = -28
__P$ = -4
??A?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEAAPAVCInventoryDlg@@ABVCSCI_WorldObject@@@Z PROC NEAR ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::operator[], COMDAT

; 93   : 		{iterator _P = insert(value_type(_Kv, _Ty())).first;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T160921[ebp], 0
  00010	8d 45 f0	 lea	 eax, DWORD PTR $T160921[ebp]
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00017	51		 push	 ecx
  00018	8d 4d f4	 lea	 ecx, DWORD PTR $T160920[ebp]
  0001b	e8 00 00 00 00	 call	 ??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABVCSCI_WorldObject@@ABQAVCInventoryDlg@@@Z ; std::pair<CSCI_WorldObject const ,CInventoryDlg *>::pair<CSCI_WorldObject const ,CInventoryDlg *>
  00020	50		 push	 eax
  00021	8d 55 e8	 lea	 edx, DWORD PTR $T160922[ebp]
  00024	52		 push	 edx
  00025	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?insert@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::insert
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	89 45 fc	 mov	 DWORD PTR __P$[ebp], eax

; 94   : 		return ((*_P).second); }

  00032	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  00035	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator*
  0003a	83 c0 04	 add	 eax, 4
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
??A?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEAAPAVCInventoryDlg@@ABVCSCI_WorldObject@@@Z ENDP ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::operator[]
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEIABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase
;	COMDAT ?erase@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEIABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT
__Kv$ = 8
_this$ = -4
?erase@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEIABVCSCI_WorldObject@@@Z PROC NEAR ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase, COMDAT

; 109  : 		{return (_Tr.erase(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEIABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?erase@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAEIABVCSCI_WorldObject@@@Z ENDP ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase
_TEXT	ENDS
PUBLIC	?find@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::find
;	COMDAT ?find@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT
__Kv$ = 12
$T160925 = -4
___$ReturnUdt$ = 8
_this$ = -8
?find@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@ABVCSCI_WorldObject@@@Z PROC NEAR ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::find, COMDAT

; 121  : 		{return (_Tr.find(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T160925[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::find
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?find@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@2@ABVCSCI_WorldObject@@@Z ENDP ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::find
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::begin
PUBLIC	?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase
PUBLIC	?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
PUBLIC	?_Nilrefs@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1IA ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nilrefs
PUBLIC	?_Freenode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Freenode
;	COMDAT ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
_BSS	SEGMENT
?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A DD 01H DUP (?) ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
_BSS	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1IA
_BSS	SEGMENT
?_Nilrefs@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1IA DD 01H DUP (?) ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nilrefs
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T160932 DD	019930520H
	DD	01H
	DD	FLAT:$T160934
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160934 DD	0ffffffffH
	DD	FLAT:$L160930
xdata$x	ENDS
;	COMDAT ??1?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T160927 = -20
$T160928 = -24
$T160929 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$154909 = -16
??1?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::~_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >, COMDAT

; 176  :                 {erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L160933
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 ec	 lea	 eax, DWORD PTR $T160927[ebp]
  00021	50		 push	 eax
  00022	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	8d 55 e8	 lea	 edx, DWORD PTR $T160928[ebp]
  00030	52		 push	 edx
  00031	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::begin
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	50		 push	 eax
  0003c	8d 4d e4	 lea	 ecx, DWORD PTR $T160929[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase

; 177  :                 _Freenode(_Head);

  00048	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	50		 push	 eax
  0004f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Freenode

; 178  :                 _Head = 0, _Size = 0;

  00057	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00061	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 179  :                         {_Lockit _Lk;

  0006b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$154909[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 180  :                         if (--_Nilrefs == 0)

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nilrefs@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1IA ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nilrefs
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?_Nilrefs@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1IA, eax ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nilrefs
  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nilrefs@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1IA, 0 ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nilrefs
  0008f	75 19		 jne	 SHORT $L154910

; 181  :                                 {_Freenode(_Nil);

  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00097	51		 push	 ecx
  00098	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Freenode

; 182  :                                 _Nil = 0; }}}

  000a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
$L154910:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$154909[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160930:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$154909[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L160933:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160932
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::~_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
PUBLIC	?_Value@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Value
;	COMDAT ??Diterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator*, COMDAT

; 127  :                         {return (_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator*
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??8iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator==, COMDAT

; 145  :                         {return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator==
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Buynode
;	COMDAT ??0?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@ABV?$allocator@PAVCInventoryDlg@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8
_this$ = -4
??0?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@ABV?$allocator@PAVCInventoryDlg@@@1@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >, COMDAT

; 131  : 		_Head(_Buynode()), _Size(0) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	6a 00		 push	 0
  00013	6a 00		 push	 0
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Buynode
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??0?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@ABV?$allocator@PAVCInventoryDlg@@@1@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >
_TEXT	ENDS
PUBLIC	?end@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::end
PUBLIC	?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::erase
PUBLIC	?_Freenode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Freenode
;	COMDAT ??1?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T160943 = -4
$T160944 = -8
$T160945 = -12
_this$ = -16
??1?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@XZ PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::~list<CInventoryDlg *,std::allocator<CInventoryDlg *> >, COMDAT

; 151  : 		{erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T160943[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 55 f8	 lea	 edx, DWORD PTR $T160944[ebp]
  0001b	52		 push	 edx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?begin@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::begin
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	50		 push	 eax
  00027	8d 4d f4	 lea	 ecx, DWORD PTR $T160945[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::erase

; 152  : 		_Freenode(_Head);

  00033	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00039	50		 push	 eax
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?_Freenode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Freenode

; 153  : 		_Head = 0, _Size = 0; }

  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0004c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??1?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@XZ ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::~list<CInventoryDlg *,std::allocator<CInventoryDlg *> >
_TEXT	ENDS
PUBLIC	?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Next
PUBLIC	??0iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::iterator
;	COMDAT ?begin@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T160947 = -4
___$ReturnUdt$ = 8
_this$ = -8
?begin@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::begin, COMDAT

; 166  : 		{return (iterator(_Acc::_Next(_Head))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Next
  00015	83 c4 04	 add	 esp, 4
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	52		 push	 edx
  0001b	8d 4d fc	 lea	 ecx, DWORD PTR $T160947[ebp]
  0001e	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::iterator
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00028	89 01		 mov	 DWORD PTR [ecx], eax
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?begin@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::begin
_TEXT	ENDS
;	COMDAT ?size@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEIXZ PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::size, COMDAT

; 188  : 		{return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEIXZ ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::size
_TEXT	ENDS
PUBLIC	?insert@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCInventoryDlg@@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::insert
;	COMDAT ?push_back@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z
_TEXT	SEGMENT
$T160950 = -4
$T160951 = -8
__X$ = 8
_this$ = -12
?push_back@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::push_back, COMDAT

; 208  : 		{insert(end(), _X); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T160950[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?end@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::end
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	52		 push	 edx
  0001c	8d 45 f8	 lea	 eax, DWORD PTR $T160951[ebp]
  0001f	50		 push	 eax
  00020	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?insert@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCInventoryDlg@@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::insert
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?push_back@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::push_back
_TEXT	ENDS
PUBLIC	??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEAAV012@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++
PUBLIC	??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++
PUBLIC	??9iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator!=
PUBLIC	?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::erase
;	COMDAT ?remove@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z
_TEXT	SEGMENT
$T160953 = -12
$T160954 = -16
$T160955 = -20
$T160956 = -24
_this$ = -28
__L$ = -8
__F$ = -4
__V$ = 8
?remove@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::remove, COMDAT

; 278  : 		{iterator _L = end();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 f4	 lea	 eax, DWORD PTR $T160953[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	89 4d f8	 mov	 DWORD PTR __L$[ebp], ecx

; 279  : 		for (iterator _F = begin(); _F != _L; )

  0001a	8d 55 f0	 lea	 edx, DWORD PTR $T160954[ebp]
  0001d	52		 push	 edx
  0001e	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?begin@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::begin
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 fc	 mov	 DWORD PTR __F$[ebp], eax
$L154939:
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR __L$[ebp]
  0002e	51		 push	 ecx
  0002f	8d 4d fc	 lea	 ecx, DWORD PTR __F$[ebp]
  00032	e8 00 00 00 00	 call	 ??9iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator!=
  00037	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0003c	85 c0		 test	 eax, eax
  0003e	74 3a		 je	 SHORT $L154940

; 280  : 			if (*_F == _V)

  00040	8d 4d fc	 lea	 ecx, DWORD PTR __F$[ebp]
  00043	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEAAPAVCInventoryDlg@@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator*
  00048	8b 55 08	 mov	 edx, DWORD PTR __V$[ebp]
  0004b	8b 00		 mov	 eax, DWORD PTR [eax]
  0004d	3b 02		 cmp	 eax, DWORD PTR [edx]
  0004f	75 1f		 jne	 SHORT $L154941

; 281  : 				erase(_F++);

  00051	6a 00		 push	 0
  00053	8d 4d ec	 lea	 ecx, DWORD PTR $T160955[ebp]
  00056	51		 push	 ecx
  00057	8d 4d fc	 lea	 ecx, DWORD PTR __F$[ebp]
  0005a	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++
  0005f	8b 10		 mov	 edx, DWORD PTR [eax]
  00061	52		 push	 edx
  00062	8d 45 e8	 lea	 eax, DWORD PTR $T160956[ebp]
  00065	50		 push	 eax
  00066	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::erase

; 282  : 			else

  0006e	eb 08		 jmp	 SHORT $L154944
$L154941:

; 283  : 				++_F; }

  00070	8d 4d fc	 lea	 ecx, DWORD PTR __F$[ebp]
  00073	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEAAV012@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++
$L154944:
  00078	eb b1		 jmp	 SHORT $L154939
$L154940:
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 04 00	 ret	 4
?remove@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEXABQAVCInventoryDlg@@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::remove
_TEXT	ENDS
PUBLIC	?_Value@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAVCInventoryDlg@@PAU_Node@23@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Value
;	COMDAT ??Diterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEAAPAVCInventoryDlg@@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEAAPAVCInventoryDlg@@XZ PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator*, COMDAT

; 101  : 			{return (_Acc::_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAVCInventoryDlg@@PAU_Node@23@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEAAPAVCInventoryDlg@@XZ ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator*
_TEXT	ENDS
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:NEAR ; AfxGetModuleState
;	COMDAT ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ PROC NEAR	; AfxGetInstanceHandle, COMDAT

; 19   : 	{ ASSERT(afxCurrentInstanceHandle != NULL);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 20   : 		return afxCurrentInstanceHandle; }

  00003	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00008	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ENDP	; AfxGetInstanceHandle
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@XZ PROC NEAR ; std::pair<CSkinObj const ,CFastScrollCtrl *>::~pair<CSkinObj const ,CFastScrollCtrl *>, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@XZ ENDP ; std::pair<CSkinObj const ,CFastScrollCtrl *>::~pair<CSkinObj const ,CFastScrollCtrl *>
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>
PUBLIC	?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::insert
;	COMDAT ?insert@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z
_TEXT	SEGMENT
$T160963 = -16
$T160964 = -24
__X$ = 12
___$ReturnUdt$ = 8
_this$ = -28
__Ans$ = -8
?insert@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z PROC NEAR ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::insert, COMDAT

; 96   : 		{_Imp::_Pairib _Ans = _Tr.insert(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f0	 lea	 ecx, DWORD PTR $T160963[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::insert
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __Ans$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __Ans$[ebp+4], eax

; 97   : 		return (_Pairib(_Ans.first, _Ans.second)); }

  00024	8d 4d fc	 lea	 ecx, DWORD PTR __Ans$[ebp+4]
  00027	51		 push	 ecx
  00028	8d 55 f8	 lea	 edx, DWORD PTR __Ans$[ebp]
  0002b	52		 push	 edx
  0002c	8d 4d e8	 lea	 ecx, DWORD PTR $T160964[ebp]
  0002f	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
  0003e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?insert@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ENDP ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::insert
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Value, COMDAT

; 46   :                 {return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Value
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Init
;	COMDAT ??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCFastScrollCtrl@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8
__Marg$ = 12
__Al$ = 16
_this$ = -4
??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCFastScrollCtrl@@@1@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >, COMDAT

; 162  :                 {_Init(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	88 4a 01	 mov	 BYTE PTR [edx+1], cl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8a 4d 0c	 mov	 cl, BYTE PTR __Marg$[ebp]
  00022	88 48 08	 mov	 BYTE PTR [eax+8], cl
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Init
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCFastScrollCtrl@@@1@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost
;	COMDAT ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T160968 = -4
___$ReturnUdt$ = 8
_this$ = -8
?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::begin, COMDAT

; 190  :                 {return (iterator(_Lmost())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T160968[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 0a		 mov	 DWORD PTR [edx], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T160970 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end, COMDAT

; 194  :                 {return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T160970[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator++
PUBLIC	?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEIXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::size
PUBLIC	?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
PUBLIC	?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Erase
PUBLIC	?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost
PUBLIC	?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T160979 DD	019930520H
	DD	01H
	DD	FLAT:$T160981
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T160981 DD	0ffffffffH
	DD	FLAT:$L160977
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
$T160972 = -20
$T160973 = -24
$T160974 = -28
$T160975 = -32
$T160976 = -36
__$EHRec$ = -12
__F$ = 12
__L$ = 16
___$ReturnUdt$ = 8
_this$ = -40
_Lk$156214 = -16
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase, COMDAT

; 365  :                 {if (size() == 0 || _F != begin() || _L != end())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L160980
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEIXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::size
  00026	85 c0		 test	 eax, eax
  00028	74 3c		 je	 SHORT $L156207
  0002a	8d 45 ec	 lea	 eax, DWORD PTR $T160972[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::begin
  00036	50		 push	 eax
  00037	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator!=
  0003f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00044	85 c0		 test	 eax, eax
  00046	75 1e		 jne	 SHORT $L156207
  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T160973[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end
  00054	50		 push	 eax
  00055	8d 4d 10	 lea	 ecx, DWORD PTR __L$[ebp]
  00058	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator!=
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	74 44		 je	 SHORT $L156206
$L156207:

; 366  :                         {while (_F != _L)

  00066	8d 55 10	 lea	 edx, DWORD PTR __L$[ebp]
  00069	52		 push	 edx
  0006a	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0006d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator!=
  00072	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00077	85 c0		 test	 eax, eax
  00079	74 1f		 je	 SHORT $L156210

; 367  :                                 erase(_F++);

  0007b	6a 00		 push	 0
  0007d	8d 45 e4	 lea	 eax, DWORD PTR $T160974[ebp]
  00080	50		 push	 eax
  00081	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00084	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator++
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	51		 push	 ecx
  0008c	8d 55 e0	 lea	 edx, DWORD PTR $T160975[ebp]
  0008f	52		 push	 edx
  00090	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
  00098	eb cc		 jmp	 SHORT $L156207
$L156210:

; 368  :                         return (_F); }

  0009a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR __F$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a5	e9 83 00 00 00	 jmp	 $L156213
$L156206:

; 370  :                         {_Lockit Lk;

  000aa	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$156214[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 371  :                         _Erase(_Root());

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	52		 push	 edx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Erase

; 372  :                         _Root() = _Nil, _Size = 0;

  000cd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  000db	89 08		 mov	 DWORD PTR [eax], ecx
  000dd	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 373  :                         _Lmost() = _Head, _Rmost() = _Head;

  000e7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost
  000ef	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f5	89 10		 mov	 DWORD PTR [eax], edx
  000f7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost
  000ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00105	89 10		 mov	 DWORD PTR [eax], edx

; 374  :                         return (begin()); }}

  00107	8d 45 dc	 lea	 eax, DWORD PTR $T160976[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::begin
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	89 0a		 mov	 DWORD PTR [edx], ecx
  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$156214[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L156213:
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160977:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$156214[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L160980:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160979
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
PUBLIC	?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::equal_range
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAI@Z ; std::_Distance
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z
_TEXT	SEGMENT
$T160985 = -20
$T160986 = -24
__X$ = 8
_this$ = -28
__P$ = -8
__N$ = -12
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase, COMDAT

; 376  :                 {_Pairii _P = equal_range(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d ec	 lea	 ecx, DWORD PTR $T160985[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::equal_range
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __P$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __P$[ebp+4], eax

; 377  :                 size_type _N = 0;

  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0

; 378  :                 _Distance(_P.first, _P.second, _N);

  0002b	8d 4d f4	 lea	 ecx, DWORD PTR __N$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 fc	 mov	 edx, DWORD PTR __P$[ebp+4]
  00032	52		 push	 edx
  00033	8b 45 f8	 mov	 eax, DWORD PTR __P$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAI@Z ; std::_Distance
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 379  :                 erase(_P.first, _P.second);

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __P$[ebp+4]
  00042	51		 push	 ecx
  00043	8b 55 f8	 mov	 edx, DWORD PTR __P$[ebp]
  00046	52		 push	 edx
  00047	8d 45 e8	 lea	 eax, DWORD PTR $T160986[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase

; 380  :                 return (_N); }

  00053	8b 45 f4	 mov	 eax, DWORD PTR __N$[ebp]
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Key
PUBLIC	?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Mynode
PUBLIC	?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::lower_bound
PUBLIC	??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
;	COMDAT ?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT
$T160988 = -8
$T160989 = -12
$T160990 = -16
$T160992 = -20
__Kv$ = 12
___$ReturnUdt$ = 8
_this$ = -24
__P$ = -4
?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::find, COMDAT

; 387  :                 {iterator _P = lower_bound(_Kv);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR $T160988[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::lower_bound
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	89 55 fc	 mov	 DWORD PTR __P$[ebp], edx

; 388  :                 return (_P == end()
; 389  :                         || key_compare(_Kv, _Key(_P._Mynode()))
; 390  :                                 ? end() : _P); }

  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T160990[ebp]
  00021	50		 push	 eax
  00022	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0002e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator==
  00033	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00038	85 c0		 test	 eax, eax
  0003a	75 32		 jne	 SHORT $L160991
  0003c	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Mynode
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Key
  0004a	83 c4 04	 add	 esp, 4
  0004d	50		 push	 eax
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00051	51		 push	 ecx
  00052	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 01	 add	 ecx, 1
  00058	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	75 08		 jne	 SHORT $L160991
  00066	8d 55 fc	 lea	 edx, DWORD PTR __P$[ebp]
  00069	89 55 e4	 mov	 DWORD PTR -28+[ebp], edx
  0006c	eb 0f		 jmp	 SHORT $L160993
$L160991:
  0006e	8d 45 ec	 lea	 eax, DWORD PTR $T160992[ebp]
  00071	50		 push	 eax
  00072	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::end
  0007a	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
$L160993:
  0007d	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  00080	89 4d f4	 mov	 DWORD PTR $T160989[ebp], ecx
  00083	8b 55 f4	 mov	 edx, DWORD PTR $T160989[ebp]
  00086	8b 02		 mov	 eax, DWORD PTR [edx]
  00088	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0008b	89 01		 mov	 DWORD PTR [ecx], eax
  0008d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 08 00	 ret	 8
?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::find
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCFastScrollCtrl@@@std@@QAEXPAXI@Z ; std::allocator<CFastScrollCtrl *>::deallocate
;	COMDAT ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__S$ = 8
_this$ = -4
?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Freenode, COMDAT

; 596  :                 {allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCFastScrollCtrl@@@std@@QAEXPAXI@Z ; std::allocator<CFastScrollCtrl *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Freenode
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCFastScrollCtrl@@@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCFastScrollCtrl@@@Z PROC NEAR ; std::pair<CSkinObj const ,CFastScrollCtrl *>::pair<CSkinObj const ,CFastScrollCtrl *>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 55 0c	 mov	 edx, DWORD PTR __V2$[ebp]
  00019	8b 02		 mov	 eax, DWORD PTR [edx]
  0001b	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCFastScrollCtrl@@@Z ENDP ; std::pair<CSkinObj const ,CFastScrollCtrl *>::pair<CSkinObj const ,CFastScrollCtrl *>
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::const_iterator, COMDAT

; 63   :                 const_iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::const_iterator
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator==, COMDAT

; 145  :                         {return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator==
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>
PUBLIC	?insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::insert
;	COMDAT ?insert@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z
_TEXT	SEGMENT
__X$ = 12
$T161000 = -16
$T161001 = -24
___$ReturnUdt$ = 8
_this$ = -28
__Ans$ = -8
?insert@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z PROC NEAR ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::insert, COMDAT

; 96   : 		{_Imp::_Pairib _Ans = _Tr.insert(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f0	 lea	 ecx, DWORD PTR $T161000[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::insert
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __Ans$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __Ans$[ebp+4], eax

; 97   : 		return (_Pairib(_Ans.first, _Ans.second)); }

  00024	8d 4d fc	 lea	 ecx, DWORD PTR __Ans$[ebp+4]
  00027	51		 push	 ecx
  00028	8d 55 f8	 lea	 edx, DWORD PTR __Ans$[ebp]
  0002b	52		 push	 edx
  0002c	8d 4d e8	 lea	 ecx, DWORD PTR $T161001[ebp]
  0002f	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
  0003e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?insert@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ENDP ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::insert
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Value, COMDAT

; 46   :                 {return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@PAU_Node@12@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Value
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXXZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Init
;	COMDAT ??0?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@_NABV?$allocator@PAVCInventoryDlg@@@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Parg$ = 8
__Marg$ = 12
__Al$ = 16
??0?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@_NABV?$allocator@PAVCInventoryDlg@@@1@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >, COMDAT

; 162  :                 {_Init(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	88 4a 01	 mov	 BYTE PTR [edx+1], cl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8a 4d 0c	 mov	 cl, BYTE PTR __Marg$[ebp]
  00022	88 48 08	 mov	 BYTE PTR [eax+8], cl
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Init@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXXZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Init
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??0?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@ABU?$less@VCSCI_WorldObject@@@1@_NABV?$allocator@PAVCInventoryDlg@@@1@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost
;	COMDAT ?begin@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T161005 = -4
___$ReturnUdt$ = 8
_this$ = -8
?begin@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::begin, COMDAT

; 190  :                 {return (iterator(_Lmost())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T161005[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::iterator
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 0a		 mov	 DWORD PTR [edx], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?begin@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T161007 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end, COMDAT

; 194  :                 {return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T161007[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator++
PUBLIC	??9iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator!=
PUBLIC	?size@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEIXZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::size
PUBLIC	?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase
PUBLIC	?_Erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Erase
PUBLIC	?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost
PUBLIC	?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161016 DD	019930520H
	DD	01H
	DD	FLAT:$T161018
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161018 DD	0ffffffffH
	DD	FLAT:$L161014
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
$T161009 = -20
$T161010 = -24
$T161011 = -28
$T161012 = -32
$T161013 = -36
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -40
_Lk$156310 = -16
__F$ = 12
__L$ = 16
?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase, COMDAT

; 365  :                 {if (size() == 0 || _F != begin() || _L != end())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161017
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?size@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEIXZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::size
  00026	85 c0		 test	 eax, eax
  00028	74 3c		 je	 SHORT $L156303
  0002a	8d 45 ec	 lea	 eax, DWORD PTR $T161009[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::begin
  00036	50		 push	 eax
  00037	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator!=
  0003f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00044	85 c0		 test	 eax, eax
  00046	75 1e		 jne	 SHORT $L156303
  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T161010[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end
  00054	50		 push	 eax
  00055	8d 4d 10	 lea	 ecx, DWORD PTR __L$[ebp]
  00058	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator!=
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	74 44		 je	 SHORT $L156302
$L156303:

; 366  :                         {while (_F != _L)

  00066	8d 55 10	 lea	 edx, DWORD PTR __L$[ebp]
  00069	52		 push	 edx
  0006a	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0006d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator!=
  00072	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00077	85 c0		 test	 eax, eax
  00079	74 1f		 je	 SHORT $L156306

; 367  :                                 erase(_F++);

  0007b	6a 00		 push	 0
  0007d	8d 45 e4	 lea	 eax, DWORD PTR $T161011[ebp]
  00080	50		 push	 eax
  00081	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00084	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator++
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	51		 push	 ecx
  0008c	8d 55 e0	 lea	 edx, DWORD PTR $T161012[ebp]
  0008f	52		 push	 edx
  00090	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase
  00098	eb cc		 jmp	 SHORT $L156303
$L156306:

; 368  :                         return (_F); }

  0009a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR __F$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a5	e9 83 00 00 00	 jmp	 $L156309
$L156302:

; 370  :                         {_Lockit Lk;

  000aa	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$156310[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 371  :                         _Erase(_Root());

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	52		 push	 edx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Erase

; 372  :                         _Root() = _Nil, _Size = 0;

  000cd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  000db	89 08		 mov	 DWORD PTR [eax], ecx
  000dd	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 373  :                         _Lmost() = _Head, _Rmost() = _Head;

  000e7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost
  000ef	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f5	89 10		 mov	 DWORD PTR [eax], edx
  000f7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost
  000ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00105	89 10		 mov	 DWORD PTR [eax], edx

; 374  :                         return (begin()); }}

  00107	8d 45 dc	 lea	 eax, DWORD PTR $T161013[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::begin
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	89 0a		 mov	 DWORD PTR [edx], ecx
  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$156310[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L156309:
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161014:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$156310[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161017:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161016
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAI@Z ; std::_Distance
PUBLIC	?equal_range@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@2@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::equal_range
;	COMDAT ?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEIABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT
$T161022 = -20
$T161023 = -24
_this$ = -28
__P$ = -8
__N$ = -12
__X$ = 8
?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEIABVCSCI_WorldObject@@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase, COMDAT

; 376  :                 {_Pairii _P = equal_range(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d ec	 lea	 ecx, DWORD PTR $T161022[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@2@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::equal_range
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __P$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __P$[ebp+4], eax

; 377  :                 size_type _N = 0;

  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0

; 378  :                 _Distance(_P.first, _P.second, _N);

  0002b	8d 4d f4	 lea	 ecx, DWORD PTR __N$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 fc	 mov	 edx, DWORD PTR __P$[ebp+4]
  00032	52		 push	 edx
  00033	8b 45 f8	 mov	 eax, DWORD PTR __P$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAI@Z ; std::_Distance
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 379  :                 erase(_P.first, _P.second);

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __P$[ebp+4]
  00042	51		 push	 ecx
  00043	8b 55 f8	 mov	 edx, DWORD PTR __P$[ebp]
  00046	52		 push	 edx
  00047	8d 45 e8	 lea	 eax, DWORD PTR $T161023[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase

; 380  :                 return (_N); }

  00053	8b 45 f4	 mov	 eax, DWORD PTR __N$[ebp]
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEIABVCSCI_WorldObject@@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase
_TEXT	ENDS
PUBLIC	??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z ; std::less<CSCI_WorldObject>::operator()
PUBLIC	?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Key
PUBLIC	?_Mynode@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode
PUBLIC	?lower_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::lower_bound
;	COMDAT ?find@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT
$T161025 = -8
$T161026 = -12
$T161027 = -16
$T161029 = -20
___$ReturnUdt$ = 8
_this$ = -24
__P$ = -4
__Kv$ = 12
?find@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::find, COMDAT

; 387  :                 {iterator _P = lower_bound(_Kv);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR $T161025[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::lower_bound
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	89 55 fc	 mov	 DWORD PTR __P$[ebp], edx

; 388  :                 return (_P == end()
; 389  :                         || key_compare(_Kv, _Key(_P._Mynode()))
; 390  :                                 ? end() : _P); }

  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T161027[ebp]
  00021	50		 push	 eax
  00022	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0002e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator==
  00033	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00038	85 c0		 test	 eax, eax
  0003a	75 32		 jne	 SHORT $L161028
  0003c	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Key
  0004a	83 c4 04	 add	 esp, 4
  0004d	50		 push	 eax
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00051	51		 push	 ecx
  00052	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 01	 add	 ecx, 1
  00058	e8 00 00 00 00	 call	 ??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z ; std::less<CSCI_WorldObject>::operator()
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	75 08		 jne	 SHORT $L161028
  00066	8d 55 fc	 lea	 edx, DWORD PTR __P$[ebp]
  00069	89 55 e4	 mov	 DWORD PTR -28+[ebp], edx
  0006c	eb 0f		 jmp	 SHORT $L161030
$L161028:
  0006e	8d 45 ec	 lea	 eax, DWORD PTR $T161029[ebp]
  00071	50		 push	 eax
  00072	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::end
  0007a	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
$L161030:
  0007d	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  00080	89 4d f4	 mov	 DWORD PTR $T161026[ebp], ecx
  00083	8b 55 f4	 mov	 edx, DWORD PTR $T161026[ebp]
  00086	8b 02		 mov	 eax, DWORD PTR [edx]
  00088	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0008b	89 01		 mov	 DWORD PTR [ecx], eax
  0008d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 08 00	 ret	 8
?find@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::find
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAXI@Z ; std::allocator<CInventoryDlg *>::deallocate
;	COMDAT ?_Freenode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__S$ = 8
?_Freenode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Freenode, COMDAT

; 596  :                 {allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAXI@Z ; std::allocator<CInventoryDlg *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Freenode
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABVCSCI_WorldObject@@ABQAVCInventoryDlg@@@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABVCSCI_WorldObject@@ABQAVCInventoryDlg@@@Z PROC NEAR ; std::pair<CSCI_WorldObject const ,CInventoryDlg *>::pair<CSCI_WorldObject const ,CInventoryDlg *>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 55 0c	 mov	 edx, DWORD PTR __V2$[ebp]
  00019	8b 02		 mov	 eax, DWORD PTR [edx]
  0001b	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABVCSCI_WorldObject@@ABQAVCInventoryDlg@@@Z ENDP ; std::pair<CSCI_WorldObject const ,CInventoryDlg *>::pair<CSCI_WorldObject const ,CInventoryDlg *>
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T161034 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::end, COMDAT

; 170  : 		{return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T161034[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::end
_TEXT	ENDS
PUBLIC	?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev
PUBLIC	?_Mynode@const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEPAU_Node@23@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode
PUBLIC	?construct@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@ABQAV3@@Z ; std::allocator<CInventoryDlg *>::construct
;	COMDAT ?insert@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCInventoryDlg@@@Z
_TEXT	SEGMENT
$T161036 = -8
__P$ = 12
__X$ = 16
___$ReturnUdt$ = 8
_this$ = -12
__S$ = -4
?insert@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCInventoryDlg@@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::insert, COMDAT

; 218  : 		{_Nodeptr _S = _P._Mynode();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  0000d	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEPAU_Node@23@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode
  00012	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 219  : 		_Acc::_Prev(_S) = _Buynode(_S, _Acc::_Prev(_S));

  00015	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev
  0001e	83 c4 04	 add	 esp, 4
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	51		 push	 ecx
  00024	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00027	52		 push	 edx
  00028	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Buynode
  00030	8b f0		 mov	 esi, eax
  00032	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev
  0003b	83 c4 04	 add	 esp, 4
  0003e	89 30		 mov	 DWORD PTR [eax], esi

; 220  : 		_S = _Acc::_Prev(_S);

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	89 55 fc	 mov	 DWORD PTR __S$[ebp], edx

; 221  : 		_Acc::_Next(_Acc::_Prev(_S)) = _S;

  00051	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev
  0005a	83 c4 04	 add	 esp, 4
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Next
  00065	83 c4 04	 add	 esp, 4
  00068	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0006b	89 10		 mov	 DWORD PTR [eax], edx

; 222  : 		allocator.construct(&_Acc::_Value(_S), _X);

  0006d	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAVCInventoryDlg@@PAU_Node@23@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Value
  0007a	83 c4 04	 add	 esp, 4
  0007d	50		 push	 eax
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@ABQAV3@@Z ; std::allocator<CInventoryDlg *>::construct

; 223  : 		++_Size;

  00086	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00089	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0008c	83 c0 01	 add	 eax, 1
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 224  : 		return (iterator(_S)); }

  00095	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00098	52		 push	 edx
  00099	8d 4d f8	 lea	 ecx, DWORD PTR $T161036[ebp]
  0009c	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::iterator
  000a1	8b 00		 mov	 eax, DWORD PTR [eax]
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000a6	89 01		 mov	 DWORD PTR [ecx], eax
  000a8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000ab	5e		 pop	 esi
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCInventoryDlg@@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::insert
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@@Z ; std::allocator<CInventoryDlg *>::destroy
;	COMDAT ?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
$T161038 = -8
__P$ = 12
___$ReturnUdt$ = 8
_this$ = -12
__S$ = -4
?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::erase, COMDAT

; 235  : 		{_Nodeptr _S = (_P++)._Mynode();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	6a 00		 push	 0
  0000c	8d 45 f8	 lea	 eax, DWORD PTR $T161038[ebp]
  0000f	50		 push	 eax
  00010	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00013	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++
  00018	8b c8		 mov	 ecx, eax
  0001a	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEPAU_Node@23@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode
  0001f	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 236  : 		_Acc::_Next(_Acc::_Prev(_S)) = _Acc::_Next(_S);

  00022	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Next
  0002b	83 c4 04	 add	 esp, 4
  0002e	8b f0		 mov	 esi, eax
  00030	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 00		 mov	 eax, DWORD PTR [eax]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Next
  00044	83 c4 04	 add	 esp, 4
  00047	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00049	89 08		 mov	 DWORD PTR [eax], ecx

; 237  : 		_Acc::_Prev(_Acc::_Next(_S)) = _Acc::_Prev(_S);

  0004b	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev
  00054	83 c4 04	 add	 esp, 4
  00057	8b f0		 mov	 esi, eax
  00059	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Next
  00062	83 c4 04	 add	 esp, 4
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev
  0006d	83 c4 04	 add	 esp, 4
  00070	8b 16		 mov	 edx, DWORD PTR [esi]
  00072	89 10		 mov	 DWORD PTR [eax], edx

; 238  : 		allocator.destroy(&_Acc::_Value(_S));

  00074	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAVCInventoryDlg@@PAU_Node@23@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Value
  0007d	83 c4 04	 add	 esp, 4
  00080	50		 push	 eax
  00081	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@@Z ; std::allocator<CInventoryDlg *>::destroy

; 239  : 		_Freenode(_S);

  00089	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  0008c	51		 push	 ecx
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Freenode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Freenode

; 240  : 		--_Size;

  00095	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00098	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009b	83 e8 01	 sub	 eax, 1
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 241  : 		return (_P); }

  000a4	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  000a7	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  000aa	89 02		 mov	 DWORD PTR [edx], eax
  000ac	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000af	5e		 pop	 esi
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 08 00	 ret	 8
?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::erase
_TEXT	ENDS
;	COMDAT ?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
$T161040 = -4
$T161041 = -8
__F$ = 12
__L$ = 16
___$ReturnUdt$ = 8
_this$ = -12
?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::erase, COMDAT

; 243  : 		{while (_F != _L)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
$L156381:
  00009	8d 45 10	 lea	 eax, DWORD PTR __L$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00010	e8 00 00 00 00	 call	 ??9iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator!=
  00015	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001a	85 c0		 test	 eax, eax
  0001c	74 1f		 je	 SHORT $L156382

; 244  : 			erase(_F++);

  0001e	6a 00		 push	 0
  00020	8d 4d fc	 lea	 ecx, DWORD PTR $T161040[ebp]
  00023	51		 push	 ecx
  00024	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00027	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AV012@H@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++
  0002c	8b 10		 mov	 edx, DWORD PTR [eax]
  0002e	52		 push	 edx
  0002f	8d 45 f8	 lea	 eax, DWORD PTR $T161041[ebp]
  00032	50		 push	 eax
  00033	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::erase
  0003b	eb cc		 jmp	 SHORT $L156381
$L156382:

; 245  : 		return (_F); }

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00040	8b 55 0c	 mov	 edx, DWORD PTR __F$[ebp]
  00043	89 11		 mov	 DWORD PTR [ecx], edx
  00045	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::erase
_TEXT	ENDS
PUBLIC	?_Charalloc@?$allocator@PAVCInventoryDlg@@@std@@QAEPADI@Z ; std::allocator<CInventoryDlg *>::_Charalloc
;	COMDAT ?_Buynode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z
_TEXT	SEGMENT
__Narg$ = 8
__Parg$ = 12
_this$ = -8
__S$ = -4
?_Buynode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Buynode, COMDAT

; 386  : 		{_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 387  : 			1 * sizeof (_Node));

  00009	6a 0c		 push	 12			; 0000000cH
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCInventoryDlg@@@std@@QAEPADI@Z ; std::allocator<CInventoryDlg *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 388  : 		_Acc::_Next(_S) = _Narg != 0 ? _Narg : _S;

  00016	83 7d 08 00	 cmp	 DWORD PTR __Narg$[ebp], 0
  0001a	74 08		 je	 SHORT $L161043
  0001c	8b 45 08	 mov	 eax, DWORD PTR __Narg$[ebp]
  0001f	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00022	eb 06		 jmp	 SHORT $L161044
$L161043:
  00024	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00027	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
$L161044:
  0002a	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002d	52		 push	 edx
  0002e	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Next
  00033	83 c4 04	 add	 esp, 4
  00036	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  00039	89 08		 mov	 DWORD PTR [eax], ecx

; 389  : 		_Acc::_Prev(_S) = _Parg != 0 ? _Parg : _S;

  0003b	83 7d 0c 00	 cmp	 DWORD PTR __Parg$[ebp], 0
  0003f	74 08		 je	 SHORT $L161045
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Parg$[ebp]
  00044	89 55 f0	 mov	 DWORD PTR -16+[ebp], edx
  00047	eb 06		 jmp	 SHORT $L161046
$L161045:
  00049	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0004c	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
$L161046:
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev
  00058	83 c4 04	 add	 esp, 4
  0005b	8b 55 f0	 mov	 edx, DWORD PTR -16+[ebp]
  0005e	89 10		 mov	 DWORD PTR [eax], edx

; 390  : 		return (_S); }

  00060	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
?_Buynode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Buynode
_TEXT	ENDS
;	COMDAT ?_Freenode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__S$ = 8
_this$ = -4
?_Freenode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Freenode, COMDAT

; 392  : 		{allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAXI@Z ; std::allocator<CInventoryDlg *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@IAEXPAU_Node@12@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Freenode
_TEXT	ENDS
;	COMDAT ?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT
__P$ = 8
?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Next, COMDAT

; 37   : 			{return ((_Nodepref)(*_P)._Next); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Next
_TEXT	ENDS
;	COMDAT ?_Value@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAVCInventoryDlg@@PAU_Node@23@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAVCInventoryDlg@@PAU_Node@23@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Value, COMDAT

; 41   : 			{return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAVCInventoryDlg@@PAU_Node@23@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Value
_TEXT	ENDS
PUBLIC	??0const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??0iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::iterator, COMDAT

; 98   : 		iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::iterator
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++, COMDAT

; 105  : 			{_Ptr = _Acc::_Next(_Ptr);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Next
  00012	83 c4 04	 add	 esp, 4
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	89 02		 mov	 DWORD PTR [edx], eax

; 106  : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++, COMDAT

; 108  : 			{iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 109  : 			++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAEAAV012@XZ ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++

; 110  : 			return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??8iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator==
;	COMDAT ??9iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??9iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator!=, COMDAT

; 121  : 			{return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator!=
_TEXT	ENDS
EXTRN	??M@YA_NABVCSkinObj@@0@Z:NEAR			; operator<
;	COMDAT ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__Y$ = 12
??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z PROC NEAR ; std::less<CSkinObj>::operator(), COMDAT

; 86   : 		{return (_X < _Y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??M@YA_NABVCSkinObj@@0@Z ; operator<
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ENDP	; std::less<CSkinObj>::operator()
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCFastScrollCtrl@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?deallocate@?$allocator@PAVCFastScrollCtrl@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CFastScrollCtrl *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCFastScrollCtrl@@@std@@QAEXPAXI@Z ENDP ; std::allocator<CFastScrollCtrl *>::deallocate
_TEXT	ENDS
PUBLIC	??R_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn::operator()
;	COMDAT ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
$T161057 = -4
?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Key, COMDAT

; 38   :                 {return (_Kfn()(_Value(_P))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Value
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T161057[ebp]
  00014	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn::operator()
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Key
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEIXZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::size, COMDAT

; 206  :                 {return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEIXZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::size
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
PUBLIC	?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
PUBLIC	??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator--
PUBLIC	?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Insert
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161079 DD	019930520H
	DD	01H
	DD	FLAT:$T161081
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161081 DD	0ffffffffH
	DD	FLAT:$L161077
xdata$x	ENDS
;	COMDAT ?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -112
__X$ = -24
__Y$ = -28
__Ans$ = -20
_Lk$156698 = -32
__P$ = -16
$T161060 = -36
$T161063 = -44
$T161064 = -48
$T161065 = -52
$T161066 = -56
$T161067 = -60
$T161068 = -68
$T161069 = -72
$T161070 = -76
$T161071 = -80
$T161072 = -88
$T161073 = -92
$T161074 = -96
$T161075 = -104
$T161076 = -108
__$EHRec$ = -12
__V$ = 12
?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::insert, COMDAT

; 216  :                 {_Nodeptr _X = _Root();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161080
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 68	 sub	 esp, 104		; 00000068H
  0001b	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax

; 217  :                 _Nodeptr _Y = _Head;

  0002b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	89 55 e4	 mov	 DWORD PTR __Y$[ebp], edx

; 218  :                 bool _Ans = true;

  00034	c6 45 ec 01	 mov	 BYTE PTR __Ans$[ebp], 1

; 219  :                 { _Lockit Lk;

  00038	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$156698[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L156700:

; 220  :                         while (_X != _Nil)

  00048	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  0004b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00051	74 67		 je	 SHORT $L156701

; 221  :                                 {_Y = _X;

  00053	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  00056	89 4d e4	 mov	 DWORD PTR __Y$[ebp], ecx

; 222  :                                 _Ans = key_compare(_Kfn()(_V), _Key(_X));

  00059	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Key
  00062	83 c4 04	 add	 esp, 4
  00065	50		 push	 eax
  00066	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d dc	 lea	 ecx, DWORD PTR $T161060[ebp]
  0006d	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn::operator()
  00072	50		 push	 eax
  00073	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 01	 add	 ecx, 1
  00079	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  0007e	88 45 ec	 mov	 BYTE PTR __Ans$[ebp], al

; 223  :                                 _X = _Ans ? _Left(_X) : _Right(_X); }

  00081	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	85 c9		 test	 ecx, ecx
  0008c	74 13		 je	 SHORT $L161061
  0008e	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 00		 mov	 eax, DWORD PTR [eax]
  0009c	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0009f	eb 11		 jmp	 SHORT $L161062
$L161061:
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	89 55 8c	 mov	 DWORD PTR -116+[ebp], edx
$L161062:
  000b2	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  000b5	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax
  000b8	eb 8e		 jmp	 SHORT $L156700
$L156701:

; 224  :                 }

  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$156698[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 225  :                 if (_Multi)

  000ca	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  000d2	85 d2		 test	 edx, edx
  000d4	74 3e		 je	 SHORT $L156703

; 226  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  000d6	c6 45 d0 01	 mov	 BYTE PTR $T161064[ebp], 1
  000da	8d 45 d0	 lea	 eax, DWORD PTR $T161064[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d cc	 lea	 ecx, DWORD PTR $T161065[ebp]
  000ed	51		 push	 ecx
  000ee	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Insert
  000f6	50		 push	 eax
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T161063[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	89 11		 mov	 DWORD PTR [ecx], edx
  00109	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0010f	e9 16 01 00 00	 jmp	 $L156694
$L156703:

; 227  :                 iterator _P = iterator(_Y);

  00114	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00117	52		 push	 edx
  00118	8d 4d c8	 lea	 ecx, DWORD PTR $T161066[ebp]
  0011b	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator
  00120	8b 00		 mov	 eax, DWORD PTR [eax]
  00122	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax

; 228  :                 if (!_Ans)

  00125	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00128	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0012e	85 c9		 test	 ecx, ecx
  00130	75 02		 jne	 SHORT $L156713

; 230  :                 else if (_P == begin())

  00132	eb 64		 jmp	 SHORT $L156724
$L156713:
  00134	8d 55 c4	 lea	 edx, DWORD PTR $T161067[ebp]
  00137	52		 push	 edx
  00138	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::begin
  00140	50		 push	 eax
  00141	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00144	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator==
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	85 c0		 test	 eax, eax
  00150	74 3e		 je	 SHORT $L156716

; 231  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  00152	c6 45 b8 01	 mov	 BYTE PTR $T161069[ebp], 1
  00156	8d 45 b8	 lea	 eax, DWORD PTR $T161069[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00161	52		 push	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  00165	50		 push	 eax
  00166	8d 4d b4	 lea	 ecx, DWORD PTR $T161070[ebp]
  00169	51		 push	 ecx
  0016a	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Insert
  00172	50		 push	 eax
  00173	8d 4d bc	 lea	 ecx, DWORD PTR $T161068[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00180	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00183	89 11		 mov	 DWORD PTR [ecx], edx
  00185	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00188	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018b	e9 9a 00 00 00	 jmp	 $L156694
$L156716:

; 233  :                         --_P;

  00190	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00193	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator--
$L156724:

; 234  :                 if (key_compare(_Key(_P._Mynode()), _Kfn()(_V)))

  00198	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  0019b	52		 push	 edx
  0019c	8d 4d b0	 lea	 ecx, DWORD PTR $T161071[ebp]
  0019f	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn::operator()
  001a4	50		 push	 eax
  001a5	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Mynode
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Key
  001b3	83 c4 04	 add	 esp, 4
  001b6	50		 push	 eax
  001b7	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  001c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c7	85 c0		 test	 eax, eax
  001c9	74 3b		 je	 SHORT $L156726

; 235  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  001cb	c6 45 a4 01	 mov	 BYTE PTR $T161073[ebp], 1
  001cf	8d 45 a4	 lea	 eax, DWORD PTR $T161073[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  001d6	51		 push	 ecx
  001d7	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  001da	52		 push	 edx
  001db	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  001de	50		 push	 eax
  001df	8d 4d a0	 lea	 ecx, DWORD PTR $T161074[ebp]
  001e2	51		 push	 ecx
  001e3	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Insert
  001eb	50		 push	 eax
  001ec	8d 4d a8	 lea	 ecx, DWORD PTR $T161072[ebp]
  001ef	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001fc	89 11		 mov	 DWORD PTR [ecx], edx
  001fe	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00201	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00204	eb 24		 jmp	 SHORT $L156694
$L156726:

; 236  :                 return (_Pairib(_P, false)); }

  00206	c6 45 94 00	 mov	 BYTE PTR $T161076[ebp], 0
  0020a	8d 55 94	 lea	 edx, DWORD PTR $T161076[ebp]
  0020d	52		 push	 edx
  0020e	8d 45 f0	 lea	 eax, DWORD PTR __P$[ebp]
  00211	50		 push	 eax
  00212	8d 4d 98	 lea	 ecx, DWORD PTR $T161075[ebp]
  00215	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00222	89 08		 mov	 DWORD PTR [eax], ecx
  00224	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00227	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L156694:
  0022a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161077:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$156698[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161080:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161079
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::insert
PUBLIC	?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z ; std::swap
PUBLIC	?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
PUBLIC	?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
PUBLIC	?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lrotate
PUBLIC	?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Max
PUBLIC	?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Min
PUBLIC	?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rrotate
PUBLIC	?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Destval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161088 DD	019930520H
	DD	01H
	DD	FLAT:$T161090
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161090 DD	0ffffffffH
	DD	FLAT:$L161086
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -44
__X$ = -16
__Y$ = -20
__Z$ = -28
__Lk$ = -24
__W$156782 = -32
__W$156788 = -36
$T161085 = -40
__$EHRec$ = -12
__P$ = 12
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase, COMDAT

; 264  :                 {_Nodeptr _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161089
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	56		 push	 esi
  0001c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 265  :                 _Nodeptr _Y = (_P++)._Mynode();

  0001f	6a 00		 push	 0
  00021	8d 45 d8	 lea	 eax, DWORD PTR $T161085[ebp]
  00024	50		 push	 eax
  00025	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00028	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator++
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Mynode
  00034	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax

; 266  :                 _Nodeptr _Z = _Y;

  00037	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0003a	89 4d e4	 mov	 DWORD PTR __Z$[ebp], ecx

; 267  :                 _Lockit _Lk;

  0003d	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  :                 if (_Left(_Y) == _Nil)

  0004d	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00056	83 c4 04	 add	 esp, 4
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00061	75 13		 jne	 SHORT $L156748

; 269  :                         _X = _Right(_Y);

  00063	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 270  :                 else if (_Right(_Y) == _Nil)

  00074	eb 54		 jmp	 SHORT $L156751
$L156748:
  00076	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  0008a	75 13		 jne	 SHORT $L156750

; 271  :                         _X = _Left(_Y);

  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00095	83 c4 04	 add	 esp, 4
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 272  :                 else

  0009d	eb 2b		 jmp	 SHORT $L156751
$L156750:

; 273  :                         _Y = _Min(_Right(_Y)), _X = _Right(_Y);

  0009f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Min
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  000b9	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L156751:

; 274  :                 if (_Y != _Z)

  000ca	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000cd	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  000d0	0f 84 95 01 00
	00		 je	 $L156752

; 275  :                         {_Parent(_Left(_Z)) = _Y;

  000d6	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  000df	83 c4 04	 add	 esp, 4
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  000ea	83 c4 04	 add	 esp, 4
  000ed	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000f0	89 10		 mov	 DWORD PTR [eax], edx

; 276  :                         _Left(_Y) = _Left(_Z);

  000f2	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  000fb	83 c4 04	 add	 esp, 4
  000fe	8b f0		 mov	 esi, eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00109	83 c4 04	 add	 esp, 4
  0010c	8b 16		 mov	 edx, DWORD PTR [esi]
  0010e	89 10		 mov	 DWORD PTR [eax], edx

; 277  :                         if (_Y == _Right(_Z))

  00110	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00119	83 c4 04	 add	 esp, 4
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0011f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00121	75 13		 jne	 SHORT $L156753

; 278  :                                 _Parent(_X) = _Y;

  00123	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0012c	83 c4 04	 add	 esp, 4
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx

; 279  :                         else

  00134	eb 74		 jmp	 SHORT $L156754
$L156753:

; 280  :                                 {_Parent(_X) = _Parent(_Y);

  00136	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0013f	83 c4 04	 add	 esp, 4
  00142	8b f0		 mov	 esi, eax
  00144	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0014d	83 c4 04	 add	 esp, 4
  00150	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00152	89 08		 mov	 DWORD PTR [eax], ecx

; 281  :                                 _Left(_Parent(_Y)) = _X;

  00154	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00157	52		 push	 edx
  00158	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0015d	83 c4 04	 add	 esp, 4
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00168	83 c4 04	 add	 esp, 4
  0016b	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0016e	89 08		 mov	 DWORD PTR [eax], ecx

; 282  :                                 _Right(_Y) = _Right(_Z);

  00170	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00179	83 c4 04	 add	 esp, 4
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00187	83 c4 04	 add	 esp, 4
  0018a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0018c	89 08		 mov	 DWORD PTR [eax], ecx

; 283  :                                 _Parent(_Right(_Z)) = _Y; }

  0018e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00197	83 c4 04	 add	 esp, 4
  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  001a2	83 c4 04	 add	 esp, 4
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
$L156754:

; 284  :                         if (_Root() == _Z)

  001aa	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  001b2	8b 10		 mov	 edx, DWORD PTR [eax]
  001b4	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  001b7	75 0f		 jne	 SHORT $L156755

; 285  :                                 _Root() = _Y;

  001b9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001c4	89 08		 mov	 DWORD PTR [eax], ecx

; 286  :                         else if (_Left(_Parent(_Z)) == _Z)

  001c6	eb 58		 jmp	 SHORT $L156758
$L156755:
  001c8	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  001d1	83 c4 04	 add	 esp, 4
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  001dc	83 c4 04	 add	 esp, 4
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  001e4	75 1e		 jne	 SHORT $L156757

; 287  :                                 _Left(_Parent(_Z)) = _Y;

  001e6	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001e9	52		 push	 edx
  001ea	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  001ef	83 c4 04	 add	 esp, 4
  001f2	8b 00		 mov	 eax, DWORD PTR [eax]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  001fa	83 c4 04	 add	 esp, 4
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00200	89 08		 mov	 DWORD PTR [eax], ecx

; 288  :                         else

  00202	eb 1c		 jmp	 SHORT $L156758
$L156757:

; 289  :                                 _Right(_Parent(_Z)) = _Y;

  00204	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 00		 mov	 eax, DWORD PTR [eax]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00218	83 c4 04	 add	 esp, 4
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0021e	89 08		 mov	 DWORD PTR [eax], ecx
$L156758:

; 290  :                         _Parent(_Y) = _Parent(_Z);

  00220	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00237	83 c4 04	 add	 esp, 4
  0023a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023c	89 08		 mov	 DWORD PTR [eax], ecx

; 291  :                         std::swap(_Color(_Y), _Color(_Z));

  0023e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00247	83 c4 04	 add	 esp, 4
  0024a	50		 push	 eax
  0024b	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00254	83 c4 04	 add	 esp, 4
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z ; std::swap
  0025d	83 c4 08	 add	 esp, 8

; 292  :                         _Y = _Z; }

  00260	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  00263	89 4d ec	 mov	 DWORD PTR __Y$[ebp], ecx

; 293  :                 else

  00266	e9 4a 01 00 00	 jmp	 $L156776
$L156752:

; 294  :                         {_Parent(_X) = _Parent(_Y);

  0026b	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00274	83 c4 04	 add	 esp, 4
  00277	8b f0		 mov	 esi, eax
  00279	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00282	83 c4 04	 add	 esp, 4
  00285	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00287	89 08		 mov	 DWORD PTR [eax], ecx

; 295  :                         if (_Root() == _Z)

  00289	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  00296	75 0f		 jne	 SHORT $L156765

; 296  :                                 _Root() = _X;

  00298	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 297  :                         else if (_Left(_Parent(_Z)) == _Z)

  002a5	eb 58		 jmp	 SHORT $L156768
$L156765:
  002a7	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002aa	52		 push	 edx
  002ab	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  002b0	83 c4 04	 add	 esp, 4
  002b3	8b 00		 mov	 eax, DWORD PTR [eax]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  002bb	83 c4 04	 add	 esp, 4
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  002c3	75 1e		 jne	 SHORT $L156767

; 298  :                                 _Left(_Parent(_Z)) = _X;

  002c5	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  002ce	83 c4 04	 add	 esp, 4
  002d1	8b 00		 mov	 eax, DWORD PTR [eax]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002df	89 08		 mov	 DWORD PTR [eax], ecx

; 299  :                         else

  002e1	eb 1c		 jmp	 SHORT $L156768
$L156767:

; 300  :                                 _Right(_Parent(_Z)) = _X;

  002e3	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  002ec	83 c4 04	 add	 esp, 4
  002ef	8b 00		 mov	 eax, DWORD PTR [eax]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  002f7	83 c4 04	 add	 esp, 4
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	89 08		 mov	 DWORD PTR [eax], ecx
$L156768:

; 301  :                         if (_Lmost() != _Z)

  002ff	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost
  00307	8b 10		 mov	 edx, DWORD PTR [eax]
  00309	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  0030c	74 02		 je	 SHORT $L156769

; 303  :                         else if (_Right(_Z) == _Nil)

  0030e	eb 4a		 jmp	 SHORT $L156772
$L156769:
  00310	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00319	83 c4 04	 add	 esp, 4
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00324	75 1c		 jne	 SHORT $L156771

; 304  :                                 _Lmost() = _Parent(_Z);

  00326	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0032f	83 c4 04	 add	 esp, 4
  00332	8b f0		 mov	 esi, eax
  00334	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost
  0033c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0033e	89 08		 mov	 DWORD PTR [eax], ecx

; 305  :                         else

  00340	eb 18		 jmp	 SHORT $L156772
$L156771:

; 306  :                                 _Lmost() = _Min(_X);

  00342	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00345	52		 push	 edx
  00346	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Min
  0034b	83 c4 04	 add	 esp, 4
  0034e	8b f0		 mov	 esi, eax
  00350	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost
  00358	89 30		 mov	 DWORD PTR [eax], esi
$L156772:

; 307  :                         if (_Rmost() != _Z)

  0035a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	3b 45 e4	 cmp	 eax, DWORD PTR __Z$[ebp]
  00367	74 02		 je	 SHORT $L156773

; 309  :                         else if (_Left(_Z) == _Nil)

  00369	eb 4a		 jmp	 SHORT $L156776
$L156773:
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00374	83 c4 04	 add	 esp, 4
  00377	8b 10		 mov	 edx, DWORD PTR [eax]
  00379	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  0037f	75 1c		 jne	 SHORT $L156775

; 310  :                                 _Rmost() = _Parent(_Z);

  00381	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0038a	83 c4 04	 add	 esp, 4
  0038d	8b f0		 mov	 esi, eax
  0038f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost
  00397	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00399	89 08		 mov	 DWORD PTR [eax], ecx

; 311  :                         else

  0039b	eb 18		 jmp	 SHORT $L156776
$L156775:

; 312  :                                 _Rmost() = _Max(_X); }

  0039d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Max
  003a6	83 c4 04	 add	 esp, 4
  003a9	8b f0		 mov	 esi, eax
  003ab	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ae	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost
  003b3	89 30		 mov	 DWORD PTR [eax], esi
$L156776:

; 313  :                 if (_Color(_Y) == _Black)

  003b5	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  003be	83 c4 04	 add	 esp, 4
  003c1	83 38 01	 cmp	 DWORD PTR [eax], 1
  003c4	0f 85 25 04 00
	00		 jne	 $L156777
$L156779:

; 314  :                         {while (_X != _Root() && _Color(_X) == _Black)

  003ca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  003d2	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  003d5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d7	0f 84 00 04 00
	00		 je	 $L156780
  003dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  003e6	83 c4 04	 add	 esp, 4
  003e9	83 38 01	 cmp	 DWORD PTR [eax], 1
  003ec	0f 85 eb 03 00
	00		 jne	 $L156780

; 315  :                                 if (_X == _Left(_Parent(_X)))

  003f2	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  003fb	83 c4 04	 add	 esp, 4
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	51		 push	 ecx
  00401	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00406	83 c4 04	 add	 esp, 4
  00409	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0040c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0040e	0f 85 e6 01 00
	00		 jne	 $L156781

; 316  :                                         {_Nodeptr _W = _Right(_Parent(_X));

  00414	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0041d	83 c4 04	 add	 esp, 4
  00420	8b 08		 mov	 ecx, DWORD PTR [eax]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 10		 mov	 edx, DWORD PTR [eax]
  0042d	89 55 e0	 mov	 DWORD PTR __W$156782[ebp], edx

; 317  :                                         if (_Color(_W) == _Red)

  00430	8b 45 e0	 mov	 eax, DWORD PTR __W$156782[ebp]
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0043f	75 62		 jne	 SHORT $L156783

; 318  :                                                 {_Color(_W) = _Black;

  00441	8b 4d e0	 mov	 ecx, DWORD PTR __W$156782[ebp]
  00444	51		 push	 ecx
  00445	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  0044a	83 c4 04	 add	 esp, 4
  0044d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 319  :                                                 _Color(_Parent(_X)) = _Red;

  00453	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0045c	83 c4 04	 add	 esp, 4
  0045f	8b 00		 mov	 eax, DWORD PTR [eax]
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00467	83 c4 04	 add	 esp, 4
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 320  :                                                 _Lrotate(_Parent(_X));

  00470	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00473	51		 push	 ecx
  00474	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00479	83 c4 04	 add	 esp, 4
  0047c	8b 10		 mov	 edx, DWORD PTR [eax]
  0047e	52		 push	 edx
  0047f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lrotate

; 321  :                                                 _W = _Right(_Parent(_X)); }

  00487	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00490	83 c4 04	 add	 esp, 4
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	51		 push	 ecx
  00496	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0049b	83 c4 04	 add	 esp, 4
  0049e	8b 10		 mov	 edx, DWORD PTR [eax]
  004a0	89 55 e0	 mov	 DWORD PTR __W$156782[ebp], edx
$L156783:

; 323  :                                                 && _Color(_Right(_W)) == _Black)

  004a3	8b 45 e0	 mov	 eax, DWORD PTR __W$156782[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  004ac	83 c4 04	 add	 esp, 4
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  004b7	83 c4 04	 add	 esp, 4
  004ba	83 38 01	 cmp	 DWORD PTR [eax], 1
  004bd	75 44		 jne	 SHORT $L156784
  004bf	8b 55 e0	 mov	 edx, DWORD PTR __W$156782[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  004c8	83 c4 04	 add	 esp, 4
  004cb	8b 00		 mov	 eax, DWORD PTR [eax]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  004d3	83 c4 04	 add	 esp, 4
  004d6	83 38 01	 cmp	 DWORD PTR [eax], 1
  004d9	75 28		 jne	 SHORT $L156784

; 324  :                                                 {_Color(_W) = _Red;

  004db	8b 4d e0	 mov	 ecx, DWORD PTR __W$156782[ebp]
  004de	51		 push	 ecx
  004df	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  004e4	83 c4 04	 add	 esp, 4
  004e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  :                                                 _X = _Parent(_X); }

  004ed	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  004f0	52		 push	 edx
  004f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  004f6	83 c4 04	 add	 esp, 4
  004f9	8b 00		 mov	 eax, DWORD PTR [eax]
  004fb	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 326  :                                         else

  004fe	e9 f2 00 00 00	 jmp	 $L156785
$L156784:

; 327  :                                                 {if (_Color(_Right(_W)) == _Black)

  00503	8b 4d e0	 mov	 ecx, DWORD PTR __W$156782[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0050c	83 c4 04	 add	 esp, 4
  0050f	8b 10		 mov	 edx, DWORD PTR [eax]
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00517	83 c4 04	 add	 esp, 4
  0051a	83 38 01	 cmp	 DWORD PTR [eax], 1
  0051d	75 57		 jne	 SHORT $L156786

; 328  :                                                         {_Color(_Left(_W)) = _Black;

  0051f	8b 45 e0	 mov	 eax, DWORD PTR __W$156782[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00528	83 c4 04	 add	 esp, 4
  0052b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052d	51		 push	 ecx
  0052e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00533	83 c4 04	 add	 esp, 4
  00536	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 329  :                                                         _Color(_W) = _Red;

  0053c	8b 55 e0	 mov	 edx, DWORD PTR __W$156782[ebp]
  0053f	52		 push	 edx
  00540	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00545	83 c4 04	 add	 esp, 4
  00548	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 330  :                                                         _Rrotate(_W);

  0054e	8b 45 e0	 mov	 eax, DWORD PTR __W$156782[ebp]
  00551	50		 push	 eax
  00552	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rrotate

; 331  :                                                         _W = _Right(_Parent(_X)); }

  0055a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0055d	51		 push	 ecx
  0055e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00563	83 c4 04	 add	 esp, 4
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	52		 push	 edx
  00569	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0056e	83 c4 04	 add	 esp, 4
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	89 45 e0	 mov	 DWORD PTR __W$156782[ebp], eax
$L156786:

; 332  :                                                 _Color(_W) = _Color(_Parent(_X));

  00576	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0057f	83 c4 04	 add	 esp, 4
  00582	8b 10		 mov	 edx, DWORD PTR [eax]
  00584	52		 push	 edx
  00585	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  0058a	83 c4 04	 add	 esp, 4
  0058d	8b f0		 mov	 esi, eax
  0058f	8b 45 e0	 mov	 eax, DWORD PTR __W$156782[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0059d	89 08		 mov	 DWORD PTR [eax], ecx

; 333  :                                                 _Color(_Parent(_X)) = _Black;

  0059f	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005a2	52		 push	 edx
  005a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  005a8	83 c4 04	 add	 esp, 4
  005ab	8b 00		 mov	 eax, DWORD PTR [eax]
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  005b3	83 c4 04	 add	 esp, 4
  005b6	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 334  :                                                 _Color(_Right(_W)) = _Black;

  005bc	8b 4d e0	 mov	 ecx, DWORD PTR __W$156782[ebp]
  005bf	51		 push	 ecx
  005c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  005c5	83 c4 04	 add	 esp, 4
  005c8	8b 10		 mov	 edx, DWORD PTR [eax]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 335  :                                                 _Lrotate(_Parent(_X));

  005d9	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	51		 push	 ecx
  005e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lrotate

; 336  :                                                 break; }}

  005f0	e9 e8 01 00 00	 jmp	 $L156780
$L156785:

; 337  :                                 else

  005f5	e9 de 01 00 00	 jmp	 $L156791
$L156781:

; 338  :                                         {_Nodeptr _W = _Left(_Parent(_X));

  005fa	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005fd	52		 push	 edx
  005fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00603	83 c4 04	 add	 esp, 4
  00606	8b 00		 mov	 eax, DWORD PTR [eax]
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  0060e	83 c4 04	 add	 esp, 4
  00611	8b 08		 mov	 ecx, DWORD PTR [eax]
  00613	89 4d dc	 mov	 DWORD PTR __W$156788[ebp], ecx

; 339  :                                         if (_Color(_W) == _Red)

  00616	8b 55 dc	 mov	 edx, DWORD PTR __W$156788[ebp]
  00619	52		 push	 edx
  0061a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  0061f	83 c4 04	 add	 esp, 4
  00622	83 38 00	 cmp	 DWORD PTR [eax], 0
  00625	75 62		 jne	 SHORT $L156789

; 340  :                                                 {_Color(_W) = _Black;

  00627	8b 45 dc	 mov	 eax, DWORD PTR __W$156788[ebp]
  0062a	50		 push	 eax
  0062b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00630	83 c4 04	 add	 esp, 4
  00633	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 341  :                                                 _Color(_Parent(_X)) = _Red;

  00639	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0063c	51		 push	 ecx
  0063d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00642	83 c4 04	 add	 esp, 4
  00645	8b 10		 mov	 edx, DWORD PTR [eax]
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  0064d	83 c4 04	 add	 esp, 4
  00650	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 342  :                                                 _Rrotate(_Parent(_X));

  00656	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00659	50		 push	 eax
  0065a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0065f	83 c4 04	 add	 esp, 4
  00662	8b 08		 mov	 ecx, DWORD PTR [eax]
  00664	51		 push	 ecx
  00665	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rrotate

; 343  :                                                 _W = _Left(_Parent(_X)); }

  0066d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00670	52		 push	 edx
  00671	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00676	83 c4 04	 add	 esp, 4
  00679	8b 00		 mov	 eax, DWORD PTR [eax]
  0067b	50		 push	 eax
  0067c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00681	83 c4 04	 add	 esp, 4
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 4d dc	 mov	 DWORD PTR __W$156788[ebp], ecx
$L156789:

; 345  :                                                 && _Color(_Left(_W)) == _Black)

  00689	8b 55 dc	 mov	 edx, DWORD PTR __W$156788[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00692	83 c4 04	 add	 esp, 4
  00695	8b 00		 mov	 eax, DWORD PTR [eax]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  0069d	83 c4 04	 add	 esp, 4
  006a0	83 38 01	 cmp	 DWORD PTR [eax], 1
  006a3	75 44		 jne	 SHORT $L156790
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR __W$156788[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  006ae	83 c4 04	 add	 esp, 4
  006b1	8b 10		 mov	 edx, DWORD PTR [eax]
  006b3	52		 push	 edx
  006b4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  006b9	83 c4 04	 add	 esp, 4
  006bc	83 38 01	 cmp	 DWORD PTR [eax], 1
  006bf	75 28		 jne	 SHORT $L156790

; 346  :                                                 {_Color(_W) = _Red;

  006c1	8b 45 dc	 mov	 eax, DWORD PTR __W$156788[ebp]
  006c4	50		 push	 eax
  006c5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  006ca	83 c4 04	 add	 esp, 4
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 347  :                                                 _X = _Parent(_X); }

  006d3	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  006d6	51		 push	 ecx
  006d7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  006dc	83 c4 04	 add	 esp, 4
  006df	8b 10		 mov	 edx, DWORD PTR [eax]
  006e1	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 348  :                                         else

  006e4	e9 ef 00 00 00	 jmp	 $L156791
$L156790:

; 349  :                                                 {if (_Color(_Left(_W)) == _Black)

  006e9	8b 45 dc	 mov	 eax, DWORD PTR __W$156788[ebp]
  006ec	50		 push	 eax
  006ed	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  006f2	83 c4 04	 add	 esp, 4
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  006fd	83 c4 04	 add	 esp, 4
  00700	83 38 01	 cmp	 DWORD PTR [eax], 1
  00703	75 57		 jne	 SHORT $L156792

; 350  :                                                         {_Color(_Right(_W)) = _Black;

  00705	8b 55 dc	 mov	 edx, DWORD PTR __W$156788[ebp]
  00708	52		 push	 edx
  00709	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0070e	83 c4 04	 add	 esp, 4
  00711	8b 00		 mov	 eax, DWORD PTR [eax]
  00713	50		 push	 eax
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 351  :                                                         _Color(_W) = _Red;

  00722	8b 4d dc	 mov	 ecx, DWORD PTR __W$156788[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  0072b	83 c4 04	 add	 esp, 4
  0072e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 352  :                                                         _Lrotate(_W);

  00734	8b 55 dc	 mov	 edx, DWORD PTR __W$156788[ebp]
  00737	52		 push	 edx
  00738	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lrotate

; 353  :                                                         _W = _Left(_Parent(_X)); }

  00740	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00749	83 c4 04	 add	 esp, 4
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	51		 push	 ecx
  0074f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00754	83 c4 04	 add	 esp, 4
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	89 55 dc	 mov	 DWORD PTR __W$156788[ebp], edx
$L156792:

; 354  :                                                 _Color(_W) = _Color(_Parent(_X));

  0075c	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00765	83 c4 04	 add	 esp, 4
  00768	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00770	83 c4 04	 add	 esp, 4
  00773	8b f0		 mov	 esi, eax
  00775	8b 55 dc	 mov	 edx, DWORD PTR __W$156788[ebp]
  00778	52		 push	 edx
  00779	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  0077e	83 c4 04	 add	 esp, 4
  00781	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00783	89 08		 mov	 DWORD PTR [eax], ecx

; 355  :                                                 _Color(_Parent(_X)) = _Black;

  00785	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0078e	83 c4 04	 add	 esp, 4
  00791	8b 00		 mov	 eax, DWORD PTR [eax]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00799	83 c4 04	 add	 esp, 4
  0079c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 356  :                                                 _Color(_Left(_W)) = _Black;

  007a2	8b 4d dc	 mov	 ecx, DWORD PTR __W$156788[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  007ab	83 c4 04	 add	 esp, 4
  007ae	8b 10		 mov	 edx, DWORD PTR [eax]
  007b0	52		 push	 edx
  007b1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  007b6	83 c4 04	 add	 esp, 4
  007b9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 357  :                                                 _Rrotate(_Parent(_X));

  007bf	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  007c8	83 c4 04	 add	 esp, 4
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	51		 push	 ecx
  007ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rrotate

; 358  :                                                 break; }}

  007d6	eb 05		 jmp	 SHORT $L156780
$L156791:
  007d8	e9 ed fb ff ff	 jmp	 $L156779
$L156780:

; 359  :                         _Color(_X) = _Black; }

  007dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  007e0	52		 push	 edx
  007e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  007e6	83 c4 04	 add	 esp, 4
  007e9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L156777:

; 360  :                 _Destval(&_Value(_Y));

  007ef	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Value
  007f8	83 c4 04	 add	 esp, 4
  007fb	50		 push	 eax
  007fc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Destval

; 361  :                 _Freenode(_Y);

  00804	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00807	51		 push	 ecx
  00808	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Freenode

; 362  :                 --_Size;

  00810	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00813	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00816	83 e8 01	 sub	 eax, 1
  00819	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 363  :                 return (_P); }

  0081f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00822	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00825	89 02		 mov	 DWORD PTR [edx], eax
  00827	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0082e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00831	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00837	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0083a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0083d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00844	5e		 pop	 esi
  00845	8b e5		 mov	 esp, ebp
  00847	5d		 pop	 ebp
  00848	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161086:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161089:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161088
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::erase
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ PROC NEAR		; CWnd::GetSafeHwnd, COMDAT

; 23   : 	{ return this == NULL ? NULL : m_hWnd; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L161094
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00016	eb 09		 jmp	 SHORT $L161095
$L161094:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0001e	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
$L161095:
  00021	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ENDP		; CWnd::GetSafeHwnd
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lbound
;	COMDAT ?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T161097 = -4
__Kv$ = 12
?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::lower_bound, COMDAT

; 402  :                 {return (iterator(_Lbound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lbound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T161097[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::lower_bound
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::upper_bound
PUBLIC	??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator>
;	COMDAT ?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -20
$T161099 = -8
$T161100 = -12
$T161101 = -16
__Kv$ = 12
?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::equal_range, COMDAT

; 410  :                 {return (_Pairii(lower_bound(_Kv), upper_bound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f4	 lea	 ecx, DWORD PTR $T161100[ebp]
  00010	51		 push	 ecx
  00011	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::upper_bound
  00019	50		 push	 eax
  0001a	8b 55 0c	 mov	 edx, DWORD PTR __Kv$[ebp]
  0001d	52		 push	 edx
  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T161101[ebp]
  00021	50		 push	 eax
  00022	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::lower_bound
  0002a	50		 push	 eax
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR $T161099[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator>
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	89 08		 mov	 DWORD PTR [eax], ecx
  0003d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00040	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::equal_range
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161105 DD	019930520H
	DD	01H
	DD	FLAT:$T161107
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161107 DD	0ffffffffH
	DD	FLAT:$L161103
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__$EHRec$ = -12
__X$ = 8
?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Erase, COMDAT

; 449  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161106
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 450  :                 for (_Nodeptr _Y = _X; _Y != _Nil; _X = _Y)

  0002e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax
  00034	eb 06		 jmp	 SHORT $L156811
$L156812:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00039	89 4d 08	 mov	 DWORD PTR __X$[ebp], ecx
$L156811:
  0003c	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  0003f	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00045	74 4b		 je	 SHORT $L156813

; 451  :                         {_Erase(_Right(_Y));

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Erase

; 452  :                         _Y = _Left(_Y);

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax

; 453  :                         _Destval(&_Value(_X));

  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Value
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Destval

; 454  :                         _Freenode(_X); }}

  00084	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00087	52		 push	 edx
  00088	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Freenode
  00090	eb a4		 jmp	 SHORT $L156812
$L156813:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161103:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161106:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161105
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Erase
PUBLIC	?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Buynode
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161113 DD	019930520H
	DD	01H
	DD	FLAT:$T161115
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161115 DD	0ffffffffH
	DD	FLAT:$L161111
xdata$x	ENDS
;	COMDAT ?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -20
__Lk$ = -16
__$EHRec$ = -12
?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXXZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Init, COMDAT

; 456  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161114
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :                 if (_Nil == 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00035	75 3a		 jne	 SHORT $L156817

; 458  :                         {_Nil = _Buynode(0, _Black);

  00037	6a 01		 push	 1
  00039	6a 00		 push	 0
  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Buynode
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A, eax ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil

; 459  :                         _Left(_Nil) = 0, _Right(_Nil) = 0; }

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00068	83 c4 04	 add	 esp, 4
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L156817:

; 460  :                 ++_Nilrefs;

  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1IA ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nilrefs
  00077	83 c2 01	 add	 edx, 1
  0007a	89 15 00 00 00
	00		 mov	 DWORD PTR ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1IA, edx ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nilrefs

; 461  :                 _Head = _Buynode(_Nil, _Red), _Size = 0;

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Buynode
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00096	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00099	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 462  :                 _Lmost() = _Head, _Rmost() = _Head; }

  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	89 10		 mov	 DWORD PTR [eax], edx
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost
  000b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	89 10		 mov	 DWORD PTR [eax], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161111:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161114:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161113
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXXZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Init
;	COMDAT ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost, COMDAT

; 524  :                 {return (_Left(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost, COMDAT

; 553  :                 {return (_Right(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root, COMDAT

; 557  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Mynode, COMDAT

; 114  :                         {return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBEPAU_Node@23@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator, COMDAT

; 124  :                 iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator++
;	COMDAT ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator++, COMDAT

; 134  :                         {iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 135  :                         ++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator++

; 136  :                         return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__Y$ = 12
??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z PROC NEAR ; std::less<CSCI_WorldObject>::operator(), COMDAT

; 86   : 		{return (_X < _Y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000b	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00010	66 8b f0	 mov	 si, ax
  00013	81 e6 ff ff 00
	00		 and	 esi, 65535		; 0000ffffH
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Y$[ebp]
  0001c	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00021	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00026	33 c9		 xor	 ecx, ecx
  00028	3b f0		 cmp	 esi, eax
  0002a	0f 9c c1	 setl	 cl
  0002d	8a c1		 mov	 al, cl
  0002f	5e		 pop	 esi
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z ENDP ; std::less<CSCI_WorldObject>::operator()
_TEXT	ENDS
PUBLIC	?_Allocate@std@@YAPADHPAD@Z			; std::_Allocate
;	COMDAT ?_Charalloc@?$allocator@PAVCInventoryDlg@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4
__N$ = 8
?_Charalloc@?$allocator@PAVCInventoryDlg@@@std@@QAEPADI@Z PROC NEAR ; std::allocator<CInventoryDlg *>::_Charalloc, COMDAT

; 61   : 		{return (_Allocate((difference_type)_N,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 			(char _FARQ *)0)); }

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPADHPAD@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Charalloc@?$allocator@PAVCInventoryDlg@@@std@@QAEPADI@Z ENDP ; std::allocator<CInventoryDlg *>::_Charalloc
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?deallocate@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CInventoryDlg *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAXI@Z ENDP ; std::allocator<CInventoryDlg *>::deallocate
_TEXT	ENDS
EXTRN	__imp__ScreenToClient@8:NEAR
;	COMDAT ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT
_lpPoint$ = 8
_this$ = -4
?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z PROC NEAR	; CWnd::ScreenToClient, COMDAT

; 106  : 	{ ASSERT(::IsWindow(m_hWnd)); ::ScreenToClient(m_hWnd, lpPoint); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpPoint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z ENDP		; CWnd::ScreenToClient
_TEXT	ENDS
PUBLIC	?_Construct@std@@YAXPAPAVCInventoryDlg@@ABQAV2@@Z ; std::_Construct
;	COMDAT ?construct@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?construct@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@ABQAV3@@Z PROC NEAR ; std::allocator<CInventoryDlg *>::construct, COMDAT

; 66   : 		{_Construct(_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAPAVCInventoryDlg@@ABQAV2@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?construct@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@ABQAV3@@Z ENDP ; std::allocator<CInventoryDlg *>::construct
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAPAVCInventoryDlg@@@Z	; std::_Destroy
;	COMDAT ?destroy@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?destroy@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@@Z PROC NEAR ; std::allocator<CInventoryDlg *>::destroy, COMDAT

; 68   : 		{_Destroy(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAPAVCInventoryDlg@@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@PAVCInventoryDlg@@@std@@QAEXPAPAVCInventoryDlg@@@Z ENDP ; std::allocator<CInventoryDlg *>::destroy
_TEXT	ENDS
PUBLIC	??R_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QBEABVCSCI_WorldObject@@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn::operator()
;	COMDAT ?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z
_TEXT	SEGMENT
$T161131 = -4
__P$ = 8
?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Key, COMDAT

; 38   :                 {return (_Kfn()(_Value(_P))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Value
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T161131[ebp]
  00014	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QBEABVCSCI_WorldObject@@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn::operator()
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Key
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEIXZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::size, COMDAT

; 206  :                 {return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEIXZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::size
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
PUBLIC	?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
PUBLIC	??Fiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator--
PUBLIC	?_Insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Insert
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161153 DD	019930520H
	DD	01H
	DD	FLAT:$T161155
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161155 DD	0ffffffffH
	DD	FLAT:$L161151
xdata$x	ENDS
;	COMDAT ?insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -112
__X$ = -24
__Y$ = -28
__Ans$ = -20
_Lk$156869 = -32
__P$ = -16
$T161134 = -36
$T161137 = -44
$T161138 = -48
$T161139 = -52
$T161140 = -56
$T161141 = -60
$T161142 = -68
$T161143 = -72
$T161144 = -76
$T161145 = -80
$T161146 = -88
$T161147 = -92
$T161148 = -96
$T161149 = -104
$T161150 = -108
__$EHRec$ = -12
__V$ = 12
?insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::insert, COMDAT

; 216  :                 {_Nodeptr _X = _Root();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161154
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 68	 sub	 esp, 104		; 00000068H
  0001b	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax

; 217  :                 _Nodeptr _Y = _Head;

  0002b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	89 55 e4	 mov	 DWORD PTR __Y$[ebp], edx

; 218  :                 bool _Ans = true;

  00034	c6 45 ec 01	 mov	 BYTE PTR __Ans$[ebp], 1

; 219  :                 { _Lockit Lk;

  00038	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$156869[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L156871:

; 220  :                         while (_X != _Nil)

  00048	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  0004b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00051	74 67		 je	 SHORT $L156872

; 221  :                                 {_Y = _X;

  00053	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  00056	89 4d e4	 mov	 DWORD PTR __Y$[ebp], ecx

; 222  :                                 _Ans = key_compare(_Kfn()(_V), _Key(_X));

  00059	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Key
  00062	83 c4 04	 add	 esp, 4
  00065	50		 push	 eax
  00066	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d dc	 lea	 ecx, DWORD PTR $T161134[ebp]
  0006d	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QBEABVCSCI_WorldObject@@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn::operator()
  00072	50		 push	 eax
  00073	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 01	 add	 ecx, 1
  00079	e8 00 00 00 00	 call	 ??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z ; std::less<CSCI_WorldObject>::operator()
  0007e	88 45 ec	 mov	 BYTE PTR __Ans$[ebp], al

; 223  :                                 _X = _Ans ? _Left(_X) : _Right(_X); }

  00081	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	85 c9		 test	 ecx, ecx
  0008c	74 13		 je	 SHORT $L161135
  0008e	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 00		 mov	 eax, DWORD PTR [eax]
  0009c	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0009f	eb 11		 jmp	 SHORT $L161136
$L161135:
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	89 55 8c	 mov	 DWORD PTR -116+[ebp], edx
$L161136:
  000b2	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  000b5	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax
  000b8	eb 8e		 jmp	 SHORT $L156871
$L156872:

; 224  :                 }

  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$156869[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 225  :                 if (_Multi)

  000ca	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  000d2	85 d2		 test	 edx, edx
  000d4	74 3e		 je	 SHORT $L156874

; 226  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  000d6	c6 45 d0 01	 mov	 BYTE PTR $T161138[ebp], 1
  000da	8d 45 d0	 lea	 eax, DWORD PTR $T161138[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d cc	 lea	 ecx, DWORD PTR $T161139[ebp]
  000ed	51		 push	 ecx
  000ee	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Insert
  000f6	50		 push	 eax
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T161137[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	89 11		 mov	 DWORD PTR [ecx], edx
  00109	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0010f	e9 16 01 00 00	 jmp	 $L156865
$L156874:

; 227  :                 iterator _P = iterator(_Y);

  00114	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00117	52		 push	 edx
  00118	8d 4d c8	 lea	 ecx, DWORD PTR $T161140[ebp]
  0011b	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::iterator
  00120	8b 00		 mov	 eax, DWORD PTR [eax]
  00122	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax

; 228  :                 if (!_Ans)

  00125	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00128	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0012e	85 c9		 test	 ecx, ecx
  00130	75 02		 jne	 SHORT $L156884

; 230  :                 else if (_P == begin())

  00132	eb 64		 jmp	 SHORT $L156895
$L156884:
  00134	8d 55 c4	 lea	 edx, DWORD PTR $T161141[ebp]
  00137	52		 push	 edx
  00138	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::begin
  00140	50		 push	 eax
  00141	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00144	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator==
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	85 c0		 test	 eax, eax
  00150	74 3e		 je	 SHORT $L156887

; 231  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  00152	c6 45 b8 01	 mov	 BYTE PTR $T161143[ebp], 1
  00156	8d 45 b8	 lea	 eax, DWORD PTR $T161143[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00161	52		 push	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  00165	50		 push	 eax
  00166	8d 4d b4	 lea	 ecx, DWORD PTR $T161144[ebp]
  00169	51		 push	 ecx
  0016a	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Insert
  00172	50		 push	 eax
  00173	8d 4d bc	 lea	 ecx, DWORD PTR $T161142[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00180	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00183	89 11		 mov	 DWORD PTR [ecx], edx
  00185	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00188	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018b	e9 9a 00 00 00	 jmp	 $L156865
$L156887:

; 233  :                         --_P;

  00190	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00193	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator--
$L156895:

; 234  :                 if (key_compare(_Key(_P._Mynode()), _Kfn()(_V)))

  00198	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  0019b	52		 push	 edx
  0019c	8d 4d b0	 lea	 ecx, DWORD PTR $T161145[ebp]
  0019f	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QBEABVCSCI_WorldObject@@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn::operator()
  001a4	50		 push	 eax
  001a5	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Key
  001b3	83 c4 04	 add	 esp, 4
  001b6	50		 push	 eax
  001b7	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	e8 00 00 00 00	 call	 ??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z ; std::less<CSCI_WorldObject>::operator()
  001c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c7	85 c0		 test	 eax, eax
  001c9	74 3b		 je	 SHORT $L156897

; 235  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  001cb	c6 45 a4 01	 mov	 BYTE PTR $T161147[ebp], 1
  001cf	8d 45 a4	 lea	 eax, DWORD PTR $T161147[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  001d6	51		 push	 ecx
  001d7	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  001da	52		 push	 edx
  001db	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  001de	50		 push	 eax
  001df	8d 4d a0	 lea	 ecx, DWORD PTR $T161148[ebp]
  001e2	51		 push	 ecx
  001e3	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Insert
  001eb	50		 push	 eax
  001ec	8d 4d a8	 lea	 ecx, DWORD PTR $T161146[ebp]
  001ef	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001fc	89 11		 mov	 DWORD PTR [ecx], edx
  001fe	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00201	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00204	eb 24		 jmp	 SHORT $L156865
$L156897:

; 236  :                 return (_Pairib(_P, false)); }

  00206	c6 45 94 00	 mov	 BYTE PTR $T161150[ebp], 0
  0020a	8d 55 94	 lea	 edx, DWORD PTR $T161150[ebp]
  0020d	52		 push	 edx
  0020e	8d 45 f0	 lea	 eax, DWORD PTR __P$[ebp]
  00211	50		 push	 eax
  00212	8d 4d 98	 lea	 ecx, DWORD PTR $T161149[ebp]
  00215	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00222	89 08		 mov	 DWORD PTR [eax], ecx
  00224	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00227	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L156865:
  0022a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161151:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$156869[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161154:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161153
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@2@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::insert
PUBLIC	?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z ; std::swap
PUBLIC	?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
PUBLIC	?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
PUBLIC	?_Lrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lrotate
PUBLIC	?_Max@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Max
PUBLIC	?_Min@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Min
PUBLIC	?_Rrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rrotate
PUBLIC	?_Destval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Destval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161162 DD	019930520H
	DD	01H
	DD	FLAT:$T161164
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161164 DD	0ffffffffH
	DD	FLAT:$L161160
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -44
__X$ = -16
__Y$ = -20
__Z$ = -28
__Lk$ = -24
__W$156953 = -32
__W$156959 = -36
$T161159 = -40
__$EHRec$ = -12
__P$ = 12
?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase, COMDAT

; 264  :                 {_Nodeptr _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161163
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	56		 push	 esi
  0001c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 265  :                 _Nodeptr _Y = (_P++)._Mynode();

  0001f	6a 00		 push	 0
  00021	8d 45 d8	 lea	 eax, DWORD PTR $T161159[ebp]
  00024	50		 push	 eax
  00025	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00028	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator++
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode
  00034	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax

; 266  :                 _Nodeptr _Z = _Y;

  00037	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0003a	89 4d e4	 mov	 DWORD PTR __Z$[ebp], ecx

; 267  :                 _Lockit _Lk;

  0003d	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  :                 if (_Left(_Y) == _Nil)

  0004d	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00056	83 c4 04	 add	 esp, 4
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00061	75 13		 jne	 SHORT $L156919

; 269  :                         _X = _Right(_Y);

  00063	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 270  :                 else if (_Right(_Y) == _Nil)

  00074	eb 54		 jmp	 SHORT $L156922
$L156919:
  00076	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  0008a	75 13		 jne	 SHORT $L156921

; 271  :                         _X = _Left(_Y);

  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00095	83 c4 04	 add	 esp, 4
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 272  :                 else

  0009d	eb 2b		 jmp	 SHORT $L156922
$L156921:

; 273  :                         _Y = _Min(_Right(_Y)), _X = _Right(_Y);

  0009f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Min
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  000b9	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L156922:

; 274  :                 if (_Y != _Z)

  000ca	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000cd	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  000d0	0f 84 95 01 00
	00		 je	 $L156923

; 275  :                         {_Parent(_Left(_Z)) = _Y;

  000d6	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  000df	83 c4 04	 add	 esp, 4
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  000ea	83 c4 04	 add	 esp, 4
  000ed	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000f0	89 10		 mov	 DWORD PTR [eax], edx

; 276  :                         _Left(_Y) = _Left(_Z);

  000f2	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  000fb	83 c4 04	 add	 esp, 4
  000fe	8b f0		 mov	 esi, eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00109	83 c4 04	 add	 esp, 4
  0010c	8b 16		 mov	 edx, DWORD PTR [esi]
  0010e	89 10		 mov	 DWORD PTR [eax], edx

; 277  :                         if (_Y == _Right(_Z))

  00110	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00119	83 c4 04	 add	 esp, 4
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0011f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00121	75 13		 jne	 SHORT $L156924

; 278  :                                 _Parent(_X) = _Y;

  00123	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0012c	83 c4 04	 add	 esp, 4
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx

; 279  :                         else

  00134	eb 74		 jmp	 SHORT $L156925
$L156924:

; 280  :                                 {_Parent(_X) = _Parent(_Y);

  00136	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0013f	83 c4 04	 add	 esp, 4
  00142	8b f0		 mov	 esi, eax
  00144	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0014d	83 c4 04	 add	 esp, 4
  00150	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00152	89 08		 mov	 DWORD PTR [eax], ecx

; 281  :                                 _Left(_Parent(_Y)) = _X;

  00154	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00157	52		 push	 edx
  00158	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0015d	83 c4 04	 add	 esp, 4
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00168	83 c4 04	 add	 esp, 4
  0016b	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0016e	89 08		 mov	 DWORD PTR [eax], ecx

; 282  :                                 _Right(_Y) = _Right(_Z);

  00170	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00179	83 c4 04	 add	 esp, 4
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00187	83 c4 04	 add	 esp, 4
  0018a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0018c	89 08		 mov	 DWORD PTR [eax], ecx

; 283  :                                 _Parent(_Right(_Z)) = _Y; }

  0018e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00197	83 c4 04	 add	 esp, 4
  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  001a2	83 c4 04	 add	 esp, 4
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
$L156925:

; 284  :                         if (_Root() == _Z)

  001aa	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  001b2	8b 10		 mov	 edx, DWORD PTR [eax]
  001b4	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  001b7	75 0f		 jne	 SHORT $L156926

; 285  :                                 _Root() = _Y;

  001b9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001c4	89 08		 mov	 DWORD PTR [eax], ecx

; 286  :                         else if (_Left(_Parent(_Z)) == _Z)

  001c6	eb 58		 jmp	 SHORT $L156929
$L156926:
  001c8	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  001d1	83 c4 04	 add	 esp, 4
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  001dc	83 c4 04	 add	 esp, 4
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  001e4	75 1e		 jne	 SHORT $L156928

; 287  :                                 _Left(_Parent(_Z)) = _Y;

  001e6	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001e9	52		 push	 edx
  001ea	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  001ef	83 c4 04	 add	 esp, 4
  001f2	8b 00		 mov	 eax, DWORD PTR [eax]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  001fa	83 c4 04	 add	 esp, 4
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00200	89 08		 mov	 DWORD PTR [eax], ecx

; 288  :                         else

  00202	eb 1c		 jmp	 SHORT $L156929
$L156928:

; 289  :                                 _Right(_Parent(_Z)) = _Y;

  00204	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 00		 mov	 eax, DWORD PTR [eax]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00218	83 c4 04	 add	 esp, 4
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0021e	89 08		 mov	 DWORD PTR [eax], ecx
$L156929:

; 290  :                         _Parent(_Y) = _Parent(_Z);

  00220	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00237	83 c4 04	 add	 esp, 4
  0023a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023c	89 08		 mov	 DWORD PTR [eax], ecx

; 291  :                         std::swap(_Color(_Y), _Color(_Z));

  0023e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00247	83 c4 04	 add	 esp, 4
  0024a	50		 push	 eax
  0024b	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00254	83 c4 04	 add	 esp, 4
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z ; std::swap
  0025d	83 c4 08	 add	 esp, 8

; 292  :                         _Y = _Z; }

  00260	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  00263	89 4d ec	 mov	 DWORD PTR __Y$[ebp], ecx

; 293  :                 else

  00266	e9 4a 01 00 00	 jmp	 $L156947
$L156923:

; 294  :                         {_Parent(_X) = _Parent(_Y);

  0026b	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00274	83 c4 04	 add	 esp, 4
  00277	8b f0		 mov	 esi, eax
  00279	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00282	83 c4 04	 add	 esp, 4
  00285	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00287	89 08		 mov	 DWORD PTR [eax], ecx

; 295  :                         if (_Root() == _Z)

  00289	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  00296	75 0f		 jne	 SHORT $L156936

; 296  :                                 _Root() = _X;

  00298	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 297  :                         else if (_Left(_Parent(_Z)) == _Z)

  002a5	eb 58		 jmp	 SHORT $L156939
$L156936:
  002a7	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002aa	52		 push	 edx
  002ab	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  002b0	83 c4 04	 add	 esp, 4
  002b3	8b 00		 mov	 eax, DWORD PTR [eax]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  002bb	83 c4 04	 add	 esp, 4
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  002c3	75 1e		 jne	 SHORT $L156938

; 298  :                                 _Left(_Parent(_Z)) = _X;

  002c5	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  002ce	83 c4 04	 add	 esp, 4
  002d1	8b 00		 mov	 eax, DWORD PTR [eax]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002df	89 08		 mov	 DWORD PTR [eax], ecx

; 299  :                         else

  002e1	eb 1c		 jmp	 SHORT $L156939
$L156938:

; 300  :                                 _Right(_Parent(_Z)) = _X;

  002e3	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  002ec	83 c4 04	 add	 esp, 4
  002ef	8b 00		 mov	 eax, DWORD PTR [eax]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  002f7	83 c4 04	 add	 esp, 4
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	89 08		 mov	 DWORD PTR [eax], ecx
$L156939:

; 301  :                         if (_Lmost() != _Z)

  002ff	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost
  00307	8b 10		 mov	 edx, DWORD PTR [eax]
  00309	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  0030c	74 02		 je	 SHORT $L156940

; 303  :                         else if (_Right(_Z) == _Nil)

  0030e	eb 4a		 jmp	 SHORT $L156943
$L156940:
  00310	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00319	83 c4 04	 add	 esp, 4
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00324	75 1c		 jne	 SHORT $L156942

; 304  :                                 _Lmost() = _Parent(_Z);

  00326	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0032f	83 c4 04	 add	 esp, 4
  00332	8b f0		 mov	 esi, eax
  00334	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost
  0033c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0033e	89 08		 mov	 DWORD PTR [eax], ecx

; 305  :                         else

  00340	eb 18		 jmp	 SHORT $L156943
$L156942:

; 306  :                                 _Lmost() = _Min(_X);

  00342	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00345	52		 push	 edx
  00346	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Min
  0034b	83 c4 04	 add	 esp, 4
  0034e	8b f0		 mov	 esi, eax
  00350	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost
  00358	89 30		 mov	 DWORD PTR [eax], esi
$L156943:

; 307  :                         if (_Rmost() != _Z)

  0035a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	3b 45 e4	 cmp	 eax, DWORD PTR __Z$[ebp]
  00367	74 02		 je	 SHORT $L156944

; 309  :                         else if (_Left(_Z) == _Nil)

  00369	eb 4a		 jmp	 SHORT $L156947
$L156944:
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00374	83 c4 04	 add	 esp, 4
  00377	8b 10		 mov	 edx, DWORD PTR [eax]
  00379	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  0037f	75 1c		 jne	 SHORT $L156946

; 310  :                                 _Rmost() = _Parent(_Z);

  00381	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0038a	83 c4 04	 add	 esp, 4
  0038d	8b f0		 mov	 esi, eax
  0038f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost
  00397	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00399	89 08		 mov	 DWORD PTR [eax], ecx

; 311  :                         else

  0039b	eb 18		 jmp	 SHORT $L156947
$L156946:

; 312  :                                 _Rmost() = _Max(_X); }

  0039d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?_Max@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Max
  003a6	83 c4 04	 add	 esp, 4
  003a9	8b f0		 mov	 esi, eax
  003ab	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ae	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost
  003b3	89 30		 mov	 DWORD PTR [eax], esi
$L156947:

; 313  :                 if (_Color(_Y) == _Black)

  003b5	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  003be	83 c4 04	 add	 esp, 4
  003c1	83 38 01	 cmp	 DWORD PTR [eax], 1
  003c4	0f 85 25 04 00
	00		 jne	 $L156948
$L156950:

; 314  :                         {while (_X != _Root() && _Color(_X) == _Black)

  003ca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  003d2	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  003d5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d7	0f 84 00 04 00
	00		 je	 $L156951
  003dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  003e6	83 c4 04	 add	 esp, 4
  003e9	83 38 01	 cmp	 DWORD PTR [eax], 1
  003ec	0f 85 eb 03 00
	00		 jne	 $L156951

; 315  :                                 if (_X == _Left(_Parent(_X)))

  003f2	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  003fb	83 c4 04	 add	 esp, 4
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	51		 push	 ecx
  00401	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00406	83 c4 04	 add	 esp, 4
  00409	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0040c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0040e	0f 85 e6 01 00
	00		 jne	 $L156952

; 316  :                                         {_Nodeptr _W = _Right(_Parent(_X));

  00414	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0041d	83 c4 04	 add	 esp, 4
  00420	8b 08		 mov	 ecx, DWORD PTR [eax]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 10		 mov	 edx, DWORD PTR [eax]
  0042d	89 55 e0	 mov	 DWORD PTR __W$156953[ebp], edx

; 317  :                                         if (_Color(_W) == _Red)

  00430	8b 45 e0	 mov	 eax, DWORD PTR __W$156953[ebp]
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0043f	75 62		 jne	 SHORT $L156954

; 318  :                                                 {_Color(_W) = _Black;

  00441	8b 4d e0	 mov	 ecx, DWORD PTR __W$156953[ebp]
  00444	51		 push	 ecx
  00445	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  0044a	83 c4 04	 add	 esp, 4
  0044d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 319  :                                                 _Color(_Parent(_X)) = _Red;

  00453	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0045c	83 c4 04	 add	 esp, 4
  0045f	8b 00		 mov	 eax, DWORD PTR [eax]
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00467	83 c4 04	 add	 esp, 4
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 320  :                                                 _Lrotate(_Parent(_X));

  00470	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00473	51		 push	 ecx
  00474	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00479	83 c4 04	 add	 esp, 4
  0047c	8b 10		 mov	 edx, DWORD PTR [eax]
  0047e	52		 push	 edx
  0047f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lrotate

; 321  :                                                 _W = _Right(_Parent(_X)); }

  00487	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00490	83 c4 04	 add	 esp, 4
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	51		 push	 ecx
  00496	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0049b	83 c4 04	 add	 esp, 4
  0049e	8b 10		 mov	 edx, DWORD PTR [eax]
  004a0	89 55 e0	 mov	 DWORD PTR __W$156953[ebp], edx
$L156954:

; 323  :                                                 && _Color(_Right(_W)) == _Black)

  004a3	8b 45 e0	 mov	 eax, DWORD PTR __W$156953[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  004ac	83 c4 04	 add	 esp, 4
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  004b7	83 c4 04	 add	 esp, 4
  004ba	83 38 01	 cmp	 DWORD PTR [eax], 1
  004bd	75 44		 jne	 SHORT $L156955
  004bf	8b 55 e0	 mov	 edx, DWORD PTR __W$156953[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  004c8	83 c4 04	 add	 esp, 4
  004cb	8b 00		 mov	 eax, DWORD PTR [eax]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  004d3	83 c4 04	 add	 esp, 4
  004d6	83 38 01	 cmp	 DWORD PTR [eax], 1
  004d9	75 28		 jne	 SHORT $L156955

; 324  :                                                 {_Color(_W) = _Red;

  004db	8b 4d e0	 mov	 ecx, DWORD PTR __W$156953[ebp]
  004de	51		 push	 ecx
  004df	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  004e4	83 c4 04	 add	 esp, 4
  004e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  :                                                 _X = _Parent(_X); }

  004ed	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  004f0	52		 push	 edx
  004f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  004f6	83 c4 04	 add	 esp, 4
  004f9	8b 00		 mov	 eax, DWORD PTR [eax]
  004fb	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 326  :                                         else

  004fe	e9 f2 00 00 00	 jmp	 $L156956
$L156955:

; 327  :                                                 {if (_Color(_Right(_W)) == _Black)

  00503	8b 4d e0	 mov	 ecx, DWORD PTR __W$156953[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0050c	83 c4 04	 add	 esp, 4
  0050f	8b 10		 mov	 edx, DWORD PTR [eax]
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00517	83 c4 04	 add	 esp, 4
  0051a	83 38 01	 cmp	 DWORD PTR [eax], 1
  0051d	75 57		 jne	 SHORT $L156957

; 328  :                                                         {_Color(_Left(_W)) = _Black;

  0051f	8b 45 e0	 mov	 eax, DWORD PTR __W$156953[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00528	83 c4 04	 add	 esp, 4
  0052b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052d	51		 push	 ecx
  0052e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00533	83 c4 04	 add	 esp, 4
  00536	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 329  :                                                         _Color(_W) = _Red;

  0053c	8b 55 e0	 mov	 edx, DWORD PTR __W$156953[ebp]
  0053f	52		 push	 edx
  00540	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00545	83 c4 04	 add	 esp, 4
  00548	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 330  :                                                         _Rrotate(_W);

  0054e	8b 45 e0	 mov	 eax, DWORD PTR __W$156953[ebp]
  00551	50		 push	 eax
  00552	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rrotate

; 331  :                                                         _W = _Right(_Parent(_X)); }

  0055a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0055d	51		 push	 ecx
  0055e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00563	83 c4 04	 add	 esp, 4
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	52		 push	 edx
  00569	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0056e	83 c4 04	 add	 esp, 4
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	89 45 e0	 mov	 DWORD PTR __W$156953[ebp], eax
$L156957:

; 332  :                                                 _Color(_W) = _Color(_Parent(_X));

  00576	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0057f	83 c4 04	 add	 esp, 4
  00582	8b 10		 mov	 edx, DWORD PTR [eax]
  00584	52		 push	 edx
  00585	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  0058a	83 c4 04	 add	 esp, 4
  0058d	8b f0		 mov	 esi, eax
  0058f	8b 45 e0	 mov	 eax, DWORD PTR __W$156953[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0059d	89 08		 mov	 DWORD PTR [eax], ecx

; 333  :                                                 _Color(_Parent(_X)) = _Black;

  0059f	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005a2	52		 push	 edx
  005a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  005a8	83 c4 04	 add	 esp, 4
  005ab	8b 00		 mov	 eax, DWORD PTR [eax]
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  005b3	83 c4 04	 add	 esp, 4
  005b6	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 334  :                                                 _Color(_Right(_W)) = _Black;

  005bc	8b 4d e0	 mov	 ecx, DWORD PTR __W$156953[ebp]
  005bf	51		 push	 ecx
  005c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  005c5	83 c4 04	 add	 esp, 4
  005c8	8b 10		 mov	 edx, DWORD PTR [eax]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 335  :                                                 _Lrotate(_Parent(_X));

  005d9	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	51		 push	 ecx
  005e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lrotate

; 336  :                                                 break; }}

  005f0	e9 e8 01 00 00	 jmp	 $L156951
$L156956:

; 337  :                                 else

  005f5	e9 de 01 00 00	 jmp	 $L156962
$L156952:

; 338  :                                         {_Nodeptr _W = _Left(_Parent(_X));

  005fa	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005fd	52		 push	 edx
  005fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00603	83 c4 04	 add	 esp, 4
  00606	8b 00		 mov	 eax, DWORD PTR [eax]
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  0060e	83 c4 04	 add	 esp, 4
  00611	8b 08		 mov	 ecx, DWORD PTR [eax]
  00613	89 4d dc	 mov	 DWORD PTR __W$156959[ebp], ecx

; 339  :                                         if (_Color(_W) == _Red)

  00616	8b 55 dc	 mov	 edx, DWORD PTR __W$156959[ebp]
  00619	52		 push	 edx
  0061a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  0061f	83 c4 04	 add	 esp, 4
  00622	83 38 00	 cmp	 DWORD PTR [eax], 0
  00625	75 62		 jne	 SHORT $L156960

; 340  :                                                 {_Color(_W) = _Black;

  00627	8b 45 dc	 mov	 eax, DWORD PTR __W$156959[ebp]
  0062a	50		 push	 eax
  0062b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00630	83 c4 04	 add	 esp, 4
  00633	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 341  :                                                 _Color(_Parent(_X)) = _Red;

  00639	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0063c	51		 push	 ecx
  0063d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00642	83 c4 04	 add	 esp, 4
  00645	8b 10		 mov	 edx, DWORD PTR [eax]
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  0064d	83 c4 04	 add	 esp, 4
  00650	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 342  :                                                 _Rrotate(_Parent(_X));

  00656	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00659	50		 push	 eax
  0065a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0065f	83 c4 04	 add	 esp, 4
  00662	8b 08		 mov	 ecx, DWORD PTR [eax]
  00664	51		 push	 ecx
  00665	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rrotate

; 343  :                                                 _W = _Left(_Parent(_X)); }

  0066d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00670	52		 push	 edx
  00671	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00676	83 c4 04	 add	 esp, 4
  00679	8b 00		 mov	 eax, DWORD PTR [eax]
  0067b	50		 push	 eax
  0067c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00681	83 c4 04	 add	 esp, 4
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 4d dc	 mov	 DWORD PTR __W$156959[ebp], ecx
$L156960:

; 345  :                                                 && _Color(_Left(_W)) == _Black)

  00689	8b 55 dc	 mov	 edx, DWORD PTR __W$156959[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00692	83 c4 04	 add	 esp, 4
  00695	8b 00		 mov	 eax, DWORD PTR [eax]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  0069d	83 c4 04	 add	 esp, 4
  006a0	83 38 01	 cmp	 DWORD PTR [eax], 1
  006a3	75 44		 jne	 SHORT $L156961
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR __W$156959[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  006ae	83 c4 04	 add	 esp, 4
  006b1	8b 10		 mov	 edx, DWORD PTR [eax]
  006b3	52		 push	 edx
  006b4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  006b9	83 c4 04	 add	 esp, 4
  006bc	83 38 01	 cmp	 DWORD PTR [eax], 1
  006bf	75 28		 jne	 SHORT $L156961

; 346  :                                                 {_Color(_W) = _Red;

  006c1	8b 45 dc	 mov	 eax, DWORD PTR __W$156959[ebp]
  006c4	50		 push	 eax
  006c5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  006ca	83 c4 04	 add	 esp, 4
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 347  :                                                 _X = _Parent(_X); }

  006d3	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  006d6	51		 push	 ecx
  006d7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  006dc	83 c4 04	 add	 esp, 4
  006df	8b 10		 mov	 edx, DWORD PTR [eax]
  006e1	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 348  :                                         else

  006e4	e9 ef 00 00 00	 jmp	 $L156962
$L156961:

; 349  :                                                 {if (_Color(_Left(_W)) == _Black)

  006e9	8b 45 dc	 mov	 eax, DWORD PTR __W$156959[ebp]
  006ec	50		 push	 eax
  006ed	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  006f2	83 c4 04	 add	 esp, 4
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  006fd	83 c4 04	 add	 esp, 4
  00700	83 38 01	 cmp	 DWORD PTR [eax], 1
  00703	75 57		 jne	 SHORT $L156963

; 350  :                                                         {_Color(_Right(_W)) = _Black;

  00705	8b 55 dc	 mov	 edx, DWORD PTR __W$156959[ebp]
  00708	52		 push	 edx
  00709	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0070e	83 c4 04	 add	 esp, 4
  00711	8b 00		 mov	 eax, DWORD PTR [eax]
  00713	50		 push	 eax
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 351  :                                                         _Color(_W) = _Red;

  00722	8b 4d dc	 mov	 ecx, DWORD PTR __W$156959[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  0072b	83 c4 04	 add	 esp, 4
  0072e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 352  :                                                         _Lrotate(_W);

  00734	8b 55 dc	 mov	 edx, DWORD PTR __W$156959[ebp]
  00737	52		 push	 edx
  00738	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lrotate

; 353  :                                                         _W = _Left(_Parent(_X)); }

  00740	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00749	83 c4 04	 add	 esp, 4
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	51		 push	 ecx
  0074f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00754	83 c4 04	 add	 esp, 4
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	89 55 dc	 mov	 DWORD PTR __W$156959[ebp], edx
$L156963:

; 354  :                                                 _Color(_W) = _Color(_Parent(_X));

  0075c	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00765	83 c4 04	 add	 esp, 4
  00768	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00770	83 c4 04	 add	 esp, 4
  00773	8b f0		 mov	 esi, eax
  00775	8b 55 dc	 mov	 edx, DWORD PTR __W$156959[ebp]
  00778	52		 push	 edx
  00779	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  0077e	83 c4 04	 add	 esp, 4
  00781	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00783	89 08		 mov	 DWORD PTR [eax], ecx

; 355  :                                                 _Color(_Parent(_X)) = _Black;

  00785	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0078e	83 c4 04	 add	 esp, 4
  00791	8b 00		 mov	 eax, DWORD PTR [eax]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00799	83 c4 04	 add	 esp, 4
  0079c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 356  :                                                 _Color(_Left(_W)) = _Black;

  007a2	8b 4d dc	 mov	 ecx, DWORD PTR __W$156959[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  007ab	83 c4 04	 add	 esp, 4
  007ae	8b 10		 mov	 edx, DWORD PTR [eax]
  007b0	52		 push	 edx
  007b1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  007b6	83 c4 04	 add	 esp, 4
  007b9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 357  :                                                 _Rrotate(_Parent(_X));

  007bf	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  007c8	83 c4 04	 add	 esp, 4
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	51		 push	 ecx
  007ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rrotate

; 358  :                                                 break; }}

  007d6	eb 05		 jmp	 SHORT $L156951
$L156962:
  007d8	e9 ed fb ff ff	 jmp	 $L156950
$L156951:

; 359  :                         _Color(_X) = _Black; }

  007dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  007e0	52		 push	 edx
  007e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  007e6	83 c4 04	 add	 esp, 4
  007e9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L156948:

; 360  :                 _Destval(&_Value(_Y));

  007ef	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Value
  007f8	83 c4 04	 add	 esp, 4
  007fb	50		 push	 eax
  007fc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Destval

; 361  :                 _Freenode(_Y);

  00804	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00807	51		 push	 ecx
  00808	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Freenode

; 362  :                 --_Size;

  00810	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00813	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00816	83 e8 01	 sub	 eax, 1
  00819	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 363  :                 return (_P); }

  0081f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00822	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00825	89 02		 mov	 DWORD PTR [edx], eax
  00827	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0082e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00831	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00837	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0083a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0083d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00844	5e		 pop	 esi
  00845	8b e5		 mov	 esp, ebp
  00847	5d		 pop	 ebp
  00848	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161160:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161163:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161162
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::erase
PUBLIC	?_Lbound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lbound
;	COMDAT ?lower_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T161168 = -4
__Kv$ = 12
?lower_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::lower_bound, COMDAT

; 402  :                 {return (iterator(_Lbound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lbound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T161168[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?lower_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::lower_bound
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator>
PUBLIC	?upper_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::upper_bound
;	COMDAT ?equal_range@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@2@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -20
$T161170 = -8
$T161171 = -12
$T161172 = -16
__Kv$ = 12
?equal_range@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@2@ABVCSCI_WorldObject@@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::equal_range, COMDAT

; 410  :                 {return (_Pairii(lower_bound(_Kv), upper_bound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f4	 lea	 ecx, DWORD PTR $T161171[ebp]
  00010	51		 push	 ecx
  00011	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?upper_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::upper_bound
  00019	50		 push	 eax
  0001a	8b 55 0c	 mov	 edx, DWORD PTR __Kv$[ebp]
  0001d	52		 push	 edx
  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T161172[ebp]
  00021	50		 push	 eax
  00022	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::lower_bound
  0002a	50		 push	 eax
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR $T161170[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator>
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	89 08		 mov	 DWORD PTR [eax], ecx
  0003d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00040	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?equal_range@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@2@ABVCSCI_WorldObject@@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::equal_range
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161176 DD	019930520H
	DD	01H
	DD	FLAT:$T161178
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161178 DD	0ffffffffH
	DD	FLAT:$L161174
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__$EHRec$ = -12
__X$ = 8
?_Erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Erase, COMDAT

; 449  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161177
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 450  :                 for (_Nodeptr _Y = _X; _Y != _Nil; _X = _Y)

  0002e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax
  00034	eb 06		 jmp	 SHORT $L156982
$L156983:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00039	89 4d 08	 mov	 DWORD PTR __X$[ebp], ecx
$L156982:
  0003c	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  0003f	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00045	74 4b		 je	 SHORT $L156984

; 451  :                         {_Erase(_Right(_Y));

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Erase

; 452  :                         _Y = _Left(_Y);

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax

; 453  :                         _Destval(&_Value(_X));

  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Value
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Destval

; 454  :                         _Freenode(_X); }}

  00084	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00087	52		 push	 edx
  00088	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Freenode
  00090	eb a4		 jmp	 SHORT $L156983
$L156984:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161174:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161177:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161176
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Erase@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Erase
PUBLIC	?_Buynode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Buynode
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161184 DD	019930520H
	DD	01H
	DD	FLAT:$T161186
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161186 DD	0ffffffffH
	DD	FLAT:$L161182
xdata$x	ENDS
;	COMDAT ?_Init@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -20
__Lk$ = -16
__$EHRec$ = -12
?_Init@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXXZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Init, COMDAT

; 456  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161185
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :                 if (_Nil == 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00035	75 3a		 jne	 SHORT $L156988

; 458  :                         {_Nil = _Buynode(0, _Black);

  00037	6a 01		 push	 1
  00039	6a 00		 push	 0
  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Buynode
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A, eax ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil

; 459  :                         _Left(_Nil) = 0, _Right(_Nil) = 0; }

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00068	83 c4 04	 add	 esp, 4
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L156988:

; 460  :                 ++_Nilrefs;

  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nilrefs@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1IA ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nilrefs
  00077	83 c2 01	 add	 edx, 1
  0007a	89 15 00 00 00
	00		 mov	 DWORD PTR ?_Nilrefs@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1IA, edx ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nilrefs

; 461  :                 _Head = _Buynode(_Nil, _Red), _Size = 0;

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Buynode
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00096	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00099	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 462  :                 _Lmost() = _Head, _Rmost() = _Head; }

  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	89 10		 mov	 DWORD PTR [eax], edx
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost
  000b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	89 10		 mov	 DWORD PTR [eax], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161182:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161185:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161184
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Init@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXXZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Init
;	COMDAT ?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost, COMDAT

; 524  :                 {return (_Left(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost, COMDAT

; 553  :                 {return (_Right(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root, COMDAT

; 557  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode, COMDAT

; 114  :                         {return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBEPAU_Node@23@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::iterator, COMDAT

; 124  :                 iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator++
;	COMDAT ??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator++, COMDAT

; 134  :                         {iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 135  :                         ++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator++

; 136  :                         return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??9iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator!=, COMDAT

; 147  :                         {return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator!=
_TEXT	ENDS
;	COMDAT ?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT
__P$ = 8
?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev, COMDAT

; 39   : 			{return ((_Nodepref)(*_P)._Prev); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Prev@_Acc@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::_Acc::_Prev
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??0const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::const_iterator::const_iterator, COMDAT

; 61   : 		const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QAE@PAU_Node@12@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::const_iterator::const_iterator
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode, COMDAT

; 88   : 			{return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBEPAU_Node@23@XZ ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::const_iterator::_Mynode
_TEXT	ENDS
;	COMDAT ??8iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??8iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator==, COMDAT

; 119  : 			{return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$list@PAVCInventoryDlg@@V?$allocator@PAVCInventoryDlg@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<CInventoryDlg *,std::allocator<CInventoryDlg *> >::iterator::operator==
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@AB_N@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@AB_N@Z ENDP ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,bool>
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@AB_N@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@AB_N@Z ENDP ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,bool>
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??R_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z PROC NEAR ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn::operator(), COMDAT

; 26   : 		{return (_X.first); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??R_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ENDP ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn::operator()
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color, COMDAT

; 36   :                 {return ((_Rbref)(*_P)._Color); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 18	 add	 eax, 24			; 00000018H
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left, COMDAT

; 40   :                 {return ((_Nodepref)(*_P)._Left); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent, COMDAT

; 42   :                 {return ((_Nodepref)(*_P)._Parent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right, COMDAT

; 44   :                 {return ((_Nodepref)(*_P)._Right); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Ubound
;	COMDAT ?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT
__Kv$ = 12
$T161208 = -4
___$ReturnUdt$ = 8
_this$ = -8
?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::upper_bound, COMDAT

; 406  :                 {return (iterator(_Ubound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Ubound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T161208[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@ABU32@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Consval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161214 DD	019930520H
	DD	01H
	DD	FLAT:$T161216
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161216 DD	0ffffffffH
	DD	FLAT:$L161212
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z
_TEXT	SEGMENT
__X$ = 12
__Y$ = 16
__V$ = 20
$T161210 = -24
$T161211 = -28
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -32
__Lk$ = -20
__Z$ = -16
?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Insert, COMDAT

; 464  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161215
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	56		 push	 esi
  0001c	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 465  :                 _Nodeptr _Z = _Buynode(_Y, _Red);

  0002f	6a 00		 push	 0
  00031	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  00034	50		 push	 eax
  00035	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Buynode
  0003d	89 45 f0	 mov	 DWORD PTR __Z$[ebp], eax

; 466  :                 _Left(_Z) = _Nil, _Right(_Z) = _Nil;

  00040	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00052	89 10		 mov	 DWORD PTR [eax], edx
  00054	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00066	89 08		 mov	 DWORD PTR [eax], ecx

; 467  :                 _Consval(&_Value(_Z), _V);

  00068	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Value
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@ABU32@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Consval

; 468  :                 ++_Size;

  00081	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00087	83 c2 01	 add	 edx, 1
  0008a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 470  :                         || key_compare(_Kfn()(_V), _Key(_Y)))

  00090	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00096	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00099	74 39		 je	 SHORT $L157126
  0009b	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0009e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  000a4	75 2e		 jne	 SHORT $L157126
  000a6	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Key
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  000b6	52		 push	 edx
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR $T161210[ebp]
  000ba	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ; std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn::operator()
  000bf	50		 push	 eax
  000c0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 01	 add	 ecx, 1
  000c6	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  000cb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000d0	85 c0		 test	 eax, eax
  000d2	74 56		 je	 SHORT $L157125
$L157126:

; 471  :                         {_Left(_Y) = _Z;

  000d4	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000e3	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :                         if (_Y == _Head)

  000e5	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000eb	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000ee	75 1c		 jne	 SHORT $L157127

; 473  :                                 {_Root() = _Z;

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx

; 474  :                                 _Rmost() = _Z; }

  000fd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost
  00105	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00108	89 10		 mov	 DWORD PTR [eax], edx

; 475  :                         else if (_Y == _Lmost())

  0010a	eb 1c		 jmp	 SHORT $L157129
$L157127:
  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost
  00114	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00117	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00119	75 0d		 jne	 SHORT $L157129

; 476  :                                 _Lmost() = _Z; }

  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lmost
  00123	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00126	89 10		 mov	 DWORD PTR [eax], edx
$L157129:

; 477  :                 else

  00128	eb 2d		 jmp	 SHORT $L157131
$L157125:

; 478  :                         {_Right(_Y) = _Z;

  0012a	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00139	89 08		 mov	 DWORD PTR [eax], ecx

; 479  :                         if (_Y == _Rmost())

  0013b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost
  00143	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00146	3b 10		 cmp	 edx, DWORD PTR [eax]
  00148	75 0d		 jne	 SHORT $L157131

; 480  :                                 _Rmost() = _Z; }

  0014a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rmost
  00152	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00155	89 08		 mov	 DWORD PTR [eax], ecx
$L157131:

; 481  :                 for (_X = _Z; _X != _Root()

  00157	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  0015a	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx
$L157133:

; 482  :                         && _Color(_Parent(_X)) == _Red; )

  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00168	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016a	0f 84 08 03 00
	00		 je	 $L157134
  00170	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00179	83 c4 04	 add	 esp, 4
  0017c	8b 00		 mov	 eax, DWORD PTR [eax]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00184	83 c4 04	 add	 esp, 4
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	0f 85 e8 02 00
	00		 jne	 $L157134

; 483  :                         if (_Parent(_X) == _Left(_Parent(_Parent(_X))))

  00190	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00199	83 c4 04	 add	 esp, 4
  0019c	8b f0		 mov	 esi, eax
  0019e	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  001a7	83 c4 04	 add	 esp, 4
  001aa	8b 00		 mov	 eax, DWORD PTR [eax]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  001b2	83 c4 04	 add	 esp, 4
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  001bd	83 c4 04	 add	 esp, 4
  001c0	8b 16		 mov	 edx, DWORD PTR [esi]
  001c2	3b 10		 cmp	 edx, DWORD PTR [eax]
  001c4	0f 85 57 01 00
	00		 jne	 $L157135

; 484  :                                 {_Y = _Right(_Parent(_Parent(_X)));

  001ca	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  001d3	83 c4 04	 add	 esp, 4
  001d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  001de	83 c4 04	 add	 esp, 4
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  001e9	83 c4 04	 add	 esp, 4
  001ec	8b 00		 mov	 eax, DWORD PTR [eax]
  001ee	89 45 10	 mov	 DWORD PTR __Y$[ebp], eax

; 485  :                                 if (_Color(_Y) == _Red)

  001f1	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  001fa	83 c4 04	 add	 esp, 4
  001fd	83 38 00	 cmp	 DWORD PTR [eax], 0
  00200	75 78		 jne	 SHORT $L157136

; 486  :                                         {_Color(_Parent(_X)) = _Black;

  00202	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0020b	83 c4 04	 add	 esp, 4
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00216	83 c4 04	 add	 esp, 4
  00219	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 487  :                                         _Color(_Y) = _Black;

  0021f	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00228	83 c4 04	 add	 esp, 4
  0022b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 488  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00231	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0023a	83 c4 04	 add	 esp, 4
  0023d	8b 00		 mov	 eax, DWORD PTR [eax]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00245	83 c4 04	 add	 esp, 4
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00250	83 c4 04	 add	 esp, 4
  00253	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 489  :                                         _X = _Parent(_Parent(_X)); }

  00259	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00262	83 c4 04	 add	 esp, 4
  00265	8b 00		 mov	 eax, DWORD PTR [eax]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0026d	83 c4 04	 add	 esp, 4
  00270	8b 08		 mov	 ecx, DWORD PTR [eax]
  00272	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 490  :                                 else

  00275	e9 a2 00 00 00	 jmp	 $L157137
$L157136:

; 491  :                                         {if (_X == _Right(_Parent(_X)))

  0027a	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 00		 mov	 eax, DWORD PTR [eax]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0028e	83 c4 04	 add	 esp, 4
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00294	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00296	75 1d		 jne	 SHORT $L157138

; 492  :                                                 {_X = _Parent(_X);

  00298	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0029b	52		 push	 edx
  0029c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 00		 mov	 eax, DWORD PTR [eax]
  002a6	89 45 0c	 mov	 DWORD PTR __X$[ebp], eax

; 493  :                                                 _Lrotate(_X); }

  002a9	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002ac	51		 push	 ecx
  002ad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lrotate
$L157138:

; 494  :                                         _Color(_Parent(_X)) = _Black;

  002b5	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  002be	83 c4 04	 add	 esp, 4
  002c1	8b 00		 mov	 eax, DWORD PTR [eax]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  002c9	83 c4 04	 add	 esp, 4
  002cc	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 495  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  002d2	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  002db	83 c4 04	 add	 esp, 4
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  002e6	83 c4 04	 add	 esp, 4
  002e9	8b 00		 mov	 eax, DWORD PTR [eax]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  002f1	83 c4 04	 add	 esp, 4
  002f4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 496  :                                         _Rrotate(_Parent(_Parent(_X))); }}

  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00303	83 c4 04	 add	 esp, 4
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0030e	83 c4 04	 add	 esp, 4
  00311	8b 00		 mov	 eax, DWORD PTR [eax]
  00313	50		 push	 eax
  00314	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rrotate
$L157137:

; 497  :                         else

  0031c	e9 52 01 00 00	 jmp	 $L157141
$L157135:

; 498  :                                 {_Y = _Left(_Parent(_Parent(_X)));

  00321	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0032a	83 c4 04	 add	 esp, 4
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00340	83 c4 04	 add	 esp, 4
  00343	8b 08		 mov	 ecx, DWORD PTR [eax]
  00345	89 4d 10	 mov	 DWORD PTR __Y$[ebp], ecx

; 499  :                                 if (_Color(_Y) == _Red)

  00348	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  0034b	52		 push	 edx
  0034c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00351	83 c4 04	 add	 esp, 4
  00354	83 38 00	 cmp	 DWORD PTR [eax], 0
  00357	75 78		 jne	 SHORT $L157140

; 500  :                                         {_Color(_Parent(_X)) = _Black;

  00359	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00362	83 c4 04	 add	 esp, 4
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  0036d	83 c4 04	 add	 esp, 4
  00370	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 501  :                                         _Color(_Y) = _Black;

  00376	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00379	52		 push	 edx
  0037a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  0037f	83 c4 04	 add	 esp, 4
  00382	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 502  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00388	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00391	83 c4 04	 add	 esp, 4
  00394	8b 08		 mov	 ecx, DWORD PTR [eax]
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0039c	83 c4 04	 add	 esp, 4
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  003a7	83 c4 04	 add	 esp, 4
  003aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 503  :                                         _X = _Parent(_Parent(_X)); }

  003b0	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	51		 push	 ecx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 10		 mov	 edx, DWORD PTR [eax]
  003c9	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx

; 504  :                                 else

  003cc	e9 a2 00 00 00	 jmp	 $L157141
$L157140:

; 505  :                                         {if (_X == _Left(_Parent(_X)))

  003d1	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  003da	83 c4 04	 add	 esp, 4
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	51		 push	 ecx
  003e0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  003e5	83 c4 04	 add	 esp, 4
  003e8	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  003eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ed	75 1d		 jne	 SHORT $L157142

; 506  :                                                 {_X = _Parent(_X);

  003ef	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  003f8	83 c4 04	 add	 esp, 4
  003fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fd	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 507  :                                                 _Rrotate(_X); }

  00400	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00403	52		 push	 edx
  00404	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00407	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rrotate
$L157142:

; 508  :                                         _Color(_Parent(_X)) = _Black;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00415	83 c4 04	 add	 esp, 4
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00420	83 c4 04	 add	 esp, 4
  00423	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 509  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00429	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00432	83 c4 04	 add	 esp, 4
  00435	8b 00		 mov	 eax, DWORD PTR [eax]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0043d	83 c4 04	 add	 esp, 4
  00440	8b 08		 mov	 ecx, DWORD PTR [eax]
  00442	51		 push	 ecx
  00443	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00448	83 c4 04	 add	 esp, 4
  0044b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 510  :                                         _Lrotate(_Parent(_Parent(_X))); }}

  00451	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0045a	83 c4 04	 add	 esp, 4
  0045d	8b 00		 mov	 eax, DWORD PTR [eax]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00465	83 c4 04	 add	 esp, 4
  00468	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046a	51		 push	 ecx
  0046b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lrotate
$L157141:
  00473	e9 e5 fc ff ff	 jmp	 $L157133
$L157134:

; 511  :                 _Color(_Root()) = _Black;

  00478	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  00480	8b 10		 mov	 edx, DWORD PTR [eax]
  00482	52		 push	 edx
  00483	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00488	83 c4 04	 add	 esp, 4
  0048b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 512  :                 return (iterator(_Z)); }

  00491	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e4	 lea	 ecx, DWORD PTR $T161211[ebp]
  00498	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::iterator
  0049d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  004a2	89 0a		 mov	 DWORD PTR [edx], ecx
  004a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ab	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  004b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	5e		 pop	 esi
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161212:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161215:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161214
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Insert
PUBLIC	?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161223 DD	019930520H
	DD	01H
	DD	FLAT:$T161225
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161225 DD	0ffffffffH
	DD	FLAT:$L161221
xdata$x	ENDS
;	COMDAT ?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT
__Kv$ = 8
$T161220 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lbound, COMDAT

; 514  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161224
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 515  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 516  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L157150:

; 517  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  0004d	74 51		 je	 SHORT $L157151

; 518  :                         if (key_compare(_Key(_X), _Kv))

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Key
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 13		 je	 SHORT $L157152

; 519  :                                 _X = _Right(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx

; 520  :                         else

  00085	eb 17		 jmp	 SHORT $L157153
$L157152:

; 521  :                                 _Y = _X, _X = _Left(_X);

  00087	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0008a	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L157153:
  0009e	eb a4		 jmp	 SHORT $L157150
$L157151:

; 522  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T161220[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T161220[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161221:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161224:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161223
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lbound
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161231 DD	019930520H
	DD	01H
	DD	FLAT:$T161233
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161233 DD	0ffffffffH
	DD	FLAT:$L161229
xdata$x	ENDS
;	COMDAT ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lrotate, COMDAT

; 528  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161232
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 529  :                 _Nodeptr _Y = _Right(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 530  :                 _Right(_X) = _Left(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 531  :                 if (_Left(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00072	74 1c		 je	 SHORT $L157159

; 532  :                         _Parent(_Left(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L157159:

; 533  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 534  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L157160

; 535  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 536  :                 else if (_X == _Left(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L157163
$L157160:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L157162

; 537  :                         _Left(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 538  :                 else

  00106	eb 1c		 jmp	 SHORT $L157163
$L157162:

; 539  :                         _Right(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L157163:

; 540  :                 _Left(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161229:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161232:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161231
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Lrotate
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161240 DD	019930520H
	DD	01H
	DD	FLAT:$T161242
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161242 DD	0ffffffffH
	DD	FLAT:$L161238
xdata$x	ENDS
;	COMDAT ?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
$T161237 = -20
__$EHRec$ = -12
__Lk$ = -16
?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Max, COMDAT

; 543  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161241
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L157167:

; 544  :                 while (_Right(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  0003f	74 13		 je	 SHORT $L157168

; 545  :                         _P = _Right(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L157167
$L157168:

; 546  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T161237[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T161237[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161238:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161241:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161240
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Max
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161249 DD	019930520H
	DD	01H
	DD	FLAT:$T161251
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161251 DD	0ffffffffH
	DD	FLAT:$L161247
xdata$x	ENDS
;	COMDAT ?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
$T161246 = -20
__$EHRec$ = -12
__Lk$ = -16
?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Min, COMDAT

; 548  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161250
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L157173:

; 549  :                 while (_Left(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  0003f	74 13		 je	 SHORT $L157174

; 550  :                         _P = _Left(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L157173
$L157174:

; 551  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T161246[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T161246[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161247:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161250:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161249
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Min
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161257 DD	019930520H
	DD	01H
	DD	FLAT:$T161259
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161259 DD	0ffffffffH
	DD	FLAT:$L161255
xdata$x	ENDS
;	COMDAT ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rrotate, COMDAT

; 561  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161258
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :                 _Nodeptr _Y = _Left(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 563  :                 _Left(_X) = _Right(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 564  :                 if (_Right(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00072	74 1c		 je	 SHORT $L157180

; 565  :                         _Parent(_Right(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L157180:

; 566  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 567  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L157181

; 568  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 569  :                 else if (_X == _Right(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L157184
$L157181:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L157183

; 570  :                         _Right(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 571  :                 else

  00106	eb 1c		 jmp	 SHORT $L157184
$L157183:

; 572  :                         _Left(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L157184:

; 573  :                 _Right(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 574  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161255:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161258:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161257
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Rrotate
PUBLIC	?_Charalloc@?$allocator@PAVCFastScrollCtrl@@@std@@QAEPADI@Z ; std::allocator<CFastScrollCtrl *>::_Charalloc
;	COMDAT ?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT
__Parg$ = 8
__Carg$ = 12
_this$ = -8
__S$ = -4
?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Buynode, COMDAT

; 586  :                 {_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  :                         1 * sizeof (_Node));

  00009	6a 1c		 push	 28			; 0000001cH
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCFastScrollCtrl@@@std@@QAEPADI@Z ; std::allocator<CFastScrollCtrl *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 588  :                 _Parent(_S) = _Parg;

  00016	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 589  :                 _Color(_S) = _Carg;

  00027	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00030	83 c4 04	 add	 esp, 4
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Carg$[ebp]
  00036	89 08		 mov	 DWORD PTR [eax], ecx

; 590  :                 return (_S); }

  00038	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@@Z ; std::_Destroy
;	COMDAT ?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Destval, COMDAT

; 594  :                 {_Destroy(&*_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Destval
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::const_iterator, COMDAT

; 65   :                 const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Inc
;	COMDAT ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator++, COMDAT

; 131  :                         {_Inc();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Inc

; 132  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Dec
;	COMDAT ??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator--, COMDAT

; 138  :                         {_Dec();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Dec

; 139  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator--
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QBEABVCSCI_WorldObject@@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??R_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QBEABVCSCI_WorldObject@@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z PROC NEAR ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn::operator(), COMDAT

; 26   : 		{return (_X.first); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??R_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QBEABVCSCI_WorldObject@@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ENDP ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn::operator()
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color, COMDAT

; 36   :                 {return ((_Rbref)(*_P)._Color); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 14	 add	 eax, 20			; 00000014H
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left, COMDAT

; 40   :                 {return ((_Nodepref)(*_P)._Left); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent, COMDAT

; 42   :                 {return ((_Nodepref)(*_P)._Parent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right, COMDAT

; 44   :                 {return ((_Nodepref)(*_P)._Right); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Ubound
;	COMDAT ?upper_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT
$T161273 = -4
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
?upper_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::upper_bound, COMDAT

; 406  :                 {return (iterator(_Ubound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Ubound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Ubound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T161273[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?upper_bound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE?AViterator@12@ABVCSCI_WorldObject@@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Consval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@ABU32@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Consval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161279 DD	019930520H
	DD	01H
	DD	FLAT:$T161281
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161281 DD	0ffffffffH
	DD	FLAT:$L161277
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z
_TEXT	SEGMENT
$T161275 = -24
$T161276 = -28
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -32
__Lk$ = -20
__Z$ = -16
__X$ = 12
__Y$ = 16
__V$ = 20
?_Insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Insert, COMDAT

; 464  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161280
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	56		 push	 esi
  0001c	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 465  :                 _Nodeptr _Z = _Buynode(_Y, _Red);

  0002f	6a 00		 push	 0
  00031	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  00034	50		 push	 eax
  00035	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Buynode
  0003d	89 45 f0	 mov	 DWORD PTR __Z$[ebp], eax

; 466  :                 _Left(_Z) = _Nil, _Right(_Z) = _Nil;

  00040	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00052	89 10		 mov	 DWORD PTR [eax], edx
  00054	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00066	89 08		 mov	 DWORD PTR [eax], ecx

; 467  :                 _Consval(&_Value(_Z), _V);

  00068	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Value
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Consval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@ABU32@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Consval

; 468  :                 ++_Size;

  00081	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00087	83 c2 01	 add	 edx, 1
  0008a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 470  :                         || key_compare(_Kfn()(_V), _Key(_Y)))

  00090	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00096	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00099	74 39		 je	 SHORT $L157223
  0009b	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0009e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  000a4	75 2e		 jne	 SHORT $L157223
  000a6	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Key
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  000b6	52		 push	 edx
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR $T161275[ebp]
  000ba	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@std@@QBEABVCSCI_WorldObject@@ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ; std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn::operator()
  000bf	50		 push	 eax
  000c0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 01	 add	 ecx, 1
  000c6	e8 00 00 00 00	 call	 ??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z ; std::less<CSCI_WorldObject>::operator()
  000cb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000d0	85 c0		 test	 eax, eax
  000d2	74 56		 je	 SHORT $L157222
$L157223:

; 471  :                         {_Left(_Y) = _Z;

  000d4	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000e3	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :                         if (_Y == _Head)

  000e5	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000eb	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000ee	75 1c		 jne	 SHORT $L157224

; 473  :                                 {_Root() = _Z;

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx

; 474  :                                 _Rmost() = _Z; }

  000fd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost
  00105	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00108	89 10		 mov	 DWORD PTR [eax], edx

; 475  :                         else if (_Y == _Lmost())

  0010a	eb 1c		 jmp	 SHORT $L157226
$L157224:
  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost
  00114	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00117	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00119	75 0d		 jne	 SHORT $L157226

; 476  :                                 _Lmost() = _Z; }

  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lmost
  00123	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00126	89 10		 mov	 DWORD PTR [eax], edx
$L157226:

; 477  :                 else

  00128	eb 2d		 jmp	 SHORT $L157228
$L157222:

; 478  :                         {_Right(_Y) = _Z;

  0012a	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00139	89 08		 mov	 DWORD PTR [eax], ecx

; 479  :                         if (_Y == _Rmost())

  0013b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost
  00143	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00146	3b 10		 cmp	 edx, DWORD PTR [eax]
  00148	75 0d		 jne	 SHORT $L157228

; 480  :                                 _Rmost() = _Z; }

  0014a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rmost
  00152	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00155	89 08		 mov	 DWORD PTR [eax], ecx
$L157228:

; 481  :                 for (_X = _Z; _X != _Root()

  00157	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  0015a	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx
$L157230:

; 482  :                         && _Color(_Parent(_X)) == _Red; )

  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00168	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016a	0f 84 08 03 00
	00		 je	 $L157231
  00170	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00179	83 c4 04	 add	 esp, 4
  0017c	8b 00		 mov	 eax, DWORD PTR [eax]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00184	83 c4 04	 add	 esp, 4
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	0f 85 e8 02 00
	00		 jne	 $L157231

; 483  :                         if (_Parent(_X) == _Left(_Parent(_Parent(_X))))

  00190	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00199	83 c4 04	 add	 esp, 4
  0019c	8b f0		 mov	 esi, eax
  0019e	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  001a7	83 c4 04	 add	 esp, 4
  001aa	8b 00		 mov	 eax, DWORD PTR [eax]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  001b2	83 c4 04	 add	 esp, 4
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  001bd	83 c4 04	 add	 esp, 4
  001c0	8b 16		 mov	 edx, DWORD PTR [esi]
  001c2	3b 10		 cmp	 edx, DWORD PTR [eax]
  001c4	0f 85 57 01 00
	00		 jne	 $L157232

; 484  :                                 {_Y = _Right(_Parent(_Parent(_X)));

  001ca	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  001d3	83 c4 04	 add	 esp, 4
  001d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  001de	83 c4 04	 add	 esp, 4
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  001e9	83 c4 04	 add	 esp, 4
  001ec	8b 00		 mov	 eax, DWORD PTR [eax]
  001ee	89 45 10	 mov	 DWORD PTR __Y$[ebp], eax

; 485  :                                 if (_Color(_Y) == _Red)

  001f1	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  001fa	83 c4 04	 add	 esp, 4
  001fd	83 38 00	 cmp	 DWORD PTR [eax], 0
  00200	75 78		 jne	 SHORT $L157233

; 486  :                                         {_Color(_Parent(_X)) = _Black;

  00202	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0020b	83 c4 04	 add	 esp, 4
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00216	83 c4 04	 add	 esp, 4
  00219	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 487  :                                         _Color(_Y) = _Black;

  0021f	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00228	83 c4 04	 add	 esp, 4
  0022b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 488  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00231	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0023a	83 c4 04	 add	 esp, 4
  0023d	8b 00		 mov	 eax, DWORD PTR [eax]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00245	83 c4 04	 add	 esp, 4
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00250	83 c4 04	 add	 esp, 4
  00253	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 489  :                                         _X = _Parent(_Parent(_X)); }

  00259	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00262	83 c4 04	 add	 esp, 4
  00265	8b 00		 mov	 eax, DWORD PTR [eax]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0026d	83 c4 04	 add	 esp, 4
  00270	8b 08		 mov	 ecx, DWORD PTR [eax]
  00272	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 490  :                                 else

  00275	e9 a2 00 00 00	 jmp	 $L157234
$L157233:

; 491  :                                         {if (_X == _Right(_Parent(_X)))

  0027a	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 00		 mov	 eax, DWORD PTR [eax]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0028e	83 c4 04	 add	 esp, 4
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00294	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00296	75 1d		 jne	 SHORT $L157235

; 492  :                                                 {_X = _Parent(_X);

  00298	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0029b	52		 push	 edx
  0029c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 00		 mov	 eax, DWORD PTR [eax]
  002a6	89 45 0c	 mov	 DWORD PTR __X$[ebp], eax

; 493  :                                                 _Lrotate(_X); }

  002a9	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002ac	51		 push	 ecx
  002ad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lrotate
$L157235:

; 494  :                                         _Color(_Parent(_X)) = _Black;

  002b5	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  002be	83 c4 04	 add	 esp, 4
  002c1	8b 00		 mov	 eax, DWORD PTR [eax]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  002c9	83 c4 04	 add	 esp, 4
  002cc	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 495  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  002d2	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  002db	83 c4 04	 add	 esp, 4
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  002e6	83 c4 04	 add	 esp, 4
  002e9	8b 00		 mov	 eax, DWORD PTR [eax]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  002f1	83 c4 04	 add	 esp, 4
  002f4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 496  :                                         _Rrotate(_Parent(_Parent(_X))); }}

  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00303	83 c4 04	 add	 esp, 4
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0030e	83 c4 04	 add	 esp, 4
  00311	8b 00		 mov	 eax, DWORD PTR [eax]
  00313	50		 push	 eax
  00314	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rrotate
$L157234:

; 497  :                         else

  0031c	e9 52 01 00 00	 jmp	 $L157238
$L157232:

; 498  :                                 {_Y = _Left(_Parent(_Parent(_X)));

  00321	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0032a	83 c4 04	 add	 esp, 4
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00340	83 c4 04	 add	 esp, 4
  00343	8b 08		 mov	 ecx, DWORD PTR [eax]
  00345	89 4d 10	 mov	 DWORD PTR __Y$[ebp], ecx

; 499  :                                 if (_Color(_Y) == _Red)

  00348	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  0034b	52		 push	 edx
  0034c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00351	83 c4 04	 add	 esp, 4
  00354	83 38 00	 cmp	 DWORD PTR [eax], 0
  00357	75 78		 jne	 SHORT $L157237

; 500  :                                         {_Color(_Parent(_X)) = _Black;

  00359	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00362	83 c4 04	 add	 esp, 4
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  0036d	83 c4 04	 add	 esp, 4
  00370	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 501  :                                         _Color(_Y) = _Black;

  00376	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00379	52		 push	 edx
  0037a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  0037f	83 c4 04	 add	 esp, 4
  00382	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 502  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00388	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00391	83 c4 04	 add	 esp, 4
  00394	8b 08		 mov	 ecx, DWORD PTR [eax]
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0039c	83 c4 04	 add	 esp, 4
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  003a7	83 c4 04	 add	 esp, 4
  003aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 503  :                                         _X = _Parent(_Parent(_X)); }

  003b0	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	51		 push	 ecx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 10		 mov	 edx, DWORD PTR [eax]
  003c9	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx

; 504  :                                 else

  003cc	e9 a2 00 00 00	 jmp	 $L157238
$L157237:

; 505  :                                         {if (_X == _Left(_Parent(_X)))

  003d1	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  003da	83 c4 04	 add	 esp, 4
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	51		 push	 ecx
  003e0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  003e5	83 c4 04	 add	 esp, 4
  003e8	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  003eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ed	75 1d		 jne	 SHORT $L157239

; 506  :                                                 {_X = _Parent(_X);

  003ef	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  003f8	83 c4 04	 add	 esp, 4
  003fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fd	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 507  :                                                 _Rrotate(_X); }

  00400	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00403	52		 push	 edx
  00404	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00407	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rrotate
$L157239:

; 508  :                                         _Color(_Parent(_X)) = _Black;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00415	83 c4 04	 add	 esp, 4
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00420	83 c4 04	 add	 esp, 4
  00423	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 509  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00429	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00432	83 c4 04	 add	 esp, 4
  00435	8b 00		 mov	 eax, DWORD PTR [eax]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0043d	83 c4 04	 add	 esp, 4
  00440	8b 08		 mov	 ecx, DWORD PTR [eax]
  00442	51		 push	 ecx
  00443	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00448	83 c4 04	 add	 esp, 4
  0044b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 510  :                                         _Lrotate(_Parent(_Parent(_X))); }}

  00451	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0045a	83 c4 04	 add	 esp, 4
  0045d	8b 00		 mov	 eax, DWORD PTR [eax]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00465	83 c4 04	 add	 esp, 4
  00468	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046a	51		 push	 ecx
  0046b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lrotate
$L157238:
  00473	e9 e5 fc ff ff	 jmp	 $L157230
$L157231:

; 511  :                 _Color(_Root()) = _Black;

  00478	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  00480	8b 10		 mov	 edx, DWORD PTR [eax]
  00482	52		 push	 edx
  00483	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00488	83 c4 04	 add	 esp, 4
  0048b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 512  :                 return (iterator(_Z)); }

  00491	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e4	 lea	 ecx, DWORD PTR $T161276[ebp]
  00498	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::iterator
  0049d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  004a2	89 0a		 mov	 DWORD PTR [edx], ecx
  004a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ab	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  004b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	5e		 pop	 esi
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161277:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161280:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161279
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Insert
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161291 DD	019930520H
	DD	01H
	DD	FLAT:$T161293
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161293 DD	0ffffffffH
	DD	FLAT:$L161289
xdata$x	ENDS
;	COMDAT ?_Lbound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT
$T161288 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
__Kv$ = 8
?_Lbound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lbound, COMDAT

; 514  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161292
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 515  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 516  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L157247:

; 517  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  0004d	74 51		 je	 SHORT $L157248

; 518  :                         if (key_compare(_Key(_X), _Kv))

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Key
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z ; std::less<CSCI_WorldObject>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 13		 je	 SHORT $L157249

; 519  :                                 _X = _Right(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx

; 520  :                         else

  00085	eb 17		 jmp	 SHORT $L157250
$L157249:

; 521  :                                 _Y = _X, _X = _Left(_X);

  00087	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0008a	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L157250:
  0009e	eb a4		 jmp	 SHORT $L157247
$L157248:

; 522  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T161288[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T161288[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161289:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161292:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161291
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lbound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lbound
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161299 DD	019930520H
	DD	01H
	DD	FLAT:$T161301
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161301 DD	0ffffffffH
	DD	FLAT:$L161297
xdata$x	ENDS
;	COMDAT ?_Lrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
?_Lrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lrotate, COMDAT

; 528  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161300
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 529  :                 _Nodeptr _Y = _Right(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 530  :                 _Right(_X) = _Left(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 531  :                 if (_Left(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00072	74 1c		 je	 SHORT $L157256

; 532  :                         _Parent(_Left(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L157256:

; 533  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 534  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L157257

; 535  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 536  :                 else if (_X == _Left(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L157260
$L157257:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L157259

; 537  :                         _Left(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 538  :                 else

  00106	eb 1c		 jmp	 SHORT $L157260
$L157259:

; 539  :                         _Right(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L157260:

; 540  :                 _Left(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161297:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161300:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161299
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Lrotate
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161308 DD	019930520H
	DD	01H
	DD	FLAT:$T161310
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161310 DD	0ffffffffH
	DD	FLAT:$L161306
xdata$x	ENDS
;	COMDAT ?_Max@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
$T161305 = -20
__$EHRec$ = -12
__Lk$ = -16
__P$ = 8
?_Max@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Max, COMDAT

; 543  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161309
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L157264:

; 544  :                 while (_Right(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  0003f	74 13		 je	 SHORT $L157265

; 545  :                         _P = _Right(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L157264
$L157265:

; 546  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T161305[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T161305[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161306:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161309:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161308
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Max@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Max
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161317 DD	019930520H
	DD	01H
	DD	FLAT:$T161319
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161319 DD	0ffffffffH
	DD	FLAT:$L161315
xdata$x	ENDS
;	COMDAT ?_Min@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
$T161314 = -20
__$EHRec$ = -12
__Lk$ = -16
__P$ = 8
?_Min@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Min, COMDAT

; 548  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161318
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L157270:

; 549  :                 while (_Left(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  0003f	74 13		 je	 SHORT $L157271

; 550  :                         _P = _Left(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L157270
$L157271:

; 551  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T161314[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T161314[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161315:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161318:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161317
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Min@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Min
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161325 DD	019930520H
	DD	01H
	DD	FLAT:$T161327
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161327 DD	0ffffffffH
	DD	FLAT:$L161323
xdata$x	ENDS
;	COMDAT ?_Rrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
?_Rrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rrotate, COMDAT

; 561  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161326
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :                 _Nodeptr _Y = _Left(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 563  :                 _Left(_X) = _Right(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 564  :                 if (_Right(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00072	74 1c		 je	 SHORT $L157277

; 565  :                         _Parent(_Right(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L157277:

; 566  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 567  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L157278

; 568  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 569  :                 else if (_X == _Right(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L157281
$L157278:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L157280

; 570  :                         _Right(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 571  :                 else

  00106	eb 1c		 jmp	 SHORT $L157281
$L157280:

; 572  :                         _Left(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L157281:

; 573  :                 _Right(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 574  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161323:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161326:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161325
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Rrotate@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Rrotate
;	COMDAT ?_Buynode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT
_this$ = -8
__S$ = -4
__Parg$ = 8
__Carg$ = 12
?_Buynode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Buynode, COMDAT

; 586  :                 {_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  :                         1 * sizeof (_Node));

  00009	6a 18		 push	 24			; 00000018H
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCInventoryDlg@@@std@@QAEPADI@Z ; std::allocator<CInventoryDlg *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 588  :                 _Parent(_S) = _Parg;

  00016	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 589  :                 _Color(_S) = _Carg;

  00027	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00030	83 c4 04	 add	 esp, 4
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Carg$[ebp]
  00036	89 08		 mov	 DWORD PTR [eax], ecx

; 590  :                 return (_S); }

  00038	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?_Buynode@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@@Z ; std::_Destroy
;	COMDAT ?_Destval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?_Destval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Destval, COMDAT

; 594  :                 {_Destroy(&*_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Destval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Destval
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::const_iterator, COMDAT

; 65   :                 const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Inc
;	COMDAT ??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator++, COMDAT

; 131  :                         {_Inc();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Inc

; 132  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Dec
;	COMDAT ??Fiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator--, COMDAT

; 138  :                         {_Dec();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Dec

; 139  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator--
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z PROC NEAR ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 0c	 mov	 eax, DWORD PTR __V2$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z ENDP ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator>
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z PROC NEAR ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 0c	 mov	 eax, DWORD PTR __V2$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z ENDP ; std::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator>::pair<std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator,std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator>
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@PAVCFastScrollCtrl@@@std@@QAEPADI@Z
_TEXT	SEGMENT
__N$ = 8
_this$ = -4
?_Charalloc@?$allocator@PAVCFastScrollCtrl@@@std@@QAEPADI@Z PROC NEAR ; std::allocator<CFastScrollCtrl *>::_Charalloc, COMDAT

; 61   : 		{return (_Allocate((difference_type)_N,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 			(char _FARQ *)0)); }

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPADHPAD@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Charalloc@?$allocator@PAVCFastScrollCtrl@@@std@@QAEPADI@Z ENDP ; std::allocator<CFastScrollCtrl *>::_Charalloc
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root, COMDAT

; 559  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161343 DD	019930520H
	DD	01H
	DD	FLAT:$T161345
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161345 DD	0ffffffffH
	DD	FLAT:$L161341
xdata$x	ENDS
;	COMDAT ?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT
__Kv$ = 8
$T161340 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Ubound, COMDAT

; 576  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161344
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 577  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 578  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L157355:

; 579  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  0004d	74 51		 je	 SHORT $L157356

; 580  :                         if (key_compare(_Kv, _Key(_X)))

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Key
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 55 08	 mov	 edx, DWORD PTR __Kv$[ebp]
  0005f	52		 push	 edx
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 19		 je	 SHORT $L157357

; 581  :                                 _Y = _X, _X = _Left(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00083	83 c4 04	 add	 esp, 4
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 582  :                         else

  0008b	eb 11		 jmp	 SHORT $L157358
$L157357:

; 583  :                                 _X = _Right(_X);

  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L157358:
  0009e	eb a4		 jmp	 SHORT $L157355
$L157356:

; 584  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T161340[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T161340[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161341:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161344:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161343
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Ubound
PUBLIC	?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@ABU21@@Z ; std::_Construct
;	COMDAT ?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@ABU32@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
_this$ = -4
?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@ABU32@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Consval, COMDAT

; 592  :                 {_Construct(&*_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@ABU21@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@ABU32@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Consval
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161352 DD	019930520H
	DD	01H
	DD	FLAT:$T161354
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161354 DD	0ffffffffH
	DD	FLAT:$L161350
xdata$x	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$157375 = -20
?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Dec, COMDAT

; 92   :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161353
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :                                 && _Parent(_Parent(_Ptr)) == _Ptr)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Color
  00039	83 c4 04	 add	 esp, 4
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 39		 jne	 SHORT $L157371
  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 02		 mov	 eax, DWORD PTR [edx]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 00		 mov	 eax, DWORD PTR [eax]
  0005f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00061	75 17		 jne	 SHORT $L157371

; 95   :                                 _Ptr = _Right(_Ptr);

  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 11		 mov	 DWORD PTR [ecx], edx

; 96   :                         else if (_Left(_Ptr) != _Nil)

  00078	eb 72		 jmp	 SHORT $L157374
$L157371:
  0007a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  00085	83 c4 04	 add	 esp, 4
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00090	74 20		 je	 SHORT $L157373

; 97   :                                 _Ptr = _Max(_Left(_Ptr));

  00092	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Max
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :                         else

  000b0	eb 3a		 jmp	 SHORT $L157374
$L157373:

; 100  :                                 while (_Ptr == _Left(_P = _Parent(_Ptr)))

  000b2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ec	 mov	 DWORD PTR __P$157375[ebp], ecx
  000c5	8b 55 ec	 mov	 edx, DWORD PTR __P$157375[ebp]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Left
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d8	75 0a		 jne	 SHORT $L157378

; 101  :                                         _Ptr = _P;

  000da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __P$157375[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx
  000e2	eb ce		 jmp	 SHORT $L157373
$L157378:

; 102  :                                 _Ptr = _P; }}

  000e4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 45 ec	 mov	 eax, DWORD PTR __P$157375[ebp]
  000ea	89 02		 mov	 DWORD PTR [edx], eax
$L157374:
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161350:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161353:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161352
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Dec
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161360 DD	019930520H
	DD	01H
	DD	FLAT:$T161362
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161362 DD	0ffffffffH
	DD	FLAT:$L161358
xdata$x	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$157384 = -20
?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Inc, COMDAT

; 104  :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161361
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  :                         if (_Right(_Ptr) != _Nil)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Nil
  00044	74 20		 je	 SHORT $L157382

; 106  :                                 _Ptr = _Min(_Right(_Ptr));

  00046	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 107  :                         else

  00064	eb 4f		 jmp	 SHORT $L157388
$L157382:

; 109  :                                 while (_Ptr == _Right(_P = _Parent(_Ptr)))

  00066	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d ec	 mov	 DWORD PTR __P$157384[ebp], ecx
  00079	8b 55 ec	 mov	 edx, DWORD PTR __P$157384[ebp]
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  00082	83 c4 04	 add	 esp, 4
  00085	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0008c	75 0a		 jne	 SHORT $L157387

; 110  :                                         _Ptr = _P;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __P$157384[ebp]
  00094	89 08		 mov	 DWORD PTR [eax], ecx
  00096	eb ce		 jmp	 SHORT $L157382
$L157387:

; 111  :                                 if (_Right(_Ptr) != _P)

  00098	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Right
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	3b 4d ec	 cmp	 ecx, DWORD PTR __P$157384[ebp]
  000ab	74 08		 je	 SHORT $L157388

; 112  :                                         _Ptr = _P; }}

  000ad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __P$157384[ebp]
  000b3	89 02		 mov	 DWORD PTR [edx], eax
$L157388:
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161358:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161361:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161360
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEXXZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::const_iterator::_Inc
;	COMDAT ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root, COMDAT

; 559  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161370 DD	019930520H
	DD	01H
	DD	FLAT:$T161372
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161372 DD	0ffffffffH
	DD	FLAT:$L161368
xdata$x	ENDS
;	COMDAT ?_Ubound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z
_TEXT	SEGMENT
$T161367 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
__Kv$ = 8
?_Ubound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Ubound, COMDAT

; 576  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161371
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 577  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 578  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L157397:

; 579  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  0004d	74 51		 je	 SHORT $L157398

; 580  :                         if (key_compare(_Kv, _Key(_X)))

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAABVCSCI_WorldObject@@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Key
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 55 08	 mov	 edx, DWORD PTR __Kv$[ebp]
  0005f	52		 push	 edx
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@VCSCI_WorldObject@@@std@@QBE_NABVCSCI_WorldObject@@0@Z ; std::less<CSCI_WorldObject>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 19		 je	 SHORT $L157399

; 581  :                                 _Y = _X, _X = _Left(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00083	83 c4 04	 add	 esp, 4
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 582  :                         else

  0008b	eb 11		 jmp	 SHORT $L157400
$L157399:

; 583  :                                 _X = _Right(_X);

  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L157400:
  0009e	eb a4		 jmp	 SHORT $L157397
$L157398:

; 584  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T161367[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T161367[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161368:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161371:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161370
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Ubound@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IBEPAU_Node@12@ABVCSCI_WorldObject@@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Ubound
PUBLIC	?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@ABU21@@Z ; std::_Construct
;	COMDAT ?_Consval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@ABU32@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?_Consval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@ABU32@@Z PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Consval, COMDAT

; 592  :                 {_Construct(&*_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@ABU21@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Consval@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@IAEXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@ABU32@@Z ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Consval
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161379 DD	019930520H
	DD	01H
	DD	FLAT:$T161381
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161381 DD	0ffffffffH
	DD	FLAT:$L161377
xdata$x	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$157417 = -20
?_Dec@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Dec, COMDAT

; 92   :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161380
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :                                 && _Parent(_Parent(_Ptr)) == _Ptr)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Color
  00039	83 c4 04	 add	 esp, 4
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 39		 jne	 SHORT $L157413
  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 02		 mov	 eax, DWORD PTR [edx]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 00		 mov	 eax, DWORD PTR [eax]
  0005f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00061	75 17		 jne	 SHORT $L157413

; 95   :                                 _Ptr = _Right(_Ptr);

  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 11		 mov	 DWORD PTR [ecx], edx

; 96   :                         else if (_Left(_Ptr) != _Nil)

  00078	eb 72		 jmp	 SHORT $L157416
$L157413:
  0007a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  00085	83 c4 04	 add	 esp, 4
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00090	74 20		 je	 SHORT $L157415

; 97   :                                 _Ptr = _Max(_Left(_Ptr));

  00092	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?_Max@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Max
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :                         else

  000b0	eb 3a		 jmp	 SHORT $L157416
$L157415:

; 100  :                                 while (_Ptr == _Left(_P = _Parent(_Ptr)))

  000b2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ec	 mov	 DWORD PTR __P$157417[ebp], ecx
  000c5	8b 55 ec	 mov	 edx, DWORD PTR __P$157417[ebp]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Left
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d8	75 0a		 jne	 SHORT $L157420

; 101  :                                         _Ptr = _P;

  000da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __P$157417[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx
  000e2	eb ce		 jmp	 SHORT $L157415
$L157420:

; 102  :                                 _Ptr = _P; }}

  000e4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 45 ec	 mov	 eax, DWORD PTR __P$157417[ebp]
  000ea	89 02		 mov	 DWORD PTR [edx], eax
$L157416:
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161377:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161380:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161379
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Dec@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Dec
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T161387 DD	019930520H
	DD	01H
	DD	FLAT:$T161389
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161389 DD	0ffffffffH
	DD	FLAT:$L161385
xdata$x	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$157426 = -20
?_Inc@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Inc, COMDAT

; 104  :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161388
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  :                         if (_Right(_Ptr) != _Nil)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Nil
  00044	74 20		 je	 SHORT $L157424

; 106  :                                 _Ptr = _Min(_Right(_Ptr));

  00046	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 107  :                         else

  00064	eb 4f		 jmp	 SHORT $L157430
$L157424:

; 109  :                                 while (_Ptr == _Right(_P = _Parent(_Ptr)))

  00066	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d ec	 mov	 DWORD PTR __P$157426[ebp], ecx
  00079	8b 55 ec	 mov	 edx, DWORD PTR __P$157426[ebp]
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  00082	83 c4 04	 add	 esp, 4
  00085	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0008c	75 0a		 jne	 SHORT $L157429

; 110  :                                         _Ptr = _P;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __P$157426[ebp]
  00094	89 08		 mov	 DWORD PTR [eax], ecx
  00096	eb ce		 jmp	 SHORT $L157424
$L157429:

; 111  :                                 if (_Right(_Ptr) != _P)

  00098	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Right
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	3b 4d ec	 cmp	 ecx, DWORD PTR __P$157426[ebp]
  000ab	74 08		 je	 SHORT $L157430

; 112  :                                         _Ptr = _P; }}

  000ad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __P$157426[ebp]
  000b3	89 02		 mov	 DWORD PTR [edx], eax
$L157430:
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161385:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L161388:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161387
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Inc@const_iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEXXZ ENDP ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::const_iterator::_Inc
PUBLIC	?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@H@1@@Z ; std::_Iter_cat
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAI@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
$T161393 = -4
?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAI@Z PROC NEAR ; std::_Distance, COMDAT

; 106  : 	{_Distance(_F, _L, _N, _Iter_cat(_F)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8d 45 08	 lea	 eax, DWORD PTR __F$[ebp]
  00007	50		 push	 eax
  00008	8d 4d fc	 lea	 ecx, DWORD PTR $T161393[ebp]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@H@1@@Z ; std::_Iter_cat
  00011	83 c4 08	 add	 esp, 8
  00014	8a 10		 mov	 dl, BYTE PTR [eax]
  00016	52		 push	 edx
  00017	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAI@Z ENDP ; std::_Distance
_TEXT	ENDS
PUBLIC	?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@H@1@@Z ; std::_Iter_cat
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAI@Z
_TEXT	SEGMENT
$T161395 = -4
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAI@Z PROC NEAR ; std::_Distance, COMDAT

; 106  : 	{_Distance(_F, _L, _N, _Iter_cat(_F)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8d 45 08	 lea	 eax, DWORD PTR __F$[ebp]
  00007	50		 push	 eax
  00008	8d 4d fc	 lea	 ecx, DWORD PTR $T161395[ebp]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@H@1@@Z ; std::_Iter_cat
  00011	83 c4 08	 add	 esp, 8
  00014	8a 10		 mov	 dl, BYTE PTR [eax]
  00016	52		 push	 edx
  00017	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAI@Z ENDP ; std::_Distance
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
__Tmp$ = -4
?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z PROC NEAR ; std::swap, COMDAT

; 100  : 	{_Ty _Tmp = _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 101  : 	_X = _Y, _Y = _Tmp; }

  0000c	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Y$[ebp]
  00019	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0@Z ENDP ; std::swap
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT
__N$ = 8
?_Allocate@std@@YAPADHPAD@Z PROC NEAR			; std::_Allocate, COMDAT

; 27   : 	{if (_N < 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 08 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	7d 07		 jge	 SHORT $L157923

; 28   : 		_N = 0;

  00009	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0
$L157923:

; 30   : 		(_SIZT)_N * sizeof (_Ty))); }

  00010	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00019	83 c4 04	 add	 esp, 4
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Allocate@std@@YAPADHPAD@Z ENDP			; std::_Allocate
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT ?_Construct@std@@YAXPAPAVCInventoryDlg@@ABQAV2@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
$T161399 = -4
?_Construct@std@@YAXPAPAVCInventoryDlg@@ABQAV2@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00009	50		 push	 eax
  0000a	6a 04		 push	 4
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T161399[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T161399[ebp], 0
  0001b	74 12		 je	 SHORT $L161400
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR $T161399[ebp]
  00020	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 01		 mov	 DWORD PTR [ecx], eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR $T161399[ebp]
  0002a	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  0002d	eb 07		 jmp	 SHORT $L161401
$L161400:
  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L161401:
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?_Construct@std@@YAXPAPAVCInventoryDlg@@ABQAV2@@Z ENDP	; std::_Construct
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__P$ = 12
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 42   : 	{return (_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCInventoryDlg@@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAPAVCInventoryDlg@@@Z PROC NEAR	; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAPAVCInventoryDlg@@@Z ENDP		; std::_Destroy
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z
_TEXT	SEGMENT
__Tmp$ = -4
__X$ = 8
__Y$ = 12
?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z PROC NEAR ; std::swap, COMDAT

; 100  : 	{_Ty _Tmp = _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 101  : 	_X = _Y, _Y = _Tmp; }

  0000c	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Y$[ebp]
  00019	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0@Z ENDP ; std::swap
_TEXT	ENDS
PUBLIC	??_G?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAEPAXI@Z ; std::pair<CSkinObj const ,CFastScrollCtrl *>::`scalar deleting destructor'
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@@Z
_TEXT	SEGMENT
__P$ = 8
?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@@Z PROC NEAR ; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a 00		 push	 0
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00008	e8 00 00 00 00	 call	 ??_G?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAEPAXI@Z ; std::pair<CSkinObj const ,CFastScrollCtrl *>::`scalar deleting destructor'
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@@Z ENDP ; std::_Destroy
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@@Z PROC NEAR ; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@@Z ENDP ; std::_Destroy
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABU01@@Z ; std::pair<CSkinObj const ,CFastScrollCtrl *>::pair<CSkinObj const ,CFastScrollCtrl *>
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xmemory
xdata$x	SEGMENT
$T161414 DD	019930520H
	DD	01H
	DD	FLAT:$T161416
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161416 DD	0ffffffffH
	DD	FLAT:$L161412
xdata$x	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@ABU21@@Z
_TEXT	SEGMENT
$T161408 = -16
$T161409 = -20
__$EHRec$ = -12
__P$ = 8
__V$ = 12
?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@ABU21@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161415
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001e	50		 push	 eax
  0001f	6a 0c		 push	 12			; 0000000cH
  00021	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00026	83 c4 08	 add	 esp, 8
  00029	89 45 ec	 mov	 DWORD PTR $T161409[ebp], eax
  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00033	83 7d ec 00	 cmp	 DWORD PTR $T161409[ebp], 0
  00037	74 11		 je	 SHORT $L161410
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR $T161409[ebp]
  00040	e8 00 00 00 00	 call	 ??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABU01@@Z ; std::pair<CSkinObj const ,CFastScrollCtrl *>::pair<CSkinObj const ,CFastScrollCtrl *>
  00045	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  00048	eb 07		 jmp	 SHORT $L161411
$L161410:
  0004a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L161411:
  00051	8b 55 e8	 mov	 edx, DWORD PTR -24+[ebp]
  00054	89 55 f0	 mov	 DWORD PTR $T161408[ebp], edx
  00057	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161412:
  00000	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ec	 mov	 ecx, DWORD PTR $T161409[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
$L161415:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161414
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@1@ABU21@@Z ENDP ; std::_Construct
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 45   : 	{return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABU01@@Z ; std::pair<CSCI_WorldObject const ,CInventoryDlg *>::pair<CSCI_WorldObject const ,CInventoryDlg *>
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xmemory
xdata$x	SEGMENT
$T161427 DD	019930520H
	DD	01H
	DD	FLAT:$T161429
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T161429 DD	0ffffffffH
	DD	FLAT:$L161425
xdata$x	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@ABU21@@Z
_TEXT	SEGMENT
$T161421 = -16
$T161422 = -20
__$EHRec$ = -12
__P$ = 8
__V$ = 12
?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@ABU21@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L161428
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001e	50		 push	 eax
  0001f	6a 08		 push	 8
  00021	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00026	83 c4 08	 add	 esp, 8
  00029	89 45 ec	 mov	 DWORD PTR $T161422[ebp], eax
  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00033	83 7d ec 00	 cmp	 DWORD PTR $T161422[ebp], 0
  00037	74 11		 je	 SHORT $L161423
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR $T161422[ebp]
  00040	e8 00 00 00 00	 call	 ??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABU01@@Z ; std::pair<CSCI_WorldObject const ,CInventoryDlg *>::pair<CSCI_WorldObject const ,CInventoryDlg *>
  00045	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  00048	eb 07		 jmp	 SHORT $L161424
$L161423:
  0004a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L161424:
  00051	8b 55 e8	 mov	 edx, DWORD PTR -24+[ebp]
  00054	89 55 f0	 mov	 DWORD PTR $T161421[ebp], edx
  00057	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161425:
  00000	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ec	 mov	 ecx, DWORD PTR $T161422[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
$L161428:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161427
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Construct@std@@YAXPAU?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@1@ABU21@@Z ENDP ; std::_Construct
;	COMDAT ??_G?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_G?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAEPAXI@Z PROC NEAR ; std::pair<CSkinObj const ,CFastScrollCtrl *>::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@XZ ; std::pair<CSkinObj const ,CFastScrollCtrl *>::~pair<CSkinObj const ,CFastScrollCtrl *>
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L157974
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L157974:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAEPAXI@Z ENDP ; std::pair<CSkinObj const ,CFastScrollCtrl *>::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABU01@@Z PROC NEAR ; std::pair<CSkinObj const ,CFastScrollCtrl *>::pair<CSkinObj const ,CFastScrollCtrl *>, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@QAE@ABU01@@Z ENDP ; std::pair<CSkinObj const ,CFastScrollCtrl *>::pair<CSkinObj const ,CFastScrollCtrl *>
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABU01@@Z PROC NEAR ; std::pair<CSCI_WorldObject const ,CInventoryDlg *>::pair<CSCI_WorldObject const ,CInventoryDlg *>, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00019	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001c	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@QAE@ABU01@@Z ENDP ; std::pair<CSCI_WorldObject const ,CInventoryDlg *>::pair<CSCI_WorldObject const ,CInventoryDlg *>
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@H@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
__IterCatTag$ = -4
__pIterCatTag$ = -8
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@H@1@@Z PROC NEAR ; std::_Iter_cat, COMDAT

; 88   : 	{_C _IterCatTag;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 89   : 	 _C* _pIterCatTag;
; 90   : 	_pIterCatTag = &_IterCatTag;	// Workaround for C4700 warning

  00006	8d 45 fc	 lea	 eax, DWORD PTR __IterCatTag$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __pIterCatTag$[ebp], eax

; 91   : 	return (_IterCatTag); }

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	8a 55 fc	 mov	 dl, BYTE PTR __IterCatTag$[ebp]
  00012	88 11		 mov	 BYTE PTR [ecx], dl
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@2@H@1@@Z ENDP ; std::_Iter_cat
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z PROC NEAR ; std::_Distance, COMDAT

; 118  : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 08		 jmp	 SHORT $L158112
$L158113:
  00005	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00008	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator++
$L158112:
  0000d	8d 45 0c	 lea	 eax, DWORD PTR __L$[ebp]
  00010	50		 push	 eax
  00011	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00014	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CFastScrollCtrl *>,std::map<CSkinObj,CFastScrollCtrl *,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CFastScrollCtrl *> >::iterator::operator!=
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $L158114

; 119  : 		++_N; }

  00022	8b 4d 10	 mov	 ecx, DWORD PTR __N$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	83 c2 01	 add	 edx, 1
  0002a	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	eb d4		 jmp	 SHORT $L158113
$L158114:
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCFastScrollCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCFastScrollCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCFastScrollCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCFastScrollCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ENDP ; std::_Distance
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@H@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
__IterCatTag$ = -4
__pIterCatTag$ = -8
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@H@1@@Z PROC NEAR ; std::_Iter_cat, COMDAT

; 88   : 	{_C _IterCatTag;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 89   : 	 _C* _pIterCatTag;
; 90   : 	_pIterCatTag = &_IterCatTag;	// Workaround for C4700 warning

  00006	8d 45 fc	 lea	 eax, DWORD PTR __IterCatTag$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __pIterCatTag$[ebp], eax

; 91   : 	return (_IterCatTag); }

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	8a 55 fc	 mov	 dl, BYTE PTR __IterCatTag$[ebp]
  00012	88 11		 mov	 BYTE PTR [ecx], dl
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@2@H@1@@Z ENDP ; std::_Iter_cat
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z PROC NEAR ; std::_Distance, COMDAT

; 118  : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 08		 jmp	 SHORT $L158120
$L158121:
  00005	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00008	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator++
$L158120:
  0000d	8d 45 0c	 lea	 eax, DWORD PTR __L$[ebp]
  00010	50		 push	 eax
  00011	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00014	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSCI_WorldObject,std::pair<CSCI_WorldObject const ,CInventoryDlg *>,std::map<CSCI_WorldObject,CInventoryDlg *,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::_Kfn,std::less<CSCI_WorldObject>,std::allocator<CInventoryDlg *> >::iterator::operator!=
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $L158122

; 119  : 		++_N; }

  00022	8b 4d 10	 mov	 ecx, DWORD PTR __N$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	83 c2 01	 add	 edx, 1
  0002a	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	eb d4		 jmp	 SHORT $L158121
$L158122:
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@VCSCI_WorldObject@@U?$pair@$$CBVCSCI_WorldObject@@PAVCInventoryDlg@@@std@@U_Kfn@?$map@VCSCI_WorldObject@@PAVCInventoryDlg@@U?$less@VCSCI_WorldObject@@@std@@V?$allocator@PAVCInventoryDlg@@@4@@3@U?$less@VCSCI_WorldObject@@@3@V?$allocator@PAVCInventoryDlg@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ENDP ; std::_Distance
_TEXT	ENDS
PUBLIC	?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ	; CImageList::GetSafeHandle
EXTRN	?FromHandle@CImageList@@SGPAV1@PAU_IMAGELIST@@@Z:NEAR ; CImageList::FromHandle
EXTRN	__imp__SendMessageA@16:NEAR
;	COMDAT ?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z
_TEXT	SEGMENT
_pImageList$ = 8
_nImageList$ = 12
_this$ = -4
?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z PROC NEAR ; CListCtrl::SetImageList, COMDAT

; 130  : 	{ ASSERT(::IsWindow(m_hWnd)); return CImageList::FromHandle((HIMAGELIST) ::SendMessage(m_hWnd, LVM_SETIMAGELIST, nImageList, (LPARAM)pImageList->GetSafeHandle())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pImageList$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ ; CImageList::GetSafeHandle
  0000f	50		 push	 eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _nImageList$[ebp]
  00013	50		 push	 eax
  00014	68 03 10 00 00	 push	 4099			; 00001003H
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  0001f	52		 push	 edx
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?FromHandle@CImageList@@SGPAV1@PAU_IMAGELIST@@@Z ; CImageList::FromHandle
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?SetImageList@CListCtrl@@QAEPAVCImageList@@PAV2@H@Z ENDP ; CListCtrl::SetImageList
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ PROC NEAR ; CImageList::GetSafeHandle, COMDAT

; 473  : 	{ return (this == NULL) ? NULL : m_hImageList; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L161442
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00016	eb 09		 jmp	 SHORT $L161443
$L161442:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001e	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
$L161443:
  00021	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ ENDP	; CImageList::GetSafeHandle
_TEXT	ENDS
EXTRN	__imp__ImageList_ReplaceIcon@12:NEAR
;	COMDAT ?Add@CImageList@@QAEHPAUHICON__@@@Z
_TEXT	SEGMENT
_hIcon$ = 8
_this$ = -4
?Add@CImageList@@QAEHPAUHICON__@@@Z PROC NEAR		; CImageList::Add, COMDAT

; 485  : 	{ ASSERT(m_hImageList != NULL); return ImageList_AddIcon(m_hImageList, hIcon); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _hIcon$[ebp]
  0000a	50		 push	 eax
  0000b	6a ff		 push	 -1
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00013	52		 push	 edx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ImageList_ReplaceIcon@12
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?Add@CImageList@@QAEHPAUHICON__@@@Z ENDP		; CImageList::Add
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0MemID@@QAE@ABV0@@Z PROC NEAR				; MemID::MemID, COMDAT

; 19   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  0000d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00010	66 89 10	 mov	 WORD PTR [eax], dx

; 20   : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0MemID@@QAE@ABV0@@Z ENDP				; MemID::MemID
_TEXT	ENDS
PUBLIC	?IsValid@MemoryMgr@@QAEHG@Z			; MemoryMgr::IsValid
EXTRN	_memMgr:DWORD
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsValid@MemID@@QBEHXZ PROC NEAR			; MemID::IsValid, COMDAT

; 62   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 		return memMgr->IsValid(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?IsValid@MemoryMgr@@QAEHG@Z ; MemoryMgr::IsValid

; 64   : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?IsValid@MemID@@QBEHXZ ENDP				; MemID::IsValid
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -8
_tempID$ = -4
?IsValid@MemoryMgr@@QAEHG@Z PROC NEAR			; MemoryMgr::IsValid, COMDAT

; 475  : 	inline Bool MemoryMgr::IsValid(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 		unsigned short tempID = (unsigned short)theID;

  00009	66 8b 45 08	 mov	 ax, WORD PTR _theID$[ebp]
  0000d	66 89 45 fc	 mov	 WORD PTR _tempID$[ebp], ax

; 477  : 
; 478  : 		return(
; 479  : 				(tempID)															&&
; 480  : 				(tempID < maxDescriptors)									&&
; 481  : 				(desc[tempID].memInfo.bits.freeDescriptor == False)	&&
; 482  : 				(desc[tempID].memInfo.bits.freeMemory == False)
; 483  : 				);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00014	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 58		 je	 SHORT $L161448
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00021	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00027	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  0002d	73 47		 jae	 SHORT $L161448
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00032	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00038	c1 e1 04	 shl	 ecx, 4
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00041	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00044	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  00047	c1 f9 1f	 sar	 ecx, 31			; 0000001fH
  0004a	85 c9		 test	 ecx, ecx
  0004c	75 28		 jne	 SHORT $L161448
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00051	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00057	c1 e2 04	 shl	 edx, 4
  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00060	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00063	c1 e2 14	 shl	 edx, 20			; 00000014H
  00066	c1 fa 1f	 sar	 edx, 31			; 0000001fH
  00069	85 d2		 test	 edx, edx
  0006b	75 09		 jne	 SHORT $L161448
  0006d	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR -12+[ebp], 1
  00074	eb 07		 jmp	 SHORT $L161449
$L161448:
  00076	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L161449:
  0007d	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 484  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?IsValid@MemoryMgr@@QAEHG@Z ENDP			; MemoryMgr::IsValid
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4
??BMemID@@QBEGXZ PROC NEAR				; MemID::operator unsigned short, COMDAT

; 93   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : 		return handle;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 00	 mov	 ax, WORD PTR [eax]

; 95   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BMemID@@QBEGXZ ENDP					; MemID::operator unsigned short
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT
_this$ = -4
?size@SOL_List@@QAEAAHXZ PROC NEAR			; SOL_List::size, COMDAT

; 24   : 	inline int &size ( void ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 		return _size;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 c0 04	 add	 eax, 4

; 26   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@SOL_List@@QAEAAHXZ ENDP				; SOL_List::size
_TEXT	ENDS
PUBLIC	??DMemID@@QBEPAXXZ				; MemID::operator*
;	COMDAT ??CFakeSOL_ListID@@QBEPAVSOL_List@@XZ
_TEXT	SEGMENT
_this$ = -4
??CFakeSOL_ListID@@QBEPAVSOL_List@@XZ PROC NEAR		; FakeSOL_ListID::operator->, COMDAT

; 84   : FakeTemplateID(FakeSOL_ListID, SOL_List, MemList)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CFakeSOL_ListID@@QBEPAVSOL_List@@XZ ENDP		; FakeSOL_ListID::operator->
_TEXT	ENDS
PUBLIC	?GetAddr@MemoryMgr@@QAEPAXG@Z			; MemoryMgr::GetAddr
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4
??DMemID@@QBEPAXXZ PROC NEAR				; MemID::operator*, COMDAT

; 98   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		return memMgr->GetAddr(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?GetAddr@MemoryMgr@@QAEPAXG@Z ; MemoryMgr::GetAddr

; 100  : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??DMemID@@QBEPAXXZ ENDP					; MemID::operator*
_TEXT	ENDS
EXTRN	__descPtrTable:BYTE
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -4
?GetAddr@MemoryMgr@@QAEPAXG@Z PROC NEAR			; MemoryMgr::GetAddr, COMDAT

; 462  : 	inline void* MemoryMgr::GetAddr(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : //		CheckValid(theID);
; 464  : 		return _descPtrTable[(unsigned int)((unsigned short)theID)];

  00007	8b 45 08	 mov	 eax, DWORD PTR _theID$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR __descPtrTable[eax*4]

; 465  : 	}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?GetAddr@MemoryMgr@@QAEPAXG@Z ENDP			; MemoryMgr::GetAddr
_TEXT	ENDS
PUBLIC	??0FakeSOL_ListID@@QAE@G@Z			; FakeSOL_ListID::FakeSOL_ListID
;	COMDAT ??0SOL_ListID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0SOL_ListID@@QAE@G@Z PROC NEAR			; SOL_ListID::SOL_ListID, COMDAT

; 88   : 	SOL_ListID(SOL_Handle h) : FakeSOL_ListID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0FakeSOL_ListID@@QAE@G@Z ; FakeSOL_ListID::FakeSOL_ListID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0SOL_ListID@@QAE@G@Z ENDP				; SOL_ListID::SOL_ListID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@G@Z				; MemID::MemID
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0FakeSOL_ListID@@QAE@G@Z PROC NEAR			; FakeSOL_ListID::FakeSOL_ListID, COMDAT

; 84   : FakeTemplateID(FakeSOL_ListID, SOL_List, MemList)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0FakeSOL_ListID@@QAE@G@Z ENDP				; FakeSOL_ListID::FakeSOL_ListID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0MemID@@QAE@G@Z PROC NEAR				; MemID::MemID, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _h$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 24   : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0MemID@@QAE@G@Z ENDP					; MemID::MemID
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@ABVMemID@@@Z		; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0ObjectID@@QAE@ABV0@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 229  : 	ObjectID(const ObjectID& id) : FakeObjectID((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABV0@@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeObjectID@@QAE@ABVMemID@@@Z PROC NEAR		; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@ABVMemID@@@Z ENDP			; FakeObjectID::FakeObjectID
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@G@Z			; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0ObjectID@@QAE@G@Z PROC NEAR				; ObjectID::ObjectID, COMDAT

; 230  : 	ObjectID(SOL_Handle h) : FakeObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@G@Z ; FakeObjectID::FakeObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0ObjectID@@QAE@G@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0FakeObjectID@@QAE@G@Z PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@G@Z ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
EXTRN	?GetMemType@MemID@@QBE?AW4MemType@@XZ:NEAR	; MemID::GetMemType
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsObject@ObjectID@@QBEHXZ PROC NEAR			; ObjectID::IsObject, COMDAT

; 247  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 248  : 		return IsValid() && GetMemType() == MemObject;

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?IsValid@MemID@@QBEHXZ	; MemID::IsValid
  00011	85 c0		 test	 eax, eax
  00013	74 16		 je	 SHORT $L161463
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetMemType@MemID@@QBE?AW4MemType@@XZ ; MemID::GetMemType
  0001d	83 f8 34	 cmp	 eax, 52			; 00000034H
  00020	75 09		 jne	 SHORT $L161463
  00022	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR -8+[ebp], 1
  00029	eb 07		 jmp	 SHORT $L161464
$L161463:
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L161464:
  00032	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 249  : 	}

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?IsObject@ObjectID@@QBEHXZ ENDP				; ObjectID::IsObject
_TEXT	ENDS
PUBLIC	?GetProperty@Object@@QAEFG@Z			; Object::GetProperty
PUBLIC	??CFakeObjectID@@QBEPAUObject@@XZ		; FakeObjectID::operator->
PUBLIC	?AssureValid@ObjectID@@QBEXXZ			; ObjectID::AssureValid
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@ObjectID@@QBEFG@Z PROC NEAR		; ObjectID::GetProperty, COMDAT

; 290  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  : 		//	get a property given a selector
; 292  : 		AssureValid();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?AssureValid@ObjectID@@QBEXXZ ; ObjectID::AssureValid

; 293  : 		return (*this)->GetProperty(selector);

  0000f	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty

; 294  : 	}

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetProperty@ObjectID@@QBEFG@Z ENDP			; ObjectID::GetProperty
_TEXT	ENDS
PUBLIC	?GetPropAddrCheck@Object@@QAEPAFG@Z		; Object::GetPropAddrCheck
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@Object@@QAEFG@Z PROC NEAR			; Object::GetProperty, COMDAT

; 170  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 		//	get a property given a selector
; 172  : 		return *GetPropAddrCheck(selector);

  00007	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetPropAddrCheck@Object@@QAEPAFG@Z ; Object::GetPropAddrCheck
  00014	66 8b 00	 mov	 ax, WORD PTR [eax]

; 173  : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?GetProperty@Object@@QAEFG@Z ENDP			; Object::GetProperty
_TEXT	ENDS
PUBLIC	?GetPropAddr@Object@@QAEPAFG@Z			; Object::GetPropAddr
EXTRN	?Fatal@MsgMgr@@QAAXHZZ:NEAR			; MsgMgr::Fatal
EXTRN	?msgMgr@@3PAVMsgMgr@@A:DWORD			; msgMgr
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_property$ = -4
?GetPropAddrCheck@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddrCheck, COMDAT

; 153  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 154  : 		//	get a property's address, checking for valid property
; 155  : 		Property* property = GetPropAddr(selector);

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetPropAddr@Object@@QAEPAFG@Z ; Object::GetPropAddr
  00016	89 45 fc	 mov	 DWORD PTR _property$[ebp], eax

; 156  : 		if (!property)

  00019	83 7d fc 00	 cmp	 DWORD PTR _property$[ebp], 0
  0001d	75 1b		 jne	 SHORT $L116949

; 157  : 			msgMgr->Fatal(Msg_InvalidProperty, selector);

  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _selector$[ebp]
  00022	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00028	51		 push	 ecx
  00029	6a 29		 push	 41			; 00000029H
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$L116949:

; 158  : 		return property;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _property$[ebp]

; 159  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?GetPropAddrCheck@Object@@QAEPAFG@Z ENDP		; Object::GetPropAddrCheck
_TEXT	ENDS
PUBLIC	?selectorDict@Object@@QAEPAVSelectorDict@@XZ	; Object::selectorDict
PUBLIC	??AObject@@QAEAAFH@Z				; Object::operator[]
EXTRN	?get@SelectorDict@@QAEHG@Z:NEAR			; SelectorDict::get
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_index$ = -4
?GetPropAddr@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddr, COMDAT

; 127  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 128  : 		int index = selectorDict()->get ( selector );

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?get@SelectorDict@@QAEHG@Z ; SelectorDict::get
  0001d	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 129  : 
; 130  : 		if ( index != -1 && !selectorDict()->script )

  00020	83 7d fc ff	 cmp	 DWORD PTR _index$[ebp], -1
  00024	74 2b		 je	 SHORT $L116940
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  0002e	33 c9		 xor	 ecx, ecx
  00030	66 8b 48 16	 mov	 cx, WORD PTR [eax+22]
  00034	85 c9		 test	 ecx, ecx
  00036	75 19		 jne	 SHORT $L116940

; 131  : 			return &(*this)[selectorDict()->offset]; 

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00040	33 d2		 xor	 edx, edx
  00042	66 8b 50 14	 mov	 dx, WORD PTR [eax+20]
  00046	52		 push	 edx
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??AObject@@QAEAAFH@Z	; Object::operator[]
  0004f	eb 02		 jmp	 SHORT $L116938
$L116940:

; 132  : 
; 133  : 		return 0;

  00051	33 c0		 xor	 eax, eax
$L116938:

; 134  : 	}

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?GetPropAddr@Object@@QAEPAFG@Z ENDP			; Object::GetPropAddr
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT
_this$ = -4
?selectorDict@Object@@QAEPAVSelectorDict@@XZ PROC NEAR	; Object::selectorDict, COMDAT

; 102  : 	SelectorDict *selectorDict ( void ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 		return _selectorDict;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 104  : 	};

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?selectorDict@Object@@QAEPAVSelectorDict@@XZ ENDP	; Object::selectorDict
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT
_index$ = 8
_this$ = -4
??AObject@@QAEAAFH@Z PROC NEAR				; Object::operator[], COMDAT

; 117  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 		//	get a reference to a property given the number of the property
; 119  : 		return ((Property*) this)[index];

  00007	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]

; 120  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??AObject@@QAEAAFH@Z ENDP				; Object::operator[]
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT
_this$ = -4
??CFakeObjectID@@QBEPAUObject@@XZ PROC NEAR		; FakeObjectID::operator->, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CFakeObjectID@@QBEPAUObject@@XZ ENDP			; FakeObjectID::operator->
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssureValid@ObjectID@@QBEXXZ PROC NEAR			; ObjectID::AssureValid, COMDAT

; 238  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 239  : 		if (!IsObject())

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  0000f	85 c0		 test	 eax, eax
  00011	75 1e		 jne	 SHORT $L117108

; 240  : 			msgMgr->Fatal(Msg_NotObject, (int) *this);

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0001b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00020	50		 push	 eax
  00021	6a 2f		 push	 47			; 0000002fH
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
$L117108:

; 241  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?AssureValid@ObjectID@@QBEXXZ ENDP			; ObjectID::AssureValid
_TEXT	ENDS
PUBLIC	??DTextID@@QAEPADXZ				; TextID::operator*
EXTRN	??0TextID@@QAE@G@Z:NEAR				; TextID::TextID
;	COMDAT ??DStringID@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -16
_obj$ = -4
$T161474 = -8
$T161475 = -12
??DStringID@@QAEPADXZ PROC NEAR				; StringID::operator*, COMDAT

; 63   : 	char * operator *() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 		ObjectID obj ( handle );

  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  00013	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID

; 65   : 
; 66   : 		if ( obj.IsObject() ) {

  00018	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  0001b	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  00020	85 c0		 test	 eax, eax
  00022	74 23		 je	 SHORT $L117333

; 67   : 			return *(TextID)obj->GetProperty ( s_data );

  00024	6a 71		 push	 113			; 00000071H
  00026	8d 4d fc	 lea	 ecx, DWORD PTR _obj$[ebp]
  00029	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0002e	8b c8		 mov	 ecx, eax
  00030	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty
  00035	50		 push	 eax
  00036	8d 4d f8	 lea	 ecx, DWORD PTR $T161474[ebp]
  00039	e8 00 00 00 00	 call	 ??0TextID@@QAE@G@Z	; TextID::TextID
  0003e	8b c8		 mov	 ecx, eax
  00040	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
  00045	eb 16		 jmp	 SHORT $L117331
$L117333:

; 69   : 
; 70   : 		return *(TextID)handle;

  00047	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	66 8b 02	 mov	 ax, WORD PTR [edx]
  0004d	50		 push	 eax
  0004e	8d 4d f4	 lea	 ecx, DWORD PTR $T161475[ebp]
  00051	e8 00 00 00 00	 call	 ??0TextID@@QAE@G@Z	; TextID::TextID
  00056	8b c8		 mov	 ecx, eax
  00058	e8 00 00 00 00	 call	 ??DTextID@@QAEPADXZ	; TextID::operator*
$L117331:

; 71   : 	}

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??DStringID@@QAEPADXZ ENDP				; StringID::operator*
_TEXT	ENDS
PUBLIC	??_C@_00A@?$AA@					; `string'
;	COMDAT ??_C@_00A@?$AA@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\textid.hpp
_BSS	SEGMENT
??_C@_00A@?$AA@ DB 01H DUP (?)				; `string'
_BSS	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4
??DTextID@@QAEPADXZ PROC NEAR				; TextID::operator*, COMDAT

; 24   : 	char	*operator *() { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 		return handle ? (char *)MemID::operator*() : ""; 

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	33 c9		 xor	 ecx, ecx
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	85 c9		 test	 ecx, ecx
  00013	74 0d		 je	 SHORT $L161477
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0001d	89 45 f8	 mov	 DWORD PTR -8+[ebp], eax
  00020	eb 07		 jmp	 SHORT $L161478
$L161477:
  00022	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], OFFSET FLAT:??_C@_00A@?$AA@ ; `string'
$L161478:
  00029	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 26   : 	}

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??DTextID@@QAEPADXZ ENDP				; TextID::operator*
_TEXT	ENDS
PUBLIC	??0CSCI_WorldObjectBase@@QAE@XZ			; CSCI_WorldObjectBase::CSCI_WorldObjectBase
;	COMDAT ??0CSCI_BContainer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_BContainer@@QAE@XZ PROC NEAR			; CSCI_BContainer::CSCI_BContainer, COMDAT

; 3926 : 	CSCI_BContainer() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_WorldObjectBase@@QAE@XZ ; CSCI_WorldObjectBase::CSCI_WorldObjectBase
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_BContainer@@QAE@XZ ENDP				; CSCI_BContainer::CSCI_BContainer
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@XZ				; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_WorldObjectBase@@QAE@XZ PROC NEAR		; CSCI_WorldObjectBase::CSCI_WorldObjectBase, COMDAT

; 3824 : 	CSCI_WorldObjectBase() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@XZ	; CSCI_Object::CSCI_Object
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_WorldObjectBase@@QAE@XZ ENDP			; CSCI_WorldObjectBase::CSCI_WorldObjectBase
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@XZ				; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Object@@QAE@XZ PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 10   : 	CSCI_Object() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@XZ	; ObjectID::ObjectID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Object@@QAE@XZ ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@XZ				; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0ObjectID@@QAE@XZ PROC NEAR				; ObjectID::ObjectID, COMDAT

; 227  : 	ObjectID() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@XZ	; FakeObjectID::FakeObjectID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0ObjectID@@QAE@XZ ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@XZ				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0FakeObjectID@@QAE@XZ PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0MemID@@QAE@XZ	; MemID::MemID
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0FakeObjectID@@QAE@XZ ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0MemID@@QAE@XZ PROC NEAR				; MemID::MemID, COMDAT

; 15   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 c7 00 00 00	 mov	 WORD PTR [eax], 0

; 16   : 	}

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0MemID@@QAE@XZ ENDP					; MemID::MemID
_TEXT	ENDS
PUBLIC	??0CSCI_WorldObjectBase@@QAE@G@Z		; CSCI_WorldObjectBase::CSCI_WorldObjectBase
;	COMDAT ??0CSCI_BContainer@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_BContainer@@QAE@G@Z PROC NEAR			; CSCI_BContainer::CSCI_BContainer, COMDAT

; 3929 : 	CSCI_BContainer(SOL_Handle h) : CSCI_WorldObjectBase(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_WorldObjectBase@@QAE@G@Z ; CSCI_WorldObjectBase::CSCI_WorldObjectBase
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_BContainer@@QAE@G@Z ENDP			; CSCI_BContainer::CSCI_BContainer
_TEXT	ENDS
PUBLIC	??0CSCI_Object@@QAE@G@Z				; CSCI_Object::CSCI_Object
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldObjectBase@@QAE@G@Z PROC NEAR		; CSCI_WorldObjectBase::CSCI_WorldObjectBase, COMDAT

; 3827 : 	CSCI_WorldObjectBase(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldObjectBase@@QAE@G@Z ENDP			; CSCI_WorldObjectBase::CSCI_WorldObjectBase
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Object@@QAE@G@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 13   : 	CSCI_Object(SOL_Handle h) : ObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@G@Z ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
;	COMDAT ?get_pContents@CSCI_BContainer@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pContents@CSCI_BContainer@@QAEFXZ PROC NEAR	; CSCI_BContainer::get_pContents, COMDAT

; 3931 : 	Property get_pContents() { return GetProperty ( s_pContents ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 20 04 00 00	 push	 1056			; 00000420H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pContents@CSCI_BContainer@@QAEFXZ ENDP		; CSCI_BContainer::get_pContents
_TEXT	ENDS
;	COMDAT ?get_pIsWorn@CSCI_BWearable@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_pIsWorn@CSCI_BWearable@@QAEFXZ PROC NEAR		; CSCI_BWearable::get_pIsWorn, COMDAT

; 4179 : 	Property get_pIsWorn() { return GetProperty ( s_pIsWorn ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 1e 04 00 00	 push	 1054			; 0000041eH
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_pIsWorn@CSCI_BWearable@@QAEFXZ ENDP		; CSCI_BWearable::get_pIsWorn
_TEXT	ENDS
PUBLIC	??0CSCI_Actor@@QAE@XZ				; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_WorldObject@@QAE@XZ PROC NEAR			; CSCI_WorldObject::CSCI_WorldObject, COMDAT

; 4472 : 	CSCI_WorldObject() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@XZ	; CSCI_Actor::CSCI_Actor
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_WorldObject@@QAE@XZ ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@XZ				; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Actor@@QAE@XZ PROC NEAR				; CSCI_Actor::CSCI_Actor, COMDAT

; 1593 : 	CSCI_Actor() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@XZ	; CSCI_Prop::CSCI_Prop
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Actor@@QAE@XZ ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@XZ				; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Prop@@QAE@XZ PROC NEAR				; CSCI_Prop::CSCI_Prop, COMDAT

; 1557 : 	CSCI_Prop() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@XZ	; CSCI_View::CSCI_View
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Prop@@QAE@XZ ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@XZ				; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_View@@QAE@XZ PROC NEAR				; CSCI_View::CSCI_View, COMDAT

; 1512 : 	CSCI_View() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@XZ	; CSCI_Feature::CSCI_Feature
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_View@@QAE@XZ ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@XZ				; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Feature@@QAE@XZ PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT

; 1434 : 	CSCI_Feature() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@XZ	; CSCI_BitMap::CSCI_BitMap
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Feature@@QAE@XZ ENDP				; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@XZ			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_BitMap@@QAE@XZ PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT

; 1355 : 	CSCI_BitMap() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@XZ ; CSCI_Rectangle::CSCI_Rectangle
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_BitMap@@QAE@XZ ENDP				; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSCI_Rectangle@@QAE@XZ PROC NEAR			; CSCI_Rectangle::CSCI_Rectangle, COMDAT

; 514  : 	CSCI_Rectangle() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@XZ	; CSCI_Object::CSCI_Object
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0CSCI_Rectangle@@QAE@XZ ENDP				; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
PUBLIC	??0CSCI_Actor@@QAE@G@Z				; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldObject@@QAE@G@Z PROC NEAR			; CSCI_WorldObject::CSCI_WorldObject, COMDAT

; 4475 : 	CSCI_WorldObject(SOL_Handle h) : CSCI_Actor(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@G@Z	; CSCI_Actor::CSCI_Actor
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@G@Z ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@G@Z				; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@G@Z PROC NEAR			; CSCI_Actor::CSCI_Actor, COMDAT

; 1596 : 	CSCI_Actor(SOL_Handle h) : CSCI_Prop(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@G@Z	; CSCI_Prop::CSCI_Prop
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@G@Z ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@G@Z				; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@G@Z PROC NEAR				; CSCI_Prop::CSCI_Prop, COMDAT

; 1560 : 	CSCI_Prop(SOL_Handle h) : CSCI_View(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@G@Z	; CSCI_View::CSCI_View
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@G@Z ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@G@Z			; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_View@@QAE@G@Z PROC NEAR				; CSCI_View::CSCI_View, COMDAT

; 1515 : 	CSCI_View(SOL_Handle h) : CSCI_Feature(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@G@Z ; CSCI_Feature::CSCI_Feature
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_View@@QAE@G@Z ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@G@Z				; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@G@Z PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT

; 1437 : 	CSCI_Feature(SOL_Handle h) : CSCI_BitMap(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@G@Z	; CSCI_BitMap::CSCI_BitMap
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@G@Z ENDP				; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@G@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@G@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT

; 1358 : 	CSCI_BitMap(SOL_Handle h) : CSCI_Rectangle(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@G@Z ; CSCI_Rectangle::CSCI_Rectangle
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@G@Z ENDP				; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@G@Z PROC NEAR			; CSCI_Rectangle::CSCI_Rectangle, COMDAT

; 517  : 	CSCI_Rectangle(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@G@Z ENDP				; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
;	COMDAT ?GetGlobal@PMachine@@QAEFH@Z
_TEXT	SEGMENT
_nGlobal$ = 8
_this$ = -4
?GetGlobal@PMachine@@QAEFH@Z PROC NEAR			; PMachine::GetGlobal, COMDAT

; 74   : 	Property	GetGlobal( int nGlobal ) { return GlobalPtr[ nGlobal ]; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0000d	8b 55 08	 mov	 edx, DWORD PTR _nGlobal$[ebp]
  00010	66 8b 04 51	 mov	 ax, WORD PTR [ecx+edx*2]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?GetGlobal@PMachine@@QAEFH@Z ENDP			; PMachine::GetGlobal
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Next, COMDAT

; 275  : 	virtual void Next ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Next
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Previous, COMDAT

; 276  : 	virtual void Previous ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Previous
_TEXT	ENDS
END
