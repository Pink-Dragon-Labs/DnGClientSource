	TITLE	C:\Documents and Settings\don\Desktop\sciw\Interp\skinwindow.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsRectEmpty@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PtInRect@CRect@@QBEHUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OffsetRect@CRect@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PostMessageA@CWnd@@QAEHIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InvalidateRect@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsWindowVisible@CWnd@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnActivate@CWnd@@IAEXIPAV1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CWnd@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSetCursor@CWnd@@IAEHPAV1@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSetFocus@CWnd@@IAEXPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnWindowPosChanged@CWnd@@IAEXPAUtagWINDOWPOS@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWnd@@IAEXIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSysKeyUp@CWnd@@IAEXIII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSizing@CWnd@@IAEXIPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMoving@CWnd@@IAEXIPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStandardIcon@CWinApp@@QBEPAUHICON__@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCloseSelfCalled@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCloseSelfCalled@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDestructing@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAllowResize@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAllowResize@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAllowMove@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAllowMove@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestructing@CSkinWnd@@QAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0strstreambuf@std@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0strstreambuf@std@@QAE@PBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?str@strstreambuf@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pcount@strstreambuf@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gstrstreambuf@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gistrstream@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Distrstream@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gostrstream@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Dostrstream@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0strstream@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?str@strstream@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pcount@strstream@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gstrstream@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Dstrstream@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinWnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CSkinObj@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@ABU?$less@PAUHWND__@@@1@ABV?$allocator@PAVCSkinWnd@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEAAPAVCSkinWnd@@ABQAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEIABQAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@ABQAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAPAVCSkinCtrl@@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEAAPAVCSkinCtrl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$bitset@$05@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@ABV?$allocator@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEAAPAVCSkinCtrl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?failed@?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@ABU?$less@PAUHWND__@@@1@_NABV?$allocator@PAVCSkinWnd@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEIABQAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@QAE@ABQAUHWND__@@ABQAVCSkinWnd@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAVCSkinCtrl@@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$bitset@$05@std@@AAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Freenode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Value@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAVCSkinCtrl@@PAU_Node@23@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCSkinWnd@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@2@ABQAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@PAVCSkinCtrl@@@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@ABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEABQAVCSkinCtrl@@ABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAABQAVCSkinCtrl@@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@2@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAE?AViterator@12@PAU_Node@12@0ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@PAVCSkinCtrl@@@std@@QBE_NABQAVCSkinCtrl@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$bitset@$05@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QBEABQAUHWND__@@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@ABQAV3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@PAVCSkinWnd@@@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@ABU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@ABU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAPAVCSkinCtrl@@ABQAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCSkinCtrl@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@ABU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@ABU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@SAPAV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@2@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@PAVCSkinCtrl@@H@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7istrstream@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7strstream@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_8istrstream@std@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_8strstream@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_8ostrstream@std@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7ostrstream@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_8strstream@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7strstreambuf@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@0PAV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinWnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCA, CRT$XCU, CRT$XCL, CRT$XCC, CRT$XCZ, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?m_SkinWndHandleMap@CSkinWnd@@0V?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@A ; CSkinWnd::m_SkinWndHandleMap
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?OnDblClick@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z	; CSkinWnd::OnDblClick
PUBLIC	?OnMouseDown@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z	; CSkinWnd::OnMouseDown
PUBLIC	?OnMouseUp@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z	; CSkinWnd::OnMouseUp
PUBLIC	?OnMouseIn@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z	; CSkinWnd::OnMouseIn
PUBLIC	?OnMouseOut@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z	; CSkinWnd::OnMouseOut
PUBLIC	?_eventsinkEntries@CSkinWnd@@0QBUAFX_EVENTSINKMAP_ENTRY@@B ; CSkinWnd::_eventsinkEntries
PUBLIC	?_eventsinkEntryCount@CSkinWnd@@0IA		; CSkinWnd::_eventsinkEntryCount
PUBLIC	?eventsinkMap@CSkinWnd@@1UAFX_EVENTSINKMAP@@B	; CSkinWnd::eventsinkMap
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	?_GetBaseEventSinkMap@CSkinWnd@@KGPBUAFX_EVENTSINKMAP@@XZ ; CSkinWnd::_GetBaseEventSinkMap
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	?OnSizing@CSkinWnd@@IAEXIPAUtagRECT@@@Z		; CSkinWnd::OnSizing
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	?OnMoving@CSkinWnd@@IAEXIPAUtagRECT@@@Z		; CSkinWnd::OnMoving
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	?OnSysCommand@CSkinWnd@@IAEXIJ@Z		; CSkinWnd::OnSysCommand
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	?OnMouseMove@CSkinWnd@@IAEXIVCPoint@@@Z		; CSkinWnd::OnMouseMove
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	?OnDestroy@CSkinWnd@@IAEXXZ			; CSkinWnd::OnDestroy
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	?OnMove@CSkinWnd@@IAEXHH@Z			; CSkinWnd::OnMove
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	?OnSetFocus@CSkinWnd@@IAEXPAVCWnd@@@Z		; CSkinWnd::OnSetFocus
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	?OnClose@CSkinWnd@@IAEXXZ			; CSkinWnd::OnClose
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	?OnWindowPosChanged@CSkinWnd@@IAEXPAUtagWINDOWPOS@@@Z ; CSkinWnd::OnWindowPosChanged
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	?OnActivate@CSkinWnd@@IAEXIPAVCWnd@@H@Z		; CSkinWnd::OnActivate
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	?OnNcActivate@CSkinWnd@@IAEHH@Z			; CSkinWnd::OnNcActivate
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	?OnSysKeyDown@CSkinWnd@@IAEXIII@Z		; CSkinWnd::OnSysKeyDown
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	?OnSysKeyUp@CSkinWnd@@IAEXIII@Z			; CSkinWnd::OnSysKeyUp
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	?OnSetCursor@CSkinWnd@@IAEHPAVCWnd@@II@Z	; CSkinWnd::OnSetCursor
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	?_messageEntries@CSkinWnd@@0QBUAFX_MSGMAP_ENTRY@@B ; CSkinWnd::_messageEntries
PUBLIC	?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B		; CSkinWnd::messageMap
PUBLIC	?_GetBaseMessageMap@CSkinWnd@@KGPBUAFX_MSGMAP@@XZ ; CSkinWnd::_GetBaseMessageMap
PUBLIC	?g_pTrackingWindow@@3PAVCSkinWnd@@A		; g_pTrackingWindow
PUBLIC	_IID_IInternalConnection
_BSS	SEGMENT
$SG146448 DB	01H DUP (?)
	ALIGN	4

$SG146455 DB	01H DUP (?)
	ALIGN	4

$SG146462 DB	01H DUP (?)
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

$SG146469 DB	01H DUP (?)
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

$SG146476 DB	01H DUP (?)
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?m_SkinWndHandleMap@CSkinWnd@@0V?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@A DB 010H DUP (?) ; CSkinWnd::m_SkinWndHandleMap
?g_pTrackingWindow@@3PAVCSkinWnd@@A DD 01H DUP (?)	; g_pTrackingWindow
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
CONST	SEGMENT
?eventsinkMap@CSkinWnd@@1UAFX_EVENTSINKMAP@@B DD FLAT:?_GetBaseEventSinkMap@CSkinWnd@@KGPBUAFX_EVENTSINKMAP@@XZ ; CSkinWnd::eventsinkMap
	DD	FLAT:?_eventsinkEntries@CSkinWnd@@0QBUAFX_EVENTSINKMAP_ENTRY@@B
	DD	FLAT:?_eventsinkEntryCount@CSkinWnd@@0IA
CONST	ENDS
_DATA	SEGMENT
?_eventsinkEntryCount@CSkinWnd@@0IA DD 0ffffffffH	; CSkinWnd::_eventsinkEntryCount
_DATA	ENDS
CONST	SEGMENT
	ORG $+4
?_eventsinkEntries@CSkinWnd@@0QBUAFX_EVENTSINKMAP_ENTRY@@B DD FLAT:$SG146448 ; CSkinWnd::_eventsinkEntries
	DD	06H
	DD	FLAT:$SG146449
	DW	0bH
	ORG $+2
	DD	FLAT:?OnDblClick@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z
	DD	00H
	DD	00H
	DD	00H
	DD	064H
	DD	0ffffffffH
	DD	FLAT:$SG146455
	DD	0aH
	DD	FLAT:$SG146456
	DW	0bH
	ORG $+2
	DD	FLAT:?OnMouseDown@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z
	DD	00H
	DD	00H
	DD	00H
	DD	064H
	DD	0ffffffffH
	DD	FLAT:$SG146462
	DD	0bH
	DD	FLAT:$SG146463
	DW	0bH
	ORG $+2
	DD	FLAT:?OnMouseUp@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z
	DD	00H
	DD	00H
	DD	00H
	DD	064H
	DD	0ffffffffH
	DD	FLAT:$SG146469
	DD	02H
	DD	FLAT:$SG146470
	DW	0bH
	ORG $+2
	DD	FLAT:?OnMouseIn@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z
	DD	00H
	DD	00H
	DD	00H
	DD	064H
	DD	0ffffffffH
	DD	FLAT:$SG146476
	DD	03H
	DD	FLAT:$SG146477
	DW	0bH
	ORG $+2
	DD	FLAT:?OnMouseOut@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z
	DD	00H
	DD	00H
	DD	00H
	DD	064H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DW	018H
	ORG $+2
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CSkinWnd@@KGPBUAFX_MSGMAP@@XZ ; CSkinWnd::messageMap
	DD	FLAT:?_messageEntries@CSkinWnd@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CSkinWnd@@0QBUAFX_MSGMAP_ENTRY@@B DD 0214H ; CSkinWnd::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	02bH
	DD	FLAT:?OnSizing@CSkinWnd@@IAEXIPAUtagRECT@@@Z
	DD	0216H
	DD	00H
	DD	00H
	DD	00H
	DD	02bH
	DD	FLAT:?OnMoving@CSkinWnd@@IAEXIPAUtagRECT@@@Z
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	031H
	DD	FLAT:?OnMouseMove@CSkinWnd@@IAEXIVCPoint@@@Z
	DD	0112H
	DD	00H
	DD	00H
	DD	00H
	DD	012H
	DD	FLAT:?OnSysCommand@CSkinWnd@@IAEXIJ@Z
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	0cH
	DD	FLAT:?OnDestroy@CSkinWnd@@IAEXXZ
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:?OnSetCursor@CSkinWnd@@IAEHPAVCWnd@@II@Z
	DD	03H
	DD	00H
	DD	00H
	DD	00H
	DD	0fH
	DD	FLAT:?OnMove@CSkinWnd@@IAEXHH@Z
	DD	07H
	DD	00H
	DD	00H
	DD	00H
	DD	017H
	DD	FLAT:?OnSetFocus@CSkinWnd@@IAEXPAVCWnd@@@Z
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	0cH
	DD	FLAT:?OnClose@CSkinWnd@@IAEXXZ
	DD	047H
	DD	00H
	DD	00H
	DD	00H
	DD	024H
	DD	FLAT:?OnWindowPosChanged@CSkinWnd@@IAEXPAUtagWINDOWPOS@@@Z
	DD	06H
	DD	00H
	DD	00H
	DD	00H
	DD	01cH
	DD	FLAT:?OnActivate@CSkinWnd@@IAEXIPAVCWnd@@H@Z
	DD	086H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	FLAT:?OnNcActivate@CSkinWnd@@IAEHH@Z
	DD	0104H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnSysKeyDown@CSkinWnd@@IAEXIII@Z
	DD	0105H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnSysKeyUp@CSkinWnd@@IAEXIII@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
CRT$XCU	SEGMENT
_$S324	DD	FLAT:_$E323
CRT$XCU	ENDS
_DATA	SEGMENT
_?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA DD 02bcH
$SG146449 DB	09H, 03H, 02H, 02H, 00H
	ORG $+3
$SG146456 DB	09H, 03H, 02H, 02H, 00H
	ORG $+3
$SG146463 DB	09H, 03H, 02H, 02H, 00H
	ORG $+3
$SG146470 DB	09H, 03H, 02H, 02H, 00H
	ORG $+3
$SG146477 DB	09H, 03H, 02H, 02H, 00H
_DATA	ENDS
EXTRN	__imp_?eventsinkMap@CCmdTarget@@1UAFX_EVENTSINKMAP@@B:BYTE
_TEXT	SEGMENT
?_GetBaseEventSinkMap@CSkinWnd@@KGPBUAFX_EVENTSINKMAP@@XZ PROC NEAR ; CSkinWnd::_GetBaseEventSinkMap

; 34   : BEGIN_EVENTSINK_MAP ( CSkinWnd, CWnd )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?eventsinkMap@CCmdTarget@@1UAFX_EVENTSINKMAP@@B
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_GetBaseEventSinkMap@CSkinWnd@@KGPBUAFX_EVENTSINKMAP@@XZ ENDP ; CSkinWnd::_GetBaseEventSinkMap
_TEXT	ENDS
PUBLIC	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ ; CSkinWnd::GetEventSinkMap
_TEXT	SEGMENT
_this$ = -4
?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ PROC NEAR ; CSkinWnd::GetEventSinkMap

; 34   : BEGIN_EVENTSINK_MAP ( CSkinWnd, CWnd )

  0000a	55		 push	 ebp
  0000b	8b ec		 mov	 ebp, esp
  0000d	51		 push	 ecx
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?eventsinkMap@CSkinWnd@@1UAFX_EVENTSINKMAP@@B ; CSkinWnd::eventsinkMap
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ ENDP ; CSkinWnd::GetEventSinkMap
_TEXT	ENDS
EXTRN	__imp_?messageMap@CWnd@@1UAFX_MSGMAP@@B:QWORD
_TEXT	SEGMENT
?_GetBaseMessageMap@CSkinWnd@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CSkinWnd::_GetBaseMessageMap

; 43   : BEGIN_MESSAGE_MAP ( CSkinWnd, CWnd )

  0001a	55		 push	 ebp
  0001b	8b ec		 mov	 ebp, esp
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?messageMap@CWnd@@1UAFX_MSGMAP@@B
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_GetBaseMessageMap@CSkinWnd@@KGPBUAFX_MSGMAP@@XZ ENDP	; CSkinWnd::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ	; CSkinWnd::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR	; CSkinWnd::GetMessageMap

; 43   : BEGIN_MESSAGE_MAP ( CSkinWnd, CWnd )

  00024	55		 push	 ebp
  00025	8b ec		 mov	 ebp, esp
  00027	51		 push	 ecx
  00028	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B ; CSkinWnd::messageMap
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CSkinWnd::GetMessageMap
_TEXT	ENDS
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	??0?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
PUBLIC	??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
PUBLIC	??0?$bitset@$05@std@@QAE@XZ			; std::bitset<6>::bitset<6>
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?SetCloseSelfCalled@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetCloseSelfCalled
PUBLIC	?SetDestructing@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetDestructing
PUBLIC	?SetAllowResize@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetAllowResize
PUBLIC	?SetAllowMove@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetAllowMove
PUBLIC	?GetProcessEvents@CSkinWnd@@MAE_NXZ		; CSkinWnd::GetProcessEvents
PUBLIC	?SetProcessEvents@CSkinWnd@@IAEX_N@Z		; CSkinWnd::SetProcessEvents
PUBLIC	??0CSkinWnd@@QAE@XZ				; CSkinWnd::CSkinWnd
PUBLIC	?CloseSelf@CSkinWnd@@UAEX_N@Z			; CSkinWnd::CloseSelf
PUBLIC	?Disable@CSkinWnd@@UAEXXZ			; CSkinWnd::Disable
PUBLIC	?Enable@CSkinWnd@@UAEXXZ			; CSkinWnd::Enable
PUBLIC	?EnableGameModal@CSkinWnd@@UAEXHPAH@Z		; CSkinWnd::EnableGameModal
PUBLIC	?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z	; CSkinWnd::DisableGameModal
PUBLIC	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::MakeSkinCtrl
PUBLIC	?ProcessRefreshList@CSkinWnd@@UAEHXZ		; CSkinWnd::ProcessRefreshList
PUBLIC	?UpdateTracking@CSkinWnd@@UAEXXZ		; CSkinWnd::UpdateTracking
PUBLIC	?Next@CSkinWnd@@UAEXXZ				; CSkinWnd::Next
PUBLIC	?Previous@CSkinWnd@@UAEXXZ			; CSkinWnd::Previous
PUBLIC	??_7CSkinWnd@@6B@				; CSkinWnd::`vftable'
PUBLIC	??_GCSkinWnd@@UAEPAXI@Z				; CSkinWnd::`scalar deleting destructor'
PUBLIC	??_ECSkinWnd@@UAEPAXI@Z				; CSkinWnd::`vector deleting destructor'
PUBLIC	??0?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
PUBLIC	??1?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::~map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	??1CWnd@@UAE@XZ:NEAR				; CWnd::~CWnd
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	??0CWnd@@QAE@XZ:NEAR				; CWnd::CWnd
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
;	COMDAT ??_7CSkinWnd@@6B@
; File C:\Documents and Settings\don\Desktop\sciw\Interp\skinwindow.cpp
CONST	SEGMENT
??_7CSkinWnd@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CSkinWnd::`vftable'
	DD	FLAT:??_ECSkinWnd@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CSkinWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
xdata$x	SEGMENT
$T155207 DD	019930520H
	DD	04H
	DD	FLAT:$T155210
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155210 DD	0ffffffffH
	DD	FLAT:$L155200
	DD	00H
	DD	FLAT:$L155201
	DD	01H
	DD	FLAT:$L155202
	DD	02H
	DD	FLAT:$L155203
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -40
$T155194 = -16
$T155195 = -20
$T155196 = -24
$T155197 = -28
$T155198 = -32
$T155199 = -36
__$EHRec$ = -12
??0CSkinWnd@@QAE@XZ PROC NEAR				; CSkinWnd::CSkinWnd

; 62   : {

  00034	55		 push	 ebp
  00035	8b ec		 mov	 ebp, esp
  00037	6a ff		 push	 -1
  00039	68 00 00 00 00	 push	 $L155208
  0003e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00044	50		 push	 eax
  00045	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0004c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0004f	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  00052	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	8d 45 f0	 lea	 eax, DWORD PTR $T155194[ebp]
  00064	50		 push	 eax
  00065	8d 4d ec	 lea	 ecx, DWORD PTR $T155195[ebp]
  00068	51		 push	 ecx
  00069	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	83 c1 48	 add	 ecx, 72			; 00000048H
  0006f	e8 00 00 00 00	 call	 ??0?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
  00074	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00078	8d 55 e8	 lea	 edx, DWORD PTR $T155196[ebp]
  0007b	52		 push	 edx
  0007c	8d 45 e4	 lea	 eax, DWORD PTR $T155197[ebp]
  0007f	50		 push	 eax
  00080	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	83 c1 58	 add	 ecx, 88			; 00000058H
  00086	e8 00 00 00 00	 call	 ??0?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
  0008b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0008f	8d 4d e0	 lea	 ecx, DWORD PTR $T155198[ebp]
  00092	51		 push	 ecx
  00093	8d 55 dc	 lea	 edx, DWORD PTR $T155199[ebp]
  00096	52		 push	 edx
  00097	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	83 c1 68	 add	 ecx, 104		; 00000068H
  0009d	e8 00 00 00 00	 call	 ??0?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
  000a2	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000a6	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  000af	e8 00 00 00 00	 call	 ??0?$bitset@$05@std@@QAE@XZ ; std::bitset<6>::bitset<6>
  000b4	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinWnd@@6B@ ; CSkinWnd::`vftable'

; 63   : 	m_pSkinForm      = NULL;

  000bd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	c7 41 7c 00 00
	00 00		 mov	 DWORD PTR [ecx+124], 0

; 64   : 	m_pParentWnd     = NULL;

  000c7	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000ca	c7 42 78 00 00
	00 00		 mov	 DWORD PTR [edx+120], 0

; 65   : 	m_pLog           = NULL;

  000d1	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  000d4	c7 80 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+128], 0

; 66   : 	m_pTrackingCtrl  = NULL;

  000de	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	c7 81 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+132], 0

; 67   : 	m_nPriority      = swPriUnknown;

  000eb	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000ee	c7 42 40 ff ff
	ff ff		 mov	 DWORD PTR [edx+64], -1

; 68   : 	m_bChild         = false;

  000f5	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  000f8	c6 40 44 00	 mov	 BYTE PTR [eax+68], 0

; 69   : 	m_bCanFocus      = true;

  000fc	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	c6 41 45 01	 mov	 BYTE PTR [ecx+69], 1

; 70   :     m_nDisableWindow = 0;

  00103	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  00106	c7 82 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+140], 0

; 71   : 	m_bPassFocusToMainWindow = false;

  00110	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  00113	c6 80 90 00 00
	00 00		 mov	 BYTE PTR [eax+144], 0

; 72   : 
; 73   : 	SetAllowResize   ( true );

  0011a	6a 01		 push	 1
  0011c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 74   : 	SetAllowMove     ( true );

  00124	6a 01		 push	 1
  00126	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00129	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove

; 75   : 	SetProcessEvents ( true );

  0012e	6a 01		 push	 1
  00130	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00133	e8 00 00 00 00	 call	 ?SetProcessEvents@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetProcessEvents

; 76   : 
; 77   : 	SetCloseSelfCalled ( false );

  00138	6a 00		 push	 0
  0013a	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013d	e8 00 00 00 00	 call	 ?SetCloseSelfCalled@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetCloseSelfCalled

; 78   : 	SetDestructing     ( false );

  00142	6a 00		 push	 0
  00144	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	e8 00 00 00 00	 call	 ?SetDestructing@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetDestructing

; 79   : }

  0014c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00153	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	8b e5		 mov	 esp, ebp
  00162	5d		 pop	 ebp
  00163	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155200:
  00000	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  00008	c3		 ret	 0
$L155201:
  00009	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	83 c1 48	 add	 ecx, 72			; 00000048H
  0000f	e8 00 00 00 00	 call	 ??1?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::~map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
  00014	c3		 ret	 0
$L155202:
  00015	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 58	 add	 ecx, 88			; 00000058H
  0001b	e8 00 00 00 00	 call	 ??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
  00020	c3		 ret	 0
$L155203:
  00021	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 68	 add	 ecx, 104		; 00000068H
  00027	e8 00 00 00 00	 call	 ??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
  0002c	c3		 ret	 0
$L155208:
  0002d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155207
  00032	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinWnd@@QAE@XZ ENDP				; CSkinWnd::CSkinWnd
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	??1CSkinWnd@@UAE@XZ				; CSkinWnd::~CSkinWnd
;	COMDAT ??_GCSkinWnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinWnd@@UAEPAXI@Z PROC NEAR			; CSkinWnd::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L146578
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L146578:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCSkinWnd@@UAEPAXI@Z ENDP				; CSkinWnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::~_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
;	COMDAT ??1?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ PROC NEAR ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::~map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::~_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ENDP ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::~map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
;	COMDAT ??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ PROC NEAR ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ENDP ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
_TEXT	ENDS
PUBLIC	??Diterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEAAPAVCSkinCtrl@@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator*
PUBLIC	??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AV012@H@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator++
PUBLIC	??9iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator!=
PUBLIC	??0?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@ABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >
PUBLIC	??1?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::~list<CSkinCtrl *,std::allocator<CSkinCtrl *> >
PUBLIC	?begin@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::begin
PUBLIC	?end@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::end
PUBLIC	?push_back@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXABQAVCSkinCtrl@@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::push_back
PUBLIC	?clear@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXXZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::clear
PUBLIC	??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator*
PUBLIC	??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++
PUBLIC	??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator!=
PUBLIC	?begin@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin
PUBLIC	?end@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
EXTRN	?SelectNext@CWindowMgr@@QAEXPAVCSkinWnd@@_N@Z:NEAR ; CWindowMgr::SelectNext
EXTRN	?DelWindow@CWindowMgr@@QAEXPAVCSkinWnd@@H@Z:NEAR ; CWindowMgr::DelWindow
EXTRN	?g_pWindowMgr@@3PAVCWindowMgr@@A:DWORD		; g_pWindowMgr
xdata$x	SEGMENT
$T155239 DD	019930520H
	DD	05H
	DD	FLAT:$T155241
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155241 DD	0ffffffffH
	DD	FLAT:$L155233
	DD	00H
	DD	FLAT:$L155234
	DD	01H
	DD	FLAT:$L155235
	DD	02H
	DD	FLAT:$L155236
	DD	03H
	DD	FLAT:$L155237
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -96
_tossList$ = -24
_it$146894 = -32
_nIndex$146896 = -28
_pCtrl$146901 = -36
_it$146905 = -44
_nIndex$146907 = -40
_pCtrl$146912 = -48
$T155218 = -52
$T155219 = -56
$T155220 = -60
$T155221 = -64
$T155222 = -68
$T155223 = -72
$T155224 = -76
$T155225 = -80
$T155228 = -84
$T155229 = -88
$T155230 = -92
__$EHRec$ = -12
??1CSkinWnd@@UAE@XZ PROC NEAR				; CSkinWnd::~CSkinWnd

; 83   : {

  00164	55		 push	 ebp
  00165	8b ec		 mov	 ebp, esp
  00167	6a ff		 push	 -1
  00169	68 00 00 00 00	 push	 $L155240
  0016e	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00174	50		 push	 eax
  00175	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0017c	83 ec 5c	 sub	 esp, 92			; 0000005cH
  0017f	89 4d a0	 mov	 DWORD PTR _this$[ebp], ecx
  00182	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  00185	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinWnd@@6B@ ; CSkinWnd::`vftable'
  0018b	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3

; 84   : 	// build a list of objects to toss...
; 85   : 	std::list<CSkinCtrl *> tossList;

  00192	8d 4d cc	 lea	 ecx, DWORD PTR $T155218[ebp]
  00195	51		 push	 ecx
  00196	8d 4d e8	 lea	 ecx, DWORD PTR _tossList$[ebp]
  00199	e8 00 00 00 00	 call	 ??0?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@ABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >
  0019e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 86   : 
; 87   : 	if ( g_pWindowMgr ) 

  001a2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  001a9	74 22		 je	 SHORT $L146888

; 89   : 		g_pWindowMgr->SelectNext ( this );

  001ab	6a 01		 push	 1
  001ad	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  001b0	52		 push	 edx
  001b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  001b7	e8 00 00 00 00	 call	 ?SelectNext@CWindowMgr@@QAEXPAVCSkinWnd@@_N@Z ; CWindowMgr::SelectNext

; 90   : 		g_pWindowMgr->DelWindow  ( this, false );

  001bc	6a 00		 push	 0
  001be	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  001c1	50		 push	 eax
  001c2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  001c8	e8 00 00 00 00	 call	 ?DelWindow@CWindowMgr@@QAEXPAVCSkinWnd@@H@Z ; CWindowMgr::DelWindow
$L146888:

; 95   : 		std::map<CSkinObj, CSkinCtrl *>::iterator it = m_controlMap.begin();

  001cd	8d 4d c8	 lea	 ecx, DWORD PTR $T155219[ebp]
  001d0	51		 push	 ecx
  001d1	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  001d4	83 c1 48	 add	 ecx, 72			; 00000048H
  001d7	e8 00 00 00 00	 call	 ?begin@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin
  001dc	8b 10		 mov	 edx, DWORD PTR [eax]
  001de	89 55 e0	 mov	 DWORD PTR _it$146894[ebp], edx

; 96   : 
; 97   : 		int nIndex = 0;

  001e1	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _nIndex$146896[ebp], 0
$L146898:

; 98   : 
; 99   : 		while ( it != m_controlMap.end() ) {

  001e8	8d 45 c4	 lea	 eax, DWORD PTR $T155220[ebp]
  001eb	50		 push	 eax
  001ec	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ef	83 c1 48	 add	 ecx, 72			; 00000048H
  001f2	e8 00 00 00 00	 call	 ?end@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
  001f7	50		 push	 eax
  001f8	8d 4d e0	 lea	 ecx, DWORD PTR _it$146894[ebp]
  001fb	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  00200	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00205	85 c0		 test	 eax, eax
  00207	74 30		 je	 SHORT $L146899

; 100  : 			CSkinCtrl *pCtrl = (*it).second;

  00209	8d 4d e0	 lea	 ecx, DWORD PTR _it$146894[ebp]
  0020c	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator*
  00211	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00214	89 4d dc	 mov	 DWORD PTR _pCtrl$146901[ebp], ecx

; 101  : 	
; 102  : 			if ( pCtrl ) {

  00217	83 7d dc 00	 cmp	 DWORD PTR _pCtrl$146901[ebp], 0
  0021b	74 0c		 je	 SHORT $L146902

; 103  : //				TRACE ( "adding index %d, 0x%x\n", nIndex++, pCtrl );
; 104  : 				tossList.push_back ( pCtrl );

  0021d	8d 55 dc	 lea	 edx, DWORD PTR _pCtrl$146901[ebp]
  00220	52		 push	 edx
  00221	8d 4d e8	 lea	 ecx, DWORD PTR _tossList$[ebp]
  00224	e8 00 00 00 00	 call	 ?push_back@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXABQAVCSkinCtrl@@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::push_back
$L146902:

; 106  : 	
; 107  : 			it++;

  00229	6a 00		 push	 0
  0022b	8d 45 c0	 lea	 eax, DWORD PTR $T155221[ebp]
  0022e	50		 push	 eax
  0022f	8d 4d e0	 lea	 ecx, DWORD PTR _it$146894[ebp]
  00232	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++

; 108  : 		}

  00237	eb af		 jmp	 SHORT $L146898
$L146899:

; 113  : 		std::list<CSkinCtrl *>::iterator it = tossList.begin();

  00239	8d 4d bc	 lea	 ecx, DWORD PTR $T155222[ebp]
  0023c	51		 push	 ecx
  0023d	8d 4d e8	 lea	 ecx, DWORD PTR _tossList$[ebp]
  00240	e8 00 00 00 00	 call	 ?begin@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::begin
  00245	8b 10		 mov	 edx, DWORD PTR [eax]
  00247	89 55 d4	 mov	 DWORD PTR _it$146905[ebp], edx

; 114  : 
; 115  : 		int nIndex = 0;

  0024a	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _nIndex$146907[ebp], 0
$L146909:

; 116  : 
; 117  : 		while ( it != tossList.end() ) {

  00251	8d 45 b8	 lea	 eax, DWORD PTR $T155223[ebp]
  00254	50		 push	 eax
  00255	8d 4d e8	 lea	 ecx, DWORD PTR _tossList$[ebp]
  00258	e8 00 00 00 00	 call	 ?end@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::end
  0025d	50		 push	 eax
  0025e	8d 4d d4	 lea	 ecx, DWORD PTR _it$146905[ebp]
  00261	e8 00 00 00 00	 call	 ??9iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator!=
  00266	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0026b	85 c0		 test	 eax, eax
  0026d	74 4d		 je	 SHORT $L146910

; 118  : 			CSkinCtrl *pCtrl = *it;

  0026f	8d 4d d4	 lea	 ecx, DWORD PTR _it$146905[ebp]
  00272	e8 00 00 00 00	 call	 ??Diterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEAAPAVCSkinCtrl@@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator*
  00277	8b 08		 mov	 ecx, DWORD PTR [eax]
  00279	89 4d d0	 mov	 DWORD PTR _pCtrl$146912[ebp], ecx

; 119  : 
; 120  : //			TRACE ( "tossing index %d, 0x%x\n", nIndex++, pCtrl );
; 121  : 
; 122  : 			if ( pCtrl )

  0027c	83 7d d0 00	 cmp	 DWORD PTR _pCtrl$146912[ebp], 0
  00280	74 2a		 je	 SHORT $L155227

; 123  : 				delete pCtrl;

  00282	8b 55 d0	 mov	 edx, DWORD PTR _pCtrl$146912[ebp]
  00285	89 55 b0	 mov	 DWORD PTR $T155225[ebp], edx
  00288	8b 45 b0	 mov	 eax, DWORD PTR $T155225[ebp]
  0028b	89 45 b4	 mov	 DWORD PTR $T155224[ebp], eax
  0028e	83 7d b4 00	 cmp	 DWORD PTR $T155224[ebp], 0
  00292	74 11		 je	 SHORT $L155226
  00294	6a 01		 push	 1
  00296	8b 4d b4	 mov	 ecx, DWORD PTR $T155224[ebp]
  00299	8b 11		 mov	 edx, DWORD PTR [ecx]
  0029b	8b 4d b4	 mov	 ecx, DWORD PTR $T155224[ebp]
  0029e	ff 12		 call	 DWORD PTR [edx]
  002a0	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  002a3	eb 07		 jmp	 SHORT $L155227
$L155226:
  002a5	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR -100+[ebp], 0
$L155227:

; 124  : 
; 125  : 			it++;

  002ac	6a 00		 push	 0
  002ae	8d 45 ac	 lea	 eax, DWORD PTR $T155228[ebp]
  002b1	50		 push	 eax
  002b2	8d 4d d4	 lea	 ecx, DWORD PTR _it$146905[ebp]
  002b5	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AV012@H@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator++

; 126  : 		}

  002ba	eb 95		 jmp	 SHORT $L146909
$L146910:

; 127  : 
; 128  : 		tossList.clear();

  002bc	8d 4d e8	 lea	 ecx, DWORD PTR _tossList$[ebp]
  002bf	e8 00 00 00 00	 call	 ?clear@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXXZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::clear

; 130  : 
; 131  : 	if ( NULL != m_pSkinForm ) {

  002c4	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  002c7	83 79 7c 00	 cmp	 DWORD PTR [ecx+124], 0
  002cb	74 38		 je	 SHORT $L146917

; 132  : 		delete m_pSkinForm;

  002cd	8b 55 a0	 mov	 edx, DWORD PTR _this$[ebp]
  002d0	8b 42 7c	 mov	 eax, DWORD PTR [edx+124]
  002d3	89 45 a4	 mov	 DWORD PTR $T155230[ebp], eax
  002d6	8b 4d a4	 mov	 ecx, DWORD PTR $T155230[ebp]
  002d9	89 4d a8	 mov	 DWORD PTR $T155229[ebp], ecx
  002dc	83 7d a8 00	 cmp	 DWORD PTR $T155229[ebp], 0
  002e0	74 12		 je	 SHORT $L155231
  002e2	6a 01		 push	 1
  002e4	8b 55 a8	 mov	 edx, DWORD PTR $T155229[ebp]
  002e7	8b 02		 mov	 eax, DWORD PTR [edx]
  002e9	8b 4d a8	 mov	 ecx, DWORD PTR $T155229[ebp]
  002ec	ff 50 04	 call	 DWORD PTR [eax+4]
  002ef	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  002f2	eb 07		 jmp	 SHORT $L155232
$L155231:
  002f4	c7 45 98 00 00
	00 00		 mov	 DWORD PTR -104+[ebp], 0
$L155232:

; 133  : 		m_pSkinForm = NULL;

  002fb	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  002fe	c7 41 7c 00 00
	00 00		 mov	 DWORD PTR [ecx+124], 0
$L146917:

; 135  : }

  00305	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00309	8d 4d e8	 lea	 ecx, DWORD PTR _tossList$[ebp]
  0030c	e8 00 00 00 00	 call	 ??1?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::~list<CSkinCtrl *,std::allocator<CSkinCtrl *> >
  00311	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00315	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  00318	83 c1 68	 add	 ecx, 104		; 00000068H
  0031b	e8 00 00 00 00	 call	 ??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
  00320	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00324	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  00327	83 c1 58	 add	 ecx, 88			; 00000058H
  0032a	e8 00 00 00 00	 call	 ??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
  0032f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00333	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  00336	83 c1 48	 add	 ecx, 72			; 00000048H
  00339	e8 00 00 00 00	 call	 ??1?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::~map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
  0033e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00345	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  00348	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  0034d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00350	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00357	8b e5		 mov	 esp, ebp
  00359	5d		 pop	 ebp
  0035a	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155233:
  00037	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??1CWnd@@UAE@XZ		; CWnd::~CWnd
  0003f	c3		 ret	 0
$L155234:
  00040	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 c1 48	 add	 ecx, 72			; 00000048H
  00046	e8 00 00 00 00	 call	 ??1?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::~map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
  0004b	c3		 ret	 0
$L155235:
  0004c	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	83 c1 58	 add	 ecx, 88			; 00000058H
  00052	e8 00 00 00 00	 call	 ??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
  00057	c3		 ret	 0
$L155236:
  00058	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	83 c1 68	 add	 ecx, 104		; 00000068H
  0005e	e8 00 00 00 00	 call	 ??1?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
  00063	c3		 ret	 0
$L155237:
  00064	8d 4d e8	 lea	 ecx, DWORD PTR _tossList$[ebp]
  00067	e8 00 00 00 00	 call	 ??1?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::~list<CSkinCtrl *,std::allocator<CSkinCtrl *> >
  0006c	c3		 ret	 0
$L155240:
  0006d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155239
  00072	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CSkinWnd@@UAE@XZ ENDP				; CSkinWnd::~CSkinWnd
PUBLIC	?PostMessageA@CWnd@@QAEHIIJ@Z			; CWnd::PostMessageA
PUBLIC	?EndTracking@CSkinWnd@@QAEXAAVCSkinCtrl@@@Z	; CSkinWnd::EndTracking
PUBLIC	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetWindowRect
PUBLIC	?InvalidateRect@CWnd@@QAEXPBUtagRECT@@H@Z	; CWnd::InvalidateRect
EXTRN	__imp__IsWindow@4:NEAR
EXTRN	?g_pSCIWnd@@3PAVCSCIWnd@@A:DWORD		; g_pSCIWnd
_TEXT	SEGMENT
_this$ = -52
_inv$146927 = -32
_sci$146928 = -16
_self$146929 = -48
?CloseSelf@CSkinWnd@@UAEX_N@Z PROC NEAR			; CSkinWnd::CloseSelf

; 139  : {

  0035b	55		 push	 ebp
  0035c	8b ec		 mov	 ebp, esp
  0035e	83 ec 34	 sub	 esp, 52			; 00000034H
  00361	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 140  :     // Select the next window to view
; 141  :     if ( g_pWindowMgr ) { 

  00364	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  0036b	74 16		 je	 SHORT $L146924

; 142  : 	    g_pWindowMgr->SelectNext ( this, m_bCanFocus );

  0036d	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00370	8a 48 45	 mov	 cl, BYTE PTR [eax+69]
  00373	51		 push	 ecx
  00374	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00377	52		 push	 edx
  00378	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  0037e	e8 00 00 00 00	 call	 ?SelectNext@CWindowMgr@@QAEXPAVCSkinWnd@@_N@Z ; CWindowMgr::SelectNext
$L146924:

; 144  : 
; 145  : 	// if I am the current tracking window - Stop tracking I am going away.
; 146  : 	if ( g_pTrackingWindow == this )

  00383	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pTrackingWindow@@3PAVCSkinWnd@@A ; g_pTrackingWindow
  00388	3b 45 cc	 cmp	 eax, DWORD PTR _this$[ebp]
  0038b	75 12		 jne	 SHORT $L146925

; 147  : 		EndTracking( *m_pTrackingCtrl );

  0038d	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00390	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00396	52		 push	 edx
  00397	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0039a	e8 00 00 00 00	 call	 ?EndTracking@CSkinWnd@@QAEXAAVCSkinCtrl@@@Z ; CSkinWnd::EndTracking
$L146925:

; 148  : 
; 149  : 	// SCI window does not appear to invalidate properly
; 150  : 	// Possibly wrong coordinates from the skin system??
; 151  : 	// Anyway solution is to force the redraw ourselves.
; 152  : 	if ( g_pSCIWnd && IsWindow(m_hWnd) )

  0039f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A, 0 ; g_pSCIWnd
  003a6	0f 84 fd 00 00
	00		 je	 $L146930
  003ac	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  003af	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  003b2	51		 push	 ecx
  003b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  003b9	85 c0		 test	 eax, eax
  003bb	0f 84 e8 00 00
	00		 je	 $L146930

; 154  : 		RECT inv, sci, self;
; 155  : 
; 156  : 		// get window positions relative to screen
; 157  : 		g_pSCIWnd->GetWindowRect(&sci);

  003c1	8d 55 f0	 lea	 edx, DWORD PTR _sci$146928[ebp]
  003c4	52		 push	 edx
  003c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A ; g_pSCIWnd
  003cb	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 158  : 		this->GetWindowRect(&self);

  003d0	8d 45 d0	 lea	 eax, DWORD PTR _self$146929[ebp]
  003d3	50		 push	 eax
  003d4	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  003d7	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 159  : 
; 160  : 		// calculate overlap area relative to sci window
; 161  : 		inv.left   = self.left   - sci.left;

  003dc	8b 4d d0	 mov	 ecx, DWORD PTR _self$146929[ebp]
  003df	2b 4d f0	 sub	 ecx, DWORD PTR _sci$146928[ebp]
  003e2	89 4d e0	 mov	 DWORD PTR _inv$146927[ebp], ecx

; 162  : 		inv.right  = self.right  - sci.left;

  003e5	8b 55 d8	 mov	 edx, DWORD PTR _self$146929[ebp+8]
  003e8	2b 55 f0	 sub	 edx, DWORD PTR _sci$146928[ebp]
  003eb	89 55 e8	 mov	 DWORD PTR _inv$146927[ebp+8], edx

; 163  : 		inv.top    = self.top    - sci.top;

  003ee	8b 45 d4	 mov	 eax, DWORD PTR _self$146929[ebp+4]
  003f1	2b 45 f4	 sub	 eax, DWORD PTR _sci$146928[ebp+4]
  003f4	89 45 e4	 mov	 DWORD PTR _inv$146927[ebp+4], eax

; 164  : 		inv.bottom = self.bottom - sci.top;

  003f7	8b 4d dc	 mov	 ecx, DWORD PTR _self$146929[ebp+12]
  003fa	2b 4d f4	 sub	 ecx, DWORD PTR _sci$146928[ebp+4]
  003fd	89 4d ec	 mov	 DWORD PTR _inv$146927[ebp+12], ecx

; 165  : 
; 166  : 		sci.right  = sci.right  - sci.left;

  00400	8b 55 f8	 mov	 edx, DWORD PTR _sci$146928[ebp+8]
  00403	2b 55 f0	 sub	 edx, DWORD PTR _sci$146928[ebp]
  00406	89 55 f8	 mov	 DWORD PTR _sci$146928[ebp+8], edx

; 167  : 		sci.bottom = sci.bottom - sci.top;

  00409	8b 45 fc	 mov	 eax, DWORD PTR _sci$146928[ebp+12]
  0040c	2b 45 f4	 sub	 eax, DWORD PTR _sci$146928[ebp+4]
  0040f	89 45 fc	 mov	 DWORD PTR _sci$146928[ebp+12], eax

; 168  : 		sci.left   = 0;

  00412	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _sci$146928[ebp], 0

; 169  : 		sci.top    = 0;

  00419	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _sci$146928[ebp+4], 0

; 173  : 			(inv.left <= sci.right || inv.right <= sci.right) &&
; 174  : 			(inv.top >= sci.top || inv.bottom >= sci.top) &&
; 175  : 			(inv.top <= sci.bottom || inv.bottom <= sci.bottom))

  00420	8b 4d e0	 mov	 ecx, DWORD PTR _inv$146927[ebp]
  00423	3b 4d f0	 cmp	 ecx, DWORD PTR _sci$146928[ebp]
  00426	7d 08		 jge	 SHORT $L146931
  00428	8b 55 e8	 mov	 edx, DWORD PTR _inv$146927[ebp+8]
  0042b	3b 55 f0	 cmp	 edx, DWORD PTR _sci$146928[ebp]
  0042e	7c 79		 jl	 SHORT $L146930
$L146931:
  00430	8b 45 e0	 mov	 eax, DWORD PTR _inv$146927[ebp]
  00433	3b 45 f8	 cmp	 eax, DWORD PTR _sci$146928[ebp+8]
  00436	7e 08		 jle	 SHORT $L146932
  00438	8b 4d e8	 mov	 ecx, DWORD PTR _inv$146927[ebp+8]
  0043b	3b 4d f8	 cmp	 ecx, DWORD PTR _sci$146928[ebp+8]
  0043e	7f 69		 jg	 SHORT $L146930
$L146932:
  00440	8b 55 e4	 mov	 edx, DWORD PTR _inv$146927[ebp+4]
  00443	3b 55 f4	 cmp	 edx, DWORD PTR _sci$146928[ebp+4]
  00446	7d 08		 jge	 SHORT $L146933
  00448	8b 45 ec	 mov	 eax, DWORD PTR _inv$146927[ebp+12]
  0044b	3b 45 f4	 cmp	 eax, DWORD PTR _sci$146928[ebp+4]
  0044e	7c 59		 jl	 SHORT $L146930
$L146933:
  00450	8b 4d e4	 mov	 ecx, DWORD PTR _inv$146927[ebp+4]
  00453	3b 4d fc	 cmp	 ecx, DWORD PTR _sci$146928[ebp+12]
  00456	7e 08		 jle	 SHORT $L146934
  00458	8b 55 ec	 mov	 edx, DWORD PTR _inv$146927[ebp+12]
  0045b	3b 55 fc	 cmp	 edx, DWORD PTR _sci$146928[ebp+12]
  0045e	7f 49		 jg	 SHORT $L146930
$L146934:

; 177  : 			// clip to sci area
; 178  : 			if (inv.left   < sci.left)   inv.left   = sci.left;

  00460	8b 45 e0	 mov	 eax, DWORD PTR _inv$146927[ebp]
  00463	3b 45 f0	 cmp	 eax, DWORD PTR _sci$146928[ebp]
  00466	7d 06		 jge	 SHORT $L146935
  00468	8b 4d f0	 mov	 ecx, DWORD PTR _sci$146928[ebp]
  0046b	89 4d e0	 mov	 DWORD PTR _inv$146927[ebp], ecx
$L146935:

; 179  : 			if (inv.top    < sci.top)    inv.top    = sci.top;

  0046e	8b 55 e4	 mov	 edx, DWORD PTR _inv$146927[ebp+4]
  00471	3b 55 f4	 cmp	 edx, DWORD PTR _sci$146928[ebp+4]
  00474	7d 06		 jge	 SHORT $L146936
  00476	8b 45 f4	 mov	 eax, DWORD PTR _sci$146928[ebp+4]
  00479	89 45 e4	 mov	 DWORD PTR _inv$146927[ebp+4], eax
$L146936:

; 180  : 			if (inv.bottom > sci.bottom) inv.bottom = sci.bottom;

  0047c	8b 4d ec	 mov	 ecx, DWORD PTR _inv$146927[ebp+12]
  0047f	3b 4d fc	 cmp	 ecx, DWORD PTR _sci$146928[ebp+12]
  00482	7e 06		 jle	 SHORT $L146937
  00484	8b 55 fc	 mov	 edx, DWORD PTR _sci$146928[ebp+12]
  00487	89 55 ec	 mov	 DWORD PTR _inv$146927[ebp+12], edx
$L146937:

; 181  : 			if (inv.right  > sci.right)  inv.right  = sci.right;

  0048a	8b 45 e8	 mov	 eax, DWORD PTR _inv$146927[ebp+8]
  0048d	3b 45 f8	 cmp	 eax, DWORD PTR _sci$146928[ebp+8]
  00490	7e 06		 jle	 SHORT $L146938
  00492	8b 4d f8	 mov	 ecx, DWORD PTR _sci$146928[ebp+8]
  00495	89 4d e8	 mov	 DWORD PTR _inv$146927[ebp+8], ecx
$L146938:

; 182  : 
; 183  : 			// Refresh SCI Window to stop artifacts
; 184  : 			g_pSCIWnd->InvalidateRect(&inv, FALSE);

  00498	6a 00		 push	 0
  0049a	8d 55 e0	 lea	 edx, DWORD PTR _inv$146927[ebp]
  0049d	52		 push	 edx
  0049e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A ; g_pSCIWnd
  004a4	e8 00 00 00 00	 call	 ?InvalidateRect@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::InvalidateRect
$L146930:

; 187  : 
; 188  : 	SetCloseSelfCalled( true );

  004a9	6a 01		 push	 1
  004ab	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  004ae	e8 00 00 00 00	 call	 ?SetCloseSelfCalled@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetCloseSelfCalled

; 189  : 
; 190  :     if (IsWindow(m_hWnd))

  004b3	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  004b6	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  004b9	51		 push	 ecx
  004ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  004c0	85 c0		 test	 eax, eax
  004c2	74 0e		 je	 SHORT $L146939

; 192  :         PostMessage( WM_CLOSE );

  004c4	6a 00		 push	 0
  004c6	6a 00		 push	 0
  004c8	6a 10		 push	 16			; 00000010H
  004ca	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  004cd	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA
$L146939:

; 194  : }

  004d2	8b e5		 mov	 esp, ebp
  004d4	5d		 pop	 ebp
  004d5	c2 04 00	 ret	 4
?CloseSelf@CSkinWnd@@UAEX_N@Z ENDP			; CSkinWnd::CloseSelf
_TEXT	ENDS
PUBLIC	?GetRootSkinObj@CSkinWnd@@QAE?AVCSkinObj@@XZ	; CSkinWnd::GetRootSkinObj
EXTRN	?GetRootSkinObj@CSkinForm@@QAE?AVCSkinObj@@XZ:NEAR ; CSkinForm::GetRootSkinObj
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T155245 = -4
?GetRootSkinObj@CSkinWnd@@QAE?AVCSkinObj@@XZ PROC NEAR	; CSkinWnd::GetRootSkinObj

; 198  : {

  004d8	55		 push	 ebp
  004d9	8b ec		 mov	 ebp, esp
  004db	83 ec 08	 sub	 esp, 8
  004de	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  004e1	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T155245[ebp], 0

; 199  : 	return m_pSkinForm->GetRootSkinObj();

  004e8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004eb	50		 push	 eax
  004ec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004ef	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  004f2	e8 00 00 00 00	 call	 ?GetRootSkinObj@CSkinForm@@QAE?AVCSkinObj@@XZ ; CSkinForm::GetRootSkinObj
  004f7	8b 55 fc	 mov	 edx, DWORD PTR $T155245[ebp]
  004fa	83 ca 01	 or	 edx, 1
  004fd	89 55 fc	 mov	 DWORD PTR $T155245[ebp], edx
  00500	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 200  : }

  00503	8b e5		 mov	 esp, ebp
  00505	5d		 pop	 ebp
  00506	c2 04 00	 ret	 4
?GetRootSkinObj@CSkinWnd@@QAE?AVCSkinObj@@XZ ENDP	; CSkinWnd::GetRootSkinObj
_this$ = -4
?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z PROC NEAR	; CSkinWnd::DisableGameModal

; 204  : {

  00509	55		 push	 ebp
  0050a	8b ec		 mov	 ebp, esp
  0050c	51		 push	 ecx
  0050d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 205  : }

  00510	8b e5		 mov	 esp, ebp
  00512	5d		 pop	 ebp
  00513	c2 0c 00	 ret	 12			; 0000000cH
?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z ENDP		; CSkinWnd::DisableGameModal
_this$ = -4
?EnableGameModal@CSkinWnd@@UAEXHPAH@Z PROC NEAR		; CSkinWnd::EnableGameModal

; 209  : {

  00516	55		 push	 ebp
  00517	8b ec		 mov	 ebp, esp
  00519	51		 push	 ecx
  0051a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 210  : }

  0051d	8b e5		 mov	 esp, ebp
  0051f	5d		 pop	 ebp
  00520	c2 08 00	 ret	 8
?EnableGameModal@CSkinWnd@@UAEXHPAH@Z ENDP		; CSkinWnd::EnableGameModal
_TEXT	ENDS
EXTRN	?EnableWindow@CWnd@@QAEHH@Z:NEAR		; CWnd::EnableWindow
_TEXT	SEGMENT
_this$ = -4
?Disable@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Disable

; 214  : {

  00523	55		 push	 ebp
  00524	8b ec		 mov	 ebp, esp
  00526	51		 push	 ecx
  00527	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 215  :     if ( m_nDisableWindow == 0 )

  0052a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0052d	83 b8 8c 00 00
	00 00		 cmp	 DWORD PTR [eax+140], 0
  00534	75 0a		 jne	 SHORT $L146959

; 216  : 	    EnableWindow( false );

  00536	6a 00		 push	 0
  00538	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0053b	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$L146959:

; 217  : 
; 218  :     m_nDisableWindow++;

  00540	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00543	8b 91 8c 00 00
	00		 mov	 edx, DWORD PTR [ecx+140]
  00549	83 c2 01	 add	 edx, 1
  0054c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0054f	89 90 8c 00 00
	00		 mov	 DWORD PTR [eax+140], edx

; 219  : }

  00555	8b e5		 mov	 esp, ebp
  00557	5d		 pop	 ebp
  00558	c3		 ret	 0
?Disable@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Disable
_this$ = -4
?Enable@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Enable

; 223  : {

  00559	55		 push	 ebp
  0055a	8b ec		 mov	 ebp, esp
  0055c	51		 push	 ecx
  0055d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 224  :     if ( m_nDisableWindow > 0 ) m_nDisableWindow--;

  00560	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00563	83 b8 8c 00 00
	00 00		 cmp	 DWORD PTR [eax+140], 0
  0056a	7e 15		 jle	 SHORT $L146963
  0056c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0056f	8b 91 8c 00 00
	00		 mov	 edx, DWORD PTR [ecx+140]
  00575	83 ea 01	 sub	 edx, 1
  00578	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0057b	89 90 8c 00 00
	00		 mov	 DWORD PTR [eax+140], edx
$L146963:

; 225  : 
; 226  :     if ( m_nDisableWindow == 0 )

  00581	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00584	83 b9 8c 00 00
	00 00		 cmp	 DWORD PTR [ecx+140], 0
  0058b	75 0a		 jne	 SHORT $L146964

; 227  :  	    EnableWindow( true );

  0058d	6a 01		 push	 1
  0058f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00592	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$L146964:

; 228  : }

  00597	8b e5		 mov	 esp, ebp
  00599	5d		 pop	 ebp
  0059a	c3		 ret	 0
?Enable@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Enable
_$E323	PROC NEAR
  0059b	55		 push	 ebp
  0059c	8b ec		 mov	 ebp, esp
  0059e	e8 00 00 00 00	 call	 _$E319
  005a3	e8 00 00 00 00	 call	 _$E322
  005a8	5d		 pop	 ebp
  005a9	c3		 ret	 0
_$E323	ENDP
_TEXT	ENDS
PUBLIC	??0?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@ABU?$less@PAUHWND__@@@1@ABV?$allocator@PAVCSkinWnd@@@1@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
_TEXT	SEGMENT
$T155253 = -4
$T155254 = -8
_$E319	PROC NEAR

; 231  : std::map<HWND, CSkinWnd *> CSkinWnd::m_SkinWndHandleMap;

  005aa	55		 push	 ebp
  005ab	8b ec		 mov	 ebp, esp
  005ad	83 ec 08	 sub	 esp, 8
  005b0	8d 45 fc	 lea	 eax, DWORD PTR $T155253[ebp]
  005b3	50		 push	 eax
  005b4	8d 4d f8	 lea	 ecx, DWORD PTR $T155254[ebp]
  005b7	51		 push	 ecx
  005b8	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_SkinWndHandleMap@CSkinWnd@@0V?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@A
  005bd	e8 00 00 00 00	 call	 ??0?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@ABU?$less@PAUHWND__@@@1@ABV?$allocator@PAVCSkinWnd@@@1@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
  005c2	8b e5		 mov	 esp, ebp
  005c4	5d		 pop	 ebp
  005c5	c3		 ret	 0
_$E319	ENDP
_TEXT	ENDS
EXTRN	_atexit:NEAR
_TEXT	SEGMENT
_$E322	PROC NEAR
  005c6	55		 push	 ebp
  005c7	8b ec		 mov	 ebp, esp
  005c9	68 00 00 00 00	 push	 OFFSET FLAT:_$E320
  005ce	e8 00 00 00 00	 call	 _atexit
  005d3	83 c4 04	 add	 esp, 4
  005d6	5d		 pop	 ebp
  005d7	c3		 ret	 0
_$E322	ENDP
_TEXT	ENDS
PUBLIC	??1?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@XZ ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::~map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
_BSS	SEGMENT
_$S321	DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_$E320	PROC NEAR
  005d8	55		 push	 ebp
  005d9	8b ec		 mov	 ebp, esp
  005db	33 c0		 xor	 eax, eax
  005dd	a0 00 00 00 00	 mov	 al, BYTE PTR _$S321
  005e2	83 e0 01	 and	 eax, 1
  005e5	85 c0		 test	 eax, eax
  005e7	75 19		 jne	 SHORT $L146979
  005e9	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR _$S321
  005ef	80 c9 01	 or	 cl, 1
  005f2	88 0d 00 00 00
	00		 mov	 BYTE PTR _$S321, cl
  005f8	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_SkinWndHandleMap@CSkinWnd@@0V?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@A
  005fd	e8 00 00 00 00	 call	 ??1?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@XZ ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::~map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
$L146979:
  00602	5d		 pop	 ebp
  00603	c3		 ret	 0
_$E320	ENDP
_TEXT	ENDS
PUBLIC	??1?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::~_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
;	COMDAT ??1?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@XZ PROC NEAR ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::~map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::~_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@XZ ENDP ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::~map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
_TEXT	ENDS
PUBLIC	??A?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEAAPAVCSkinWnd@@ABQAUHWND__@@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::operator[]
PUBLIC	?AddToHandleMap@CSkinWnd@@IAEXXZ		; CSkinWnd::AddToHandleMap
_TEXT	SEGMENT
_this$ = -4
?AddToHandleMap@CSkinWnd@@IAEXXZ PROC NEAR		; CSkinWnd::AddToHandleMap

; 235  : {

  00604	55		 push	 ebp
  00605	8b ec		 mov	 ebp, esp
  00607	51		 push	 ecx
  00608	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 236  : 	m_SkinWndHandleMap[m_hWnd] = this;

  0060b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0060e	83 c0 20	 add	 eax, 32			; 00000020H
  00611	50		 push	 eax
  00612	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_SkinWndHandleMap@CSkinWnd@@0V?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@A
  00617	e8 00 00 00 00	 call	 ??A?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEAAPAVCSkinWnd@@ABQAUHWND__@@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::operator[]
  0061c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0061f	89 08		 mov	 DWORD PTR [eax], ecx

; 237  : }

  00621	8b e5		 mov	 esp, ebp
  00623	5d		 pop	 ebp
  00624	c3		 ret	 0
?AddToHandleMap@CSkinWnd@@IAEXXZ ENDP			; CSkinWnd::AddToHandleMap
_TEXT	ENDS
PUBLIC	?erase@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEIABQAUHWND__@@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase
PUBLIC	?DeleteFromHandleMap@CSkinWnd@@IAEXXZ		; CSkinWnd::DeleteFromHandleMap
_TEXT	SEGMENT
_this$ = -4
?DeleteFromHandleMap@CSkinWnd@@IAEXXZ PROC NEAR		; CSkinWnd::DeleteFromHandleMap

; 241  : {

  00625	55		 push	 ebp
  00626	8b ec		 mov	 ebp, esp
  00628	51		 push	 ecx
  00629	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 242  : 	m_SkinWndHandleMap.erase ( m_hWnd );

  0062c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0062f	83 c0 20	 add	 eax, 32			; 00000020H
  00632	50		 push	 eax
  00633	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_SkinWndHandleMap@CSkinWnd@@0V?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@A
  00638	e8 00 00 00 00	 call	 ?erase@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEIABQAUHWND__@@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase

; 243  : }

  0063d	8b e5		 mov	 esp, ebp
  0063f	5d		 pop	 ebp
  00640	c3		 ret	 0
?DeleteFromHandleMap@CSkinWnd@@IAEXXZ ENDP		; CSkinWnd::DeleteFromHandleMap
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator*
PUBLIC	??8iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator==
PUBLIC	?end@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@XZ ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end
PUBLIC	?find@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@ABQAUHWND__@@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::find
PUBLIC	?FromHandle@CSkinWnd@@SAPAV1@PAUHWND__@@@Z	; CSkinWnd::FromHandle
_TEXT	SEGMENT
_hWnd$ = 8
_it$ = -4
$T155262 = -8
$T155263 = -12
?FromHandle@CSkinWnd@@SAPAV1@PAUHWND__@@@Z PROC NEAR	; CSkinWnd::FromHandle

; 247  : {

  00641	55		 push	 ebp
  00642	8b ec		 mov	 ebp, esp
  00644	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 248  : 	std::map<HWND, CSkinWnd *>::iterator it = m_SkinWndHandleMap.find ( hWnd );

  00647	8d 45 08	 lea	 eax, DWORD PTR _hWnd$[ebp]
  0064a	50		 push	 eax
  0064b	8d 4d f8	 lea	 ecx, DWORD PTR $T155262[ebp]
  0064e	51		 push	 ecx
  0064f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_SkinWndHandleMap@CSkinWnd@@0V?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@A
  00654	e8 00 00 00 00	 call	 ?find@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@ABQAUHWND__@@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::find
  00659	8b 10		 mov	 edx, DWORD PTR [eax]
  0065b	89 55 fc	 mov	 DWORD PTR _it$[ebp], edx

; 249  : 
; 250  : 	if ( it == m_SkinWndHandleMap.end() )

  0065e	8d 45 f4	 lea	 eax, DWORD PTR $T155263[ebp]
  00661	50		 push	 eax
  00662	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?m_SkinWndHandleMap@CSkinWnd@@0V?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@A
  00667	e8 00 00 00 00	 call	 ?end@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@XZ ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end
  0066c	50		 push	 eax
  0066d	8d 4d fc	 lea	 ecx, DWORD PTR _it$[ebp]
  00670	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator==
  00675	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0067a	85 c0		 test	 eax, eax
  0067c	74 04		 je	 SHORT $L147011

; 251  : 		return NULL;

  0067e	33 c0		 xor	 eax, eax
  00680	eb 0b		 jmp	 SHORT $L147002
$L147011:

; 252  : 
; 253  : 	return (*it).second;

  00682	8d 4d fc	 lea	 ecx, DWORD PTR _it$[ebp]
  00685	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator*
  0068a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$L147002:

; 254  : }

  0068d	8b e5		 mov	 esp, ebp
  0068f	5d		 pop	 ebp
  00690	c3		 ret	 0
?FromHandle@CSkinWnd@@SAPAV1@PAUHWND__@@@Z ENDP		; CSkinWnd::FromHandle
_TEXT	ENDS
PUBLIC	?GetPriority@CSkinWnd@@QAEHXZ			; CSkinWnd::GetPriority
_TEXT	SEGMENT
_this$ = -4
?GetPriority@CSkinWnd@@QAEHXZ PROC NEAR			; CSkinWnd::GetPriority

; 258  : {

  00691	55		 push	 ebp
  00692	8b ec		 mov	 ebp, esp
  00694	51		 push	 ecx
  00695	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 259  : 	return m_nPriority;

  00698	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0069b	8b 40 40	 mov	 eax, DWORD PTR [eax+64]

; 260  : }

  0069e	8b e5		 mov	 esp, ebp
  006a0	5d		 pop	 ebp
  006a1	c3		 ret	 0
?GetPriority@CSkinWnd@@QAEHXZ ENDP			; CSkinWnd::GetPriority
_TEXT	ENDS
PUBLIC	?SetPriority@CSkinWnd@@QAEXH@Z			; CSkinWnd::SetPriority
_TEXT	SEGMENT
_nPriority$ = 8
_this$ = -4
?SetPriority@CSkinWnd@@QAEXH@Z PROC NEAR		; CSkinWnd::SetPriority

; 264  : {

  006a2	55		 push	 ebp
  006a3	8b ec		 mov	 ebp, esp
  006a5	51		 push	 ecx
  006a6	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 265  : 	assert ( m_nPriority == swPriUnknown );
; 266  : 	m_nPriority = nPriority;

  006a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  006ac	8b 4d 08	 mov	 ecx, DWORD PTR _nPriority$[ebp]
  006af	89 48 40	 mov	 DWORD PTR [eax+64], ecx

; 267  : }

  006b2	8b e5		 mov	 esp, ebp
  006b4	5d		 pop	 ebp
  006b5	c2 04 00	 ret	 4
?SetPriority@CSkinWnd@@QAEXH@Z ENDP			; CSkinWnd::SetPriority
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@PBUtagRECT@@@Z			; CRect::CRect
PUBLIC	?AfxGetApp@@YGPAVCWinApp@@XZ			; AfxGetApp
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	?LoadStandardIcon@CWinApp@@QBEPAUHICON__@@PBD@Z	; CWinApp::LoadStandardIcon
PUBLIC	?CreateClassPopup@CSkinWnd@@QAEHPBD00ABVCRect@@HHH@Z ; CSkinWnd::CreateClassPopup
PUBLIC	?CreatePopup@CSkinWnd@@QAEHPBD0ABVCRect@@HHH@Z	; CSkinWnd::CreatePopup
EXTRN	??0CString@@QAE@PBD@Z:NEAR			; CString::CString
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
EXTRN	?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z:NEAR ; AfxRegisterWndClass
xdata$x	SEGMENT
$T155271 DD	019930520H
	DD	01H
	DD	FLAT:$T155273
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155273 DD	0ffffffffH
	DD	FLAT:$L155269
xdata$x	ENDS
_TEXT	SEGMENT
_lpszSkinPath$ = 8
_lpszCaption$ = 12
_rect$ = 16
_bAllowResize$ = 20
_bCreateControls$ = 24
_bAlert$ = 28
_this$ = -40
_strWndClass$ = -16
$T155267 = -20
$T155268 = -36
__$EHRec$ = -12
?CreatePopup@CSkinWnd@@QAEHPBD0ABVCRect@@HHH@Z PROC NEAR ; CSkinWnd::CreatePopup

; 270  : {

  006b8	55		 push	 ebp
  006b9	8b ec		 mov	 ebp, esp
  006bb	6a ff		 push	 -1
  006bd	68 00 00 00 00	 push	 $L155272
  006c2	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  006c8	50		 push	 eax
  006c9	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  006d0	83 ec 1c	 sub	 esp, 28			; 0000001cH
  006d3	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 271  : 	CString strWndClass = AfxRegisterWndClass ( 0, 0, 0, AfxGetApp()->LoadStandardIcon ( MAKEINTRESOURCE(IDI_MAINFRAME) ) );

  006d6	6a 6e		 push	 110			; 0000006eH
  006d8	e8 00 00 00 00	 call	 ?AfxGetApp@@YGPAVCWinApp@@XZ ; AfxGetApp
  006dd	8b c8		 mov	 ecx, eax
  006df	e8 00 00 00 00	 call	 ?LoadStandardIcon@CWinApp@@QBEPAUHICON__@@PBD@Z ; CWinApp::LoadStandardIcon
  006e4	50		 push	 eax
  006e5	6a 00		 push	 0
  006e7	6a 00		 push	 0
  006e9	6a 00		 push	 0
  006eb	e8 00 00 00 00	 call	 ?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z ; AfxRegisterWndClass
  006f0	50		 push	 eax
  006f1	8d 4d f0	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  006f4	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  006f9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 272  : 	return CreateClassPopup ( strWndClass, lpszSkinPath, lpszCaption, &rect, bAllowResize, bCreateControls, bAlert );

  00700	8b 45 10	 mov	 eax, DWORD PTR _rect$[ebp]
  00703	50		 push	 eax
  00704	8d 4d dc	 lea	 ecx, DWORD PTR $T155268[ebp]
  00707	e8 00 00 00 00	 call	 ??0CRect@@QAE@PBUtagRECT@@@Z ; CRect::CRect
  0070c	8b 4d 1c	 mov	 ecx, DWORD PTR _bAlert$[ebp]
  0070f	51		 push	 ecx
  00710	8b 55 18	 mov	 edx, DWORD PTR _bCreateControls$[ebp]
  00713	52		 push	 edx
  00714	8b 45 14	 mov	 eax, DWORD PTR _bAllowResize$[ebp]
  00717	50		 push	 eax
  00718	8d 4d dc	 lea	 ecx, DWORD PTR $T155268[ebp]
  0071b	51		 push	 ecx
  0071c	8b 55 0c	 mov	 edx, DWORD PTR _lpszCaption$[ebp]
  0071f	52		 push	 edx
  00720	8b 45 08	 mov	 eax, DWORD PTR _lpszSkinPath$[ebp]
  00723	50		 push	 eax
  00724	8d 4d f0	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  00727	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0072c	50		 push	 eax
  0072d	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00730	e8 00 00 00 00	 call	 ?CreateClassPopup@CSkinWnd@@QAEHPBD00ABVCRect@@HHH@Z ; CSkinWnd::CreateClassPopup
  00735	89 45 ec	 mov	 DWORD PTR $T155267[ebp], eax
  00738	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0073f	8d 4d f0	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  00742	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00747	8b 45 ec	 mov	 eax, DWORD PTR $T155267[ebp]

; 273  : }

  0074a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0074d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00754	8b e5		 mov	 esp, ebp
  00756	5d		 pop	 ebp
  00757	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
text$x	SEGMENT
$L155269:
  00077	8d 4d f0	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  0007a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0007f	c3		 ret	 0
$L155272:
  00080	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155271
  00085	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreatePopup@CSkinWnd@@QAEHPBD0ABVCRect@@HHH@Z ENDP	; CSkinWnd::CreatePopup
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	?Width@CRect@@QBEHXZ				; CRect::Width
PUBLIC	?Height@CRect@@QBEHXZ				; CRect::Height
PUBLIC	??BCRect@@QAEPAUtagRECT@@XZ			; CRect::operator tagRECT *
PUBLIC	?IsRectEmpty@CRect@@QBEHXZ			; CRect::IsRectEmpty
PUBLIC	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ		; CWnd::GetSafeHwnd
PUBLIC	?CreateSkinControls@CSkinWnd@@IAEHXZ		; CSkinWnd::CreateSkinControls
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
EXTRN	?CreateEx@CWnd@@QAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:NEAR ; CWnd::CreateEx
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:NEAR		; CWnd::MoveWindow
EXTRN	??0CSkinForm@@QAE@PBDPAVCWnd@@I@Z:NEAR		; CSkinForm::CSkinForm
EXTRN	?GetObjectRect@CSkinForm@@QAEHPBDPAUtagRECT@@@Z:NEAR ; CSkinForm::GetObjectRect
EXTRN	?AddWindow@CWindowMgr@@QAEXPAVCSkinWnd@@@Z:NEAR	; CWindowMgr::AddWindow
EXTRN	?g_pMainWindow@@3PAVCMainWindow@@A:DWORD	; g_pMainWindow
_DATA	SEGMENT
	ORG $+3
$SG147055 DB	'interface', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155283 DD	019930520H
	DD	01H
	DD	FLAT:$T155285
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155285 DD	0ffffffffH
	DD	FLAT:$L155281
xdata$x	ENDS
_TEXT	SEGMENT
_lpszWndClass$ = 8
_lpszSkinPath$ = 12
_lpszCaption$ = 16
_rect$ = 20
_bAllowResize$ = 24
_bCreateControls$ = 28
_this$ = -48
_dwStyle$ = -20
_created$ = -16
_skinRect$147054 = -36
$T155277 = -40
$T155278 = -44
__$EHRec$ = -12
?CreateClassPopup@CSkinWnd@@QAEHPBD00ABVCRect@@HHH@Z PROC NEAR ; CSkinWnd::CreateClassPopup

; 281  : {

  0075a	55		 push	 ebp
  0075b	8b ec		 mov	 ebp, esp
  0075d	6a ff		 push	 -1
  0075f	68 00 00 00 00	 push	 $L155284
  00764	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0076a	50		 push	 eax
  0076b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00772	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00775	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 282  : 	DWORD dwStyle = WS_OVERLAPPEDWINDOW & (~WS_SYSMENU);

  00778	c7 45 ec 00 00
	c7 00		 mov	 DWORD PTR _dwStyle$[ebp], 13041664 ; 00c70000H

; 283  : 
; 284  : 	BOOL created = CreateEx ( 0, lpszWndClass, lpszCaption, dwStyle, rect.left, rect.top, rect.Width(), rect.Height(), g_pMainWindow? g_pMainWindow->GetSafeHwnd() : NULL, NULL );

  0077f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A, 0 ; g_pMainWindow
  00786	74 10		 je	 SHORT $L155275
  00788	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  0078e	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00793	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  00796	eb 07		 jmp	 SHORT $L155276
$L155275:
  00798	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR -52+[ebp], 0
$L155276:
  0079f	6a 00		 push	 0
  007a1	6a 00		 push	 0
  007a3	8b 45 cc	 mov	 eax, DWORD PTR -52+[ebp]
  007a6	50		 push	 eax
  007a7	8b 4d 14	 mov	 ecx, DWORD PTR _rect$[ebp]
  007aa	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  007af	50		 push	 eax
  007b0	8b 4d 14	 mov	 ecx, DWORD PTR _rect$[ebp]
  007b3	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  007b8	50		 push	 eax
  007b9	8b 4d 14	 mov	 ecx, DWORD PTR _rect$[ebp]
  007bc	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  007bf	52		 push	 edx
  007c0	8b 45 14	 mov	 eax, DWORD PTR _rect$[ebp]
  007c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  007c5	51		 push	 ecx
  007c6	8b 55 ec	 mov	 edx, DWORD PTR _dwStyle$[ebp]
  007c9	52		 push	 edx
  007ca	8b 45 10	 mov	 eax, DWORD PTR _lpszCaption$[ebp]
  007cd	50		 push	 eax
  007ce	8b 4d 08	 mov	 ecx, DWORD PTR _lpszWndClass$[ebp]
  007d1	51		 push	 ecx
  007d2	6a 00		 push	 0
  007d4	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  007d7	e8 00 00 00 00	 call	 ?CreateEx@CWnd@@QAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z ; CWnd::CreateEx
  007dc	89 45 f0	 mov	 DWORD PTR _created$[ebp], eax

; 285  : 
; 286  : 	m_bChild = false;

  007df	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  007e2	c6 42 44 00	 mov	 BYTE PTR [edx+68], 0

; 287  : 
; 288  : 	if ( created ) {

  007e6	83 7d f0 00	 cmp	 DWORD PTR _created$[ebp], 0
  007ea	0f 84 eb 00 00
	00		 je	 $L147048

; 289  : 		// create the skin form
; 290  : 		m_pSkinForm = new CSkinForm ( lpszSkinPath, this, 100 );

  007f0	6a 60		 push	 96			; 00000060H
  007f2	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  007f7	89 45 d4	 mov	 DWORD PTR $T155278[ebp], eax
  007fa	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00801	83 7d d4 00	 cmp	 DWORD PTR $T155278[ebp], 0
  00805	74 17		 je	 SHORT $L155279
  00807	6a 64		 push	 100			; 00000064H
  00809	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  0080c	50		 push	 eax
  0080d	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszSkinPath$[ebp]
  00810	51		 push	 ecx
  00811	8b 4d d4	 mov	 ecx, DWORD PTR $T155278[ebp]
  00814	e8 00 00 00 00	 call	 ??0CSkinForm@@QAE@PBDPAVCWnd@@I@Z ; CSkinForm::CSkinForm
  00819	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  0081c	eb 07		 jmp	 SHORT $L155280
$L155279:
  0081e	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR -56+[ebp], 0
$L155280:
  00825	8b 55 c8	 mov	 edx, DWORD PTR -56+[ebp]
  00828	89 55 d8	 mov	 DWORD PTR $T155277[ebp], edx
  0082b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00832	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  00835	8b 4d d8	 mov	 ecx, DWORD PTR $T155277[ebp]
  00838	89 48 7c	 mov	 DWORD PTR [eax+124], ecx

; 291  : 
; 292  : 		// if the rect is empty, set it from the skin's root size
; 293  : 		if ( rect.IsRectEmpty() ) {

  0083b	8b 4d 14	 mov	 ecx, DWORD PTR _rect$[ebp]
  0083e	e8 00 00 00 00	 call	 ?IsRectEmpty@CRect@@QBEHXZ ; CRect::IsRectEmpty
  00843	85 c0		 test	 eax, eax
  00845	74 4a		 je	 SHORT $L147053

; 294  : 			CRect skinRect;

  00847	8d 4d dc	 lea	 ecx, DWORD PTR _skinRect$147054[ebp]
  0084a	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 295  : 			m_pSkinForm->GetObjectRect ( "interface", skinRect );

  0084f	8d 4d dc	 lea	 ecx, DWORD PTR _skinRect$147054[ebp]
  00852	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00857	50		 push	 eax
  00858	68 00 00 00 00	 push	 OFFSET FLAT:$SG147055
  0085d	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  00860	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
  00863	e8 00 00 00 00	 call	 ?GetObjectRect@CSkinForm@@QAEHPBDPAUtagRECT@@@Z ; CSkinForm::GetObjectRect

; 296  : 
; 297  : 			MoveWindow ( rect.left, rect.top, skinRect.Width(), skinRect.Height() );

  00868	6a 01		 push	 1
  0086a	8d 4d dc	 lea	 ecx, DWORD PTR _skinRect$147054[ebp]
  0086d	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00872	50		 push	 eax
  00873	8d 4d dc	 lea	 ecx, DWORD PTR _skinRect$147054[ebp]
  00876	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  0087b	50		 push	 eax
  0087c	8b 45 14	 mov	 eax, DWORD PTR _rect$[ebp]
  0087f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00882	51		 push	 ecx
  00883	8b 55 14	 mov	 edx, DWORD PTR _rect$[ebp]
  00886	8b 02		 mov	 eax, DWORD PTR [edx]
  00888	50		 push	 eax
  00889	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0088c	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
$L147053:

; 299  : 
; 300  : 		if ( bCreateControls ) {

  00891	83 7d 1c 00	 cmp	 DWORD PTR _bCreateControls$[ebp], 0
  00895	74 08		 je	 SHORT $L147056

; 301  : 			// create all of the controls contained within this skin
; 302  : 			CreateSkinControls();

  00897	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0089a	e8 00 00 00 00	 call	 ?CreateSkinControls@CSkinWnd@@IAEHXZ ; CSkinWnd::CreateSkinControls
$L147056:

; 304  : 
; 305  : 		// put this window in the global handle map...
; 306  : 		AddToHandleMap();

  0089f	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  008a2	e8 00 00 00 00	 call	 ?AddToHandleMap@CSkinWnd@@IAEXXZ ; CSkinWnd::AddToHandleMap

; 307  : 
; 308  : 		// add ourself to the window manager
; 309  : 		if ( g_pWindowMgr ) {

  008a7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  008ae	74 0f		 je	 SHORT $L147057

; 310  : 			g_pWindowMgr->AddWindow ( this );

  008b0	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  008b3	51		 push	 ecx
  008b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  008ba	e8 00 00 00 00	 call	 ?AddWindow@CWindowMgr@@QAEXPAVCSkinWnd@@@Z ; CWindowMgr::AddWindow
$L147057:

; 312  : 		
; 313  : 		SetAllowResize ( bAllowResize );

  008bf	33 d2		 xor	 edx, edx
  008c1	83 7d 18 00	 cmp	 DWORD PTR _bAllowResize$[ebp], 0
  008c5	0f 95 c2	 setne	 dl
  008c8	52		 push	 edx
  008c9	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  008cc	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 314  : 		SetAllowMove( true );

  008d1	6a 01		 push	 1
  008d3	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  008d6	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove
$L147048:

; 316  : 
; 317  : 	return created;

  008db	8b 45 f0	 mov	 eax, DWORD PTR _created$[ebp]

; 318  : }

  008de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  008e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  008e8	8b e5		 mov	 esp, ebp
  008ea	5d		 pop	 ebp
  008eb	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
text$x	SEGMENT
$L155281:
  0008a	8b 45 d4	 mov	 eax, DWORD PTR $T155278[ebp]
  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00093	c3		 ret	 0
$L155284:
  00094	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155283
  00099	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateClassPopup@CSkinWnd@@QAEHPBD00ABVCRect@@HHH@Z ENDP ; CSkinWnd::CreateClassPopup
PUBLIC	?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ; CSkinWnd::CreatePopupChild
_DATA	SEGMENT
	ORG $+2
$SG147080 DB	'interface', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155295 DD	019930520H
	DD	02H
	DD	FLAT:$T155297
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155297 DD	0ffffffffH
	DD	FLAT:$L155292
	DD	00H
	DD	FLAT:$L155293
xdata$x	ENDS
_TEXT	SEGMENT
_lpszSkinPath$ = 8
_lpszCaption$ = 12
_rect$ = 16
_pParentWnd$ = 20
_bAllowResize$ = 24
_bCreateControls$ = 28
_this$ = -56
_dwStyle$ = -24
_strWndClass$ = -20
_created$ = -16
_skinRect$147079 = -40
$T155287 = -44
$T155288 = -48
$T155291 = -52
__$EHRec$ = -12
?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z PROC NEAR ; CSkinWnd::CreatePopupChild

; 326  : {

  008ee	55		 push	 ebp
  008ef	8b ec		 mov	 ebp, esp
  008f1	6a ff		 push	 -1
  008f3	68 00 00 00 00	 push	 $L155296
  008f8	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  008fe	50		 push	 eax
  008ff	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00906	83 ec 30	 sub	 esp, 48			; 00000030H
  00909	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx

; 327  : 	DWORD dwStyle = WS_POPUPWINDOW & (~WS_SYSMENU);

  0090c	c7 45 e8 00 00
	80 80		 mov	 DWORD PTR _dwStyle$[ebp], -2139095040 ; 80800000H

; 328  : 
; 329  : 	CString strWndClass = AfxRegisterWndClass ( 0, 0, 0, AfxGetApp()->LoadStandardIcon ( IDI_APPLICATION ) );

  00913	68 00 7f 00 00	 push	 32512			; 00007f00H
  00918	e8 00 00 00 00	 call	 ?AfxGetApp@@YGPAVCWinApp@@XZ ; AfxGetApp
  0091d	8b c8		 mov	 ecx, eax
  0091f	e8 00 00 00 00	 call	 ?LoadStandardIcon@CWinApp@@QBEPAUHICON__@@PBD@Z ; CWinApp::LoadStandardIcon
  00924	50		 push	 eax
  00925	6a 00		 push	 0
  00927	6a 00		 push	 0
  00929	6a 00		 push	 0
  0092b	e8 00 00 00 00	 call	 ?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z ; AfxRegisterWndClass
  00930	50		 push	 eax
  00931	8d 4d ec	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  00934	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  00939	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 330  : 	BOOL created = CreateEx ( 0, strWndClass, lpszCaption, dwStyle, rect.left, rect.top, rect.Width(), rect.Height(), pParentWnd->GetSafeHwnd(), NULL );

  00940	6a 00		 push	 0
  00942	6a 00		 push	 0
  00944	8b 4d 14	 mov	 ecx, DWORD PTR _pParentWnd$[ebp]
  00947	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  0094c	50		 push	 eax
  0094d	8b 4d 10	 mov	 ecx, DWORD PTR _rect$[ebp]
  00950	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00955	50		 push	 eax
  00956	8b 4d 10	 mov	 ecx, DWORD PTR _rect$[ebp]
  00959	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  0095e	50		 push	 eax
  0095f	8b 45 10	 mov	 eax, DWORD PTR _rect$[ebp]
  00962	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00965	51		 push	 ecx
  00966	8b 55 10	 mov	 edx, DWORD PTR _rect$[ebp]
  00969	8b 02		 mov	 eax, DWORD PTR [edx]
  0096b	50		 push	 eax
  0096c	8b 4d e8	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  0096f	51		 push	 ecx
  00970	8b 55 0c	 mov	 edx, DWORD PTR _lpszCaption$[ebp]
  00973	52		 push	 edx
  00974	8d 4d ec	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  00977	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0097c	50		 push	 eax
  0097d	6a 00		 push	 0
  0097f	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00982	e8 00 00 00 00	 call	 ?CreateEx@CWnd@@QAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z ; CWnd::CreateEx
  00987	89 45 f0	 mov	 DWORD PTR _created$[ebp], eax

; 331  : 
; 332  : 	m_bChild = true;

  0098a	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  0098d	c6 40 44 01	 mov	 BYTE PTR [eax+68], 1

; 333  : 
; 334  : 	if ( created ) {

  00991	83 7d f0 00	 cmp	 DWORD PTR _created$[ebp], 0
  00995	0f 84 ee 00 00
	00		 je	 $L147073

; 335  : 		// create the skin form
; 336  : 		m_pSkinForm = new CSkinForm ( lpszSkinPath, this, 100 );

  0099b	6a 60		 push	 96			; 00000060H
  0099d	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  009a2	89 45 d0	 mov	 DWORD PTR $T155288[ebp], eax
  009a5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  009a9	83 7d d0 00	 cmp	 DWORD PTR $T155288[ebp], 0
  009ad	74 17		 je	 SHORT $L155289
  009af	6a 64		 push	 100			; 00000064H
  009b1	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  009b4	51		 push	 ecx
  009b5	8b 55 08	 mov	 edx, DWORD PTR _lpszSkinPath$[ebp]
  009b8	52		 push	 edx
  009b9	8b 4d d0	 mov	 ecx, DWORD PTR $T155288[ebp]
  009bc	e8 00 00 00 00	 call	 ??0CSkinForm@@QAE@PBDPAVCWnd@@I@Z ; CSkinForm::CSkinForm
  009c1	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  009c4	eb 07		 jmp	 SHORT $L155290
$L155289:
  009c6	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L155290:
  009cd	8b 45 c4	 mov	 eax, DWORD PTR -60+[ebp]
  009d0	89 45 d4	 mov	 DWORD PTR $T155287[ebp], eax
  009d3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  009d7	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  009da	8b 55 d4	 mov	 edx, DWORD PTR $T155287[ebp]
  009dd	89 51 7c	 mov	 DWORD PTR [ecx+124], edx

; 337  : 
; 338  : 		// if the rect is empty, set it from the skin's root size
; 339  : 		if ( rect.IsRectEmpty() ) {

  009e0	8b 4d 10	 mov	 ecx, DWORD PTR _rect$[ebp]
  009e3	e8 00 00 00 00	 call	 ?IsRectEmpty@CRect@@QBEHXZ ; CRect::IsRectEmpty
  009e8	85 c0		 test	 eax, eax
  009ea	74 4a		 je	 SHORT $L147078

; 340  : 			CRect skinRect;

  009ec	8d 4d d8	 lea	 ecx, DWORD PTR _skinRect$147079[ebp]
  009ef	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 341  : 			m_pSkinForm->GetObjectRect ( "interface", skinRect );

  009f4	8d 4d d8	 lea	 ecx, DWORD PTR _skinRect$147079[ebp]
  009f7	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  009fc	50		 push	 eax
  009fd	68 00 00 00 00	 push	 OFFSET FLAT:$SG147080
  00a02	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  00a05	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00a08	e8 00 00 00 00	 call	 ?GetObjectRect@CSkinForm@@QAEHPBDPAUtagRECT@@@Z ; CSkinForm::GetObjectRect

; 342  : 			MoveWindow ( rect.left, rect.top, skinRect.Width(), skinRect.Height() );

  00a0d	6a 01		 push	 1
  00a0f	8d 4d d8	 lea	 ecx, DWORD PTR _skinRect$147079[ebp]
  00a12	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00a17	50		 push	 eax
  00a18	8d 4d d8	 lea	 ecx, DWORD PTR _skinRect$147079[ebp]
  00a1b	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00a20	50		 push	 eax
  00a21	8b 4d 10	 mov	 ecx, DWORD PTR _rect$[ebp]
  00a24	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00a27	52		 push	 edx
  00a28	8b 45 10	 mov	 eax, DWORD PTR _rect$[ebp]
  00a2b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a2d	51		 push	 ecx
  00a2e	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a31	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
$L147078:

; 344  : 
; 345  : 		if ( bCreateControls ) {

  00a36	83 7d 1c 00	 cmp	 DWORD PTR _bCreateControls$[ebp], 0
  00a3a	74 08		 je	 SHORT $L147081

; 346  : 			// create all of the controls contained within this skin
; 347  : 			CreateSkinControls();

  00a3c	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a3f	e8 00 00 00 00	 call	 ?CreateSkinControls@CSkinWnd@@IAEHXZ ; CSkinWnd::CreateSkinControls
$L147081:

; 349  : 
; 350  : 		// link the parent and this window
; 351  : 		m_pParentWnd = pParentWnd;

  00a44	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  00a47	8b 45 14	 mov	 eax, DWORD PTR _pParentWnd$[ebp]
  00a4a	89 42 78	 mov	 DWORD PTR [edx+120], eax

; 352  : 
; 353  : 		// put this window in the global handle map...
; 354  : 		AddToHandleMap();

  00a4d	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a50	e8 00 00 00 00	 call	 ?AddToHandleMap@CSkinWnd@@IAEXXZ ; CSkinWnd::AddToHandleMap

; 355  : 
; 356  : 		// add ourself to the window manager
; 357  : 		if ( g_pWindowMgr ) 

  00a55	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  00a5c	74 0f		 je	 SHORT $L147082

; 359  : 			g_pWindowMgr->AddWindow ( this );

  00a5e	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a61	51		 push	 ecx
  00a62	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  00a68	e8 00 00 00 00	 call	 ?AddWindow@CWindowMgr@@QAEXPAVCSkinWnd@@@Z ; CWindowMgr::AddWindow
$L147082:

; 361  : 
; 362  : 		SetAllowResize ( bAllowResize );

  00a6d	33 d2		 xor	 edx, edx
  00a6f	83 7d 18 00	 cmp	 DWORD PTR _bAllowResize$[ebp], 0
  00a73	0f 95 c2	 setne	 dl
  00a76	52		 push	 edx
  00a77	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a7a	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 363  : 		SetAllowMove( true );

  00a7f	6a 01		 push	 1
  00a81	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a84	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove
$L147073:

; 365  : 
; 366  : 	return created;

  00a89	8b 45 f0	 mov	 eax, DWORD PTR _created$[ebp]
  00a8c	89 45 cc	 mov	 DWORD PTR $T155291[ebp], eax
  00a8f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a96	8d 4d ec	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  00a99	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00a9e	8b 45 cc	 mov	 eax, DWORD PTR $T155291[ebp]

; 367  : }

  00aa1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00aa4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00aab	8b e5		 mov	 esp, ebp
  00aad	5d		 pop	 ebp
  00aae	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
text$x	SEGMENT
$L155292:
  0009e	8d 4d ec	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  000a1	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000a6	c3		 ret	 0
$L155293:
  000a7	8b 45 d0	 mov	 eax, DWORD PTR $T155288[ebp]
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000b0	c3		 ret	 0
$L155296:
  000b1	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155295
  000b6	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreatePopupChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@HH@Z ENDP ; CSkinWnd::CreatePopupChild
PUBLIC	?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ; CSkinWnd::CreateChild
EXTRN	__imp_?wndTop@CWnd@@2V1@B:BYTE
EXTRN	?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z:NEAR	; CWnd::SetWindowPos
EXTRN	?AddChildWindow@CWindowMgr@@QAEXPAVCSkinWnd@@@Z:NEAR ; CWindowMgr::AddChildWindow
_DATA	SEGMENT
	ORG $+2
$SG147104 DB	'interface', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155307 DD	019930520H
	DD	02H
	DD	FLAT:$T155309
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155309 DD	0ffffffffH
	DD	FLAT:$L155304
	DD	00H
	DD	FLAT:$L155305
xdata$x	ENDS
_TEXT	SEGMENT
_lpszSkinPath$ = 8
_lpszCaption$ = 12
_rect$ = 16
_pParentWnd$ = 20
_bCreateControls$ = 24
_this$ = -52
_strWndClass$ = -20
_created$ = -16
_skinRect$147103 = -36
$T155299 = -40
$T155300 = -44
$T155303 = -48
__$EHRec$ = -12
?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z PROC NEAR ; CSkinWnd::CreateChild

; 376  : {

  00ab1	55		 push	 ebp
  00ab2	8b ec		 mov	 ebp, esp
  00ab4	6a ff		 push	 -1
  00ab6	68 00 00 00 00	 push	 $L155308
  00abb	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00ac1	50		 push	 eax
  00ac2	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ac9	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00acc	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 377  : 	CString strWndClass = AfxRegisterWndClass ( 0, 0, 0, AfxGetApp()->LoadStandardIcon ( IDI_WINLOGO ) );

  00acf	68 05 7f 00 00	 push	 32517			; 00007f05H
  00ad4	e8 00 00 00 00	 call	 ?AfxGetApp@@YGPAVCWinApp@@XZ ; AfxGetApp
  00ad9	8b c8		 mov	 ecx, eax
  00adb	e8 00 00 00 00	 call	 ?LoadStandardIcon@CWinApp@@QBEPAUHICON__@@PBD@Z ; CWinApp::LoadStandardIcon
  00ae0	50		 push	 eax
  00ae1	6a 00		 push	 0
  00ae3	6a 00		 push	 0
  00ae5	6a 00		 push	 0
  00ae7	e8 00 00 00 00	 call	 ?AfxRegisterWndClass@@YGPBDIPAUHICON__@@PAUHBRUSH__@@0@Z ; AfxRegisterWndClass
  00aec	50		 push	 eax
  00aed	8d 4d ec	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  00af0	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  00af5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 378  : 	BOOL created = CreateEx ( 0, strWndClass, lpszCaption, WS_CHILD, rect.left, rect.top, rect.Width(), rect.Height(), pParentWnd->GetSafeHwnd(), NULL );

  00afc	6a 00		 push	 0
  00afe	6a 00		 push	 0
  00b00	8b 4d 14	 mov	 ecx, DWORD PTR _pParentWnd$[ebp]
  00b03	e8 00 00 00 00	 call	 ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ; CWnd::GetSafeHwnd
  00b08	50		 push	 eax
  00b09	8b 4d 10	 mov	 ecx, DWORD PTR _rect$[ebp]
  00b0c	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00b11	50		 push	 eax
  00b12	8b 4d 10	 mov	 ecx, DWORD PTR _rect$[ebp]
  00b15	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00b1a	50		 push	 eax
  00b1b	8b 45 10	 mov	 eax, DWORD PTR _rect$[ebp]
  00b1e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00b21	51		 push	 ecx
  00b22	8b 55 10	 mov	 edx, DWORD PTR _rect$[ebp]
  00b25	8b 02		 mov	 eax, DWORD PTR [edx]
  00b27	50		 push	 eax
  00b28	68 00 00 00 40	 push	 1073741824		; 40000000H
  00b2d	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszCaption$[ebp]
  00b30	51		 push	 ecx
  00b31	8d 4d ec	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  00b34	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00b39	50		 push	 eax
  00b3a	6a 00		 push	 0
  00b3c	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00b3f	e8 00 00 00 00	 call	 ?CreateEx@CWnd@@QAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z ; CWnd::CreateEx
  00b44	89 45 f0	 mov	 DWORD PTR _created$[ebp], eax

; 379  : 
; 380  : 	m_bChild = true;

  00b47	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00b4a	c6 42 44 01	 mov	 BYTE PTR [edx+68], 1

; 381  : 
; 382  : 	if ( created ) {

  00b4e	83 7d f0 00	 cmp	 DWORD PTR _created$[ebp], 0
  00b52	0f 84 ff 00 00
	00		 je	 $L147097

; 383  : 		// create the skin form object...
; 384  : 		m_pSkinForm = new CSkinForm ( lpszSkinPath, this, 100 );

  00b58	6a 60		 push	 96			; 00000060H
  00b5a	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00b5f	89 45 d4	 mov	 DWORD PTR $T155300[ebp], eax
  00b62	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00b66	83 7d d4 00	 cmp	 DWORD PTR $T155300[ebp], 0
  00b6a	74 17		 je	 SHORT $L155301
  00b6c	6a 64		 push	 100			; 00000064H
  00b6e	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00b71	50		 push	 eax
  00b72	8b 4d 08	 mov	 ecx, DWORD PTR _lpszSkinPath$[ebp]
  00b75	51		 push	 ecx
  00b76	8b 4d d4	 mov	 ecx, DWORD PTR $T155300[ebp]
  00b79	e8 00 00 00 00	 call	 ??0CSkinForm@@QAE@PBDPAVCWnd@@I@Z ; CSkinForm::CSkinForm
  00b7e	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  00b81	eb 07		 jmp	 SHORT $L155302
$L155301:
  00b83	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR -56+[ebp], 0
$L155302:
  00b8a	8b 55 c8	 mov	 edx, DWORD PTR -56+[ebp]
  00b8d	89 55 d8	 mov	 DWORD PTR $T155299[ebp], edx
  00b90	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00b94	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00b97	8b 4d d8	 mov	 ecx, DWORD PTR $T155299[ebp]
  00b9a	89 48 7c	 mov	 DWORD PTR [eax+124], ecx

; 385  : 
; 386  : 		// if the rect is empty, set it from the skin's root size
; 387  : 		if ( rect.IsRectEmpty() ) {

  00b9d	8b 4d 10	 mov	 ecx, DWORD PTR _rect$[ebp]
  00ba0	e8 00 00 00 00	 call	 ?IsRectEmpty@CRect@@QBEHXZ ; CRect::IsRectEmpty
  00ba5	85 c0		 test	 eax, eax
  00ba7	74 4a		 je	 SHORT $L147102

; 388  : 			CRect skinRect;

  00ba9	8d 4d dc	 lea	 ecx, DWORD PTR _skinRect$147103[ebp]
  00bac	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 389  : 			m_pSkinForm->GetObjectRect ( "interface", skinRect );

  00bb1	8d 4d dc	 lea	 ecx, DWORD PTR _skinRect$147103[ebp]
  00bb4	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00bb9	50		 push	 eax
  00bba	68 00 00 00 00	 push	 OFFSET FLAT:$SG147104
  00bbf	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  00bc2	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
  00bc5	e8 00 00 00 00	 call	 ?GetObjectRect@CSkinForm@@QAEHPBDPAUtagRECT@@@Z ; CSkinForm::GetObjectRect

; 390  : 			MoveWindow ( rect.left, rect.top, skinRect.Width(), skinRect.Height() );

  00bca	6a 01		 push	 1
  00bcc	8d 4d dc	 lea	 ecx, DWORD PTR _skinRect$147103[ebp]
  00bcf	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00bd4	50		 push	 eax
  00bd5	8d 4d dc	 lea	 ecx, DWORD PTR _skinRect$147103[ebp]
  00bd8	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  00bdd	50		 push	 eax
  00bde	8b 45 10	 mov	 eax, DWORD PTR _rect$[ebp]
  00be1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00be4	51		 push	 ecx
  00be5	8b 55 10	 mov	 edx, DWORD PTR _rect$[ebp]
  00be8	8b 02		 mov	 eax, DWORD PTR [edx]
  00bea	50		 push	 eax
  00beb	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bee	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
$L147102:

; 392  : 
; 393  : 		if ( bCreateControls ) {

  00bf3	83 7d 18 00	 cmp	 DWORD PTR _bCreateControls$[ebp], 0
  00bf7	74 08		 je	 SHORT $L147105

; 394  : 			// create all of the controls contained within this skin
; 395  : 			CreateSkinControls();

  00bf9	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00bfc	e8 00 00 00 00	 call	 ?CreateSkinControls@CSkinWnd@@IAEHXZ ; CSkinWnd::CreateSkinControls
$L147105:

; 397  : 
; 398  : 		// link the parent and this window
; 399  : 		m_pParentWnd = pParentWnd;

  00c01	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c04	8b 55 14	 mov	 edx, DWORD PTR _pParentWnd$[ebp]
  00c07	89 51 78	 mov	 DWORD PTR [ecx+120], edx

; 400  : 
; 401  : 		// put this window in the global handle map...
; 402  : 		AddToHandleMap();

  00c0a	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c0d	e8 00 00 00 00	 call	 ?AddToHandleMap@CSkinWnd@@IAEXXZ ; CSkinWnd::AddToHandleMap

; 403  : 
; 404  : 		// add ourself to the window manager
; 405  : 		if ( g_pWindowMgr ) 

  00c12	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  00c19	74 0f		 je	 SHORT $L147106

; 407  : 			g_pWindowMgr->AddChildWindow ( this );

  00c1b	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00c1e	50		 push	 eax
  00c1f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  00c25	e8 00 00 00 00	 call	 ?AddChildWindow@CWindowMgr@@QAEXPAVCSkinWnd@@@Z ; CWindowMgr::AddChildWindow
$L147106:

; 409  : 
; 410  : 		SetWindowPos(&wndTop, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE);

  00c2a	6a 03		 push	 3
  00c2c	6a 00		 push	 0
  00c2e	6a 00		 push	 0
  00c30	6a 00		 push	 0
  00c32	6a 00		 push	 0
  00c34	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?wndTop@CWnd@@2V1@B
  00c3a	51		 push	 ecx
  00c3b	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c3e	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos

; 411  : 
; 412  : 		SetAllowResize ( true );

  00c43	6a 01		 push	 1
  00c45	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c48	e8 00 00 00 00	 call	 ?SetAllowResize@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowResize

; 413  : 		SetAllowMove( true );

  00c4d	6a 01		 push	 1
  00c4f	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c52	e8 00 00 00 00	 call	 ?SetAllowMove@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetAllowMove
$L147097:

; 415  : 
; 416  : 	return created;

  00c57	8b 55 f0	 mov	 edx, DWORD PTR _created$[ebp]
  00c5a	89 55 d0	 mov	 DWORD PTR $T155303[ebp], edx
  00c5d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c64	8d 4d ec	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  00c67	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00c6c	8b 45 d0	 mov	 eax, DWORD PTR $T155303[ebp]

; 417  : }

  00c6f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00c72	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00c79	8b e5		 mov	 esp, ebp
  00c7b	5d		 pop	 ebp
  00c7c	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
text$x	SEGMENT
$L155304:
  000bb	8d 4d ec	 lea	 ecx, DWORD PTR _strWndClass$[ebp]
  000be	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000c3	c3		 ret	 0
$L155305:
  000c4	8b 45 d4	 mov	 eax, DWORD PTR $T155300[ebp]
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000cd	c3		 ret	 0
$L155308:
  000ce	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155307
  000d3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateChild@CSkinWnd@@QAEHPBD0ABVCRect@@PAVCWnd@@H@Z ENDP ; CSkinWnd::CreateChild
PUBLIC	??8@YG_NABVCString@@PBD@Z			; operator==
PUBLIC	??8@YG_NPBDABVCString@@@Z			; operator==
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
PUBLIC	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
EXTRN	??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinBtn::CSkinBtn
EXTRN	??0CSkinThumb@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinThumb::CSkinThumb
EXTRN	??0CSkinScrollDecBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinScrollDecBtn::CSkinScrollDecBtn
EXTRN	??0CSkinScrollIncBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinScrollIncBtn::CSkinScrollIncBtn
EXTRN	??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinScrollBar::CSkinScrollBar
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	?Left@CString@@QBE?AV1@H@Z:NEAR			; CString::Left
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	?Find@CString@@QBEHPBDH@Z:NEAR			; CString::Find
EXTRN	?GetName@CSkinObj@@QAE?AVCString@@XZ:NEAR	; CSkinObj::GetName
EXTRN	?AddColumn@CSkinListCtrl@@QAEHVCSkinObj@@H@Z:NEAR ; CSkinListCtrl::AddColumn
EXTRN	?GetParentObj@CSkinObj@@QAE?AV1@XZ:NEAR		; CSkinObj::GetParentObj
EXTRN	??0CPreviousBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CPreviousBtn::CPreviousBtn
EXTRN	??0CNextBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CNextBtn::CNextBtn
EXTRN	??0COkBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR	; COkBtn::COkBtn
EXTRN	??0CCancelBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CCancelBtn::CCancelBtn
EXTRN	??0CExitBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CExitBtn::CExitBtn
EXTRN	??0CQuestionExitBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CQuestionExitBtn::CQuestionExitBtn
EXTRN	??0CSkinToggleBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinToggleBtn::CSkinToggleBtn
EXTRN	??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z:NEAR ; CSkinEdit::CSkinEdit
EXTRN	??0CSkinCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinCtrl::CSkinCtrl
_DATA	SEGMENT
	ORG $+2
$SG147118 DB	'_', 00H
	ORG $+2
$SG147120 DB	'sb', 00H
	ORG $+1
$SG147128 DB	'sbd', 00H
$SG147136 DB	'sbi', 00H
$SG147144 DB	'sbt', 00H
$SG147152 DB	'chl', 00H
$SG147161 DB	'chc', 00H
$SG147170 DB	'chr', 00H
$SG147179 DB	'ef', 00H
	ORG $+1
$SG147187 DB	'mef', 00H
$SG147195 DB	'rtf', 00H
$SG147203 DB	'rmtf', 00H
	ORG $+3
$SG147211 DB	'bp', 00H
	ORG $+1
$SG147219 DB	'bn', 00H
	ORG $+1
$SG147227 DB	'ok', 00H
	ORG $+1
$SG147236 DB	'cn', 00H
	ORG $+1
$SG147237 DB	'Close', 00H
	ORG $+2
$SG147245 DB	'be', 00H
	ORG $+1
$SG147253 DB	'bq', 00H
	ORG $+1
$SG147261 DB	'pb', 00H
	ORG $+1
$SG147269 DB	'tb', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155480 DD	019930520H
	DD	014H
	DD	FLAT:$T155482
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155482 DD	0ffffffffH
	DD	FLAT:$L155436
	DD	00H
	DD	FLAT:$L155437
	DD	01H
	DD	FLAT:$L155438
	DD	02H
	DD	FLAT:$L155439
	DD	02H
	DD	FLAT:$L155441
	DD	02H
	DD	FLAT:$L155443
	DD	02H
	DD	FLAT:$L155445
	DD	02H
	DD	FLAT:$L155453
	DD	02H
	DD	FLAT:$L155455
	DD	02H
	DD	FLAT:$L155457
	DD	02H
	DD	FLAT:$L155459
	DD	02H
	DD	FLAT:$L155461
	DD	02H
	DD	FLAT:$L155463
	DD	02H
	DD	FLAT:$L155465
	DD	02H
	DD	FLAT:$L155467
	DD	02H
	DD	FLAT:$L155469
	DD	02H
	DD	FLAT:$L155471
	DD	02H
	DD	FLAT:$L155473
	DD	02H
	DD	FLAT:$L155475
	DD	02H
	DD	FLAT:$L155477
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_this$ = -344
_name$ = -16
_id$ = -20
$T155311 = -36
$T155312 = -40
$T155313 = -44
$T155314 = -48
$T155317 = -52
$T155318 = -56
$T155319 = -60
$T155320 = -64
$T155323 = -68
$T155324 = -72
$T155325 = -76
$T155326 = -80
$T155329 = -84
$T155330 = -88
$T155331 = -92
$T155332 = -96
$T155335 = -100
$T155338 = -104
$T155339 = -108
$T155340 = -112
$T155343 = -116
$T155344 = -120
$T155345 = -124
_pList$147153 = -24
$T155348 = -128
$T155349 = -132
$T155350 = -136
$T155351 = -140
$T155352 = -144
$T155353 = -148
_pList$147162 = -28
$T155358 = -152
$T155359 = -156
$T155360 = -160
$T155361 = -164
_pList$147171 = -32
$T155366 = -168
$T155367 = -172
$T155368 = -176
$T155369 = -180
$T155374 = -184
$T155375 = -188
$T155376 = -192
$T155377 = -196
$T155382 = -200
$T155383 = -204
$T155384 = -208
$T155385 = -212
$T155388 = -216
$T155389 = -220
$T155390 = -224
$T155391 = -228
$T155394 = -232
$T155395 = -236
$T155396 = -240
$T155397 = -244
$T155400 = -248
$T155401 = -252
$T155402 = -256
$T155403 = -260
$T155406 = -264
$T155407 = -268
$T155408 = -272
$T155409 = -276
$T155412 = -280
$T155413 = -284
$T155414 = -288
$T155415 = -292
$T155418 = -296
$T155419 = -300
$T155420 = -304
$T155421 = -308
$T155424 = -312
$T155425 = -316
$T155426 = -320
$T155427 = -324
$T155430 = -328
$T155431 = -332
$T155432 = -336
$T155433 = -340
__$EHRec$ = -12
?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CSkinWnd::MakeSkinCtrl

; 421  : {

  00c7f	55		 push	 ebp
  00c80	8b ec		 mov	 ebp, esp
  00c82	6a ff		 push	 -1
  00c84	68 00 00 00 00	 push	 $L155481
  00c89	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00c8f	50		 push	 eax
  00c90	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00c97	81 ec 74 02 00
	00		 sub	 esp, 628		; 00000274H
  00c9d	89 8d a8 fe ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
  00ca3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 422  : 	static int nEditID = 700;
; 423  : 
; 424  : 	// the type of the control is specified by the characters to the left of the _ in the name
; 425  : 	CString name = obj.GetName();

  00caa	8d 45 f0	 lea	 eax, DWORD PTR _name$[ebp]
  00cad	50		 push	 eax
  00cae	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00cb1	e8 00 00 00 00	 call	 ?GetName@CSkinObj@@QAE?AVCString@@XZ ; CSkinObj::GetName
  00cb6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 426  : 	CString id = name.Left ( name.Find ( "_", 0 ) );

  00cba	6a 00		 push	 0
  00cbc	68 00 00 00 00	 push	 OFFSET FLAT:$SG147118
  00cc1	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00cc4	e8 00 00 00 00	 call	 ?Find@CString@@QBEHPBDH@Z ; CString::Find
  00cc9	50		 push	 eax
  00cca	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00ccd	51		 push	 ecx
  00cce	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00cd1	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  00cd6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 427  : 
; 428  : 	// Handle setting up a scroll bar - USUALLY moved to the actual window to save a pointer to it for linking.
; 429  : 	if ( "sb" == id ) {

  00cda	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  00cdd	52		 push	 edx
  00cde	68 00 00 00 00	 push	 OFFSET FLAT:$SG147120
  00ce3	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00ce8	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00ced	85 c0		 test	 eax, eax
  00cef	0f 84 9d 00 00
	00		 je	 $L147119

; 430  : 		return new CSkinScrollBar ( obj, this );

  00cf5	6a 48		 push	 72			; 00000048H
  00cf7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00cfc	83 c4 04	 add	 esp, 4
  00cff	89 45 d4	 mov	 DWORD PTR $T155313[ebp], eax
  00d02	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00d06	83 7d d4 00	 cmp	 DWORD PTR $T155313[ebp], 0
  00d0a	74 3a		 je	 SHORT $L155315
  00d0c	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00d12	50		 push	 eax
  00d13	83 ec 08	 sub	 esp, 8
  00d16	8b cc		 mov	 ecx, esp
  00d18	89 65 d0	 mov	 DWORD PTR $T155314[ebp], esp
  00d1b	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00d1e	52		 push	 edx
  00d1f	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00d24	89 85 a4 fe ff
	ff		 mov	 DWORD PTR -348+[ebp], eax
  00d2a	8b 4d d4	 mov	 ecx, DWORD PTR $T155313[ebp]
  00d2d	e8 00 00 00 00	 call	 ??0CSkinScrollBar@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollBar::CSkinScrollBar
  00d32	89 85 a0 fe ff
	ff		 mov	 DWORD PTR -352+[ebp], eax
  00d38	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR -352+[ebp]
  00d3e	89 85 9c fe ff
	ff		 mov	 DWORD PTR -356+[ebp], eax
  00d44	eb 0a		 jmp	 SHORT $L155316
$L155315:
  00d46	c7 85 9c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -356+[ebp], 0
$L155316:
  00d50	8b 8d 9c fe ff
	ff		 mov	 ecx, DWORD PTR -356+[ebp]
  00d56	89 4d d8	 mov	 DWORD PTR $T155312[ebp], ecx
  00d59	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00d5d	8b 55 d8	 mov	 edx, DWORD PTR $T155312[ebp]
  00d60	89 55 dc	 mov	 DWORD PTR $T155311[ebp], edx
  00d63	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00d67	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00d6a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00d6f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00d73	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00d76	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00d7b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d82	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00d85	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00d8a	8b 45 dc	 mov	 eax, DWORD PTR $T155311[ebp]
  00d8d	e9 91 10 00 00	 jmp	 $L147111
$L147119:

; 432  : 
; 433  : 	// Handle setting up a scroll bar controls
; 434  : 	if ( "sbd" == id ) {

  00d92	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00d95	50		 push	 eax
  00d96	68 00 00 00 00	 push	 OFFSET FLAT:$SG147128
  00d9b	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00da0	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00da5	85 c0		 test	 eax, eax
  00da7	0f 84 9d 00 00
	00		 je	 $L147127

; 435  : 		return new CSkinScrollDecBtn ( obj, this );

  00dad	6a 24		 push	 36			; 00000024H
  00daf	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00db4	83 c4 04	 add	 esp, 4
  00db7	89 45 c4	 mov	 DWORD PTR $T155319[ebp], eax
  00dba	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00dbe	83 7d c4 00	 cmp	 DWORD PTR $T155319[ebp], 0
  00dc2	74 3a		 je	 SHORT $L155321
  00dc4	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00dca	51		 push	 ecx
  00dcb	83 ec 08	 sub	 esp, 8
  00dce	8b cc		 mov	 ecx, esp
  00dd0	89 65 c0	 mov	 DWORD PTR $T155320[ebp], esp
  00dd3	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00dd6	52		 push	 edx
  00dd7	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00ddc	89 85 98 fe ff
	ff		 mov	 DWORD PTR -360+[ebp], eax
  00de2	8b 4d c4	 mov	 ecx, DWORD PTR $T155319[ebp]
  00de5	e8 00 00 00 00	 call	 ??0CSkinScrollDecBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollDecBtn::CSkinScrollDecBtn
  00dea	89 85 94 fe ff
	ff		 mov	 DWORD PTR -364+[ebp], eax
  00df0	8b 85 94 fe ff
	ff		 mov	 eax, DWORD PTR -364+[ebp]
  00df6	89 85 90 fe ff
	ff		 mov	 DWORD PTR -368+[ebp], eax
  00dfc	eb 0a		 jmp	 SHORT $L155322
$L155321:
  00dfe	c7 85 90 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -368+[ebp], 0
$L155322:
  00e08	8b 8d 90 fe ff
	ff		 mov	 ecx, DWORD PTR -368+[ebp]
  00e0e	89 4d c8	 mov	 DWORD PTR $T155318[ebp], ecx
  00e11	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00e15	8b 55 c8	 mov	 edx, DWORD PTR $T155318[ebp]
  00e18	89 55 cc	 mov	 DWORD PTR $T155317[ebp], edx
  00e1b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00e1f	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00e22	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00e27	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00e2b	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00e2e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00e33	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e3a	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00e3d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00e42	8b 45 cc	 mov	 eax, DWORD PTR $T155317[ebp]
  00e45	e9 d9 0f 00 00	 jmp	 $L147111
$L147127:

; 437  : 
; 438  : 	if ( "sbi" == id ) {

  00e4a	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00e4d	50		 push	 eax
  00e4e	68 00 00 00 00	 push	 OFFSET FLAT:$SG147136
  00e53	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00e58	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00e5d	85 c0		 test	 eax, eax
  00e5f	0f 84 9d 00 00
	00		 je	 $L147135

; 439  : 		return new CSkinScrollIncBtn ( obj, this );

  00e65	6a 24		 push	 36			; 00000024H
  00e67	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00e6c	83 c4 04	 add	 esp, 4
  00e6f	89 45 b4	 mov	 DWORD PTR $T155325[ebp], eax
  00e72	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00e76	83 7d b4 00	 cmp	 DWORD PTR $T155325[ebp], 0
  00e7a	74 3a		 je	 SHORT $L155327
  00e7c	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00e82	51		 push	 ecx
  00e83	83 ec 08	 sub	 esp, 8
  00e86	8b cc		 mov	 ecx, esp
  00e88	89 65 b0	 mov	 DWORD PTR $T155326[ebp], esp
  00e8b	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00e8e	52		 push	 edx
  00e8f	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00e94	89 85 8c fe ff
	ff		 mov	 DWORD PTR -372+[ebp], eax
  00e9a	8b 4d b4	 mov	 ecx, DWORD PTR $T155325[ebp]
  00e9d	e8 00 00 00 00	 call	 ??0CSkinScrollIncBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinScrollIncBtn::CSkinScrollIncBtn
  00ea2	89 85 88 fe ff
	ff		 mov	 DWORD PTR -376+[ebp], eax
  00ea8	8b 85 88 fe ff
	ff		 mov	 eax, DWORD PTR -376+[ebp]
  00eae	89 85 84 fe ff
	ff		 mov	 DWORD PTR -380+[ebp], eax
  00eb4	eb 0a		 jmp	 SHORT $L155328
$L155327:
  00eb6	c7 85 84 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -380+[ebp], 0
$L155328:
  00ec0	8b 8d 84 fe ff
	ff		 mov	 ecx, DWORD PTR -380+[ebp]
  00ec6	89 4d b8	 mov	 DWORD PTR $T155324[ebp], ecx
  00ec9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00ecd	8b 55 b8	 mov	 edx, DWORD PTR $T155324[ebp]
  00ed0	89 55 bc	 mov	 DWORD PTR $T155323[ebp], edx
  00ed3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00ed7	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00eda	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00edf	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ee3	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00ee6	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00eeb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ef2	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00ef5	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00efa	8b 45 bc	 mov	 eax, DWORD PTR $T155323[ebp]
  00efd	e9 21 0f 00 00	 jmp	 $L147111
$L147135:

; 441  : 
; 442  : 	if ( "sbt" == id ) {

  00f02	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00f05	50		 push	 eax
  00f06	68 00 00 00 00	 push	 OFFSET FLAT:$SG147144
  00f0b	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00f10	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00f15	85 c0		 test	 eax, eax
  00f17	0f 84 9d 00 00
	00		 je	 $L147143

; 443  : 		return new CSkinThumb ( obj, this );

  00f1d	6a 1c		 push	 28			; 0000001cH
  00f1f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00f24	83 c4 04	 add	 esp, 4
  00f27	89 45 a4	 mov	 DWORD PTR $T155331[ebp], eax
  00f2a	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00f2e	83 7d a4 00	 cmp	 DWORD PTR $T155331[ebp], 0
  00f32	74 3a		 je	 SHORT $L155333
  00f34	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00f3a	51		 push	 ecx
  00f3b	83 ec 08	 sub	 esp, 8
  00f3e	8b cc		 mov	 ecx, esp
  00f40	89 65 a0	 mov	 DWORD PTR $T155332[ebp], esp
  00f43	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  00f46	52		 push	 edx
  00f47	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00f4c	89 85 80 fe ff
	ff		 mov	 DWORD PTR -384+[ebp], eax
  00f52	8b 4d a4	 mov	 ecx, DWORD PTR $T155331[ebp]
  00f55	e8 00 00 00 00	 call	 ??0CSkinThumb@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinThumb::CSkinThumb
  00f5a	89 85 7c fe ff
	ff		 mov	 DWORD PTR -388+[ebp], eax
  00f60	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR -388+[ebp]
  00f66	89 85 78 fe ff
	ff		 mov	 DWORD PTR -392+[ebp], eax
  00f6c	eb 0a		 jmp	 SHORT $L155334
$L155333:
  00f6e	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -392+[ebp], 0
$L155334:
  00f78	8b 8d 78 fe ff
	ff		 mov	 ecx, DWORD PTR -392+[ebp]
  00f7e	89 4d a8	 mov	 DWORD PTR $T155330[ebp], ecx
  00f81	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00f85	8b 55 a8	 mov	 edx, DWORD PTR $T155330[ebp]
  00f88	89 55 ac	 mov	 DWORD PTR $T155329[ebp], edx
  00f8b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00f8f	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  00f92	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00f97	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00f9b	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  00f9e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00fa3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00faa	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00fad	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00fb2	8b 45 ac	 mov	 eax, DWORD PTR $T155329[ebp]
  00fb5	e9 69 0e 00 00	 jmp	 $L147111
$L147143:

; 445  : 
; 446  : 	// Add the column support globally
; 447  : 	if ( "chl" == id ) {

  00fba	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  00fbd	50		 push	 eax
  00fbe	68 00 00 00 00	 push	 OFFSET FLAT:$SG147152
  00fc3	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  00fc8	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00fcd	85 c0		 test	 eax, eax
  00fcf	0f 84 be 00 00
	00		 je	 $L147151

; 448  : 
; 449  : 		// Left justify column
; 450  : 		CSkinListCtrl* pList = (CSkinListCtrl*) FindControl ( obj.GetParentObj() );

  00fd5	83 ec 08	 sub	 esp, 8
  00fd8	8b cc		 mov	 ecx, esp
  00fda	89 65 9c	 mov	 DWORD PTR $T155335[ebp], esp
  00fdd	51		 push	 ecx
  00fde	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00fe1	e8 00 00 00 00	 call	 ?GetParentObj@CSkinObj@@QAE?AV1@XZ ; CSkinObj::GetParentObj
  00fe6	89 85 74 fe ff
	ff		 mov	 DWORD PTR -396+[ebp], eax
  00fec	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00ff2	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  00ff7	89 85 70 fe ff
	ff		 mov	 DWORD PTR -400+[ebp], eax
  00ffd	8b 95 70 fe ff
	ff		 mov	 edx, DWORD PTR -400+[ebp]
  01003	89 95 6c fe ff
	ff		 mov	 DWORD PTR -404+[ebp], edx
  01009	83 bd 6c fe ff
	ff 00		 cmp	 DWORD PTR -404+[ebp], 0
  01010	74 11		 je	 SHORT $L155336
  01012	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR -404+[ebp]
  01018	83 e8 40	 sub	 eax, 64			; 00000040H
  0101b	89 85 68 fe ff
	ff		 mov	 DWORD PTR -408+[ebp], eax
  01021	eb 0a		 jmp	 SHORT $L155337
$L155336:
  01023	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -408+[ebp], 0
$L155337:
  0102d	8b 8d 68 fe ff
	ff		 mov	 ecx, DWORD PTR -408+[ebp]
  01033	89 4d e8	 mov	 DWORD PTR _pList$147153[ebp], ecx

; 451  : 
; 452  : 		if ( pList ) {

  01036	83 7d e8 00	 cmp	 DWORD PTR _pList$147153[ebp], 0
  0103a	74 21		 je	 SHORT $L147157

; 453  : 			pList->AddColumn( obj, LVCFMT_LEFT );

  0103c	6a 00		 push	 0
  0103e	83 ec 08	 sub	 esp, 8
  01041	8b cc		 mov	 ecx, esp
  01043	89 65 98	 mov	 DWORD PTR $T155338[ebp], esp
  01046	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01049	52		 push	 edx
  0104a	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0104f	89 85 64 fe ff
	ff		 mov	 DWORD PTR -412+[ebp], eax
  01055	8b 4d e8	 mov	 ecx, DWORD PTR _pList$147153[ebp]
  01058	e8 00 00 00 00	 call	 ?AddColumn@CSkinListCtrl@@QAEHVCSkinObj@@H@Z ; CSkinListCtrl::AddColumn
$L147157:

; 455  : 
; 456  : 		return NULL;

  0105d	c7 45 94 00 00
	00 00		 mov	 DWORD PTR $T155339[ebp], 0
  01064	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01068	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0106b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01070	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01074	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01077	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0107c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01083	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01086	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0108b	8b 45 94	 mov	 eax, DWORD PTR $T155339[ebp]
  0108e	e9 90 0d 00 00	 jmp	 $L147111
$L147151:

; 458  : 
; 459  : 	if ( "chc" == id ) {

  01093	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01096	50		 push	 eax
  01097	68 00 00 00 00	 push	 OFFSET FLAT:$SG147161
  0109c	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  010a1	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  010a6	85 c0		 test	 eax, eax
  010a8	0f 84 be 00 00
	00		 je	 $L147160

; 460  : 
; 461  : 		// Center justify column
; 462  : 		CSkinListCtrl* pList = (CSkinListCtrl*) FindControl ( obj.GetParentObj() );

  010ae	83 ec 08	 sub	 esp, 8
  010b1	8b cc		 mov	 ecx, esp
  010b3	89 65 90	 mov	 DWORD PTR $T155340[ebp], esp
  010b6	51		 push	 ecx
  010b7	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  010ba	e8 00 00 00 00	 call	 ?GetParentObj@CSkinObj@@QAE?AV1@XZ ; CSkinObj::GetParentObj
  010bf	89 85 60 fe ff
	ff		 mov	 DWORD PTR -416+[ebp], eax
  010c5	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  010cb	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  010d0	89 85 5c fe ff
	ff		 mov	 DWORD PTR -420+[ebp], eax
  010d6	8b 95 5c fe ff
	ff		 mov	 edx, DWORD PTR -420+[ebp]
  010dc	89 95 58 fe ff
	ff		 mov	 DWORD PTR -424+[ebp], edx
  010e2	83 bd 58 fe ff
	ff 00		 cmp	 DWORD PTR -424+[ebp], 0
  010e9	74 11		 je	 SHORT $L155341
  010eb	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR -424+[ebp]
  010f1	83 e8 40	 sub	 eax, 64			; 00000040H
  010f4	89 85 54 fe ff
	ff		 mov	 DWORD PTR -428+[ebp], eax
  010fa	eb 0a		 jmp	 SHORT $L155342
$L155341:
  010fc	c7 85 54 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -428+[ebp], 0
$L155342:
  01106	8b 8d 54 fe ff
	ff		 mov	 ecx, DWORD PTR -428+[ebp]
  0110c	89 4d e4	 mov	 DWORD PTR _pList$147162[ebp], ecx

; 463  : 
; 464  : 		if ( pList ) {

  0110f	83 7d e4 00	 cmp	 DWORD PTR _pList$147162[ebp], 0
  01113	74 21		 je	 SHORT $L147166

; 465  : 			pList->AddColumn( obj, LVCFMT_CENTER );

  01115	6a 02		 push	 2
  01117	83 ec 08	 sub	 esp, 8
  0111a	8b cc		 mov	 ecx, esp
  0111c	89 65 8c	 mov	 DWORD PTR $T155343[ebp], esp
  0111f	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01122	52		 push	 edx
  01123	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01128	89 85 50 fe ff
	ff		 mov	 DWORD PTR -432+[ebp], eax
  0112e	8b 4d e4	 mov	 ecx, DWORD PTR _pList$147162[ebp]
  01131	e8 00 00 00 00	 call	 ?AddColumn@CSkinListCtrl@@QAEHVCSkinObj@@H@Z ; CSkinListCtrl::AddColumn
$L147166:

; 467  : 
; 468  : 		return NULL;

  01136	c7 45 88 00 00
	00 00		 mov	 DWORD PTR $T155344[ebp], 0
  0113d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01141	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01144	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01149	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0114d	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01150	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01155	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0115c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0115f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01164	8b 45 88	 mov	 eax, DWORD PTR $T155344[ebp]
  01167	e9 b7 0c 00 00	 jmp	 $L147111
$L147160:

; 470  : 
; 471  : 	if ( "chr" == id ) {

  0116c	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  0116f	50		 push	 eax
  01170	68 00 00 00 00	 push	 OFFSET FLAT:$SG147170
  01175	e8 00 00 00 00	 call	 ??8@YG_NPBDABVCString@@@Z ; operator==
  0117a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0117f	85 c0		 test	 eax, eax
  01181	0f 84 c4 00 00
	00		 je	 $L147169

; 472  : 
; 473  : 		// Right justify column
; 474  : 		CSkinListCtrl* pList = (CSkinListCtrl*) FindControl ( obj.GetParentObj() );

  01187	83 ec 08	 sub	 esp, 8
  0118a	8b cc		 mov	 ecx, esp
  0118c	89 65 84	 mov	 DWORD PTR $T155345[ebp], esp
  0118f	51		 push	 ecx
  01190	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01193	e8 00 00 00 00	 call	 ?GetParentObj@CSkinObj@@QAE?AV1@XZ ; CSkinObj::GetParentObj
  01198	89 85 4c fe ff
	ff		 mov	 DWORD PTR -436+[ebp], eax
  0119e	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  011a4	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  011a9	89 85 48 fe ff
	ff		 mov	 DWORD PTR -440+[ebp], eax
  011af	8b 95 48 fe ff
	ff		 mov	 edx, DWORD PTR -440+[ebp]
  011b5	89 95 44 fe ff
	ff		 mov	 DWORD PTR -444+[ebp], edx
  011bb	83 bd 44 fe ff
	ff 00		 cmp	 DWORD PTR -444+[ebp], 0
  011c2	74 11		 je	 SHORT $L155346
  011c4	8b 85 44 fe ff
	ff		 mov	 eax, DWORD PTR -444+[ebp]
  011ca	83 e8 40	 sub	 eax, 64			; 00000040H
  011cd	89 85 40 fe ff
	ff		 mov	 DWORD PTR -448+[ebp], eax
  011d3	eb 0a		 jmp	 SHORT $L155347
$L155346:
  011d5	c7 85 40 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -448+[ebp], 0
$L155347:
  011df	8b 8d 40 fe ff
	ff		 mov	 ecx, DWORD PTR -448+[ebp]
  011e5	89 4d e0	 mov	 DWORD PTR _pList$147171[ebp], ecx

; 475  : 
; 476  : 		if ( pList ) {

  011e8	83 7d e0 00	 cmp	 DWORD PTR _pList$147171[ebp], 0
  011ec	74 21		 je	 SHORT $L147175

; 477  : 			pList->AddColumn( obj, LVCFMT_RIGHT );

  011ee	6a 01		 push	 1
  011f0	83 ec 08	 sub	 esp, 8
  011f3	8b cc		 mov	 ecx, esp
  011f5	89 65 80	 mov	 DWORD PTR $T155348[ebp], esp
  011f8	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  011fb	52		 push	 edx
  011fc	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01201	89 85 3c fe ff
	ff		 mov	 DWORD PTR -452+[ebp], eax
  01207	8b 4d e0	 mov	 ecx, DWORD PTR _pList$147171[ebp]
  0120a	e8 00 00 00 00	 call	 ?AddColumn@CSkinListCtrl@@QAEHVCSkinObj@@H@Z ; CSkinListCtrl::AddColumn
$L147175:

; 479  : 
; 480  : 		return NULL;

  0120f	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T155349[ebp], 0
  01219	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0121d	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01220	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01225	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01229	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0122c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01231	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01238	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0123b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01240	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR $T155349[ebp]
  01246	e9 d8 0b 00 00	 jmp	 $L147111
$L147169:

; 482  : 
; 483  : 	// handle edit fields
; 484  : 	if ( id == "ef" ) {

  0124b	68 00 00 00 00	 push	 OFFSET FLAT:$SG147179
  01250	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01253	50		 push	 eax
  01254	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01259	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0125e	85 c0		 test	 eax, eax
  01260	0f 84 04 01 00
	00		 je	 $L147178

; 485  : 		return new CSkinEdit ( obj, this, nEditID++, ES_AUTOHSCROLL | CSkinEdit::TABSTOP, false, false );

  01266	68 d8 00 00 00	 push	 216			; 000000d8H
  0126b	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01270	89 85 70 ff ff
	ff		 mov	 DWORD PTR $T155352[ebp], eax
  01276	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0127a	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR $T155352[ebp], 0
  01281	74 6b		 je	 SHORT $L155354
  01283	6a 00		 push	 0
  01285	6a 00		 push	 0
  01287	6a 00		 push	 0
  01289	68 80 00 01 00	 push	 65664			; 00010080H
  0128e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  01294	89 8d 38 fe ff
	ff		 mov	 DWORD PTR -456+[ebp], ecx
  0129a	8b 95 38 fe ff
	ff		 mov	 edx, DWORD PTR -456+[ebp]
  012a0	52		 push	 edx
  012a1	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  012a7	50		 push	 eax
  012a8	83 ec 08	 sub	 esp, 8
  012ab	8b cc		 mov	 ecx, esp
  012ad	89 a5 6c ff ff
	ff		 mov	 DWORD PTR $T155353[ebp], esp
  012b3	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  012b6	52		 push	 edx
  012b7	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  012bc	89 85 34 fe ff
	ff		 mov	 DWORD PTR -460+[ebp], eax
  012c2	a1 00 00 00 00	 mov	 eax, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  012c7	83 c0 01	 add	 eax, 1
  012ca	a3 00 00 00 00	 mov	 DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA, eax
  012cf	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T155352[ebp]
  012d5	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  012da	89 85 30 fe ff
	ff		 mov	 DWORD PTR -464+[ebp], eax
  012e0	8b 8d 30 fe ff
	ff		 mov	 ecx, DWORD PTR -464+[ebp]
  012e6	89 8d 2c fe ff
	ff		 mov	 DWORD PTR -468+[ebp], ecx
  012ec	eb 0a		 jmp	 SHORT $L155355
$L155354:
  012ee	c7 85 2c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -468+[ebp], 0
$L155355:
  012f8	8b 95 2c fe ff
	ff		 mov	 edx, DWORD PTR -468+[ebp]
  012fe	89 95 74 ff ff
	ff		 mov	 DWORD PTR $T155351[ebp], edx
  01304	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01308	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR $T155351[ebp], 0
  0130f	74 11		 je	 SHORT $L155356
  01311	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR $T155351[ebp]
  01317	83 c0 60	 add	 eax, 96			; 00000060H
  0131a	89 85 28 fe ff
	ff		 mov	 DWORD PTR -472+[ebp], eax
  01320	eb 0a		 jmp	 SHORT $L155357
$L155356:
  01322	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -472+[ebp], 0
$L155357:
  0132c	8b 8d 28 fe ff
	ff		 mov	 ecx, DWORD PTR -472+[ebp]
  01332	89 8d 78 ff ff
	ff		 mov	 DWORD PTR $T155350[ebp], ecx
  01338	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0133c	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0133f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01344	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01348	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0134b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01350	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01357	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0135a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0135f	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR $T155350[ebp]
  01365	e9 b9 0a 00 00	 jmp	 $L147111
$L147178:

; 487  : 
; 488  : 	// handle multi-line edit fields
; 489  : 	if ( id == "mef" ) {

  0136a	68 00 00 00 00	 push	 OFFSET FLAT:$SG147187
  0136f	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  01372	52		 push	 edx
  01373	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01378	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0137d	85 c0		 test	 eax, eax
  0137f	0f 84 05 01 00
	00		 je	 $L147186

; 490  : 		return new CSkinEdit ( obj, this, nEditID++, CSkinEdit::MULTILINE | CSkinEdit::TABSTOP, false, false );

  01385	68 d8 00 00 00	 push	 216			; 000000d8H
  0138a	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0138f	89 85 60 ff ff
	ff		 mov	 DWORD PTR $T155360[ebp], eax
  01395	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  01399	83 bd 60 ff ff
	ff 00		 cmp	 DWORD PTR $T155360[ebp], 0
  013a0	74 6c		 je	 SHORT $L155362
  013a2	6a 00		 push	 0
  013a4	6a 00		 push	 0
  013a6	6a 00		 push	 0
  013a8	68 04 00 01 00	 push	 65540			; 00010004H
  013ad	a1 00 00 00 00	 mov	 eax, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  013b2	89 85 24 fe ff
	ff		 mov	 DWORD PTR -476+[ebp], eax
  013b8	8b 8d 24 fe ff
	ff		 mov	 ecx, DWORD PTR -476+[ebp]
  013be	51		 push	 ecx
  013bf	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  013c5	52		 push	 edx
  013c6	83 ec 08	 sub	 esp, 8
  013c9	8b cc		 mov	 ecx, esp
  013cb	89 a5 5c ff ff
	ff		 mov	 DWORD PTR $T155361[ebp], esp
  013d1	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  013d4	50		 push	 eax
  013d5	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  013da	89 85 20 fe ff
	ff		 mov	 DWORD PTR -480+[ebp], eax
  013e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  013e6	83 c1 01	 add	 ecx, 1
  013e9	89 0d 00 00 00
	00		 mov	 DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA, ecx
  013ef	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR $T155360[ebp]
  013f5	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  013fa	89 85 1c fe ff
	ff		 mov	 DWORD PTR -484+[ebp], eax
  01400	8b 95 1c fe ff
	ff		 mov	 edx, DWORD PTR -484+[ebp]
  01406	89 95 18 fe ff
	ff		 mov	 DWORD PTR -488+[ebp], edx
  0140c	eb 0a		 jmp	 SHORT $L155363
$L155362:
  0140e	c7 85 18 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -488+[ebp], 0
$L155363:
  01418	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR -488+[ebp]
  0141e	89 85 64 ff ff
	ff		 mov	 DWORD PTR $T155359[ebp], eax
  01424	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01428	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR $T155359[ebp], 0
  0142f	74 11		 je	 SHORT $L155364
  01431	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR $T155359[ebp]
  01437	83 c1 60	 add	 ecx, 96			; 00000060H
  0143a	89 8d 14 fe ff
	ff		 mov	 DWORD PTR -492+[ebp], ecx
  01440	eb 0a		 jmp	 SHORT $L155365
$L155364:
  01442	c7 85 14 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -492+[ebp], 0
$L155365:
  0144c	8b 95 14 fe ff
	ff		 mov	 edx, DWORD PTR -492+[ebp]
  01452	89 95 68 ff ff
	ff		 mov	 DWORD PTR $T155358[ebp], edx
  01458	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0145c	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0145f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01464	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01468	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0146b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01470	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01477	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0147a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0147f	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR $T155358[ebp]
  01485	e9 99 09 00 00	 jmp	 $L147111
$L147186:

; 492  : 
; 493  : 	// handle read only text fields
; 494  : 	if ( id == "rtf" ) {

  0148a	68 00 00 00 00	 push	 OFFSET FLAT:$SG147195
  0148f	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01492	50		 push	 eax
  01493	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01498	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0149d	85 c0		 test	 eax, eax
  0149f	0f 84 04 01 00
	00		 je	 $L147194

; 495  : 		return new CSkinEdit ( obj, this, nEditID++, CSkinEdit::READONLY | ES_AUTOHSCROLL, false, false );

  014a5	68 d8 00 00 00	 push	 216			; 000000d8H
  014aa	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  014af	89 85 50 ff ff
	ff		 mov	 DWORD PTR $T155368[ebp], eax
  014b5	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  014b9	83 bd 50 ff ff
	ff 00		 cmp	 DWORD PTR $T155368[ebp], 0
  014c0	74 6b		 je	 SHORT $L155370
  014c2	6a 00		 push	 0
  014c4	6a 00		 push	 0
  014c6	6a 00		 push	 0
  014c8	68 80 08 00 00	 push	 2176			; 00000880H
  014cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  014d3	89 8d 10 fe ff
	ff		 mov	 DWORD PTR -496+[ebp], ecx
  014d9	8b 95 10 fe ff
	ff		 mov	 edx, DWORD PTR -496+[ebp]
  014df	52		 push	 edx
  014e0	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  014e6	50		 push	 eax
  014e7	83 ec 08	 sub	 esp, 8
  014ea	8b cc		 mov	 ecx, esp
  014ec	89 a5 4c ff ff
	ff		 mov	 DWORD PTR $T155369[ebp], esp
  014f2	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  014f5	52		 push	 edx
  014f6	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  014fb	89 85 0c fe ff
	ff		 mov	 DWORD PTR -500+[ebp], eax
  01501	a1 00 00 00 00	 mov	 eax, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  01506	83 c0 01	 add	 eax, 1
  01509	a3 00 00 00 00	 mov	 DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA, eax
  0150e	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR $T155368[ebp]
  01514	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  01519	89 85 08 fe ff
	ff		 mov	 DWORD PTR -504+[ebp], eax
  0151f	8b 8d 08 fe ff
	ff		 mov	 ecx, DWORD PTR -504+[ebp]
  01525	89 8d 04 fe ff
	ff		 mov	 DWORD PTR -508+[ebp], ecx
  0152b	eb 0a		 jmp	 SHORT $L155371
$L155370:
  0152d	c7 85 04 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -508+[ebp], 0
$L155371:
  01537	8b 95 04 fe ff
	ff		 mov	 edx, DWORD PTR -508+[ebp]
  0153d	89 95 54 ff ff
	ff		 mov	 DWORD PTR $T155367[ebp], edx
  01543	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01547	83 bd 54 ff ff
	ff 00		 cmp	 DWORD PTR $T155367[ebp], 0
  0154e	74 11		 je	 SHORT $L155372
  01550	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR $T155367[ebp]
  01556	83 c0 60	 add	 eax, 96			; 00000060H
  01559	89 85 00 fe ff
	ff		 mov	 DWORD PTR -512+[ebp], eax
  0155f	eb 0a		 jmp	 SHORT $L155373
$L155372:
  01561	c7 85 00 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR -512+[ebp], 0
$L155373:
  0156b	8b 8d 00 fe ff
	ff		 mov	 ecx, DWORD PTR -512+[ebp]
  01571	89 8d 58 ff ff
	ff		 mov	 DWORD PTR $T155366[ebp], ecx
  01577	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0157b	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0157e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01583	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01587	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0158a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0158f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01596	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01599	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0159e	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR $T155366[ebp]
  015a4	e9 7a 08 00 00	 jmp	 $L147111
$L147194:

; 497  : 
; 498  : 	// handle read only multiline text fields
; 499  : 	if ( id == "rmtf" ) {

  015a9	68 00 00 00 00	 push	 OFFSET FLAT:$SG147203
  015ae	8d 55 ec	 lea	 edx, DWORD PTR _id$[ebp]
  015b1	52		 push	 edx
  015b2	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  015b7	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  015bc	85 c0		 test	 eax, eax
  015be	0f 84 05 01 00
	00		 je	 $L147202

; 500  : 		return new CSkinEdit ( obj, this, nEditID++, CSkinEdit::MULTILINE | CSkinEdit::READONLY, false, true );

  015c4	68 d8 00 00 00	 push	 216			; 000000d8H
  015c9	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  015ce	89 85 40 ff ff
	ff		 mov	 DWORD PTR $T155376[ebp], eax
  015d4	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  015d8	83 bd 40 ff ff
	ff 00		 cmp	 DWORD PTR $T155376[ebp], 0
  015df	74 6c		 je	 SHORT $L155378
  015e1	6a 00		 push	 0
  015e3	6a 01		 push	 1
  015e5	6a 00		 push	 0
  015e7	68 04 08 00 00	 push	 2052			; 00000804H
  015ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  015f1	89 85 fc fd ff
	ff		 mov	 DWORD PTR -516+[ebp], eax
  015f7	8b 8d fc fd ff
	ff		 mov	 ecx, DWORD PTR -516+[ebp]
  015fd	51		 push	 ecx
  015fe	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01604	52		 push	 edx
  01605	83 ec 08	 sub	 esp, 8
  01608	8b cc		 mov	 ecx, esp
  0160a	89 a5 3c ff ff
	ff		 mov	 DWORD PTR $T155377[ebp], esp
  01610	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  01613	50		 push	 eax
  01614	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01619	89 85 f8 fd ff
	ff		 mov	 DWORD PTR -520+[ebp], eax
  0161f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA
  01625	83 c1 01	 add	 ecx, 1
  01628	89 0d 00 00 00
	00		 mov	 DWORD PTR _?nEditID@?1??MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z@4HA, ecx
  0162e	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR $T155376[ebp]
  01634	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  01639	89 85 f4 fd ff
	ff		 mov	 DWORD PTR -524+[ebp], eax
  0163f	8b 95 f4 fd ff
	ff		 mov	 edx, DWORD PTR -524+[ebp]
  01645	89 95 f0 fd ff
	ff		 mov	 DWORD PTR -528+[ebp], edx
  0164b	eb 0a		 jmp	 SHORT $L155379
$L155378:
  0164d	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -528+[ebp], 0
$L155379:
  01657	8b 85 f0 fd ff
	ff		 mov	 eax, DWORD PTR -528+[ebp]
  0165d	89 85 44 ff ff
	ff		 mov	 DWORD PTR $T155375[ebp], eax
  01663	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01667	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR $T155375[ebp], 0
  0166e	74 11		 je	 SHORT $L155380
  01670	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR $T155375[ebp]
  01676	83 c1 60	 add	 ecx, 96			; 00000060H
  01679	89 8d ec fd ff
	ff		 mov	 DWORD PTR -532+[ebp], ecx
  0167f	eb 0a		 jmp	 SHORT $L155381
$L155380:
  01681	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -532+[ebp], 0
$L155381:
  0168b	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR -532+[ebp]
  01691	89 95 48 ff ff
	ff		 mov	 DWORD PTR $T155374[ebp], edx
  01697	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0169b	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0169e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  016a3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  016a7	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  016aa	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  016af	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  016b6	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  016b9	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  016be	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR $T155374[ebp]
  016c4	e9 5a 07 00 00	 jmp	 $L147111
$L147202:

; 502  : 
; 503  : 	// handle previous button
; 504  : 	if ( id == "bp" ) {

  016c9	68 00 00 00 00	 push	 OFFSET FLAT:$SG147211
  016ce	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  016d1	50		 push	 eax
  016d2	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  016d7	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  016dc	85 c0		 test	 eax, eax
  016de	0f 84 b5 00 00
	00		 je	 $L147210

; 505  : 		return new CPreviousBtn ( obj, this );

  016e4	6a 14		 push	 20			; 00000014H
  016e6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  016eb	83 c4 04	 add	 esp, 4
  016ee	89 85 30 ff ff
	ff		 mov	 DWORD PTR $T155384[ebp], eax
  016f4	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  016f8	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR $T155384[ebp], 0
  016ff	74 40		 je	 SHORT $L155386
  01701	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01707	51		 push	 ecx
  01708	83 ec 08	 sub	 esp, 8
  0170b	8b cc		 mov	 ecx, esp
  0170d	89 a5 2c ff ff
	ff		 mov	 DWORD PTR $T155385[ebp], esp
  01713	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01716	52		 push	 edx
  01717	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0171c	89 85 e8 fd ff
	ff		 mov	 DWORD PTR -536+[ebp], eax
  01722	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR $T155384[ebp]
  01728	e8 00 00 00 00	 call	 ??0CPreviousBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CPreviousBtn::CPreviousBtn
  0172d	89 85 e4 fd ff
	ff		 mov	 DWORD PTR -540+[ebp], eax
  01733	8b 85 e4 fd ff
	ff		 mov	 eax, DWORD PTR -540+[ebp]
  01739	89 85 e0 fd ff
	ff		 mov	 DWORD PTR -544+[ebp], eax
  0173f	eb 0a		 jmp	 SHORT $L155387
$L155386:
  01741	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -544+[ebp], 0
$L155387:
  0174b	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR -544+[ebp]
  01751	89 8d 34 ff ff
	ff		 mov	 DWORD PTR $T155383[ebp], ecx
  01757	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0175b	8b 95 34 ff ff
	ff		 mov	 edx, DWORD PTR $T155383[ebp]
  01761	89 95 38 ff ff
	ff		 mov	 DWORD PTR $T155382[ebp], edx
  01767	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0176b	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0176e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01773	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01777	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0177a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0177f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01786	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01789	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0178e	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR $T155382[ebp]
  01794	e9 8a 06 00 00	 jmp	 $L147111
$L147210:

; 507  : 
; 508  : 	// handle next button
; 509  : 	if ( id == "bn" ) {

  01799	68 00 00 00 00	 push	 OFFSET FLAT:$SG147219
  0179e	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  017a1	50		 push	 eax
  017a2	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  017a7	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  017ac	85 c0		 test	 eax, eax
  017ae	0f 84 b5 00 00
	00		 je	 $L147218

; 510  : 		return new CNextBtn ( obj, this );

  017b4	6a 14		 push	 20			; 00000014H
  017b6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  017bb	83 c4 04	 add	 esp, 4
  017be	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T155390[ebp], eax
  017c4	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  017c8	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T155390[ebp], 0
  017cf	74 40		 je	 SHORT $L155392
  017d1	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  017d7	51		 push	 ecx
  017d8	83 ec 08	 sub	 esp, 8
  017db	8b cc		 mov	 ecx, esp
  017dd	89 a5 1c ff ff
	ff		 mov	 DWORD PTR $T155391[ebp], esp
  017e3	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  017e6	52		 push	 edx
  017e7	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  017ec	89 85 dc fd ff
	ff		 mov	 DWORD PTR -548+[ebp], eax
  017f2	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T155390[ebp]
  017f8	e8 00 00 00 00	 call	 ??0CNextBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CNextBtn::CNextBtn
  017fd	89 85 d8 fd ff
	ff		 mov	 DWORD PTR -552+[ebp], eax
  01803	8b 85 d8 fd ff
	ff		 mov	 eax, DWORD PTR -552+[ebp]
  01809	89 85 d4 fd ff
	ff		 mov	 DWORD PTR -556+[ebp], eax
  0180f	eb 0a		 jmp	 SHORT $L155393
$L155392:
  01811	c7 85 d4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -556+[ebp], 0
$L155393:
  0181b	8b 8d d4 fd ff
	ff		 mov	 ecx, DWORD PTR -556+[ebp]
  01821	89 8d 24 ff ff
	ff		 mov	 DWORD PTR $T155389[ebp], ecx
  01827	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0182b	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR $T155389[ebp]
  01831	89 95 28 ff ff
	ff		 mov	 DWORD PTR $T155388[ebp], edx
  01837	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0183b	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0183e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01843	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01847	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0184a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0184f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01856	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01859	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0185e	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR $T155388[ebp]
  01864	e9 ba 05 00 00	 jmp	 $L147111
$L147218:

; 512  : 
; 513  : 	// handle ok button - also handle child windows close button
; 514  : 	if ( id == "ok" ) {

  01869	68 00 00 00 00	 push	 OFFSET FLAT:$SG147227
  0186e	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01871	50		 push	 eax
  01872	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01877	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0187c	85 c0		 test	 eax, eax
  0187e	0f 84 b5 00 00
	00		 je	 $L147226

; 515  : 		return new COkBtn ( obj, this );

  01884	6a 14		 push	 20			; 00000014H
  01886	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0188b	83 c4 04	 add	 esp, 4
  0188e	89 85 10 ff ff
	ff		 mov	 DWORD PTR $T155396[ebp], eax
  01894	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  01898	83 bd 10 ff ff
	ff 00		 cmp	 DWORD PTR $T155396[ebp], 0
  0189f	74 40		 je	 SHORT $L155398
  018a1	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  018a7	51		 push	 ecx
  018a8	83 ec 08	 sub	 esp, 8
  018ab	8b cc		 mov	 ecx, esp
  018ad	89 a5 0c ff ff
	ff		 mov	 DWORD PTR $T155397[ebp], esp
  018b3	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  018b6	52		 push	 edx
  018b7	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  018bc	89 85 d0 fd ff
	ff		 mov	 DWORD PTR -560+[ebp], eax
  018c2	8b 8d 10 ff ff
	ff		 mov	 ecx, DWORD PTR $T155396[ebp]
  018c8	e8 00 00 00 00	 call	 ??0COkBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; COkBtn::COkBtn
  018cd	89 85 cc fd ff
	ff		 mov	 DWORD PTR -564+[ebp], eax
  018d3	8b 85 cc fd ff
	ff		 mov	 eax, DWORD PTR -564+[ebp]
  018d9	89 85 c8 fd ff
	ff		 mov	 DWORD PTR -568+[ebp], eax
  018df	eb 0a		 jmp	 SHORT $L155399
$L155398:
  018e1	c7 85 c8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -568+[ebp], 0
$L155399:
  018eb	8b 8d c8 fd ff
	ff		 mov	 ecx, DWORD PTR -568+[ebp]
  018f1	89 8d 14 ff ff
	ff		 mov	 DWORD PTR $T155395[ebp], ecx
  018f7	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  018fb	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR $T155395[ebp]
  01901	89 95 18 ff ff
	ff		 mov	 DWORD PTR $T155394[ebp], edx
  01907	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0190b	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  0190e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01913	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01917	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  0191a	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0191f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01926	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01929	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0192e	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR $T155394[ebp]
  01934	e9 ea 04 00 00	 jmp	 $L147111
$L147226:

; 517  : 
; 518  : 	// handle cancel button
; 519  : 	if ( id == "cn" || (name == "Close" && m_bChild) ) {

  01939	68 00 00 00 00	 push	 OFFSET FLAT:$SG147236
  0193e	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01941	50		 push	 eax
  01942	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01947	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0194c	85 c0		 test	 eax, eax
  0194e	75 2e		 jne	 SHORT $L147235
  01950	68 00 00 00 00	 push	 OFFSET FLAT:$SG147237
  01955	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01958	51		 push	 ecx
  01959	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  0195e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01963	85 c0		 test	 eax, eax
  01965	0f 84 c8 00 00
	00		 je	 $L147234
  0196b	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  01971	33 c0		 xor	 eax, eax
  01973	8a 42 44	 mov	 al, BYTE PTR [edx+68]
  01976	85 c0		 test	 eax, eax
  01978	0f 84 b5 00 00
	00		 je	 $L147234
$L147235:

; 520  : 		return new CCancelBtn ( obj, this );

  0197e	6a 14		 push	 20			; 00000014H
  01980	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01985	83 c4 04	 add	 esp, 4
  01988	89 85 00 ff ff
	ff		 mov	 DWORD PTR $T155402[ebp], eax
  0198e	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  01992	83 bd 00 ff ff
	ff 00		 cmp	 DWORD PTR $T155402[ebp], 0
  01999	74 40		 je	 SHORT $L155404
  0199b	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  019a1	51		 push	 ecx
  019a2	83 ec 08	 sub	 esp, 8
  019a5	8b cc		 mov	 ecx, esp
  019a7	89 a5 fc fe ff
	ff		 mov	 DWORD PTR $T155403[ebp], esp
  019ad	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  019b0	52		 push	 edx
  019b1	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  019b6	89 85 c4 fd ff
	ff		 mov	 DWORD PTR -572+[ebp], eax
  019bc	8b 8d 00 ff ff
	ff		 mov	 ecx, DWORD PTR $T155402[ebp]
  019c2	e8 00 00 00 00	 call	 ??0CCancelBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CCancelBtn::CCancelBtn
  019c7	89 85 c0 fd ff
	ff		 mov	 DWORD PTR -576+[ebp], eax
  019cd	8b 85 c0 fd ff
	ff		 mov	 eax, DWORD PTR -576+[ebp]
  019d3	89 85 bc fd ff
	ff		 mov	 DWORD PTR -580+[ebp], eax
  019d9	eb 0a		 jmp	 SHORT $L155405
$L155404:
  019db	c7 85 bc fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -580+[ebp], 0
$L155405:
  019e5	8b 8d bc fd ff
	ff		 mov	 ecx, DWORD PTR -580+[ebp]
  019eb	89 8d 04 ff ff
	ff		 mov	 DWORD PTR $T155401[ebp], ecx
  019f1	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  019f5	8b 95 04 ff ff
	ff		 mov	 edx, DWORD PTR $T155401[ebp]
  019fb	89 95 08 ff ff
	ff		 mov	 DWORD PTR $T155400[ebp], edx
  01a01	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01a05	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01a08	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01a0d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01a11	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01a14	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01a19	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01a20	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01a23	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01a28	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T155400[ebp]
  01a2e	e9 f0 03 00 00	 jmp	 $L147111
$L147234:

; 522  : 
; 523  : 	// handle exit button
; 524  : 	if ( id == "be") {

  01a33	68 00 00 00 00	 push	 OFFSET FLAT:$SG147245
  01a38	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01a3b	50		 push	 eax
  01a3c	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01a41	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01a46	85 c0		 test	 eax, eax
  01a48	0f 84 b5 00 00
	00		 je	 $L147244

; 525  : 		return new CExitBtn ( obj, this );

  01a4e	6a 14		 push	 20			; 00000014H
  01a50	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01a55	83 c4 04	 add	 esp, 4
  01a58	89 85 f0 fe ff
	ff		 mov	 DWORD PTR $T155408[ebp], eax
  01a5e	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  01a62	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR $T155408[ebp], 0
  01a69	74 40		 je	 SHORT $L155410
  01a6b	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01a71	51		 push	 ecx
  01a72	83 ec 08	 sub	 esp, 8
  01a75	8b cc		 mov	 ecx, esp
  01a77	89 a5 ec fe ff
	ff		 mov	 DWORD PTR $T155409[ebp], esp
  01a7d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01a80	52		 push	 edx
  01a81	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01a86	89 85 b8 fd ff
	ff		 mov	 DWORD PTR -584+[ebp], eax
  01a8c	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR $T155408[ebp]
  01a92	e8 00 00 00 00	 call	 ??0CExitBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CExitBtn::CExitBtn
  01a97	89 85 b4 fd ff
	ff		 mov	 DWORD PTR -588+[ebp], eax
  01a9d	8b 85 b4 fd ff
	ff		 mov	 eax, DWORD PTR -588+[ebp]
  01aa3	89 85 b0 fd ff
	ff		 mov	 DWORD PTR -592+[ebp], eax
  01aa9	eb 0a		 jmp	 SHORT $L155411
$L155410:
  01aab	c7 85 b0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -592+[ebp], 0
$L155411:
  01ab5	8b 8d b0 fd ff
	ff		 mov	 ecx, DWORD PTR -592+[ebp]
  01abb	89 8d f4 fe ff
	ff		 mov	 DWORD PTR $T155407[ebp], ecx
  01ac1	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01ac5	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR $T155407[ebp]
  01acb	89 95 f8 fe ff
	ff		 mov	 DWORD PTR $T155406[ebp], edx
  01ad1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01ad5	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01ad8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01add	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01ae1	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01ae4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01ae9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01af0	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01af3	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01af8	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR $T155406[ebp]
  01afe	e9 20 03 00 00	 jmp	 $L147111
$L147244:

; 527  : 
; 528  : 	// handle exit button
; 529  : 	if ( id == "bq") {

  01b03	68 00 00 00 00	 push	 OFFSET FLAT:$SG147253
  01b08	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01b0b	50		 push	 eax
  01b0c	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01b11	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01b16	85 c0		 test	 eax, eax
  01b18	0f 84 b5 00 00
	00		 je	 $L147252

; 530  : 		return new CQuestionExitBtn ( obj, this );

  01b1e	6a 14		 push	 20			; 00000014H
  01b20	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01b25	83 c4 04	 add	 esp, 4
  01b28	89 85 e0 fe ff
	ff		 mov	 DWORD PTR $T155414[ebp], eax
  01b2e	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  01b32	83 bd e0 fe ff
	ff 00		 cmp	 DWORD PTR $T155414[ebp], 0
  01b39	74 40		 je	 SHORT $L155416
  01b3b	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01b41	51		 push	 ecx
  01b42	83 ec 08	 sub	 esp, 8
  01b45	8b cc		 mov	 ecx, esp
  01b47	89 a5 dc fe ff
	ff		 mov	 DWORD PTR $T155415[ebp], esp
  01b4d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01b50	52		 push	 edx
  01b51	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01b56	89 85 ac fd ff
	ff		 mov	 DWORD PTR -596+[ebp], eax
  01b5c	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR $T155414[ebp]
  01b62	e8 00 00 00 00	 call	 ??0CQuestionExitBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CQuestionExitBtn::CQuestionExitBtn
  01b67	89 85 a8 fd ff
	ff		 mov	 DWORD PTR -600+[ebp], eax
  01b6d	8b 85 a8 fd ff
	ff		 mov	 eax, DWORD PTR -600+[ebp]
  01b73	89 85 a4 fd ff
	ff		 mov	 DWORD PTR -604+[ebp], eax
  01b79	eb 0a		 jmp	 SHORT $L155417
$L155416:
  01b7b	c7 85 a4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -604+[ebp], 0
$L155417:
  01b85	8b 8d a4 fd ff
	ff		 mov	 ecx, DWORD PTR -604+[ebp]
  01b8b	89 8d e4 fe ff
	ff		 mov	 DWORD PTR $T155413[ebp], ecx
  01b91	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01b95	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR $T155413[ebp]
  01b9b	89 95 e8 fe ff
	ff		 mov	 DWORD PTR $T155412[ebp], edx
  01ba1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01ba5	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01ba8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01bad	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01bb1	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01bb4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01bb9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01bc0	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01bc3	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01bc8	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR $T155412[ebp]
  01bce	e9 50 02 00 00	 jmp	 $L147111
$L147252:

; 532  : 
; 533  : 	// handle push button
; 534  : 	if ( id == "pb" ) {

  01bd3	68 00 00 00 00	 push	 OFFSET FLAT:$SG147261
  01bd8	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01bdb	50		 push	 eax
  01bdc	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01be1	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01be6	85 c0		 test	 eax, eax
  01be8	0f 84 b5 00 00
	00		 je	 $L147260

; 535  : 		return new CSkinBtn ( obj, this );

  01bee	6a 14		 push	 20			; 00000014H
  01bf0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01bf5	83 c4 04	 add	 esp, 4
  01bf8	89 85 d0 fe ff
	ff		 mov	 DWORD PTR $T155420[ebp], eax
  01bfe	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  01c02	83 bd d0 fe ff
	ff 00		 cmp	 DWORD PTR $T155420[ebp], 0
  01c09	74 40		 je	 SHORT $L155422
  01c0b	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01c11	51		 push	 ecx
  01c12	83 ec 08	 sub	 esp, 8
  01c15	8b cc		 mov	 ecx, esp
  01c17	89 a5 cc fe ff
	ff		 mov	 DWORD PTR $T155421[ebp], esp
  01c1d	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01c20	52		 push	 edx
  01c21	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01c26	89 85 a0 fd ff
	ff		 mov	 DWORD PTR -608+[ebp], eax
  01c2c	8b 8d d0 fe ff
	ff		 mov	 ecx, DWORD PTR $T155420[ebp]
  01c32	e8 00 00 00 00	 call	 ??0CSkinBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinBtn::CSkinBtn
  01c37	89 85 9c fd ff
	ff		 mov	 DWORD PTR -612+[ebp], eax
  01c3d	8b 85 9c fd ff
	ff		 mov	 eax, DWORD PTR -612+[ebp]
  01c43	89 85 98 fd ff
	ff		 mov	 DWORD PTR -616+[ebp], eax
  01c49	eb 0a		 jmp	 SHORT $L155423
$L155422:
  01c4b	c7 85 98 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -616+[ebp], 0
$L155423:
  01c55	8b 8d 98 fd ff
	ff		 mov	 ecx, DWORD PTR -616+[ebp]
  01c5b	89 8d d4 fe ff
	ff		 mov	 DWORD PTR $T155419[ebp], ecx
  01c61	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01c65	8b 95 d4 fe ff
	ff		 mov	 edx, DWORD PTR $T155419[ebp]
  01c6b	89 95 d8 fe ff
	ff		 mov	 DWORD PTR $T155418[ebp], edx
  01c71	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01c75	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01c78	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01c7d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01c81	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01c84	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01c89	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01c90	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01c93	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01c98	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR $T155418[ebp]
  01c9e	e9 80 01 00 00	 jmp	 $L147111
$L147260:

; 537  : 
; 538  : 	// handle toggle button
; 539  : 	if ( id == "tb" ) {

  01ca3	68 00 00 00 00	 push	 OFFSET FLAT:$SG147269
  01ca8	8d 45 ec	 lea	 eax, DWORD PTR _id$[ebp]
  01cab	50		 push	 eax
  01cac	e8 00 00 00 00	 call	 ??8@YG_NABVCString@@PBD@Z ; operator==
  01cb1	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  01cb6	85 c0		 test	 eax, eax
  01cb8	0f 84 b5 00 00
	00		 je	 $L147268

; 540  : 		return new CSkinToggleBtn ( obj, this );

  01cbe	6a 14		 push	 20			; 00000014H
  01cc0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01cc5	83 c4 04	 add	 esp, 4
  01cc8	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T155426[ebp], eax
  01cce	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  01cd2	83 bd c0 fe ff
	ff 00		 cmp	 DWORD PTR $T155426[ebp], 0
  01cd9	74 40		 je	 SHORT $L155428
  01cdb	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01ce1	51		 push	 ecx
  01ce2	83 ec 08	 sub	 esp, 8
  01ce5	8b cc		 mov	 ecx, esp
  01ce7	89 a5 bc fe ff
	ff		 mov	 DWORD PTR $T155427[ebp], esp
  01ced	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01cf0	52		 push	 edx
  01cf1	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01cf6	89 85 94 fd ff
	ff		 mov	 DWORD PTR -620+[ebp], eax
  01cfc	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR $T155426[ebp]
  01d02	e8 00 00 00 00	 call	 ??0CSkinToggleBtn@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinToggleBtn::CSkinToggleBtn
  01d07	89 85 90 fd ff
	ff		 mov	 DWORD PTR -624+[ebp], eax
  01d0d	8b 85 90 fd ff
	ff		 mov	 eax, DWORD PTR -624+[ebp]
  01d13	89 85 8c fd ff
	ff		 mov	 DWORD PTR -628+[ebp], eax
  01d19	eb 0a		 jmp	 SHORT $L155429
$L155428:
  01d1b	c7 85 8c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -628+[ebp], 0
$L155429:
  01d25	8b 8d 8c fd ff
	ff		 mov	 ecx, DWORD PTR -628+[ebp]
  01d2b	89 8d c4 fe ff
	ff		 mov	 DWORD PTR $T155425[ebp], ecx
  01d31	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01d35	8b 95 c4 fe ff
	ff		 mov	 edx, DWORD PTR $T155425[ebp]
  01d3b	89 95 c8 fe ff
	ff		 mov	 DWORD PTR $T155424[ebp], edx
  01d41	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01d45	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01d48	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01d4d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01d51	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01d54	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01d59	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01d60	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01d63	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01d68	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR $T155424[ebp]
  01d6e	e9 b0 00 00 00	 jmp	 $L147111
$L147268:

; 545  : 		return new CSkinCtrl ( obj, this );

  01d73	6a 14		 push	 20			; 00000014H
  01d75	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01d7a	83 c4 04	 add	 esp, 4
  01d7d	89 85 b0 fe ff
	ff		 mov	 DWORD PTR $T155432[ebp], eax
  01d83	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  01d87	83 bd b0 fe ff
	ff 00		 cmp	 DWORD PTR $T155432[ebp], 0
  01d8e	74 40		 je	 SHORT $L155434
  01d90	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  01d96	50		 push	 eax
  01d97	83 ec 08	 sub	 esp, 8
  01d9a	8b cc		 mov	 ecx, esp
  01d9c	89 a5 ac fe ff
	ff		 mov	 DWORD PTR $T155433[ebp], esp
  01da2	8d 55 08	 lea	 edx, DWORD PTR _obj$[ebp]
  01da5	52		 push	 edx
  01da6	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01dab	89 85 88 fd ff
	ff		 mov	 DWORD PTR -632+[ebp], eax
  01db1	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR $T155432[ebp]
  01db7	e8 00 00 00 00	 call	 ??0CSkinCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinCtrl::CSkinCtrl
  01dbc	89 85 84 fd ff
	ff		 mov	 DWORD PTR -636+[ebp], eax
  01dc2	8b 85 84 fd ff
	ff		 mov	 eax, DWORD PTR -636+[ebp]
  01dc8	89 85 80 fd ff
	ff		 mov	 DWORD PTR -640+[ebp], eax
  01dce	eb 0a		 jmp	 SHORT $L155435
$L155434:
  01dd0	c7 85 80 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR -640+[ebp], 0
$L155435:
  01dda	8b 8d 80 fd ff
	ff		 mov	 ecx, DWORD PTR -640+[ebp]
  01de0	89 8d b4 fe ff
	ff		 mov	 DWORD PTR $T155431[ebp], ecx
  01de6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01dea	8b 95 b4 fe ff
	ff		 mov	 edx, DWORD PTR $T155431[ebp]
  01df0	89 95 b8 fe ff
	ff		 mov	 DWORD PTR $T155430[ebp], edx
  01df6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01dfa	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  01dfd	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01e02	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01e06	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  01e09	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01e0e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01e15	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  01e18	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01e1d	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR $T155430[ebp]
$L147111:

; 547  : }

  01e23	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01e26	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01e2d	8b e5		 mov	 esp, ebp
  01e2f	5d		 pop	 ebp
  01e30	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L155436:
  000d8	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  000db	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000e0	c3		 ret	 0
$L155437:
  000e1	8d 4d f0	 lea	 ecx, DWORD PTR _name$[ebp]
  000e4	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000e9	c3		 ret	 0
$L155438:
  000ea	8d 4d ec	 lea	 ecx, DWORD PTR _id$[ebp]
  000ed	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000f2	c3		 ret	 0
$L155439:
  000f3	8b 45 d4	 mov	 eax, DWORD PTR $T155313[ebp]
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000fc	59		 pop	 ecx
  000fd	c3		 ret	 0
$L155441:
  000fe	8b 45 c4	 mov	 eax, DWORD PTR $T155319[ebp]
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00107	59		 pop	 ecx
  00108	c3		 ret	 0
$L155443:
  00109	8b 45 b4	 mov	 eax, DWORD PTR $T155325[ebp]
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00112	59		 pop	 ecx
  00113	c3		 ret	 0
$L155445:
  00114	8b 45 a4	 mov	 eax, DWORD PTR $T155331[ebp]
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	59		 pop	 ecx
  0011e	c3		 ret	 0
$L155453:
  0011f	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR $T155352[ebp]
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0012b	c3		 ret	 0
$L155455:
  0012c	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR $T155360[ebp]
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00138	c3		 ret	 0
$L155457:
  00139	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T155368[ebp]
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00145	c3		 ret	 0
$L155459:
  00146	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR $T155376[ebp]
  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00152	c3		 ret	 0
$L155461:
  00153	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR $T155384[ebp]
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0015f	59		 pop	 ecx
  00160	c3		 ret	 0
$L155463:
  00161	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T155390[ebp]
  00167	50		 push	 eax
  00168	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0016d	59		 pop	 ecx
  0016e	c3		 ret	 0
$L155465:
  0016f	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR $T155396[ebp]
  00175	50		 push	 eax
  00176	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0017b	59		 pop	 ecx
  0017c	c3		 ret	 0
$L155467:
  0017d	8b 85 00 ff ff
	ff		 mov	 eax, DWORD PTR $T155402[ebp]
  00183	50		 push	 eax
  00184	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00189	59		 pop	 ecx
  0018a	c3		 ret	 0
$L155469:
  0018b	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR $T155408[ebp]
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00197	59		 pop	 ecx
  00198	c3		 ret	 0
$L155471:
  00199	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR $T155414[ebp]
  0019f	50		 push	 eax
  001a0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001a5	59		 pop	 ecx
  001a6	c3		 ret	 0
$L155473:
  001a7	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR $T155420[ebp]
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001b3	59		 pop	 ecx
  001b4	c3		 ret	 0
$L155475:
  001b5	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T155426[ebp]
  001bb	50		 push	 eax
  001bc	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001c1	59		 pop	 ecx
  001c2	c3		 ret	 0
$L155477:
  001c3	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR $T155432[ebp]
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001cf	59		 pop	 ecx
  001d0	c3		 ret	 0
$L155481:
  001d1	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155480
  001d6	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CSkinWnd::MakeSkinCtrl
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L147289
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L147289:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?CreateSkinControls@CSkinWnd@@IAEHVCSkinObj@@@Z	; CSkinWnd::CreateSkinControls
EXTRN	?IsValid@CSkinObj@@QAEHXZ:NEAR			; CSkinObj::IsValid
xdata$x	SEGMENT
$T155492 DD	019930520H
	DD	01H
	DD	FLAT:$T155494
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155494 DD	0ffffffffH
	DD	FLAT:$L155489
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -36
$T155486 = -24
$T155487 = -28
_curObj$ = -20
$T155488 = -32
__$EHRec$ = -12
?CreateSkinControls@CSkinWnd@@IAEHXZ PROC NEAR		; CSkinWnd::CreateSkinControls

; 551  : {

  01e33	55		 push	 ebp
  01e34	8b ec		 mov	 ebp, esp
  01e36	6a ff		 push	 -1
  01e38	68 00 00 00 00	 push	 $L155493
  01e3d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01e43	50		 push	 eax
  01e44	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01e4b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01e4e	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx

; 552  : 	if ( !m_pSkinForm )

  01e51	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  01e54	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  01e58	75 04		 jne	 SHORT $L147294

; 553  : 		return FALSE;

  01e5a	33 c0		 xor	 eax, eax
  01e5c	eb 72		 jmp	 SHORT $L147293
$L147294:

; 554  : 
; 555  : 	//
; 556  : 	// This function steps through the attached skin form tree and creates a CSkinCtrl
; 557  : 	// for each element.  
; 558  : 	//
; 559  : 	CSkinObj curObj = m_pSkinForm->GetRootSkinObj();

  01e5e	8d 4d ec	 lea	 ecx, DWORD PTR _curObj$[ebp]
  01e61	51		 push	 ecx
  01e62	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  01e65	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
  01e68	e8 00 00 00 00	 call	 ?GetRootSkinObj@CSkinForm@@QAE?AVCSkinObj@@XZ ; CSkinForm::GetRootSkinObj
  01e6d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 560  : 
; 561  : 	if ( !curObj.IsValid() )

  01e74	8d 4d ec	 lea	 ecx, DWORD PTR _curObj$[ebp]
  01e77	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  01e7c	85 c0		 test	 eax, eax
  01e7e	75 1b		 jne	 SHORT $L147297

; 562  : 		return FALSE;

  01e80	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T155486[ebp], 0
  01e87	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01e8e	8d 4d ec	 lea	 ecx, DWORD PTR _curObj$[ebp]
  01e91	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01e96	8b 45 e8	 mov	 eax, DWORD PTR $T155486[ebp]
  01e99	eb 35		 jmp	 SHORT $L147293
$L147297:

; 563  : 
; 564  : 	// start the recursive procedure...
; 565  : 	CreateSkinControls ( curObj );

  01e9b	83 ec 08	 sub	 esp, 8
  01e9e	8b cc		 mov	 ecx, esp
  01ea0	89 65 e4	 mov	 DWORD PTR $T155487[ebp], esp
  01ea3	8d 45 ec	 lea	 eax, DWORD PTR _curObj$[ebp]
  01ea6	50		 push	 eax
  01ea7	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01eac	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  01eaf	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  01eb2	e8 00 00 00 00	 call	 ?CreateSkinControls@CSkinWnd@@IAEHVCSkinObj@@@Z ; CSkinWnd::CreateSkinControls

; 566  : 
; 567  : 	return TRUE;

  01eb7	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR $T155488[ebp], 1
  01ebe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01ec5	8d 4d ec	 lea	 ecx, DWORD PTR _curObj$[ebp]
  01ec8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01ecd	8b 45 e0	 mov	 eax, DWORD PTR $T155488[ebp]
$L147293:

; 568  : }

  01ed0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01ed3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01eda	8b e5		 mov	 esp, ebp
  01edc	5d		 pop	 ebp
  01edd	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L155489:
  001db	8d 4d ec	 lea	 ecx, DWORD PTR _curObj$[ebp]
  001de	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  001e3	c3		 ret	 0
$L155493:
  001e4	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155492
  001e9	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateSkinControls@CSkinWnd@@IAEHXZ ENDP		; CSkinWnd::CreateSkinControls
PUBLIC	??4CSkinObj@@QAEAAV0@ABV0@@Z			; CSkinObj::operator=
PUBLIC	?AddToRefreshList@CSkinWnd@@QAEHAAVCSkinCtrl@@@Z ; CSkinWnd::AddToRefreshList
PUBLIC	??A?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAPAVCSkinCtrl@@ABVCSkinObj@@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::operator[]
EXTRN	?GetFirstChildObj@CSkinObj@@QAE?AV1@XZ:NEAR	; CSkinObj::GetFirstChildObj
EXTRN	?GetNextSiblingObj@CSkinObj@@QAE?AV1@XZ:NEAR	; CSkinObj::GetNextSiblingObj
xdata$x	SEGMENT
$T155508 DD	019930520H
	DD	05H
	DD	FLAT:$T155510
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155510 DD	0ffffffffH
	DD	FLAT:$L155500
	DD	00H
	DD	FLAT:$L155501
	DD	01H
	DD	FLAT:$L155503
	DD	02H
	DD	FLAT:$L155504
	DD	01H
	DD	FLAT:$L155506
xdata$x	ENDS
_TEXT	SEGMENT
_root$ = 8
_this$ = -64
$T155496 = -44
$T155497 = -48
_sibling$ = -20
$T155498 = -56
$T155499 = -60
_theCtrl$147309 = -24
_hObj$147312 = -32
__$EHRec$ = -12
_child$147317 = -40
?CreateSkinControls@CSkinWnd@@IAEHVCSkinObj@@@Z PROC NEAR ; CSkinWnd::CreateSkinControls

; 572  : {

  01ede	55		 push	 ebp
  01edf	8b ec		 mov	 ebp, esp
  01ee1	6a ff		 push	 -1
  01ee3	68 00 00 00 00	 push	 $L155509
  01ee8	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01eee	50		 push	 eax
  01eef	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01ef6	83 ec 48	 sub	 esp, 72			; 00000048H
  01ef9	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  01efc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 573  : 	// step through all the siblings and add them
; 574  : 	CSkinObj sibling = root;

  01f03	8d 45 08	 lea	 eax, DWORD PTR _root$[ebp]
  01f06	50		 push	 eax
  01f07	8d 4d ec	 lea	 ecx, DWORD PTR _sibling$[ebp]
  01f0a	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01f0f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
$L147307:

; 575  : 
; 576  : 	while ( sibling.IsValid() ) {

  01f13	8d 4d ec	 lea	 ecx, DWORD PTR _sibling$[ebp]
  01f16	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  01f1b	85 c0		 test	 eax, eax
  01f1d	0f 84 00 01 00
	00		 je	 $L147308

; 577  : 		// put the current sibling object into the map...
; 578  : 		CSkinCtrl *theCtrl = MakeSkinCtrl ( sibling ); 

  01f23	83 ec 08	 sub	 esp, 8
  01f26	8b cc		 mov	 ecx, esp
  01f28	89 65 d4	 mov	 DWORD PTR $T155496[ebp], esp
  01f2b	8d 55 ec	 lea	 edx, DWORD PTR _sibling$[ebp]
  01f2e	52		 push	 edx
  01f2f	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01f34	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  01f37	8b 45 c0	 mov	 eax, DWORD PTR _this$[ebp]
  01f3a	8b 10		 mov	 edx, DWORD PTR [eax]
  01f3c	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  01f3f	ff 92 d8 00 00
	00		 call	 DWORD PTR [edx+216]
  01f45	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  01f48	8b 45 b8	 mov	 eax, DWORD PTR -72+[ebp]
  01f4b	89 45 e8	 mov	 DWORD PTR _theCtrl$147309[ebp], eax

; 579  : 
; 580  : 		if ( theCtrl ) {

  01f4e	83 7d e8 00	 cmp	 DWORD PTR _theCtrl$147309[ebp], 0
  01f52	0f 84 95 00 00
	00		 je	 $L147311

; 581  : 			CSkinObj hObj = (CSkinObj)*theCtrl;

  01f58	8b 4d e8	 mov	 ecx, DWORD PTR _theCtrl$147309[ebp]
  01f5b	51		 push	 ecx
  01f5c	8d 4d e0	 lea	 ecx, DWORD PTR _hObj$147312[ebp]
  01f5f	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01f64	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 582  : 
; 583  : 			// make sure the control and the sibling are linked...
; 584  : 			assert ( hObj == sibling );
; 585  : 
; 586  : 			// add the map entry...
; 587  : 			m_controlMap[sibling] = theCtrl;

  01f68	8d 55 ec	 lea	 edx, DWORD PTR _sibling$[ebp]
  01f6b	52		 push	 edx
  01f6c	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  01f6f	83 c1 48	 add	 ecx, 72			; 00000048H
  01f72	e8 00 00 00 00	 call	 ??A?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAPAVCSkinCtrl@@ABVCSkinObj@@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::operator[]
  01f77	8b 4d e8	 mov	 ecx, DWORD PTR _theCtrl$147309[ebp]
  01f7a	89 08		 mov	 DWORD PTR [eax], ecx

; 588  : 
; 589  : //			TRACE ( "control 0x%x is %s\n", theCtrl, (LPCTSTR)sibling.GetName() );
; 590  : 
; 591  : 			if ( theCtrl && theCtrl->IsDisabled() )

  01f7c	83 7d e8 00	 cmp	 DWORD PTR _theCtrl$147309[ebp], 0
  01f80	74 1b		 je	 SHORT $L147316
  01f82	8b 55 e8	 mov	 edx, DWORD PTR _theCtrl$147309[ebp]
  01f85	8b 02		 mov	 eax, DWORD PTR [edx]
  01f87	8b 4d e8	 mov	 ecx, DWORD PTR _theCtrl$147309[ebp]
  01f8a	ff 50 10	 call	 DWORD PTR [eax+16]
  01f8d	85 c0		 test	 eax, eax
  01f8f	74 0c		 je	 SHORT $L147316

; 592  : 				AddToRefreshList( *theCtrl );

  01f91	8b 4d e8	 mov	 ecx, DWORD PTR _theCtrl$147309[ebp]
  01f94	51		 push	 ecx
  01f95	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  01f98	e8 00 00 00 00	 call	 ?AddToRefreshList@CSkinWnd@@QAEHAAVCSkinCtrl@@@Z ; CSkinWnd::AddToRefreshList
$L147316:

; 593  : 
; 594  : 			// get the first child and add it
; 595  : 			CSkinObj child = sibling.GetFirstChildObj();

  01f9d	8d 55 d8	 lea	 edx, DWORD PTR _child$147317[ebp]
  01fa0	52		 push	 edx
  01fa1	8d 4d ec	 lea	 ecx, DWORD PTR _sibling$[ebp]
  01fa4	e8 00 00 00 00	 call	 ?GetFirstChildObj@CSkinObj@@QAE?AV1@XZ ; CSkinObj::GetFirstChildObj
  01fa9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 596  : 
; 597  : 			if ( child.IsValid() ) {

  01fad	8d 4d d8	 lea	 ecx, DWORD PTR _child$147317[ebp]
  01fb0	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  01fb5	85 c0		 test	 eax, eax
  01fb7	74 1c		 je	 SHORT $L147319

; 598  : 				CreateSkinControls ( child );

  01fb9	83 ec 08	 sub	 esp, 8
  01fbc	8b cc		 mov	 ecx, esp
  01fbe	89 65 d0	 mov	 DWORD PTR $T155497[ebp], esp
  01fc1	8d 45 d8	 lea	 eax, DWORD PTR _child$147317[ebp]
  01fc4	50		 push	 eax
  01fc5	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01fca	89 45 b4	 mov	 DWORD PTR -76+[ebp], eax
  01fcd	8b 4d c0	 mov	 ecx, DWORD PTR _this$[ebp]
  01fd0	e8 00 00 00 00	 call	 ?CreateSkinControls@CSkinWnd@@IAEHVCSkinObj@@@Z ; CSkinWnd::CreateSkinControls
$L147319:

; 600  : 		}

  01fd5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01fd9	8d 4d d8	 lea	 ecx, DWORD PTR _child$147317[ebp]
  01fdc	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01fe1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01fe5	8d 4d e0	 lea	 ecx, DWORD PTR _hObj$147312[ebp]
  01fe8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L147311:

; 601  : 
; 602  : 		// next sibling...
; 603  : 		sibling = sibling.GetNextSiblingObj();

  01fed	8d 4d c8	 lea	 ecx, DWORD PTR $T155498[ebp]
  01ff0	51		 push	 ecx
  01ff1	8d 4d ec	 lea	 ecx, DWORD PTR _sibling$[ebp]
  01ff4	e8 00 00 00 00	 call	 ?GetNextSiblingObj@CSkinObj@@QAE?AV1@XZ ; CSkinObj::GetNextSiblingObj
  01ff9	89 45 b0	 mov	 DWORD PTR -80+[ebp], eax
  01ffc	8b 55 b0	 mov	 edx, DWORD PTR -80+[ebp]
  01fff	89 55 ac	 mov	 DWORD PTR -84+[ebp], edx
  02002	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  02006	8b 45 ac	 mov	 eax, DWORD PTR -84+[ebp]
  02009	50		 push	 eax
  0200a	8d 4d ec	 lea	 ecx, DWORD PTR _sibling$[ebp]
  0200d	e8 00 00 00 00	 call	 ??4CSkinObj@@QAEAAV0@ABV0@@Z ; CSkinObj::operator=
  02012	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02016	8d 4d c8	 lea	 ecx, DWORD PTR $T155498[ebp]
  02019	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj

; 604  : 	}

  0201e	e9 f0 fe ff ff	 jmp	 $L147307
$L147308:

; 605  : 
; 606  : 	return TRUE;

  02023	c7 45 c4 01 00
	00 00		 mov	 DWORD PTR $T155499[ebp], 1
  0202a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0202e	8d 4d ec	 lea	 ecx, DWORD PTR _sibling$[ebp]
  02031	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02036	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0203d	8d 4d 08	 lea	 ecx, DWORD PTR _root$[ebp]
  02040	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02045	8b 45 c4	 mov	 eax, DWORD PTR $T155499[ebp]

; 607  : }

  02048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0204b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02052	8b e5		 mov	 esp, ebp
  02054	5d		 pop	 ebp
  02055	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L155500:
  001ee	8d 4d 08	 lea	 ecx, DWORD PTR _root$[ebp]
  001f1	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  001f6	c3		 ret	 0
$L155501:
  001f7	8d 4d ec	 lea	 ecx, DWORD PTR _sibling$[ebp]
  001fa	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  001ff	c3		 ret	 0
$L155503:
  00200	8d 4d e0	 lea	 ecx, DWORD PTR _hObj$147312[ebp]
  00203	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00208	c3		 ret	 0
$L155504:
  00209	8d 4d d8	 lea	 ecx, DWORD PTR _child$147317[ebp]
  0020c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00211	c3		 ret	 0
$L155506:
  00212	8d 4d c8	 lea	 ecx, DWORD PTR $T155498[ebp]
  00215	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0021a	c3		 ret	 0
$L155509:
  0021b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155508
  00220	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?CreateSkinControls@CSkinWnd@@IAEHVCSkinObj@@@Z ENDP	; CSkinWnd::CreateSkinControls
;	COMDAT ??4CSkinObj@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??4CSkinObj@@QAEAAV0@ABV0@@Z PROC NEAR			; CSkinObj::operator=, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??4CSkinObj@@QAEAAV0@ABV0@@Z ENDP			; CSkinObj::operator=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator
PUBLIC	??Diterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEAAPAVCSkinCtrl@@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator*
PUBLIC	??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++
PUBLIC	??9iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator!=
PUBLIC	?begin@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
PUBLIC	?end@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end
PUBLIC	?size@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::size
PUBLIC	?clear@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::clear
_TEXT	SEGMENT
$T155513 = -12
$T155514 = -16
$T155515 = -20
_this$ = -24
_it$ = -4
_ctrl$147342 = -8
?ProcessRefreshList@CSkinWnd@@UAEHXZ PROC NEAR		; CSkinWnd::ProcessRefreshList

; 611  : {

  02058	55		 push	 ebp
  02059	8b ec		 mov	 ebp, esp
  0205b	83 ec 18	 sub	 esp, 24			; 00000018H
  0205e	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 612  : 	if ( !m_refreshSet.size() )

  02061	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  02064	83 c1 58	 add	 ecx, 88			; 00000058H
  02067	e8 00 00 00 00	 call	 ?size@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::size
  0206c	85 c0		 test	 eax, eax
  0206e	75 07		 jne	 SHORT $L147330

; 613  : 		return FALSE;

  02070	33 c0		 xor	 eax, eax
  02072	e9 a1 00 00 00	 jmp	 $L147329
$L147330:

; 614  : 
; 615  : 	// if we're tracking, only let the tracking control refresh, but do not empty the refresh list
; 616  : 	if ( m_pTrackingCtrl != NULL ) {

  02077	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0207a	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [eax+132], 0
  02081	74 1e		 je	 SHORT $L147331

; 617  : 		m_pTrackingCtrl->Refresh();

  02083	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  02086	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [ecx+132]
  0208c	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0208f	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  02095	8b 10		 mov	 edx, DWORD PTR [eax]
  02097	ff 52 08	 call	 DWORD PTR [edx+8]

; 618  : 		return TRUE;

  0209a	b8 01 00 00 00	 mov	 eax, 1
  0209f	eb 77		 jmp	 SHORT $L147329
$L147331:

; 620  : 
; 621  : 	// give each control in the list a chance to refresh
; 622  : 	std::set<CSkinCtrl *>::iterator it;

  020a1	8d 4d fc	 lea	 ecx, DWORD PTR _it$[ebp]
  020a4	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator

; 623  : 	
; 624  : 	for ( it=m_refreshSet.begin(); it != m_refreshSet.end(); it++ ) {

  020a9	8d 45 f4	 lea	 eax, DWORD PTR $T155513[ebp]
  020ac	50		 push	 eax
  020ad	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  020b0	83 c1 58	 add	 ecx, 88			; 00000058H
  020b3	e8 00 00 00 00	 call	 ?begin@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
  020b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  020ba	89 4d fc	 mov	 DWORD PTR _it$[ebp], ecx
  020bd	eb 0e		 jmp	 SHORT $L147339
$L147340:
  020bf	6a 00		 push	 0
  020c1	8d 55 f0	 lea	 edx, DWORD PTR $T155514[ebp]
  020c4	52		 push	 edx
  020c5	8d 4d fc	 lea	 ecx, DWORD PTR _it$[ebp]
  020c8	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++
$L147339:
  020cd	8d 45 ec	 lea	 eax, DWORD PTR $T155515[ebp]
  020d0	50		 push	 eax
  020d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  020d4	83 c1 58	 add	 ecx, 88			; 00000058H
  020d7	e8 00 00 00 00	 call	 ?end@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end
  020dc	50		 push	 eax
  020dd	8d 4d fc	 lea	 ecx, DWORD PTR _it$[ebp]
  020e0	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  020e5	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  020ea	85 c0		 test	 eax, eax
  020ec	74 1a		 je	 SHORT $L147341

; 625  : 		CSkinCtrl *ctrl = *it;

  020ee	8d 4d fc	 lea	 ecx, DWORD PTR _it$[ebp]
  020f1	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEAAPAVCSkinCtrl@@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator*
  020f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  020f8	89 4d f8	 mov	 DWORD PTR _ctrl$147342[ebp], ecx

; 626  : 		ctrl->Refresh();

  020fb	8b 55 f8	 mov	 edx, DWORD PTR _ctrl$147342[ebp]
  020fe	8b 02		 mov	 eax, DWORD PTR [edx]
  02100	8b 4d f8	 mov	 ecx, DWORD PTR _ctrl$147342[ebp]
  02103	ff 50 08	 call	 DWORD PTR [eax+8]

; 627  : 	}

  02106	eb b7		 jmp	 SHORT $L147340
$L147341:

; 628  : 
; 629  : 	m_refreshSet.clear();

  02108	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0210b	83 c1 58	 add	 ecx, 88			; 00000058H
  0210e	e8 00 00 00 00	 call	 ?clear@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::clear

; 630  : 
; 631  : 	return TRUE;

  02113	b8 01 00 00 00	 mov	 eax, 1
$L147329:

; 632  : }

  02118	8b e5		 mov	 esp, ebp
  0211a	5d		 pop	 ebp
  0211b	c3		 ret	 0
?ProcessRefreshList@CSkinWnd@@UAEHXZ ENDP		; CSkinWnd::ProcessRefreshList
_TEXT	ENDS
PUBLIC	?insert@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::insert
_TEXT	SEGMENT
$T155517 = -4
$T155518 = -8
$T155519 = -16
_obj$ = 8
_this$ = -20
?AddToRefreshList@CSkinWnd@@QAEHAAVCSkinCtrl@@@Z PROC NEAR ; CSkinWnd::AddToRefreshList

; 636  : {

  0211c	55		 push	 ebp
  0211d	8b ec		 mov	 ebp, esp
  0211f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02122	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 637  : 	// don't add object's we don't own to the refresh list
; 638  : 	if ( FindControl ( obj ) == NULL )

  02125	83 ec 08	 sub	 esp, 8
  02128	8b cc		 mov	 ecx, esp
  0212a	89 65 fc	 mov	 DWORD PTR $T155517[ebp], esp
  0212d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  02130	50		 push	 eax
  02131	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02136	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  02139	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0213c	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  02141	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  02144	83 7d e4 00	 cmp	 DWORD PTR -28+[ebp], 0
  02148	75 04		 jne	 SHORT $L147348

; 639  : 		return FALSE;

  0214a	33 c0		 xor	 eax, eax
  0214c	eb 1e		 jmp	 SHORT $L147346
$L147348:

; 640  : 
; 641  : 	m_refreshSet.insert ( &obj );

  0214e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  02151	89 4d f8	 mov	 DWORD PTR $T155518[ebp], ecx
  02154	8d 55 f8	 lea	 edx, DWORD PTR $T155518[ebp]
  02157	52		 push	 edx
  02158	8d 45 f0	 lea	 eax, DWORD PTR $T155519[ebp]
  0215b	50		 push	 eax
  0215c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0215f	83 c1 58	 add	 ecx, 88			; 00000058H
  02162	e8 00 00 00 00	 call	 ?insert@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::insert

; 642  : 	return TRUE;

  02167	b8 01 00 00 00	 mov	 eax, 1
$L147346:

; 643  : }

  0216c	8b e5		 mov	 esp, ebp
  0216e	5d		 pop	 ebp
  0216f	c2 04 00	 ret	 4
?AddToRefreshList@CSkinWnd@@QAEHAAVCSkinCtrl@@@Z ENDP	; CSkinWnd::AddToRefreshList
_TEXT	ENDS
PUBLIC	?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z	; CSkinWnd::FindObject
EXTRN	??0CSkinObj@@QAE@XZ:NEAR			; CSkinObj::CSkinObj
EXTRN	?FindObject@CSkinForm@@QAE?AVCSkinObj@@PBD@Z:NEAR ; CSkinForm::FindObject
_TEXT	SEGMENT
$T155523 = -4
_name$ = 12
___$ReturnUdt$ = 8
_this$ = -8
?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z PROC NEAR	; CSkinWnd::FindObject

; 647  : {

  02172	55		 push	 ebp
  02173	8b ec		 mov	 ebp, esp
  02175	83 ec 08	 sub	 esp, 8
  02178	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0217b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T155523[ebp], 0

; 648  : 	if ( !m_pSkinForm )

  02182	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  02185	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  02189	75 16		 jne	 SHORT $L147378

; 649  : 		return CSkinObj();

  0218b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0218e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  02193	8b 4d fc	 mov	 ecx, DWORD PTR $T155523[ebp]
  02196	83 c9 01	 or	 ecx, 1
  02199	89 4d fc	 mov	 DWORD PTR $T155523[ebp], ecx
  0219c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0219f	eb 1f		 jmp	 SHORT $L147377
$L147378:

; 650  : 
; 651  : 	return m_pSkinForm->FindObject ( name );

  021a1	8b 55 0c	 mov	 edx, DWORD PTR _name$[ebp]
  021a4	52		 push	 edx
  021a5	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  021a8	50		 push	 eax
  021a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  021ac	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  021af	e8 00 00 00 00	 call	 ?FindObject@CSkinForm@@QAE?AVCSkinObj@@PBD@Z ; CSkinForm::FindObject
  021b4	8b 55 fc	 mov	 edx, DWORD PTR $T155523[ebp]
  021b7	83 ca 01	 or	 edx, 1
  021ba	89 55 fc	 mov	 DWORD PTR $T155523[ebp], edx
  021bd	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L147377:

; 652  : }

  021c0	8b e5		 mov	 esp, ebp
  021c2	5d		 pop	 ebp
  021c3	c2 08 00	 ret	 8
?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ENDP	; CSkinWnd::FindObject
_TEXT	ENDS
PUBLIC	?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z	; CSkinWnd::FindControl
_TEXT	SEGMENT
$T155526 = -4
_name$ = 8
_this$ = -8
?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z PROC NEAR	; CSkinWnd::FindControl

; 656  : {

  021c6	55		 push	 ebp
  021c7	8b ec		 mov	 ebp, esp
  021c9	83 ec 10	 sub	 esp, 16			; 00000010H
  021cc	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 657  : 	return FindControl ( FindObject ( name ) );

  021cf	83 ec 08	 sub	 esp, 8
  021d2	8b c4		 mov	 eax, esp
  021d4	89 65 fc	 mov	 DWORD PTR $T155526[ebp], esp
  021d7	8b 4d 08	 mov	 ecx, DWORD PTR _name$[ebp]
  021da	51		 push	 ecx
  021db	50		 push	 eax
  021dc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  021df	e8 00 00 00 00	 call	 ?FindObject@CSkinWnd@@QAE?AVCSkinObj@@PBD@Z ; CSkinWnd::FindObject
  021e4	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  021e7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  021ea	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  021ef	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
  021f2	8b 45 f0	 mov	 eax, DWORD PTR -16+[ebp]

; 658  : }

  021f5	8b e5		 mov	 esp, ebp
  021f7	5d		 pop	 ebp
  021f8	c2 04 00	 ret	 4
?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@PBD@Z ENDP	; CSkinWnd::FindControl
_TEXT	ENDS
PUBLIC	?find@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@ABVCSkinObj@@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::find
xdata$x	SEGMENT
$T155535 DD	019930520H
	DD	01H
	DD	FLAT:$T155537
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155537 DD	0ffffffffH
	DD	FLAT:$L155533
xdata$x	ENDS
_TEXT	SEGMENT
$T155529 = -20
$T155530 = -24
$T155531 = -28
$T155532 = -32
__$EHRec$ = -12
_obj$ = 8
_this$ = -36
_it$ = -16
?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z PROC NEAR ; CSkinWnd::FindControl

; 662  : {

  021fb	55		 push	 ebp
  021fc	8b ec		 mov	 ebp, esp
  021fe	6a ff		 push	 -1
  02200	68 00 00 00 00	 push	 $L155536
  02205	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0220b	50		 push	 eax
  0220c	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02213	83 ec 18	 sub	 esp, 24			; 00000018H
  02216	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx
  02219	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 663  : 	std::map<CSkinObj, CSkinCtrl *>::iterator it = m_controlMap.find ( obj );

  02220	8d 45 08	 lea	 eax, DWORD PTR _obj$[ebp]
  02223	50		 push	 eax
  02224	8d 4d ec	 lea	 ecx, DWORD PTR $T155529[ebp]
  02227	51		 push	 ecx
  02228	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0222b	83 c1 48	 add	 ecx, 72			; 00000048H
  0222e	e8 00 00 00 00	 call	 ?find@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@ABVCSkinObj@@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::find
  02233	8b 10		 mov	 edx, DWORD PTR [eax]
  02235	89 55 f0	 mov	 DWORD PTR _it$[ebp], edx

; 664  : 
; 665  : 	if ( it != m_controlMap.end() )

  02238	8d 45 e8	 lea	 eax, DWORD PTR $T155530[ebp]
  0223b	50		 push	 eax
  0223c	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0223f	83 c1 48	 add	 ecx, 72			; 00000048H
  02242	e8 00 00 00 00	 call	 ?end@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
  02247	50		 push	 eax
  02248	8d 4d f0	 lea	 ecx, DWORD PTR _it$[ebp]
  0224b	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  02250	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02255	85 c0		 test	 eax, eax
  02257	74 22		 je	 SHORT $L147399

; 666  : 		return (*it).second;

  02259	8d 4d f0	 lea	 ecx, DWORD PTR _it$[ebp]
  0225c	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator*
  02261	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  02264	89 4d e4	 mov	 DWORD PTR $T155531[ebp], ecx
  02267	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0226e	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  02271	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02276	8b 45 e4	 mov	 eax, DWORD PTR $T155531[ebp]
  02279	eb 19		 jmp	 SHORT $L147390
$L147399:

; 667  : 
; 668  : 	return NULL;

  0227b	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T155532[ebp], 0
  02282	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02289	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0228c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02291	8b 45 e0	 mov	 eax, DWORD PTR $T155532[ebp]
$L147390:

; 669  : }

  02294	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02297	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0229e	8b e5		 mov	 esp, ebp
  022a0	5d		 pop	 ebp
  022a1	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L155533:
  00225	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00228	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0022d	c3		 ret	 0
$L155536:
  0022e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155535
  00233	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ENDP ; CSkinWnd::FindControl
PUBLIC	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z		; CWnd::MoveWindow
PUBLIC	?MoveToBottom@CSkinWnd@@QAEHXZ			; CSkinWnd::MoveToBottom
PUBLIC	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetClientRect
_TEXT	SEGMENT
_this$ = -52
_parentRect$147407 = -32
_myRect$147408 = -48
_newRect$147409 = -16
?MoveToBottom@CSkinWnd@@QAEHXZ PROC NEAR		; CSkinWnd::MoveToBottom

; 677  : {

  022a4	55		 push	 ebp
  022a5	8b ec		 mov	 ebp, esp
  022a7	83 ec 34	 sub	 esp, 52			; 00000034H
  022aa	56		 push	 esi
  022ab	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 678  : 	if ( m_pParentWnd ) {

  022ae	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  022b1	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  022b5	74 6f		 je	 SHORT $L147406

; 679  : 		CRect parentRect, myRect, newRect;

  022b7	8d 4d e0	 lea	 ecx, DWORD PTR _parentRect$147407[ebp]
  022ba	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect
  022bf	8d 4d d0	 lea	 ecx, DWORD PTR _myRect$147408[ebp]
  022c2	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect
  022c7	8d 4d f0	 lea	 ecx, DWORD PTR _newRect$147409[ebp]
  022ca	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 680  : 		m_pParentWnd->GetClientRect ( &parentRect );

  022cf	8d 4d e0	 lea	 ecx, DWORD PTR _parentRect$147407[ebp]
  022d2	51		 push	 ecx
  022d3	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  022d6	8b 4a 78	 mov	 ecx, DWORD PTR [edx+120]
  022d9	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 681  : 		GetClientRect ( &myRect );

  022de	8d 45 d0	 lea	 eax, DWORD PTR _myRect$147408[ebp]
  022e1	50		 push	 eax
  022e2	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  022e5	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 682  : 
; 683  : 		newRect.top = parentRect.Height() - myRect.Height();

  022ea	8d 4d e0	 lea	 ecx, DWORD PTR _parentRect$147407[ebp]
  022ed	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  022f2	8b f0		 mov	 esi, eax
  022f4	8d 4d d0	 lea	 ecx, DWORD PTR _myRect$147408[ebp]
  022f7	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  022fc	2b f0		 sub	 esi, eax
  022fe	89 75 f4	 mov	 DWORD PTR _newRect$147409[ebp+4], esi

; 684  : 		newRect.bottom = parentRect.Height();

  02301	8d 4d e0	 lea	 ecx, DWORD PTR _parentRect$147407[ebp]
  02304	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  02309	89 45 fc	 mov	 DWORD PTR _newRect$147409[ebp+12], eax

; 685  : 		newRect.left = myRect.left;

  0230c	8b 4d d0	 mov	 ecx, DWORD PTR _myRect$147408[ebp]
  0230f	89 4d f0	 mov	 DWORD PTR _newRect$147409[ebp], ecx

; 686  : 		newRect.right = myRect.right;

  02312	8b 55 d8	 mov	 edx, DWORD PTR _myRect$147408[ebp+8]
  02315	89 55 f8	 mov	 DWORD PTR _newRect$147409[ebp+8], edx

; 687  : 
; 688  : 		MoveWindow ( &newRect ); 

  02318	6a 01		 push	 1
  0231a	8d 45 f0	 lea	 eax, DWORD PTR _newRect$147409[ebp]
  0231d	50		 push	 eax
  0231e	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  02321	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow
$L147406:

; 690  : 
; 691  : 	return FALSE;

  02326	33 c0		 xor	 eax, eax

; 692  : }

  02328	5e		 pop	 esi
  02329	8b e5		 mov	 esp, ebp
  0232b	5d		 pop	 ebp
  0232c	c3		 ret	 0
?MoveToBottom@CSkinWnd@@QAEHXZ ENDP			; CSkinWnd::MoveToBottom
_TEXT	ENDS
PUBLIC	?CenterOnScreen@CSkinWnd@@QAEXXZ		; CSkinWnd::CenterOnScreen
EXTRN	__imp__GetSystemMetrics@4:NEAR
_TEXT	SEGMENT
_this$ = -44
_myRect$ = -24
_nScreenWidth$ = -8
_nScreenHeight$ = -4
_centerRect$ = -40
?CenterOnScreen@CSkinWnd@@QAEXXZ PROC NEAR		; CSkinWnd::CenterOnScreen

; 696  : {

  0232d	55		 push	 ebp
  0232e	8b ec		 mov	 ebp, esp
  02330	83 ec 2c	 sub	 esp, 44			; 0000002cH
  02333	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 697  : 	CRect myRect;

  02336	8d 4d e8	 lea	 ecx, DWORD PTR _myRect$[ebp]
  02339	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 698  : 	GetWindowRect ( &myRect );

  0233e	8d 45 e8	 lea	 eax, DWORD PTR _myRect$[ebp]
  02341	50		 push	 eax
  02342	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02345	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 699  : 
; 700  : 	// get the width and height of the screen
; 701  : 	int nScreenWidth = GetSystemMetrics ( SM_CXSCREEN );

  0234a	6a 00		 push	 0
  0234c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  02352	89 45 f8	 mov	 DWORD PTR _nScreenWidth$[ebp], eax

; 702  : 	int nScreenHeight = GetSystemMetrics ( SM_CYSCREEN );

  02355	6a 01		 push	 1
  02357	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  0235d	89 45 fc	 mov	 DWORD PTR _nScreenHeight$[ebp], eax

; 703  : 
; 704  : 	// create a centered rectangle
; 705  : 	CRect centerRect;

  02360	8d 4d d8	 lea	 ecx, DWORD PTR _centerRect$[ebp]
  02363	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 706  : 	centerRect.left = (nScreenWidth - myRect.Width()) / 2;

  02368	8d 4d e8	 lea	 ecx, DWORD PTR _myRect$[ebp]
  0236b	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  02370	8b 4d f8	 mov	 ecx, DWORD PTR _nScreenWidth$[ebp]
  02373	2b c8		 sub	 ecx, eax
  02375	8b c1		 mov	 eax, ecx
  02377	99		 cdq
  02378	2b c2		 sub	 eax, edx
  0237a	d1 f8		 sar	 eax, 1
  0237c	89 45 d8	 mov	 DWORD PTR _centerRect$[ebp], eax

; 707  : 	centerRect.top = (nScreenHeight - myRect.Height()) / 2;

  0237f	8d 4d e8	 lea	 ecx, DWORD PTR _myRect$[ebp]
  02382	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  02387	8b 55 fc	 mov	 edx, DWORD PTR _nScreenHeight$[ebp]
  0238a	2b d0		 sub	 edx, eax
  0238c	8b c2		 mov	 eax, edx
  0238e	99		 cdq
  0238f	2b c2		 sub	 eax, edx
  02391	d1 f8		 sar	 eax, 1
  02393	89 45 dc	 mov	 DWORD PTR _centerRect$[ebp+4], eax

; 708  : 	centerRect.right = centerRect.left + myRect.Width();

  02396	8d 4d e8	 lea	 ecx, DWORD PTR _myRect$[ebp]
  02399	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  0239e	8b 4d d8	 mov	 ecx, DWORD PTR _centerRect$[ebp]
  023a1	03 c8		 add	 ecx, eax
  023a3	89 4d e0	 mov	 DWORD PTR _centerRect$[ebp+8], ecx

; 709  : 	centerRect.bottom = centerRect.top + myRect.Height();

  023a6	8d 4d e8	 lea	 ecx, DWORD PTR _myRect$[ebp]
  023a9	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  023ae	8b 55 dc	 mov	 edx, DWORD PTR _centerRect$[ebp+4]
  023b1	03 d0		 add	 edx, eax
  023b3	89 55 e4	 mov	 DWORD PTR _centerRect$[ebp+12], edx

; 710  : 
; 711  : 	// update the window position
; 712  : 	MoveWindow ( &centerRect );

  023b6	6a 01		 push	 1
  023b8	8d 45 d8	 lea	 eax, DWORD PTR _centerRect$[ebp]
  023bb	50		 push	 eax
  023bc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  023bf	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow

; 713  : }

  023c4	8b e5		 mov	 esp, ebp
  023c6	5d		 pop	 ebp
  023c7	c3		 ret	 0
?CenterOnScreen@CSkinWnd@@QAEXXZ ENDP			; CSkinWnd::CenterOnScreen
_TEXT	ENDS
PUBLIC	?CenterInParent@CSkinWnd@@QAEXXZ		; CSkinWnd::CenterInParent
EXTRN	?CenterWindow@CWnd@@QAEXPAV1@@Z:NEAR		; CWnd::CenterWindow
_TEXT	SEGMENT
_this$ = -4
?CenterInParent@CSkinWnd@@QAEXXZ PROC NEAR		; CSkinWnd::CenterInParent

; 717  : {

  023c8	55		 push	 ebp
  023c9	8b ec		 mov	 ebp, esp
  023cb	51		 push	 ecx
  023cc	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 718  : 	if ( NULL == m_pParentWnd ) {

  023cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  023d2	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  023d6	75 02		 jne	 SHORT $L147422

; 719  : 		return;

  023d8	eb 0a		 jmp	 SHORT $L147421
$L147422:

; 721  : 
; 722  : 	// This command is better because it works with child pop-ups too
; 723  : 	CenterWindow();

  023da	6a 00		 push	 0
  023dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  023df	e8 00 00 00 00	 call	 ?CenterWindow@CWnd@@QAEXPAV1@@Z ; CWnd::CenterWindow
$L147421:

; 724  : 
; 725  : #if 0
; 726  : 	CRect myRect, parentRect;
; 727  : 	GetClientRect ( &myRect );
; 728  : 	m_pParentWnd->GetClientRect ( &parentRect );
; 729  : 
; 730  : 	// create a centered rectangle
; 731  : 	CRect centerRect;
; 732  : 	centerRect.left = parentRect.left + ((parentRect.Width() - myRect.Width()) / 2);
; 733  : 	centerRect.top = parentRect.top + ((parentRect.Height() - myRect.Height()) / 2);
; 734  : 	centerRect.right = centerRect.left + myRect.Width();
; 735  : 	centerRect.bottom = centerRect.top + myRect.Height();
; 736  : 
; 737  : 	// update the window position
; 738  : 	MoveWindow ( &centerRect );
; 739  : #endif
; 740  : }

  023e4	8b e5		 mov	 esp, ebp
  023e6	5d		 pop	 ebp
  023e7	c3		 ret	 0
?CenterInParent@CSkinWnd@@QAEXXZ ENDP			; CSkinWnd::CenterInParent
_TEXT	ENDS
PUBLIC	?OffsetRect@CRect@@QAEXHH@Z			; CRect::OffsetRect
PUBLIC	?CenterOnPoint@CSkinWnd@@QAEXHH_N@Z		; CSkinWnd::CenterOnPoint
_TEXT	SEGMENT
_nX$ = 8
_nY$ = 12
_bForceOnScreen$ = 16
_this$ = -44
_myRect$ = -16
_centerRect$ = -32
_nScreenWidth$147432 = -40
_nScreenHeight$147433 = -36
?CenterOnPoint@CSkinWnd@@QAEXHH_N@Z PROC NEAR		; CSkinWnd::CenterOnPoint

; 744  : {

  023e8	55		 push	 ebp
  023e9	8b ec		 mov	 ebp, esp
  023eb	83 ec 2c	 sub	 esp, 44			; 0000002cH
  023ee	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 745  : 	CRect myRect;

  023f1	8d 4d f0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  023f4	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 746  : 	GetWindowRect ( &myRect );

  023f9	8d 45 f0	 lea	 eax, DWORD PTR _myRect$[ebp]
  023fc	50		 push	 eax
  023fd	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02400	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 747  : 
; 748  : 	CRect centerRect;

  02405	8d 4d e0	 lea	 ecx, DWORD PTR _centerRect$[ebp]
  02408	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 749  : 	centerRect.left = nX - myRect.Width() / 2;

  0240d	8d 4d f0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  02410	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  02415	99		 cdq
  02416	2b c2		 sub	 eax, edx
  02418	d1 f8		 sar	 eax, 1
  0241a	8b 4d 08	 mov	 ecx, DWORD PTR _nX$[ebp]
  0241d	2b c8		 sub	 ecx, eax
  0241f	89 4d e0	 mov	 DWORD PTR _centerRect$[ebp], ecx

; 750  : 	centerRect.top = nY - myRect.Height() / 2;

  02422	8d 4d f0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  02425	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  0242a	99		 cdq
  0242b	2b c2		 sub	 eax, edx
  0242d	d1 f8		 sar	 eax, 1
  0242f	8b 55 0c	 mov	 edx, DWORD PTR _nY$[ebp]
  02432	2b d0		 sub	 edx, eax
  02434	89 55 e4	 mov	 DWORD PTR _centerRect$[ebp+4], edx

; 751  : 	centerRect.right = centerRect.left + myRect.Width();

  02437	8d 4d f0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  0243a	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  0243f	8b 4d e0	 mov	 ecx, DWORD PTR _centerRect$[ebp]
  02442	03 c8		 add	 ecx, eax
  02444	89 4d e8	 mov	 DWORD PTR _centerRect$[ebp+8], ecx

; 752  : 	centerRect.bottom = centerRect.top + myRect.Height();

  02447	8d 4d f0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  0244a	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  0244f	8b 55 e4	 mov	 edx, DWORD PTR _centerRect$[ebp+4]
  02452	03 d0		 add	 edx, eax
  02454	89 55 ec	 mov	 DWORD PTR _centerRect$[ebp+12], edx

; 753  : 
; 754  : 	// keep the rectangle on screen...
; 755  : 	if ( bForceOnScreen ) {

  02457	8b 45 10	 mov	 eax, DWORD PTR _bForceOnScreen$[ebp]
  0245a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0245f	85 c0		 test	 eax, eax
  02461	74 74		 je	 SHORT $L147437

; 756  : 		int nScreenWidth = GetSystemMetrics ( SM_CXSCREEN );

  02463	6a 00		 push	 0
  02465	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  0246b	89 45 d8	 mov	 DWORD PTR _nScreenWidth$147432[ebp], eax

; 757  : 		int nScreenHeight = GetSystemMetrics ( SM_CYSCREEN );

  0246e	6a 01		 push	 1
  02470	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  02476	89 45 dc	 mov	 DWORD PTR _nScreenHeight$147433[ebp], eax

; 758  : 	
; 759  : 		if ( centerRect.left < 0 ) {

  02479	83 7d e0 00	 cmp	 DWORD PTR _centerRect$[ebp], 0
  0247d	7d 10		 jge	 SHORT $L147434

; 760  : 			centerRect.OffsetRect ( -centerRect.left, 0 );

  0247f	6a 00		 push	 0
  02481	8b 4d e0	 mov	 ecx, DWORD PTR _centerRect$[ebp]
  02484	f7 d9		 neg	 ecx
  02486	51		 push	 ecx
  02487	8d 4d e0	 lea	 ecx, DWORD PTR _centerRect$[ebp]
  0248a	e8 00 00 00 00	 call	 ?OffsetRect@CRect@@QAEXHH@Z ; CRect::OffsetRect
$L147434:

; 762  : 	
; 763  : 		if ( centerRect.top < 0 ) {

  0248f	83 7d e4 00	 cmp	 DWORD PTR _centerRect$[ebp+4], 0
  02493	7d 10		 jge	 SHORT $L147435

; 764  : 			centerRect.OffsetRect ( 0, -centerRect.top );

  02495	8b 55 e4	 mov	 edx, DWORD PTR _centerRect$[ebp+4]
  02498	f7 da		 neg	 edx
  0249a	52		 push	 edx
  0249b	6a 00		 push	 0
  0249d	8d 4d e0	 lea	 ecx, DWORD PTR _centerRect$[ebp]
  024a0	e8 00 00 00 00	 call	 ?OffsetRect@CRect@@QAEXHH@Z ; CRect::OffsetRect
$L147435:

; 766  : 	
; 767  : 		if ( centerRect.right > nScreenWidth ) {

  024a5	8b 45 e8	 mov	 eax, DWORD PTR _centerRect$[ebp+8]
  024a8	3b 45 d8	 cmp	 eax, DWORD PTR _nScreenWidth$147432[ebp]
  024ab	7e 11		 jle	 SHORT $L147436

; 768  : 			centerRect.OffsetRect ( nScreenWidth - centerRect.right, 0 );

  024ad	6a 00		 push	 0
  024af	8b 4d d8	 mov	 ecx, DWORD PTR _nScreenWidth$147432[ebp]
  024b2	2b 4d e8	 sub	 ecx, DWORD PTR _centerRect$[ebp+8]
  024b5	51		 push	 ecx
  024b6	8d 4d e0	 lea	 ecx, DWORD PTR _centerRect$[ebp]
  024b9	e8 00 00 00 00	 call	 ?OffsetRect@CRect@@QAEXHH@Z ; CRect::OffsetRect
$L147436:

; 770  : 	
; 771  : 		if ( centerRect.bottom > nScreenHeight ) {

  024be	8b 55 ec	 mov	 edx, DWORD PTR _centerRect$[ebp+12]
  024c1	3b 55 dc	 cmp	 edx, DWORD PTR _nScreenHeight$147433[ebp]
  024c4	7e 11		 jle	 SHORT $L147437

; 772  : 			centerRect.OffsetRect ( 0, nScreenHeight - centerRect.bottom );

  024c6	8b 45 dc	 mov	 eax, DWORD PTR _nScreenHeight$147433[ebp]
  024c9	2b 45 ec	 sub	 eax, DWORD PTR _centerRect$[ebp+12]
  024cc	50		 push	 eax
  024cd	6a 00		 push	 0
  024cf	8d 4d e0	 lea	 ecx, DWORD PTR _centerRect$[ebp]
  024d2	e8 00 00 00 00	 call	 ?OffsetRect@CRect@@QAEXHH@Z ; CRect::OffsetRect
$L147437:

; 775  : 
; 776  : 	// update the window position
; 777  : 	MoveWindow ( &centerRect );

  024d7	6a 01		 push	 1
  024d9	8d 4d e0	 lea	 ecx, DWORD PTR _centerRect$[ebp]
  024dc	51		 push	 ecx
  024dd	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  024e0	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow

; 778  : }

  024e5	8b e5		 mov	 esp, ebp
  024e7	5d		 pop	 ebp
  024e8	c2 0c 00	 ret	 12			; 0000000cH
?CenterOnPoint@CSkinWnd@@QAEXHH_N@Z ENDP		; CSkinWnd::CenterOnPoint
_TEXT	ENDS
PUBLIC	?RestoreLocation@CSkinWnd@@QAE_NXZ		; CSkinWnd::RestoreLocation
PUBLIC	?GetSkinName@CSkinWnd@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CSkinWnd::GetSkinName
PUBLIC	??0CPoint@@QAE@XZ				; CPoint::CPoint
EXTRN	?GetPosn@CWindowMgr@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVCPoint@@@Z:NEAR ; CWindowMgr::GetPosn
_TEXT	SEGMENT
$T155543 = -16
_this$ = -20
_boFoundEntry$ = -4
_point$ = -12
?RestoreLocation@CSkinWnd@@QAE_NXZ PROC NEAR		; CSkinWnd::RestoreLocation

; 782  : {

  024eb	55		 push	 ebp
  024ec	8b ec		 mov	 ebp, esp
  024ee	83 ec 1c	 sub	 esp, 28			; 0000001cH
  024f1	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 783  : 	bool boFoundEntry;
; 784  : 	assert ( g_pWindowMgr != NULL );
; 785  : 
; 786  : 	CPoint point;

  024f4	8d 4d f4	 lea	 ecx, DWORD PTR _point$[ebp]
  024f7	e8 00 00 00 00	 call	 ??0CPoint@@QAE@XZ	; CPoint::CPoint

; 787  : 	boFoundEntry = g_pWindowMgr->GetPosn ( GetSkinName(), point );

  024fc	8d 45 f4	 lea	 eax, DWORD PTR _point$[ebp]
  024ff	50		 push	 eax
  02500	83 ec 10	 sub	 esp, 16			; 00000010H
  02503	8b cc		 mov	 ecx, esp
  02505	89 65 f0	 mov	 DWORD PTR $T155543[ebp], esp
  02508	51		 push	 ecx
  02509	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0250c	e8 00 00 00 00	 call	 ?GetSkinName@CSkinWnd@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CSkinWnd::GetSkinName
  02511	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  02514	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  0251a	e8 00 00 00 00	 call	 ?GetPosn@CWindowMgr@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVCPoint@@@Z ; CWindowMgr::GetPosn
  0251f	88 45 e7	 mov	 BYTE PTR -25+[ebp], al
  02522	8a 55 e7	 mov	 dl, BYTE PTR -25+[ebp]
  02525	88 55 fc	 mov	 BYTE PTR _boFoundEntry$[ebp], dl

; 788  : 
; 789  : 	CenterOnPoint ( point.x, point.y );

  02528	6a 01		 push	 1
  0252a	8b 45 f8	 mov	 eax, DWORD PTR _point$[ebp+4]
  0252d	50		 push	 eax
  0252e	8b 4d f4	 mov	 ecx, DWORD PTR _point$[ebp]
  02531	51		 push	 ecx
  02532	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  02535	e8 00 00 00 00	 call	 ?CenterOnPoint@CSkinWnd@@QAEXHH_N@Z ; CSkinWnd::CenterOnPoint

; 790  : 
; 791  : 	return boFoundEntry;

  0253a	8a 45 fc	 mov	 al, BYTE PTR _boFoundEntry$[ebp]

; 792  : }

  0253d	8b e5		 mov	 esp, ebp
  0253f	5d		 pop	 ebp
  02540	c3		 ret	 0
?RestoreLocation@CSkinWnd@@QAE_NXZ ENDP			; CSkinWnd::RestoreLocation
_TEXT	ENDS
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:NEAR
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:NEAR
EXTRN	??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z:NEAR ; std::operator+
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:NEAR
EXTRN	?GetSkinName@CSkinForm@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:NEAR ; CSkinForm::GetSkinName
EXTRN	?GetFullScreen@CWindowMgr@@QAEHXZ:NEAR		; CWindowMgr::GetFullScreen
_DATA	SEGMENT
	ORG $+1
$SG147465 DB	'fs_', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155558 DD	019930520H
	DD	05H
	DD	FLAT:$T155560
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155560 DD	0ffffffffH
	DD	FLAT:$L155554
	DD	00H
	DD	FLAT:$L155550
	DD	01H
	DD	FLAT:$L155551
	DD	02H
	DD	FLAT:$L155552
	DD	01H
	DD	FLAT:$L155553
xdata$x	ENDS
_TEXT	SEGMENT
$T155546 = -32
$T155547 = -48
$T155548 = -64
$T155549 = -80
$T155555 = -84
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -88
_sName$ = -28
?GetSkinName@CSkinWnd@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC NEAR ; CSkinWnd::GetSkinName

; 796  : {

  02541	55		 push	 ebp
  02542	8b ec		 mov	 ebp, esp
  02544	6a ff		 push	 -1
  02546	68 00 00 00 00	 push	 $L155559
  0254b	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02551	50		 push	 eax
  02552	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02559	83 ec 64	 sub	 esp, 100		; 00000064H
  0255c	89 4d a8	 mov	 DWORD PTR _this$[ebp], ecx
  0255f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR $T155555[ebp], 0

; 797  : 	std::string sName;

  02566	8d 45 e0	 lea	 eax, DWORD PTR $T155546[ebp]
  02569	50		 push	 eax
  0256a	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  0256d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
  02573	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 798  : 
; 799  : 	assert ( m_pSkinForm != NULL );
; 800  : 
; 801  : 	if ( g_pWindowMgr && g_pWindowMgr->GetFullScreen() )

  0257a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  02581	74 76		 je	 SHORT $L147456
  02583	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  02589	e8 00 00 00 00	 call	 ?GetFullScreen@CWindowMgr@@QAEHXZ ; CWindowMgr::GetFullScreen
  0258e	85 c0		 test	 eax, eax
  02590	74 67		 je	 SHORT $L147456

; 802  : 		sName = "fs_" + m_pSkinForm->GetSkinName();

  02592	8d 4d d0	 lea	 ecx, DWORD PTR $T155547[ebp]
  02595	51		 push	 ecx
  02596	8b 55 a8	 mov	 edx, DWORD PTR _this$[ebp]
  02599	8b 4a 7c	 mov	 ecx, DWORD PTR [edx+124]
  0259c	e8 00 00 00 00	 call	 ?GetSkinName@CSkinForm@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CSkinForm::GetSkinName
  025a1	89 45 a4	 mov	 DWORD PTR -92+[ebp], eax
  025a4	8b 45 a4	 mov	 eax, DWORD PTR -92+[ebp]
  025a7	89 45 a0	 mov	 DWORD PTR -96+[ebp], eax
  025aa	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  025ae	8b 4d a0	 mov	 ecx, DWORD PTR -96+[ebp]
  025b1	51		 push	 ecx
  025b2	68 00 00 00 00	 push	 OFFSET FLAT:$SG147465
  025b7	8d 55 c0	 lea	 edx, DWORD PTR $T155548[ebp]
  025ba	52		 push	 edx
  025bb	e8 00 00 00 00	 call	 ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+
  025c0	83 c4 0c	 add	 esp, 12			; 0000000cH
  025c3	89 45 9c	 mov	 DWORD PTR -100+[ebp], eax
  025c6	8b 45 9c	 mov	 eax, DWORD PTR -100+[ebp]
  025c9	89 45 98	 mov	 DWORD PTR -104+[ebp], eax
  025cc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  025d0	8b 4d 98	 mov	 ecx, DWORD PTR -104+[ebp]
  025d3	51		 push	 ecx
  025d4	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  025d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
  025dd	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  025e1	8d 4d c0	 lea	 ecx, DWORD PTR $T155548[ebp]
  025e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  025ea	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  025ee	8d 4d d0	 lea	 ecx, DWORD PTR $T155547[ebp]
  025f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 803  : 	else

  025f7	eb 36		 jmp	 SHORT $L147466
$L147456:

; 804  : 		sName = m_pSkinForm->GetSkinName();

  025f9	8d 55 b0	 lea	 edx, DWORD PTR $T155549[ebp]
  025fc	52		 push	 edx
  025fd	8b 45 a8	 mov	 eax, DWORD PTR _this$[ebp]
  02600	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  02603	e8 00 00 00 00	 call	 ?GetSkinName@CSkinForm@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CSkinForm::GetSkinName
  02608	89 45 94	 mov	 DWORD PTR -108+[ebp], eax
  0260b	8b 4d 94	 mov	 ecx, DWORD PTR -108+[ebp]
  0260e	89 4d 90	 mov	 DWORD PTR -112+[ebp], ecx
  02611	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  02615	8b 55 90	 mov	 edx, DWORD PTR -112+[ebp]
  02618	52		 push	 edx
  02619	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  0261c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
  02622	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02626	8d 4d b0	 lea	 ecx, DWORD PTR $T155549[ebp]
  02629	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$L147466:

; 805  : 
; 806  : 	return sName;

  0262f	8d 45 e4	 lea	 eax, DWORD PTR _sName$[ebp]
  02632	50		 push	 eax
  02633	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  02636	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
  0263c	8b 4d ac	 mov	 ecx, DWORD PTR $T155555[ebp]
  0263f	83 c9 01	 or	 ecx, 1
  02642	89 4d ac	 mov	 DWORD PTR $T155555[ebp], ecx
  02645	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02649	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  0264c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  02652	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 807  : }

  02655	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02658	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0265f	8b e5		 mov	 esp, ebp
  02661	5d		 pop	 ebp
  02662	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L155550:
  00238	8d 4d e4	 lea	 ecx, DWORD PTR _sName$[ebp]
  0023b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00241	c3		 ret	 0
$L155551:
  00242	8d 4d d0	 lea	 ecx, DWORD PTR $T155547[ebp]
  00245	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0024b	c3		 ret	 0
$L155552:
  0024c	8d 4d c0	 lea	 ecx, DWORD PTR $T155548[ebp]
  0024f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00255	c3		 ret	 0
$L155553:
  00256	8d 4d b0	 lea	 ecx, DWORD PTR $T155549[ebp]
  00259	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0025f	c3		 ret	 0
$L155554:
  00260	8b 45 ac	 mov	 eax, DWORD PTR $T155555[ebp]
  00263	83 e0 01	 and	 eax, 1
  00266	85 c0		 test	 eax, eax
  00268	0f 84 09 00 00
	00		 je	 $L155556
  0026e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00271	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$L155556:
  00277	c3		 ret	 0
$L155559:
  00278	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155558
  0027d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetSkinName@CSkinWnd@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CSkinWnd::GetSkinName
_TEXT	SEGMENT
_this$ = -4
?UpdateTracking@CSkinWnd@@UAEXXZ PROC NEAR		; CSkinWnd::UpdateTracking

; 811  : {

  02665	55		 push	 ebp
  02666	8b ec		 mov	 ebp, esp
  02668	51		 push	 ecx
  02669	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 812  : 	assert ( m_pTrackingCtrl != NULL );
; 813  : 	m_pTrackingCtrl->UpdateTracking ( );

  0266c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0266f	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  02675	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02678	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0267e	8b 10		 mov	 edx, DWORD PTR [eax]
  02680	ff 52 04	 call	 DWORD PTR [edx+4]

; 814  : }

  02683	8b e5		 mov	 esp, ebp
  02685	5d		 pop	 ebp
  02686	c3		 ret	 0
?UpdateTracking@CSkinWnd@@UAEXXZ ENDP			; CSkinWnd::UpdateTracking
_this$ = -4
?EndTracking@CSkinWnd@@QAEXAAVCSkinCtrl@@@Z PROC NEAR	; CSkinWnd::EndTracking

; 818  : {

  02687	55		 push	 ebp
  02688	8b ec		 mov	 ebp, esp
  0268a	51		 push	 ecx
  0268b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 819  : 	// added the NULL in case the window disposes while tracking.  Had to remove the tracking window faster
; 820  : 	// or else update got called on an invalid window.
; 821  : 	assert ( g_pTrackingWindow == this || NULL == g_pTrackingWindow );
; 822  : 	assert ( &obj == m_pTrackingCtrl || NULL == m_pTrackingCtrl );
; 823  : 
; 824  : 	// the old object is not tracking any more...
; 825  : 	g_pTrackingWindow = NULL;

  0268e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pTrackingWindow@@3PAVCSkinWnd@@A, 0 ; g_pTrackingWindow

; 826  : 	m_pTrackingCtrl = NULL;

  02698	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0269b	c7 80 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+132], 0

; 827  : }

  026a5	8b e5		 mov	 esp, ebp
  026a7	5d		 pop	 ebp
  026a8	c2 04 00	 ret	 4
?EndTracking@CSkinWnd@@QAEXAAVCSkinCtrl@@@Z ENDP	; CSkinWnd::EndTracking
_TEXT	ENDS
PUBLIC	?BeginTracking@CSkinWnd@@QAEXAAVCSkinCtrl@@@Z	; CSkinWnd::BeginTracking
_TEXT	SEGMENT
_obj$ = 8
_this$ = -4
?BeginTracking@CSkinWnd@@QAEXAAVCSkinCtrl@@@Z PROC NEAR	; CSkinWnd::BeginTracking

; 831  : {

  026ab	55		 push	 ebp
  026ac	8b ec		 mov	 ebp, esp
  026ae	51		 push	 ecx
  026af	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 832  : 	assert ( g_pTrackingWindow == NULL );
; 833  : 
; 834  : 	g_pTrackingWindow = this;

  026b2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  026b5	a3 00 00 00 00	 mov	 DWORD PTR ?g_pTrackingWindow@@3PAVCSkinWnd@@A, eax ; g_pTrackingWindow

; 835  : 	m_pTrackingCtrl = &obj;

  026ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  026bd	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  026c0	89 91 84 00 00
	00		 mov	 DWORD PTR [ecx+132], edx

; 836  : }

  026c6	8b e5		 mov	 esp, ebp
  026c8	5d		 pop	 ebp
  026c9	c2 04 00	 ret	 4
?BeginTracking@CSkinWnd@@QAEXAAVCSkinCtrl@@@Z ENDP	; CSkinWnd::BeginTracking
_TEXT	ENDS
PUBLIC	?StopTracking@CSkinWnd@@QAEXXZ			; CSkinWnd::StopTracking
EXTRN	?EndTracking@CSkinCtrl@@QAEXXZ:NEAR		; CSkinCtrl::EndTracking
_TEXT	SEGMENT
_this$ = -4
?StopTracking@CSkinWnd@@QAEXXZ PROC NEAR		; CSkinWnd::StopTracking

; 840  : {

  026cc	55		 push	 ebp
  026cd	8b ec		 mov	 ebp, esp
  026cf	51		 push	 ecx
  026d0	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 841  : 	if ( m_pTrackingCtrl ) 

  026d3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  026d6	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [eax+132], 0
  026dd	74 0e		 je	 SHORT $L147488

; 842  : 		m_pTrackingCtrl->EndTracking();

  026df	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  026e2	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [ecx+132]
  026e8	e8 00 00 00 00	 call	 ?EndTracking@CSkinCtrl@@QAEXXZ ; CSkinCtrl::EndTracking
$L147488:

; 843  : }

  026ed	8b e5		 mov	 esp, ebp
  026ef	5d		 pop	 ebp
  026f0	c3		 ret	 0
?StopTracking@CSkinWnd@@QAEXXZ ENDP			; CSkinWnd::StopTracking
_nFlags$ = 8
_point$ = 12
_this$ = -4
?OnMouseMove@CSkinWnd@@IAEXIVCPoint@@@Z PROC NEAR	; CSkinWnd::OnMouseMove

; 847  : {

  026f1	55		 push	 ebp
  026f2	8b ec		 mov	 ebp, esp
  026f4	51		 push	 ecx
  026f5	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 848  : 	if ( m_pTrackingCtrl ) {

  026f8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  026fb	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [eax+132], 0
  02702	74 25		 je	 SHORT $L147494

; 849  : 		m_pTrackingCtrl->OnMouseMove ( nFlags, point.x, point.y );

  02704	66 8b 4d 10	 mov	 cx, WORD PTR _point$[ebp+4]
  02708	51		 push	 ecx
  02709	66 8b 55 0c	 mov	 dx, WORD PTR _point$[ebp]
  0270d	52		 push	 edx
  0270e	8b 45 08	 mov	 eax, DWORD PTR _nFlags$[ebp]
  02711	50		 push	 eax
  02712	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02715	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [ecx+132]
  0271b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0271e	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  02724	8b 10		 mov	 edx, DWORD PTR [eax]
  02726	ff 52 38	 call	 DWORD PTR [edx+56]
$L147494:

; 851  : }

  02729	8b e5		 mov	 esp, ebp
  0272b	5d		 pop	 ebp
  0272c	c2 0c 00	 ret	 12			; 0000000cH
?OnMouseMove@CSkinWnd@@IAEXIVCPoint@@@Z ENDP		; CSkinWnd::OnMouseMove
_TEXT	ENDS
EXTRN	??0CSkinObj@@QAE@PAUIDispatch@@@Z:NEAR		; CSkinObj::CSkinObj
xdata$x	SEGMENT
$T155571 DD	019930520H
	DD	01H
	DD	FLAT:$T155573
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155573 DD	0ffffffffH
	DD	FLAT:$L155568
xdata$x	ENDS
_TEXT	SEGMENT
_skinObj$ = 8
_keys$ = 12
_x$ = 16
_y$ = 20
_this$ = -32
_obj$ = -20
_ctrl$147506 = -24
$T155567 = -28
__$EHRec$ = -12
?OnMouseDown@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z PROC NEAR ; CSkinWnd::OnMouseDown

; 855  : {

  0272f	55		 push	 ebp
  02730	8b ec		 mov	 ebp, esp
  02732	6a ff		 push	 -1
  02734	68 00 00 00 00	 push	 $L155572
  02739	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0273f	50		 push	 eax
  02740	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02747	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0274a	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 856  : 	if ( false == GetProcessEvents() ) {

  0274d	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  02750	8b 10		 mov	 edx, DWORD PTR [eax]
  02752	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  02755	ff 92 c0 00 00
	00		 call	 DWORD PTR [edx+192]
  0275b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02760	85 c0		 test	 eax, eax
  02762	75 05		 jne	 SHORT $L147502

; 857  : 		return;

  02764	e9 a7 00 00 00	 jmp	 $L147501
$L147502:

; 859  : 
; 860  : 	CSkinObj obj ( skinObj );

  02769	8b 45 08	 mov	 eax, DWORD PTR _skinObj$[ebp]
  0276c	50		 push	 eax
  0276d	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  02770	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@PAUIDispatch@@@Z ; CSkinObj::CSkinObj
  02775	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 861  : 
; 862  : 	// mouse down events to the tracking control exclusively
; 863  : 	if ( m_pTrackingCtrl ) {

  0277c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0277f	83 b9 84 00 00
	00 00		 cmp	 DWORD PTR [ecx+132], 0
  02786	74 27		 je	 SHORT $L147504

; 864  : 		m_pTrackingCtrl->OnMouseDown ( keys, x, y );

  02788	66 8b 55 14	 mov	 dx, WORD PTR _y$[ebp]
  0278c	52		 push	 edx
  0278d	66 8b 45 10	 mov	 ax, WORD PTR _x$[ebp]
  02791	50		 push	 eax
  02792	8b 4d 0c	 mov	 ecx, DWORD PTR _keys$[ebp]
  02795	51		 push	 ecx
  02796	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  02799	8b 8a 84 00 00
	00		 mov	 ecx, DWORD PTR [edx+132]
  0279f	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  027a2	8b 90 84 00 00
	00		 mov	 edx, DWORD PTR [eax+132]
  027a8	8b 02		 mov	 eax, DWORD PTR [edx]
  027aa	ff 50 44	 call	 DWORD PTR [eax+68]

; 865  : 	} else {

  027ad	eb 44		 jmp	 SHORT $L147508
$L147504:

; 866  : 		CSkinCtrl *ctrl = FindControl ( obj );

  027af	83 ec 08	 sub	 esp, 8
  027b2	8b cc		 mov	 ecx, esp
  027b4	89 65 e4	 mov	 DWORD PTR $T155567[ebp], esp
  027b7	8d 55 ec	 lea	 edx, DWORD PTR _obj$[ebp]
  027ba	52		 push	 edx
  027bb	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  027c0	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  027c3	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  027c6	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  027cb	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  027ce	8b 45 d8	 mov	 eax, DWORD PTR -40+[ebp]
  027d1	89 45 e8	 mov	 DWORD PTR _ctrl$147506[ebp], eax

; 867  : 
; 868  : 		if ( ctrl ) {

  027d4	83 7d e8 00	 cmp	 DWORD PTR _ctrl$147506[ebp], 0
  027d8	74 19		 je	 SHORT $L147508

; 869  : 			ctrl->OnMouseDown ( keys, x, y );

  027da	66 8b 4d 14	 mov	 cx, WORD PTR _y$[ebp]
  027de	51		 push	 ecx
  027df	66 8b 55 10	 mov	 dx, WORD PTR _x$[ebp]
  027e3	52		 push	 edx
  027e4	8b 45 0c	 mov	 eax, DWORD PTR _keys$[ebp]
  027e7	50		 push	 eax
  027e8	8b 4d e8	 mov	 ecx, DWORD PTR _ctrl$147506[ebp]
  027eb	8b 11		 mov	 edx, DWORD PTR [ecx]
  027ed	8b 4d e8	 mov	 ecx, DWORD PTR _ctrl$147506[ebp]
  027f0	ff 52 44	 call	 DWORD PTR [edx+68]
$L147508:

; 872  : 
; 873  : 	ProcessRefreshList();

  027f3	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  027f6	8b 10		 mov	 edx, DWORD PTR [eax]
  027f8	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  027fb	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]

; 874  : }

  02801	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02808	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  0280b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L147501:
  02810	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02813	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0281a	8b e5		 mov	 esp, ebp
  0281c	5d		 pop	 ebp
  0281d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L155568:
  00282	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  00285	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0028a	c3		 ret	 0
$L155572:
  0028b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155571
  00290	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnMouseDown@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z ENDP	; CSkinWnd::OnMouseDown
xdata$x	SEGMENT
$T155579 DD	019930520H
	DD	01H
	DD	FLAT:$T155581
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155581 DD	0ffffffffH
	DD	FLAT:$L155576
xdata$x	ENDS
_TEXT	SEGMENT
_skinObj$ = 8
_keys$ = 12
_x$ = 16
_y$ = 20
_this$ = -32
_obj$ = -20
_ctrl$147520 = -24
$T155575 = -28
__$EHRec$ = -12
?OnMouseUp@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z PROC NEAR	; CSkinWnd::OnMouseUp

; 878  : {

  02820	55		 push	 ebp
  02821	8b ec		 mov	 ebp, esp
  02823	6a ff		 push	 -1
  02825	68 00 00 00 00	 push	 $L155580
  0282a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02830	50		 push	 eax
  02831	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02838	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0283b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 879  : 	if ( false == GetProcessEvents() ) {

  0283e	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  02841	8b 10		 mov	 edx, DWORD PTR [eax]
  02843	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  02846	ff 92 c0 00 00
	00		 call	 DWORD PTR [edx+192]
  0284c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02851	85 c0		 test	 eax, eax
  02853	75 05		 jne	 SHORT $L147516

; 880  : 		return;

  02855	e9 b6 00 00 00	 jmp	 $L147515
$L147516:

; 882  : 
; 883  : 	CSkinObj obj ( skinObj );

  0285a	8b 45 08	 mov	 eax, DWORD PTR _skinObj$[ebp]
  0285d	50		 push	 eax
  0285e	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  02861	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@PAUIDispatch@@@Z ; CSkinObj::CSkinObj
  02866	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 884  : 
; 885  : 	// mouse up events to to the tracking control exclusively
; 886  : 	if ( m_pTrackingCtrl ) {

  0286d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  02870	83 b9 84 00 00
	00 00		 cmp	 DWORD PTR [ecx+132], 0
  02877	74 27		 je	 SHORT $L147518

; 887  : 		m_pTrackingCtrl->OnMouseUp ( keys, x, y );

  02879	66 8b 55 14	 mov	 dx, WORD PTR _y$[ebp]
  0287d	52		 push	 edx
  0287e	66 8b 45 10	 mov	 ax, WORD PTR _x$[ebp]
  02882	50		 push	 eax
  02883	8b 4d 0c	 mov	 ecx, DWORD PTR _keys$[ebp]
  02886	51		 push	 ecx
  02887	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0288a	8b 8a 84 00 00
	00		 mov	 ecx, DWORD PTR [edx+132]
  02890	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  02893	8b 90 84 00 00
	00		 mov	 edx, DWORD PTR [eax+132]
  02899	8b 02		 mov	 eax, DWORD PTR [edx]
  0289b	ff 50 48	 call	 DWORD PTR [eax+72]

; 888  : 	} else {

  0289e	eb 53		 jmp	 SHORT $L147523
$L147518:

; 889  : 		CSkinCtrl *ctrl = FindControl ( obj );

  028a0	83 ec 08	 sub	 esp, 8
  028a3	8b cc		 mov	 ecx, esp
  028a5	89 65 e4	 mov	 DWORD PTR $T155575[ebp], esp
  028a8	8d 55 ec	 lea	 edx, DWORD PTR _obj$[ebp]
  028ab	52		 push	 edx
  028ac	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  028b1	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  028b4	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  028b7	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  028bc	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  028bf	8b 45 d8	 mov	 eax, DWORD PTR -40+[ebp]
  028c2	89 45 e8	 mov	 DWORD PTR _ctrl$147520[ebp], eax

; 890  : 
; 891  : 		if ( ctrl ) {

  028c5	83 7d e8 00	 cmp	 DWORD PTR _ctrl$147520[ebp], 0
  028c9	74 28		 je	 SHORT $L147523

; 892  : 			if (!ctrl->IsDisabled())

  028cb	8b 4d e8	 mov	 ecx, DWORD PTR _ctrl$147520[ebp]
  028ce	8b 11		 mov	 edx, DWORD PTR [ecx]
  028d0	8b 4d e8	 mov	 ecx, DWORD PTR _ctrl$147520[ebp]
  028d3	ff 52 10	 call	 DWORD PTR [edx+16]
  028d6	85 c0		 test	 eax, eax
  028d8	75 19		 jne	 SHORT $L147523

; 893  : 				ctrl->OnMouseUp ( keys, x, y );

  028da	66 8b 45 14	 mov	 ax, WORD PTR _y$[ebp]
  028de	50		 push	 eax
  028df	66 8b 4d 10	 mov	 cx, WORD PTR _x$[ebp]
  028e3	51		 push	 ecx
  028e4	8b 55 0c	 mov	 edx, DWORD PTR _keys$[ebp]
  028e7	52		 push	 edx
  028e8	8b 45 e8	 mov	 eax, DWORD PTR _ctrl$147520[ebp]
  028eb	8b 10		 mov	 edx, DWORD PTR [eax]
  028ed	8b 4d e8	 mov	 ecx, DWORD PTR _ctrl$147520[ebp]
  028f0	ff 52 48	 call	 DWORD PTR [edx+72]
$L147523:

; 896  : 
; 897  : 	ProcessRefreshList();

  028f3	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  028f6	8b 10		 mov	 edx, DWORD PTR [eax]
  028f8	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  028fb	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]

; 898  : }

  02901	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02908	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  0290b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L147515:
  02910	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02913	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0291a	8b e5		 mov	 esp, ebp
  0291c	5d		 pop	 ebp
  0291d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L155576:
  00295	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  00298	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0029d	c3		 ret	 0
$L155580:
  0029e	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155579
  002a3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnMouseUp@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z ENDP	; CSkinWnd::OnMouseUp
PUBLIC	??Breference@?$bitset@$05@std@@QBE_NXZ		; std::bitset<6>::reference::operator bool
PUBLIC	??A?$bitset@$05@std@@QAE?AVreference@01@I@Z	; std::bitset<6>::operator[]
xdata$x	SEGMENT
$T155589 DD	019930520H
	DD	01H
	DD	FLAT:$T155591
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155591 DD	0ffffffffH
	DD	FLAT:$L155586
xdata$x	ENDS
_TEXT	SEGMENT
_skinObj$ = 8
_keys$ = 12
_x$ = 16
_y$ = 20
_this$ = -48
_obj$ = -20
_ctrl$ = -24
$T155583 = -32
$T155584 = -36
$T155585 = -44
__$EHRec$ = -12
?OnMouseIn@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z PROC NEAR	; CSkinWnd::OnMouseIn

; 902  : {

  02920	55		 push	 ebp
  02921	8b ec		 mov	 ebp, esp
  02923	6a ff		 push	 -1
  02925	68 00 00 00 00	 push	 $L155590
  0292a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02930	50		 push	 eax
  02931	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02938	83 ec 2c	 sub	 esp, 44			; 0000002cH
  0293b	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 903  : 	if ( false == m_state[sknWndProcessEvents] ) {

  0293e	6a 01		 push	 1
  02940	8d 45 e0	 lea	 eax, DWORD PTR $T155583[ebp]
  02943	50		 push	 eax
  02944	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  02947	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0294d	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  02952	8b c8		 mov	 ecx, eax
  02954	e8 00 00 00 00	 call	 ??Breference@?$bitset@$05@std@@QBE_NXZ ; std::bitset<6>::reference::operator bool
  02959	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0295e	85 c0		 test	 eax, eax
  02960	75 05		 jne	 SHORT $L147532

; 904  : 		return;

  02962	e9 87 00 00 00	 jmp	 $L147530
$L147532:

; 906  : 
; 907  : 	CSkinObj obj ( skinObj );

  02967	8b 4d 08	 mov	 ecx, DWORD PTR _skinObj$[ebp]
  0296a	51		 push	 ecx
  0296b	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  0296e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@PAUIDispatch@@@Z ; CSkinObj::CSkinObj
  02973	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 908  : 	CSkinCtrl *ctrl = FindControl ( obj );

  0297a	83 ec 08	 sub	 esp, 8
  0297d	8b cc		 mov	 ecx, esp
  0297f	89 65 dc	 mov	 DWORD PTR $T155584[ebp], esp
  02982	8d 55 ec	 lea	 edx, DWORD PTR _obj$[ebp]
  02985	52		 push	 edx
  02986	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  0298b	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  0298e	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  02991	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  02996	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  02999	8b 45 c8	 mov	 eax, DWORD PTR -56+[ebp]
  0299c	89 45 e8	 mov	 DWORD PTR _ctrl$[ebp], eax

; 909  : 
; 910  : 	// always process mouse in events regardless of tracking status
; 911  : 	if ( ctrl ) {

  0299f	83 7d e8 00	 cmp	 DWORD PTR _ctrl$[ebp], 0
  029a3	74 2c		 je	 SHORT $L147536

; 912  : 		m_mouseInSet.insert ( ctrl );

  029a5	8d 4d e8	 lea	 ecx, DWORD PTR _ctrl$[ebp]
  029a8	51		 push	 ecx
  029a9	8d 55 d4	 lea	 edx, DWORD PTR $T155585[ebp]
  029ac	52		 push	 edx
  029ad	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  029b0	83 c1 68	 add	 ecx, 104		; 00000068H
  029b3	e8 00 00 00 00	 call	 ?insert@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::insert

; 913  : 		ctrl->OnMouseIn ( keys, x, y );

  029b8	66 8b 45 14	 mov	 ax, WORD PTR _y$[ebp]
  029bc	50		 push	 eax
  029bd	66 8b 4d 10	 mov	 cx, WORD PTR _x$[ebp]
  029c1	51		 push	 ecx
  029c2	8b 55 0c	 mov	 edx, DWORD PTR _keys$[ebp]
  029c5	52		 push	 edx
  029c6	8b 45 e8	 mov	 eax, DWORD PTR _ctrl$[ebp]
  029c9	8b 10		 mov	 edx, DWORD PTR [eax]
  029cb	8b 4d e8	 mov	 ecx, DWORD PTR _ctrl$[ebp]
  029ce	ff 52 3c	 call	 DWORD PTR [edx+60]
$L147536:

; 915  : 
; 916  : 	ProcessRefreshList();

  029d1	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  029d4	8b 10		 mov	 edx, DWORD PTR [eax]
  029d6	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  029d9	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]

; 917  : }

  029df	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  029e6	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  029e9	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L147530:
  029ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  029f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  029f8	8b e5		 mov	 esp, ebp
  029fa	5d		 pop	 ebp
  029fb	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L155586:
  002a8	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  002ab	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002b0	c3		 ret	 0
$L155590:
  002b1	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155589
  002b6	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnMouseIn@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z ENDP	; CSkinWnd::OnMouseIn
PUBLIC	?erase@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABQAVCSkinCtrl@@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
xdata$x	SEGMENT
$T155598 DD	019930520H
	DD	01H
	DD	FLAT:$T155600
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155600 DD	0ffffffffH
	DD	FLAT:$L155595
xdata$x	ENDS
_TEXT	SEGMENT
_skinObj$ = 8
_keys$ = 12
_x$ = 16
_y$ = 20
_this$ = -40
_obj$ = -20
_ctrl$ = -24
$T155593 = -32
$T155594 = -36
__$EHRec$ = -12
?OnMouseOut@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z PROC NEAR	; CSkinWnd::OnMouseOut

; 921  : {

  029fe	55		 push	 ebp
  029ff	8b ec		 mov	 ebp, esp
  02a01	6a ff		 push	 -1
  02a03	68 00 00 00 00	 push	 $L155599
  02a08	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02a0e	50		 push	 eax
  02a0f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02a16	83 ec 24	 sub	 esp, 36			; 00000024H
  02a19	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 922  : 	if ( false == m_state[sknWndProcessEvents] ) {

  02a1c	6a 01		 push	 1
  02a1e	8d 45 e0	 lea	 eax, DWORD PTR $T155593[ebp]
  02a21	50		 push	 eax
  02a22	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  02a25	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  02a2b	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  02a30	8b c8		 mov	 ecx, eax
  02a32	e8 00 00 00 00	 call	 ??Breference@?$bitset@$05@std@@QBE_NXZ ; std::bitset<6>::reference::operator bool
  02a37	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02a3c	85 c0		 test	 eax, eax
  02a3e	75 05		 jne	 SHORT $L147546

; 923  : 		return;

  02a40	e9 83 00 00 00	 jmp	 $L147544
$L147546:

; 925  : 
; 926  : 	CSkinObj obj ( skinObj );

  02a45	8b 4d 08	 mov	 ecx, DWORD PTR _skinObj$[ebp]
  02a48	51		 push	 ecx
  02a49	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  02a4c	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@PAUIDispatch@@@Z ; CSkinObj::CSkinObj
  02a51	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 927  : 	CSkinCtrl *ctrl = FindControl ( obj );

  02a58	83 ec 08	 sub	 esp, 8
  02a5b	8b cc		 mov	 ecx, esp
  02a5d	89 65 dc	 mov	 DWORD PTR $T155594[ebp], esp
  02a60	8d 55 ec	 lea	 edx, DWORD PTR _obj$[ebp]
  02a63	52		 push	 edx
  02a64	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02a69	89 45 d4	 mov	 DWORD PTR -44+[ebp], eax
  02a6c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  02a6f	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  02a74	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  02a77	8b 45 d0	 mov	 eax, DWORD PTR -48+[ebp]
  02a7a	89 45 e8	 mov	 DWORD PTR _ctrl$[ebp], eax

; 928  : 
; 929  : 	// always process mouse out events regardless of tracking status
; 930  : 	if ( ctrl ) {

  02a7d	83 7d e8 00	 cmp	 DWORD PTR _ctrl$[ebp], 0
  02a81	74 28		 je	 SHORT $L147550

; 931  : 		m_mouseInSet.erase ( ctrl );

  02a83	8d 4d e8	 lea	 ecx, DWORD PTR _ctrl$[ebp]
  02a86	51		 push	 ecx
  02a87	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  02a8a	83 c1 68	 add	 ecx, 104		; 00000068H
  02a8d	e8 00 00 00 00	 call	 ?erase@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABQAVCSkinCtrl@@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase

; 932  : 		ctrl->OnMouseOut ( keys, x, y );

  02a92	66 8b 55 14	 mov	 dx, WORD PTR _y$[ebp]
  02a96	52		 push	 edx
  02a97	66 8b 45 10	 mov	 ax, WORD PTR _x$[ebp]
  02a9b	50		 push	 eax
  02a9c	8b 4d 0c	 mov	 ecx, DWORD PTR _keys$[ebp]
  02a9f	51		 push	 ecx
  02aa0	8b 55 e8	 mov	 edx, DWORD PTR _ctrl$[ebp]
  02aa3	8b 02		 mov	 eax, DWORD PTR [edx]
  02aa5	8b 4d e8	 mov	 ecx, DWORD PTR _ctrl$[ebp]
  02aa8	ff 50 40	 call	 DWORD PTR [eax+64]
$L147550:

; 934  : 
; 935  : 	ProcessRefreshList();

  02aab	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  02aae	8b 11		 mov	 edx, DWORD PTR [ecx]
  02ab0	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  02ab3	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]

; 936  : }

  02ab9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02ac0	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  02ac3	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L147544:
  02ac8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02acb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02ad2	8b e5		 mov	 esp, ebp
  02ad4	5d		 pop	 ebp
  02ad5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L155595:
  002bb	8d 4d ec	 lea	 ecx, DWORD PTR _obj$[ebp]
  002be	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002c3	c3		 ret	 0
$L155599:
  002c4	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155598
  002c9	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnMouseOut@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z ENDP	; CSkinWnd::OnMouseOut
PUBLIC	??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::~_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
PUBLIC	??C?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator->
PUBLIC	??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
PUBLIC	??0CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::CComBSTR
PUBLIC	??1CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::~CComBSTR
PUBLIC	??BCComBSTR@ATL@@QBEPAGXZ			; ATL::CComBSTR::operator unsigned short *
PUBLIC	??ICComBSTR@ATL@@QAEPAPAGXZ			; ATL::CComBSTR::operator&
PUBLIC	?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z		; CRichEditCtrl::ReplaceSel
PUBLIC	??0strstream@std@@QAE@XZ			; std::strstream::strstream
PUBLIC	?str@strstream@std@@QAEPADXZ			; std::strstream::str
PUBLIC	?pcount@strstream@std@@QBEHXZ			; std::strstream::pcount
PUBLIC	??_Dstrstream@std@@QAEXXZ			; std::strstream::`vbase destructor'
EXTRN	??0CString@@QAE@PBG@Z:NEAR			; CString::CString
EXTRN	??0CString@@QAE@PBDH@Z:NEAR			; CString::CString
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@PBX@Z:NEAR
EXTRN	__imp_??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:NEAR
_DATA	SEGMENT
$SG147792 DB	'OnDblClick for ', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T155610 DD	019930520H
	DD	05H
	DD	FLAT:$T155612
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155612 DD	0ffffffffH
	DD	FLAT:$L155604
	DD	00H
	DD	FLAT:$L155605
	DD	01H
	DD	FLAT:$L155606
	DD	02H
	DD	FLAT:$L155607
	DD	03H
	DD	FLAT:$L155608
xdata$x	ENDS
_TEXT	SEGMENT
_skinObj$ = 8
_this$ = -176
_spSkinObject$ = -24
_className$ = -20
_strClassName$ = -16
_msg$ = -172
_msgData$ = -28
__$EHRec$ = -12
?OnDblClick@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z PROC NEAR	; CSkinWnd::OnDblClick

; 940  : {

  02ad8	55		 push	 ebp
  02ad9	8b ec		 mov	 ebp, esp
  02adb	6a ff		 push	 -1
  02add	68 00 00 00 00	 push	 $L155611
  02ae2	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02ae8	50		 push	 eax
  02ae9	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02af0	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  02af6	89 8d 50 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 941  : 	ISkinObjectDispPtr spSkinObject( skinObj );

  02afc	8d 45 08	 lea	 eax, DWORD PTR _skinObj$[ebp]
  02aff	50		 push	 eax
  02b00	8d 4d e8	 lea	 ecx, DWORD PTR _spSkinObject$[ebp]
  02b03	e8 00 00 00 00	 call	 ??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
  02b08	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 942  : 	CComBSTR className;

  02b0f	8d 4d ec	 lea	 ecx, DWORD PTR _className$[ebp]
  02b12	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR
  02b17	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 943  : 	spSkinObject->get_Class(&className);

  02b1b	8d 4d ec	 lea	 ecx, DWORD PTR _className$[ebp]
  02b1e	e8 00 00 00 00	 call	 ??ICComBSTR@ATL@@QAEPAPAGXZ ; ATL::CComBSTR::operator&
  02b23	50		 push	 eax
  02b24	8d 4d e8	 lea	 ecx, DWORD PTR _spSkinObject$[ebp]
  02b27	e8 00 00 00 00	 call	 ??C?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator->
  02b2c	89 85 4c ff ff
	ff		 mov	 DWORD PTR -180+[ebp], eax
  02b32	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR -180+[ebp]
  02b38	8b 11		 mov	 edx, DWORD PTR [ecx]
  02b3a	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR -180+[ebp]
  02b40	50		 push	 eax
  02b41	ff 92 90 00 00
	00		 call	 DWORD PTR [edx+144]

; 944  : 
; 945  : 	CString strClassName ( className );

  02b47	8d 4d ec	 lea	 ecx, DWORD PTR _className$[ebp]
  02b4a	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPAGXZ ; ATL::CComBSTR::operator unsigned short *
  02b4f	50		 push	 eax
  02b50	8d 4d f0	 lea	 ecx, DWORD PTR _strClassName$[ebp]
  02b53	e8 00 00 00 00	 call	 ??0CString@@QAE@PBG@Z	; CString::CString
  02b58	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 946  : 
; 947  : 	std::strstream msg;

  02b5c	6a 01		 push	 1
  02b5e	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _msg$[ebp]
  02b64	e8 00 00 00 00	 call	 ??0strstream@std@@QAE@XZ ; std::strstream::strstream
  02b69	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 948  : 	msg << "OnDblClick for " << strClassName;// << endl;

  02b6d	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _msg$[ebp]
  02b73	85 c9		 test	 ecx, ecx
  02b75	74 0e		 je	 SHORT $L155602
  02b77	8d 95 5c ff ff
	ff		 lea	 edx, DWORD PTR _msg$[ebp+8]
  02b7d	89 95 48 ff ff
	ff		 mov	 DWORD PTR -184+[ebp], edx
  02b83	eb 0a		 jmp	 SHORT $L155603
$L155602:
  02b85	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR -184+[ebp], 0
$L155603:
  02b8f	8d 4d f0	 lea	 ecx, DWORD PTR _strClassName$[ebp]
  02b92	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  02b97	50		 push	 eax
  02b98	68 00 00 00 00	 push	 OFFSET FLAT:$SG147792
  02b9d	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR -184+[ebp]
  02ba3	50		 push	 eax
  02ba4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
  02baa	83 c4 08	 add	 esp, 8
  02bad	8b c8		 mov	 ecx, eax
  02baf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@PBX@Z

; 949  : 
; 950  : 	CString msgData ( msg.str(), msg.pcount() );

  02bb5	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _msg$[ebp]
  02bbb	e8 00 00 00 00	 call	 ?pcount@strstream@std@@QBEHXZ ; std::strstream::pcount
  02bc0	50		 push	 eax
  02bc1	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _msg$[ebp]
  02bc7	e8 00 00 00 00	 call	 ?str@strstream@std@@QAEPADXZ ; std::strstream::str
  02bcc	50		 push	 eax
  02bcd	8d 4d e4	 lea	 ecx, DWORD PTR _msgData$[ebp]
  02bd0	e8 00 00 00 00	 call	 ??0CString@@QAE@PBDH@Z	; CString::CString
  02bd5	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 951  : 
; 952  : 	if ( m_pLog )

  02bd9	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  02bdf	83 b9 80 00 00
	00 00		 cmp	 DWORD PTR [ecx+128], 0
  02be6	74 1c		 je	 SHORT $L147794

; 953  : 		m_pLog->ReplaceSel ( msgData );

  02be8	6a 00		 push	 0
  02bea	8d 4d e4	 lea	 ecx, DWORD PTR _msgData$[ebp]
  02bed	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  02bf2	50		 push	 eax
  02bf3	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  02bf9	8b 8a 80 00 00
	00		 mov	 ecx, DWORD PTR [edx+128]
  02bff	e8 00 00 00 00	 call	 ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z ; CRichEditCtrl::ReplaceSel
$L147794:

; 954  : }

  02c04	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  02c08	8d 4d e4	 lea	 ecx, DWORD PTR _msgData$[ebp]
  02c0b	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02c10	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  02c14	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _msg$[ebp]
  02c1a	e8 00 00 00 00	 call	 ??_Dstrstream@std@@QAEXXZ ; std::strstream::`vbase destructor'
  02c1f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  02c23	8d 4d f0	 lea	 ecx, DWORD PTR _strClassName$[ebp]
  02c26	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  02c2b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02c2f	8d 4d ec	 lea	 ecx, DWORD PTR _className$[ebp]
  02c32	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  02c37	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02c3e	8d 4d e8	 lea	 ecx, DWORD PTR _spSkinObject$[ebp]
  02c41	e8 00 00 00 00	 call	 ??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::~_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
  02c46	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02c49	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02c50	8b e5		 mov	 esp, ebp
  02c52	5d		 pop	 ebp
  02c53	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
text$x	SEGMENT
$L155604:
  002ce	8d 4d e8	 lea	 ecx, DWORD PTR _spSkinObject$[ebp]
  002d1	e8 00 00 00 00	 call	 ??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::~_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
  002d6	c3		 ret	 0
$L155605:
  002d7	8d 4d ec	 lea	 ecx, DWORD PTR _className$[ebp]
  002da	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  002df	c3		 ret	 0
$L155606:
  002e0	8d 4d f0	 lea	 ecx, DWORD PTR _strClassName$[ebp]
  002e3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002e8	c3		 ret	 0
$L155607:
  002e9	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _msg$[ebp]
  002ef	e8 00 00 00 00	 call	 ??_Dstrstream@std@@QAEXXZ ; std::strstream::`vbase destructor'
  002f4	c3		 ret	 0
$L155608:
  002f5	8d 4d e4	 lea	 ecx, DWORD PTR _msgData$[ebp]
  002f8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  002fd	c3		 ret	 0
$L155611:
  002fe	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155610
  00303	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnDblClick@CSkinWnd@@QAEXPAUIDispatch@@JFF@Z ENDP	; CSkinWnd::OnDblClick
PUBLIC	?OnSizing@CWnd@@IAEXIPAUtagRECT@@@Z		; CWnd::OnSizing
PUBLIC	?GetAllowResize@CSkinWnd@@IAE_NXZ		; CSkinWnd::GetAllowResize
_TEXT	SEGMENT
_nSide$ = 8
_pRect$ = 12
_this$ = -4
?OnSizing@CSkinWnd@@IAEXIPAUtagRECT@@@Z PROC NEAR	; CSkinWnd::OnSizing

; 958  : {

  02c56	55		 push	 ebp
  02c57	8b ec		 mov	 ebp, esp
  02c59	51		 push	 ecx
  02c5a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 959  : 	// if no resize is allowed, set the rect to the current window rect
; 960  : 	if ( false == GetAllowResize() ) {

  02c5d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02c60	e8 00 00 00 00	 call	 ?GetAllowResize@CSkinWnd@@IAE_NXZ ; CSkinWnd::GetAllowResize
  02c65	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02c6a	85 c0		 test	 eax, eax
  02c6c	75 0c		 jne	 SHORT $L147800

; 961  : 		GetWindowRect ( pRect );

  02c6e	8b 45 0c	 mov	 eax, DWORD PTR _pRect$[ebp]
  02c71	50		 push	 eax
  02c72	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02c75	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect
$L147800:

; 963  : 
; 964  : 	CWnd::OnSizing ( nSide, pRect );

  02c7a	8b 4d 0c	 mov	 ecx, DWORD PTR _pRect$[ebp]
  02c7d	51		 push	 ecx
  02c7e	8b 55 08	 mov	 edx, DWORD PTR _nSide$[ebp]
  02c81	52		 push	 edx
  02c82	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02c85	e8 00 00 00 00	 call	 ?OnSizing@CWnd@@IAEXIPAUtagRECT@@@Z ; CWnd::OnSizing

; 965  : }

  02c8a	8b e5		 mov	 esp, ebp
  02c8c	5d		 pop	 ebp
  02c8d	c2 08 00	 ret	 8
?OnSizing@CSkinWnd@@IAEXIPAUtagRECT@@@Z ENDP		; CSkinWnd::OnSizing
_TEXT	ENDS
PUBLIC	?OnMoving@CWnd@@IAEXIPAUtagRECT@@@Z		; CWnd::OnMoving
PUBLIC	?GetAllowMove@CSkinWnd@@IAE_NXZ			; CSkinWnd::GetAllowMove
_TEXT	SEGMENT
_nSide$ = 8
_pRect$ = 12
_this$ = -4
?OnMoving@CSkinWnd@@IAEXIPAUtagRECT@@@Z PROC NEAR	; CSkinWnd::OnMoving

; 969  : {

  02c90	55		 push	 ebp
  02c91	8b ec		 mov	 ebp, esp
  02c93	51		 push	 ecx
  02c94	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 970  : 	// if no resize is allowed, set the rect to the current window rect
; 971  : 	if ( false == GetAllowMove() ) {

  02c97	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02c9a	e8 00 00 00 00	 call	 ?GetAllowMove@CSkinWnd@@IAE_NXZ ; CSkinWnd::GetAllowMove
  02c9f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02ca4	85 c0		 test	 eax, eax
  02ca6	75 0c		 jne	 SHORT $L147806

; 972  : 		GetWindowRect ( pRect );

  02ca8	8b 45 0c	 mov	 eax, DWORD PTR _pRect$[ebp]
  02cab	50		 push	 eax
  02cac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02caf	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect
$L147806:

; 974  : 
; 975  : 	CWnd::OnMoving ( nSide, pRect );

  02cb4	8b 4d 0c	 mov	 ecx, DWORD PTR _pRect$[ebp]
  02cb7	51		 push	 ecx
  02cb8	8b 55 08	 mov	 edx, DWORD PTR _nSide$[ebp]
  02cbb	52		 push	 edx
  02cbc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02cbf	e8 00 00 00 00	 call	 ?OnMoving@CWnd@@IAEXIPAUtagRECT@@@Z ; CWnd::OnMoving

; 976  : }

  02cc4	8b e5		 mov	 esp, ebp
  02cc6	5d		 pop	 ebp
  02cc7	c2 08 00	 ret	 8
?OnMoving@CSkinWnd@@IAEXIPAUtagRECT@@@Z ENDP		; CSkinWnd::OnMoving
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
PUBLIC	?OnSysCommand@CWnd@@IAEXIJ@Z			; CWnd::OnSysCommand
_TEXT	SEGMENT
_nID$ = 8
_lParam$ = 12
_this$ = -4
?OnSysCommand@CSkinWnd@@IAEXIJ@Z PROC NEAR		; CSkinWnd::OnSysCommand

; 980  : {

  02cca	55		 push	 ebp
  02ccb	8b ec		 mov	 ebp, esp
  02ccd	51		 push	 ecx
  02cce	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 981  : 	// eat the MAXIMIZE command if we don't allow resizing
; 982  : 	if ( (false == GetAllowResize()) || (nID != SC_MAXIMIZE) ) {

  02cd1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02cd4	e8 00 00 00 00	 call	 ?GetAllowResize@CSkinWnd@@IAE_NXZ ; CSkinWnd::GetAllowResize
  02cd9	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02cde	85 c0		 test	 eax, eax
  02ce0	74 09		 je	 SHORT $L147813
  02ce2	81 7d 08 30 f0
	00 00		 cmp	 DWORD PTR _nID$[ebp], 61488 ; 0000f030H
  02ce9	74 10		 je	 SHORT $L147812
$L147813:

; 983  : 		CWnd::OnSysCommand ( nID, lParam );

  02ceb	8b 45 0c	 mov	 eax, DWORD PTR _lParam$[ebp]
  02cee	50		 push	 eax
  02cef	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  02cf2	51		 push	 ecx
  02cf3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02cf6	e8 00 00 00 00	 call	 ?OnSysCommand@CWnd@@IAEXIJ@Z ; CWnd::OnSysCommand
$L147812:

; 985  : }

  02cfb	8b e5		 mov	 esp, ebp
  02cfd	5d		 pop	 ebp
  02cfe	c2 08 00	 ret	 8
?OnSysCommand@CSkinWnd@@IAEXIJ@Z ENDP			; CSkinWnd::OnSysCommand
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
PUBLIC	?HitTest@CSkinWnd@@QAEPAVCSkinCtrl@@HH@Z	; CSkinWnd::HitTest
EXTRN	?HitTest@CSkinObj@@QAE?AV1@HH@Z:NEAR		; CSkinObj::HitTest
EXTRN	??8@YA_NABVCSkinObj@@0@Z:NEAR			; operator==
xdata$x	SEGMENT
$T155628 DD	019930520H
	DD	02H
	DD	FLAT:$T155630
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155630 DD	0ffffffffH
	DD	FLAT:$L155624
	DD	00H
	DD	FLAT:$L155625
xdata$x	ENDS
_TEXT	SEGMENT
_nX$ = 8
_nY$ = 12
_this$ = -44
_rootObj$ = -28
_hitObj$ = -20
$T155621 = -32
$T155622 = -36
$T155623 = -40
__$EHRec$ = -12
?HitTest@CSkinWnd@@QAEPAVCSkinCtrl@@HH@Z PROC NEAR	; CSkinWnd::HitTest

; 989  : {

  02d01	55		 push	 ebp
  02d02	8b ec		 mov	 ebp, esp
  02d04	6a ff		 push	 -1
  02d06	68 00 00 00 00	 push	 $L155629
  02d0b	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  02d11	50		 push	 eax
  02d12	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  02d19	83 ec 28	 sub	 esp, 40			; 00000028H
  02d1c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 990  : 	CSkinObj rootObj = m_pSkinForm->GetRootSkinObj();

  02d1f	8d 45 e4	 lea	 eax, DWORD PTR _rootObj$[ebp]
  02d22	50		 push	 eax
  02d23	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02d26	8b 49 7c	 mov	 ecx, DWORD PTR [ecx+124]
  02d29	e8 00 00 00 00	 call	 ?GetRootSkinObj@CSkinForm@@QAE?AVCSkinObj@@XZ ; CSkinForm::GetRootSkinObj
  02d2e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 991  : 	CSkinObj hitObj = rootObj.HitTest ( nX, nY );

  02d35	8b 55 0c	 mov	 edx, DWORD PTR _nY$[ebp]
  02d38	52		 push	 edx
  02d39	8b 45 08	 mov	 eax, DWORD PTR _nX$[ebp]
  02d3c	50		 push	 eax
  02d3d	8d 4d ec	 lea	 ecx, DWORD PTR _hitObj$[ebp]
  02d40	51		 push	 ecx
  02d41	8d 4d e4	 lea	 ecx, DWORD PTR _rootObj$[ebp]
  02d44	e8 00 00 00 00	 call	 ?HitTest@CSkinObj@@QAE?AV1@HH@Z ; CSkinObj::HitTest
  02d49	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 992  : 
; 993  : 	if ( hitObj == rootObj ) 

  02d4d	8d 55 e4	 lea	 edx, DWORD PTR _rootObj$[ebp]
  02d50	52		 push	 edx
  02d51	8d 45 ec	 lea	 eax, DWORD PTR _hitObj$[ebp]
  02d54	50		 push	 eax
  02d55	e8 00 00 00 00	 call	 ??8@YA_NABVCSkinObj@@0@Z ; operator==
  02d5a	83 c4 08	 add	 esp, 8
  02d5d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02d62	85 c0		 test	 eax, eax
  02d64	74 27		 je	 SHORT $L147823

; 994  : 		return NULL;

  02d66	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T155621[ebp], 0
  02d6d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02d71	8d 4d ec	 lea	 ecx, DWORD PTR _hitObj$[ebp]
  02d74	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02d79	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02d80	8d 4d e4	 lea	 ecx, DWORD PTR _rootObj$[ebp]
  02d83	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02d88	8b 45 e0	 mov	 eax, DWORD PTR $T155621[ebp]
  02d8b	eb 43		 jmp	 SHORT $L147818
$L147823:

; 995  : 
; 996  : 	return FindControl ( hitObj );

  02d8d	83 ec 08	 sub	 esp, 8
  02d90	8b cc		 mov	 ecx, esp
  02d92	89 65 d8	 mov	 DWORD PTR $T155623[ebp], esp
  02d95	8d 55 ec	 lea	 edx, DWORD PTR _hitObj$[ebp]
  02d98	52		 push	 edx
  02d99	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  02d9e	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  02da1	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  02da4	e8 00 00 00 00	 call	 ?FindControl@CSkinWnd@@QAEPAVCSkinCtrl@@VCSkinObj@@@Z ; CSkinWnd::FindControl
  02da9	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  02dac	8b 45 cc	 mov	 eax, DWORD PTR -52+[ebp]
  02daf	89 45 dc	 mov	 DWORD PTR $T155622[ebp], eax
  02db2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  02db6	8d 4d ec	 lea	 ecx, DWORD PTR _hitObj$[ebp]
  02db9	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02dbe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  02dc5	8d 4d e4	 lea	 ecx, DWORD PTR _rootObj$[ebp]
  02dc8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  02dcd	8b 45 dc	 mov	 eax, DWORD PTR $T155622[ebp]
$L147818:

; 997  : }

  02dd0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  02dd3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02dda	8b e5		 mov	 esp, ebp
  02ddc	5d		 pop	 ebp
  02ddd	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L155624:
  00308	8d 4d e4	 lea	 ecx, DWORD PTR _rootObj$[ebp]
  0030b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00310	c3		 ret	 0
$L155625:
  00311	8d 4d ec	 lea	 ecx, DWORD PTR _hitObj$[ebp]
  00314	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00319	c3		 ret	 0
$L155629:
  0031a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155628
  0031f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HitTest@CSkinWnd@@QAEPAVCSkinCtrl@@HH@Z ENDP		; CSkinWnd::HitTest
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
PUBLIC	?PtInRect@CRect@@QBEHUtagPOINT@@@Z		; CRect::PtInRect
PUBLIC	?OnSetCursor@CWnd@@IAEHPAV1@II@Z		; CWnd::OnSetCursor
PUBLIC	??0CPoint@@QAE@HH@Z				; CPoint::CPoint
EXTRN	__imp__GetMessagePos@0:NEAR
EXTRN	?pm@@3VPMachine@@A:BYTE				; pm
EXTRN	?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z:NEAR	; CWnd::ClientToScreen
EXTRN	__imp__SetCursor@4:NEAR
EXTRN	?g_hArrowCursor@@3PAUHICON__@@A:DWORD		; g_hArrowCursor
EXTRN	?g_hWaitCursor@@3PAUHICON__@@A:DWORD		; g_hWaitCursor
EXTRN	?g_hNoCursor@@3PAUHICON__@@A:DWORD		; g_hNoCursor
_TEXT	SEGMENT
_pWnd$ = 8
_nHitTest$ = 12
_message$ = 16
_this$ = -48
_dwPos$ = -28
_point$ = -24
_rect$ = -16
$T155633 = -36
$T155634 = -44
?OnSetCursor@CSkinWnd@@IAEHPAVCWnd@@II@Z PROC NEAR	; CSkinWnd::OnSetCursor

; 1001 : {

  02de0	55		 push	 ebp
  02de1	8b ec		 mov	 ebp, esp
  02de3	83 ec 30	 sub	 esp, 48			; 00000030H
  02de6	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 1002 :     DWORD dwPos = ::GetMessagePos();

  02de9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessagePos@0
  02def	89 45 e4	 mov	 DWORD PTR _dwPos$[ebp], eax

; 1003 : 	CPoint point ( LOWORD ( dwPos ), HIWORD ( dwPos ) );

  02df2	8b 45 e4	 mov	 eax, DWORD PTR _dwPos$[ebp]
  02df5	c1 e8 10	 shr	 eax, 16			; 00000010H
  02df8	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  02dfd	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  02e02	50		 push	 eax
  02e03	8b 4d e4	 mov	 ecx, DWORD PTR _dwPos$[ebp]
  02e06	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  02e0c	51		 push	 ecx
  02e0d	8d 4d e8	 lea	 ecx, DWORD PTR _point$[ebp]
  02e10	e8 00 00 00 00	 call	 ??0CPoint@@QAE@HH@Z	; CPoint::CPoint

; 1004 : 	CRect rect;

  02e15	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  02e18	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 1005 : 
; 1006 : 	GetClientRect ( &rect );

  02e1d	8d 55 f0	 lea	 edx, DWORD PTR _rect$[ebp]
  02e20	52		 push	 edx
  02e21	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  02e24	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 1007 : 	ClientToScreen( &rect );

  02e29	8d 45 f0	 lea	 eax, DWORD PTR _rect$[ebp]
  02e2c	50		 push	 eax
  02e2d	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  02e30	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ClientToScreen

; 1008 : 
; 1009 :     if ( m_nDisableWindow && rect.PtInRect ( point ) )

  02e35	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  02e38	83 b9 8c 00 00
	00 00		 cmp	 DWORD PTR [ecx+140], 0
  02e3f	74 36		 je	 SHORT $L147840
  02e41	8b 55 e8	 mov	 edx, DWORD PTR _point$[ebp]
  02e44	89 55 dc	 mov	 DWORD PTR $T155633[ebp], edx
  02e47	8b 45 ec	 mov	 eax, DWORD PTR _point$[ebp+4]
  02e4a	89 45 e0	 mov	 DWORD PTR $T155633[ebp+4], eax
  02e4d	8b 4d e0	 mov	 ecx, DWORD PTR $T155633[ebp+4]
  02e50	51		 push	 ecx
  02e51	8b 55 dc	 mov	 edx, DWORD PTR $T155633[ebp]
  02e54	52		 push	 edx
  02e55	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  02e58	e8 00 00 00 00	 call	 ?PtInRect@CRect@@QBEHUtagPOINT@@@Z ; CRect::PtInRect
  02e5d	85 c0		 test	 eax, eax
  02e5f	74 16		 je	 SHORT $L147840

; 1011 :         SetCursor ( g_hNoCursor );

  02e61	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_hNoCursor@@3PAUHICON__@@A ; g_hNoCursor
  02e66	50		 push	 eax
  02e67	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 1012 :         return TRUE;

  02e6d	b8 01 00 00 00	 mov	 eax, 1
  02e72	e9 80 00 00 00	 jmp	 $L147832
$L147840:

; 1014 : 
; 1015 : 	if ( (pWnd == this) && pm.game ) 

  02e77	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  02e7a	3b 4d d0	 cmp	 ecx, DWORD PTR _this$[ebp]
  02e7d	75 64		 jne	 SHORT $L147841
  02e7f	0f bf 15 00 00
	00 00		 movsx	 edx, WORD PTR ?pm@@3VPMachine@@A
  02e86	85 d2		 test	 edx, edx
  02e88	74 59		 je	 SHORT $L147841

; 1017 : 		if ( rect.PtInRect ( point ) && !GetProcessEvents() ) {

  02e8a	8b 45 e8	 mov	 eax, DWORD PTR _point$[ebp]
  02e8d	89 45 d4	 mov	 DWORD PTR $T155634[ebp], eax
  02e90	8b 4d ec	 mov	 ecx, DWORD PTR _point$[ebp+4]
  02e93	89 4d d8	 mov	 DWORD PTR $T155634[ebp+4], ecx
  02e96	8b 55 d8	 mov	 edx, DWORD PTR $T155634[ebp+4]
  02e99	52		 push	 edx
  02e9a	8b 45 d4	 mov	 eax, DWORD PTR $T155634[ebp]
  02e9d	50		 push	 eax
  02e9e	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  02ea1	e8 00 00 00 00	 call	 ?PtInRect@CRect@@QBEHUtagPOINT@@@Z ; CRect::PtInRect
  02ea6	85 c0		 test	 eax, eax
  02ea8	74 25		 je	 SHORT $L147843
  02eaa	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  02ead	8b 11		 mov	 edx, DWORD PTR [ecx]
  02eaf	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  02eb2	ff 92 c0 00 00
	00		 call	 DWORD PTR [edx+192]
  02eb8	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02ebd	85 c0		 test	 eax, eax
  02ebf	75 0e		 jne	 SHORT $L147843

; 1018 : 			SetCursor ( g_hWaitCursor );	

  02ec1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_hWaitCursor@@3PAUHICON__@@A ; g_hWaitCursor
  02ec6	50		 push	 eax
  02ec7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 1019 : 		} else {

  02ecd	eb 0d		 jmp	 SHORT $L147844
$L147843:

; 1020 : 			SetCursor ( g_hArrowCursor );

  02ecf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_hArrowCursor@@3PAUHICON__@@A ; g_hArrowCursor
  02ed5	51		 push	 ecx
  02ed6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4
$L147844:

; 1022 : 
; 1023 : 		return TRUE;

  02edc	b8 01 00 00 00	 mov	 eax, 1
  02ee1	eb 14		 jmp	 SHORT $L147832
$L147841:

; 1025 : 
; 1026 : 	return CWnd::OnSetCursor ( pWnd, nHitTest, message );

  02ee3	8b 55 10	 mov	 edx, DWORD PTR _message$[ebp]
  02ee6	52		 push	 edx
  02ee7	8b 45 0c	 mov	 eax, DWORD PTR _nHitTest$[ebp]
  02eea	50		 push	 eax
  02eeb	8b 4d 08	 mov	 ecx, DWORD PTR _pWnd$[ebp]
  02eee	51		 push	 ecx
  02eef	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  02ef2	e8 00 00 00 00	 call	 ?OnSetCursor@CWnd@@IAEHPAV1@II@Z ; CWnd::OnSetCursor
$L147832:

; 1027 : }

  02ef7	8b e5		 mov	 esp, ebp
  02ef9	5d		 pop	 ebp
  02efa	c2 0c 00	 ret	 12			; 0000000cH
?OnSetCursor@CSkinWnd@@IAEHPAVCWnd@@II@Z ENDP		; CSkinWnd::OnSetCursor
_TEXT	ENDS
PUBLIC	?GetCloseSelfCalled@CSkinWnd@@IAE_NXZ		; CSkinWnd::GetCloseSelfCalled
PUBLIC	?GetDestructing@CSkinWnd@@QAE_NXZ		; CSkinWnd::GetDestructing
EXTRN	?OnDestroy@CWnd@@IAEXXZ:NEAR			; CWnd::OnDestroy
_TEXT	SEGMENT
_this$ = -4
?OnDestroy@CSkinWnd@@IAEXXZ PROC NEAR			; CSkinWnd::OnDestroy

; 1031 : {

  02efd	55		 push	 ebp
  02efe	8b ec		 mov	 ebp, esp
  02f00	51		 push	 ecx
  02f01	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1032 : 	if ( false == GetDestructing() ) 

  02f04	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02f07	e8 00 00 00 00	 call	 ?GetDestructing@CSkinWnd@@QAE_NXZ ; CSkinWnd::GetDestructing
  02f0c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02f11	85 c0		 test	 eax, eax
  02f13	75 4d		 jne	 SHORT $L147851

; 1034 : 		// remove this window from the window handle map
; 1035 : 		DeleteFromHandleMap();

  02f15	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02f18	e8 00 00 00 00	 call	 ?DeleteFromHandleMap@CSkinWnd@@IAEXXZ ; CSkinWnd::DeleteFromHandleMap

; 1036 : 
; 1037 : 		// this window is now destructing...
; 1038 : 		SetDestructing ( true );

  02f1d	6a 01		 push	 1
  02f1f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02f22	e8 00 00 00 00	 call	 ?SetDestructing@CSkinWnd@@IAEX_N@Z ; CSkinWnd::SetDestructing

; 1039 : 
; 1040 :         // Close self has not been called so do it.
; 1041 :         if (!GetCloseSelfCalled())

  02f27	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02f2a	e8 00 00 00 00	 call	 ?GetCloseSelfCalled@CSkinWnd@@IAE_NXZ ; CSkinWnd::GetCloseSelfCalled
  02f2f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  02f34	85 c0		 test	 eax, eax
  02f36	75 10		 jne	 SHORT $L147850

; 1043 : 		    CloseSelf( true );

  02f38	6a 01		 push	 1
  02f3a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02f3d	8b 10		 mov	 edx, DWORD PTR [eax]
  02f3f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02f42	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L147850:

; 1045 : 
; 1046 :         // Remove this window from ours lists - pass it for destruction
; 1047 :         if ( g_pWindowMgr ) 

  02f48	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  02f4f	74 11		 je	 SHORT $L147851

; 1049 : 	        g_pWindowMgr->DelWindow ( this, true );

  02f51	6a 01		 push	 1
  02f53	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02f56	50		 push	 eax
  02f57	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  02f5d	e8 00 00 00 00	 call	 ?DelWindow@CWindowMgr@@QAEXPAVCSkinWnd@@H@Z ; CWindowMgr::DelWindow
$L147851:

; 1052 : 
; 1053 :     CWnd::OnDestroy();

  02f62	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02f65	e8 00 00 00 00	 call	 ?OnDestroy@CWnd@@IAEXXZ	; CWnd::OnDestroy

; 1054 : }

  02f6a	8b e5		 mov	 esp, ebp
  02f6c	5d		 pop	 ebp
  02f6d	c3		 ret	 0
?OnDestroy@CSkinWnd@@IAEXXZ ENDP			; CSkinWnd::OnDestroy
_TEXT	ENDS
EXTRN	?SavePosn@CWindowMgr@@QAEXPAVCSkinWnd@@@Z:NEAR	; CWindowMgr::SavePosn
EXTRN	__imp__GetWindowLongA@8:NEAR
_TEXT	SEGMENT
_this$ = -4
?OnMove@CSkinWnd@@IAEXHH@Z PROC NEAR			; CSkinWnd::OnMove

; 1058 : {

  02f6e	55		 push	 ebp
  02f6f	8b ec		 mov	 ebp, esp
  02f71	51		 push	 ecx
  02f72	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1059 : 	// ignore this for WS_CHILD windows...
; 1060 : 	if ( GetWindowLong ( m_hWnd, GWL_STYLE ) & WS_CHILD )

  02f75	6a f0		 push	 -16			; fffffff0H
  02f77	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02f7a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  02f7d	51		 push	 ecx
  02f7e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongA@8
  02f84	25 00 00 00 40	 and	 eax, 1073741824		; 40000000H
  02f89	85 c0		 test	 eax, eax
  02f8b	74 02		 je	 SHORT $L147857

; 1061 : 		return;

  02f8d	eb 21		 jmp	 SHORT $L147856
$L147857:

; 1062 : 
; 1063 : 	if ( g_pWindowMgr && m_pSkinForm ) { //&& !m_pParentWnd ) {

  02f8f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  02f96	74 18		 je	 SHORT $L147858
  02f98	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  02f9b	83 7a 7c 00	 cmp	 DWORD PTR [edx+124], 0
  02f9f	74 0f		 je	 SHORT $L147858

; 1064 : 		g_pWindowMgr->SavePosn ( this );

  02fa1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  02fa4	50		 push	 eax
  02fa5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  02fab	e8 00 00 00 00	 call	 ?SavePosn@CWindowMgr@@QAEXPAVCSkinWnd@@@Z ; CWindowMgr::SavePosn
$L147858:
$L147856:

; 1066 : }

  02fb0	8b e5		 mov	 esp, ebp
  02fb2	5d		 pop	 ebp
  02fb3	c2 08 00	 ret	 8
?OnMove@CSkinWnd@@IAEXHH@Z ENDP				; CSkinWnd::OnMove
_TEXT	ENDS
PUBLIC	?OnActivate@CWnd@@IAEXIPAV1@H@Z			; CWnd::OnActivate
_TEXT	SEGMENT
_nState$ = 8
_pWndOther$ = 12
_bMinimized$ = 16
_this$ = -4
?OnActivate@CSkinWnd@@IAEXIPAVCWnd@@H@Z PROC NEAR	; CSkinWnd::OnActivate

; 1069 : {

  02fb6	55		 push	 ebp
  02fb7	8b ec		 mov	 ebp, esp
  02fb9	51		 push	 ecx
  02fba	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1070 :     CWnd::OnActivate( nState, pWndOther, bMinimized );

  02fbd	8b 45 10	 mov	 eax, DWORD PTR _bMinimized$[ebp]
  02fc0	50		 push	 eax
  02fc1	8b 4d 0c	 mov	 ecx, DWORD PTR _pWndOther$[ebp]
  02fc4	51		 push	 ecx
  02fc5	8b 55 08	 mov	 edx, DWORD PTR _nState$[ebp]
  02fc8	52		 push	 edx
  02fc9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02fcc	e8 00 00 00 00	 call	 ?OnActivate@CWnd@@IAEXIPAV1@H@Z ; CWnd::OnActivate

; 1071 : }

  02fd1	8b e5		 mov	 esp, ebp
  02fd3	5d		 pop	 ebp
  02fd4	c2 0c 00	 ret	 12			; 0000000cH
?OnActivate@CSkinWnd@@IAEXIPAVCWnd@@H@Z ENDP		; CSkinWnd::OnActivate
_TEXT	ENDS
PUBLIC	?OnClose@CWnd@@IAEXXZ				; CWnd::OnClose
_TEXT	SEGMENT
_this$ = -4
?OnClose@CSkinWnd@@IAEXXZ PROC NEAR			; CSkinWnd::OnClose

; 1075 : {

  02fd7	55		 push	 ebp
  02fd8	8b ec		 mov	 ebp, esp
  02fda	51		 push	 ecx
  02fdb	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1076 : 	// pass the close on up...
; 1077 : 	CWnd::OnClose();

  02fde	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  02fe1	e8 00 00 00 00	 call	 ?OnClose@CWnd@@IAEXXZ	; CWnd::OnClose

; 1078 : }

  02fe6	8b e5		 mov	 esp, ebp
  02fe8	5d		 pop	 ebp
  02fe9	c3		 ret	 0
?OnClose@CSkinWnd@@IAEXXZ ENDP				; CSkinWnd::OnClose
_TEXT	ENDS
PUBLIC	?OnSetFocus@CWnd@@IAEXPAV1@@Z			; CWnd::OnSetFocus
EXTRN	?GetWindowPlacement@CWnd@@QBEHPAUtagWINDOWPLACEMENT@@@Z:NEAR ; CWnd::GetWindowPlacement
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:NEAR			; CWnd::SetFocus
_TEXT	SEGMENT
_pOldWnd$ = 8
_this$ = -48
_wp$147874 = -44
?OnSetFocus@CSkinWnd@@IAEXPAVCWnd@@@Z PROC NEAR		; CSkinWnd::OnSetFocus

; 1082 : {

  02fea	55		 push	 ebp
  02feb	8b ec		 mov	 ebp, esp
  02fed	83 ec 30	 sub	 esp, 48			; 00000030H
  02ff0	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 1083 : 	// bring the main window to the top if it is not hidden or minimized
; 1084 : 	if ( g_pMainWindow ) {

  02ff3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A, 0 ; g_pMainWindow
  02ffa	74 3d		 je	 SHORT $L147875

; 1085 : 		WINDOWPLACEMENT wp;
; 1086 : 		g_pMainWindow->GetWindowPlacement ( &wp );

  02ffc	8d 45 d4	 lea	 eax, DWORD PTR _wp$147874[ebp]
  02fff	50		 push	 eax
  03000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  03006	e8 00 00 00 00	 call	 ?GetWindowPlacement@CWnd@@QBEHPAUtagWINDOWPLACEMENT@@@Z ; CWnd::GetWindowPlacement

; 1087 : 	
; 1088 : 		if ( !((wp.showCmd == SW_HIDE) || (wp.showCmd == SW_MINIMIZE) || (wp.showCmd == SW_SHOWMINIMIZED)) ) {

  0300b	83 7d dc 00	 cmp	 DWORD PTR _wp$147874[ebp+8], 0
  0300f	74 28		 je	 SHORT $L147875
  03011	83 7d dc 06	 cmp	 DWORD PTR _wp$147874[ebp+8], 6
  03015	74 22		 je	 SHORT $L147875
  03017	83 7d dc 02	 cmp	 DWORD PTR _wp$147874[ebp+8], 2
  0301b	74 1c		 je	 SHORT $L147875

; 1089 : 			g_pMainWindow->SetWindowPos ( &wndTop, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE | SWP_NOACTIVATE );

  0301d	6a 13		 push	 19			; 00000013H
  0301f	6a 00		 push	 0
  03021	6a 00		 push	 0
  03023	6a 00		 push	 0
  03025	6a 00		 push	 0
  03027	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?wndTop@CWnd@@2V1@B
  0302d	51		 push	 ecx
  0302e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  03034	e8 00 00 00 00	 call	 ?SetWindowPos@CWnd@@QAEHPBV1@HHHHI@Z ; CWnd::SetWindowPos
$L147875:

; 1092 : 
; 1093 : 	CWnd::OnSetFocus ( pOldWnd );

  03039	8b 55 08	 mov	 edx, DWORD PTR _pOldWnd$[ebp]
  0303c	52		 push	 edx
  0303d	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  03040	e8 00 00 00 00	 call	 ?OnSetFocus@CWnd@@IAEXPAV1@@Z ; CWnd::OnSetFocus

; 1094 : 
; 1095 : 	if ( g_pMainWindow && m_bPassFocusToMainWindow ) {

  03045	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A, 0 ; g_pMainWindow
  0304c	74 1a		 je	 SHORT $L147876
  0304e	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  03051	33 c9		 xor	 ecx, ecx
  03053	8a 88 90 00 00
	00		 mov	 cl, BYTE PTR [eax+144]
  03059	85 c9		 test	 ecx, ecx
  0305b	74 0b		 je	 SHORT $L147876

; 1096 : 		g_pMainWindow->SetFocus();

  0305d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  03063	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L147876:

; 1098 : }

  03068	8b e5		 mov	 esp, ebp
  0306a	5d		 pop	 ebp
  0306b	c2 04 00	 ret	 4
?OnSetFocus@CSkinWnd@@IAEXPAVCWnd@@@Z ENDP		; CSkinWnd::OnSetFocus
_this$ = -4
?OnNcActivate@CSkinWnd@@IAEHH@Z PROC NEAR		; CSkinWnd::OnNcActivate

; 1102 : {

  0306e	55		 push	 ebp
  0306f	8b ec		 mov	 ebp, esp
  03071	51		 push	 ecx
  03072	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1103 : 	return FALSE;

  03075	33 c0		 xor	 eax, eax

; 1104 : }

  03077	8b e5		 mov	 esp, ebp
  03079	5d		 pop	 ebp
  0307a	c2 04 00	 ret	 4
?OnNcActivate@CSkinWnd@@IAEHH@Z ENDP			; CSkinWnd::OnNcActivate
_TEXT	ENDS
PUBLIC	?OnWindowPosChanged@CWnd@@IAEXPAUtagWINDOWPOS@@@Z ; CWnd::OnWindowPosChanged
PUBLIC	?UpdateWindows@CSkinWnd@@IAEXXZ			; CSkinWnd::UpdateWindows
_TEXT	SEGMENT
_lpWndPos$ = 8
_this$ = -8
_nFlags$ = -4
?OnWindowPosChanged@CSkinWnd@@IAEXPAUtagWINDOWPOS@@@Z PROC NEAR ; CSkinWnd::OnWindowPosChanged

; 1108 : {

  0307d	55		 push	 ebp
  0307e	8b ec		 mov	 ebp, esp
  03080	83 ec 08	 sub	 esp, 8
  03083	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1109 : 	const int nFlags = SWP_NOSIZE | SWP_NOMOVE;

  03086	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _nFlags$[ebp], 3

; 1110 : 
; 1111 : 	if ( (lpWndPos->flags & nFlags) != nFlags ) {

  0308d	8b 45 08	 mov	 eax, DWORD PTR _lpWndPos$[ebp]
  03090	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  03093	83 e1 03	 and	 ecx, 3
  03096	83 f9 03	 cmp	 ecx, 3
  03099	74 08		 je	 SHORT $L147886

; 1112 : 		UpdateWindows();

  0309b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0309e	e8 00 00 00 00	 call	 ?UpdateWindows@CSkinWnd@@IAEXXZ ; CSkinWnd::UpdateWindows
$L147886:

; 1114 : 
; 1115 : 	CWnd::OnWindowPosChanged ( lpWndPos );

  030a3	8b 55 08	 mov	 edx, DWORD PTR _lpWndPos$[ebp]
  030a6	52		 push	 edx
  030a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  030aa	e8 00 00 00 00	 call	 ?OnWindowPosChanged@CWnd@@IAEXPAUtagWINDOWPOS@@@Z ; CWnd::OnWindowPosChanged

; 1116 : }

  030af	8b e5		 mov	 esp, ebp
  030b1	5d		 pop	 ebp
  030b2	c2 04 00	 ret	 4
?OnWindowPosChanged@CSkinWnd@@IAEXPAUtagWINDOWPOS@@@Z ENDP ; CSkinWnd::OnWindowPosChanged
_TEXT	ENDS
PUBLIC	?UpdateWindow@CWnd@@QAEXXZ			; CWnd::UpdateWindow
PUBLIC	?IsWindowVisible@CWnd@@QBEHXZ			; CWnd::IsWindowVisible
EXTRN	__imp__GetWindow@8:NEAR
EXTRN	__imp__IsWindowVisible@4:NEAR
EXTRN	__imp__UpdateWindow@4:NEAR
_TEXT	SEGMENT
_this$ = -8
_hWnd$ = -4
?UpdateWindows@CSkinWnd@@IAEXXZ PROC NEAR		; CSkinWnd::UpdateWindows

; 1120 : {

  030b5	55		 push	 ebp
  030b6	8b ec		 mov	 ebp, esp
  030b8	83 ec 08	 sub	 esp, 8
  030bb	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1121 : 	if ( !IsWindowVisible() )

  030be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  030c1	e8 00 00 00 00	 call	 ?IsWindowVisible@CWnd@@QBEHXZ ; CWnd::IsWindowVisible
  030c6	85 c0		 test	 eax, eax
  030c8	75 02		 jne	 SHORT $L147891

; 1122 : 		return;

  030ca	eb 40		 jmp	 SHORT $L147890
$L147891:

; 1123 : 
; 1124 : 	// update all of the windows below this one...
; 1125 : 	HWND hWnd = m_hWnd;

  030cc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  030cf	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  030d2	89 4d fc	 mov	 DWORD PTR _hWnd$[ebp], ecx
$L147894:

; 1126 : 
; 1127 : 	while ( hWnd = ::GetWindow ( hWnd, GW_HWNDNEXT ) ) 

  030d5	6a 02		 push	 2
  030d7	8b 55 fc	 mov	 edx, DWORD PTR _hWnd$[ebp]
  030da	52		 push	 edx
  030db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindow@8
  030e1	89 45 fc	 mov	 DWORD PTR _hWnd$[ebp], eax
  030e4	83 7d fc 00	 cmp	 DWORD PTR _hWnd$[ebp], 0
  030e8	74 1a		 je	 SHORT $L147895

; 1129 : 		// update visible windows only...
; 1130 :         if ( ::IsWindowVisible(hWnd) ) 

  030ea	8b 45 fc	 mov	 eax, DWORD PTR _hWnd$[ebp]
  030ed	50		 push	 eax
  030ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindowVisible@4
  030f4	85 c0		 test	 eax, eax
  030f6	74 0a		 je	 SHORT $L147896

; 1132 : 			::UpdateWindow( hWnd );		

  030f8	8b 4d fc	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  030fb	51		 push	 ecx
  030fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UpdateWindow@4
$L147896:

; 1134 : 	}

  03102	eb d1		 jmp	 SHORT $L147894
$L147895:

; 1135 : 
; 1136 : 	// update this window...
; 1137 : 	UpdateWindow();

  03104	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  03107	e8 00 00 00 00	 call	 ?UpdateWindow@CWnd@@QAEXXZ ; CWnd::UpdateWindow
$L147890:

; 1138 : }

  0310c	8b e5		 mov	 esp, ebp
  0310e	5d		 pop	 ebp
  0310f	c3		 ret	 0
?UpdateWindows@CSkinWnd@@IAEXXZ ENDP			; CSkinWnd::UpdateWindows
_TEXT	ENDS
PUBLIC	?RemoveControl@CSkinWnd@@QAEXPAVCSkinCtrl@@@Z	; CSkinWnd::RemoveControl
PUBLIC	?erase@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
xdata$x	SEGMENT
$T155647 DD	019930520H
	DD	01H
	DD	FLAT:$T155649
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155649 DD	0ffffffffH
	DD	FLAT:$L155645
xdata$x	ENDS
_TEXT	SEGMENT
_pCtrl$ = 8
_this$ = -24
$T155644 = -20
__$EHRec$ = -12
?RemoveControl@CSkinWnd@@QAEXPAVCSkinCtrl@@@Z PROC NEAR	; CSkinWnd::RemoveControl

; 1142 : {

  03110	55		 push	 ebp
  03111	8b ec		 mov	 ebp, esp
  03113	6a ff		 push	 -1
  03115	68 00 00 00 00	 push	 $L155648
  0311a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  03120	50		 push	 eax
  03121	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  03128	83 ec 14	 sub	 esp, 20			; 00000014H
  0312b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 1143 : 	if ( NULL == pCtrl )

  0312e	83 7d 08 00	 cmp	 DWORD PTR _pCtrl$[ebp], 0
  03132	75 02		 jne	 SHORT $L147901

; 1144 : 		return;

  03134	eb 3a		 jmp	 SHORT $L147900
$L147901:

; 1145 : 
; 1146 : 	m_controlMap.erase ( (CSkinObj)*pCtrl );

  03136	8b 45 08	 mov	 eax, DWORD PTR _pCtrl$[ebp]
  03139	50		 push	 eax
  0313a	8d 4d ec	 lea	 ecx, DWORD PTR $T155644[ebp]
  0313d	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  03142	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  03145	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  03148	89 4d e0	 mov	 DWORD PTR -32+[ebp], ecx
  0314b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  03152	8b 55 e0	 mov	 edx, DWORD PTR -32+[ebp]
  03155	52		 push	 edx
  03156	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  03159	83 c1 48	 add	 ecx, 72			; 00000048H
  0315c	e8 00 00 00 00	 call	 ?erase@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
  03161	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  03168	8d 4d ec	 lea	 ecx, DWORD PTR $T155644[ebp]
  0316b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L147900:

; 1147 : }

  03170	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  03173	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0317a	8b e5		 mov	 esp, ebp
  0317c	5d		 pop	 ebp
  0317d	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L155645:
  00324	8d 4d ec	 lea	 ecx, DWORD PTR $T155644[ebp]
  00327	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0032c	c3		 ret	 0
$L155648:
  0032d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155647
  00332	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?RemoveControl@CSkinWnd@@QAEXPAVCSkinCtrl@@@Z ENDP	; CSkinWnd::RemoveControl
EXTRN	?HandsAreOff@@YA_NXZ:NEAR			; HandsAreOff
_TEXT	SEGMENT
$T155651 = -8
_this$ = -12
?GetProcessEvents@CSkinWnd@@MAE_NXZ PROC NEAR		; CSkinWnd::GetProcessEvents

; 1150 : { 

  03180	55		 push	 ebp
  03181	8b ec		 mov	 ebp, esp
  03183	83 ec 10	 sub	 esp, 16			; 00000010H
  03186	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1151 : 	return m_state[sknWndProcessEvents] && !HandsAreOff(); 

  03189	6a 01		 push	 1
  0318b	8d 45 f8	 lea	 eax, DWORD PTR $T155651[ebp]
  0318e	50		 push	 eax
  0318f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  03192	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  03198	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  0319d	8b c8		 mov	 ecx, eax
  0319f	e8 00 00 00 00	 call	 ??Breference@?$bitset@$05@std@@QBE_NXZ ; std::bitset<6>::reference::operator bool
  031a4	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  031a9	85 c0		 test	 eax, eax
  031ab	74 21		 je	 SHORT $L155652
  031ad	e8 00 00 00 00	 call	 ?HandsAreOff@@YA_NXZ	; HandsAreOff
  031b2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  031b7	f7 d8		 neg	 eax
  031b9	1b c0		 sbb	 eax, eax
  031bb	40		 inc	 eax
  031bc	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  031c1	85 c0		 test	 eax, eax
  031c3	74 09		 je	 SHORT $L155652
  031c5	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR -16+[ebp], 1
  031cc	eb 07		 jmp	 SHORT $L155653
$L155652:
  031ce	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR -16+[ebp], 0
$L155653:
  031d5	8a 45 f0	 mov	 al, BYTE PTR -16+[ebp]

; 1152 : }

  031d8	8b e5		 mov	 esp, ebp
  031da	5d		 pop	 ebp
  031db	c3		 ret	 0
?GetProcessEvents@CSkinWnd@@MAE_NXZ ENDP		; CSkinWnd::GetProcessEvents
_TEXT	ENDS
PUBLIC	?OnSysKeyUp@CWnd@@IAEXIII@Z			; CWnd::OnSysKeyUp
_TEXT	SEGMENT
_nChar$ = 8
_nRepCnt$ = 12
_nFlags$ = 16
_this$ = -4
?OnSysKeyDown@CSkinWnd@@IAEXIII@Z PROC NEAR		; CSkinWnd::OnSysKeyDown

; 1155 : {

  031dc	55		 push	 ebp
  031dd	8b ec		 mov	 ebp, esp
  031df	51		 push	 ecx
  031e0	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1156 :     if ( (m_nPriority == swPriModal || m_nPriority == swPriGameModal) && nChar == VK_F4 && (nFlags | 13) )

  031e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  031e6	83 78 40 06	 cmp	 DWORD PTR [eax+64], 6
  031ea	74 09		 je	 SHORT $L147916
  031ec	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  031ef	83 79 40 07	 cmp	 DWORD PTR [ecx+64], 7
  031f3	75 12		 jne	 SHORT $L147915
$L147916:
  031f5	83 7d 08 73	 cmp	 DWORD PTR _nChar$[ebp], 115 ; 00000073H
  031f9	75 0c		 jne	 SHORT $L147915
  031fb	8b 55 10	 mov	 edx, DWORD PTR _nFlags$[ebp]
  031fe	83 ca 0d	 or	 edx, 13			; 0000000dH
  03201	85 d2		 test	 edx, edx
  03203	74 02		 je	 SHORT $L147915

; 1157 :         return;

  03205	eb 14		 jmp	 SHORT $L147914
$L147915:

; 1158 : 
; 1159 :     CWnd::OnSysKeyUp( nChar, nRepCnt, nFlags );    

  03207	8b 45 10	 mov	 eax, DWORD PTR _nFlags$[ebp]
  0320a	50		 push	 eax
  0320b	8b 4d 0c	 mov	 ecx, DWORD PTR _nRepCnt$[ebp]
  0320e	51		 push	 ecx
  0320f	8b 55 08	 mov	 edx, DWORD PTR _nChar$[ebp]
  03212	52		 push	 edx
  03213	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03216	e8 00 00 00 00	 call	 ?OnSysKeyUp@CWnd@@IAEXIII@Z ; CWnd::OnSysKeyUp
$L147914:

; 1160 : }

  0321b	8b e5		 mov	 esp, ebp
  0321d	5d		 pop	 ebp
  0321e	c2 0c 00	 ret	 12			; 0000000cH
?OnSysKeyDown@CSkinWnd@@IAEXIII@Z ENDP			; CSkinWnd::OnSysKeyDown
_nChar$ = 8
_nRepCnt$ = 12
_nFlags$ = 16
_this$ = -4
?OnSysKeyUp@CSkinWnd@@IAEXIII@Z PROC NEAR		; CSkinWnd::OnSysKeyUp

; 1163 : {

  03221	55		 push	 ebp
  03222	8b ec		 mov	 ebp, esp
  03224	51		 push	 ecx
  03225	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1164 :     if ( (m_nPriority == swPriModal || m_nPriority == swPriGameModal) && nChar == VK_F4 && (nFlags | 13) )

  03228	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0322b	83 78 40 06	 cmp	 DWORD PTR [eax+64], 6
  0322f	74 09		 je	 SHORT $L147924
  03231	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  03234	83 79 40 07	 cmp	 DWORD PTR [ecx+64], 7
  03238	75 12		 jne	 SHORT $L147923
$L147924:
  0323a	83 7d 08 73	 cmp	 DWORD PTR _nChar$[ebp], 115 ; 00000073H
  0323e	75 0c		 jne	 SHORT $L147923
  03240	8b 55 10	 mov	 edx, DWORD PTR _nFlags$[ebp]
  03243	83 ca 0d	 or	 edx, 13			; 0000000dH
  03246	85 d2		 test	 edx, edx
  03248	74 02		 je	 SHORT $L147923

; 1165 :         return;

  0324a	eb 14		 jmp	 SHORT $L147922
$L147923:

; 1166 : 
; 1167 :     CWnd::OnSysKeyUp( nChar, nRepCnt, nFlags );

  0324c	8b 45 10	 mov	 eax, DWORD PTR _nFlags$[ebp]
  0324f	50		 push	 eax
  03250	8b 4d 0c	 mov	 ecx, DWORD PTR _nRepCnt$[ebp]
  03253	51		 push	 ecx
  03254	8b 55 08	 mov	 edx, DWORD PTR _nChar$[ebp]
  03257	52		 push	 edx
  03258	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0325b	e8 00 00 00 00	 call	 ?OnSysKeyUp@CWnd@@IAEXIII@Z ; CWnd::OnSysKeyUp
$L147922:

; 1168 : }

  03260	8b e5		 mov	 esp, ebp
  03262	5d		 pop	 ebp
  03263	c2 0c 00	 ret	 12			; 0000000cH
?OnSysKeyUp@CSkinWnd@@IAEXIII@Z ENDP			; CSkinWnd::OnSysKeyUp
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??8@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NABVCString@@PBD@Z PROC NEAR			; operator==, COMDAT

; 183  : 	{ return s1.Compare(s2) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NABVCString@@PBD@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
;	COMDAT ??8@YG_NPBDABVCString@@@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??8@YG_NPBDABVCString@@@Z PROC NEAR			; operator==, COMDAT

; 185  : 	{ return s2.Compare(s1) == 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _s1$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _s2$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	40		 inc	 eax
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??8@YG_NPBDABVCString@@@Z ENDP				; operator==
_TEXT	ENDS
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:NEAR ; AfxGetModuleState
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT
?AfxGetApp@@YGPAVCWinApp@@XZ PROC NEAR			; AfxGetApp, COMDAT

; 17   : 	{ return afxCurrentWinApp; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00008	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?AfxGetApp@@YGPAVCWinApp@@XZ ENDP			; AfxGetApp
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CPoint@@QAE@XZ PROC NEAR				; CPoint::CPoint, COMDAT

; 83   : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CPoint@@QAE@XZ ENDP					; CPoint::CPoint
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT
_initX$ = 8
_initY$ = 12
_this$ = -4
??0CPoint@@QAE@HH@Z PROC NEAR				; CPoint::CPoint, COMDAT

; 85   : 	{ x = initX; y = initY; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _initX$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _initY$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0CPoint@@QAE@HH@Z ENDP				; CPoint::CPoint
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT

; 132  : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
EXTRN	__imp__CopyRect@8:NEAR
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT
_lpSrcRect$ = 8
_this$ = -4
??0CRect@@QAE@PBUtagRECT@@@Z PROC NEAR			; CRect::CRect, COMDAT

; 138  : 	{ ::CopyRect(this, lpSrcRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpSrcRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	51		 push	 ecx
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CopyRect@8
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??0CRect@@QAE@PBUtagRECT@@@Z ENDP			; CRect::CRect
_TEXT	ENDS
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?Width@CRect@@QBEHXZ PROC NEAR				; CRect::Width, COMDAT

; 145  : 	{ return right - left; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00010	2b 01		 sub	 eax, DWORD PTR [ecx]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?Width@CRect@@QBEHXZ ENDP				; CRect::Width
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?Height@CRect@@QBEHXZ PROC NEAR				; CRect::Height, COMDAT

; 147  : 	{ return bottom - top; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00010	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCRect@@QAEPAUtagRECT@@XZ PROC NEAR			; CRect::operator tagRECT *, COMDAT

; 165  : 	{ return this; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??BCRect@@QAEPAUtagRECT@@XZ ENDP			; CRect::operator tagRECT *
_TEXT	ENDS
EXTRN	__imp__IsRectEmpty@4:NEAR
;	COMDAT ?IsRectEmpty@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsRectEmpty@CRect@@QBEHXZ PROC NEAR			; CRect::IsRectEmpty, COMDAT

; 169  : 	{ return ::IsRectEmpty(this); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsRectEmpty@4
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?IsRectEmpty@CRect@@QBEHXZ ENDP				; CRect::IsRectEmpty
_TEXT	ENDS
EXTRN	__imp__PtInRect@12:NEAR
;	COMDAT ?PtInRect@CRect@@QBEHUtagPOINT@@@Z
_TEXT	SEGMENT
_point$ = 8
_this$ = -4
?PtInRect@CRect@@QBEHUtagPOINT@@@Z PROC NEAR		; CRect::PtInRect, COMDAT

; 173  : 	{ return ::PtInRect(this, point); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _point$[ebp+4]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _point$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	52		 push	 edx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PtInRect@12
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?PtInRect@CRect@@QBEHUtagPOINT@@@Z ENDP			; CRect::PtInRect
_TEXT	ENDS
EXTRN	__imp__OffsetRect@12:NEAR
;	COMDAT ?OffsetRect@CRect@@QAEXHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_this$ = -4
?OffsetRect@CRect@@QAEXHH@Z PROC NEAR			; CRect::OffsetRect, COMDAT

; 193  : 	{ ::OffsetRect(this, x, y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	52		 push	 edx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?OffsetRect@CRect@@QAEXHH@Z ENDP			; CRect::OffsetRect
_TEXT	ENDS
PUBLIC	??0?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@ABU?$less@PAUHWND__@@@1@_NABV?$allocator@PAVCSkinWnd@@@1@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
;	COMDAT ??0?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@ABU?$less@PAUHWND__@@@1@ABV?$allocator@PAVCSkinWnd@@@1@@Z
_TEXT	SEGMENT
__Pred$ = 8
__Al$ = 12
_this$ = -4
??0?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@ABU?$less@PAUHWND__@@@1@ABV?$allocator@PAVCSkinWnd@@@1@@Z PROC NEAR ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >, COMDAT

; 57   : 	explicit map(const _Pr& _Pred = _Pr(), const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@ABU?$less@PAUHWND__@@@1@_NABV?$allocator@PAVCSkinWnd@@@1@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
??0?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE@ABU?$less@PAUHWND__@@@1@ABV?$allocator@PAVCSkinWnd@@@1@@Z ENDP ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
_TEXT	ENDS
PUBLIC	?end@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end
;	COMDAT ?end@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@XZ
_TEXT	SEGMENT
$T155675 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@XZ PROC NEAR ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end, COMDAT

; 73   : 		{return (_Tr.end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T155675[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?end@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@XZ ENDP ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end
_TEXT	ENDS
PUBLIC	??0?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@QAE@ABQAUHWND__@@ABQAVCSkinWnd@@@Z ; std::pair<HWND__ * const,CSkinWnd *>::pair<HWND__ * const,CSkinWnd *>
PUBLIC	?insert@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::insert
;	COMDAT ??A?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEAAPAVCSkinWnd@@ABQAUHWND__@@@Z
_TEXT	SEGMENT
$T155677 = -12
$T155678 = -16
$T155679 = -24
__Kv$ = 8
_this$ = -28
__P$ = -4
??A?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEAAPAVCSkinWnd@@ABQAUHWND__@@@Z PROC NEAR ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::operator[], COMDAT

; 93   : 		{iterator _P = insert(value_type(_Kv, _Ty())).first;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T155678[ebp], 0
  00010	8d 45 f0	 lea	 eax, DWORD PTR $T155678[ebp]
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00017	51		 push	 ecx
  00018	8d 4d f4	 lea	 ecx, DWORD PTR $T155677[ebp]
  0001b	e8 00 00 00 00	 call	 ??0?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@QAE@ABQAUHWND__@@ABQAVCSkinWnd@@@Z ; std::pair<HWND__ * const,CSkinWnd *>::pair<HWND__ * const,CSkinWnd *>
  00020	50		 push	 eax
  00021	8d 55 e8	 lea	 edx, DWORD PTR $T155679[ebp]
  00024	52		 push	 edx
  00025	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?insert@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::insert
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	89 45 fc	 mov	 DWORD PTR __P$[ebp], eax

; 94   : 		return ((*_P).second); }

  00032	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  00035	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator*
  0003a	83 c0 04	 add	 eax, 4
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
??A?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEAAPAVCSkinWnd@@ABQAUHWND__@@@Z ENDP ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::operator[]
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEIABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase
;	COMDAT ?erase@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEIABQAUHWND__@@@Z
_TEXT	SEGMENT
__Kv$ = 8
_this$ = -4
?erase@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEIABQAUHWND__@@@Z PROC NEAR ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase, COMDAT

; 109  : 		{return (_Tr.erase(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEIABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?erase@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAEIABQAUHWND__@@@Z ENDP ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase
_TEXT	ENDS
PUBLIC	?find@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::find
;	COMDAT ?find@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@ABQAUHWND__@@@Z
_TEXT	SEGMENT
$T155682 = -4
__Kv$ = 12
___$ReturnUdt$ = 8
_this$ = -8
?find@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@ABQAUHWND__@@@Z PROC NEAR ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::find, COMDAT

; 121  : 		{return (_Tr.find(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T155682[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::find
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?find@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@2@ABQAUHWND__@@@Z ENDP ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::find
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::begin
PUBLIC	?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase
PUBLIC	?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
PUBLIC	?_Nilrefs@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1IA ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nilrefs
PUBLIC	?_Freenode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Freenode
EXTRN	__imp_??0_Lockit@std@@QAE@XZ:NEAR
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:NEAR
;	COMDAT ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
_BSS	SEGMENT
?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A DD 01H DUP (?) ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
_BSS	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1IA
_BSS	SEGMENT
?_Nilrefs@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1IA DD 01H DUP (?) ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nilrefs
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T155689 DD	019930520H
	DD	01H
	DD	FLAT:$T155691
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155691 DD	0ffffffffH
	DD	FLAT:$L155687
xdata$x	ENDS
;	COMDAT ??1?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T155684 = -20
$T155685 = -24
$T155686 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$149077 = -16
??1?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::~_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >, COMDAT

; 176  :                 {erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155690
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 ec	 lea	 eax, DWORD PTR $T155684[ebp]
  00021	50		 push	 eax
  00022	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	8d 55 e8	 lea	 edx, DWORD PTR $T155685[ebp]
  00030	52		 push	 edx
  00031	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?begin@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::begin
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	50		 push	 eax
  0003c	8d 4d e4	 lea	 ecx, DWORD PTR $T155686[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase

; 177  :                 _Freenode(_Head);

  00048	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	50		 push	 eax
  0004f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Freenode

; 178  :                 _Head = 0, _Size = 0;

  00057	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00061	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 179  :                         {_Lockit _Lk;

  0006b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$149077[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 180  :                         if (--_Nilrefs == 0)

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nilrefs@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1IA ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nilrefs
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?_Nilrefs@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1IA, eax ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nilrefs
  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nilrefs@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1IA, 0 ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nilrefs
  0008f	75 19		 jne	 SHORT $L149078

; 181  :                                 {_Freenode(_Nil);

  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00097	51		 push	 ecx
  00098	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Freenode

; 182  :                                 _Nil = 0; }}}

  000a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
$L149078:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$149077[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155687:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$149077[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L155690:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155689
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::~_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
PUBLIC	?_Value@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Value
;	COMDAT ??Diterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator*, COMDAT

; 127  :                         {return (_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator*
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??8iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator==, COMDAT

; 145  :                         {return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator==
_TEXT	ENDS
PUBLIC	??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
;	COMDAT ??0?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Pred$ = 8
__Al$ = 12
??0?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z PROC NEAR ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >, COMDAT

; 57   : 	explicit map(const _Pr& _Pred = _Pr(), const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
??0?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@VCSkinObj@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z ENDP ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin
;	COMDAT ?begin@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ
_TEXT	SEGMENT
$T155701 = -4
___$ReturnUdt$ = 8
_this$ = -8
?begin@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ PROC NEAR ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin, COMDAT

; 69   : 		{return (_Tr.begin()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T155701[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?begin@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ ENDP ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
;	COMDAT ?end@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ
_TEXT	SEGMENT
$T155703 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ PROC NEAR ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end, COMDAT

; 73   : 		{return (_Tr.end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T155703[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?end@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@XZ ENDP ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCSkinCtrl@@@Z ; std::pair<CSkinObj const ,CSkinCtrl *>::pair<CSkinObj const ,CSkinCtrl *>
PUBLIC	??1?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@XZ ; std::pair<CSkinObj const ,CSkinCtrl *>::~pair<CSkinObj const ,CSkinCtrl *>
PUBLIC	?insert@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::insert
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\map
xdata$x	SEGMENT
$T155710 DD	019930520H
	DD	01H
	DD	FLAT:$T155712
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155712 DD	0ffffffffH
	DD	FLAT:$L155708
xdata$x	ENDS
;	COMDAT ??A?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAPAVCSkinCtrl@@ABVCSkinObj@@@Z
_TEXT	SEGMENT
$T155705 = -28
$T155706 = -32
$T155707 = -40
__$EHRec$ = -12
_this$ = -44
__P$ = -16
__Kv$ = 8
??A?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAPAVCSkinCtrl@@ABVCSkinObj@@@Z PROC NEAR ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::operator[], COMDAT

; 93   : 		{iterator _P = insert(value_type(_Kv, _Ty())).first;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155711
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 28	 sub	 esp, 40			; 00000028H
  0001b	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T155706[ebp], 0
  00025	8d 45 e0	 lea	 eax, DWORD PTR $T155706[ebp]
  00028	50		 push	 eax
  00029	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  0002c	51		 push	 ecx
  0002d	8d 4d e4	 lea	 ecx, DWORD PTR $T155705[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCSkinCtrl@@@Z ; std::pair<CSkinObj const ,CSkinCtrl *>::pair<CSkinObj const ,CSkinCtrl *>
  00035	89 45 d0	 mov	 DWORD PTR -48+[ebp], eax
  00038	8b 55 d0	 mov	 edx, DWORD PTR -48+[ebp]
  0003b	89 55 cc	 mov	 DWORD PTR -52+[ebp], edx
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00045	8b 45 cc	 mov	 eax, DWORD PTR -52+[ebp]
  00048	50		 push	 eax
  00049	8d 4d d8	 lea	 ecx, DWORD PTR $T155707[ebp]
  0004c	51		 push	 ecx
  0004d	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?insert@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::insert
  00055	8b 10		 mov	 edx, DWORD PTR [eax]
  00057	89 55 f0	 mov	 DWORD PTR __P$[ebp], edx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d e4	 lea	 ecx, DWORD PTR $T155705[ebp]
  00064	e8 00 00 00 00	 call	 ??1?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@XZ ; std::pair<CSkinObj const ,CSkinCtrl *>::~pair<CSkinObj const ,CSkinCtrl *>

; 94   : 		return ((*_P).second); }

  00069	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  0006c	e8 00 00 00 00	 call	 ??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator*
  00071	83 c0 08	 add	 eax, 8
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155708:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR $T155705[ebp]
  00003	e8 00 00 00 00	 call	 ??1?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@XZ ; std::pair<CSkinObj const ,CSkinCtrl *>::~pair<CSkinObj const ,CSkinCtrl *>
  00008	c3		 ret	 0
$L155711:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155710
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??A?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAPAVCSkinCtrl@@ABVCSkinObj@@@Z ENDP ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::operator[]
PUBLIC	?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
;	COMDAT ?erase@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z
_TEXT	SEGMENT
_this$ = -4
__Kv$ = 8
?erase@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z PROC NEAR ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase, COMDAT

; 109  : 		{return (_Tr.erase(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?erase@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABVCSkinObj@@@Z ENDP ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
_TEXT	ENDS
PUBLIC	?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::find
;	COMDAT ?find@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@ABVCSkinObj@@@Z
_TEXT	SEGMENT
$T155717 = -4
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
?find@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@ABVCSkinObj@@@Z PROC NEAR ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::find, COMDAT

; 121  : 		{return (_Tr.find(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T155717[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::find
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?find@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@2@ABVCSkinObj@@@Z ENDP ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::find
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
PUBLIC	?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
PUBLIC	?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1IA ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nilrefs
PUBLIC	?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Freenode
;	COMDAT ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
_BSS	SEGMENT
?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A DD 01H DUP (?) ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
_BSS	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1IA
_BSS	SEGMENT
?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1IA DD 01H DUP (?) ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nilrefs
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T155724 DD	019930520H
	DD	01H
	DD	FLAT:$T155726
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155726 DD	0ffffffffH
	DD	FLAT:$L155722
xdata$x	ENDS
;	COMDAT ??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T155719 = -20
$T155720 = -24
$T155721 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$149132 = -16
??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::~_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >, COMDAT

; 176  :                 {erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155725
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 ec	 lea	 eax, DWORD PTR $T155719[ebp]
  00021	50		 push	 eax
  00022	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	8d 55 e8	 lea	 edx, DWORD PTR $T155720[ebp]
  00030	52		 push	 edx
  00031	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	50		 push	 eax
  0003c	8d 4d e4	 lea	 ecx, DWORD PTR $T155721[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase

; 177  :                 _Freenode(_Head);

  00048	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	50		 push	 eax
  0004f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Freenode

; 178  :                 _Head = 0, _Size = 0;

  00057	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00061	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 179  :                         {_Lockit _Lk;

  0006b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$149132[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 180  :                         if (--_Nilrefs == 0)

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1IA ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nilrefs
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1IA, eax ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nilrefs
  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1IA, 0 ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nilrefs
  0008f	75 19		 jne	 SHORT $L149133

; 181  :                                 {_Freenode(_Nil);

  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00097	51		 push	 ecx
  00098	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Freenode

; 182  :                                 _Nil = 0; }}}

  000a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
$L149133:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$149132[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155722:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$149132[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L155725:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155724
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::~_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
PUBLIC	?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Value
;	COMDAT ??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator*, COMDAT

; 127  :                         {return (_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++
;	COMDAT ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++, COMDAT

; 134  :                         {iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 135  :                         ++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++

; 136  :                         return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator==
;	COMDAT ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator!=, COMDAT

; 147  :                         {return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
;	COMDAT ??0?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT
__Pred$ = 8
__Al$ = 12
_this$ = -4
??0?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z PROC NEAR ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >, COMDAT

; 44   : 	explicit set(const _Pr& _Pred = _Pr(), const _A& _Al = _A())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Pred$[ebp]
  00010	51		 push	 ecx
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
??0?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@ABV?$allocator@PAVCSkinCtrl@@@1@@Z ENDP ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
;	COMDAT ?begin@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ
_TEXT	SEGMENT
$T155737 = -4
___$ReturnUdt$ = 8
_this$ = -8
?begin@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ PROC NEAR ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin, COMDAT

; 56   : 		{return (_Tr.begin()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T155737[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?begin@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ ENDP ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end
;	COMDAT ?end@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ
_TEXT	SEGMENT
$T155739 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ PROC NEAR ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end, COMDAT

; 60   : 		{return (_Tr.end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T155739[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	89 0a		 mov	 DWORD PTR [edx], ecx
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?end@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@2@XZ ENDP ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end
_TEXT	ENDS
PUBLIC	?size@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEIXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::size
;	COMDAT ?size@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ PROC NEAR ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::size, COMDAT

; 72   : 		{return (_Tr.size()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?size@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEIXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::size
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?size@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ ENDP ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::size
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::insert
PUBLIC	??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@AB_N@Z ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>
;	COMDAT ?insert@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
$T155742 = -16
$T155743 = -24
__X$ = 12
___$ReturnUdt$ = 8
_this$ = -28
__Ans$ = -8
?insert@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z PROC NEAR ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::insert, COMDAT

; 80   : 		{_Imp::_Pairib _Ans = _Tr.insert(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f0	 lea	 ecx, DWORD PTR $T155742[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::insert
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __Ans$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __Ans$[ebp+4], eax

; 81   : 		return (_Pairib(_Ans.first, _Ans.second)); }

  00024	8d 4d fc	 lea	 ecx, DWORD PTR __Ans$[ebp+4]
  00027	51		 push	 ecx
  00028	8d 55 f8	 lea	 edx, DWORD PTR __Ans$[ebp]
  0002b	52		 push	 edx
  0002c	8d 4d e8	 lea	 ecx, DWORD PTR $T155743[ebp]
  0002f	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@AB_N@Z ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
  0003e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?insert@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z ENDP ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::insert
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
;	COMDAT ?erase@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
__Kv$ = 8
_this$ = -4
?erase@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABQAVCSkinCtrl@@@Z PROC NEAR ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase, COMDAT

; 93   : 		{return (_Tr.erase(_Kv)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?erase@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABQAVCSkinCtrl@@@Z ENDP ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::clear
;	COMDAT ?clear@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?clear@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ PROC NEAR ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::clear, COMDAT

; 95   : 		{_Tr.clear(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?clear@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::clear
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?clear@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ ENDP ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::clear
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
PUBLIC	?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
PUBLIC	?_Nilrefs@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1IA ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nilrefs
PUBLIC	?_Freenode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Freenode
;	COMDAT ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
_BSS	SEGMENT
?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A DD 01H DUP (?) ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
_BSS	ENDS
;	COMDAT ?_Nilrefs@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1IA
_BSS	SEGMENT
?_Nilrefs@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1IA DD 01H DUP (?) ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nilrefs
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T155752 DD	019930520H
	DD	01H
	DD	FLAT:$T155754
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155754 DD	0ffffffffH
	DD	FLAT:$L155750
xdata$x	ENDS
;	COMDAT ??1?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
$T155747 = -20
$T155748 = -24
$T155749 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$149177 = -16
??1?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >, COMDAT

; 176  :                 {erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155753
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 ec	 lea	 eax, DWORD PTR $T155747[ebp]
  00021	50		 push	 eax
  00022	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	51		 push	 ecx
  0002d	8d 55 e8	 lea	 edx, DWORD PTR $T155748[ebp]
  00030	52		 push	 edx
  00031	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	50		 push	 eax
  0003c	8d 4d e4	 lea	 ecx, DWORD PTR $T155749[ebp]
  0003f	51		 push	 ecx
  00040	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase

; 177  :                 _Freenode(_Head);

  00048	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004e	50		 push	 eax
  0004f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Freenode

; 178  :                 _Head = 0, _Size = 0;

  00057	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00061	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00064	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 179  :                         {_Lockit _Lk;

  0006b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$149177[ebp]
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 180  :                         if (--_Nilrefs == 0)

  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nilrefs@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1IA ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nilrefs
  00080	83 e8 01	 sub	 eax, 1
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?_Nilrefs@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1IA, eax ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nilrefs
  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nilrefs@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1IA, 0 ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nilrefs
  0008f	75 19		 jne	 SHORT $L149178

; 181  :                                 {_Freenode(_Nil);

  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00097	51		 push	 ecx
  00098	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Freenode

; 182  :                                 _Nil = 0; }}}

  000a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
$L149178:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b1	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$149177[ebp]
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155750:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$149177[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L155753:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155752
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::~_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
PUBLIC	??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator, COMDAT

; 122  :                 iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Value@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Value
;	COMDAT ??Diterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEAAPAVCSkinCtrl@@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEAAPAVCSkinCtrl@@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator*, COMDAT

; 127  :                         {return (_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEAAPAVCSkinCtrl@@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++
;	COMDAT ??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++, COMDAT

; 134  :                         {iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 135  :                         ++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++

; 136  :                         return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??8iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator==
;	COMDAT ??9iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??9iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator!=, COMDAT

; 147  :                         {return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator!=
_TEXT	ENDS
PUBLIC	??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z	; std::bitset<6>::reference::reference
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
$T155764 = -8
__P$ = 12
___$ReturnUdt$ = 8
_this$ = -12
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z PROC NEAR	; std::bitset<6>::operator[], COMDAT

; 54   : 		{return (reference(*this, _P)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	8d 4d f8	 lea	 ecx, DWORD PTR $T155764[ebp]
  00014	e8 00 00 00 00	 call	 ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ; std::bitset<6>::reference::reference
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx
  00023	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ENDP	; std::bitset<6>::operator[]
_TEXT	ENDS
PUBLIC	?_Tidy@?$bitset@$05@std@@AAEXK@Z		; std::bitset<6>::_Tidy
;	COMDAT ??0?$bitset@$05@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0?$bitset@$05@std@@QAE@XZ PROC NEAR			; std::bitset<6>::bitset<6>, COMDAT

; 55   : 	bitset()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Tidy@?$bitset@$05@std@@AAEXK@Z ; std::bitset<6>::_Tidy
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??0?$bitset@$05@std@@QAE@XZ ENDP			; std::bitset<6>::bitset<6>
_TEXT	ENDS
PUBLIC	?test@?$bitset@$05@std@@QBE_NI@Z		; std::bitset<6>::test
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4
??Breference@?$bitset@$05@std@@QBE_NXZ PROC NEAR	; std::bitset<6>::reference::operator bool, COMDAT

; 35   : 			{return (_Pbs->test(_Off)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00011	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00013	e8 00 00 00 00	 call	 ?test@?$bitset@$05@std@@QBE_NI@Z ; std::bitset<6>::test
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??Breference@?$bitset@$05@std@@QBE_NXZ ENDP		; std::bitset<6>::reference::operator bool
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Buynode
;	COMDAT ??0?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@ABV?$allocator@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8
_this$ = -4
??0?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@ABV?$allocator@PAVCSkinCtrl@@@1@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >, COMDAT

; 131  : 		_Head(_Buynode()), _Size(0) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	6a 00		 push	 0
  00013	6a 00		 push	 0
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Buynode
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??0?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@ABV?$allocator@PAVCSkinCtrl@@@1@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >
_TEXT	ENDS
PUBLIC	?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::erase
PUBLIC	?_Freenode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Freenode
;	COMDAT ??1?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T155769 = -4
$T155770 = -8
$T155771 = -12
_this$ = -16
??1?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@XZ PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::~list<CSkinCtrl *,std::allocator<CSkinCtrl *> >, COMDAT

; 151  : 		{erase(begin(), end());

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T155769[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 55 f8	 lea	 edx, DWORD PTR $T155770[ebp]
  0001b	52		 push	 edx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?begin@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::begin
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	50		 push	 eax
  00027	8d 4d f4	 lea	 ecx, DWORD PTR $T155771[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::erase

; 152  : 		_Freenode(_Head);

  00033	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00039	50		 push	 eax
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?_Freenode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Freenode

; 153  : 		_Head = 0, _Size = 0; }

  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0004c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??1?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@XZ ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::~list<CSkinCtrl *,std::allocator<CSkinCtrl *> >
_TEXT	ENDS
PUBLIC	?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Next
PUBLIC	??0iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::iterator
;	COMDAT ?begin@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T155773 = -4
___$ReturnUdt$ = 8
_this$ = -8
?begin@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::begin, COMDAT

; 166  : 		{return (iterator(_Acc::_Next(_Head))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Next
  00015	83 c4 04	 add	 esp, 4
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	52		 push	 edx
  0001b	8d 4d fc	 lea	 ecx, DWORD PTR $T155773[ebp]
  0001e	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::iterator
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00028	89 01		 mov	 DWORD PTR [ecx], eax
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?begin@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T155775 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::end, COMDAT

; 170  : 		{return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T155775[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::end
_TEXT	ENDS
PUBLIC	?insert@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCSkinCtrl@@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::insert
;	COMDAT ?push_back@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
$T155777 = -4
$T155778 = -8
__X$ = 8
_this$ = -12
?push_back@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXABQAVCSkinCtrl@@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::push_back, COMDAT

; 208  : 		{insert(end(), _X); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d fc	 lea	 ecx, DWORD PTR $T155777[ebp]
  00010	51		 push	 ecx
  00011	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?end@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::end
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	52		 push	 edx
  0001c	8d 45 f8	 lea	 eax, DWORD PTR $T155778[ebp]
  0001f	50		 push	 eax
  00020	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?insert@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCSkinCtrl@@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::insert
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?push_back@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXABQAVCSkinCtrl@@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::push_back
_TEXT	ENDS
;	COMDAT ?clear@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T155780 = -4
$T155781 = -8
$T155782 = -12
_this$ = -16
?clear@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXXZ PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::clear, COMDAT

; 247  : 		{erase(begin(), end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T155780[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 55 f8	 lea	 edx, DWORD PTR $T155781[ebp]
  0001b	52		 push	 edx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?begin@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::begin
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	50		 push	 eax
  00027	8d 4d f4	 lea	 ecx, DWORD PTR $T155782[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::erase
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?clear@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEXXZ ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::clear
_TEXT	ENDS
PUBLIC	?_Value@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAVCSkinCtrl@@PAU_Node@23@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Value
;	COMDAT ??Diterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEAAPAVCSkinCtrl@@XZ
_TEXT	SEGMENT
_this$ = -4
??Diterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEAAPAVCSkinCtrl@@XZ PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator*, COMDAT

; 101  : 			{return (_Acc::_Value(_Ptr)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAVCSkinCtrl@@PAU_Node@23@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Value
  00012	83 c4 04	 add	 esp, 4
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??Diterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEAAPAVCSkinCtrl@@XZ ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEAAV012@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator++
;	COMDAT ??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator++, COMDAT

; 108  : 			{iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 109  : 			++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEAAV012@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator++

; 110  : 			return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??8iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator==
;	COMDAT ??9iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??9iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator!=, COMDAT

; 121  : 			{return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator!=
_TEXT	ENDS
PUBLIC	?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_Release
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::~_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >, COMDAT

; 260  : 	{ 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 261  : 		_Release(); 

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_Release

; 262  : 	}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::~_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
_TEXT	ENDS
EXTRN	?_com_issue_error@@YGXJ@Z:NEAR			; _com_issue_error
;	COMDAT ??C?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ
_TEXT	SEGMENT
_this$ = -4
??C?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator->, COMDAT

; 343  : 	{ 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  : 		if (m_pInterface == NULL) {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	75 0a		 jne	 SHORT $L149235

; 345  : 			_com_issue_error(E_POINTER);

  0000f	68 03 40 00 80	 push	 -2147467261		; 80004003H
  00014	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$L149235:

; 347  : 
; 348  : 		return m_pInterface; 

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	8b 01		 mov	 eax, DWORD PTR [ecx]

; 349  : 	}

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??C?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator->
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@XZ PROC NEAR ; std::pair<CSkinObj const ,CSkinCtrl *>::~pair<CSkinObj const ,CSkinCtrl *>, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@XZ ENDP ; std::pair<CSkinObj const ,CSkinCtrl *>::~pair<CSkinObj const ,CSkinCtrl *>
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ PROC NEAR		; CWnd::GetSafeHwnd, COMDAT

; 23   : 	{ return this == NULL ? NULL : m_hWnd; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L155791
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00016	eb 09		 jmp	 SHORT $L155792
$L155791:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0001e	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
$L155792:
  00021	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ENDP		; CWnd::GetSafeHwnd
_TEXT	ENDS
EXTRN	__imp__PostMessageA@16:NEAR
;	COMDAT ?PostMessageA@CWnd@@QAEHIIJ@Z
_TEXT	SEGMENT
_message$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?PostMessageA@CWnd@@QAEHIIJ@Z PROC NEAR			; CWnd::PostMessageA, COMDAT

; 41   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::PostMessage(m_hWnd, message, wParam, lParam); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _message$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?PostMessageA@CWnd@@QAEHIIJ@Z ENDP			; CWnd::PostMessageA
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT
_lpRect$ = 8
_bRepaint$ = 12
_this$ = -4
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z PROC NEAR		; CWnd::MoveWindow, COMDAT

; 80   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 		lpRect->bottom - lpRect->top, bRepaint); }

  00007	8b 45 0c	 mov	 eax, DWORD PTR _bRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ENDP		; CWnd::MoveWindow
_TEXT	ENDS
EXTRN	__imp__GetWindowRect@8:NEAR
;	COMDAT ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8
_this$ = -4
?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetWindowRect, COMDAT

; 96   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetWindowRect
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8
_this$ = -4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetClientRect, COMDAT

; 98   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetClientRect
_TEXT	ENDS
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?UpdateWindow@CWnd@@QAEXXZ PROC NEAR			; CWnd::UpdateWindow, COMDAT

; 118  : 	{ ASSERT(::IsWindow(m_hWnd)); ::UpdateWindow(m_hWnd); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UpdateWindow@4
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?UpdateWindow@CWnd@@QAEXXZ ENDP				; CWnd::UpdateWindow
_TEXT	ENDS
EXTRN	__imp__InvalidateRect@12:NEAR
;	COMDAT ?InvalidateRect@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT
_lpRect$ = 8
_bErase$ = 12
_this$ = -4
?InvalidateRect@CWnd@@QAEXPBUtagRECT@@H@Z PROC NEAR	; CWnd::InvalidateRect, COMDAT

; 128  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, lpRect, bErase); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _bErase$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00015	50		 push	 eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?InvalidateRect@CWnd@@QAEXPBUtagRECT@@H@Z ENDP		; CWnd::InvalidateRect
_TEXT	ENDS
;	COMDAT ?IsWindowVisible@CWnd@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsWindowVisible@CWnd@@QBEHXZ PROC NEAR			; CWnd::IsWindowVisible, COMDAT

; 140  : 	{ ASSERT(::IsWindow(m_hWnd)); return ::IsWindowVisible(m_hWnd); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindowVisible@4
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?IsWindowVisible@CWnd@@QBEHXZ ENDP			; CWnd::IsWindowVisible
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::insert
PUBLIC	??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@AB_N@Z ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>
;	COMDAT ?insert@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z
_TEXT	SEGMENT
$T155801 = -16
$T155802 = -24
__X$ = 12
___$ReturnUdt$ = 8
_this$ = -28
__Ans$ = -8
?insert@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z PROC NEAR ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::insert, COMDAT

; 96   : 		{_Imp::_Pairib _Ans = _Tr.insert(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f0	 lea	 ecx, DWORD PTR $T155801[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::insert
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __Ans$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __Ans$[ebp+4], eax

; 97   : 		return (_Pairib(_Ans.first, _Ans.second)); }

  00024	8d 4d fc	 lea	 ecx, DWORD PTR __Ans$[ebp+4]
  00027	51		 push	 ecx
  00028	8d 55 f8	 lea	 edx, DWORD PTR __Ans$[ebp]
  0002b	52		 push	 edx
  0002c	8d 4d e8	 lea	 ecx, DWORD PTR $T155802[ebp]
  0002f	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@AB_N@Z ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
  0003e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?insert@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ENDP ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::insert
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@PAU_Node@12@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Value, COMDAT

; 46   :                 {return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@PAU_Node@12@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Value
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXXZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Init
;	COMDAT ??0?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@ABU?$less@PAUHWND__@@@1@_NABV?$allocator@PAVCSkinWnd@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8
__Marg$ = 12
__Al$ = 16
_this$ = -4
??0?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@ABU?$less@PAUHWND__@@@1@_NABV?$allocator@PAVCSkinWnd@@@1@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >, COMDAT

; 162  :                 {_Init(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	88 4a 01	 mov	 BYTE PTR [edx+1], cl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8a 4d 0c	 mov	 cl, BYTE PTR __Marg$[ebp]
  00022	88 48 08	 mov	 BYTE PTR [eax+8], cl
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Init@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXXZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Init
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??0?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@ABU?$less@PAUHWND__@@@1@_NABV?$allocator@PAVCSkinWnd@@@1@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost
;	COMDAT ?begin@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T155806 = -4
___$ReturnUdt$ = 8
_this$ = -8
?begin@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::begin, COMDAT

; 190  :                 {return (iterator(_Lmost())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T155806[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::iterator
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 0a		 mov	 DWORD PTR [edx], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?begin@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T155808 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end, COMDAT

; 194  :                 {return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T155808[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator++
PUBLIC	??9iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator!=
PUBLIC	?size@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEIXZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::size
PUBLIC	?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase
PUBLIC	?_Erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Erase
PUBLIC	?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost
PUBLIC	?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T155817 DD	019930520H
	DD	01H
	DD	FLAT:$T155819
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155819 DD	0ffffffffH
	DD	FLAT:$L155815
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
$T155810 = -20
$T155811 = -24
$T155812 = -28
$T155813 = -32
$T155814 = -36
__$EHRec$ = -12
__F$ = 12
__L$ = 16
___$ReturnUdt$ = 8
_this$ = -40
_Lk$150416 = -16
?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase, COMDAT

; 365  :                 {if (size() == 0 || _F != begin() || _L != end())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155818
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?size@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEIXZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::size
  00026	85 c0		 test	 eax, eax
  00028	74 3c		 je	 SHORT $L150409
  0002a	8d 45 ec	 lea	 eax, DWORD PTR $T155810[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::begin
  00036	50		 push	 eax
  00037	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator!=
  0003f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00044	85 c0		 test	 eax, eax
  00046	75 1e		 jne	 SHORT $L150409
  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T155811[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?end@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end
  00054	50		 push	 eax
  00055	8d 4d 10	 lea	 ecx, DWORD PTR __L$[ebp]
  00058	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator!=
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	74 44		 je	 SHORT $L150408
$L150409:

; 366  :                         {while (_F != _L)

  00066	8d 55 10	 lea	 edx, DWORD PTR __L$[ebp]
  00069	52		 push	 edx
  0006a	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0006d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator!=
  00072	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00077	85 c0		 test	 eax, eax
  00079	74 1f		 je	 SHORT $L150412

; 367  :                                 erase(_F++);

  0007b	6a 00		 push	 0
  0007d	8d 45 e4	 lea	 eax, DWORD PTR $T155812[ebp]
  00080	50		 push	 eax
  00081	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00084	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator++
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	51		 push	 ecx
  0008c	8d 55 e0	 lea	 edx, DWORD PTR $T155813[ebp]
  0008f	52		 push	 edx
  00090	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase
  00098	eb cc		 jmp	 SHORT $L150409
$L150412:

; 368  :                         return (_F); }

  0009a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR __F$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a5	e9 83 00 00 00	 jmp	 $L150415
$L150408:

; 370  :                         {_Lockit Lk;

  000aa	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$150416[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 371  :                         _Erase(_Root());

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	52		 push	 edx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Erase

; 372  :                         _Root() = _Nil, _Size = 0;

  000cd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  000db	89 08		 mov	 DWORD PTR [eax], ecx
  000dd	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 373  :                         _Lmost() = _Head, _Rmost() = _Head;

  000e7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost
  000ef	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f5	89 10		 mov	 DWORD PTR [eax], edx
  000f7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost
  000ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00105	89 10		 mov	 DWORD PTR [eax], edx

; 374  :                         return (begin()); }}

  00107	8d 45 dc	 lea	 eax, DWORD PTR $T155814[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?begin@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::begin
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	89 0a		 mov	 DWORD PTR [edx], ecx
  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$150416[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L150415:
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155815:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$150416[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L155818:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155817
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase
PUBLIC	?equal_range@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@2@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::equal_range
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAI@Z ; std::_Distance
;	COMDAT ?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEIABQAUHWND__@@@Z
_TEXT	SEGMENT
$T155823 = -20
$T155824 = -24
__X$ = 8
_this$ = -28
__P$ = -8
__N$ = -12
?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEIABQAUHWND__@@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase, COMDAT

; 376  :                 {_Pairii _P = equal_range(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d ec	 lea	 ecx, DWORD PTR $T155823[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@2@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::equal_range
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __P$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __P$[ebp+4], eax

; 377  :                 size_type _N = 0;

  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0

; 378  :                 _Distance(_P.first, _P.second, _N);

  0002b	8d 4d f4	 lea	 ecx, DWORD PTR __N$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 fc	 mov	 edx, DWORD PTR __P$[ebp+4]
  00032	52		 push	 edx
  00033	8b 45 f8	 mov	 eax, DWORD PTR __P$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAI@Z ; std::_Distance
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 379  :                 erase(_P.first, _P.second);

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __P$[ebp+4]
  00042	51		 push	 ecx
  00043	8b 55 f8	 mov	 edx, DWORD PTR __P$[ebp]
  00046	52		 push	 edx
  00047	8d 45 e8	 lea	 eax, DWORD PTR $T155824[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase

; 380  :                 return (_N); }

  00053	8b 45 f4	 mov	 eax, DWORD PTR __N$[ebp]
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEIABQAUHWND__@@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase
_TEXT	ENDS
EXTRN	?Default@CWnd@@IAEJXZ:NEAR			; CWnd::Default
;	COMDAT ?OnActivate@CWnd@@IAEXIPAV1@H@Z
_TEXT	SEGMENT
_this$ = -4
?OnActivate@CWnd@@IAEXIPAV1@H@Z PROC NEAR		; CWnd::OnActivate, COMDAT

; 326  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
?OnActivate@CWnd@@IAEXIPAV1@H@Z ENDP			; CWnd::OnActivate
_TEXT	ENDS
PUBLIC	??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ; std::less<HWND__ *>::operator()
PUBLIC	?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Key
PUBLIC	?_Mynode@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Mynode
PUBLIC	?lower_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::lower_bound
;	COMDAT ?find@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z
_TEXT	SEGMENT
$T155827 = -8
$T155828 = -12
$T155829 = -16
$T155831 = -20
__Kv$ = 12
___$ReturnUdt$ = 8
_this$ = -24
__P$ = -4
?find@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::find, COMDAT

; 387  :                 {iterator _P = lower_bound(_Kv);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR $T155827[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::lower_bound
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	89 55 fc	 mov	 DWORD PTR __P$[ebp], edx

; 388  :                 return (_P == end()
; 389  :                         || key_compare(_Kv, _Key(_P._Mynode()))
; 390  :                                 ? end() : _P); }

  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T155829[ebp]
  00021	50		 push	 eax
  00022	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0002e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator==
  00033	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00038	85 c0		 test	 eax, eax
  0003a	75 32		 jne	 SHORT $L155830
  0003c	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Mynode
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Key
  0004a	83 c4 04	 add	 esp, 4
  0004d	50		 push	 eax
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00051	51		 push	 ecx
  00052	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 01	 add	 ecx, 1
  00058	e8 00 00 00 00	 call	 ??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ; std::less<HWND__ *>::operator()
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	75 08		 jne	 SHORT $L155830
  00066	8d 55 fc	 lea	 edx, DWORD PTR __P$[ebp]
  00069	89 55 e4	 mov	 DWORD PTR -28+[ebp], edx
  0006c	eb 0f		 jmp	 SHORT $L155832
$L155830:
  0006e	8d 45 ec	 lea	 eax, DWORD PTR $T155831[ebp]
  00071	50		 push	 eax
  00072	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?end@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::end
  0007a	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
$L155832:
  0007d	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  00080	89 4d f4	 mov	 DWORD PTR $T155828[ebp], ecx
  00083	8b 55 f4	 mov	 edx, DWORD PTR $T155828[ebp]
  00086	8b 02		 mov	 eax, DWORD PTR [edx]
  00088	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0008b	89 01		 mov	 DWORD PTR [ecx], eax
  0008d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 08 00	 ret	 8
?find@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::find
_TEXT	ENDS
;	COMDAT ?OnClose@CWnd@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnClose@CWnd@@IAEXXZ PROC NEAR				; CWnd::OnClose, COMDAT

; 332  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?OnClose@CWnd@@IAEXXZ ENDP				; CWnd::OnClose
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCSkinWnd@@@std@@QAEXPAXI@Z ; std::allocator<CSkinWnd *>::deallocate
;	COMDAT ?_Freenode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__S$ = 8
_this$ = -4
?_Freenode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Freenode, COMDAT

; 596  :                 {allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCSkinWnd@@@std@@QAEXPAXI@Z ; std::allocator<CSkinWnd *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Freenode
_TEXT	ENDS
;	COMDAT ??0?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@QAE@ABQAUHWND__@@ABQAVCSkinWnd@@@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@QAE@ABQAUHWND__@@ABQAVCSkinWnd@@@Z PROC NEAR ; std::pair<HWND__ * const,CSkinWnd *>::pair<HWND__ * const,CSkinWnd *>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __V1$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8b 11		 mov	 edx, DWORD PTR [ecx]
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@QAE@ABQAUHWND__@@ABQAVCSkinWnd@@@Z ENDP ; std::pair<HWND__ * const,CSkinWnd *>::pair<HWND__ * const,CSkinWnd *>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>
PUBLIC	?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::insert
;	COMDAT ?insert@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z
_TEXT	SEGMENT
$T155837 = -16
$T155838 = -24
__X$ = 12
___$ReturnUdt$ = 8
_this$ = -28
__Ans$ = -8
?insert@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z PROC NEAR ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::insert, COMDAT

; 96   : 		{_Imp::_Pairib _Ans = _Tr.insert(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f0	 lea	 ecx, DWORD PTR $T155837[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::insert
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __Ans$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __Ans$[ebp+4], eax

; 97   : 		return (_Pairib(_Ans.first, _Ans.second)); }

  00024	8d 4d fc	 lea	 ecx, DWORD PTR __Ans$[ebp+4]
  00027	51		 push	 ecx
  00028	8d 55 f8	 lea	 edx, DWORD PTR __Ans$[ebp]
  0002b	52		 push	 edx
  0002c	8d 4d e8	 lea	 ecx, DWORD PTR $T155838[ebp]
  0002f	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
  0003e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?insert@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ENDP ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::insert
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Value, COMDAT

; 46   :                 {return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Value
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Init
;	COMDAT ??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8
__Marg$ = 12
__Al$ = 16
_this$ = -4
??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >, COMDAT

; 162  :                 {_Init(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	88 4a 01	 mov	 BYTE PTR [edx+1], cl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8a 4d 0c	 mov	 cl, BYTE PTR __Marg$[ebp]
  00022	88 48 08	 mov	 BYTE PTR [eax+8], cl
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Init
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??0?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@ABU?$less@VCSkinObj@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost
;	COMDAT ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T155842 = -4
___$ReturnUdt$ = 8
_this$ = -8
?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin, COMDAT

; 190  :                 {return (iterator(_Lmost())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T155842[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::iterator
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 0a		 mov	 DWORD PTR [edx], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
$T155844 = -4
___$ReturnUdt$ = 8
_this$ = -8
?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end, COMDAT

; 194  :                 {return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T155844[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
_TEXT	ENDS
PUBLIC	?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::size
PUBLIC	?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
PUBLIC	?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Erase
PUBLIC	?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost
PUBLIC	?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T155853 DD	019930520H
	DD	01H
	DD	FLAT:$T155855
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155855 DD	0ffffffffH
	DD	FLAT:$L155851
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
$T155846 = -20
$T155847 = -24
$T155848 = -28
$T155849 = -32
$T155850 = -36
__$EHRec$ = -12
__F$ = 12
__L$ = 16
___$ReturnUdt$ = 8
_this$ = -40
_Lk$150508 = -16
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase, COMDAT

; 365  :                 {if (size() == 0 || _F != begin() || _L != end())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155854
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::size
  00026	85 c0		 test	 eax, eax
  00028	74 3c		 je	 SHORT $L150501
  0002a	8d 45 ec	 lea	 eax, DWORD PTR $T155846[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin
  00036	50		 push	 eax
  00037	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  0003f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00044	85 c0		 test	 eax, eax
  00046	75 1e		 jne	 SHORT $L150501
  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T155847[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
  00054	50		 push	 eax
  00055	8d 4d 10	 lea	 ecx, DWORD PTR __L$[ebp]
  00058	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	74 44		 je	 SHORT $L150500
$L150501:

; 366  :                         {while (_F != _L)

  00066	8d 55 10	 lea	 edx, DWORD PTR __L$[ebp]
  00069	52		 push	 edx
  0006a	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0006d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  00072	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00077	85 c0		 test	 eax, eax
  00079	74 1f		 je	 SHORT $L150504

; 367  :                                 erase(_F++);

  0007b	6a 00		 push	 0
  0007d	8d 45 e4	 lea	 eax, DWORD PTR $T155848[ebp]
  00080	50		 push	 eax
  00081	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00084	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	51		 push	 ecx
  0008c	8d 55 e0	 lea	 edx, DWORD PTR $T155849[ebp]
  0008f	52		 push	 edx
  00090	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
  00098	eb cc		 jmp	 SHORT $L150501
$L150504:

; 368  :                         return (_F); }

  0009a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR __F$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a5	e9 83 00 00 00	 jmp	 $L150507
$L150500:

; 370  :                         {_Lockit Lk;

  000aa	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$150508[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 371  :                         _Erase(_Root());

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	52		 push	 edx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Erase

; 372  :                         _Root() = _Nil, _Size = 0;

  000cd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  000db	89 08		 mov	 DWORD PTR [eax], ecx
  000dd	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 373  :                         _Lmost() = _Head, _Rmost() = _Head;

  000e7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost
  000ef	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f5	89 10		 mov	 DWORD PTR [eax], edx
  000f7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost
  000ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00105	89 10		 mov	 DWORD PTR [eax], edx

; 374  :                         return (begin()); }}

  00107	8d 45 dc	 lea	 eax, DWORD PTR $T155850[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	89 0a		 mov	 DWORD PTR [edx], ecx
  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$150508[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L150507:
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155851:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$150508[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L155854:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155853
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAI@Z ; std::_Distance
PUBLIC	?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::equal_range
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z
_TEXT	SEGMENT
__P$ = -8
__N$ = -12
$T155859 = -20
$T155860 = -24
__X$ = 8
_this$ = -28
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase, COMDAT

; 376  :                 {_Pairii _P = equal_range(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d ec	 lea	 ecx, DWORD PTR $T155859[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::equal_range
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __P$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __P$[ebp+4], eax

; 377  :                 size_type _N = 0;

  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0

; 378  :                 _Distance(_P.first, _P.second, _N);

  0002b	8d 4d f4	 lea	 ecx, DWORD PTR __N$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 fc	 mov	 edx, DWORD PTR __P$[ebp+4]
  00032	52		 push	 edx
  00033	8b 45 f8	 mov	 eax, DWORD PTR __P$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAI@Z ; std::_Distance
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 379  :                 erase(_P.first, _P.second);

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __P$[ebp+4]
  00042	51		 push	 ecx
  00043	8b 55 f8	 mov	 edx, DWORD PTR __P$[ebp]
  00046	52		 push	 edx
  00047	8d 45 e8	 lea	 eax, DWORD PTR $T155860[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase

; 380  :                 return (_N); }

  00053	8b 45 f4	 mov	 eax, DWORD PTR __N$[ebp]
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEIABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
_TEXT	ENDS
;	COMDAT ?OnSetCursor@CWnd@@IAEHPAV1@II@Z
_TEXT	SEGMENT
_this$ = -4
?OnSetCursor@CWnd@@IAEHPAV1@II@Z PROC NEAR		; CWnd::OnSetCursor, COMDAT

; 368  : 	{ return (BOOL)Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
?OnSetCursor@CWnd@@IAEHPAV1@II@Z ENDP			; CWnd::OnSetCursor
_TEXT	ENDS
;	COMDAT ?OnSetFocus@CWnd@@IAEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -4
?OnSetFocus@CWnd@@IAEXPAV1@@Z PROC NEAR			; CWnd::OnSetFocus, COMDAT

; 370  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?OnSetFocus@CWnd@@IAEXPAV1@@Z ENDP			; CWnd::OnSetFocus
_TEXT	ENDS
PUBLIC	??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
PUBLIC	?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Key
PUBLIC	?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
PUBLIC	?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::lower_bound
;	COMDAT ?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -24
__P$ = -4
$T155864 = -8
$T155865 = -12
$T155866 = -16
$T155868 = -20
__Kv$ = 12
?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::find, COMDAT

; 387  :                 {iterator _P = lower_bound(_Kv);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR $T155864[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::lower_bound
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	89 55 fc	 mov	 DWORD PTR __P$[ebp], edx

; 388  :                 return (_P == end()
; 389  :                         || key_compare(_Kv, _Key(_P._Mynode()))
; 390  :                                 ? end() : _P); }

  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T155866[ebp]
  00021	50		 push	 eax
  00022	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0002e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator==
  00033	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00038	85 c0		 test	 eax, eax
  0003a	75 32		 jne	 SHORT $L155867
  0003c	8d 4d fc	 lea	 ecx, DWORD PTR __P$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Key
  0004a	83 c4 04	 add	 esp, 4
  0004d	50		 push	 eax
  0004e	8b 4d 0c	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00051	51		 push	 ecx
  00052	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 01	 add	 ecx, 1
  00058	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	75 08		 jne	 SHORT $L155867
  00066	8d 55 fc	 lea	 edx, DWORD PTR __P$[ebp]
  00069	89 55 e4	 mov	 DWORD PTR -28+[ebp], edx
  0006c	eb 0f		 jmp	 SHORT $L155869
$L155867:
  0006e	8d 45 ec	 lea	 eax, DWORD PTR $T155868[ebp]
  00071	50		 push	 eax
  00072	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?end@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::end
  0007a	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
$L155869:
  0007d	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  00080	89 4d f4	 mov	 DWORD PTR $T155865[ebp], ecx
  00083	8b 55 f4	 mov	 edx, DWORD PTR $T155865[ebp]
  00086	8b 02		 mov	 eax, DWORD PTR [edx]
  00088	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0008b	89 01		 mov	 DWORD PTR [ecx], eax
  0008d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 08 00	 ret	 8
?find@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::find
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAXI@Z ; std::allocator<CSkinCtrl *>::deallocate
;	COMDAT ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__S$ = 8
?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Freenode, COMDAT

; 596  :                 {allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAXI@Z ; std::allocator<CSkinCtrl *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Freenode
_TEXT	ENDS
;	COMDAT ?OnWindowPosChanged@CWnd@@IAEXPAUtagWINDOWPOS@@@Z
_TEXT	SEGMENT
_this$ = -4
?OnWindowPosChanged@CWnd@@IAEXPAUtagWINDOWPOS@@@Z PROC NEAR ; CWnd::OnWindowPosChanged, COMDAT

; 380  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?OnWindowPosChanged@CWnd@@IAEXPAUtagWINDOWPOS@@@Z ENDP	; CWnd::OnWindowPosChanged
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCSkinCtrl@@@Z PROC NEAR ; std::pair<CSkinObj const ,CSkinCtrl *>::pair<CSkinObj const ,CSkinCtrl *>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 55 0c	 mov	 edx, DWORD PTR __V2$[ebp]
  00019	8b 02		 mov	 eax, DWORD PTR [edx]
  0001b	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABVCSkinObj@@ABQAVCSkinCtrl@@@Z ENDP ; std::pair<CSkinObj const ,CSkinCtrl *>::pair<CSkinObj const ,CSkinCtrl *>
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Inc
;	COMDAT ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++, COMDAT

; 131  :                         {_Inc();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Inc

; 132  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator==, COMDAT

; 145  :                         {return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator==
_TEXT	ENDS
;	COMDAT ?_Value@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAVCSkinCtrl@@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAVCSkinCtrl@@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Value, COMDAT

; 46   :                 {return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAVCSkinCtrl@@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Value
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Init
;	COMDAT ??0?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT
_this$ = -4
__Parg$ = 8
__Marg$ = 12
__Al$ = 16
??0?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >, COMDAT

; 162  :                 {_Init(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	8a 08		 mov	 cl, BYTE PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	88 0a		 mov	 BYTE PTR [edx], cl
  00011	8b 45 08	 mov	 eax, DWORD PTR __Parg$[ebp]
  00014	8a 08		 mov	 cl, BYTE PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	88 4a 01	 mov	 BYTE PTR [edx+1], cl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8a 4d 0c	 mov	 cl, BYTE PTR __Marg$[ebp]
  00022	88 48 08	 mov	 BYTE PTR [eax+8], cl
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Init@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Init
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 0c 00	 ret	 12			; 0000000cH
??0?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@ABU?$less@PAVCSkinCtrl@@@1@_NABV?$allocator@PAVCSkinCtrl@@@1@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost
;	COMDAT ?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T155879 = -4
?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin, COMDAT

; 190  :                 {return (iterator(_Lmost())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	50		 push	 eax
  00014	8d 4d fc	 lea	 ecx, DWORD PTR $T155879[ebp]
  00017	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00021	89 0a		 mov	 DWORD PTR [edx], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T155881 = -4
?end@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end, COMDAT

; 194  :                 {return (iterator(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	51		 push	 ecx
  00010	8d 4d fc	 lea	 ecx, DWORD PTR $T155881[ebp]
  00013	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?end@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEIXZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::size, COMDAT

; 206  :                 {return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEIXZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::size
_TEXT	ENDS
PUBLIC	??R_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEABQAVCSkinCtrl@@ABQAV3@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
PUBLIC	?_Key@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAABQAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Key
PUBLIC	?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
PUBLIC	?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
PUBLIC	?_Mynode@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
PUBLIC	??Fiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator--
PUBLIC	?_Insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAE?AViterator@12@PAU_Node@12@0ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Insert
PUBLIC	?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
PUBLIC	??R?$less@PAVCSkinCtrl@@@std@@QBE_NABQAVCSkinCtrl@@0@Z ; std::less<CSkinCtrl *>::operator()
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T155903 DD	019930520H
	DD	01H
	DD	FLAT:$T155905
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155905 DD	0ffffffffH
	DD	FLAT:$L155901
xdata$x	ENDS
;	COMDAT ?insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -112
__X$ = -24
__Y$ = -28
__Ans$ = -20
_Lk$150585 = -32
__P$ = -16
__V$ = 12
$T155884 = -36
$T155887 = -44
$T155888 = -48
$T155889 = -52
$T155890 = -56
$T155891 = -60
$T155892 = -68
$T155893 = -72
$T155894 = -76
$T155895 = -80
$T155896 = -88
$T155897 = -92
$T155898 = -96
$T155899 = -104
$T155900 = -108
__$EHRec$ = -12
?insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::insert, COMDAT

; 216  :                 {_Nodeptr _X = _Root();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155904
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 68	 sub	 esp, 104		; 00000068H
  0001b	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax

; 217  :                 _Nodeptr _Y = _Head;

  0002b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	89 55 e4	 mov	 DWORD PTR __Y$[ebp], edx

; 218  :                 bool _Ans = true;

  00034	c6 45 ec 01	 mov	 BYTE PTR __Ans$[ebp], 1

; 219  :                 { _Lockit Lk;

  00038	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$150585[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L150587:

; 220  :                         while (_X != _Nil)

  00048	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  0004b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00051	74 67		 je	 SHORT $L150588

; 221  :                                 {_Y = _X;

  00053	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  00056	89 4d e4	 mov	 DWORD PTR __Y$[ebp], ecx

; 222  :                                 _Ans = key_compare(_Kfn()(_V), _Key(_X));

  00059	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAABQAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Key
  00062	83 c4 04	 add	 esp, 4
  00065	50		 push	 eax
  00066	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d dc	 lea	 ecx, DWORD PTR $T155884[ebp]
  0006d	e8 00 00 00 00	 call	 ??R_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEABQAVCSkinCtrl@@ABQAV3@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
  00072	50		 push	 eax
  00073	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 01	 add	 ecx, 1
  00079	e8 00 00 00 00	 call	 ??R?$less@PAVCSkinCtrl@@@std@@QBE_NABQAVCSkinCtrl@@0@Z ; std::less<CSkinCtrl *>::operator()
  0007e	88 45 ec	 mov	 BYTE PTR __Ans$[ebp], al

; 223  :                                 _X = _Ans ? _Left(_X) : _Right(_X); }

  00081	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	85 c9		 test	 ecx, ecx
  0008c	74 13		 je	 SHORT $L155885
  0008e	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 00		 mov	 eax, DWORD PTR [eax]
  0009c	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0009f	eb 11		 jmp	 SHORT $L155886
$L155885:
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	89 55 8c	 mov	 DWORD PTR -116+[ebp], edx
$L155886:
  000b2	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  000b5	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax
  000b8	eb 8e		 jmp	 SHORT $L150587
$L150588:

; 224  :                 }

  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$150585[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 225  :                 if (_Multi)

  000ca	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  000d2	85 d2		 test	 edx, edx
  000d4	74 3e		 je	 SHORT $L150590

; 226  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  000d6	c6 45 d0 01	 mov	 BYTE PTR $T155888[ebp], 1
  000da	8d 45 d0	 lea	 eax, DWORD PTR $T155888[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d cc	 lea	 ecx, DWORD PTR $T155889[ebp]
  000ed	51		 push	 ecx
  000ee	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAE?AViterator@12@PAU_Node@12@0ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Insert
  000f6	50		 push	 eax
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T155887[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@AB_N@Z ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	89 11		 mov	 DWORD PTR [ecx], edx
  00109	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0010f	e9 16 01 00 00	 jmp	 $L150581
$L150590:

; 227  :                 iterator _P = iterator(_Y);

  00114	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00117	52		 push	 edx
  00118	8d 4d c8	 lea	 ecx, DWORD PTR $T155890[ebp]
  0011b	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator
  00120	8b 00		 mov	 eax, DWORD PTR [eax]
  00122	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax

; 228  :                 if (!_Ans)

  00125	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00128	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0012e	85 c9		 test	 ecx, ecx
  00130	75 02		 jne	 SHORT $L150600

; 230  :                 else if (_P == begin())

  00132	eb 64		 jmp	 SHORT $L150611
$L150600:
  00134	8d 55 c4	 lea	 edx, DWORD PTR $T155891[ebp]
  00137	52		 push	 edx
  00138	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
  00140	50		 push	 eax
  00141	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00144	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator==
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	85 c0		 test	 eax, eax
  00150	74 3e		 je	 SHORT $L150603

; 231  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  00152	c6 45 b8 01	 mov	 BYTE PTR $T155893[ebp], 1
  00156	8d 45 b8	 lea	 eax, DWORD PTR $T155893[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00161	52		 push	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  00165	50		 push	 eax
  00166	8d 4d b4	 lea	 ecx, DWORD PTR $T155894[ebp]
  00169	51		 push	 ecx
  0016a	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAE?AViterator@12@PAU_Node@12@0ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Insert
  00172	50		 push	 eax
  00173	8d 4d bc	 lea	 ecx, DWORD PTR $T155892[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@AB_N@Z ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00180	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00183	89 11		 mov	 DWORD PTR [ecx], edx
  00185	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00188	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018b	e9 9a 00 00 00	 jmp	 $L150581
$L150603:

; 233  :                         --_P;

  00190	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00193	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator--
$L150611:

; 234  :                 if (key_compare(_Key(_P._Mynode()), _Kfn()(_V)))

  00198	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  0019b	52		 push	 edx
  0019c	8d 4d b0	 lea	 ecx, DWORD PTR $T155895[ebp]
  0019f	e8 00 00 00 00	 call	 ??R_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEABQAVCSkinCtrl@@ABQAV3@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
  001a4	50		 push	 eax
  001a5	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAABQAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Key
  001b3	83 c4 04	 add	 esp, 4
  001b6	50		 push	 eax
  001b7	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	e8 00 00 00 00	 call	 ??R?$less@PAVCSkinCtrl@@@std@@QBE_NABQAVCSkinCtrl@@0@Z ; std::less<CSkinCtrl *>::operator()
  001c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c7	85 c0		 test	 eax, eax
  001c9	74 3b		 je	 SHORT $L150613

; 235  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  001cb	c6 45 a4 01	 mov	 BYTE PTR $T155897[ebp], 1
  001cf	8d 45 a4	 lea	 eax, DWORD PTR $T155897[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  001d6	51		 push	 ecx
  001d7	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  001da	52		 push	 edx
  001db	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  001de	50		 push	 eax
  001df	8d 4d a0	 lea	 ecx, DWORD PTR $T155898[ebp]
  001e2	51		 push	 ecx
  001e3	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAE?AViterator@12@PAU_Node@12@0ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Insert
  001eb	50		 push	 eax
  001ec	8d 4d a8	 lea	 ecx, DWORD PTR $T155896[ebp]
  001ef	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@AB_N@Z ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001fc	89 11		 mov	 DWORD PTR [ecx], edx
  001fe	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00201	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00204	eb 24		 jmp	 SHORT $L150581
$L150613:

; 236  :                 return (_Pairib(_P, false)); }

  00206	c6 45 94 00	 mov	 BYTE PTR $T155900[ebp], 0
  0020a	8d 55 94	 lea	 edx, DWORD PTR $T155900[ebp]
  0020d	52		 push	 edx
  0020e	8d 45 f0	 lea	 eax, DWORD PTR __P$[ebp]
  00211	50		 push	 eax
  00212	8d 4d 98	 lea	 ecx, DWORD PTR $T155899[ebp]
  00215	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@AB_N@Z ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00222	89 08		 mov	 DWORD PTR [eax], ecx
  00224	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00227	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L150581:
  0022a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155901:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$150585[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L155904:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155903
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@2@ABQAVCSkinCtrl@@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::insert
;	COMDAT ?OnSysCommand@CWnd@@IAEXIJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSysCommand@CWnd@@IAEXIJ@Z PROC NEAR			; CWnd::OnSysCommand, COMDAT

; 418  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?OnSysCommand@CWnd@@IAEXIJ@Z ENDP			; CWnd::OnSysCommand
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
PUBLIC	?_Erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Erase
PUBLIC	?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T155917 DD	019930520H
	DD	01H
	DD	FLAT:$T155919
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155919 DD	0ffffffffH
	DD	FLAT:$L155915
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -40
_Lk$150640 = -16
__F$ = 12
__L$ = 16
$T155910 = -20
$T155911 = -24
$T155912 = -28
$T155913 = -32
$T155914 = -36
__$EHRec$ = -12
?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase, COMDAT

; 365  :                 {if (size() == 0 || _F != begin() || _L != end())

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155918
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?size@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEIXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::size
  00026	85 c0		 test	 eax, eax
  00028	74 3c		 je	 SHORT $L150633
  0002a	8d 45 ec	 lea	 eax, DWORD PTR $T155910[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
  00036	50		 push	 eax
  00037	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  0003f	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00044	85 c0		 test	 eax, eax
  00046	75 1e		 jne	 SHORT $L150633
  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T155911[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?end@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end
  00054	50		 push	 eax
  00055	8d 4d 10	 lea	 ecx, DWORD PTR __L$[ebp]
  00058	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  0005d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00062	85 c0		 test	 eax, eax
  00064	74 44		 je	 SHORT $L150632
$L150633:

; 366  :                         {while (_F != _L)

  00066	8d 55 10	 lea	 edx, DWORD PTR __L$[ebp]
  00069	52		 push	 edx
  0006a	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  0006d	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  00072	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00077	85 c0		 test	 eax, eax
  00079	74 1f		 je	 SHORT $L150636

; 367  :                                 erase(_F++);

  0007b	6a 00		 push	 0
  0007d	8d 45 e4	 lea	 eax, DWORD PTR $T155912[ebp]
  00080	50		 push	 eax
  00081	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00084	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	51		 push	 ecx
  0008c	8d 55 e0	 lea	 edx, DWORD PTR $T155913[ebp]
  0008f	52		 push	 edx
  00090	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
  00098	eb cc		 jmp	 SHORT $L150633
$L150636:

; 368  :                         return (_F); }

  0009a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR __F$[ebp]
  000a0	89 08		 mov	 DWORD PTR [eax], ecx
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a5	e9 83 00 00 00	 jmp	 $L150639
$L150632:

; 370  :                         {_Lockit Lk;

  000aa	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$150640[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  000b3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 371  :                         _Erase(_Root());

  000ba	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  000c2	8b 10		 mov	 edx, DWORD PTR [eax]
  000c4	52		 push	 edx
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Erase

; 372  :                         _Root() = _Nil, _Size = 0;

  000cd	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  000db	89 08		 mov	 DWORD PTR [eax], ecx
  000dd	8b 55 d8	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 373  :                         _Lmost() = _Head, _Rmost() = _Head;

  000e7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost
  000ef	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000f5	89 10		 mov	 DWORD PTR [eax], edx
  000f7	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost
  000ff	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00105	89 10		 mov	 DWORD PTR [eax], edx

; 374  :                         return (begin()); }}

  00107	8d 45 dc	 lea	 eax, DWORD PTR $T155914[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00118	89 0a		 mov	 DWORD PTR [edx], ecx
  0011a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00121	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$150640[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L150639:
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155915:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _Lk$150640[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L155918:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155917
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
;	COMDAT ?OnSysKeyUp@CWnd@@IAEXIII@Z
_TEXT	SEGMENT
_this$ = -4
?OnSysKeyUp@CWnd@@IAEXIII@Z PROC NEAR			; CWnd::OnSysKeyUp, COMDAT

; 424  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
?OnSysKeyUp@CWnd@@IAEXIII@Z ENDP			; CWnd::OnSysKeyUp
_TEXT	ENDS
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAI@Z ; std::_Distance
PUBLIC	?equal_range@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@2@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::equal_range
;	COMDAT ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
_this$ = -28
__P$ = -8
__N$ = -12
__X$ = 8
$T155924 = -20
$T155925 = -24
?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABQAVCSkinCtrl@@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase, COMDAT

; 376  :                 {_Pairii _P = equal_range(_X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d ec	 lea	 ecx, DWORD PTR $T155924[ebp]
  00010	51		 push	 ecx
  00011	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@2@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::equal_range
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001e	89 55 f8	 mov	 DWORD PTR __P$[ebp], edx
  00021	89 45 fc	 mov	 DWORD PTR __P$[ebp+4], eax

; 377  :                 size_type _N = 0;

  00024	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0

; 378  :                 _Distance(_P.first, _P.second, _N);

  0002b	8d 4d f4	 lea	 ecx, DWORD PTR __N$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 fc	 mov	 edx, DWORD PTR __P$[ebp+4]
  00032	52		 push	 edx
  00033	8b 45 f8	 mov	 eax, DWORD PTR __P$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAI@Z ; std::_Distance
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 379  :                 erase(_P.first, _P.second);

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR __P$[ebp+4]
  00042	51		 push	 ecx
  00043	8b 55 f8	 mov	 edx, DWORD PTR __P$[ebp]
  00046	52		 push	 edx
  00047	8d 45 e8	 lea	 eax, DWORD PTR $T155925[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase

; 380  :                 return (_N); }

  00053	8b 45 f4	 mov	 eax, DWORD PTR __N$[ebp]
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEIABQAVCSkinCtrl@@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -16
$T155927 = -4
$T155928 = -8
$T155929 = -12
?clear@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::clear, COMDAT

; 385  :                 {erase(begin(), end()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 45 fc	 lea	 eax, DWORD PTR $T155927[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	51		 push	 ecx
  00018	8d 55 f8	 lea	 edx, DWORD PTR $T155928[ebp]
  0001b	52		 push	 edx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?begin@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::begin
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	50		 push	 eax
  00027	8d 4d f4	 lea	 ecx, DWORD PTR $T155929[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?clear@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::clear
_TEXT	ENDS
;	COMDAT ?_Freenode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__S$ = 8
?_Freenode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Freenode, COMDAT

; 596  :                 {allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAXI@Z ; std::allocator<CSkinCtrl *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Freenode
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator, COMDAT

; 63   :                 const_iterator()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Inc
;	COMDAT ??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++, COMDAT

; 131  :                         {_Inc();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Inc

; 132  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??8iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??8iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator==, COMDAT

; 145  :                         {return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator==
_TEXT	ENDS
PUBLIC	?_Xran@?$bitset@$05@std@@ABEXXZ			; std::bitset<6>::_Xran
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?test@?$bitset@$05@std@@QBE_NI@Z PROC NEAR		; std::bitset<6>::test, COMDAT

; 177  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 06	 cmp	 DWORD PTR __P$[ebp], 6
  0000c	72 08		 jb	 SHORT $L150703

; 178  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$05@std@@ABEXXZ ; std::bitset<6>::_Xran
$L150703:

; 179  : 		return ((_A[_P / _Nb] & ((_Ty)1 << _P % _Nb)) != 0); }

  00016	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00019	c1 ee 05	 shr	 esi, 5
  0001c	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001f	33 d2		 xor	 edx, edx
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	f7 f1		 div	 ecx
  00028	8b ca		 mov	 ecx, edx
  0002a	ba 01 00 00 00	 mov	 edx, 1
  0002f	d3 e2		 shl	 edx, cl
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  00037	23 c2		 and	 eax, edx
  00039	f7 d8		 neg	 eax
  0003b	1b c0		 sbb	 eax, eax
  0003d	f7 d8		 neg	 eax
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?test@?$bitset@$05@std@@QBE_NI@Z ENDP			; std::bitset<6>::test
_TEXT	ENDS
PUBLIC	?_Trim@?$bitset@$05@std@@AAEXXZ			; std::bitset<6>::_Trim
;	COMDAT ?_Tidy@?$bitset@$05@std@@AAEXK@Z
_TEXT	SEGMENT
_this$ = -8
__I$ = -4
__X$ = 8
?_Tidy@?$bitset@$05@std@@AAEXK@Z PROC NEAR		; std::bitset<6>::_Tidy, COMDAT

; 237  : 		{for (int _I = _Nw; 0 <= _I; --_I)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __I$[ebp], 0
  00010	eb 09		 jmp	 SHORT $L150708
$L150709:
  00012	8b 45 fc	 mov	 eax, DWORD PTR __I$[ebp]
  00015	83 e8 01	 sub	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR __I$[ebp], eax
$L150708:
  0001b	83 7d fc 00	 cmp	 DWORD PTR __I$[ebp], 0
  0001f	7c 0e		 jl	 SHORT $L150710

; 238  : 			_A[_I] = _X;

  00021	8b 4d fc	 mov	 ecx, DWORD PTR __I$[ebp]
  00024	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0002a	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax
  0002d	eb e3		 jmp	 SHORT $L150709
$L150710:

; 239  : 		if (_X != 0)

  0002f	83 7d 08 00	 cmp	 DWORD PTR __X$[ebp], 0
  00033	74 08		 je	 SHORT $L150711

; 240  : 			_Trim(); }

  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Trim@?$bitset@$05@std@@AAEXXZ ; std::bitset<6>::_Trim
$L150711:
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?_Tidy@?$bitset@$05@std@@AAEXK@Z ENDP			; std::bitset<6>::_Tidy
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
__P$ = 12
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z PROC NEAR	; std::bitset<6>::reference::reference, COMDAT

; 37   : 		reference(bitset<_N>& _X, size_t _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z ENDP	; std::bitset<6>::reference::reference
_TEXT	ENDS
PUBLIC	?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev
PUBLIC	?_Mynode@const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEPAU_Node@23@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
PUBLIC	?construct@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@ABQAV3@@Z ; std::allocator<CSkinCtrl *>::construct
;	COMDAT ?insert@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -12
__S$ = -4
$T155938 = -8
__P$ = 12
__X$ = 16
?insert@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCSkinCtrl@@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::insert, COMDAT

; 218  : 		{_Nodeptr _S = _P._Mynode();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  0000d	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEPAU_Node@23@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
  00012	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 219  : 		_Acc::_Prev(_S) = _Buynode(_S, _Acc::_Prev(_S));

  00015	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev
  0001e	83 c4 04	 add	 esp, 4
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	51		 push	 ecx
  00024	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00027	52		 push	 edx
  00028	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Buynode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Buynode
  00030	8b f0		 mov	 esi, eax
  00032	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev
  0003b	83 c4 04	 add	 esp, 4
  0003e	89 30		 mov	 DWORD PTR [eax], esi

; 220  : 		_S = _Acc::_Prev(_S);

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	89 55 fc	 mov	 DWORD PTR __S$[ebp], edx

; 221  : 		_Acc::_Next(_Acc::_Prev(_S)) = _S;

  00051	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev
  0005a	83 c4 04	 add	 esp, 4
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Next
  00065	83 c4 04	 add	 esp, 4
  00068	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0006b	89 10		 mov	 DWORD PTR [eax], edx

; 222  : 		allocator.construct(&_Acc::_Value(_S), _X);

  0006d	8b 45 10	 mov	 eax, DWORD PTR __X$[ebp]
  00070	50		 push	 eax
  00071	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAVCSkinCtrl@@PAU_Node@23@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Value
  0007a	83 c4 04	 add	 esp, 4
  0007d	50		 push	 eax
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?construct@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@ABQAV3@@Z ; std::allocator<CSkinCtrl *>::construct

; 223  : 		++_Size;

  00086	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00089	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0008c	83 c0 01	 add	 eax, 1
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 224  : 		return (iterator(_S)); }

  00095	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00098	52		 push	 edx
  00099	8d 4d f8	 lea	 ecx, DWORD PTR $T155938[ebp]
  0009c	e8 00 00 00 00	 call	 ??0iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::iterator
  000a1	8b 00		 mov	 eax, DWORD PTR [eax]
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000a6	89 01		 mov	 DWORD PTR [ecx], eax
  000a8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000ab	5e		 pop	 esi
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@ABQAVCSkinCtrl@@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::insert
_TEXT	ENDS
PUBLIC	?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::erase
;	COMDAT ?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -12
$T155940 = -4
$T155941 = -8
__F$ = 12
__L$ = 16
?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::erase, COMDAT

; 243  : 		{while (_F != _L)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
$L150723:
  00009	8d 45 10	 lea	 eax, DWORD PTR __L$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00010	e8 00 00 00 00	 call	 ??9iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator!=
  00015	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001a	85 c0		 test	 eax, eax
  0001c	74 1f		 je	 SHORT $L150724

; 244  : 			erase(_F++);

  0001e	6a 00		 push	 0
  00020	8d 4d fc	 lea	 ecx, DWORD PTR $T155940[ebp]
  00023	51		 push	 ecx
  00024	8d 4d 0c	 lea	 ecx, DWORD PTR __F$[ebp]
  00027	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AV012@H@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator++
  0002c	8b 10		 mov	 edx, DWORD PTR [eax]
  0002e	52		 push	 edx
  0002f	8d 45 f8	 lea	 eax, DWORD PTR $T155941[ebp]
  00032	50		 push	 eax
  00033	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::erase
  0003b	eb cc		 jmp	 SHORT $L150723
$L150724:

; 245  : 		return (_F); }

  0003d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00040	8b 55 0c	 mov	 edx, DWORD PTR __F$[ebp]
  00043	89 11		 mov	 DWORD PTR [ecx], edx
  00045	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::erase
_TEXT	ENDS
PUBLIC	?_Charalloc@?$allocator@PAVCSkinCtrl@@@std@@QAEPADI@Z ; std::allocator<CSkinCtrl *>::_Charalloc
;	COMDAT ?_Buynode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z
_TEXT	SEGMENT
_this$ = -8
__S$ = -4
__Narg$ = 8
__Parg$ = 12
?_Buynode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Buynode, COMDAT

; 386  : 		{_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 387  : 			1 * sizeof (_Node));

  00009	6a 0c		 push	 12			; 0000000cH
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCSkinCtrl@@@std@@QAEPADI@Z ; std::allocator<CSkinCtrl *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 388  : 		_Acc::_Next(_S) = _Narg != 0 ? _Narg : _S;

  00016	83 7d 08 00	 cmp	 DWORD PTR __Narg$[ebp], 0
  0001a	74 08		 je	 SHORT $L155943
  0001c	8b 45 08	 mov	 eax, DWORD PTR __Narg$[ebp]
  0001f	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  00022	eb 06		 jmp	 SHORT $L155944
$L155943:
  00024	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00027	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
$L155944:
  0002a	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002d	52		 push	 edx
  0002e	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Next
  00033	83 c4 04	 add	 esp, 4
  00036	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  00039	89 08		 mov	 DWORD PTR [eax], ecx

; 389  : 		_Acc::_Prev(_S) = _Parg != 0 ? _Parg : _S;

  0003b	83 7d 0c 00	 cmp	 DWORD PTR __Parg$[ebp], 0
  0003f	74 08		 je	 SHORT $L155945
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Parg$[ebp]
  00044	89 55 f0	 mov	 DWORD PTR -16+[ebp], edx
  00047	eb 06		 jmp	 SHORT $L155946
$L155945:
  00049	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0004c	89 45 f0	 mov	 DWORD PTR -16+[ebp], eax
$L155946:
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev
  00058	83 c4 04	 add	 esp, 4
  0005b	8b 55 f0	 mov	 edx, DWORD PTR -16+[ebp]
  0005e	89 10		 mov	 DWORD PTR [eax], edx

; 390  : 		return (_S); }

  00060	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
?_Buynode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEPAU_Node@12@PAU312@0@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Buynode
_TEXT	ENDS
;	COMDAT ?_Freenode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__S$ = 8
?_Freenode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Freenode, COMDAT

; 392  : 		{allocator.deallocate(_S, 1); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR __S$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAXI@Z ; std::allocator<CSkinCtrl *>::deallocate
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Freenode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEXPAU_Node@12@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Freenode
_TEXT	ENDS
;	COMDAT ?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT
__P$ = 8
?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Next, COMDAT

; 37   : 			{return ((_Nodepref)(*_P)._Next); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Next
_TEXT	ENDS
;	COMDAT ?_Value@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAVCSkinCtrl@@PAU_Node@23@@Z
_TEXT	SEGMENT
__P$ = 8
?_Value@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAVCSkinCtrl@@PAU_Node@23@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Value, COMDAT

; 41   : 			{return ((_Vref)(*_P)._Value); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Value@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAVCSkinCtrl@@PAU_Node@23@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Value
_TEXT	ENDS
PUBLIC	??0const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::iterator, COMDAT

; 98   : 		iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::iterator
_TEXT	ENDS
;	COMDAT ??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator++, COMDAT

; 105  : 			{_Ptr = _Acc::_Next(_Ptr);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Next
  00012	83 c4 04	 add	 esp, 4
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	89 02		 mov	 DWORD PTR [edx], eax

; 106  : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??8iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??8iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator==, COMDAT

; 119  : 			{return (_Ptr == _X._Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	33 c0		 xor	 eax, eax
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	0f 94 c0	 sete	 al
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??8iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator==
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@AB_N@Z ENDP ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,bool>
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4
?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_Release, COMDAT

; 660  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 661  : 		if (m_pInterface != NULL) {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 10		 je	 SHORT $L150748

; 662  : 			m_pInterface->Release();

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 11		 mov	 edx, DWORD PTR [ecx]
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	52		 push	 edx
  0001c	ff 50 08	 call	 DWORD PTR [eax+8]
$L150748:

; 664  : 	}

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_Release
_TEXT	ENDS
;	COMDAT ?OnSizing@CWnd@@IAEXIPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4
?OnSizing@CWnd@@IAEXIPAUtagRECT@@@Z PROC NEAR		; CWnd::OnSizing, COMDAT

; 509  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?OnSizing@CWnd@@IAEXIPAUtagRECT@@@Z ENDP		; CWnd::OnSizing
_TEXT	ENDS
;	COMDAT ?OnMoving@CWnd@@IAEXIPAUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4
?OnMoving@CWnd@@IAEXIPAUtagRECT@@@Z PROC NEAR		; CWnd::OnMoving, COMDAT

; 511  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?OnMoving@CWnd@@IAEXIPAUtagRECT@@@Z ENDP		; CWnd::OnMoving
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCSkinWnd@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?deallocate@?$allocator@PAVCSkinWnd@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CSkinWnd *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCSkinWnd@@@std@@QAEXPAXI@Z ENDP ; std::allocator<CSkinWnd *>::deallocate
_TEXT	ENDS
;	COMDAT ??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
_this$ = -4
??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z PROC NEAR ; std::less<HWND__ *>::operator(), COMDAT

; 86   : 		{return (_X < _Y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Y$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00011	1b c0		 sbb	 eax, eax
  00013	f7 d8		 neg	 eax
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ENDP	; std::less<HWND__ *>::operator()
_TEXT	ENDS
PUBLIC	??R_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QBEABQAUHWND__@@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn::operator()
;	COMDAT ?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
$T155963 = -4
?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Key, COMDAT

; 38   :                 {return (_Kfn()(_Value(_P))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?_Value@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Value
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T155963[ebp]
  00014	e8 00 00 00 00	 call	 ??R_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QBEABQAUHWND__@@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn::operator()
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Key
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEIXZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::size, COMDAT

; 206  :                 {return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEIXZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::size
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
PUBLIC	?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
PUBLIC	??Fiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator--
PUBLIC	?_Insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Insert
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T155985 DD	019930520H
	DD	01H
	DD	FLAT:$T155987
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155987 DD	0ffffffffH
	DD	FLAT:$L155983
xdata$x	ENDS
;	COMDAT ?insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z
_TEXT	SEGMENT
__V$ = 12
$T155966 = -36
$T155969 = -44
$T155970 = -48
$T155971 = -52
$T155972 = -56
$T155973 = -60
$T155974 = -68
$T155975 = -72
$T155976 = -76
$T155977 = -80
$T155978 = -88
$T155979 = -92
$T155980 = -96
$T155981 = -104
$T155982 = -108
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -112
__X$ = -24
__Y$ = -28
__Ans$ = -20
_Lk$150944 = -32
__P$ = -16
?insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::insert, COMDAT

; 216  :                 {_Nodeptr _X = _Root();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155986
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 68	 sub	 esp, 104		; 00000068H
  0001b	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax

; 217  :                 _Nodeptr _Y = _Head;

  0002b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	89 55 e4	 mov	 DWORD PTR __Y$[ebp], edx

; 218  :                 bool _Ans = true;

  00034	c6 45 ec 01	 mov	 BYTE PTR __Ans$[ebp], 1

; 219  :                 { _Lockit Lk;

  00038	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$150944[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L150946:

; 220  :                         while (_X != _Nil)

  00048	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  0004b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00051	74 67		 je	 SHORT $L150947

; 221  :                                 {_Y = _X;

  00053	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  00056	89 4d e4	 mov	 DWORD PTR __Y$[ebp], ecx

; 222  :                                 _Ans = key_compare(_Kfn()(_V), _Key(_X));

  00059	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Key
  00062	83 c4 04	 add	 esp, 4
  00065	50		 push	 eax
  00066	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d dc	 lea	 ecx, DWORD PTR $T155966[ebp]
  0006d	e8 00 00 00 00	 call	 ??R_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QBEABQAUHWND__@@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn::operator()
  00072	50		 push	 eax
  00073	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 01	 add	 ecx, 1
  00079	e8 00 00 00 00	 call	 ??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ; std::less<HWND__ *>::operator()
  0007e	88 45 ec	 mov	 BYTE PTR __Ans$[ebp], al

; 223  :                                 _X = _Ans ? _Left(_X) : _Right(_X); }

  00081	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	85 c9		 test	 ecx, ecx
  0008c	74 13		 je	 SHORT $L155967
  0008e	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 00		 mov	 eax, DWORD PTR [eax]
  0009c	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0009f	eb 11		 jmp	 SHORT $L155968
$L155967:
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	89 55 8c	 mov	 DWORD PTR -116+[ebp], edx
$L155968:
  000b2	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  000b5	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax
  000b8	eb 8e		 jmp	 SHORT $L150946
$L150947:

; 224  :                 }

  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$150944[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 225  :                 if (_Multi)

  000ca	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  000d2	85 d2		 test	 edx, edx
  000d4	74 3e		 je	 SHORT $L150949

; 226  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  000d6	c6 45 d0 01	 mov	 BYTE PTR $T155970[ebp], 1
  000da	8d 45 d0	 lea	 eax, DWORD PTR $T155970[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d cc	 lea	 ecx, DWORD PTR $T155971[ebp]
  000ed	51		 push	 ecx
  000ee	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Insert
  000f6	50		 push	 eax
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T155969[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@AB_N@Z ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	89 11		 mov	 DWORD PTR [ecx], edx
  00109	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0010f	e9 16 01 00 00	 jmp	 $L150940
$L150949:

; 227  :                 iterator _P = iterator(_Y);

  00114	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00117	52		 push	 edx
  00118	8d 4d c8	 lea	 ecx, DWORD PTR $T155972[ebp]
  0011b	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::iterator
  00120	8b 00		 mov	 eax, DWORD PTR [eax]
  00122	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax

; 228  :                 if (!_Ans)

  00125	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00128	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0012e	85 c9		 test	 ecx, ecx
  00130	75 02		 jne	 SHORT $L150959

; 230  :                 else if (_P == begin())

  00132	eb 64		 jmp	 SHORT $L150970
$L150959:
  00134	8d 55 c4	 lea	 edx, DWORD PTR $T155973[ebp]
  00137	52		 push	 edx
  00138	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?begin@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::begin
  00140	50		 push	 eax
  00141	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00144	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator==
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	85 c0		 test	 eax, eax
  00150	74 3e		 je	 SHORT $L150962

; 231  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  00152	c6 45 b8 01	 mov	 BYTE PTR $T155975[ebp], 1
  00156	8d 45 b8	 lea	 eax, DWORD PTR $T155975[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00161	52		 push	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  00165	50		 push	 eax
  00166	8d 4d b4	 lea	 ecx, DWORD PTR $T155976[ebp]
  00169	51		 push	 ecx
  0016a	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Insert
  00172	50		 push	 eax
  00173	8d 4d bc	 lea	 ecx, DWORD PTR $T155974[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@AB_N@Z ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00180	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00183	89 11		 mov	 DWORD PTR [ecx], edx
  00185	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00188	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018b	e9 9a 00 00 00	 jmp	 $L150940
$L150962:

; 233  :                         --_P;

  00190	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00193	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator--
$L150970:

; 234  :                 if (key_compare(_Key(_P._Mynode()), _Kfn()(_V)))

  00198	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  0019b	52		 push	 edx
  0019c	8d 4d b0	 lea	 ecx, DWORD PTR $T155977[ebp]
  0019f	e8 00 00 00 00	 call	 ??R_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QBEABQAUHWND__@@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn::operator()
  001a4	50		 push	 eax
  001a5	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Mynode
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Key
  001b3	83 c4 04	 add	 esp, 4
  001b6	50		 push	 eax
  001b7	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	e8 00 00 00 00	 call	 ??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ; std::less<HWND__ *>::operator()
  001c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c7	85 c0		 test	 eax, eax
  001c9	74 3b		 je	 SHORT $L150972

; 235  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  001cb	c6 45 a4 01	 mov	 BYTE PTR $T155979[ebp], 1
  001cf	8d 45 a4	 lea	 eax, DWORD PTR $T155979[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  001d6	51		 push	 ecx
  001d7	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  001da	52		 push	 edx
  001db	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  001de	50		 push	 eax
  001df	8d 4d a0	 lea	 ecx, DWORD PTR $T155980[ebp]
  001e2	51		 push	 ecx
  001e3	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Insert
  001eb	50		 push	 eax
  001ec	8d 4d a8	 lea	 ecx, DWORD PTR $T155978[ebp]
  001ef	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@AB_N@Z ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001fc	89 11		 mov	 DWORD PTR [ecx], edx
  001fe	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00201	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00204	eb 24		 jmp	 SHORT $L150940
$L150972:

; 236  :                 return (_Pairib(_P, false)); }

  00206	c6 45 94 00	 mov	 BYTE PTR $T155982[ebp], 0
  0020a	8d 55 94	 lea	 edx, DWORD PTR $T155982[ebp]
  0020d	52		 push	 edx
  0020e	8d 45 f0	 lea	 eax, DWORD PTR __P$[ebp]
  00211	50		 push	 eax
  00212	8d 4d 98	 lea	 ecx, DWORD PTR $T155981[ebp]
  00215	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@AB_N@Z ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00222	89 08		 mov	 DWORD PTR [eax], ecx
  00224	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00227	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L150940:
  0022a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155983:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$150944[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L155986:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155985
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@2@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::insert
PUBLIC	?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
PUBLIC	?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
PUBLIC	?_Lrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lrotate
PUBLIC	?_Max@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Max
PUBLIC	?_Min@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Min
PUBLIC	?_Rrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rrotate
PUBLIC	?_Destval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Destval
PUBLIC	?swap@std@@YAXAAW4_Redbl@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z ; std::swap
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T155994 DD	019930520H
	DD	01H
	DD	FLAT:$T155996
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T155996 DD	0ffffffffH
	DD	FLAT:$L155992
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__P$ = 12
$T155991 = -40
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -44
__X$ = -16
__Y$ = -20
__Z$ = -28
__Lk$ = -24
__W$151028 = -32
__W$151034 = -36
?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase, COMDAT

; 264  :                 {_Nodeptr _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L155995
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	56		 push	 esi
  0001c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 265  :                 _Nodeptr _Y = (_P++)._Mynode();

  0001f	6a 00		 push	 0
  00021	8d 45 d8	 lea	 eax, DWORD PTR $T155991[ebp]
  00024	50		 push	 eax
  00025	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00028	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator++
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Mynode
  00034	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax

; 266  :                 _Nodeptr _Z = _Y;

  00037	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0003a	89 4d e4	 mov	 DWORD PTR __Z$[ebp], ecx

; 267  :                 _Lockit _Lk;

  0003d	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  :                 if (_Left(_Y) == _Nil)

  0004d	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00056	83 c4 04	 add	 esp, 4
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00061	75 13		 jne	 SHORT $L150994

; 269  :                         _X = _Right(_Y);

  00063	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 270  :                 else if (_Right(_Y) == _Nil)

  00074	eb 54		 jmp	 SHORT $L150997
$L150994:
  00076	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  0008a	75 13		 jne	 SHORT $L150996

; 271  :                         _X = _Left(_Y);

  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00095	83 c4 04	 add	 esp, 4
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 272  :                 else

  0009d	eb 2b		 jmp	 SHORT $L150997
$L150996:

; 273  :                         _Y = _Min(_Right(_Y)), _X = _Right(_Y);

  0009f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?_Min@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Min
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  000b9	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L150997:

; 274  :                 if (_Y != _Z)

  000ca	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000cd	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  000d0	0f 84 95 01 00
	00		 je	 $L150998

; 275  :                         {_Parent(_Left(_Z)) = _Y;

  000d6	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  000df	83 c4 04	 add	 esp, 4
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  000ea	83 c4 04	 add	 esp, 4
  000ed	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000f0	89 10		 mov	 DWORD PTR [eax], edx

; 276  :                         _Left(_Y) = _Left(_Z);

  000f2	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  000fb	83 c4 04	 add	 esp, 4
  000fe	8b f0		 mov	 esi, eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00109	83 c4 04	 add	 esp, 4
  0010c	8b 16		 mov	 edx, DWORD PTR [esi]
  0010e	89 10		 mov	 DWORD PTR [eax], edx

; 277  :                         if (_Y == _Right(_Z))

  00110	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00119	83 c4 04	 add	 esp, 4
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0011f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00121	75 13		 jne	 SHORT $L150999

; 278  :                                 _Parent(_X) = _Y;

  00123	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0012c	83 c4 04	 add	 esp, 4
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx

; 279  :                         else

  00134	eb 74		 jmp	 SHORT $L151000
$L150999:

; 280  :                                 {_Parent(_X) = _Parent(_Y);

  00136	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0013f	83 c4 04	 add	 esp, 4
  00142	8b f0		 mov	 esi, eax
  00144	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0014d	83 c4 04	 add	 esp, 4
  00150	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00152	89 08		 mov	 DWORD PTR [eax], ecx

; 281  :                                 _Left(_Parent(_Y)) = _X;

  00154	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00157	52		 push	 edx
  00158	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0015d	83 c4 04	 add	 esp, 4
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00168	83 c4 04	 add	 esp, 4
  0016b	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0016e	89 08		 mov	 DWORD PTR [eax], ecx

; 282  :                                 _Right(_Y) = _Right(_Z);

  00170	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00179	83 c4 04	 add	 esp, 4
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00187	83 c4 04	 add	 esp, 4
  0018a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0018c	89 08		 mov	 DWORD PTR [eax], ecx

; 283  :                                 _Parent(_Right(_Z)) = _Y; }

  0018e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00197	83 c4 04	 add	 esp, 4
  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  001a2	83 c4 04	 add	 esp, 4
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
$L151000:

; 284  :                         if (_Root() == _Z)

  001aa	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  001b2	8b 10		 mov	 edx, DWORD PTR [eax]
  001b4	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  001b7	75 0f		 jne	 SHORT $L151001

; 285  :                                 _Root() = _Y;

  001b9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001c4	89 08		 mov	 DWORD PTR [eax], ecx

; 286  :                         else if (_Left(_Parent(_Z)) == _Z)

  001c6	eb 58		 jmp	 SHORT $L151004
$L151001:
  001c8	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  001d1	83 c4 04	 add	 esp, 4
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  001dc	83 c4 04	 add	 esp, 4
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  001e4	75 1e		 jne	 SHORT $L151003

; 287  :                                 _Left(_Parent(_Z)) = _Y;

  001e6	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001e9	52		 push	 edx
  001ea	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  001ef	83 c4 04	 add	 esp, 4
  001f2	8b 00		 mov	 eax, DWORD PTR [eax]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  001fa	83 c4 04	 add	 esp, 4
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00200	89 08		 mov	 DWORD PTR [eax], ecx

; 288  :                         else

  00202	eb 1c		 jmp	 SHORT $L151004
$L151003:

; 289  :                                 _Right(_Parent(_Z)) = _Y;

  00204	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 00		 mov	 eax, DWORD PTR [eax]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00218	83 c4 04	 add	 esp, 4
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0021e	89 08		 mov	 DWORD PTR [eax], ecx
$L151004:

; 290  :                         _Parent(_Y) = _Parent(_Z);

  00220	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00237	83 c4 04	 add	 esp, 4
  0023a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023c	89 08		 mov	 DWORD PTR [eax], ecx

; 291  :                         std::swap(_Color(_Y), _Color(_Z));

  0023e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00247	83 c4 04	 add	 esp, 4
  0024a	50		 push	 eax
  0024b	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00254	83 c4 04	 add	 esp, 4
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?swap@std@@YAXAAW4_Redbl@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z ; std::swap
  0025d	83 c4 08	 add	 esp, 8

; 292  :                         _Y = _Z; }

  00260	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  00263	89 4d ec	 mov	 DWORD PTR __Y$[ebp], ecx

; 293  :                 else

  00266	e9 4a 01 00 00	 jmp	 $L151022
$L150998:

; 294  :                         {_Parent(_X) = _Parent(_Y);

  0026b	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00274	83 c4 04	 add	 esp, 4
  00277	8b f0		 mov	 esi, eax
  00279	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00282	83 c4 04	 add	 esp, 4
  00285	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00287	89 08		 mov	 DWORD PTR [eax], ecx

; 295  :                         if (_Root() == _Z)

  00289	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  00296	75 0f		 jne	 SHORT $L151011

; 296  :                                 _Root() = _X;

  00298	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 297  :                         else if (_Left(_Parent(_Z)) == _Z)

  002a5	eb 58		 jmp	 SHORT $L151014
$L151011:
  002a7	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002aa	52		 push	 edx
  002ab	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  002b0	83 c4 04	 add	 esp, 4
  002b3	8b 00		 mov	 eax, DWORD PTR [eax]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  002bb	83 c4 04	 add	 esp, 4
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  002c3	75 1e		 jne	 SHORT $L151013

; 298  :                                 _Left(_Parent(_Z)) = _X;

  002c5	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  002ce	83 c4 04	 add	 esp, 4
  002d1	8b 00		 mov	 eax, DWORD PTR [eax]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002df	89 08		 mov	 DWORD PTR [eax], ecx

; 299  :                         else

  002e1	eb 1c		 jmp	 SHORT $L151014
$L151013:

; 300  :                                 _Right(_Parent(_Z)) = _X;

  002e3	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  002ec	83 c4 04	 add	 esp, 4
  002ef	8b 00		 mov	 eax, DWORD PTR [eax]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  002f7	83 c4 04	 add	 esp, 4
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	89 08		 mov	 DWORD PTR [eax], ecx
$L151014:

; 301  :                         if (_Lmost() != _Z)

  002ff	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost
  00307	8b 10		 mov	 edx, DWORD PTR [eax]
  00309	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  0030c	74 02		 je	 SHORT $L151015

; 303  :                         else if (_Right(_Z) == _Nil)

  0030e	eb 4a		 jmp	 SHORT $L151018
$L151015:
  00310	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00319	83 c4 04	 add	 esp, 4
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00324	75 1c		 jne	 SHORT $L151017

; 304  :                                 _Lmost() = _Parent(_Z);

  00326	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0032f	83 c4 04	 add	 esp, 4
  00332	8b f0		 mov	 esi, eax
  00334	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost
  0033c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0033e	89 08		 mov	 DWORD PTR [eax], ecx

; 305  :                         else

  00340	eb 18		 jmp	 SHORT $L151018
$L151017:

; 306  :                                 _Lmost() = _Min(_X);

  00342	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00345	52		 push	 edx
  00346	e8 00 00 00 00	 call	 ?_Min@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Min
  0034b	83 c4 04	 add	 esp, 4
  0034e	8b f0		 mov	 esi, eax
  00350	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost
  00358	89 30		 mov	 DWORD PTR [eax], esi
$L151018:

; 307  :                         if (_Rmost() != _Z)

  0035a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	3b 45 e4	 cmp	 eax, DWORD PTR __Z$[ebp]
  00367	74 02		 je	 SHORT $L151019

; 309  :                         else if (_Left(_Z) == _Nil)

  00369	eb 4a		 jmp	 SHORT $L151022
$L151019:
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00374	83 c4 04	 add	 esp, 4
  00377	8b 10		 mov	 edx, DWORD PTR [eax]
  00379	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  0037f	75 1c		 jne	 SHORT $L151021

; 310  :                                 _Rmost() = _Parent(_Z);

  00381	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0038a	83 c4 04	 add	 esp, 4
  0038d	8b f0		 mov	 esi, eax
  0038f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost
  00397	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00399	89 08		 mov	 DWORD PTR [eax], ecx

; 311  :                         else

  0039b	eb 18		 jmp	 SHORT $L151022
$L151021:

; 312  :                                 _Rmost() = _Max(_X); }

  0039d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?_Max@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Max
  003a6	83 c4 04	 add	 esp, 4
  003a9	8b f0		 mov	 esi, eax
  003ab	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ae	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost
  003b3	89 30		 mov	 DWORD PTR [eax], esi
$L151022:

; 313  :                 if (_Color(_Y) == _Black)

  003b5	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  003be	83 c4 04	 add	 esp, 4
  003c1	83 38 01	 cmp	 DWORD PTR [eax], 1
  003c4	0f 85 25 04 00
	00		 jne	 $L151023
$L151025:

; 314  :                         {while (_X != _Root() && _Color(_X) == _Black)

  003ca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  003d2	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  003d5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d7	0f 84 00 04 00
	00		 je	 $L151026
  003dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  003e6	83 c4 04	 add	 esp, 4
  003e9	83 38 01	 cmp	 DWORD PTR [eax], 1
  003ec	0f 85 eb 03 00
	00		 jne	 $L151026

; 315  :                                 if (_X == _Left(_Parent(_X)))

  003f2	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  003fb	83 c4 04	 add	 esp, 4
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	51		 push	 ecx
  00401	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00406	83 c4 04	 add	 esp, 4
  00409	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0040c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0040e	0f 85 e6 01 00
	00		 jne	 $L151027

; 316  :                                         {_Nodeptr _W = _Right(_Parent(_X));

  00414	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0041d	83 c4 04	 add	 esp, 4
  00420	8b 08		 mov	 ecx, DWORD PTR [eax]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 10		 mov	 edx, DWORD PTR [eax]
  0042d	89 55 e0	 mov	 DWORD PTR __W$151028[ebp], edx

; 317  :                                         if (_Color(_W) == _Red)

  00430	8b 45 e0	 mov	 eax, DWORD PTR __W$151028[ebp]
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0043f	75 62		 jne	 SHORT $L151029

; 318  :                                                 {_Color(_W) = _Black;

  00441	8b 4d e0	 mov	 ecx, DWORD PTR __W$151028[ebp]
  00444	51		 push	 ecx
  00445	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  0044a	83 c4 04	 add	 esp, 4
  0044d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 319  :                                                 _Color(_Parent(_X)) = _Red;

  00453	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0045c	83 c4 04	 add	 esp, 4
  0045f	8b 00		 mov	 eax, DWORD PTR [eax]
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00467	83 c4 04	 add	 esp, 4
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 320  :                                                 _Lrotate(_Parent(_X));

  00470	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00473	51		 push	 ecx
  00474	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00479	83 c4 04	 add	 esp, 4
  0047c	8b 10		 mov	 edx, DWORD PTR [eax]
  0047e	52		 push	 edx
  0047f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lrotate

; 321  :                                                 _W = _Right(_Parent(_X)); }

  00487	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00490	83 c4 04	 add	 esp, 4
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	51		 push	 ecx
  00496	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0049b	83 c4 04	 add	 esp, 4
  0049e	8b 10		 mov	 edx, DWORD PTR [eax]
  004a0	89 55 e0	 mov	 DWORD PTR __W$151028[ebp], edx
$L151029:

; 323  :                                                 && _Color(_Right(_W)) == _Black)

  004a3	8b 45 e0	 mov	 eax, DWORD PTR __W$151028[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  004ac	83 c4 04	 add	 esp, 4
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  004b7	83 c4 04	 add	 esp, 4
  004ba	83 38 01	 cmp	 DWORD PTR [eax], 1
  004bd	75 44		 jne	 SHORT $L151030
  004bf	8b 55 e0	 mov	 edx, DWORD PTR __W$151028[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  004c8	83 c4 04	 add	 esp, 4
  004cb	8b 00		 mov	 eax, DWORD PTR [eax]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  004d3	83 c4 04	 add	 esp, 4
  004d6	83 38 01	 cmp	 DWORD PTR [eax], 1
  004d9	75 28		 jne	 SHORT $L151030

; 324  :                                                 {_Color(_W) = _Red;

  004db	8b 4d e0	 mov	 ecx, DWORD PTR __W$151028[ebp]
  004de	51		 push	 ecx
  004df	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  004e4	83 c4 04	 add	 esp, 4
  004e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  :                                                 _X = _Parent(_X); }

  004ed	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  004f0	52		 push	 edx
  004f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  004f6	83 c4 04	 add	 esp, 4
  004f9	8b 00		 mov	 eax, DWORD PTR [eax]
  004fb	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 326  :                                         else

  004fe	e9 f2 00 00 00	 jmp	 $L151031
$L151030:

; 327  :                                                 {if (_Color(_Right(_W)) == _Black)

  00503	8b 4d e0	 mov	 ecx, DWORD PTR __W$151028[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0050c	83 c4 04	 add	 esp, 4
  0050f	8b 10		 mov	 edx, DWORD PTR [eax]
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00517	83 c4 04	 add	 esp, 4
  0051a	83 38 01	 cmp	 DWORD PTR [eax], 1
  0051d	75 57		 jne	 SHORT $L151032

; 328  :                                                         {_Color(_Left(_W)) = _Black;

  0051f	8b 45 e0	 mov	 eax, DWORD PTR __W$151028[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00528	83 c4 04	 add	 esp, 4
  0052b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052d	51		 push	 ecx
  0052e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00533	83 c4 04	 add	 esp, 4
  00536	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 329  :                                                         _Color(_W) = _Red;

  0053c	8b 55 e0	 mov	 edx, DWORD PTR __W$151028[ebp]
  0053f	52		 push	 edx
  00540	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00545	83 c4 04	 add	 esp, 4
  00548	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 330  :                                                         _Rrotate(_W);

  0054e	8b 45 e0	 mov	 eax, DWORD PTR __W$151028[ebp]
  00551	50		 push	 eax
  00552	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rrotate

; 331  :                                                         _W = _Right(_Parent(_X)); }

  0055a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0055d	51		 push	 ecx
  0055e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00563	83 c4 04	 add	 esp, 4
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	52		 push	 edx
  00569	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0056e	83 c4 04	 add	 esp, 4
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	89 45 e0	 mov	 DWORD PTR __W$151028[ebp], eax
$L151032:

; 332  :                                                 _Color(_W) = _Color(_Parent(_X));

  00576	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0057f	83 c4 04	 add	 esp, 4
  00582	8b 10		 mov	 edx, DWORD PTR [eax]
  00584	52		 push	 edx
  00585	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  0058a	83 c4 04	 add	 esp, 4
  0058d	8b f0		 mov	 esi, eax
  0058f	8b 45 e0	 mov	 eax, DWORD PTR __W$151028[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0059d	89 08		 mov	 DWORD PTR [eax], ecx

; 333  :                                                 _Color(_Parent(_X)) = _Black;

  0059f	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005a2	52		 push	 edx
  005a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  005a8	83 c4 04	 add	 esp, 4
  005ab	8b 00		 mov	 eax, DWORD PTR [eax]
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  005b3	83 c4 04	 add	 esp, 4
  005b6	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 334  :                                                 _Color(_Right(_W)) = _Black;

  005bc	8b 4d e0	 mov	 ecx, DWORD PTR __W$151028[ebp]
  005bf	51		 push	 ecx
  005c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  005c5	83 c4 04	 add	 esp, 4
  005c8	8b 10		 mov	 edx, DWORD PTR [eax]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 335  :                                                 _Lrotate(_Parent(_X));

  005d9	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	51		 push	 ecx
  005e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lrotate

; 336  :                                                 break; }}

  005f0	e9 e8 01 00 00	 jmp	 $L151026
$L151031:

; 337  :                                 else

  005f5	e9 de 01 00 00	 jmp	 $L151037
$L151027:

; 338  :                                         {_Nodeptr _W = _Left(_Parent(_X));

  005fa	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005fd	52		 push	 edx
  005fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00603	83 c4 04	 add	 esp, 4
  00606	8b 00		 mov	 eax, DWORD PTR [eax]
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  0060e	83 c4 04	 add	 esp, 4
  00611	8b 08		 mov	 ecx, DWORD PTR [eax]
  00613	89 4d dc	 mov	 DWORD PTR __W$151034[ebp], ecx

; 339  :                                         if (_Color(_W) == _Red)

  00616	8b 55 dc	 mov	 edx, DWORD PTR __W$151034[ebp]
  00619	52		 push	 edx
  0061a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  0061f	83 c4 04	 add	 esp, 4
  00622	83 38 00	 cmp	 DWORD PTR [eax], 0
  00625	75 62		 jne	 SHORT $L151035

; 340  :                                                 {_Color(_W) = _Black;

  00627	8b 45 dc	 mov	 eax, DWORD PTR __W$151034[ebp]
  0062a	50		 push	 eax
  0062b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00630	83 c4 04	 add	 esp, 4
  00633	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 341  :                                                 _Color(_Parent(_X)) = _Red;

  00639	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0063c	51		 push	 ecx
  0063d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00642	83 c4 04	 add	 esp, 4
  00645	8b 10		 mov	 edx, DWORD PTR [eax]
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  0064d	83 c4 04	 add	 esp, 4
  00650	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 342  :                                                 _Rrotate(_Parent(_X));

  00656	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00659	50		 push	 eax
  0065a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0065f	83 c4 04	 add	 esp, 4
  00662	8b 08		 mov	 ecx, DWORD PTR [eax]
  00664	51		 push	 ecx
  00665	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rrotate

; 343  :                                                 _W = _Left(_Parent(_X)); }

  0066d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00670	52		 push	 edx
  00671	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00676	83 c4 04	 add	 esp, 4
  00679	8b 00		 mov	 eax, DWORD PTR [eax]
  0067b	50		 push	 eax
  0067c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00681	83 c4 04	 add	 esp, 4
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 4d dc	 mov	 DWORD PTR __W$151034[ebp], ecx
$L151035:

; 345  :                                                 && _Color(_Left(_W)) == _Black)

  00689	8b 55 dc	 mov	 edx, DWORD PTR __W$151034[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00692	83 c4 04	 add	 esp, 4
  00695	8b 00		 mov	 eax, DWORD PTR [eax]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  0069d	83 c4 04	 add	 esp, 4
  006a0	83 38 01	 cmp	 DWORD PTR [eax], 1
  006a3	75 44		 jne	 SHORT $L151036
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR __W$151034[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  006ae	83 c4 04	 add	 esp, 4
  006b1	8b 10		 mov	 edx, DWORD PTR [eax]
  006b3	52		 push	 edx
  006b4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  006b9	83 c4 04	 add	 esp, 4
  006bc	83 38 01	 cmp	 DWORD PTR [eax], 1
  006bf	75 28		 jne	 SHORT $L151036

; 346  :                                                 {_Color(_W) = _Red;

  006c1	8b 45 dc	 mov	 eax, DWORD PTR __W$151034[ebp]
  006c4	50		 push	 eax
  006c5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  006ca	83 c4 04	 add	 esp, 4
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 347  :                                                 _X = _Parent(_X); }

  006d3	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  006d6	51		 push	 ecx
  006d7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  006dc	83 c4 04	 add	 esp, 4
  006df	8b 10		 mov	 edx, DWORD PTR [eax]
  006e1	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 348  :                                         else

  006e4	e9 ef 00 00 00	 jmp	 $L151037
$L151036:

; 349  :                                                 {if (_Color(_Left(_W)) == _Black)

  006e9	8b 45 dc	 mov	 eax, DWORD PTR __W$151034[ebp]
  006ec	50		 push	 eax
  006ed	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  006f2	83 c4 04	 add	 esp, 4
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  006fd	83 c4 04	 add	 esp, 4
  00700	83 38 01	 cmp	 DWORD PTR [eax], 1
  00703	75 57		 jne	 SHORT $L151038

; 350  :                                                         {_Color(_Right(_W)) = _Black;

  00705	8b 55 dc	 mov	 edx, DWORD PTR __W$151034[ebp]
  00708	52		 push	 edx
  00709	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0070e	83 c4 04	 add	 esp, 4
  00711	8b 00		 mov	 eax, DWORD PTR [eax]
  00713	50		 push	 eax
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 351  :                                                         _Color(_W) = _Red;

  00722	8b 4d dc	 mov	 ecx, DWORD PTR __W$151034[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  0072b	83 c4 04	 add	 esp, 4
  0072e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 352  :                                                         _Lrotate(_W);

  00734	8b 55 dc	 mov	 edx, DWORD PTR __W$151034[ebp]
  00737	52		 push	 edx
  00738	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lrotate

; 353  :                                                         _W = _Left(_Parent(_X)); }

  00740	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00749	83 c4 04	 add	 esp, 4
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	51		 push	 ecx
  0074f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00754	83 c4 04	 add	 esp, 4
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	89 55 dc	 mov	 DWORD PTR __W$151034[ebp], edx
$L151038:

; 354  :                                                 _Color(_W) = _Color(_Parent(_X));

  0075c	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00765	83 c4 04	 add	 esp, 4
  00768	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00770	83 c4 04	 add	 esp, 4
  00773	8b f0		 mov	 esi, eax
  00775	8b 55 dc	 mov	 edx, DWORD PTR __W$151034[ebp]
  00778	52		 push	 edx
  00779	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  0077e	83 c4 04	 add	 esp, 4
  00781	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00783	89 08		 mov	 DWORD PTR [eax], ecx

; 355  :                                                 _Color(_Parent(_X)) = _Black;

  00785	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0078e	83 c4 04	 add	 esp, 4
  00791	8b 00		 mov	 eax, DWORD PTR [eax]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00799	83 c4 04	 add	 esp, 4
  0079c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 356  :                                                 _Color(_Left(_W)) = _Black;

  007a2	8b 4d dc	 mov	 ecx, DWORD PTR __W$151034[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  007ab	83 c4 04	 add	 esp, 4
  007ae	8b 10		 mov	 edx, DWORD PTR [eax]
  007b0	52		 push	 edx
  007b1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  007b6	83 c4 04	 add	 esp, 4
  007b9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 357  :                                                 _Rrotate(_Parent(_X));

  007bf	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  007c8	83 c4 04	 add	 esp, 4
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	51		 push	 ecx
  007ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rrotate

; 358  :                                                 break; }}

  007d6	eb 05		 jmp	 SHORT $L151026
$L151037:
  007d8	e9 ed fb ff ff	 jmp	 $L151025
$L151026:

; 359  :                         _Color(_X) = _Black; }

  007dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  007e0	52		 push	 edx
  007e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  007e6	83 c4 04	 add	 esp, 4
  007e9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L151023:

; 360  :                 _Destval(&_Value(_Y));

  007ef	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?_Value@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Value
  007f8	83 c4 04	 add	 esp, 4
  007fb	50		 push	 eax
  007fc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Destval

; 361  :                 _Freenode(_Y);

  00804	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00807	51		 push	 ecx
  00808	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Freenode

; 362  :                 --_Size;

  00810	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00813	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00816	83 e8 01	 sub	 eax, 1
  00819	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 363  :                 return (_P); }

  0081f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00822	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00825	89 02		 mov	 DWORD PTR [edx], eax
  00827	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0082e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00831	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00837	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0083a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0083d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00844	5e		 pop	 esi
  00845	8b e5		 mov	 esp, ebp
  00847	5d		 pop	 ebp
  00848	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155992:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L155995:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155994
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::erase
PUBLIC	?_Lbound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lbound
;	COMDAT ?lower_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z
_TEXT	SEGMENT
__Kv$ = 12
$T156000 = -4
___$ReturnUdt$ = 8
_this$ = -8
?lower_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::lower_bound, COMDAT

; 402  :                 {return (iterator(_Lbound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lbound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T156000[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?lower_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::lower_bound
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::upper_bound
PUBLIC	??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator>
;	COMDAT ?equal_range@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@2@ABQAUHWND__@@@Z
_TEXT	SEGMENT
__Kv$ = 12
$T156002 = -8
$T156003 = -12
$T156004 = -16
___$ReturnUdt$ = 8
_this$ = -20
?equal_range@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@2@ABQAUHWND__@@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::equal_range, COMDAT

; 410  :                 {return (_Pairii(lower_bound(_Kv), upper_bound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f4	 lea	 ecx, DWORD PTR $T156003[ebp]
  00010	51		 push	 ecx
  00011	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?upper_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::upper_bound
  00019	50		 push	 eax
  0001a	8b 55 0c	 mov	 edx, DWORD PTR __Kv$[ebp]
  0001d	52		 push	 edx
  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T156004[ebp]
  00021	50		 push	 eax
  00022	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::lower_bound
  0002a	50		 push	 eax
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR $T156002[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator>
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	89 08		 mov	 DWORD PTR [eax], ecx
  0003d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00040	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?equal_range@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@2@ABQAUHWND__@@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::equal_range
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156008 DD	019930520H
	DD	01H
	DD	FLAT:$T156010
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156010 DD	0ffffffffH
	DD	FLAT:$L156006
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
?_Erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Erase, COMDAT

; 449  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156009
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 450  :                 for (_Nodeptr _Y = _X; _Y != _Nil; _X = _Y)

  0002e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax
  00034	eb 06		 jmp	 SHORT $L151057
$L151058:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00039	89 4d 08	 mov	 DWORD PTR __X$[ebp], ecx
$L151057:
  0003c	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  0003f	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00045	74 4b		 je	 SHORT $L151059

; 451  :                         {_Erase(_Right(_Y));

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Erase

; 452  :                         _Y = _Left(_Y);

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax

; 453  :                         _Destval(&_Value(_X));

  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Value@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Value
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Destval

; 454  :                         _Freenode(_X); }}

  00084	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00087	52		 push	 edx
  00088	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Freenode
  00090	eb a4		 jmp	 SHORT $L151058
$L151059:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156006:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156009:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156008
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Erase@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Erase
PUBLIC	?_Buynode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Buynode
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156016 DD	019930520H
	DD	01H
	DD	FLAT:$T156018
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156018 DD	0ffffffffH
	DD	FLAT:$L156014
xdata$x	ENDS
;	COMDAT ?_Init@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -20
__Lk$ = -16
?_Init@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXXZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Init, COMDAT

; 456  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156017
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :                 if (_Nil == 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00035	75 3a		 jne	 SHORT $L151063

; 458  :                         {_Nil = _Buynode(0, _Black);

  00037	6a 01		 push	 1
  00039	6a 00		 push	 0
  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Buynode
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A, eax ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil

; 459  :                         _Left(_Nil) = 0, _Right(_Nil) = 0; }

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00068	83 c4 04	 add	 esp, 4
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L151063:

; 460  :                 ++_Nilrefs;

  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nilrefs@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1IA ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nilrefs
  00077	83 c2 01	 add	 edx, 1
  0007a	89 15 00 00 00
	00		 mov	 DWORD PTR ?_Nilrefs@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1IA, edx ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nilrefs

; 461  :                 _Head = _Buynode(_Nil, _Red), _Size = 0;

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Buynode
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00096	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00099	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 462  :                 _Lmost() = _Head, _Rmost() = _Head; }

  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	89 10		 mov	 DWORD PTR [eax], edx
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost
  000b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	89 10		 mov	 DWORD PTR [eax], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156014:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156017:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156016
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Init@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXXZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Init
;	COMDAT ?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost, COMDAT

; 524  :                 {return (_Left(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost, COMDAT

; 553  :                 {return (_Right(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root, COMDAT

; 557  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Mynode, COMDAT

; 114  :                         {return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBEPAU_Node@23@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::iterator, COMDAT

; 124  :                 iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator++
;	COMDAT ??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Tmp$ = -4
??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator++, COMDAT

; 134  :                         {iterator _Tmp = *this;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 135  :                         ++*this;

  00011	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator++

; 136  :                         return (_Tmp); }

  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator++
_TEXT	ENDS
;	COMDAT ??9iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??9iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator!=, COMDAT

; 147  :                         {return (!(*this == _X)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator==
  00013	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00018	f7 d8		 neg	 eax
  0001a	1b c0		 sbb	 eax, eax
  0001c	40		 inc	 eax
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??9iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator!=
_TEXT	ENDS
EXTRN	??M@YA_NABVCSkinObj@@0@Z:NEAR			; operator<
;	COMDAT ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
_this$ = -4
??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z PROC NEAR ; std::less<CSkinObj>::operator(), COMDAT

; 86   : 		{return (_X < _Y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??M@YA_NABVCSkinObj@@0@Z ; operator<
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ENDP	; std::less<CSkinObj>::operator()
_TEXT	ENDS
PUBLIC	?_Allocate@std@@YAPADHPAD@Z			; std::_Allocate
;	COMDAT ?_Charalloc@?$allocator@PAVCSkinCtrl@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4
__N$ = 8
?_Charalloc@?$allocator@PAVCSkinCtrl@@@std@@QAEPADI@Z PROC NEAR ; std::allocator<CSkinCtrl *>::_Charalloc, COMDAT

; 61   : 		{return (_Allocate((difference_type)_N,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 			(char _FARQ *)0)); }

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPADHPAD@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Charalloc@?$allocator@PAVCSkinCtrl@@@std@@QAEPADI@Z ENDP ; std::allocator<CSkinCtrl *>::_Charalloc
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?deallocate@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAXI@Z PROC NEAR ; std::allocator<CSkinCtrl *>::deallocate, COMDAT

; 64   : 		{operator delete(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAXI@Z ENDP ; std::allocator<CSkinCtrl *>::deallocate
_TEXT	ENDS
PUBLIC	?_Construct@std@@YAXPAPAVCSkinCtrl@@ABQAV2@@Z	; std::_Construct
;	COMDAT ?construct@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?construct@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@ABQAV3@@Z PROC NEAR ; std::allocator<CSkinCtrl *>::construct, COMDAT

; 66   : 		{_Construct(_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAPAVCSkinCtrl@@ABQAV2@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?construct@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@ABQAV3@@Z ENDP ; std::allocator<CSkinCtrl *>::construct
_TEXT	ENDS
PUBLIC	??R_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
;	COMDAT ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z
_TEXT	SEGMENT
$T156033 = -4
__P$ = 8
?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Key, COMDAT

; 38   :                 {return (_Kfn()(_Value(_P))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Value
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T156033[ebp]
  00014	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Key
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4
?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::size, COMDAT

; 206  :                 {return (_Size); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?size@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEIXZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::size
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
PUBLIC	?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
PUBLIC	??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator--
PUBLIC	?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Insert
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156055 DD	019930520H
	DD	01H
	DD	FLAT:$T156057
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156057 DD	0ffffffffH
	DD	FLAT:$L156053
xdata$x	ENDS
;	COMDAT ?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z
_TEXT	SEGMENT
$T156036 = -36
$T156039 = -44
$T156040 = -48
$T156041 = -52
$T156042 = -56
$T156043 = -60
$T156044 = -68
$T156045 = -72
$T156046 = -76
$T156047 = -80
$T156048 = -88
$T156049 = -92
$T156050 = -96
$T156051 = -104
$T156052 = -108
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -112
__X$ = -24
__Y$ = -28
__Ans$ = -20
_Lk$151111 = -32
__P$ = -16
__V$ = 12
?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::insert, COMDAT

; 216  :                 {_Nodeptr _X = _Root();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156056
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 68	 sub	 esp, 104		; 00000068H
  0001b	89 4d 90	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax

; 217  :                 _Nodeptr _Y = _Head;

  0002b	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00031	89 55 e4	 mov	 DWORD PTR __Y$[ebp], edx

; 218  :                 bool _Ans = true;

  00034	c6 45 ec 01	 mov	 BYTE PTR __Ans$[ebp], 1

; 219  :                 { _Lockit Lk;

  00038	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$151111[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L151113:

; 220  :                         while (_X != _Nil)

  00048	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  0004b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00051	74 67		 je	 SHORT $L151114

; 221  :                                 {_Y = _X;

  00053	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  00056	89 4d e4	 mov	 DWORD PTR __Y$[ebp], ecx

; 222  :                                 _Ans = key_compare(_Kfn()(_V), _Key(_X));

  00059	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  0005c	52		 push	 edx
  0005d	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Key
  00062	83 c4 04	 add	 esp, 4
  00065	50		 push	 eax
  00066	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  00069	50		 push	 eax
  0006a	8d 4d dc	 lea	 ecx, DWORD PTR $T156036[ebp]
  0006d	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
  00072	50		 push	 eax
  00073	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 01	 add	 ecx, 1
  00079	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  0007e	88 45 ec	 mov	 BYTE PTR __Ans$[ebp], al

; 223  :                                 _X = _Ans ? _Left(_X) : _Right(_X); }

  00081	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	85 c9		 test	 ecx, ecx
  0008c	74 13		 je	 SHORT $L156037
  0008e	8b 55 e8	 mov	 edx, DWORD PTR __X$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 00		 mov	 eax, DWORD PTR [eax]
  0009c	89 45 8c	 mov	 DWORD PTR -116+[ebp], eax
  0009f	eb 11		 jmp	 SHORT $L156038
$L156037:
  000a1	8b 4d e8	 mov	 ecx, DWORD PTR __X$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  000aa	83 c4 04	 add	 esp, 4
  000ad	8b 10		 mov	 edx, DWORD PTR [eax]
  000af	89 55 8c	 mov	 DWORD PTR -116+[ebp], edx
$L156038:
  000b2	8b 45 8c	 mov	 eax, DWORD PTR -116+[ebp]
  000b5	89 45 e8	 mov	 DWORD PTR __X$[ebp], eax
  000b8	eb 8e		 jmp	 SHORT $L151113
$L151114:

; 224  :                 }

  000ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c1	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$151111[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 225  :                 if (_Multi)

  000ca	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	33 d2		 xor	 edx, edx
  000cf	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  000d2	85 d2		 test	 edx, edx
  000d4	74 3e		 je	 SHORT $L151116

; 226  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  000d6	c6 45 d0 01	 mov	 BYTE PTR $T156040[ebp], 1
  000da	8d 45 d0	 lea	 eax, DWORD PTR $T156040[ebp]
  000dd	50		 push	 eax
  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  000e1	51		 push	 ecx
  000e2	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  000e5	52		 push	 edx
  000e6	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d cc	 lea	 ecx, DWORD PTR $T156041[ebp]
  000ed	51		 push	 ecx
  000ee	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Insert
  000f6	50		 push	 eax
  000f7	8d 4d d4	 lea	 ecx, DWORD PTR $T156039[ebp]
  000fa	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00104	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00107	89 11		 mov	 DWORD PTR [ecx], edx
  00109	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0010c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0010f	e9 16 01 00 00	 jmp	 $L151107
$L151116:

; 227  :                 iterator _P = iterator(_Y);

  00114	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00117	52		 push	 edx
  00118	8d 4d c8	 lea	 ecx, DWORD PTR $T156042[ebp]
  0011b	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::iterator
  00120	8b 00		 mov	 eax, DWORD PTR [eax]
  00122	89 45 f0	 mov	 DWORD PTR __P$[ebp], eax

; 228  :                 if (!_Ans)

  00125	8b 4d ec	 mov	 ecx, DWORD PTR __Ans$[ebp]
  00128	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0012e	85 c9		 test	 ecx, ecx
  00130	75 02		 jne	 SHORT $L151126

; 230  :                 else if (_P == begin())

  00132	eb 64		 jmp	 SHORT $L151137
$L151126:
  00134	8d 55 c4	 lea	 edx, DWORD PTR $T156043[ebp]
  00137	52		 push	 edx
  00138	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	e8 00 00 00 00	 call	 ?begin@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::begin
  00140	50		 push	 eax
  00141	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00144	e8 00 00 00 00	 call	 ??8iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator==
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	85 c0		 test	 eax, eax
  00150	74 3e		 je	 SHORT $L151129

; 231  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  00152	c6 45 b8 01	 mov	 BYTE PTR $T156045[ebp], 1
  00156	8d 45 b8	 lea	 eax, DWORD PTR $T156045[ebp]
  00159	50		 push	 eax
  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0015d	51		 push	 ecx
  0015e	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  00161	52		 push	 edx
  00162	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  00165	50		 push	 eax
  00166	8d 4d b4	 lea	 ecx, DWORD PTR $T156046[ebp]
  00169	51		 push	 ecx
  0016a	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Insert
  00172	50		 push	 eax
  00173	8d 4d bc	 lea	 ecx, DWORD PTR $T156044[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>
  0017b	8b 10		 mov	 edx, DWORD PTR [eax]
  0017d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00180	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00183	89 11		 mov	 DWORD PTR [ecx], edx
  00185	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00188	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0018b	e9 9a 00 00 00	 jmp	 $L151107
$L151129:

; 233  :                         --_P;

  00190	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  00193	e8 00 00 00 00	 call	 ??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator--
$L151137:

; 234  :                 if (key_compare(_Key(_P._Mynode()), _Kfn()(_V)))

  00198	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  0019b	52		 push	 edx
  0019c	8d 4d b0	 lea	 ecx, DWORD PTR $T156047[ebp]
  0019f	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
  001a4	50		 push	 eax
  001a5	8d 4d f0	 lea	 ecx, DWORD PTR __P$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Key
  001b3	83 c4 04	 add	 esp, 4
  001b6	50		 push	 eax
  001b7	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 01	 add	 ecx, 1
  001bd	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  001c2	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c7	85 c0		 test	 eax, eax
  001c9	74 3b		 je	 SHORT $L151139

; 235  :                         return (_Pairib(_Insert(_X, _Y, _V), true));

  001cb	c6 45 a4 01	 mov	 BYTE PTR $T156049[ebp], 1
  001cf	8d 45 a4	 lea	 eax, DWORD PTR $T156049[ebp]
  001d2	50		 push	 eax
  001d3	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  001d6	51		 push	 ecx
  001d7	8b 55 e4	 mov	 edx, DWORD PTR __Y$[ebp]
  001da	52		 push	 edx
  001db	8b 45 e8	 mov	 eax, DWORD PTR __X$[ebp]
  001de	50		 push	 eax
  001df	8d 4d a0	 lea	 ecx, DWORD PTR $T156050[ebp]
  001e2	51		 push	 ecx
  001e3	8b 4d 90	 mov	 ecx, DWORD PTR _this$[ebp]
  001e6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Insert
  001eb	50		 push	 eax
  001ec	8d 4d a8	 lea	 ecx, DWORD PTR $T156048[ebp]
  001ef	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>
  001f4	8b 10		 mov	 edx, DWORD PTR [eax]
  001f6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001fc	89 11		 mov	 DWORD PTR [ecx], edx
  001fe	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00201	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00204	eb 24		 jmp	 SHORT $L151107
$L151139:

; 236  :                 return (_Pairib(_P, false)); }

  00206	c6 45 94 00	 mov	 BYTE PTR $T156052[ebp], 0
  0020a	8d 55 94	 lea	 edx, DWORD PTR $T156052[ebp]
  0020d	52		 push	 edx
  0020e	8d 45 f0	 lea	 eax, DWORD PTR __P$[ebp]
  00211	50		 push	 eax
  00212	8d 4d 98	 lea	 ecx, DWORD PTR $T156051[ebp]
  00215	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@AB_N@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0021f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00222	89 08		 mov	 DWORD PTR [eax], ecx
  00224	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00227	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L151107:
  0022a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0022d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156053:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _Lk$151111[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156056:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156055
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@2@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::insert
PUBLIC	?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
PUBLIC	?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z ; std::swap
PUBLIC	?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
PUBLIC	?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lrotate
PUBLIC	?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Max
PUBLIC	?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Min
PUBLIC	?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rrotate
PUBLIC	?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Destval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156064 DD	019930520H
	DD	01H
	DD	FLAT:$T156066
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156066 DD	0ffffffffH
	DD	FLAT:$L156062
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
$T156061 = -40
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -44
__X$ = -16
__Y$ = -20
__Z$ = -28
__Lk$ = -24
__W$151195 = -32
__W$151201 = -36
__P$ = 12
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase, COMDAT

; 264  :                 {_Nodeptr _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156065
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	56		 push	 esi
  0001c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 265  :                 _Nodeptr _Y = (_P++)._Mynode();

  0001f	6a 00		 push	 0
  00021	8d 45 d8	 lea	 eax, DWORD PTR $T156061[ebp]
  00024	50		 push	 eax
  00025	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00028	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
  00034	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax

; 266  :                 _Nodeptr _Z = _Y;

  00037	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0003a	89 4d e4	 mov	 DWORD PTR __Z$[ebp], ecx

; 267  :                 _Lockit _Lk;

  0003d	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  :                 if (_Left(_Y) == _Nil)

  0004d	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00056	83 c4 04	 add	 esp, 4
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00061	75 13		 jne	 SHORT $L151161

; 269  :                         _X = _Right(_Y);

  00063	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 270  :                 else if (_Right(_Y) == _Nil)

  00074	eb 54		 jmp	 SHORT $L151164
$L151161:
  00076	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  0008a	75 13		 jne	 SHORT $L151163

; 271  :                         _X = _Left(_Y);

  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00095	83 c4 04	 add	 esp, 4
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 272  :                 else

  0009d	eb 2b		 jmp	 SHORT $L151164
$L151163:

; 273  :                         _Y = _Min(_Right(_Y)), _X = _Right(_Y);

  0009f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Min
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  000b9	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L151164:

; 274  :                 if (_Y != _Z)

  000ca	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000cd	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  000d0	0f 84 95 01 00
	00		 je	 $L151165

; 275  :                         {_Parent(_Left(_Z)) = _Y;

  000d6	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  000df	83 c4 04	 add	 esp, 4
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  000ea	83 c4 04	 add	 esp, 4
  000ed	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000f0	89 10		 mov	 DWORD PTR [eax], edx

; 276  :                         _Left(_Y) = _Left(_Z);

  000f2	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  000fb	83 c4 04	 add	 esp, 4
  000fe	8b f0		 mov	 esi, eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00109	83 c4 04	 add	 esp, 4
  0010c	8b 16		 mov	 edx, DWORD PTR [esi]
  0010e	89 10		 mov	 DWORD PTR [eax], edx

; 277  :                         if (_Y == _Right(_Z))

  00110	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00119	83 c4 04	 add	 esp, 4
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0011f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00121	75 13		 jne	 SHORT $L151166

; 278  :                                 _Parent(_X) = _Y;

  00123	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0012c	83 c4 04	 add	 esp, 4
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx

; 279  :                         else

  00134	eb 74		 jmp	 SHORT $L151167
$L151166:

; 280  :                                 {_Parent(_X) = _Parent(_Y);

  00136	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0013f	83 c4 04	 add	 esp, 4
  00142	8b f0		 mov	 esi, eax
  00144	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0014d	83 c4 04	 add	 esp, 4
  00150	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00152	89 08		 mov	 DWORD PTR [eax], ecx

; 281  :                                 _Left(_Parent(_Y)) = _X;

  00154	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00157	52		 push	 edx
  00158	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0015d	83 c4 04	 add	 esp, 4
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00168	83 c4 04	 add	 esp, 4
  0016b	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0016e	89 08		 mov	 DWORD PTR [eax], ecx

; 282  :                                 _Right(_Y) = _Right(_Z);

  00170	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00179	83 c4 04	 add	 esp, 4
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00187	83 c4 04	 add	 esp, 4
  0018a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0018c	89 08		 mov	 DWORD PTR [eax], ecx

; 283  :                                 _Parent(_Right(_Z)) = _Y; }

  0018e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00197	83 c4 04	 add	 esp, 4
  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  001a2	83 c4 04	 add	 esp, 4
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
$L151167:

; 284  :                         if (_Root() == _Z)

  001aa	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  001b2	8b 10		 mov	 edx, DWORD PTR [eax]
  001b4	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  001b7	75 0f		 jne	 SHORT $L151168

; 285  :                                 _Root() = _Y;

  001b9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001c4	89 08		 mov	 DWORD PTR [eax], ecx

; 286  :                         else if (_Left(_Parent(_Z)) == _Z)

  001c6	eb 58		 jmp	 SHORT $L151171
$L151168:
  001c8	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  001d1	83 c4 04	 add	 esp, 4
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  001dc	83 c4 04	 add	 esp, 4
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  001e4	75 1e		 jne	 SHORT $L151170

; 287  :                                 _Left(_Parent(_Z)) = _Y;

  001e6	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001e9	52		 push	 edx
  001ea	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  001ef	83 c4 04	 add	 esp, 4
  001f2	8b 00		 mov	 eax, DWORD PTR [eax]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  001fa	83 c4 04	 add	 esp, 4
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00200	89 08		 mov	 DWORD PTR [eax], ecx

; 288  :                         else

  00202	eb 1c		 jmp	 SHORT $L151171
$L151170:

; 289  :                                 _Right(_Parent(_Z)) = _Y;

  00204	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 00		 mov	 eax, DWORD PTR [eax]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00218	83 c4 04	 add	 esp, 4
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0021e	89 08		 mov	 DWORD PTR [eax], ecx
$L151171:

; 290  :                         _Parent(_Y) = _Parent(_Z);

  00220	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00237	83 c4 04	 add	 esp, 4
  0023a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023c	89 08		 mov	 DWORD PTR [eax], ecx

; 291  :                         std::swap(_Color(_Y), _Color(_Z));

  0023e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00247	83 c4 04	 add	 esp, 4
  0024a	50		 push	 eax
  0024b	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00254	83 c4 04	 add	 esp, 4
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z ; std::swap
  0025d	83 c4 08	 add	 esp, 8

; 292  :                         _Y = _Z; }

  00260	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  00263	89 4d ec	 mov	 DWORD PTR __Y$[ebp], ecx

; 293  :                 else

  00266	e9 4a 01 00 00	 jmp	 $L151189
$L151165:

; 294  :                         {_Parent(_X) = _Parent(_Y);

  0026b	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00274	83 c4 04	 add	 esp, 4
  00277	8b f0		 mov	 esi, eax
  00279	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00282	83 c4 04	 add	 esp, 4
  00285	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00287	89 08		 mov	 DWORD PTR [eax], ecx

; 295  :                         if (_Root() == _Z)

  00289	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  00296	75 0f		 jne	 SHORT $L151178

; 296  :                                 _Root() = _X;

  00298	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 297  :                         else if (_Left(_Parent(_Z)) == _Z)

  002a5	eb 58		 jmp	 SHORT $L151181
$L151178:
  002a7	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002aa	52		 push	 edx
  002ab	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  002b0	83 c4 04	 add	 esp, 4
  002b3	8b 00		 mov	 eax, DWORD PTR [eax]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  002bb	83 c4 04	 add	 esp, 4
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  002c3	75 1e		 jne	 SHORT $L151180

; 298  :                                 _Left(_Parent(_Z)) = _X;

  002c5	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  002ce	83 c4 04	 add	 esp, 4
  002d1	8b 00		 mov	 eax, DWORD PTR [eax]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002df	89 08		 mov	 DWORD PTR [eax], ecx

; 299  :                         else

  002e1	eb 1c		 jmp	 SHORT $L151181
$L151180:

; 300  :                                 _Right(_Parent(_Z)) = _X;

  002e3	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  002ec	83 c4 04	 add	 esp, 4
  002ef	8b 00		 mov	 eax, DWORD PTR [eax]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  002f7	83 c4 04	 add	 esp, 4
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	89 08		 mov	 DWORD PTR [eax], ecx
$L151181:

; 301  :                         if (_Lmost() != _Z)

  002ff	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost
  00307	8b 10		 mov	 edx, DWORD PTR [eax]
  00309	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  0030c	74 02		 je	 SHORT $L151182

; 303  :                         else if (_Right(_Z) == _Nil)

  0030e	eb 4a		 jmp	 SHORT $L151185
$L151182:
  00310	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00319	83 c4 04	 add	 esp, 4
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00324	75 1c		 jne	 SHORT $L151184

; 304  :                                 _Lmost() = _Parent(_Z);

  00326	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0032f	83 c4 04	 add	 esp, 4
  00332	8b f0		 mov	 esi, eax
  00334	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost
  0033c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0033e	89 08		 mov	 DWORD PTR [eax], ecx

; 305  :                         else

  00340	eb 18		 jmp	 SHORT $L151185
$L151184:

; 306  :                                 _Lmost() = _Min(_X);

  00342	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00345	52		 push	 edx
  00346	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Min
  0034b	83 c4 04	 add	 esp, 4
  0034e	8b f0		 mov	 esi, eax
  00350	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost
  00358	89 30		 mov	 DWORD PTR [eax], esi
$L151185:

; 307  :                         if (_Rmost() != _Z)

  0035a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	3b 45 e4	 cmp	 eax, DWORD PTR __Z$[ebp]
  00367	74 02		 je	 SHORT $L151186

; 309  :                         else if (_Left(_Z) == _Nil)

  00369	eb 4a		 jmp	 SHORT $L151189
$L151186:
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00374	83 c4 04	 add	 esp, 4
  00377	8b 10		 mov	 edx, DWORD PTR [eax]
  00379	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  0037f	75 1c		 jne	 SHORT $L151188

; 310  :                                 _Rmost() = _Parent(_Z);

  00381	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0038a	83 c4 04	 add	 esp, 4
  0038d	8b f0		 mov	 esi, eax
  0038f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost
  00397	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00399	89 08		 mov	 DWORD PTR [eax], ecx

; 311  :                         else

  0039b	eb 18		 jmp	 SHORT $L151189
$L151188:

; 312  :                                 _Rmost() = _Max(_X); }

  0039d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Max
  003a6	83 c4 04	 add	 esp, 4
  003a9	8b f0		 mov	 esi, eax
  003ab	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ae	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost
  003b3	89 30		 mov	 DWORD PTR [eax], esi
$L151189:

; 313  :                 if (_Color(_Y) == _Black)

  003b5	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  003be	83 c4 04	 add	 esp, 4
  003c1	83 38 01	 cmp	 DWORD PTR [eax], 1
  003c4	0f 85 25 04 00
	00		 jne	 $L151190
$L151192:

; 314  :                         {while (_X != _Root() && _Color(_X) == _Black)

  003ca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  003d2	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  003d5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d7	0f 84 00 04 00
	00		 je	 $L151193
  003dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  003e6	83 c4 04	 add	 esp, 4
  003e9	83 38 01	 cmp	 DWORD PTR [eax], 1
  003ec	0f 85 eb 03 00
	00		 jne	 $L151193

; 315  :                                 if (_X == _Left(_Parent(_X)))

  003f2	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  003fb	83 c4 04	 add	 esp, 4
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	51		 push	 ecx
  00401	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00406	83 c4 04	 add	 esp, 4
  00409	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0040c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0040e	0f 85 e6 01 00
	00		 jne	 $L151194

; 316  :                                         {_Nodeptr _W = _Right(_Parent(_X));

  00414	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0041d	83 c4 04	 add	 esp, 4
  00420	8b 08		 mov	 ecx, DWORD PTR [eax]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 10		 mov	 edx, DWORD PTR [eax]
  0042d	89 55 e0	 mov	 DWORD PTR __W$151195[ebp], edx

; 317  :                                         if (_Color(_W) == _Red)

  00430	8b 45 e0	 mov	 eax, DWORD PTR __W$151195[ebp]
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0043f	75 62		 jne	 SHORT $L151196

; 318  :                                                 {_Color(_W) = _Black;

  00441	8b 4d e0	 mov	 ecx, DWORD PTR __W$151195[ebp]
  00444	51		 push	 ecx
  00445	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  0044a	83 c4 04	 add	 esp, 4
  0044d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 319  :                                                 _Color(_Parent(_X)) = _Red;

  00453	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0045c	83 c4 04	 add	 esp, 4
  0045f	8b 00		 mov	 eax, DWORD PTR [eax]
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00467	83 c4 04	 add	 esp, 4
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 320  :                                                 _Lrotate(_Parent(_X));

  00470	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00473	51		 push	 ecx
  00474	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00479	83 c4 04	 add	 esp, 4
  0047c	8b 10		 mov	 edx, DWORD PTR [eax]
  0047e	52		 push	 edx
  0047f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lrotate

; 321  :                                                 _W = _Right(_Parent(_X)); }

  00487	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00490	83 c4 04	 add	 esp, 4
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	51		 push	 ecx
  00496	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0049b	83 c4 04	 add	 esp, 4
  0049e	8b 10		 mov	 edx, DWORD PTR [eax]
  004a0	89 55 e0	 mov	 DWORD PTR __W$151195[ebp], edx
$L151196:

; 323  :                                                 && _Color(_Right(_W)) == _Black)

  004a3	8b 45 e0	 mov	 eax, DWORD PTR __W$151195[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  004ac	83 c4 04	 add	 esp, 4
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  004b7	83 c4 04	 add	 esp, 4
  004ba	83 38 01	 cmp	 DWORD PTR [eax], 1
  004bd	75 44		 jne	 SHORT $L151197
  004bf	8b 55 e0	 mov	 edx, DWORD PTR __W$151195[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  004c8	83 c4 04	 add	 esp, 4
  004cb	8b 00		 mov	 eax, DWORD PTR [eax]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  004d3	83 c4 04	 add	 esp, 4
  004d6	83 38 01	 cmp	 DWORD PTR [eax], 1
  004d9	75 28		 jne	 SHORT $L151197

; 324  :                                                 {_Color(_W) = _Red;

  004db	8b 4d e0	 mov	 ecx, DWORD PTR __W$151195[ebp]
  004de	51		 push	 ecx
  004df	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  004e4	83 c4 04	 add	 esp, 4
  004e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  :                                                 _X = _Parent(_X); }

  004ed	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  004f0	52		 push	 edx
  004f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  004f6	83 c4 04	 add	 esp, 4
  004f9	8b 00		 mov	 eax, DWORD PTR [eax]
  004fb	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 326  :                                         else

  004fe	e9 f2 00 00 00	 jmp	 $L151198
$L151197:

; 327  :                                                 {if (_Color(_Right(_W)) == _Black)

  00503	8b 4d e0	 mov	 ecx, DWORD PTR __W$151195[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0050c	83 c4 04	 add	 esp, 4
  0050f	8b 10		 mov	 edx, DWORD PTR [eax]
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00517	83 c4 04	 add	 esp, 4
  0051a	83 38 01	 cmp	 DWORD PTR [eax], 1
  0051d	75 57		 jne	 SHORT $L151199

; 328  :                                                         {_Color(_Left(_W)) = _Black;

  0051f	8b 45 e0	 mov	 eax, DWORD PTR __W$151195[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00528	83 c4 04	 add	 esp, 4
  0052b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052d	51		 push	 ecx
  0052e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00533	83 c4 04	 add	 esp, 4
  00536	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 329  :                                                         _Color(_W) = _Red;

  0053c	8b 55 e0	 mov	 edx, DWORD PTR __W$151195[ebp]
  0053f	52		 push	 edx
  00540	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00545	83 c4 04	 add	 esp, 4
  00548	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 330  :                                                         _Rrotate(_W);

  0054e	8b 45 e0	 mov	 eax, DWORD PTR __W$151195[ebp]
  00551	50		 push	 eax
  00552	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rrotate

; 331  :                                                         _W = _Right(_Parent(_X)); }

  0055a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0055d	51		 push	 ecx
  0055e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00563	83 c4 04	 add	 esp, 4
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	52		 push	 edx
  00569	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0056e	83 c4 04	 add	 esp, 4
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	89 45 e0	 mov	 DWORD PTR __W$151195[ebp], eax
$L151199:

; 332  :                                                 _Color(_W) = _Color(_Parent(_X));

  00576	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0057f	83 c4 04	 add	 esp, 4
  00582	8b 10		 mov	 edx, DWORD PTR [eax]
  00584	52		 push	 edx
  00585	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  0058a	83 c4 04	 add	 esp, 4
  0058d	8b f0		 mov	 esi, eax
  0058f	8b 45 e0	 mov	 eax, DWORD PTR __W$151195[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0059d	89 08		 mov	 DWORD PTR [eax], ecx

; 333  :                                                 _Color(_Parent(_X)) = _Black;

  0059f	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005a2	52		 push	 edx
  005a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  005a8	83 c4 04	 add	 esp, 4
  005ab	8b 00		 mov	 eax, DWORD PTR [eax]
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  005b3	83 c4 04	 add	 esp, 4
  005b6	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 334  :                                                 _Color(_Right(_W)) = _Black;

  005bc	8b 4d e0	 mov	 ecx, DWORD PTR __W$151195[ebp]
  005bf	51		 push	 ecx
  005c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  005c5	83 c4 04	 add	 esp, 4
  005c8	8b 10		 mov	 edx, DWORD PTR [eax]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 335  :                                                 _Lrotate(_Parent(_X));

  005d9	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	51		 push	 ecx
  005e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lrotate

; 336  :                                                 break; }}

  005f0	e9 e8 01 00 00	 jmp	 $L151193
$L151198:

; 337  :                                 else

  005f5	e9 de 01 00 00	 jmp	 $L151204
$L151194:

; 338  :                                         {_Nodeptr _W = _Left(_Parent(_X));

  005fa	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005fd	52		 push	 edx
  005fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00603	83 c4 04	 add	 esp, 4
  00606	8b 00		 mov	 eax, DWORD PTR [eax]
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  0060e	83 c4 04	 add	 esp, 4
  00611	8b 08		 mov	 ecx, DWORD PTR [eax]
  00613	89 4d dc	 mov	 DWORD PTR __W$151201[ebp], ecx

; 339  :                                         if (_Color(_W) == _Red)

  00616	8b 55 dc	 mov	 edx, DWORD PTR __W$151201[ebp]
  00619	52		 push	 edx
  0061a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  0061f	83 c4 04	 add	 esp, 4
  00622	83 38 00	 cmp	 DWORD PTR [eax], 0
  00625	75 62		 jne	 SHORT $L151202

; 340  :                                                 {_Color(_W) = _Black;

  00627	8b 45 dc	 mov	 eax, DWORD PTR __W$151201[ebp]
  0062a	50		 push	 eax
  0062b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00630	83 c4 04	 add	 esp, 4
  00633	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 341  :                                                 _Color(_Parent(_X)) = _Red;

  00639	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0063c	51		 push	 ecx
  0063d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00642	83 c4 04	 add	 esp, 4
  00645	8b 10		 mov	 edx, DWORD PTR [eax]
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  0064d	83 c4 04	 add	 esp, 4
  00650	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 342  :                                                 _Rrotate(_Parent(_X));

  00656	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00659	50		 push	 eax
  0065a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0065f	83 c4 04	 add	 esp, 4
  00662	8b 08		 mov	 ecx, DWORD PTR [eax]
  00664	51		 push	 ecx
  00665	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rrotate

; 343  :                                                 _W = _Left(_Parent(_X)); }

  0066d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00670	52		 push	 edx
  00671	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00676	83 c4 04	 add	 esp, 4
  00679	8b 00		 mov	 eax, DWORD PTR [eax]
  0067b	50		 push	 eax
  0067c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00681	83 c4 04	 add	 esp, 4
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 4d dc	 mov	 DWORD PTR __W$151201[ebp], ecx
$L151202:

; 345  :                                                 && _Color(_Left(_W)) == _Black)

  00689	8b 55 dc	 mov	 edx, DWORD PTR __W$151201[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00692	83 c4 04	 add	 esp, 4
  00695	8b 00		 mov	 eax, DWORD PTR [eax]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  0069d	83 c4 04	 add	 esp, 4
  006a0	83 38 01	 cmp	 DWORD PTR [eax], 1
  006a3	75 44		 jne	 SHORT $L151203
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR __W$151201[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  006ae	83 c4 04	 add	 esp, 4
  006b1	8b 10		 mov	 edx, DWORD PTR [eax]
  006b3	52		 push	 edx
  006b4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  006b9	83 c4 04	 add	 esp, 4
  006bc	83 38 01	 cmp	 DWORD PTR [eax], 1
  006bf	75 28		 jne	 SHORT $L151203

; 346  :                                                 {_Color(_W) = _Red;

  006c1	8b 45 dc	 mov	 eax, DWORD PTR __W$151201[ebp]
  006c4	50		 push	 eax
  006c5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  006ca	83 c4 04	 add	 esp, 4
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 347  :                                                 _X = _Parent(_X); }

  006d3	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  006d6	51		 push	 ecx
  006d7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  006dc	83 c4 04	 add	 esp, 4
  006df	8b 10		 mov	 edx, DWORD PTR [eax]
  006e1	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 348  :                                         else

  006e4	e9 ef 00 00 00	 jmp	 $L151204
$L151203:

; 349  :                                                 {if (_Color(_Left(_W)) == _Black)

  006e9	8b 45 dc	 mov	 eax, DWORD PTR __W$151201[ebp]
  006ec	50		 push	 eax
  006ed	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  006f2	83 c4 04	 add	 esp, 4
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  006fd	83 c4 04	 add	 esp, 4
  00700	83 38 01	 cmp	 DWORD PTR [eax], 1
  00703	75 57		 jne	 SHORT $L151205

; 350  :                                                         {_Color(_Right(_W)) = _Black;

  00705	8b 55 dc	 mov	 edx, DWORD PTR __W$151201[ebp]
  00708	52		 push	 edx
  00709	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0070e	83 c4 04	 add	 esp, 4
  00711	8b 00		 mov	 eax, DWORD PTR [eax]
  00713	50		 push	 eax
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 351  :                                                         _Color(_W) = _Red;

  00722	8b 4d dc	 mov	 ecx, DWORD PTR __W$151201[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  0072b	83 c4 04	 add	 esp, 4
  0072e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 352  :                                                         _Lrotate(_W);

  00734	8b 55 dc	 mov	 edx, DWORD PTR __W$151201[ebp]
  00737	52		 push	 edx
  00738	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lrotate

; 353  :                                                         _W = _Left(_Parent(_X)); }

  00740	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00749	83 c4 04	 add	 esp, 4
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	51		 push	 ecx
  0074f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00754	83 c4 04	 add	 esp, 4
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	89 55 dc	 mov	 DWORD PTR __W$151201[ebp], edx
$L151205:

; 354  :                                                 _Color(_W) = _Color(_Parent(_X));

  0075c	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00765	83 c4 04	 add	 esp, 4
  00768	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00770	83 c4 04	 add	 esp, 4
  00773	8b f0		 mov	 esi, eax
  00775	8b 55 dc	 mov	 edx, DWORD PTR __W$151201[ebp]
  00778	52		 push	 edx
  00779	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  0077e	83 c4 04	 add	 esp, 4
  00781	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00783	89 08		 mov	 DWORD PTR [eax], ecx

; 355  :                                                 _Color(_Parent(_X)) = _Black;

  00785	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0078e	83 c4 04	 add	 esp, 4
  00791	8b 00		 mov	 eax, DWORD PTR [eax]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00799	83 c4 04	 add	 esp, 4
  0079c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 356  :                                                 _Color(_Left(_W)) = _Black;

  007a2	8b 4d dc	 mov	 ecx, DWORD PTR __W$151201[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  007ab	83 c4 04	 add	 esp, 4
  007ae	8b 10		 mov	 edx, DWORD PTR [eax]
  007b0	52		 push	 edx
  007b1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  007b6	83 c4 04	 add	 esp, 4
  007b9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 357  :                                                 _Rrotate(_Parent(_X));

  007bf	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  007c8	83 c4 04	 add	 esp, 4
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	51		 push	 ecx
  007ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rrotate

; 358  :                                                 break; }}

  007d6	eb 05		 jmp	 SHORT $L151193
$L151204:
  007d8	e9 ed fb ff ff	 jmp	 $L151192
$L151193:

; 359  :                         _Color(_X) = _Black; }

  007dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  007e0	52		 push	 edx
  007e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  007e6	83 c4 04	 add	 esp, 4
  007e9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L151190:

; 360  :                 _Destval(&_Value(_Y));

  007ef	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Value
  007f8	83 c4 04	 add	 esp, 4
  007fb	50		 push	 eax
  007fc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Destval

; 361  :                 _Freenode(_Y);

  00804	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00807	51		 push	 ecx
  00808	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Freenode

; 362  :                 --_Size;

  00810	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00813	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00816	83 e8 01	 sub	 eax, 1
  00819	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 363  :                 return (_P); }

  0081f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00822	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00825	89 02		 mov	 DWORD PTR [edx], eax
  00827	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0082e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00831	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00837	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0083a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0083d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00844	5e		 pop	 esi
  00845	8b e5		 mov	 esp, ebp
  00847	5d		 pop	 ebp
  00848	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156062:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156065:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156064
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::erase
PUBLIC	?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lbound
;	COMDAT ?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT
$T156070 = -4
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::lower_bound, COMDAT

; 402  :                 {return (iterator(_Lbound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lbound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T156070[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::lower_bound
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::upper_bound
PUBLIC	??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator>
;	COMDAT ?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z
_TEXT	SEGMENT
$T156072 = -8
$T156073 = -12
$T156074 = -16
___$ReturnUdt$ = 8
_this$ = -20
__Kv$ = 12
?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::equal_range, COMDAT

; 410  :                 {return (_Pairii(lower_bound(_Kv), upper_bound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f4	 lea	 ecx, DWORD PTR $T156073[ebp]
  00010	51		 push	 ecx
  00011	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::upper_bound
  00019	50		 push	 eax
  0001a	8b 55 0c	 mov	 edx, DWORD PTR __Kv$[ebp]
  0001d	52		 push	 edx
  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T156074[ebp]
  00021	50		 push	 eax
  00022	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::lower_bound
  0002a	50		 push	 eax
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR $T156072[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator>
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	89 08		 mov	 DWORD PTR [eax], ecx
  0003d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00040	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?equal_range@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AU?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@2@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::equal_range
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156078 DD	019930520H
	DD	01H
	DD	FLAT:$T156080
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156080 DD	0ffffffffH
	DD	FLAT:$L156076
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Erase, COMDAT

; 449  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156079
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 450  :                 for (_Nodeptr _Y = _X; _Y != _Nil; _X = _Y)

  0002e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax
  00034	eb 06		 jmp	 SHORT $L151224
$L151225:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00039	89 4d 08	 mov	 DWORD PTR __X$[ebp], ecx
$L151224:
  0003c	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  0003f	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00045	74 4b		 je	 SHORT $L151226

; 451  :                         {_Erase(_Right(_Y));

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Erase

; 452  :                         _Y = _Left(_Y);

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax

; 453  :                         _Destval(&_Value(_X));

  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Value
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Destval

; 454  :                         _Freenode(_X); }}

  00084	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00087	52		 push	 edx
  00088	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Freenode
  00090	eb a4		 jmp	 SHORT $L151225
$L151226:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156076:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156079:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156078
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Erase@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Erase
PUBLIC	?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Buynode
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156086 DD	019930520H
	DD	01H
	DD	FLAT:$T156088
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156088 DD	0ffffffffH
	DD	FLAT:$L156084
xdata$x	ENDS
;	COMDAT ?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -20
__Lk$ = -16
?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXXZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Init, COMDAT

; 456  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156087
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :                 if (_Nil == 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00035	75 3a		 jne	 SHORT $L151230

; 458  :                         {_Nil = _Buynode(0, _Black);

  00037	6a 01		 push	 1
  00039	6a 00		 push	 0
  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Buynode
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A, eax ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil

; 459  :                         _Left(_Nil) = 0, _Right(_Nil) = 0; }

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00068	83 c4 04	 add	 esp, 4
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L151230:

; 460  :                 ++_Nilrefs;

  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1IA ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nilrefs
  00077	83 c2 01	 add	 edx, 1
  0007a	89 15 00 00 00
	00		 mov	 DWORD PTR ?_Nilrefs@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1IA, edx ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nilrefs

; 461  :                 _Head = _Buynode(_Nil, _Red), _Size = 0;

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Buynode
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00096	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00099	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 462  :                 _Lmost() = _Head, _Rmost() = _Head; }

  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	89 10		 mov	 DWORD PTR [eax], edx
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost
  000b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	89 10		 mov	 DWORD PTR [eax], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156084:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156087:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156086
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Init@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXXZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Init
;	COMDAT ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost, COMDAT

; 524  :                 {return (_Left(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost, COMDAT

; 553  :                 {return (_Right(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root, COMDAT

; 557  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156097 DD	019930520H
	DD	01H
	DD	FLAT:$T156099
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156099 DD	0ffffffffH
	DD	FLAT:$L156095
xdata$x	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$151242 = -20
?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Inc, COMDAT

; 104  :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156098
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  :                         if (_Right(_Ptr) != _Nil)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00044	74 20		 je	 SHORT $L151240

; 106  :                                 _Ptr = _Min(_Right(_Ptr));

  00046	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 107  :                         else

  00064	eb 4f		 jmp	 SHORT $L151246
$L151240:

; 109  :                                 while (_Ptr == _Right(_P = _Parent(_Ptr)))

  00066	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d ec	 mov	 DWORD PTR __P$151242[ebp], ecx
  00079	8b 55 ec	 mov	 edx, DWORD PTR __P$151242[ebp]
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00082	83 c4 04	 add	 esp, 4
  00085	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0008c	75 0a		 jne	 SHORT $L151245

; 110  :                                         _Ptr = _P;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __P$151242[ebp]
  00094	89 08		 mov	 DWORD PTR [eax], ecx
  00096	eb ce		 jmp	 SHORT $L151240
$L151245:

; 111  :                                 if (_Right(_Ptr) != _P)

  00098	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	3b 4d ec	 cmp	 ecx, DWORD PTR __P$151242[ebp]
  000ab	74 08		 je	 SHORT $L151246

; 112  :                                         _Ptr = _P; }}

  000ad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __P$151242[ebp]
  000b3	89 02		 mov	 DWORD PTR [edx], eax
$L151246:
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156095:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156098:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156097
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Inc@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Inc
;	COMDAT ?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode, COMDAT

; 114  :                         {return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEPAU_Node@23@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::iterator, COMDAT

; 124  :                 iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::iterator
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEABQAVCSkinCtrl@@ABQAV3@@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??R_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEABQAVCSkinCtrl@@ABQAV3@@Z PROC NEAR ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn::operator(), COMDAT

; 26   : 		{return (_X); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??R_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEABQAVCSkinCtrl@@ABQAV3@@Z ENDP ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAABQAVCSkinCtrl@@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
$T156106 = -4
?_Key@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAABQAVCSkinCtrl@@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Key, COMDAT

; 38   :                 {return (_Kfn()(_Value(_P))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?_Value@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Value
  0000d	83 c4 04	 add	 esp, 4
  00010	50		 push	 eax
  00011	8d 4d fc	 lea	 ecx, DWORD PTR $T156106[ebp]
  00014	e8 00 00 00 00	 call	 ??R_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEABQAVCSkinCtrl@@ABQAV3@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Key@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAABQAVCSkinCtrl@@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Key
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left, COMDAT

; 40   :                 {return ((_Nodepref)(*_P)._Left); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right, COMDAT

; 44   :                 {return ((_Nodepref)(*_P)._Right); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
PUBLIC	?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
PUBLIC	?_Lrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lrotate
PUBLIC	?_Max@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Max
PUBLIC	?_Min@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Min
PUBLIC	?_Rrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rrotate
PUBLIC	?_Destval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Destval
PUBLIC	?swap@std@@YAXAAW4_Redbl@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z ; std::swap
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156113 DD	019930520H
	DD	01H
	DD	FLAT:$T156115
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156115 DD	0ffffffffH
	DD	FLAT:$L156111
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__P$ = 12
$T156110 = -40
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -44
__X$ = -16
__Y$ = -20
__Z$ = -28
__Lk$ = -24
__W$151301 = -32
__W$151307 = -36
?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase, COMDAT

; 264  :                 {_Nodeptr _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156114
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 20	 sub	 esp, 32			; 00000020H
  0001b	56		 push	 esi
  0001c	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 265  :                 _Nodeptr _Y = (_P++)._Mynode();

  0001f	6a 00		 push	 0
  00021	8d 45 d8	 lea	 eax, DWORD PTR $T156110[ebp]
  00024	50		 push	 eax
  00025	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00028	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AV012@H@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++
  0002d	8b c8		 mov	 ecx, eax
  0002f	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEPAU_Node@23@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
  00034	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax

; 266  :                 _Nodeptr _Z = _Y;

  00037	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0003a	89 4d e4	 mov	 DWORD PTR __Z$[ebp], ecx

; 267  :                 _Lockit _Lk;

  0003d	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  :                 if (_Left(_Y) == _Nil)

  0004d	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00056	83 c4 04	 add	 esp, 4
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00061	75 13		 jne	 SHORT $L151267

; 269  :                         _X = _Right(_Y);

  00063	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0006c	83 c4 04	 add	 esp, 4
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 270  :                 else if (_Right(_Y) == _Nil)

  00074	eb 54		 jmp	 SHORT $L151270
$L151267:
  00076	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0007f	83 c4 04	 add	 esp, 4
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  0008a	75 13		 jne	 SHORT $L151269

; 271  :                         _X = _Left(_Y);

  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0008f	52		 push	 edx
  00090	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00095	83 c4 04	 add	 esp, 4
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 272  :                 else

  0009d	eb 2b		 jmp	 SHORT $L151270
$L151269:

; 273  :                         _Y = _Min(_Right(_Y)), _X = _Right(_Y);

  0009f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 10		 mov	 edx, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?_Min@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Min
  000b3	83 c4 04	 add	 esp, 4
  000b6	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  000b9	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L151270:

; 274  :                 if (_Y != _Z)

  000ca	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000cd	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  000d0	0f 84 95 01 00
	00		 je	 $L151271

; 275  :                         {_Parent(_Left(_Z)) = _Y;

  000d6	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  000df	83 c4 04	 add	 esp, 4
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  000ea	83 c4 04	 add	 esp, 4
  000ed	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000f0	89 10		 mov	 DWORD PTR [eax], edx

; 276  :                         _Left(_Y) = _Left(_Z);

  000f2	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  000fb	83 c4 04	 add	 esp, 4
  000fe	8b f0		 mov	 esi, eax
  00100	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00109	83 c4 04	 add	 esp, 4
  0010c	8b 16		 mov	 edx, DWORD PTR [esi]
  0010e	89 10		 mov	 DWORD PTR [eax], edx

; 277  :                         if (_Y == _Right(_Z))

  00110	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00119	83 c4 04	 add	 esp, 4
  0011c	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0011f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00121	75 13		 jne	 SHORT $L151272

; 278  :                                 _Parent(_X) = _Y;

  00123	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0012c	83 c4 04	 add	 esp, 4
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00132	89 08		 mov	 DWORD PTR [eax], ecx

; 279  :                         else

  00134	eb 74		 jmp	 SHORT $L151273
$L151272:

; 280  :                                 {_Parent(_X) = _Parent(_Y);

  00136	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0013f	83 c4 04	 add	 esp, 4
  00142	8b f0		 mov	 esi, eax
  00144	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0014d	83 c4 04	 add	 esp, 4
  00150	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00152	89 08		 mov	 DWORD PTR [eax], ecx

; 281  :                                 _Left(_Parent(_Y)) = _X;

  00154	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  00157	52		 push	 edx
  00158	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0015d	83 c4 04	 add	 esp, 4
  00160	8b 00		 mov	 eax, DWORD PTR [eax]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00168	83 c4 04	 add	 esp, 4
  0016b	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0016e	89 08		 mov	 DWORD PTR [eax], ecx

; 282  :                                 _Right(_Y) = _Right(_Z);

  00170	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00179	83 c4 04	 add	 esp, 4
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00187	83 c4 04	 add	 esp, 4
  0018a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0018c	89 08		 mov	 DWORD PTR [eax], ecx

; 283  :                                 _Parent(_Right(_Z)) = _Y; }

  0018e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00191	52		 push	 edx
  00192	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00197	83 c4 04	 add	 esp, 4
  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  001a2	83 c4 04	 add	 esp, 4
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001a8	89 08		 mov	 DWORD PTR [eax], ecx
$L151273:

; 284  :                         if (_Root() == _Z)

  001aa	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ad	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  001b2	8b 10		 mov	 edx, DWORD PTR [eax]
  001b4	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  001b7	75 0f		 jne	 SHORT $L151274

; 285  :                                 _Root() = _Y;

  001b9	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  001c4	89 08		 mov	 DWORD PTR [eax], ecx

; 286  :                         else if (_Left(_Parent(_Z)) == _Z)

  001c6	eb 58		 jmp	 SHORT $L151277
$L151274:
  001c8	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001cb	52		 push	 edx
  001cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  001d1	83 c4 04	 add	 esp, 4
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  001dc	83 c4 04	 add	 esp, 4
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  001e4	75 1e		 jne	 SHORT $L151276

; 287  :                                 _Left(_Parent(_Z)) = _Y;

  001e6	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  001e9	52		 push	 edx
  001ea	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  001ef	83 c4 04	 add	 esp, 4
  001f2	8b 00		 mov	 eax, DWORD PTR [eax]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  001fa	83 c4 04	 add	 esp, 4
  001fd	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00200	89 08		 mov	 DWORD PTR [eax], ecx

; 288  :                         else

  00202	eb 1c		 jmp	 SHORT $L151277
$L151276:

; 289  :                                 _Right(_Parent(_Z)) = _Y;

  00204	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0020d	83 c4 04	 add	 esp, 4
  00210	8b 00		 mov	 eax, DWORD PTR [eax]
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00218	83 c4 04	 add	 esp, 4
  0021b	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  0021e	89 08		 mov	 DWORD PTR [eax], ecx
$L151277:

; 290  :                         _Parent(_Y) = _Parent(_Z);

  00220	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00223	52		 push	 edx
  00224	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00229	83 c4 04	 add	 esp, 4
  0022c	8b f0		 mov	 esi, eax
  0022e	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00237	83 c4 04	 add	 esp, 4
  0023a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0023c	89 08		 mov	 DWORD PTR [eax], ecx

; 291  :                         std::swap(_Color(_Y), _Color(_Z));

  0023e	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00247	83 c4 04	 add	 esp, 4
  0024a	50		 push	 eax
  0024b	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00254	83 c4 04	 add	 esp, 4
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?swap@std@@YAXAAW4_Redbl@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z ; std::swap
  0025d	83 c4 08	 add	 esp, 8

; 292  :                         _Y = _Z; }

  00260	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  00263	89 4d ec	 mov	 DWORD PTR __Y$[ebp], ecx

; 293  :                 else

  00266	e9 4a 01 00 00	 jmp	 $L151295
$L151271:

; 294  :                         {_Parent(_X) = _Parent(_Y);

  0026b	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  0026e	52		 push	 edx
  0026f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00274	83 c4 04	 add	 esp, 4
  00277	8b f0		 mov	 esi, eax
  00279	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00282	83 c4 04	 add	 esp, 4
  00285	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00287	89 08		 mov	 DWORD PTR [eax], ecx

; 295  :                         if (_Root() == _Z)

  00289	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  00291	8b 10		 mov	 edx, DWORD PTR [eax]
  00293	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  00296	75 0f		 jne	 SHORT $L151284

; 296  :                                 _Root() = _X;

  00298	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0029b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  002a0	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 297  :                         else if (_Left(_Parent(_Z)) == _Z)

  002a5	eb 58		 jmp	 SHORT $L151287
$L151284:
  002a7	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002aa	52		 push	 edx
  002ab	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  002b0	83 c4 04	 add	 esp, 4
  002b3	8b 00		 mov	 eax, DWORD PTR [eax]
  002b5	50		 push	 eax
  002b6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  002bb	83 c4 04	 add	 esp, 4
  002be	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c0	3b 4d e4	 cmp	 ecx, DWORD PTR __Z$[ebp]
  002c3	75 1e		 jne	 SHORT $L151286

; 298  :                                 _Left(_Parent(_Z)) = _X;

  002c5	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  002ce	83 c4 04	 add	 esp, 4
  002d1	8b 00		 mov	 eax, DWORD PTR [eax]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  002d9	83 c4 04	 add	 esp, 4
  002dc	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002df	89 08		 mov	 DWORD PTR [eax], ecx

; 299  :                         else

  002e1	eb 1c		 jmp	 SHORT $L151287
$L151286:

; 300  :                                 _Right(_Parent(_Z)) = _X;

  002e3	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  002e6	52		 push	 edx
  002e7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  002ec	83 c4 04	 add	 esp, 4
  002ef	8b 00		 mov	 eax, DWORD PTR [eax]
  002f1	50		 push	 eax
  002f2	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  002f7	83 c4 04	 add	 esp, 4
  002fa	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	89 08		 mov	 DWORD PTR [eax], ecx
$L151287:

; 301  :                         if (_Lmost() != _Z)

  002ff	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost
  00307	8b 10		 mov	 edx, DWORD PTR [eax]
  00309	3b 55 e4	 cmp	 edx, DWORD PTR __Z$[ebp]
  0030c	74 02		 je	 SHORT $L151288

; 303  :                         else if (_Right(_Z) == _Nil)

  0030e	eb 4a		 jmp	 SHORT $L151291
$L151288:
  00310	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00319	83 c4 04	 add	 esp, 4
  0031c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031e	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00324	75 1c		 jne	 SHORT $L151290

; 304  :                                 _Lmost() = _Parent(_Z);

  00326	8b 55 e4	 mov	 edx, DWORD PTR __Z$[ebp]
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0032f	83 c4 04	 add	 esp, 4
  00332	8b f0		 mov	 esi, eax
  00334	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00337	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost
  0033c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0033e	89 08		 mov	 DWORD PTR [eax], ecx

; 305  :                         else

  00340	eb 18		 jmp	 SHORT $L151291
$L151290:

; 306  :                                 _Lmost() = _Min(_X);

  00342	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00345	52		 push	 edx
  00346	e8 00 00 00 00	 call	 ?_Min@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Min
  0034b	83 c4 04	 add	 esp, 4
  0034e	8b f0		 mov	 esi, eax
  00350	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00353	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost
  00358	89 30		 mov	 DWORD PTR [eax], esi
$L151291:

; 307  :                         if (_Rmost() != _Z)

  0035a	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost
  00362	8b 00		 mov	 eax, DWORD PTR [eax]
  00364	3b 45 e4	 cmp	 eax, DWORD PTR __Z$[ebp]
  00367	74 02		 je	 SHORT $L151292

; 309  :                         else if (_Left(_Z) == _Nil)

  00369	eb 4a		 jmp	 SHORT $L151295
$L151292:
  0036b	8b 4d e4	 mov	 ecx, DWORD PTR __Z$[ebp]
  0036e	51		 push	 ecx
  0036f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00374	83 c4 04	 add	 esp, 4
  00377	8b 10		 mov	 edx, DWORD PTR [eax]
  00379	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  0037f	75 1c		 jne	 SHORT $L151294

; 310  :                                 _Rmost() = _Parent(_Z);

  00381	8b 45 e4	 mov	 eax, DWORD PTR __Z$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0038a	83 c4 04	 add	 esp, 4
  0038d	8b f0		 mov	 esi, eax
  0038f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost
  00397	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00399	89 08		 mov	 DWORD PTR [eax], ecx

; 311  :                         else

  0039b	eb 18		 jmp	 SHORT $L151295
$L151294:

; 312  :                                 _Rmost() = _Max(_X); }

  0039d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?_Max@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Max
  003a6	83 c4 04	 add	 esp, 4
  003a9	8b f0		 mov	 esi, eax
  003ab	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003ae	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost
  003b3	89 30		 mov	 DWORD PTR [eax], esi
$L151295:

; 313  :                 if (_Color(_Y) == _Black)

  003b5	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  003be	83 c4 04	 add	 esp, 4
  003c1	83 38 01	 cmp	 DWORD PTR [eax], 1
  003c4	0f 85 25 04 00
	00		 jne	 $L151296
$L151298:

; 314  :                         {while (_X != _Root() && _Color(_X) == _Black)

  003ca	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  003cd	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  003d2	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  003d5	3b 08		 cmp	 ecx, DWORD PTR [eax]
  003d7	0f 84 00 04 00
	00		 je	 $L151299
  003dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  003e0	52		 push	 edx
  003e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  003e6	83 c4 04	 add	 esp, 4
  003e9	83 38 01	 cmp	 DWORD PTR [eax], 1
  003ec	0f 85 eb 03 00
	00		 jne	 $L151299

; 315  :                                 if (_X == _Left(_Parent(_X)))

  003f2	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  003fb	83 c4 04	 add	 esp, 4
  003fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00400	51		 push	 ecx
  00401	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00406	83 c4 04	 add	 esp, 4
  00409	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0040c	3b 10		 cmp	 edx, DWORD PTR [eax]
  0040e	0f 85 e6 01 00
	00		 jne	 $L151300

; 316  :                                         {_Nodeptr _W = _Right(_Parent(_X));

  00414	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0041d	83 c4 04	 add	 esp, 4
  00420	8b 08		 mov	 ecx, DWORD PTR [eax]
  00422	51		 push	 ecx
  00423	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00428	83 c4 04	 add	 esp, 4
  0042b	8b 10		 mov	 edx, DWORD PTR [eax]
  0042d	89 55 e0	 mov	 DWORD PTR __W$151301[ebp], edx

; 317  :                                         if (_Color(_W) == _Red)

  00430	8b 45 e0	 mov	 eax, DWORD PTR __W$151301[ebp]
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00439	83 c4 04	 add	 esp, 4
  0043c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0043f	75 62		 jne	 SHORT $L151302

; 318  :                                                 {_Color(_W) = _Black;

  00441	8b 4d e0	 mov	 ecx, DWORD PTR __W$151301[ebp]
  00444	51		 push	 ecx
  00445	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  0044a	83 c4 04	 add	 esp, 4
  0044d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 319  :                                                 _Color(_Parent(_X)) = _Red;

  00453	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00456	52		 push	 edx
  00457	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0045c	83 c4 04	 add	 esp, 4
  0045f	8b 00		 mov	 eax, DWORD PTR [eax]
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00467	83 c4 04	 add	 esp, 4
  0046a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 320  :                                                 _Lrotate(_Parent(_X));

  00470	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00473	51		 push	 ecx
  00474	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00479	83 c4 04	 add	 esp, 4
  0047c	8b 10		 mov	 edx, DWORD PTR [eax]
  0047e	52		 push	 edx
  0047f	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00482	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lrotate

; 321  :                                                 _W = _Right(_Parent(_X)); }

  00487	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00490	83 c4 04	 add	 esp, 4
  00493	8b 08		 mov	 ecx, DWORD PTR [eax]
  00495	51		 push	 ecx
  00496	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0049b	83 c4 04	 add	 esp, 4
  0049e	8b 10		 mov	 edx, DWORD PTR [eax]
  004a0	89 55 e0	 mov	 DWORD PTR __W$151301[ebp], edx
$L151302:

; 323  :                                                 && _Color(_Right(_W)) == _Black)

  004a3	8b 45 e0	 mov	 eax, DWORD PTR __W$151301[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  004ac	83 c4 04	 add	 esp, 4
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  004b7	83 c4 04	 add	 esp, 4
  004ba	83 38 01	 cmp	 DWORD PTR [eax], 1
  004bd	75 44		 jne	 SHORT $L151303
  004bf	8b 55 e0	 mov	 edx, DWORD PTR __W$151301[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  004c8	83 c4 04	 add	 esp, 4
  004cb	8b 00		 mov	 eax, DWORD PTR [eax]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  004d3	83 c4 04	 add	 esp, 4
  004d6	83 38 01	 cmp	 DWORD PTR [eax], 1
  004d9	75 28		 jne	 SHORT $L151303

; 324  :                                                 {_Color(_W) = _Red;

  004db	8b 4d e0	 mov	 ecx, DWORD PTR __W$151301[ebp]
  004de	51		 push	 ecx
  004df	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  004e4	83 c4 04	 add	 esp, 4
  004e7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 325  :                                                 _X = _Parent(_X); }

  004ed	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  004f0	52		 push	 edx
  004f1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  004f6	83 c4 04	 add	 esp, 4
  004f9	8b 00		 mov	 eax, DWORD PTR [eax]
  004fb	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 326  :                                         else

  004fe	e9 f2 00 00 00	 jmp	 $L151304
$L151303:

; 327  :                                                 {if (_Color(_Right(_W)) == _Black)

  00503	8b 4d e0	 mov	 ecx, DWORD PTR __W$151301[ebp]
  00506	51		 push	 ecx
  00507	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0050c	83 c4 04	 add	 esp, 4
  0050f	8b 10		 mov	 edx, DWORD PTR [eax]
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00517	83 c4 04	 add	 esp, 4
  0051a	83 38 01	 cmp	 DWORD PTR [eax], 1
  0051d	75 57		 jne	 SHORT $L151305

; 328  :                                                         {_Color(_Left(_W)) = _Black;

  0051f	8b 45 e0	 mov	 eax, DWORD PTR __W$151301[ebp]
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00528	83 c4 04	 add	 esp, 4
  0052b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052d	51		 push	 ecx
  0052e	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00533	83 c4 04	 add	 esp, 4
  00536	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 329  :                                                         _Color(_W) = _Red;

  0053c	8b 55 e0	 mov	 edx, DWORD PTR __W$151301[ebp]
  0053f	52		 push	 edx
  00540	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00545	83 c4 04	 add	 esp, 4
  00548	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 330  :                                                         _Rrotate(_W);

  0054e	8b 45 e0	 mov	 eax, DWORD PTR __W$151301[ebp]
  00551	50		 push	 eax
  00552	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00555	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rrotate

; 331  :                                                         _W = _Right(_Parent(_X)); }

  0055a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0055d	51		 push	 ecx
  0055e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00563	83 c4 04	 add	 esp, 4
  00566	8b 10		 mov	 edx, DWORD PTR [eax]
  00568	52		 push	 edx
  00569	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0056e	83 c4 04	 add	 esp, 4
  00571	8b 00		 mov	 eax, DWORD PTR [eax]
  00573	89 45 e0	 mov	 DWORD PTR __W$151301[ebp], eax
$L151305:

; 332  :                                                 _Color(_W) = _Color(_Parent(_X));

  00576	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00579	51		 push	 ecx
  0057a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0057f	83 c4 04	 add	 esp, 4
  00582	8b 10		 mov	 edx, DWORD PTR [eax]
  00584	52		 push	 edx
  00585	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  0058a	83 c4 04	 add	 esp, 4
  0058d	8b f0		 mov	 esi, eax
  0058f	8b 45 e0	 mov	 eax, DWORD PTR __W$151301[ebp]
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00598	83 c4 04	 add	 esp, 4
  0059b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0059d	89 08		 mov	 DWORD PTR [eax], ecx

; 333  :                                                 _Color(_Parent(_X)) = _Black;

  0059f	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005a2	52		 push	 edx
  005a3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  005a8	83 c4 04	 add	 esp, 4
  005ab	8b 00		 mov	 eax, DWORD PTR [eax]
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  005b3	83 c4 04	 add	 esp, 4
  005b6	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 334  :                                                 _Color(_Right(_W)) = _Black;

  005bc	8b 4d e0	 mov	 ecx, DWORD PTR __W$151301[ebp]
  005bf	51		 push	 ecx
  005c0	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  005c5	83 c4 04	 add	 esp, 4
  005c8	8b 10		 mov	 edx, DWORD PTR [eax]
  005ca	52		 push	 edx
  005cb	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  005d0	83 c4 04	 add	 esp, 4
  005d3	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 335  :                                                 _Lrotate(_Parent(_X));

  005d9	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e7	51		 push	 ecx
  005e8	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lrotate

; 336  :                                                 break; }}

  005f0	e9 e8 01 00 00	 jmp	 $L151299
$L151304:

; 337  :                                 else

  005f5	e9 de 01 00 00	 jmp	 $L151310
$L151300:

; 338  :                                         {_Nodeptr _W = _Left(_Parent(_X));

  005fa	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  005fd	52		 push	 edx
  005fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00603	83 c4 04	 add	 esp, 4
  00606	8b 00		 mov	 eax, DWORD PTR [eax]
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  0060e	83 c4 04	 add	 esp, 4
  00611	8b 08		 mov	 ecx, DWORD PTR [eax]
  00613	89 4d dc	 mov	 DWORD PTR __W$151307[ebp], ecx

; 339  :                                         if (_Color(_W) == _Red)

  00616	8b 55 dc	 mov	 edx, DWORD PTR __W$151307[ebp]
  00619	52		 push	 edx
  0061a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  0061f	83 c4 04	 add	 esp, 4
  00622	83 38 00	 cmp	 DWORD PTR [eax], 0
  00625	75 62		 jne	 SHORT $L151308

; 340  :                                                 {_Color(_W) = _Black;

  00627	8b 45 dc	 mov	 eax, DWORD PTR __W$151307[ebp]
  0062a	50		 push	 eax
  0062b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00630	83 c4 04	 add	 esp, 4
  00633	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 341  :                                                 _Color(_Parent(_X)) = _Red;

  00639	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0063c	51		 push	 ecx
  0063d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00642	83 c4 04	 add	 esp, 4
  00645	8b 10		 mov	 edx, DWORD PTR [eax]
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  0064d	83 c4 04	 add	 esp, 4
  00650	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 342  :                                                 _Rrotate(_Parent(_X));

  00656	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00659	50		 push	 eax
  0065a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0065f	83 c4 04	 add	 esp, 4
  00662	8b 08		 mov	 ecx, DWORD PTR [eax]
  00664	51		 push	 ecx
  00665	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  00668	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rrotate

; 343  :                                                 _W = _Left(_Parent(_X)); }

  0066d	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00670	52		 push	 edx
  00671	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00676	83 c4 04	 add	 esp, 4
  00679	8b 00		 mov	 eax, DWORD PTR [eax]
  0067b	50		 push	 eax
  0067c	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00681	83 c4 04	 add	 esp, 4
  00684	8b 08		 mov	 ecx, DWORD PTR [eax]
  00686	89 4d dc	 mov	 DWORD PTR __W$151307[ebp], ecx
$L151308:

; 345  :                                                 && _Color(_Left(_W)) == _Black)

  00689	8b 55 dc	 mov	 edx, DWORD PTR __W$151307[ebp]
  0068c	52		 push	 edx
  0068d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00692	83 c4 04	 add	 esp, 4
  00695	8b 00		 mov	 eax, DWORD PTR [eax]
  00697	50		 push	 eax
  00698	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  0069d	83 c4 04	 add	 esp, 4
  006a0	83 38 01	 cmp	 DWORD PTR [eax], 1
  006a3	75 44		 jne	 SHORT $L151309
  006a5	8b 4d dc	 mov	 ecx, DWORD PTR __W$151307[ebp]
  006a8	51		 push	 ecx
  006a9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  006ae	83 c4 04	 add	 esp, 4
  006b1	8b 10		 mov	 edx, DWORD PTR [eax]
  006b3	52		 push	 edx
  006b4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  006b9	83 c4 04	 add	 esp, 4
  006bc	83 38 01	 cmp	 DWORD PTR [eax], 1
  006bf	75 28		 jne	 SHORT $L151309

; 346  :                                                 {_Color(_W) = _Red;

  006c1	8b 45 dc	 mov	 eax, DWORD PTR __W$151307[ebp]
  006c4	50		 push	 eax
  006c5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  006ca	83 c4 04	 add	 esp, 4
  006cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 347  :                                                 _X = _Parent(_X); }

  006d3	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  006d6	51		 push	 ecx
  006d7	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  006dc	83 c4 04	 add	 esp, 4
  006df	8b 10		 mov	 edx, DWORD PTR [eax]
  006e1	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 348  :                                         else

  006e4	e9 ef 00 00 00	 jmp	 $L151310
$L151309:

; 349  :                                                 {if (_Color(_Left(_W)) == _Black)

  006e9	8b 45 dc	 mov	 eax, DWORD PTR __W$151307[ebp]
  006ec	50		 push	 eax
  006ed	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  006f2	83 c4 04	 add	 esp, 4
  006f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006f7	51		 push	 ecx
  006f8	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  006fd	83 c4 04	 add	 esp, 4
  00700	83 38 01	 cmp	 DWORD PTR [eax], 1
  00703	75 57		 jne	 SHORT $L151311

; 350  :                                                         {_Color(_Right(_W)) = _Black;

  00705	8b 55 dc	 mov	 edx, DWORD PTR __W$151307[ebp]
  00708	52		 push	 edx
  00709	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0070e	83 c4 04	 add	 esp, 4
  00711	8b 00		 mov	 eax, DWORD PTR [eax]
  00713	50		 push	 eax
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 351  :                                                         _Color(_W) = _Red;

  00722	8b 4d dc	 mov	 ecx, DWORD PTR __W$151307[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  0072b	83 c4 04	 add	 esp, 4
  0072e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 352  :                                                         _Lrotate(_W);

  00734	8b 55 dc	 mov	 edx, DWORD PTR __W$151307[ebp]
  00737	52		 push	 edx
  00738	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lrotate

; 353  :                                                         _W = _Left(_Parent(_X)); }

  00740	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00749	83 c4 04	 add	 esp, 4
  0074c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074e	51		 push	 ecx
  0074f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00754	83 c4 04	 add	 esp, 4
  00757	8b 10		 mov	 edx, DWORD PTR [eax]
  00759	89 55 dc	 mov	 DWORD PTR __W$151307[ebp], edx
$L151311:

; 354  :                                                 _Color(_W) = _Color(_Parent(_X));

  0075c	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  0075f	50		 push	 eax
  00760	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00765	83 c4 04	 add	 esp, 4
  00768	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076a	51		 push	 ecx
  0076b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00770	83 c4 04	 add	 esp, 4
  00773	8b f0		 mov	 esi, eax
  00775	8b 55 dc	 mov	 edx, DWORD PTR __W$151307[ebp]
  00778	52		 push	 edx
  00779	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  0077e	83 c4 04	 add	 esp, 4
  00781	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00783	89 08		 mov	 DWORD PTR [eax], ecx

; 355  :                                                 _Color(_Parent(_X)) = _Black;

  00785	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0078e	83 c4 04	 add	 esp, 4
  00791	8b 00		 mov	 eax, DWORD PTR [eax]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00799	83 c4 04	 add	 esp, 4
  0079c	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 356  :                                                 _Color(_Left(_W)) = _Black;

  007a2	8b 4d dc	 mov	 ecx, DWORD PTR __W$151307[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  007ab	83 c4 04	 add	 esp, 4
  007ae	8b 10		 mov	 edx, DWORD PTR [eax]
  007b0	52		 push	 edx
  007b1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  007b6	83 c4 04	 add	 esp, 4
  007b9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 357  :                                                 _Rrotate(_Parent(_X));

  007bf	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  007c8	83 c4 04	 add	 esp, 4
  007cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  007cd	51		 push	 ecx
  007ce	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007d1	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rrotate

; 358  :                                                 break; }}

  007d6	eb 05		 jmp	 SHORT $L151299
$L151310:
  007d8	e9 ed fb ff ff	 jmp	 $L151298
$L151299:

; 359  :                         _Color(_X) = _Black; }

  007dd	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  007e0	52		 push	 edx
  007e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  007e6	83 c4 04	 add	 esp, 4
  007e9	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L151296:

; 360  :                 _Destval(&_Value(_Y));

  007ef	8b 45 ec	 mov	 eax, DWORD PTR __Y$[ebp]
  007f2	50		 push	 eax
  007f3	e8 00 00 00 00	 call	 ?_Value@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Value
  007f8	83 c4 04	 add	 esp, 4
  007fb	50		 push	 eax
  007fc	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Destval

; 361  :                 _Freenode(_Y);

  00804	8b 4d ec	 mov	 ecx, DWORD PTR __Y$[ebp]
  00807	51		 push	 ecx
  00808	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0080b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Freenode

; 362  :                 --_Size;

  00810	8b 55 d4	 mov	 edx, DWORD PTR _this$[ebp]
  00813	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00816	83 e8 01	 sub	 eax, 1
  00819	8b 4d d4	 mov	 ecx, DWORD PTR _this$[ebp]
  0081c	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 363  :                 return (_P); }

  0081f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00822	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00825	89 02		 mov	 DWORD PTR [edx], eax
  00827	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0082e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00831	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00837	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0083a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0083d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00844	5e		 pop	 esi
  00845	8b e5		 mov	 esp, ebp
  00847	5d		 pop	 ebp
  00848	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156111:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156114:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156113
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::erase
PUBLIC	??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator>
PUBLIC	?lower_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::lower_bound
PUBLIC	?upper_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::upper_bound
;	COMDAT ?equal_range@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@2@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
__Kv$ = 12
$T156119 = -8
$T156120 = -12
$T156121 = -16
___$ReturnUdt$ = 8
_this$ = -20
?equal_range@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@2@ABQAVCSkinCtrl@@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::equal_range, COMDAT

; 410  :                 {return (_Pairii(lower_bound(_Kv), upper_bound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f4	 lea	 ecx, DWORD PTR $T156120[ebp]
  00010	51		 push	 ecx
  00011	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ?upper_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::upper_bound
  00019	50		 push	 eax
  0001a	8b 55 0c	 mov	 edx, DWORD PTR __Kv$[ebp]
  0001d	52		 push	 edx
  0001e	8d 45 f0	 lea	 eax, DWORD PTR $T156121[ebp]
  00021	50		 push	 eax
  00022	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::lower_bound
  0002a	50		 push	 eax
  0002b	8d 4d f8	 lea	 ecx, DWORD PTR $T156119[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator>
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00038	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	89 08		 mov	 DWORD PTR [eax], ecx
  0003d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00040	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?equal_range@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@2@ABQAVCSkinCtrl@@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::equal_range
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156125 DD	019930520H
	DD	01H
	DD	FLAT:$T156127
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156127 DD	0ffffffffH
	DD	FLAT:$L156123
xdata$x	ENDS
;	COMDAT ?_Erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
?_Erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Erase, COMDAT

; 449  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156126
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 450  :                 for (_Nodeptr _Y = _X; _Y != _Nil; _X = _Y)

  0002e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax
  00034	eb 06		 jmp	 SHORT $L151326
$L151327:
  00036	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00039	89 4d 08	 mov	 DWORD PTR __X$[ebp], ecx
$L151326:
  0003c	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  0003f	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00045	74 4b		 je	 SHORT $L151328

; 451  :                         {_Erase(_Right(_Y));

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Erase

; 452  :                         _Y = _Left(_Y);

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	89 45 f0	 mov	 DWORD PTR __Y$[ebp], eax

; 453  :                         _Destval(&_Value(_X));

  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ?_Value@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Value
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Destval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Destval

; 454  :                         _Freenode(_X); }}

  00084	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00087	52		 push	 edx
  00088	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Freenode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Freenode
  00090	eb a4		 jmp	 SHORT $L151327
$L151328:
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156123:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156126:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156125
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Erase@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Erase
EXTRN	__imp__LoadIconA@8:NEAR
;	COMDAT ?LoadStandardIcon@CWinApp@@QBEPAUHICON__@@PBD@Z
_TEXT	SEGMENT
_lpszIconName$ = 8
_this$ = -4
?LoadStandardIcon@CWinApp@@QBEPAUHICON__@@PBD@Z PROC NEAR ; CWinApp::LoadStandardIcon, COMDAT

; 996  : 	{ return ::LoadIcon(NULL, lpszIconName); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpszIconName$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?LoadStandardIcon@CWinApp@@QBEPAUHICON__@@PBD@Z ENDP	; CWinApp::LoadStandardIcon
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Buynode
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156134 DD	019930520H
	DD	01H
	DD	FLAT:$T156136
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156136 DD	0ffffffffH
	DD	FLAT:$L156132
xdata$x	ENDS
;	COMDAT ?_Init@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -20
__Lk$ = -16
?_Init@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXXZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Init, COMDAT

; 456  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156135
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 457  :                 if (_Nil == 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A, 0 ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00035	75 3a		 jne	 SHORT $L151332

; 458  :                         {_Nil = _Buynode(0, _Black);

  00037	6a 01		 push	 1
  00039	6a 00		 push	 0
  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Buynode
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A, eax ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil

; 459  :                         _Left(_Nil) = 0, _Right(_Nil) = 0; }

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00053	83 c4 04	 add	 esp, 4
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00068	83 c4 04	 add	 esp, 4
  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L151332:

; 460  :                 ++_Nilrefs;

  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nilrefs@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1IA ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nilrefs
  00077	83 c2 01	 add	 edx, 1
  0007a	89 15 00 00 00
	00		 mov	 DWORD PTR ?_Nilrefs@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1IA, edx ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nilrefs

; 461  :                 _Head = _Buynode(_Nil, _Red), _Size = 0;

  00080	6a 00		 push	 0
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00087	50		 push	 eax
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Buynode
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00096	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00099	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 462  :                 _Lmost() = _Head, _Rmost() = _Head; }

  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ae	89 10		 mov	 DWORD PTR [eax], edx
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost
  000b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000be	89 10		 mov	 DWORD PTR [eax], edx
  000c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c7	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156132:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156135:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156134
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Init@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXXZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Init
PUBLIC	?_Consval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@ABQAV3@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Consval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156144 DD	019930520H
	DD	01H
	DD	FLAT:$T156146
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156146 DD	0ffffffffH
	DD	FLAT:$L156142
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAE?AViterator@12@PAU_Node@12@0ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
__X$ = 12
__Y$ = 16
__V$ = 20
$T156140 = -24
$T156141 = -28
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -32
__Lk$ = -20
__Z$ = -16
?_Insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAE?AViterator@12@PAU_Node@12@0ABQAVCSkinCtrl@@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Insert, COMDAT

; 464  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156145
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	56		 push	 esi
  0001c	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 465  :                 _Nodeptr _Z = _Buynode(_Y, _Red);

  0002f	6a 00		 push	 0
  00031	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  00034	50		 push	 eax
  00035	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Buynode
  0003d	89 45 f0	 mov	 DWORD PTR __Z$[ebp], eax

; 466  :                 _Left(_Z) = _Nil, _Right(_Z) = _Nil;

  00040	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00052	89 10		 mov	 DWORD PTR [eax], edx
  00054	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00066	89 08		 mov	 DWORD PTR [eax], ecx

; 467  :                 _Consval(&_Value(_Z), _V);

  00068	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?_Value@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Value
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Consval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@ABQAV3@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Consval

; 468  :                 ++_Size;

  00081	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00087	83 c2 01	 add	 edx, 1
  0008a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 470  :                         || key_compare(_Kfn()(_V), _Key(_Y)))

  00090	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00096	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00099	74 39		 je	 SHORT $L151340
  0009b	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0009e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  000a4	75 2e		 jne	 SHORT $L151340
  000a6	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAABQAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Key
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  000b6	52		 push	 edx
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR $T156140[ebp]
  000ba	e8 00 00 00 00	 call	 ??R_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBEABQAVCSkinCtrl@@ABQAV3@@Z ; std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
  000bf	50		 push	 eax
  000c0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 01	 add	 ecx, 1
  000c6	e8 00 00 00 00	 call	 ??R?$less@PAVCSkinCtrl@@@std@@QBE_NABQAVCSkinCtrl@@0@Z ; std::less<CSkinCtrl *>::operator()
  000cb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000d0	85 c0		 test	 eax, eax
  000d2	74 56		 je	 SHORT $L151339
$L151340:

; 471  :                         {_Left(_Y) = _Z;

  000d4	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000e3	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :                         if (_Y == _Head)

  000e5	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000eb	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000ee	75 1c		 jne	 SHORT $L151341

; 473  :                                 {_Root() = _Z;

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx

; 474  :                                 _Rmost() = _Z; }

  000fd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost
  00105	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00108	89 10		 mov	 DWORD PTR [eax], edx

; 475  :                         else if (_Y == _Lmost())

  0010a	eb 1c		 jmp	 SHORT $L151343
$L151341:
  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost
  00114	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00117	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00119	75 0d		 jne	 SHORT $L151343

; 476  :                                 _Lmost() = _Z; }

  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost
  00123	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00126	89 10		 mov	 DWORD PTR [eax], edx
$L151343:

; 477  :                 else

  00128	eb 2d		 jmp	 SHORT $L151345
$L151339:

; 478  :                         {_Right(_Y) = _Z;

  0012a	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00139	89 08		 mov	 DWORD PTR [eax], ecx

; 479  :                         if (_Y == _Rmost())

  0013b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost
  00143	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00146	3b 10		 cmp	 edx, DWORD PTR [eax]
  00148	75 0d		 jne	 SHORT $L151345

; 480  :                                 _Rmost() = _Z; }

  0014a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost
  00152	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00155	89 08		 mov	 DWORD PTR [eax], ecx
$L151345:

; 481  :                 for (_X = _Z; _X != _Root()

  00157	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  0015a	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx
$L151347:

; 482  :                         && _Color(_Parent(_X)) == _Red; )

  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00168	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016a	0f 84 08 03 00
	00		 je	 $L151348
  00170	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00179	83 c4 04	 add	 esp, 4
  0017c	8b 00		 mov	 eax, DWORD PTR [eax]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00184	83 c4 04	 add	 esp, 4
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	0f 85 e8 02 00
	00		 jne	 $L151348

; 483  :                         if (_Parent(_X) == _Left(_Parent(_Parent(_X))))

  00190	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00199	83 c4 04	 add	 esp, 4
  0019c	8b f0		 mov	 esi, eax
  0019e	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  001a7	83 c4 04	 add	 esp, 4
  001aa	8b 00		 mov	 eax, DWORD PTR [eax]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  001b2	83 c4 04	 add	 esp, 4
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  001bd	83 c4 04	 add	 esp, 4
  001c0	8b 16		 mov	 edx, DWORD PTR [esi]
  001c2	3b 10		 cmp	 edx, DWORD PTR [eax]
  001c4	0f 85 57 01 00
	00		 jne	 $L151349

; 484  :                                 {_Y = _Right(_Parent(_Parent(_X)));

  001ca	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  001d3	83 c4 04	 add	 esp, 4
  001d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  001de	83 c4 04	 add	 esp, 4
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  001e9	83 c4 04	 add	 esp, 4
  001ec	8b 00		 mov	 eax, DWORD PTR [eax]
  001ee	89 45 10	 mov	 DWORD PTR __Y$[ebp], eax

; 485  :                                 if (_Color(_Y) == _Red)

  001f1	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  001fa	83 c4 04	 add	 esp, 4
  001fd	83 38 00	 cmp	 DWORD PTR [eax], 0
  00200	75 78		 jne	 SHORT $L151350

; 486  :                                         {_Color(_Parent(_X)) = _Black;

  00202	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0020b	83 c4 04	 add	 esp, 4
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00216	83 c4 04	 add	 esp, 4
  00219	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 487  :                                         _Color(_Y) = _Black;

  0021f	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00228	83 c4 04	 add	 esp, 4
  0022b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 488  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00231	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0023a	83 c4 04	 add	 esp, 4
  0023d	8b 00		 mov	 eax, DWORD PTR [eax]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00245	83 c4 04	 add	 esp, 4
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00250	83 c4 04	 add	 esp, 4
  00253	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 489  :                                         _X = _Parent(_Parent(_X)); }

  00259	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00262	83 c4 04	 add	 esp, 4
  00265	8b 00		 mov	 eax, DWORD PTR [eax]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0026d	83 c4 04	 add	 esp, 4
  00270	8b 08		 mov	 ecx, DWORD PTR [eax]
  00272	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 490  :                                 else

  00275	e9 a2 00 00 00	 jmp	 $L151351
$L151350:

; 491  :                                         {if (_X == _Right(_Parent(_X)))

  0027a	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 00		 mov	 eax, DWORD PTR [eax]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0028e	83 c4 04	 add	 esp, 4
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00294	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00296	75 1d		 jne	 SHORT $L151352

; 492  :                                                 {_X = _Parent(_X);

  00298	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0029b	52		 push	 edx
  0029c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 00		 mov	 eax, DWORD PTR [eax]
  002a6	89 45 0c	 mov	 DWORD PTR __X$[ebp], eax

; 493  :                                                 _Lrotate(_X); }

  002a9	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002ac	51		 push	 ecx
  002ad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lrotate
$L151352:

; 494  :                                         _Color(_Parent(_X)) = _Black;

  002b5	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  002be	83 c4 04	 add	 esp, 4
  002c1	8b 00		 mov	 eax, DWORD PTR [eax]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  002c9	83 c4 04	 add	 esp, 4
  002cc	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 495  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  002d2	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  002db	83 c4 04	 add	 esp, 4
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  002e6	83 c4 04	 add	 esp, 4
  002e9	8b 00		 mov	 eax, DWORD PTR [eax]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  002f1	83 c4 04	 add	 esp, 4
  002f4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 496  :                                         _Rrotate(_Parent(_Parent(_X))); }}

  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00303	83 c4 04	 add	 esp, 4
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0030e	83 c4 04	 add	 esp, 4
  00311	8b 00		 mov	 eax, DWORD PTR [eax]
  00313	50		 push	 eax
  00314	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rrotate
$L151351:

; 497  :                         else

  0031c	e9 52 01 00 00	 jmp	 $L151355
$L151349:

; 498  :                                 {_Y = _Left(_Parent(_Parent(_X)));

  00321	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0032a	83 c4 04	 add	 esp, 4
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00340	83 c4 04	 add	 esp, 4
  00343	8b 08		 mov	 ecx, DWORD PTR [eax]
  00345	89 4d 10	 mov	 DWORD PTR __Y$[ebp], ecx

; 499  :                                 if (_Color(_Y) == _Red)

  00348	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  0034b	52		 push	 edx
  0034c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00351	83 c4 04	 add	 esp, 4
  00354	83 38 00	 cmp	 DWORD PTR [eax], 0
  00357	75 78		 jne	 SHORT $L151354

; 500  :                                         {_Color(_Parent(_X)) = _Black;

  00359	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00362	83 c4 04	 add	 esp, 4
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  0036d	83 c4 04	 add	 esp, 4
  00370	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 501  :                                         _Color(_Y) = _Black;

  00376	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00379	52		 push	 edx
  0037a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  0037f	83 c4 04	 add	 esp, 4
  00382	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 502  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00388	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00391	83 c4 04	 add	 esp, 4
  00394	8b 08		 mov	 ecx, DWORD PTR [eax]
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0039c	83 c4 04	 add	 esp, 4
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  003a7	83 c4 04	 add	 esp, 4
  003aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 503  :                                         _X = _Parent(_Parent(_X)); }

  003b0	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	51		 push	 ecx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 10		 mov	 edx, DWORD PTR [eax]
  003c9	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx

; 504  :                                 else

  003cc	e9 a2 00 00 00	 jmp	 $L151355
$L151354:

; 505  :                                         {if (_X == _Left(_Parent(_X)))

  003d1	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  003da	83 c4 04	 add	 esp, 4
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	51		 push	 ecx
  003e0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  003e5	83 c4 04	 add	 esp, 4
  003e8	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  003eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ed	75 1d		 jne	 SHORT $L151356

; 506  :                                                 {_X = _Parent(_X);

  003ef	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  003f8	83 c4 04	 add	 esp, 4
  003fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fd	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 507  :                                                 _Rrotate(_X); }

  00400	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00403	52		 push	 edx
  00404	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00407	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rrotate
$L151356:

; 508  :                                         _Color(_Parent(_X)) = _Black;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00415	83 c4 04	 add	 esp, 4
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00420	83 c4 04	 add	 esp, 4
  00423	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 509  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00429	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00432	83 c4 04	 add	 esp, 4
  00435	8b 00		 mov	 eax, DWORD PTR [eax]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0043d	83 c4 04	 add	 esp, 4
  00440	8b 08		 mov	 ecx, DWORD PTR [eax]
  00442	51		 push	 ecx
  00443	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00448	83 c4 04	 add	 esp, 4
  0044b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 510  :                                         _Lrotate(_Parent(_Parent(_X))); }}

  00451	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0045a	83 c4 04	 add	 esp, 4
  0045d	8b 00		 mov	 eax, DWORD PTR [eax]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00465	83 c4 04	 add	 esp, 4
  00468	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046a	51		 push	 ecx
  0046b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lrotate
$L151355:
  00473	e9 e5 fc ff ff	 jmp	 $L151347
$L151348:

; 511  :                 _Color(_Root()) = _Black;

  00478	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  00480	8b 10		 mov	 edx, DWORD PTR [eax]
  00482	52		 push	 edx
  00483	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00488	83 c4 04	 add	 esp, 4
  0048b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 512  :                 return (iterator(_Z)); }

  00491	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e4	 lea	 ecx, DWORD PTR $T156141[ebp]
  00498	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator
  0049d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  004a2	89 0a		 mov	 DWORD PTR [edx], ecx
  004a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ab	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  004b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	5e		 pop	 esi
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156142:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156145:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156144
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAE?AViterator@12@PAU_Node@12@0ABQAVCSkinCtrl@@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Insert
;	COMDAT ?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost, COMDAT

; 524  :                 {return (_Left(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Lmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lmost
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost, COMDAT

; 553  :                 {return (_Right(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Rmost@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rmost
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root, COMDAT

; 557  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156155 DD	019930520H
	DD	01H
	DD	FLAT:$T156157
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156157 DD	0ffffffffH
	DD	FLAT:$L156153
xdata$x	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -24
__Lk$ = -16
__P$151369 = -20
?_Inc@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Inc, COMDAT

; 104  :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156156
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  :                         if (_Right(_Ptr) != _Nil)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00044	74 20		 je	 SHORT $L151367

; 106  :                                 _Ptr = _Min(_Right(_Ptr));

  00046	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 107  :                         else

  00064	eb 4f		 jmp	 SHORT $L151373
$L151367:

; 109  :                                 while (_Ptr == _Right(_P = _Parent(_Ptr)))

  00066	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d ec	 mov	 DWORD PTR __P$151369[ebp], ecx
  00079	8b 55 ec	 mov	 edx, DWORD PTR __P$151369[ebp]
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00082	83 c4 04	 add	 esp, 4
  00085	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0008c	75 0a		 jne	 SHORT $L151372

; 110  :                                         _Ptr = _P;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __P$151369[ebp]
  00094	89 08		 mov	 DWORD PTR [eax], ecx
  00096	eb ce		 jmp	 SHORT $L151367
$L151372:

; 111  :                                 if (_Right(_Ptr) != _P)

  00098	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	3b 4d ec	 cmp	 ecx, DWORD PTR __P$151369[ebp]
  000ab	74 08		 je	 SHORT $L151373

; 112  :                                         _Ptr = _P; }}

  000ad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __P$151369[ebp]
  000b3	89 02		 mov	 DWORD PTR [edx], eax
$L151373:
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156153:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156156:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156155
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Inc@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Inc
;	COMDAT ?_Mynode@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode, COMDAT

; 114  :                         {return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEPAU_Node@23@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
;	COMDAT ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator, COMDAT

; 124  :                 iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Dec
;	COMDAT ??Fiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator--, COMDAT

; 138  :                         {_Dec();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Dec

; 139  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator--
_TEXT	ENDS
;	COMDAT ??R?$less@PAVCSkinCtrl@@@std@@QBE_NABQAVCSkinCtrl@@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
_this$ = -4
??R?$less@PAVCSkinCtrl@@@std@@QBE_NABQAVCSkinCtrl@@0@Z PROC NEAR ; std::less<CSkinCtrl *>::operator(), COMDAT

; 86   : 		{return (_X < _Y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Y$[ebp]
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00011	1b c0		 sbb	 eax, eax
  00013	f7 d8		 neg	 eax
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
??R?$less@PAVCSkinCtrl@@@std@@QBE_NABQAVCSkinCtrl@@0@Z ENDP ; std::less<CSkinCtrl *>::operator()
_TEXT	ENDS
;	COMDAT ?_Trim@?$bitset@$05@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4
?_Trim@?$bitset@$05@std@@AAEXXZ PROC NEAR		; std::bitset<6>::_Trim, COMDAT

; 242  : 		{if (_N % _Nb != 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	b8 01 00 00 00	 mov	 eax, 1
  0000c	85 c0		 test	 eax, eax
  0000e	74 0d		 je	 SHORT $L151384

; 243  : 			_A[_Nw] &= ((_Ty)1 << _N % _Nb) - 1; }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	83 e2 3f	 and	 edx, 63			; 0000003fH
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	89 10		 mov	 DWORD PTR [eax], edx
$L151384:
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?_Trim@?$bitset@$05@std@@AAEXXZ ENDP			; std::bitset<6>::_Trim
_TEXT	ENDS
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
PUBLIC	??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
EXTRN	__imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:NEAR
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z:NEAR
EXTRN	??0logic_error@std@@QAE@ABV01@@Z:NEAR		; std::logic_error::logic_error
EXTRN	??1out_of_range@std@@UAE@XZ:NEAR		; std::out_of_range::~out_of_range
EXTRN	??0out_of_range@std@@QAE@ABV01@@Z:NEAR		; std::out_of_range::out_of_range
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT ??_R0?AVexception@@@8
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\bitset
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT
??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ DB 'invalid bitset'
	DB	'<N> position', 00H				; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T156172 DD	019930520H
	DD	01H
	DD	FLAT:$T156174
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156174 DD	0ffffffffH
	DD	FLAT:$L156170
xdata$x	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT
$T156166 = -40
$T156167 = -56
$T156168 = -60
__$EHRec$ = -12
_this$ = -64
?_Xran@?$bitset@$05@std@@ABEXXZ PROC NEAR		; std::bitset<6>::_Xran, COMDAT

; 250  : 		{_THROW(out_of_range, "invalid bitset<N> position"); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156173
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 34	 sub	 esp, 52			; 00000034H
  0001b	89 4d c0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 45 c4	 lea	 eax, DWORD PTR $T156168[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@ ; `string'
  00027	8d 4d c8	 lea	 ecx, DWORD PTR $T156167[ebp]
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8d 4d c8	 lea	 ecx, DWORD PTR $T156167[ebp]
  0003a	51		 push	 ecx
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T156166[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00044	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00049	8d 55 d8	 lea	 edx, DWORD PTR $T156166[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$L151387:
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156170:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T156167[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00009	c3		 ret	 0
$L156173:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156172
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$bitset@$05@std@@ABEXXZ ENDP			; std::bitset<6>::_Xran
PUBLIC	?destroy@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@@Z ; std::allocator<CSkinCtrl *>::destroy
;	COMDAT ?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__P$ = 12
$T156178 = -8
___$ReturnUdt$ = 8
_this$ = -12
__S$ = -4
?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::erase, COMDAT

; 235  : 		{_Nodeptr _S = (_P++)._Mynode();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	6a 00		 push	 0
  0000c	8d 45 f8	 lea	 eax, DWORD PTR $T156178[ebp]
  0000f	50		 push	 eax
  00010	8d 4d 0c	 lea	 ecx, DWORD PTR __P$[ebp]
  00013	e8 00 00 00 00	 call	 ??Eiterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AV012@H@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::iterator::operator++
  00018	8b c8		 mov	 ecx, eax
  0001a	e8 00 00 00 00	 call	 ?_Mynode@const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEPAU_Node@23@XZ ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
  0001f	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 236  : 		_Acc::_Next(_Acc::_Prev(_S)) = _Acc::_Next(_S);

  00022	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Next
  0002b	83 c4 04	 add	 esp, 4
  0002e	8b f0		 mov	 esi, eax
  00030	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  00033	52		 push	 edx
  00034	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 00		 mov	 eax, DWORD PTR [eax]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Next
  00044	83 c4 04	 add	 esp, 4
  00047	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00049	89 08		 mov	 DWORD PTR [eax], ecx

; 237  : 		_Acc::_Prev(_Acc::_Next(_S)) = _Acc::_Prev(_S);

  0004b	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev
  00054	83 c4 04	 add	 esp, 4
  00057	8b f0		 mov	 esi, eax
  00059	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?_Next@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Next
  00062	83 c4 04	 add	 esp, 4
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev
  0006d	83 c4 04	 add	 esp, 4
  00070	8b 16		 mov	 edx, DWORD PTR [esi]
  00072	89 10		 mov	 DWORD PTR [eax], edx

; 238  : 		allocator.destroy(&_Acc::_Value(_S));

  00074	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Value@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAVCSkinCtrl@@PAU_Node@23@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Value
  0007d	83 c4 04	 add	 esp, 4
  00080	50		 push	 eax
  00081	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?destroy@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@@Z ; std::allocator<CSkinCtrl *>::destroy

; 239  : 		_Freenode(_S);

  00089	8b 4d fc	 mov	 ecx, DWORD PTR __S$[ebp]
  0008c	51		 push	 ecx
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Freenode@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@IAEXPAU_Node@12@@Z ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Freenode

; 240  : 		--_Size;

  00095	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00098	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009b	83 e8 01	 sub	 eax, 1
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 241  : 		return (_P); }

  000a4	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  000a7	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  000aa	89 02		 mov	 DWORD PTR [edx], eax
  000ac	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000af	5e		 pop	 esi
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 08 00	 ret	 8
?erase@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::erase
_TEXT	ENDS
;	COMDAT ?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z
_TEXT	SEGMENT
__P$ = 8
?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev, COMDAT

; 39   : 			{return ((_Nodepref)(*_P)._Prev); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Prev@_Acc@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::_Acc::_Prev
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??0const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator, COMDAT

; 61   : 		const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QAE@PAU_Node@12@@Z ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEPAU_Node@23@XZ
_TEXT	SEGMENT
_this$ = -4
?_Mynode@const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEPAU_Node@23@XZ PROC NEAR ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode, COMDAT

; 88   : 			{return (_Ptr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@const_iterator@?$list@PAVCSkinCtrl@@V?$allocator@PAVCSkinCtrl@@@std@@@std@@QBEPAU_Node@23@XZ ENDP ; std::list<CSkinCtrl *,std::allocator<CSkinCtrl *> >::const_iterator::_Mynode
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@AB_N@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@AB_N@Z ENDP ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,bool>
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@AB_N@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __V2$[ebp]
  00017	8a 11		 mov	 dl, BYTE PTR [ecx]
  00019	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@_N@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@AB_N@Z ENDP ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,bool>
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QBEABQAUHWND__@@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??R_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QBEABQAUHWND__@@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z PROC NEAR ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn::operator(), COMDAT

; 26   : 		{return (_X.first); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??R_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QBEABQAUHWND__@@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ENDP ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn::operator()
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color, COMDAT

; 36   :                 {return ((_Rbref)(*_P)._Color); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 14	 add	 eax, 20			; 00000014H
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left, COMDAT

; 40   :                 {return ((_Nodepref)(*_P)._Left); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent, COMDAT

; 42   :                 {return ((_Nodepref)(*_P)._Parent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right, COMDAT

; 44   :                 {return ((_Nodepref)(*_P)._Right); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Ubound
;	COMDAT ?upper_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z
_TEXT	SEGMENT
__Kv$ = 12
$T156190 = -4
___$ReturnUdt$ = 8
_this$ = -8
?upper_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::upper_bound, COMDAT

; 406  :                 {return (iterator(_Ubound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Ubound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Ubound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T156190[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?upper_bound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE?AViterator@12@ABQAUHWND__@@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Consval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@ABU32@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Consval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156196 DD	019930520H
	DD	01H
	DD	FLAT:$T156198
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156198 DD	0ffffffffH
	DD	FLAT:$L156194
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z
_TEXT	SEGMENT
__X$ = 12
__Y$ = 16
__V$ = 20
$T156192 = -24
$T156193 = -28
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -32
__Lk$ = -20
__Z$ = -16
?_Insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Insert, COMDAT

; 464  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156197
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	56		 push	 esi
  0001c	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 465  :                 _Nodeptr _Z = _Buynode(_Y, _Red);

  0002f	6a 00		 push	 0
  00031	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  00034	50		 push	 eax
  00035	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Buynode
  0003d	89 45 f0	 mov	 DWORD PTR __Z$[ebp], eax

; 466  :                 _Left(_Z) = _Nil, _Right(_Z) = _Nil;

  00040	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00052	89 10		 mov	 DWORD PTR [eax], edx
  00054	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00066	89 08		 mov	 DWORD PTR [eax], ecx

; 467  :                 _Consval(&_Value(_Z), _V);

  00068	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?_Value@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Value
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Consval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@ABU32@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Consval

; 468  :                 ++_Size;

  00081	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00087	83 c2 01	 add	 edx, 1
  0008a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 470  :                         || key_compare(_Kfn()(_V), _Key(_Y)))

  00090	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00096	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00099	74 39		 je	 SHORT $L151503
  0009b	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0009e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  000a4	75 2e		 jne	 SHORT $L151503
  000a6	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Key
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  000b6	52		 push	 edx
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR $T156192[ebp]
  000ba	e8 00 00 00 00	 call	 ??R_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@std@@QBEABQAUHWND__@@ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ; std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn::operator()
  000bf	50		 push	 eax
  000c0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 01	 add	 ecx, 1
  000c6	e8 00 00 00 00	 call	 ??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ; std::less<HWND__ *>::operator()
  000cb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000d0	85 c0		 test	 eax, eax
  000d2	74 56		 je	 SHORT $L151502
$L151503:

; 471  :                         {_Left(_Y) = _Z;

  000d4	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000e3	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :                         if (_Y == _Head)

  000e5	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000eb	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000ee	75 1c		 jne	 SHORT $L151504

; 473  :                                 {_Root() = _Z;

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx

; 474  :                                 _Rmost() = _Z; }

  000fd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost
  00105	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00108	89 10		 mov	 DWORD PTR [eax], edx

; 475  :                         else if (_Y == _Lmost())

  0010a	eb 1c		 jmp	 SHORT $L151506
$L151504:
  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost
  00114	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00117	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00119	75 0d		 jne	 SHORT $L151506

; 476  :                                 _Lmost() = _Z; }

  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lmost
  00123	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00126	89 10		 mov	 DWORD PTR [eax], edx
$L151506:

; 477  :                 else

  00128	eb 2d		 jmp	 SHORT $L151508
$L151502:

; 478  :                         {_Right(_Y) = _Z;

  0012a	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00139	89 08		 mov	 DWORD PTR [eax], ecx

; 479  :                         if (_Y == _Rmost())

  0013b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost
  00143	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00146	3b 10		 cmp	 edx, DWORD PTR [eax]
  00148	75 0d		 jne	 SHORT $L151508

; 480  :                                 _Rmost() = _Z; }

  0014a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rmost
  00152	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00155	89 08		 mov	 DWORD PTR [eax], ecx
$L151508:

; 481  :                 for (_X = _Z; _X != _Root()

  00157	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  0015a	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx
$L151510:

; 482  :                         && _Color(_Parent(_X)) == _Red; )

  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00168	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016a	0f 84 08 03 00
	00		 je	 $L151511
  00170	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00179	83 c4 04	 add	 esp, 4
  0017c	8b 00		 mov	 eax, DWORD PTR [eax]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00184	83 c4 04	 add	 esp, 4
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	0f 85 e8 02 00
	00		 jne	 $L151511

; 483  :                         if (_Parent(_X) == _Left(_Parent(_Parent(_X))))

  00190	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00199	83 c4 04	 add	 esp, 4
  0019c	8b f0		 mov	 esi, eax
  0019e	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  001a7	83 c4 04	 add	 esp, 4
  001aa	8b 00		 mov	 eax, DWORD PTR [eax]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  001b2	83 c4 04	 add	 esp, 4
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  001bd	83 c4 04	 add	 esp, 4
  001c0	8b 16		 mov	 edx, DWORD PTR [esi]
  001c2	3b 10		 cmp	 edx, DWORD PTR [eax]
  001c4	0f 85 57 01 00
	00		 jne	 $L151512

; 484  :                                 {_Y = _Right(_Parent(_Parent(_X)));

  001ca	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  001d3	83 c4 04	 add	 esp, 4
  001d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  001de	83 c4 04	 add	 esp, 4
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  001e9	83 c4 04	 add	 esp, 4
  001ec	8b 00		 mov	 eax, DWORD PTR [eax]
  001ee	89 45 10	 mov	 DWORD PTR __Y$[ebp], eax

; 485  :                                 if (_Color(_Y) == _Red)

  001f1	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  001fa	83 c4 04	 add	 esp, 4
  001fd	83 38 00	 cmp	 DWORD PTR [eax], 0
  00200	75 78		 jne	 SHORT $L151513

; 486  :                                         {_Color(_Parent(_X)) = _Black;

  00202	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0020b	83 c4 04	 add	 esp, 4
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00216	83 c4 04	 add	 esp, 4
  00219	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 487  :                                         _Color(_Y) = _Black;

  0021f	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00228	83 c4 04	 add	 esp, 4
  0022b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 488  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00231	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0023a	83 c4 04	 add	 esp, 4
  0023d	8b 00		 mov	 eax, DWORD PTR [eax]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00245	83 c4 04	 add	 esp, 4
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00250	83 c4 04	 add	 esp, 4
  00253	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 489  :                                         _X = _Parent(_Parent(_X)); }

  00259	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00262	83 c4 04	 add	 esp, 4
  00265	8b 00		 mov	 eax, DWORD PTR [eax]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0026d	83 c4 04	 add	 esp, 4
  00270	8b 08		 mov	 ecx, DWORD PTR [eax]
  00272	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 490  :                                 else

  00275	e9 a2 00 00 00	 jmp	 $L151514
$L151513:

; 491  :                                         {if (_X == _Right(_Parent(_X)))

  0027a	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 00		 mov	 eax, DWORD PTR [eax]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0028e	83 c4 04	 add	 esp, 4
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00294	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00296	75 1d		 jne	 SHORT $L151515

; 492  :                                                 {_X = _Parent(_X);

  00298	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0029b	52		 push	 edx
  0029c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 00		 mov	 eax, DWORD PTR [eax]
  002a6	89 45 0c	 mov	 DWORD PTR __X$[ebp], eax

; 493  :                                                 _Lrotate(_X); }

  002a9	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002ac	51		 push	 ecx
  002ad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lrotate
$L151515:

; 494  :                                         _Color(_Parent(_X)) = _Black;

  002b5	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  002be	83 c4 04	 add	 esp, 4
  002c1	8b 00		 mov	 eax, DWORD PTR [eax]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  002c9	83 c4 04	 add	 esp, 4
  002cc	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 495  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  002d2	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  002db	83 c4 04	 add	 esp, 4
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  002e6	83 c4 04	 add	 esp, 4
  002e9	8b 00		 mov	 eax, DWORD PTR [eax]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  002f1	83 c4 04	 add	 esp, 4
  002f4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 496  :                                         _Rrotate(_Parent(_Parent(_X))); }}

  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00303	83 c4 04	 add	 esp, 4
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0030e	83 c4 04	 add	 esp, 4
  00311	8b 00		 mov	 eax, DWORD PTR [eax]
  00313	50		 push	 eax
  00314	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rrotate
$L151514:

; 497  :                         else

  0031c	e9 52 01 00 00	 jmp	 $L151518
$L151512:

; 498  :                                 {_Y = _Left(_Parent(_Parent(_X)));

  00321	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0032a	83 c4 04	 add	 esp, 4
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00340	83 c4 04	 add	 esp, 4
  00343	8b 08		 mov	 ecx, DWORD PTR [eax]
  00345	89 4d 10	 mov	 DWORD PTR __Y$[ebp], ecx

; 499  :                                 if (_Color(_Y) == _Red)

  00348	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  0034b	52		 push	 edx
  0034c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00351	83 c4 04	 add	 esp, 4
  00354	83 38 00	 cmp	 DWORD PTR [eax], 0
  00357	75 78		 jne	 SHORT $L151517

; 500  :                                         {_Color(_Parent(_X)) = _Black;

  00359	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00362	83 c4 04	 add	 esp, 4
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  0036d	83 c4 04	 add	 esp, 4
  00370	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 501  :                                         _Color(_Y) = _Black;

  00376	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00379	52		 push	 edx
  0037a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  0037f	83 c4 04	 add	 esp, 4
  00382	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 502  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00388	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00391	83 c4 04	 add	 esp, 4
  00394	8b 08		 mov	 ecx, DWORD PTR [eax]
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0039c	83 c4 04	 add	 esp, 4
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  003a7	83 c4 04	 add	 esp, 4
  003aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 503  :                                         _X = _Parent(_Parent(_X)); }

  003b0	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	51		 push	 ecx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 10		 mov	 edx, DWORD PTR [eax]
  003c9	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx

; 504  :                                 else

  003cc	e9 a2 00 00 00	 jmp	 $L151518
$L151517:

; 505  :                                         {if (_X == _Left(_Parent(_X)))

  003d1	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  003da	83 c4 04	 add	 esp, 4
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	51		 push	 ecx
  003e0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  003e5	83 c4 04	 add	 esp, 4
  003e8	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  003eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ed	75 1d		 jne	 SHORT $L151519

; 506  :                                                 {_X = _Parent(_X);

  003ef	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  003f8	83 c4 04	 add	 esp, 4
  003fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fd	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 507  :                                                 _Rrotate(_X); }

  00400	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00403	52		 push	 edx
  00404	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00407	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rrotate
$L151519:

; 508  :                                         _Color(_Parent(_X)) = _Black;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00415	83 c4 04	 add	 esp, 4
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00420	83 c4 04	 add	 esp, 4
  00423	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 509  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00429	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00432	83 c4 04	 add	 esp, 4
  00435	8b 00		 mov	 eax, DWORD PTR [eax]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0043d	83 c4 04	 add	 esp, 4
  00440	8b 08		 mov	 ecx, DWORD PTR [eax]
  00442	51		 push	 ecx
  00443	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00448	83 c4 04	 add	 esp, 4
  0044b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 510  :                                         _Lrotate(_Parent(_Parent(_X))); }}

  00451	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0045a	83 c4 04	 add	 esp, 4
  0045d	8b 00		 mov	 eax, DWORD PTR [eax]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00465	83 c4 04	 add	 esp, 4
  00468	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046a	51		 push	 ecx
  0046b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lrotate
$L151518:
  00473	e9 e5 fc ff ff	 jmp	 $L151510
$L151511:

; 511  :                 _Color(_Root()) = _Black;

  00478	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  00480	8b 10		 mov	 edx, DWORD PTR [eax]
  00482	52		 push	 edx
  00483	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00488	83 c4 04	 add	 esp, 4
  0048b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 512  :                 return (iterator(_Z)); }

  00491	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e4	 lea	 ecx, DWORD PTR $T156193[ebp]
  00498	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::iterator
  0049d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  004a2	89 0a		 mov	 DWORD PTR [edx], ecx
  004a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ab	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  004b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	5e		 pop	 esi
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156194:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156197:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156196
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Insert
PUBLIC	?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156205 DD	019930520H
	DD	01H
	DD	FLAT:$T156207
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156207 DD	0ffffffffH
	DD	FLAT:$L156203
xdata$x	ENDS
;	COMDAT ?_Lbound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z
_TEXT	SEGMENT
__Kv$ = 8
$T156202 = -28
__$EHRec$ = -12
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
?_Lbound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lbound, COMDAT

; 514  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156206
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 515  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 516  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L151527:

; 517  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  0004d	74 51		 je	 SHORT $L151528

; 518  :                         if (key_compare(_Key(_X), _Kv))

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Key
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ; std::less<HWND__ *>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 13		 je	 SHORT $L151529

; 519  :                                 _X = _Right(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx

; 520  :                         else

  00085	eb 17		 jmp	 SHORT $L151530
$L151529:

; 521  :                                 _Y = _X, _X = _Left(_X);

  00087	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0008a	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L151530:
  0009e	eb a4		 jmp	 SHORT $L151527
$L151528:

; 522  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T156202[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T156202[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156203:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156206:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156205
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lbound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lbound
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156213 DD	019930520H
	DD	01H
	DD	FLAT:$T156215
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156215 DD	0ffffffffH
	DD	FLAT:$L156211
xdata$x	ENDS
;	COMDAT ?_Lrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
__X$ = 8
__$EHRec$ = -12
_this$ = -24
__Lk$ = -20
__Y$ = -16
?_Lrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lrotate, COMDAT

; 528  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156214
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 529  :                 _Nodeptr _Y = _Right(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 530  :                 _Right(_X) = _Left(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 531  :                 if (_Left(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00072	74 1c		 je	 SHORT $L151536

; 532  :                         _Parent(_Left(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L151536:

; 533  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 534  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L151537

; 535  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 536  :                 else if (_X == _Left(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L151540
$L151537:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L151539

; 537  :                         _Left(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 538  :                 else

  00106	eb 1c		 jmp	 SHORT $L151540
$L151539:

; 539  :                         _Right(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L151540:

; 540  :                 _Left(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156211:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156214:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156213
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Lrotate
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156222 DD	019930520H
	DD	01H
	DD	FLAT:$T156224
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156224 DD	0ffffffffH
	DD	FLAT:$L156220
xdata$x	ENDS
;	COMDAT ?_Max@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
$T156219 = -20
__$EHRec$ = -12
__Lk$ = -16
?_Max@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Max, COMDAT

; 543  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156223
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L151544:

; 544  :                 while (_Right(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  0003f	74 13		 je	 SHORT $L151545

; 545  :                         _P = _Right(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L151544
$L151545:

; 546  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T156219[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T156219[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156220:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156223:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156222
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Max@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Max
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156231 DD	019930520H
	DD	01H
	DD	FLAT:$T156233
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156233 DD	0ffffffffH
	DD	FLAT:$L156229
xdata$x	ENDS
;	COMDAT ?_Min@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
$T156228 = -20
__$EHRec$ = -12
__Lk$ = -16
?_Min@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Min, COMDAT

; 548  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156232
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L151550:

; 549  :                 while (_Left(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  0003f	74 13		 je	 SHORT $L151551

; 550  :                         _P = _Left(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L151550
$L151551:

; 551  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T156228[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T156228[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156229:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156232:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156231
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Min@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Min
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156239 DD	019930520H
	DD	01H
	DD	FLAT:$T156241
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156241 DD	0ffffffffH
	DD	FLAT:$L156237
xdata$x	ENDS
;	COMDAT ?_Rrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
__$EHRec$ = -12
?_Rrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rrotate, COMDAT

; 561  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156240
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :                 _Nodeptr _Y = _Left(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 563  :                 _Left(_X) = _Right(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 564  :                 if (_Right(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00072	74 1c		 je	 SHORT $L151557

; 565  :                         _Parent(_Right(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L151557:

; 566  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 567  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L151558

; 568  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 569  :                 else if (_X == _Right(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L151561
$L151558:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L151560

; 570  :                         _Right(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 571  :                 else

  00106	eb 1c		 jmp	 SHORT $L151561
$L151560:

; 572  :                         _Left(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L151561:

; 573  :                 _Right(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 574  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156237:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156240:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156239
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Rrotate@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Rrotate
PUBLIC	?_Charalloc@?$allocator@PAVCSkinWnd@@@std@@QAEPADI@Z ; std::allocator<CSkinWnd *>::_Charalloc
;	COMDAT ?_Buynode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT
_this$ = -8
__S$ = -4
__Parg$ = 8
__Carg$ = 12
?_Buynode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Buynode, COMDAT

; 586  :                 {_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  :                         1 * sizeof (_Node));

  00009	6a 18		 push	 24			; 00000018H
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCSkinWnd@@@std@@QAEPADI@Z ; std::allocator<CSkinWnd *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 588  :                 _Parent(_S) = _Parg;

  00016	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 589  :                 _Color(_S) = _Carg;

  00027	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00030	83 c4 04	 add	 esp, 4
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Carg$[ebp]
  00036	89 08		 mov	 DWORD PTR [eax], ecx

; 590  :                 return (_S); }

  00038	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?_Buynode@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@@Z ; std::_Destroy
;	COMDAT ?_Destval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?_Destval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Destval, COMDAT

; 594  :                 {_Destroy(&*_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Destval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Destval
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::const_iterator, COMDAT

; 65   :                 const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Inc
;	COMDAT ??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator++, COMDAT

; 131  :                         {_Inc();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Inc

; 132  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Dec
;	COMDAT ??Fiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator--, COMDAT

; 138  :                         {_Dec();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Dec

; 139  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator--
_TEXT	ENDS
;	COMDAT ??R_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z
_TEXT	SEGMENT
_this$ = -4
__X$ = 8
??R_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z PROC NEAR ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn::operator(), COMDAT

; 26   : 		{return (_X.first); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??R_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ENDP ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAPAVCSkinCtrl@@@Z		; std::_Destroy
;	COMDAT ?destroy@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?destroy@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@@Z PROC NEAR ; std::allocator<CSkinCtrl *>::destroy, COMDAT

; 68   : 		{_Destroy(_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAPAVCSkinCtrl@@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?destroy@?$allocator@PAVCSkinCtrl@@@std@@QAEXPAPAVCSkinCtrl@@@Z ENDP ; std::allocator<CSkinCtrl *>::destroy
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color, COMDAT

; 36   :                 {return ((_Rbref)(*_P)._Color); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 18	 add	 eax, 24			; 00000018H
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left, COMDAT

; 40   :                 {return ((_Nodepref)(*_P)._Left); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent, COMDAT

; 42   :                 {return ((_Nodepref)(*_P)._Parent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right, COMDAT

; 44   :                 {return ((_Nodepref)(*_P)._Right); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 08	 add	 eax, 8
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Ubound
;	COMDAT ?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
$T156256 = -4
__Kv$ = 12
?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::upper_bound, COMDAT

; 406  :                 {return (iterator(_Ubound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Ubound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T156256[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?upper_bound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE?AViterator@12@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@ABU32@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Consval
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156262 DD	019930520H
	DD	01H
	DD	FLAT:$T156264
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156264 DD	0ffffffffH
	DD	FLAT:$L156260
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -32
__Lk$ = -20
__Z$ = -16
$T156258 = -24
$T156259 = -28
__$EHRec$ = -12
__X$ = 12
__Y$ = 16
__V$ = 20
?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Insert, COMDAT

; 464  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156263
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	56		 push	 esi
  0001c	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 465  :                 _Nodeptr _Z = _Buynode(_Y, _Red);

  0002f	6a 00		 push	 0
  00031	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  00034	50		 push	 eax
  00035	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Buynode
  0003d	89 45 f0	 mov	 DWORD PTR __Z$[ebp], eax

; 466  :                 _Left(_Z) = _Nil, _Right(_Z) = _Nil;

  00040	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00052	89 10		 mov	 DWORD PTR [eax], edx
  00054	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00066	89 08		 mov	 DWORD PTR [eax], ecx

; 467  :                 _Consval(&_Value(_Z), _V);

  00068	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  0006b	52		 push	 edx
  0006c	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?_Value@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Value
  00075	83 c4 04	 add	 esp, 4
  00078	50		 push	 eax
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@ABU32@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Consval

; 468  :                 ++_Size;

  00081	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00087	83 c2 01	 add	 edx, 1
  0008a	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 470  :                         || key_compare(_Kfn()(_V), _Key(_Y)))

  00090	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00096	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00099	74 39		 je	 SHORT $L151606
  0009b	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0009e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  000a4	75 2e		 jne	 SHORT $L151606
  000a6	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Key
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 55 14	 mov	 edx, DWORD PTR __V$[ebp]
  000b6	52		 push	 edx
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR $T156258[ebp]
  000ba	e8 00 00 00 00	 call	 ??R_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBEABVCSkinObj@@ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ; std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn::operator()
  000bf	50		 push	 eax
  000c0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 01	 add	 ecx, 1
  000c6	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  000cb	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000d0	85 c0		 test	 eax, eax
  000d2	74 56		 je	 SHORT $L151605
$L151606:

; 471  :                         {_Left(_Y) = _Z;

  000d4	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  000dd	83 c4 04	 add	 esp, 4
  000e0	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000e3	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :                         if (_Y == _Head)

  000e5	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  000eb	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  000ee	75 1c		 jne	 SHORT $L151607

; 473  :                                 {_Root() = _Z;

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  000fb	89 08		 mov	 DWORD PTR [eax], ecx

; 474  :                                 _Rmost() = _Z; }

  000fd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost
  00105	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00108	89 10		 mov	 DWORD PTR [eax], edx

; 475  :                         else if (_Y == _Lmost())

  0010a	eb 1c		 jmp	 SHORT $L151609
$L151607:
  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost
  00114	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00117	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00119	75 0d		 jne	 SHORT $L151609

; 476  :                                 _Lmost() = _Z; }

  0011b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lmost
  00123	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  00126	89 10		 mov	 DWORD PTR [eax], edx
$L151609:

; 477  :                 else

  00128	eb 2d		 jmp	 SHORT $L151611
$L151605:

; 478  :                         {_Right(_Y) = _Z;

  0012a	8b 45 10	 mov	 eax, DWORD PTR __Y$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00133	83 c4 04	 add	 esp, 4
  00136	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00139	89 08		 mov	 DWORD PTR [eax], ecx

; 479  :                         if (_Y == _Rmost())

  0013b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost
  00143	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00146	3b 10		 cmp	 edx, DWORD PTR [eax]
  00148	75 0d		 jne	 SHORT $L151611

; 480  :                                 _Rmost() = _Z; }

  0014a	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rmost
  00152	8b 4d f0	 mov	 ecx, DWORD PTR __Z$[ebp]
  00155	89 08		 mov	 DWORD PTR [eax], ecx
$L151611:

; 481  :                 for (_X = _Z; _X != _Root()

  00157	8b 55 f0	 mov	 edx, DWORD PTR __Z$[ebp]
  0015a	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx
$L151613:

; 482  :                         && _Color(_Parent(_X)) == _Red; )

  0015d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00168	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0016a	0f 84 08 03 00
	00		 je	 $L151614
  00170	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00179	83 c4 04	 add	 esp, 4
  0017c	8b 00		 mov	 eax, DWORD PTR [eax]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00184	83 c4 04	 add	 esp, 4
  00187	83 38 00	 cmp	 DWORD PTR [eax], 0
  0018a	0f 85 e8 02 00
	00		 jne	 $L151614

; 483  :                         if (_Parent(_X) == _Left(_Parent(_Parent(_X))))

  00190	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00193	51		 push	 ecx
  00194	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00199	83 c4 04	 add	 esp, 4
  0019c	8b f0		 mov	 esi, eax
  0019e	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  001a1	52		 push	 edx
  001a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  001a7	83 c4 04	 add	 esp, 4
  001aa	8b 00		 mov	 eax, DWORD PTR [eax]
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  001b2	83 c4 04	 add	 esp, 4
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	51		 push	 ecx
  001b8	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  001bd	83 c4 04	 add	 esp, 4
  001c0	8b 16		 mov	 edx, DWORD PTR [esi]
  001c2	3b 10		 cmp	 edx, DWORD PTR [eax]
  001c4	0f 85 57 01 00
	00		 jne	 $L151615

; 484  :                                 {_Y = _Right(_Parent(_Parent(_X)));

  001ca	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  001d3	83 c4 04	 add	 esp, 4
  001d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  001de	83 c4 04	 add	 esp, 4
  001e1	8b 10		 mov	 edx, DWORD PTR [eax]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  001e9	83 c4 04	 add	 esp, 4
  001ec	8b 00		 mov	 eax, DWORD PTR [eax]
  001ee	89 45 10	 mov	 DWORD PTR __Y$[ebp], eax

; 485  :                                 if (_Color(_Y) == _Red)

  001f1	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  001fa	83 c4 04	 add	 esp, 4
  001fd	83 38 00	 cmp	 DWORD PTR [eax], 0
  00200	75 78		 jne	 SHORT $L151616

; 486  :                                         {_Color(_Parent(_X)) = _Black;

  00202	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0020b	83 c4 04	 add	 esp, 4
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00216	83 c4 04	 add	 esp, 4
  00219	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 487  :                                         _Color(_Y) = _Black;

  0021f	8b 4d 10	 mov	 ecx, DWORD PTR __Y$[ebp]
  00222	51		 push	 ecx
  00223	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00228	83 c4 04	 add	 esp, 4
  0022b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 488  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00231	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0023a	83 c4 04	 add	 esp, 4
  0023d	8b 00		 mov	 eax, DWORD PTR [eax]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00245	83 c4 04	 add	 esp, 4
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	51		 push	 ecx
  0024b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00250	83 c4 04	 add	 esp, 4
  00253	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 489  :                                         _X = _Parent(_Parent(_X)); }

  00259	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0025c	52		 push	 edx
  0025d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00262	83 c4 04	 add	 esp, 4
  00265	8b 00		 mov	 eax, DWORD PTR [eax]
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0026d	83 c4 04	 add	 esp, 4
  00270	8b 08		 mov	 ecx, DWORD PTR [eax]
  00272	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 490  :                                 else

  00275	e9 a2 00 00 00	 jmp	 $L151617
$L151616:

; 491  :                                         {if (_X == _Right(_Parent(_X)))

  0027a	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0027d	52		 push	 edx
  0027e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00283	83 c4 04	 add	 esp, 4
  00286	8b 00		 mov	 eax, DWORD PTR [eax]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0028e	83 c4 04	 add	 esp, 4
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00294	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00296	75 1d		 jne	 SHORT $L151618

; 492  :                                                 {_X = _Parent(_X);

  00298	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0029b	52		 push	 edx
  0029c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  002a1	83 c4 04	 add	 esp, 4
  002a4	8b 00		 mov	 eax, DWORD PTR [eax]
  002a6	89 45 0c	 mov	 DWORD PTR __X$[ebp], eax

; 493  :                                                 _Lrotate(_X); }

  002a9	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002ac	51		 push	 ecx
  002ad	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002b0	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lrotate
$L151618:

; 494  :                                         _Color(_Parent(_X)) = _Black;

  002b5	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  002b8	52		 push	 edx
  002b9	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  002be	83 c4 04	 add	 esp, 4
  002c1	8b 00		 mov	 eax, DWORD PTR [eax]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  002c9	83 c4 04	 add	 esp, 4
  002cc	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 495  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  002d2	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  002db	83 c4 04	 add	 esp, 4
  002de	8b 10		 mov	 edx, DWORD PTR [eax]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  002e6	83 c4 04	 add	 esp, 4
  002e9	8b 00		 mov	 eax, DWORD PTR [eax]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  002f1	83 c4 04	 add	 esp, 4
  002f4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 496  :                                         _Rrotate(_Parent(_Parent(_X))); }}

  002fa	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00303	83 c4 04	 add	 esp, 4
  00306	8b 10		 mov	 edx, DWORD PTR [eax]
  00308	52		 push	 edx
  00309	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0030e	83 c4 04	 add	 esp, 4
  00311	8b 00		 mov	 eax, DWORD PTR [eax]
  00313	50		 push	 eax
  00314	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00317	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rrotate
$L151617:

; 497  :                         else

  0031c	e9 52 01 00 00	 jmp	 $L151621
$L151615:

; 498  :                                 {_Y = _Left(_Parent(_Parent(_X)));

  00321	8b 4d 0c	 mov	 ecx, DWORD PTR __X$[ebp]
  00324	51		 push	 ecx
  00325	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0032a	83 c4 04	 add	 esp, 4
  0032d	8b 10		 mov	 edx, DWORD PTR [eax]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00340	83 c4 04	 add	 esp, 4
  00343	8b 08		 mov	 ecx, DWORD PTR [eax]
  00345	89 4d 10	 mov	 DWORD PTR __Y$[ebp], ecx

; 499  :                                 if (_Color(_Y) == _Red)

  00348	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  0034b	52		 push	 edx
  0034c	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00351	83 c4 04	 add	 esp, 4
  00354	83 38 00	 cmp	 DWORD PTR [eax], 0
  00357	75 78		 jne	 SHORT $L151620

; 500  :                                         {_Color(_Parent(_X)) = _Black;

  00359	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00362	83 c4 04	 add	 esp, 4
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  0036d	83 c4 04	 add	 esp, 4
  00370	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 501  :                                         _Color(_Y) = _Black;

  00376	8b 55 10	 mov	 edx, DWORD PTR __Y$[ebp]
  00379	52		 push	 edx
  0037a	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  0037f	83 c4 04	 add	 esp, 4
  00382	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 502  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00388	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00391	83 c4 04	 add	 esp, 4
  00394	8b 08		 mov	 ecx, DWORD PTR [eax]
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0039c	83 c4 04	 add	 esp, 4
  0039f	8b 10		 mov	 edx, DWORD PTR [eax]
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  003a7	83 c4 04	 add	 esp, 4
  003aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 503  :                                         _X = _Parent(_Parent(_X)); }

  003b0	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003b3	50		 push	 eax
  003b4	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  003b9	83 c4 04	 add	 esp, 4
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	51		 push	 ecx
  003bf	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  003c4	83 c4 04	 add	 esp, 4
  003c7	8b 10		 mov	 edx, DWORD PTR [eax]
  003c9	89 55 0c	 mov	 DWORD PTR __X$[ebp], edx

; 504  :                                 else

  003cc	e9 a2 00 00 00	 jmp	 $L151621
$L151620:

; 505  :                                         {if (_X == _Left(_Parent(_X)))

  003d1	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  003da	83 c4 04	 add	 esp, 4
  003dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003df	51		 push	 ecx
  003e0	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  003e5	83 c4 04	 add	 esp, 4
  003e8	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  003eb	3b 10		 cmp	 edx, DWORD PTR [eax]
  003ed	75 1d		 jne	 SHORT $L151622

; 506  :                                                 {_X = _Parent(_X);

  003ef	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  003f2	50		 push	 eax
  003f3	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  003f8	83 c4 04	 add	 esp, 4
  003fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fd	89 4d 0c	 mov	 DWORD PTR __X$[ebp], ecx

; 507  :                                                 _Rrotate(_X); }

  00400	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00403	52		 push	 edx
  00404	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00407	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rrotate
$L151622:

; 508  :                                         _Color(_Parent(_X)) = _Black;

  0040c	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00415	83 c4 04	 add	 esp, 4
  00418	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041a	51		 push	 ecx
  0041b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00420	83 c4 04	 add	 esp, 4
  00423	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 509  :                                         _Color(_Parent(_Parent(_X))) = _Red;

  00429	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  0042c	52		 push	 edx
  0042d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00432	83 c4 04	 add	 esp, 4
  00435	8b 00		 mov	 eax, DWORD PTR [eax]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0043d	83 c4 04	 add	 esp, 4
  00440	8b 08		 mov	 ecx, DWORD PTR [eax]
  00442	51		 push	 ecx
  00443	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00448	83 c4 04	 add	 esp, 4
  0044b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 510  :                                         _Lrotate(_Parent(_Parent(_X))); }}

  00451	8b 55 0c	 mov	 edx, DWORD PTR __X$[ebp]
  00454	52		 push	 edx
  00455	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0045a	83 c4 04	 add	 esp, 4
  0045d	8b 00		 mov	 eax, DWORD PTR [eax]
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00465	83 c4 04	 add	 esp, 4
  00468	8b 08		 mov	 ecx, DWORD PTR [eax]
  0046a	51		 push	 ecx
  0046b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lrotate
$L151621:
  00473	e9 e5 fc ff ff	 jmp	 $L151613
$L151614:

; 511  :                 _Color(_Root()) = _Black;

  00478	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0047b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  00480	8b 10		 mov	 edx, DWORD PTR [eax]
  00482	52		 push	 edx
  00483	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00488	83 c4 04	 add	 esp, 4
  0048b	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1

; 512  :                 return (iterator(_Z)); }

  00491	8b 45 f0	 mov	 eax, DWORD PTR __Z$[ebp]
  00494	50		 push	 eax
  00495	8d 4d e4	 lea	 ecx, DWORD PTR $T156259[ebp]
  00498	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::iterator
  0049d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  004a2	89 0a		 mov	 DWORD PTR [edx], ecx
  004a4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  004ab	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  004ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  004b4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  004b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004c1	5e		 pop	 esi
  004c2	8b e5		 mov	 esp, ebp
  004c4	5d		 pop	 ebp
  004c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156260:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156263:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156262
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Insert
PUBLIC	?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156271 DD	019930520H
	DD	01H
	DD	FLAT:$T156273
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156273 DD	0ffffffffH
	DD	FLAT:$L156269
xdata$x	ENDS
;	COMDAT ?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
$T156268 = -28
__$EHRec$ = -12
__Kv$ = 8
?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lbound, COMDAT

; 514  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156272
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 515  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 516  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L151630:

; 517  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  0004d	74 51		 je	 SHORT $L151631

; 518  :                         if (key_compare(_Key(_X), _Kv))

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Key
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 13		 je	 SHORT $L151632

; 519  :                                 _X = _Right(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx

; 520  :                         else

  00085	eb 17		 jmp	 SHORT $L151633
$L151632:

; 521  :                                 _Y = _X, _X = _Left(_X);

  00087	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0008a	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L151633:
  0009e	eb a4		 jmp	 SHORT $L151630
$L151631:

; 522  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T156268[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T156268[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156269:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156272:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156271
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lbound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lbound
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156279 DD	019930520H
	DD	01H
	DD	FLAT:$T156281
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156281 DD	0ffffffffH
	DD	FLAT:$L156277
xdata$x	ENDS
;	COMDAT ?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__$EHRec$ = -12
__X$ = 8
?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lrotate, COMDAT

; 528  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156280
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 529  :                 _Nodeptr _Y = _Right(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 530  :                 _Right(_X) = _Left(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 531  :                 if (_Left(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00072	74 1c		 je	 SHORT $L151639

; 532  :                         _Parent(_Left(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L151639:

; 533  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 534  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L151640

; 535  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 536  :                 else if (_X == _Left(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L151643
$L151640:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L151642

; 537  :                         _Left(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 538  :                 else

  00106	eb 1c		 jmp	 SHORT $L151643
$L151642:

; 539  :                         _Right(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L151643:

; 540  :                 _Left(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156277:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156280:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156279
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Lrotate
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156288 DD	019930520H
	DD	01H
	DD	FLAT:$T156290
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156290 DD	0ffffffffH
	DD	FLAT:$L156286
xdata$x	ENDS
;	COMDAT ?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__Lk$ = -16
$T156285 = -20
__$EHRec$ = -12
__P$ = 8
?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Max, COMDAT

; 543  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156289
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L151647:

; 544  :                 while (_Right(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  0003f	74 13		 je	 SHORT $L151648

; 545  :                         _P = _Right(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L151647
$L151648:

; 546  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T156285[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T156285[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156286:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156289:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156288
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Max
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156297 DD	019930520H
	DD	01H
	DD	FLAT:$T156299
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156299 DD	0ffffffffH
	DD	FLAT:$L156295
xdata$x	ENDS
;	COMDAT ?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__Lk$ = -16
$T156294 = -20
__$EHRec$ = -12
__P$ = 8
?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Min, COMDAT

; 548  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156298
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L151653:

; 549  :                 while (_Left(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  0003f	74 13		 je	 SHORT $L151654

; 550  :                         _P = _Left(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L151653
$L151654:

; 551  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T156294[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T156294[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156295:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156298:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156297
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Min@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Min
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156305 DD	019930520H
	DD	01H
	DD	FLAT:$T156307
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156307 DD	0ffffffffH
	DD	FLAT:$L156303
xdata$x	ENDS
;	COMDAT ?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__$EHRec$ = -12
__X$ = 8
?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rrotate, COMDAT

; 561  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156306
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :                 _Nodeptr _Y = _Left(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 563  :                 _Left(_X) = _Right(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 564  :                 if (_Right(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00072	74 1c		 je	 SHORT $L151660

; 565  :                         _Parent(_Right(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L151660:

; 566  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 567  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L151661

; 568  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 569  :                 else if (_X == _Right(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L151664
$L151661:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L151663

; 570  :                         _Right(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 571  :                 else

  00106	eb 1c		 jmp	 SHORT $L151664
$L151663:

; 572  :                         _Left(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L151664:

; 573  :                 _Right(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 574  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156303:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156306:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156305
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Rrotate@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Rrotate
;	COMDAT ?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT
_this$ = -8
__S$ = -4
__Parg$ = 8
__Carg$ = 12
?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Buynode, COMDAT

; 586  :                 {_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  :                         1 * sizeof (_Node));

  00009	6a 1c		 push	 28			; 0000001cH
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCSkinCtrl@@@std@@QAEPADI@Z ; std::allocator<CSkinCtrl *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 588  :                 _Parent(_S) = _Parg;

  00016	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 589  :                 _Color(_S) = _Carg;

  00027	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00030	83 c4 04	 add	 esp, 4
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Carg$[ebp]
  00036	89 08		 mov	 DWORD PTR [eax], ecx

; 590  :                 return (_S); }

  00038	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?_Buynode@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@@Z ; std::_Destroy
;	COMDAT ?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Destval, COMDAT

; 594  :                 {_Destroy(&*_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Destval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Destval
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator, COMDAT

; 65   :                 const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Dec
;	COMDAT ??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4
??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator--, COMDAT

; 138  :                         {_Dec();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Dec

; 139  :                         return (*this); }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??Fiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator--
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color, COMDAT

; 36   :                 {return ((_Rbref)(*_P)._Color); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 10	 add	 eax, 16			; 00000010H
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__P$ = 8
?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent, COMDAT

; 42   :                 {return ((_Nodepref)(*_P)._Parent); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00006	83 c0 04	 add	 eax, 4
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lbound
;	COMDAT ?lower_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
$T156317 = -4
?lower_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::lower_bound, COMDAT

; 402  :                 {return (iterator(_Lbound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lbound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T156317[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?lower_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Ubound
;	COMDAT ?upper_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -8
__Kv$ = 12
$T156319 = -4
?upper_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::upper_bound, COMDAT

; 406  :                 {return (iterator(_Ubound(_Kv))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Kv$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Ubound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Ubound
  00015	50		 push	 eax
  00016	8d 4d fc	 lea	 ecx, DWORD PTR $T156319[ebp]
  00019	e8 00 00 00 00	 call	 ??0iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::iterator
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00023	89 0a		 mov	 DWORD PTR [edx], ecx
  00025	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?upper_bound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE?AViterator@12@ABQAVCSkinCtrl@@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::upper_bound
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156323 DD	019930520H
	DD	01H
	DD	FLAT:$T156325
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156325 DD	0ffffffffH
	DD	FLAT:$L156321
xdata$x	ENDS
;	COMDAT ?_Lrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
__$EHRec$ = -12
?_Lrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lrotate, COMDAT

; 528  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156324
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 529  :                 _Nodeptr _Y = _Right(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 530  :                 _Right(_X) = _Left(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 531  :                 if (_Left(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00072	74 1c		 je	 SHORT $L151696

; 532  :                         _Parent(_Left(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L151696:

; 533  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 534  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L151697

; 535  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 536  :                 else if (_X == _Left(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L151700
$L151697:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L151699

; 537  :                         _Left(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 538  :                 else

  00106	eb 1c		 jmp	 SHORT $L151700
$L151699:

; 539  :                         _Right(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L151700:

; 540  :                 _Left(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 541  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156321:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156324:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156323
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lrotate
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156332 DD	019930520H
	DD	01H
	DD	FLAT:$T156334
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156334 DD	0ffffffffH
	DD	FLAT:$L156330
xdata$x	ENDS
;	COMDAT ?_Max@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__Lk$ = -16
__P$ = 8
$T156329 = -20
__$EHRec$ = -12
?_Max@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Max, COMDAT

; 543  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156333
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L151704:

; 544  :                 while (_Right(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  0003f	74 13		 je	 SHORT $L151705

; 545  :                         _P = _Right(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L151704
$L151705:

; 546  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T156329[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T156329[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156330:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156333:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156332
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Max@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Max
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156341 DD	019930520H
	DD	01H
	DD	FLAT:$T156343
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156343 DD	0ffffffffH
	DD	FLAT:$L156339
xdata$x	ENDS
;	COMDAT ?_Min@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z
_TEXT	SEGMENT
__Lk$ = -16
__P$ = 8
$T156338 = -20
__$EHRec$ = -12
?_Min@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Min, COMDAT

; 548  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156342
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L151710:

; 549  :                 while (_Left(_P) != _Nil)

  0002b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00034	83 c4 04	 add	 esp, 4
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  0003f	74 13		 je	 SHORT $L151711

; 550  :                         _P = _Left(_P);

  00041	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  0004a	83 c4 04	 add	 esp, 4
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	89 45 08	 mov	 DWORD PTR __P$[ebp], eax
  00052	eb d7		 jmp	 SHORT $L151710
$L151711:

; 551  :                 return (_P); }

  00054	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00057	89 4d ec	 mov	 DWORD PTR $T156338[ebp], ecx
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0006a	8b 45 ec	 mov	 eax, DWORD PTR $T156338[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156339:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156342:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156341
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Min@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Min
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156349 DD	019930520H
	DD	01H
	DD	FLAT:$T156351
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156351 DD	0ffffffffH
	DD	FLAT:$L156347
xdata$x	ENDS
;	COMDAT ?_Rrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -20
__Y$ = -16
__X$ = 8
__$EHRec$ = -12
?_Rrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rrotate, COMDAT

; 561  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156350
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	56		 push	 esi
  0001c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001f	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00028	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :                 _Nodeptr _Y = _Left(_X);

  0002f	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00038	83 c4 04	 add	 esp, 4
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 4d f0	 mov	 DWORD PTR __Y$[ebp], ecx

; 563  :                 _Left(_X) = _Right(_Y);

  00040	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00049	83 c4 04	 add	 esp, 4
  0004c	8b f0		 mov	 esi, eax
  0004e	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 564  :                 if (_Right(_Y) != _Nil)

  0005e	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00067	83 c4 04	 add	 esp, 4
  0006a	8b 00		 mov	 eax, DWORD PTR [eax]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00072	74 1c		 je	 SHORT $L151717

; 565  :                         _Parent(_Right(_Y)) = _X;

  00074	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 10		 mov	 edx, DWORD PTR [eax]
  00082	52		 push	 edx
  00083	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00088	83 c4 04	 add	 esp, 4
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  0008e	89 08		 mov	 DWORD PTR [eax], ecx
$L151717:

; 566  :                 _Parent(_Y) = _Parent(_X);

  00090	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00093	52		 push	 edx
  00094	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00099	83 c4 04	 add	 esp, 4
  0009c	8b f0		 mov	 esi, eax
  0009e	8b 45 f0	 mov	 eax, DWORD PTR __Y$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  000a7	83 c4 04	 add	 esp, 4
  000aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000ac	89 08		 mov	 DWORD PTR [eax], ecx

; 567  :                 if (_X == _Root())

  000ae	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  000b6	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000b9	3b 10		 cmp	 edx, DWORD PTR [eax]
  000bb	75 0f		 jne	 SHORT $L151718

; 568  :                         _Root() = _Y;

  000bd	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 569  :                 else if (_X == _Right(_Parent(_X)))

  000ca	eb 58		 jmp	 SHORT $L151721
$L151718:
  000cc	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 00		 mov	 eax, DWORD PTR [eax]
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  000e0	83 c4 04	 add	 esp, 4
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  000e6	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000e8	75 1e		 jne	 SHORT $L151720

; 570  :                         _Right(_Parent(_X)) = _Y;

  000ea	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  000ed	52		 push	 edx
  000ee	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  000f3	83 c4 04	 add	 esp, 4
  000f6	8b 00		 mov	 eax, DWORD PTR [eax]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  000fe	83 c4 04	 add	 esp, 4
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00104	89 08		 mov	 DWORD PTR [eax], ecx

; 571  :                 else

  00106	eb 1c		 jmp	 SHORT $L151721
$L151720:

; 572  :                         _Left(_Parent(_X)) = _Y;

  00108	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00111	83 c4 04	 add	 esp, 4
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  0011c	83 c4 04	 add	 esp, 4
  0011f	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00122	89 08		 mov	 DWORD PTR [eax], ecx
$L151721:

; 573  :                 _Right(_Y) = _X;

  00124	8b 55 f0	 mov	 edx, DWORD PTR __Y$[ebp]
  00127	52		 push	 edx
  00128	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0012d	83 c4 04	 add	 esp, 4
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __X$[ebp]
  00133	89 08		 mov	 DWORD PTR [eax], ecx

; 574  :                 _Parent(_X) = _Y; }

  00135	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0013e	83 c4 04	 add	 esp, 4
  00141	8b 4d f0	 mov	 ecx, DWORD PTR __Y$[ebp]
  00144	89 08		 mov	 DWORD PTR [eax], ecx
  00146	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0014d	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00156	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00159	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00160	5e		 pop	 esi
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156347:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156350:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156349
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Rrotate@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAU_Node@12@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Rrotate
;	COMDAT ?_Buynode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z
_TEXT	SEGMENT
_this$ = -8
__S$ = -4
__Parg$ = 8
__Carg$ = 12
?_Buynode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Buynode, COMDAT

; 586  :                 {_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 587  :                         1 * sizeof (_Node));

  00009	6a 14		 push	 20			; 00000014H
  0000b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Charalloc@?$allocator@PAVCSkinCtrl@@@std@@QAEPADI@Z ; std::allocator<CSkinCtrl *>::_Charalloc
  00013	89 45 fc	 mov	 DWORD PTR __S$[ebp], eax

; 588  :                 _Parent(_S) = _Parg;

  00016	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0001f	83 c4 04	 add	 esp, 4
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00025	89 08		 mov	 DWORD PTR [eax], ecx

; 589  :                 _Color(_S) = _Carg;

  00027	8b 55 fc	 mov	 edx, DWORD PTR __S$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00030	83 c4 04	 add	 esp, 4
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR __Carg$[ebp]
  00036	89 08		 mov	 DWORD PTR [eax], ecx

; 590  :                 return (_S); }

  00038	8b 45 fc	 mov	 eax, DWORD PTR __S$[ebp]
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 08 00	 ret	 8
?_Buynode@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Buynode
_TEXT	ENDS
;	COMDAT ?_Consval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?_Consval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@ABQAV3@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Consval, COMDAT

; 592  :                 {_Construct(&*_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAPAVCSkinCtrl@@ABQAV2@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Consval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@ABQAV3@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Consval
_TEXT	ENDS
;	COMDAT ?_Destval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
?_Destval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Destval, COMDAT

; 594  :                 {_Destroy(&*_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Destroy@std@@YAXPAPAVCSkinCtrl@@@Z ; std::_Destroy
  00010	83 c4 04	 add	 esp, 4
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Destval@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IAEXPAPAVCSkinCtrl@@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Destval
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z
_TEXT	SEGMENT
__P$ = 8
_this$ = -4
??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator, COMDAT

; 65   :                 const_iterator(_Nodeptr _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAE@PAU_Node@12@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::const_iterator
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156361 DD	019930520H
	DD	01H
	DD	FLAT:$T156363
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156363 DD	0ffffffffH
	DD	FLAT:$L156359
xdata$x	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -16
__P$151748 = -20
__$EHRec$ = -12
?_Dec@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Dec, COMDAT

; 92   :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156362
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :                                 && _Parent(_Parent(_Ptr)) == _Ptr)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Color
  00039	83 c4 04	 add	 esp, 4
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 39		 jne	 SHORT $L151744
  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 02		 mov	 eax, DWORD PTR [edx]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 00		 mov	 eax, DWORD PTR [eax]
  0005f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00061	75 17		 jne	 SHORT $L151744

; 95   :                                 _Ptr = _Right(_Ptr);

  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 11		 mov	 DWORD PTR [ecx], edx

; 96   :                         else if (_Left(_Ptr) != _Nil)

  00078	eb 72		 jmp	 SHORT $L151747
$L151744:
  0007a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00085	83 c4 04	 add	 esp, 4
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  00090	74 20		 je	 SHORT $L151746

; 97   :                                 _Ptr = _Max(_Left(_Ptr));

  00092	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?_Max@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Max
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :                         else

  000b0	eb 3a		 jmp	 SHORT $L151747
$L151746:

; 100  :                                 while (_Ptr == _Left(_P = _Parent(_Ptr)))

  000b2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ec	 mov	 DWORD PTR __P$151748[ebp], ecx
  000c5	8b 55 ec	 mov	 edx, DWORD PTR __P$151748[ebp]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d8	75 0a		 jne	 SHORT $L151751

; 101  :                                         _Ptr = _P;

  000da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __P$151748[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx
  000e2	eb ce		 jmp	 SHORT $L151746
$L151751:

; 102  :                                 _Ptr = _P; }}

  000e4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 45 ec	 mov	 eax, DWORD PTR __P$151748[ebp]
  000ea	89 02		 mov	 DWORD PTR [edx], eax
$L151747:
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156359:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156362:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156361
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Dec@const_iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEXXZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::const_iterator::_Dec
;	COMDAT ??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z PROC NEAR ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 0c	 mov	 eax, DWORD PTR __V2$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z ENDP ; std::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator>::pair<std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator,std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator>
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z
_TEXT	SEGMENT
_this$ = -4
__V1$ = 8
__V2$ = 12
??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z PROC NEAR ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 0c	 mov	 eax, DWORD PTR __V2$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@V123@@std@@QAE@ABViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z ENDP ; std::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator>::pair<std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator>
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z
_TEXT	SEGMENT
__V1$ = 8
__V2$ = 12
_this$ = -4
??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z PROC NEAR ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator>, COMDAT

; 21   : 	pair(const _T1& _V1, const _T2& _V2)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR __V1$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx
  00011	8b 45 0c	 mov	 eax, DWORD PTR __V2$[ebp]
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@V123@@std@@QAE@ABViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z ENDP ; std::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator>::pair<std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator,std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator>
_TEXT	ENDS
;	COMDAT ?_Charalloc@?$allocator@PAVCSkinWnd@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4
__N$ = 8
?_Charalloc@?$allocator@PAVCSkinWnd@@@std@@QAEPADI@Z PROC NEAR ; std::allocator<CSkinWnd *>::_Charalloc, COMDAT

; 61   : 		{return (_Allocate((difference_type)_N,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 62   : 			(char _FARQ *)0)); }

  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPADHPAD@Z ; std::_Allocate
  00012	83 c4 08	 add	 esp, 8
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c2 04 00	 ret	 4
?_Charalloc@?$allocator@PAVCSkinWnd@@@std@@QAEPADI@Z ENDP ; std::allocator<CSkinWnd *>::_Charalloc
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root, COMDAT

; 559  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEAAPAU_Node@12@XZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156375 DD	019930520H
	DD	01H
	DD	FLAT:$T156377
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156377 DD	0ffffffffH
	DD	FLAT:$L156373
xdata$x	ENDS
;	COMDAT ?_Ubound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z
_TEXT	SEGMENT
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
__Kv$ = 8
$T156372 = -28
__$EHRec$ = -12
?_Ubound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Ubound, COMDAT

; 576  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156376
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 577  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 578  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L151810:

; 579  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  0004d	74 51		 je	 SHORT $L151811

; 580  :                         if (key_compare(_Kv, _Key(_X)))

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAABQAUHWND__@@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Key
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 55 08	 mov	 edx, DWORD PTR __Kv$[ebp]
  0005f	52		 push	 edx
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@PAUHWND__@@@std@@QBE_NABQAUHWND__@@0@Z ; std::less<HWND__ *>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 19		 je	 SHORT $L151812

; 581  :                                 _Y = _X, _X = _Left(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00083	83 c4 04	 add	 esp, 4
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 582  :                         else

  0008b	eb 11		 jmp	 SHORT $L151813
$L151812:

; 583  :                                 _X = _Right(_X);

  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L151813:
  0009e	eb a4		 jmp	 SHORT $L151810
$L151811:

; 584  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T156372[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T156372[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156373:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156376:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156375
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Ubound@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IBEPAU_Node@12@ABQAUHWND__@@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Ubound
PUBLIC	?_Construct@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@ABU21@@Z ; std::_Construct
;	COMDAT ?_Consval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@ABU32@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?_Consval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@ABU32@@Z PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Consval, COMDAT

; 592  :                 {_Construct(&*_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@ABU21@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Consval@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@IAEXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@2@ABU32@@Z ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Consval
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156384 DD	019930520H
	DD	01H
	DD	FLAT:$T156386
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156386 DD	0ffffffffH
	DD	FLAT:$L156382
xdata$x	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -16
__P$151830 = -20
__$EHRec$ = -12
?_Dec@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Dec, COMDAT

; 92   :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156385
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :                                 && _Parent(_Parent(_Ptr)) == _Ptr)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Color@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Color
  00039	83 c4 04	 add	 esp, 4
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 39		 jne	 SHORT $L151826
  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 02		 mov	 eax, DWORD PTR [edx]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 00		 mov	 eax, DWORD PTR [eax]
  0005f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00061	75 17		 jne	 SHORT $L151826

; 95   :                                 _Ptr = _Right(_Ptr);

  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 11		 mov	 DWORD PTR [ecx], edx

; 96   :                         else if (_Left(_Ptr) != _Nil)

  00078	eb 72		 jmp	 SHORT $L151829
$L151826:
  0007a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  00085	83 c4 04	 add	 esp, 4
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00090	74 20		 je	 SHORT $L151828

; 97   :                                 _Ptr = _Max(_Left(_Ptr));

  00092	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?_Max@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Max
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :                         else

  000b0	eb 3a		 jmp	 SHORT $L151829
$L151828:

; 100  :                                 while (_Ptr == _Left(_P = _Parent(_Ptr)))

  000b2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ec	 mov	 DWORD PTR __P$151830[ebp], ecx
  000c5	8b 55 ec	 mov	 edx, DWORD PTR __P$151830[ebp]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Left
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d8	75 0a		 jne	 SHORT $L151833

; 101  :                                         _Ptr = _P;

  000da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __P$151830[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx
  000e2	eb ce		 jmp	 SHORT $L151828
$L151833:

; 102  :                                 _Ptr = _P; }}

  000e4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 45 ec	 mov	 eax, DWORD PTR __P$151830[ebp]
  000ea	89 02		 mov	 DWORD PTR [edx], eax
$L151829:
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156382:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156385:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156384
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Dec@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Dec
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156392 DD	019930520H
	DD	01H
	DD	FLAT:$T156394
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156394 DD	0ffffffffH
	DD	FLAT:$L156390
xdata$x	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -16
__P$151839 = -20
__$EHRec$ = -12
?_Inc@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Inc, COMDAT

; 104  :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156393
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 105  :                         if (_Right(_Ptr) != _Nil)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@1PAU_Node@12@A ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Nil
  00044	74 20		 je	 SHORT $L151837

; 106  :                                 _Ptr = _Min(_Right(_Ptr));

  00046	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00051	83 c4 04	 add	 esp, 4
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Min@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Min
  0005c	83 c4 04	 add	 esp, 4
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	89 01		 mov	 DWORD PTR [ecx], eax

; 107  :                         else

  00064	eb 4f		 jmp	 SHORT $L151843
$L151837:

; 109  :                                 while (_Ptr == _Right(_P = _Parent(_Ptr)))

  00066	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00069	8b 02		 mov	 eax, DWORD PTR [edx]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Parent
  00071	83 c4 04	 add	 esp, 4
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 4d ec	 mov	 DWORD PTR __P$151839[ebp], ecx
  00079	8b 55 ec	 mov	 edx, DWORD PTR __P$151839[ebp]
  0007c	52		 push	 edx
  0007d	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  00082	83 c4 04	 add	 esp, 4
  00085	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	3b 10		 cmp	 edx, DWORD PTR [eax]
  0008c	75 0a		 jne	 SHORT $L151842

; 110  :                                         _Ptr = _P;

  0008e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d ec	 mov	 ecx, DWORD PTR __P$151839[ebp]
  00094	89 08		 mov	 DWORD PTR [eax], ecx
  00096	eb ce		 jmp	 SHORT $L151837
$L151842:

; 111  :                                 if (_Right(_Ptr) != _P)

  00098	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0009b	8b 02		 mov	 eax, DWORD PTR [edx]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Right
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a8	3b 4d ec	 cmp	 ecx, DWORD PTR __P$151839[ebp]
  000ab	74 08		 je	 SHORT $L151843

; 112  :                                         _Ptr = _P; }}

  000ad	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __P$151839[ebp]
  000b3	89 02		 mov	 DWORD PTR [edx], eax
$L151843:
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156390:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156393:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156392
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Inc@const_iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEXXZ ENDP ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::const_iterator::_Inc
;	COMDAT ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root, COMDAT

; 559  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156402 DD	019930520H
	DD	01H
	DD	FLAT:$T156404
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156404 DD	0ffffffffH
	DD	FLAT:$L156400
xdata$x	ENDS
;	COMDAT ?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z
_TEXT	SEGMENT
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
$T156399 = -28
__$EHRec$ = -12
__Kv$ = 8
?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Ubound, COMDAT

; 576  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156403
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 577  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 578  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L151852:

; 579  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  0004d	74 51		 je	 SHORT $L151853

; 580  :                         if (key_compare(_Kv, _Key(_X)))

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Key@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAABVCSkinObj@@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Key
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 55 08	 mov	 edx, DWORD PTR __Kv$[ebp]
  0005f	52		 push	 edx
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@VCSkinObj@@@std@@QBE_NABVCSkinObj@@0@Z ; std::less<CSkinObj>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 19		 je	 SHORT $L151854

; 581  :                                 _Y = _X, _X = _Left(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00083	83 c4 04	 add	 esp, 4
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 582  :                         else

  0008b	eb 11		 jmp	 SHORT $L151855
$L151854:

; 583  :                                 _X = _Right(_X);

  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L151855:
  0009e	eb a4		 jmp	 SHORT $L151852
$L151853:

; 584  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T156399[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T156399[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156400:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156403:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156402
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Ubound@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IBEPAU_Node@12@ABVCSkinObj@@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Ubound
PUBLIC	?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@ABU21@@Z ; std::_Construct
;	COMDAT ?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@ABU32@@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__V$ = 12
?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@ABU32@@Z PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Consval, COMDAT

; 592  :                 {_Construct(&*_P, _V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR __V$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@ABU21@@Z ; std::_Construct
  00014	83 c4 08	 add	 esp, 8
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?_Consval@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@IAEXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@ABU32@@Z ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Consval
_TEXT	ENDS
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156411 DD	019930520H
	DD	01H
	DD	FLAT:$T156413
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156413 DD	0ffffffffH
	DD	FLAT:$L156409
xdata$x	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24
__Lk$ = -16
__P$151872 = -20
__$EHRec$ = -12
?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ PROC NEAR ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Dec, COMDAT

; 92   :                         {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156412
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :                                 && _Parent(_Parent(_Ptr)) == _Ptr)

  0002e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?_Color@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Color
  00039	83 c4 04	 add	 esp, 4
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 39		 jne	 SHORT $L151868
  00041	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00044	8b 02		 mov	 eax, DWORD PTR [edx]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	8b 00		 mov	 eax, DWORD PTR [eax]
  0005f	3b 02		 cmp	 eax, DWORD PTR [edx]
  00061	75 17		 jne	 SHORT $L151868

; 95   :                                 _Ptr = _Right(_Ptr);

  00063	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 11		 mov	 edx, DWORD PTR [ecx]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	89 11		 mov	 DWORD PTR [ecx], edx

; 96   :                         else if (_Left(_Ptr) != _Nil)

  00078	eb 72		 jmp	 SHORT $L151871
$L151868:
  0007a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  00085	83 c4 04	 add	 esp, 4
  00088	8b 10		 mov	 edx, DWORD PTR [eax]
  0008a	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?_Nil@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@1PAU_Node@12@A ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Nil
  00090	74 20		 je	 SHORT $L151870

; 97   :                                 _Ptr = _Max(_Left(_Ptr));

  00092	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b 10		 mov	 edx, DWORD PTR [eax]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 ?_Max@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Max
  000a8	83 c4 04	 add	 esp, 4
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	89 01		 mov	 DWORD PTR [ecx], eax

; 98   :                         else

  000b0	eb 3a		 jmp	 SHORT $L151871
$L151870:

; 100  :                                 while (_Ptr == _Left(_P = _Parent(_Ptr)))

  000b2	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 02		 mov	 eax, DWORD PTR [edx]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Parent
  000bd	83 c4 04	 add	 esp, 4
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ec	 mov	 DWORD PTR __P$151872[ebp], ecx
  000c5	8b 55 ec	 mov	 edx, DWORD PTR __P$151872[ebp]
  000c8	52		 push	 edx
  000c9	e8 00 00 00 00	 call	 ?_Left@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Left
  000ce	83 c4 04	 add	 esp, 4
  000d1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	3b 10		 cmp	 edx, DWORD PTR [eax]
  000d8	75 0a		 jne	 SHORT $L151875

; 101  :                                         _Ptr = _P;

  000da	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __P$151872[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx
  000e2	eb ce		 jmp	 SHORT $L151870
$L151875:

; 102  :                                 _Ptr = _P; }}

  000e4	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e7	8b 45 ec	 mov	 eax, DWORD PTR __P$151872[ebp]
  000ea	89 02		 mov	 DWORD PTR [edx], eax
$L151871:
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156409:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156412:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156411
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Dec@const_iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEXXZ ENDP ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::const_iterator::_Dec
PUBLIC	?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156420 DD	019930520H
	DD	01H
	DD	FLAT:$T156422
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156422 DD	0ffffffffH
	DD	FLAT:$L156418
xdata$x	ENDS
;	COMDAT ?_Lbound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
__Kv$ = 8
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
$T156417 = -28
__$EHRec$ = -12
?_Lbound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lbound, COMDAT

; 514  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156421
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 515  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 516  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L151882:

; 517  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  0004d	74 51		 je	 SHORT $L151883

; 518  :                         if (key_compare(_Key(_X), _Kv))

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __Kv$[ebp]
  00052	51		 push	 ecx
  00053	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAABQAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Key
  0005c	83 c4 04	 add	 esp, 4
  0005f	50		 push	 eax
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@PAVCSkinCtrl@@@std@@QBE_NABQAVCSkinCtrl@@0@Z ; std::less<CSkinCtrl *>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 13		 je	 SHORT $L151884

; 519  :                                 _X = _Right(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  0007d	83 c4 04	 add	 esp, 4
  00080	8b 08		 mov	 ecx, DWORD PTR [eax]
  00082	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx

; 520  :                         else

  00085	eb 17		 jmp	 SHORT $L151885
$L151884:

; 521  :                                 _Y = _X, _X = _Left(_X);

  00087	8b 55 f0	 mov	 edx, DWORD PTR __X$[ebp]
  0008a	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L151885:
  0009e	eb a4		 jmp	 SHORT $L151882
$L151883:

; 522  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T156417[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T156417[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156418:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156421:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156420
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Lbound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Lbound
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xtree
xdata$x	SEGMENT
$T156429 DD	019930520H
	DD	01H
	DD	FLAT:$T156431
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156431 DD	0ffffffffH
	DD	FLAT:$L156427
xdata$x	ENDS
;	COMDAT ?_Ubound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z
_TEXT	SEGMENT
__Kv$ = 8
_this$ = -32
__Lk$ = -24
__X$ = -16
__Y$ = -20
$T156426 = -28
__$EHRec$ = -12
?_Ubound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Ubound, COMDAT

; 576  :                 {_Lockit _Lk;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156430
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 14	 sub	 esp, 20			; 00000014H
  0001b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@XZ
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 577  :                 _Nodeptr _X = _Root();

  0002e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEAAPAU_Node@12@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 f0	 mov	 DWORD PTR __X$[ebp], eax

; 578  :                 _Nodeptr _Y = _Head;

  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 55 ec	 mov	 DWORD PTR __Y$[ebp], edx
$L151893:

; 579  :                 while (_X != _Nil)

  00044	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00047	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?_Nil@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@1PAU_Node@12@A ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Nil
  0004d	74 51		 je	 SHORT $L151894

; 580  :                         if (key_compare(_Kv, _Key(_X)))

  0004f	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?_Key@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAABQAVCSkinCtrl@@PAU_Node@12@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Key
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8b 55 08	 mov	 edx, DWORD PTR __Kv$[ebp]
  0005f	52		 push	 edx
  00060	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 01	 add	 ecx, 1
  00066	e8 00 00 00 00	 call	 ??R?$less@PAVCSkinCtrl@@@std@@QBE_NABQAVCSkinCtrl@@0@Z ; std::less<CSkinCtrl *>::operator()
  0006b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00070	85 c0		 test	 eax, eax
  00072	74 19		 je	 SHORT $L151895

; 581  :                                 _Y = _X, _X = _Left(_X);

  00074	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00077	89 45 ec	 mov	 DWORD PTR __Y$[ebp], eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR __X$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?_Left@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Left
  00083	83 c4 04	 add	 esp, 4
  00086	8b 10		 mov	 edx, DWORD PTR [eax]
  00088	89 55 f0	 mov	 DWORD PTR __X$[ebp], edx

; 582  :                         else

  0008b	eb 11		 jmp	 SHORT $L151896
$L151895:

; 583  :                                 _X = _Right(_X);

  0008d	8b 45 f0	 mov	 eax, DWORD PTR __X$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?_Right@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Right
  00096	83 c4 04	 add	 esp, 4
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	89 4d f0	 mov	 DWORD PTR __X$[ebp], ecx
$L151896:
  0009e	eb a4		 jmp	 SHORT $L151893
$L151894:

; 584  :                 return (_Y); }

  000a0	8b 55 ec	 mov	 edx, DWORD PTR __Y$[ebp]
  000a3	89 55 e4	 mov	 DWORD PTR $T156426[ebp], edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000b6	8b 45 e4	 mov	 eax, DWORD PTR $T156426[ebp]
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156427:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Lk$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00009	c3		 ret	 0
$L156430:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156429
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Ubound@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEPAU_Node@12@ABQAVCSkinCtrl@@@Z ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Ubound
;	COMDAT ?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEAAPAU_Node@12@XZ
_TEXT	SEGMENT
_this$ = -4
?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEAAPAU_Node@12@XZ PROC NEAR ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root, COMDAT

; 559  :                 {return (_Parent(_Head)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ?_Parent@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@KAAAPAU_Node@12@PAU312@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Parent
  00013	83 c4 04	 add	 esp, 4
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Root@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@IBEAAPAU_Node@12@XZ ENDP ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Root
_TEXT	ENDS
PUBLIC	?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_QueryInterface
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z
_TEXT	SEGMENT
_p$ = 8
_this$ = -8
_hr$151993 = -4
??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >, COMDAT

; 73   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 74   : 		if (p) {

  00012	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00015	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00018	74 27		 je	 SHORT $L152000

; 75   : 			HRESULT hr = _QueryInterface(p);

  0001a	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0001d	52		 push	 edx
  0001e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_QueryInterface
  00026	89 45 fc	 mov	 DWORD PTR _hr$151993[ebp], eax

; 76   : 
; 77   : 			if (FAILED(hr) && (hr != E_NOINTERFACE)) {

  00029	83 7d fc 00	 cmp	 DWORD PTR _hr$151993[ebp], 0
  0002d	7d 12		 jge	 SHORT $L152000
  0002f	81 7d fc 02 40
	00 80		 cmp	 DWORD PTR _hr$151993[ebp], -2147467262 ; 80004002H
  00036	74 09		 je	 SHORT $L152000

; 78   : 				_com_issue_error(hr);

  00038	8b 45 fc	 mov	 eax, DWORD PTR _hr$151993[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$L152000:

; 81   : 	}

  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
_TEXT	ENDS
PUBLIC	?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@2@H@1@@Z ; std::_Iter_cat
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAI@Z
_TEXT	SEGMENT
$T156437 = -4
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAI@Z PROC NEAR ; std::_Distance, COMDAT

; 106  : 	{_Distance(_F, _L, _N, _Iter_cat(_F)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8d 45 08	 lea	 eax, DWORD PTR __F$[ebp]
  00007	50		 push	 eax
  00008	8d 4d fc	 lea	 ecx, DWORD PTR $T156437[ebp]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@2@H@1@@Z ; std::_Iter_cat
  00011	83 c4 08	 add	 esp, 8
  00014	8a 10		 mov	 dl, BYTE PTR [eax]
  00016	52		 push	 edx
  00017	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAI@Z ENDP ; std::_Distance
_TEXT	ENDS
PUBLIC	?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@H@1@@Z ; std::_Iter_cat
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAI@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
$T156439 = -4
?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAI@Z PROC NEAR ; std::_Distance, COMDAT

; 106  : 	{_Distance(_F, _L, _N, _Iter_cat(_F)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8d 45 08	 lea	 eax, DWORD PTR __F$[ebp]
  00007	50		 push	 eax
  00008	8d 4d fc	 lea	 ecx, DWORD PTR $T156439[ebp]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@H@1@@Z ; std::_Iter_cat
  00011	83 c4 08	 add	 esp, 8
  00014	8a 10		 mov	 dl, BYTE PTR [eax]
  00016	52		 push	 edx
  00017	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAI@Z ENDP ; std::_Distance
_TEXT	ENDS
PUBLIC	?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@PAVCSkinCtrl@@H@1@@Z ; std::_Iter_cat
PUBLIC	?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAI@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
$T156441 = -4
?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAI@Z PROC NEAR ; std::_Distance, COMDAT

; 106  : 	{_Distance(_F, _L, _N, _Iter_cat(_F)); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8d 45 08	 lea	 eax, DWORD PTR __F$[ebp]
  00007	50		 push	 eax
  00008	8d 4d fc	 lea	 ecx, DWORD PTR $T156441[ebp]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@PAVCSkinCtrl@@H@1@@Z ; std::_Iter_cat
  00011	83 c4 08	 add	 esp, 8
  00014	8a 10		 mov	 dl, BYTE PTR [eax]
  00016	52		 push	 edx
  00017	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __L$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __F$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAIUbidirectional_iterator_tag@1@@Z ; std::_Distance
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAI@Z ENDP ; std::_Distance
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
__Tmp$ = -4
?swap@std@@YAXAAW4_Redbl@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z PROC NEAR ; std::swap, COMDAT

; 100  : 	{_Ty _Tmp = _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 101  : 	_X = _Y, _Y = _Tmp; }

  0000c	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Y$[ebp]
  00019	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?swap@std@@YAXAAW4_Redbl@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0@Z ENDP ; std::swap
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT
__N$ = 8
?_Allocate@std@@YAPADHPAD@Z PROC NEAR			; std::_Allocate, COMDAT

; 27   : 	{if (_N < 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 7d 08 00	 cmp	 DWORD PTR __N$[ebp], 0
  00007	7d 07		 jge	 SHORT $L152347

; 28   : 		_N = 0;

  00009	c7 45 08 00 00
	00 00		 mov	 DWORD PTR __N$[ebp], 0
$L152347:

; 30   : 		(_SIZT)_N * sizeof (_Ty))); }

  00010	8b 45 08	 mov	 eax, DWORD PTR __N$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00019	83 c4 04	 add	 esp, 4
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Allocate@std@@YAPADHPAD@Z ENDP			; std::_Allocate
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT ?_Construct@std@@YAXPAPAVCSkinCtrl@@ABQAV2@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
$T156445 = -4
?_Construct@std@@YAXPAPAVCSkinCtrl@@ABQAV2@@Z PROC NEAR	; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00009	50		 push	 eax
  0000a	6a 04		 push	 4
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T156445[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T156445[ebp], 0
  0001b	74 12		 je	 SHORT $L156446
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR $T156445[ebp]
  00020	8b 55 0c	 mov	 edx, DWORD PTR __V$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 01		 mov	 DWORD PTR [ecx], eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR $T156445[ebp]
  0002a	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
  0002d	eb 07		 jmp	 SHORT $L156447
$L156446:
  0002f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L156447:
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?_Construct@std@@YAXPAPAVCSkinCtrl@@ABQAV2@@Z ENDP	; std::_Construct
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
__Tmp$ = -4
?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z PROC NEAR ; std::swap, COMDAT

; 100  : 	{_Ty _Tmp = _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 101  : 	_X = _Y, _Y = _Tmp; }

  0000c	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Y$[ebp]
  00019	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?swap@std@@YAXAAW4_Redbl@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0@Z ENDP ; std::swap
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAW4_Redbl@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z
_TEXT	SEGMENT
__X$ = 8
__Y$ = 12
__Tmp$ = -4
?swap@std@@YAXAAW4_Redbl@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z PROC NEAR ; std::swap, COMDAT

; 100  : 	{_Ty _Tmp = _X;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 08	 mov	 eax, DWORD PTR __X$[ebp]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	89 4d fc	 mov	 DWORD PTR __Tmp$[ebp], ecx

; 101  : 	_X = _Y, _Y = _Tmp; }

  0000c	8b 55 08	 mov	 edx, DWORD PTR __X$[ebp]
  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Y$[ebp]
  00019	8b 45 fc	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001c	89 02		 mov	 DWORD PTR [edx], eax
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?swap@std@@YAXAAW4_Redbl@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0@Z ENDP ; std::swap
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@@Z PROC NEAR ; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@@Z ENDP ; std::_Destroy
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVCSkinCtrl@@@Z
_TEXT	SEGMENT
?_Destroy@std@@YAXPAPAVCSkinCtrl@@@Z PROC NEAR		; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?_Destroy@std@@YAXPAPAVCSkinCtrl@@@Z ENDP		; std::_Destroy
_TEXT	ENDS
PUBLIC	??_G?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAEPAXI@Z ; std::pair<CSkinObj const ,CSkinCtrl *>::`scalar deleting destructor'
;	COMDAT ?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@@Z
_TEXT	SEGMENT
__P$ = 8
?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@@Z PROC NEAR ; std::_Destroy, COMDAT

; 38   : 	{_DESTRUCTOR(_Ty, _P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a 00		 push	 0
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __P$[ebp]
  00008	e8 00 00 00 00	 call	 ??_G?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAEPAXI@Z ; std::pair<CSkinObj const ,CSkinCtrl *>::`scalar deleting destructor'
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?_Destroy@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@@Z ENDP ; std::_Destroy
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@ABU21@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
$T156454 = -4
?_Construct@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@ABU21@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00009	50		 push	 eax
  0000a	6a 08		 push	 8
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00011	83 c4 08	 add	 esp, 8
  00014	89 45 fc	 mov	 DWORD PTR $T156454[ebp], eax
  00017	83 7d fc 00	 cmp	 DWORD PTR $T156454[ebp], 0
  0001b	74 18		 je	 SHORT $L156455
  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00025	8b 4d fc	 mov	 ecx, DWORD PTR $T156454[ebp]
  00028	89 11		 mov	 DWORD PTR [ecx], edx
  0002a	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002d	8b 55 fc	 mov	 edx, DWORD PTR $T156454[ebp]
  00030	89 55 f8	 mov	 DWORD PTR -8+[ebp], edx
  00033	eb 07		 jmp	 SHORT $L156456
$L156455:
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L156456:
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?_Construct@std@@YAXPAU?$pair@QAUHWND__@@PAVCSkinWnd@@@1@ABU21@@Z ENDP ; std::_Construct
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABU01@@Z ; std::pair<CSkinObj const ,CSkinCtrl *>::pair<CSkinObj const ,CSkinCtrl *>
PUBLIC	??3@YAXPAX0@Z					; operator delete
;	COMDAT xdata$x
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\xmemory
xdata$x	SEGMENT
$T156464 DD	019930520H
	DD	01H
	DD	FLAT:$T156466
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156466 DD	0ffffffffH
	DD	FLAT:$L156462
xdata$x	ENDS
;	COMDAT ?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@ABU21@@Z
_TEXT	SEGMENT
__P$ = 8
__V$ = 12
$T156458 = -16
$T156459 = -20
__$EHRec$ = -12
?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@ABU21@@Z PROC NEAR ; std::_Construct, COMDAT

; 34   : 	{new ((void _FARQ *)_P) _T1(_V); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156465
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0001e	50		 push	 eax
  0001f	6a 0c		 push	 12			; 0000000cH
  00021	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00026	83 c4 08	 add	 esp, 8
  00029	89 45 ec	 mov	 DWORD PTR $T156459[ebp], eax
  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00033	83 7d ec 00	 cmp	 DWORD PTR $T156459[ebp], 0
  00037	74 11		 je	 SHORT $L156460
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR __V$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR $T156459[ebp]
  00040	e8 00 00 00 00	 call	 ??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABU01@@Z ; std::pair<CSkinObj const ,CSkinCtrl *>::pair<CSkinObj const ,CSkinCtrl *>
  00045	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  00048	eb 07		 jmp	 SHORT $L156461
$L156460:
  0004a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L156461:
  00051	8b 55 e8	 mov	 edx, DWORD PTR -24+[ebp]
  00054	89 55 f0	 mov	 DWORD PTR $T156458[ebp], edx
  00057	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156462:
  00000	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  00003	50		 push	 eax
  00004	8b 4d ec	 mov	 ecx, DWORD PTR $T156459[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
$L156465:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156464
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Construct@std@@YAXPAU?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@1@ABU21@@Z ENDP ; std::_Construct
;	COMDAT ??_G?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_G?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAEPAXI@Z PROC NEAR ; std::pair<CSkinObj const ,CSkinCtrl *>::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@XZ ; std::pair<CSkinObj const ,CSkinCtrl *>::~pair<CSkinObj const ,CSkinCtrl *>
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L152391
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L152391:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAEPAXI@Z ENDP ; std::pair<CSkinObj const ,CSkinCtrl *>::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABU01@@Z PROC NEAR ; std::pair<CSkinObj const ,CSkinCtrl *>::pair<CSkinObj const ,CSkinCtrl *>, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??0?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@QAE@ABU01@@Z ENDP ; std::pair<CSkinObj const ,CSkinCtrl *>::pair<CSkinObj const ,CSkinCtrl *>
_TEXT	ENDS
PUBLIC	?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::GetIID
PUBLIC	??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator=
PUBLIC	?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::Attach
;	COMDAT ?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z
_TEXT	SEGMENT
_p$ = 8
_this$ = -12
_hr$ = -4
_pInterface$152523 = -8
?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_QueryInterface, COMDAT

; 680  : 	template<typename _InterfacePtr> HRESULT _QueryInterface(const _InterfacePtr& p) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 681  : 	{
; 682  : 		HRESULT hr;
; 683  : 
; 684  : 		// Can't QI NULL
; 685  : 		//
; 686  : 		if (p) {

  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	74 3f		 je	 SHORT $L152522

; 687  : 			// Query for this interface
; 688  : 			//
; 689  : 			Interface* pInterface;
; 690  : 			hr = p->QueryInterface(GetIID(), reinterpret_cast<void**>(&pInterface));

  00011	8d 4d f8	 lea	 ecx, DWORD PTR _pInterface$152523[ebp]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::GetIID
  0001a	50		 push	 eax
  0001b	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00027	50		 push	 eax
  00028	ff 11		 call	 DWORD PTR [ecx]
  0002a	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 691  : 
; 692  : 			if (FAILED(hr)) {

  0002d	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00031	7d 0f		 jge	 SHORT $L152526

; 693  : 				// If failed initialize interface to NULL and return HRESULT.
; 694  : 				//
; 695  : 				Attach(NULL);

  00033	6a 00		 push	 0
  00035	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::Attach

; 696  : 				return hr;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  00040	eb 22		 jmp	 SHORT $L152520
$L152526:

; 698  : 
; 699  : 			// Save the interface without AddRef()ing.
; 700  : 			//
; 701  : 			Attach(pInterface);

  00042	8b 55 f8	 mov	 edx, DWORD PTR _pInterface$152523[ebp]
  00045	52		 push	 edx
  00046	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::Attach

; 703  : 		else {

  0004e	eb 11		 jmp	 SHORT $L152527
$L152522:

; 704  : 			operator=(static_cast<Interface*>(NULL));

  00050	6a 00		 push	 0
  00052	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator=

; 705  : 			hr = E_NOINTERFACE;

  0005a	c7 45 fc 02 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467262 ; 80004002H
$L152527:

; 707  : 
; 708  : 		return hr;

  00061	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$L152520:

; 709  : 	}

  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_QueryInterface
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@2@H@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
__IterCatTag$ = -4
__pIterCatTag$ = -8
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@2@H@1@@Z PROC NEAR ; std::_Iter_cat, COMDAT

; 88   : 	{_C _IterCatTag;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 89   : 	 _C* _pIterCatTag;
; 90   : 	_pIterCatTag = &_IterCatTag;	// Workaround for C4700 warning

  00006	8d 45 fc	 lea	 eax, DWORD PTR __IterCatTag$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __pIterCatTag$[ebp], eax

; 91   : 	return (_IterCatTag); }

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	8a 55 fc	 mov	 dl, BYTE PTR __IterCatTag$[ebp]
  00012	88 11		 mov	 BYTE PTR [ecx], dl
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@2@H@1@@Z ENDP ; std::_Iter_cat
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z PROC NEAR ; std::_Distance, COMDAT

; 118  : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 08		 jmp	 SHORT $L152539
$L152540:
  00005	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00008	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QAEAAV012@XZ ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator++
$L152539:
  0000d	8d 45 0c	 lea	 eax, DWORD PTR __L$[ebp]
  00010	50		 push	 eax
  00011	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00014	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<HWND__ *,std::pair<HWND__ * const,CSkinWnd *>,std::map<HWND__ *,CSkinWnd *,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::_Kfn,std::less<HWND__ *>,std::allocator<CSkinWnd *> >::iterator::operator!=
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $L152541

; 119  : 		++_N; }

  00022	8b 4d 10	 mov	 ecx, DWORD PTR __N$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	83 c2 01	 add	 edx, 1
  0002a	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	eb d4		 jmp	 SHORT $L152540
$L152541:
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@PAUHWND__@@U?$pair@QAUHWND__@@PAVCSkinWnd@@@std@@U_Kfn@?$map@PAUHWND__@@PAVCSkinWnd@@U?$less@PAUHWND__@@@std@@V?$allocator@PAVCSkinWnd@@@4@@3@U?$less@PAUHWND__@@@3@V?$allocator@PAVCSkinWnd@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ENDP ; std::_Distance
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@H@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
__IterCatTag$ = -4
__pIterCatTag$ = -8
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@H@1@@Z PROC NEAR ; std::_Iter_cat, COMDAT

; 88   : 	{_C _IterCatTag;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 89   : 	 _C* _pIterCatTag;
; 90   : 	_pIterCatTag = &_IterCatTag;	// Workaround for C4700 warning

  00006	8d 45 fc	 lea	 eax, DWORD PTR __IterCatTag$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __pIterCatTag$[ebp], eax

; 91   : 	return (_IterCatTag); }

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	8a 55 fc	 mov	 dl, BYTE PTR __IterCatTag$[ebp]
  00012	88 11		 mov	 BYTE PTR [ecx], dl
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@2@H@1@@Z ENDP ; std::_Iter_cat
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z PROC NEAR ; std::_Distance, COMDAT

; 118  : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 08		 jmp	 SHORT $L152547
$L152548:
  00005	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00008	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QAEAAV012@XZ ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator++
$L152547:
  0000d	8d 45 0c	 lea	 eax, DWORD PTR __L$[ebp]
  00010	50		 push	 eax
  00011	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00014	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinObj,std::pair<CSkinObj const ,CSkinCtrl *>,std::map<CSkinObj,CSkinCtrl *,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinObj>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $L152549

; 119  : 		++_N; }

  00022	8b 4d 10	 mov	 ecx, DWORD PTR __N$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	83 c2 01	 add	 edx, 1
  0002a	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	eb d4		 jmp	 SHORT $L152548
$L152549:
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@VCSkinObj@@U?$pair@$$CBVCSkinObj@@PAVCSkinCtrl@@@std@@U_Kfn@?$map@VCSkinObj@@PAVCSkinCtrl@@U?$less@VCSkinObj@@@std@@V?$allocator@PAVCSkinCtrl@@@4@@3@U?$less@VCSkinObj@@@3@V?$allocator@PAVCSkinCtrl@@@3@@1@0AAIUbidirectional_iterator_tag@1@@Z ENDP ; std::_Distance
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@PAVCSkinCtrl@@H@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8
__IterCatTag$ = -4
__pIterCatTag$ = -8
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@PAVCSkinCtrl@@H@1@@Z PROC NEAR ; std::_Iter_cat, COMDAT

; 88   : 	{_C _IterCatTag;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 89   : 	 _C* _pIterCatTag;
; 90   : 	_pIterCatTag = &_IterCatTag;	// Workaround for C4700 warning

  00006	8d 45 fc	 lea	 eax, DWORD PTR __IterCatTag$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __pIterCatTag$[ebp], eax

; 91   : 	return (_IterCatTag); }

  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	8a 55 fc	 mov	 dl, BYTE PTR __IterCatTag$[ebp]
  00012	88 11		 mov	 BYTE PTR [ecx], dl
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Iter_cat@std@@YA?AUbidirectional_iterator_tag@1@ABU?$iterator@Ubidirectional_iterator_tag@std@@PAVCSkinCtrl@@H@1@@Z ENDP ; std::_Iter_cat
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAIUbidirectional_iterator_tag@1@@Z
_TEXT	SEGMENT
__F$ = 8
__L$ = 12
__N$ = 16
?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAIUbidirectional_iterator_tag@1@@Z PROC NEAR ; std::_Distance, COMDAT

; 118  : 	{for (; _F != _L; ++_F)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	eb 08		 jmp	 SHORT $L152555
$L152556:
  00005	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00008	e8 00 00 00 00	 call	 ??Eiterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QAEAAV012@XZ ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator++
$L152555:
  0000d	8d 45 0c	 lea	 eax, DWORD PTR __L$[ebp]
  00010	50		 push	 eax
  00011	8d 4d 08	 lea	 ecx, DWORD PTR __F$[ebp]
  00014	e8 00 00 00 00	 call	 ??9iterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@std@@QBE_NABV012@@Z ; std::_Tree<CSkinCtrl *,CSkinCtrl *,std::set<CSkinCtrl *,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::_Kfn,std::less<CSkinCtrl *>,std::allocator<CSkinCtrl *> >::iterator::operator!=
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 0f		 je	 SHORT $L152557

; 119  : 		++_N; }

  00022	8b 4d 10	 mov	 ecx, DWORD PTR __N$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	83 c2 01	 add	 edx, 1
  0002a	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  0002d	89 10		 mov	 DWORD PTR [eax], edx
  0002f	eb d4		 jmp	 SHORT $L152556
$L152557:
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Distance@std@@YAXViterator@?$_Tree@PAVCSkinCtrl@@PAV1@U_Kfn@?$set@PAVCSkinCtrl@@U?$less@PAVCSkinCtrl@@@std@@V?$allocator@PAVCSkinCtrl@@@3@@std@@U?$less@PAVCSkinCtrl@@@4@V?$allocator@PAVCSkinCtrl@@@4@@1@0AAIUbidirectional_iterator_tag@1@@Z ENDP ; std::_Distance
_TEXT	ENDS
PUBLIC	?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ ; _com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d>::GetIID
;	COMDAT ?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ
_TEXT	SEGMENT
?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::GetIID, COMDAT

; 65   : 	{ 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 66   : 		return ThisIIID::GetIID(); 

  00003	e8 00 00 00 00	 call	 ?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ ; _com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d>::GetIID

; 67   : 	}

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::GetIID
_TEXT	ENDS
PUBLIC	?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_AddRef
;	COMDAT ??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z
_TEXT	SEGMENT
_this$ = -8
_pOldInterface$152590 = -4
_pInterface$ = 8
??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator=, COMDAT

; 207  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 208  : 		if (m_pInterface != pInterface) {

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	3b 4d 08	 cmp	 ecx, DWORD PTR _pInterface$[ebp]
  00011	74 2a		 je	 SHORT $L152591

; 209  : 			Interface* pOldInterface = m_pInterface;

  00013	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00016	8b 02		 mov	 eax, DWORD PTR [edx]
  00018	89 45 fc	 mov	 DWORD PTR _pOldInterface$152590[ebp], eax

; 210  : 
; 211  : 			m_pInterface = pInterface;

  0001b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 55 08	 mov	 edx, DWORD PTR _pInterface$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx

; 212  : 
; 213  : 			_AddRef();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_AddRef

; 214  : 
; 215  : 			if (pOldInterface != NULL) {

  0002b	83 7d fc 00	 cmp	 DWORD PTR _pOldInterface$152590[ebp], 0
  0002f	74 0c		 je	 SHORT $L152591

; 216  : 				pOldInterface->Release();

  00031	8b 45 fc	 mov	 eax, DWORD PTR _pOldInterface$152590[ebp]
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 55 fc	 mov	 edx, DWORD PTR _pOldInterface$152590[ebp]
  00039	52		 push	 edx
  0003a	ff 51 08	 call	 DWORD PTR [ecx+8]
$L152591:

; 219  : 
; 220  : 		return *this;

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 221  : 	}

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator=
_TEXT	ENDS
;	COMDAT ?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z
_TEXT	SEGMENT
_this$ = -4
_pInterface$ = 8
?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::Attach, COMDAT

; 268  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 269  : 		_Release();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_Release

; 270  : 		m_pInterface = pInterface;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _pInterface$[ebp]
  00015	89 08		 mov	 DWORD PTR [eax], ecx

; 271  : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::Attach
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4
?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_AddRef, COMDAT

; 669  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 670  : 		if (m_pInterface != NULL) {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 10		 je	 SHORT $L152596

; 671  : 			m_pInterface->AddRef();

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 11		 mov	 edx, DWORD PTR [ecx]
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	52		 push	 edx
  0001c	ff 50 04	 call	 DWORD PTR [eax+4]
$L152596:

; 673  : 	}

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_AddRef
_TEXT	ENDS
PUBLIC	__GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\comip.h
_DATA	SEGMENT
__GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
_DATA	ENDS
;	COMDAT ?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ
_TEXT	SEGMENT
?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ PROC NEAR ; _com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d>::GetIID, COMDAT

; 46   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 		return *_IID;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:__GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d

; 48   : 	}

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ ENDP ; _com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d>::GetIID
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
;	COMDAT ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z
_TEXT	SEGMENT
_lpszNewText$ = 8
_bCanUndo$ = 12
_this$ = -4
?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z PROC NEAR		; CRichEditCtrl::ReplaceSel, COMDAT

; 619  : 	{ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_REPLACESEL, (WPARAM) bCanUndo, (LPARAM)lpszNewText); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpszNewText$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _bCanUndo$[ebp]
  0000e	51		 push	 ecx
  0000f	68 c2 00 00 00	 push	 194			; 000000c2H
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z ENDP		; CRichEditCtrl::ReplaceSel
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::CComBSTR, COMDAT

; 3892 : 	CComBSTR()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3893 : 	{
; 3894 : 		m_str = NULL;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 3895 : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::CComBSTR
_TEXT	ENDS
EXTRN	__imp__SysFreeString@4:NEAR
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::~CComBSTR, COMDAT

; 3938 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3939 : 		::SysFreeString(m_str);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4

; 3940 : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??1CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::~CComBSTR
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT
_this$ = -4
??BCComBSTR@ATL@@QBEPAGXZ PROC NEAR			; ATL::CComBSTR::operator unsigned short *, COMDAT

; 3946 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3947 : 		return m_str;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 3948 : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCComBSTR@ATL@@QBEPAGXZ ENDP				; ATL::CComBSTR::operator unsigned short *
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT
_this$ = -4
??ICComBSTR@ATL@@QAEPAPAGXZ PROC NEAR			; ATL::CComBSTR::operator&, COMDAT

; 3950 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3951 : 		return &m_str;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 3952 : 	}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??ICComBSTR@ATL@@QAEPAPAGXZ ENDP			; ATL::CComBSTR::operator&
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__P$ = 12
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 42   : 	{return (_P); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __P$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 45   : 	{return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
;	COMDAT ?GetCloseSelfCalled@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT
_this$ = -12
$T156492 = -8
?GetCloseSelfCalled@CSkinWnd@@IAE_NXZ PROC NEAR		; CSkinWnd::GetCloseSelfCalled, COMDAT

; 120  : 	bool GetCloseSelfCalled ( void ) { return m_state[sknWndCloseSelfCalled]; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	6a 05		 push	 5
  0000b	8d 45 f8	 lea	 eax, DWORD PTR $T156492[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00018	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ??Breference@?$bitset@$05@std@@QBE_NXZ ; std::bitset<6>::reference::operator bool
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetCloseSelfCalled@CSkinWnd@@IAE_NXZ ENDP		; CSkinWnd::GetCloseSelfCalled
_TEXT	ENDS
PUBLIC	??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z	; std::bitset<6>::reference::operator=
;	COMDAT ?SetCloseSelfCalled@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_bValue$ = 8
_this$ = -12
$T156494 = -8
?SetCloseSelfCalled@CSkinWnd@@IAEX_N@Z PROC NEAR	; CSkinWnd::SetCloseSelfCalled, COMDAT

; 123  : 	void SetCloseSelfCalled ( bool bValue ) { m_state[sknWndCloseSelfCalled] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 05		 push	 5
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T156494[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetCloseSelfCalled@CSkinWnd@@IAEX_N@Z ENDP		; CSkinWnd::SetCloseSelfCalled
_TEXT	ENDS
PUBLIC	?set@?$bitset@$05@std@@QAEAAV12@I_N@Z		; std::bitset<6>::set
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT
__X$ = 8
_this$ = -4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z PROC NEAR	; std::bitset<6>::reference::operator=, COMDAT

; 24   : 			{_Pbs->set(_Off, _X);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8a 45 08	 mov	 al, BYTE PTR __X$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00011	52		 push	 edx
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	e8 00 00 00 00	 call	 ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ; std::bitset<6>::set

; 25   : 			return (*this); }

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ENDP	; std::bitset<6>::reference::operator=
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT
_this$ = -4
__P$ = 8
__X$ = 12
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z PROC NEAR		; std::bitset<6>::set, COMDAT

; 119  : 		{if (_N <= _P)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	83 7d 08 06	 cmp	 DWORD PTR __P$[ebp], 6
  0000c	72 08		 jb	 SHORT $L150696

; 120  : 			_Xran();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Xran@?$bitset@$05@std@@ABEXXZ ; std::bitset<6>::_Xran
$L150696:

; 121  : 		if (_X)

  00016	8b 45 0c	 mov	 eax, DWORD PTR __X$[ebp]
  00019	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0001e	85 c0		 test	 eax, eax
  00020	74 31		 je	 SHORT $L150697

; 122  : 			_A[_P / _Nb] |= (_Ty)1 << _P % _Nb;

  00022	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00025	c1 ee 05	 shr	 esi, 5
  00028	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0002b	33 d2		 xor	 edx, edx
  0002d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00032	f7 f1		 div	 ecx
  00034	8b ca		 mov	 ecx, edx
  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	d3 e2		 shl	 edx, cl
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00043	0b ca		 or	 ecx, edx
  00045	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  00048	c1 ea 05	 shr	 edx, 5
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 123  : 		else

  00051	eb 31		 jmp	 SHORT $L150699
$L150697:

; 124  : 			_A[_P / _Nb] &= ~((_Ty)1 << _P % _Nb);

  00053	8b 75 08	 mov	 esi, DWORD PTR __P$[ebp]
  00056	c1 ee 05	 shr	 esi, 5
  00059	8b 45 08	 mov	 eax, DWORD PTR __P$[ebp]
  0005c	33 d2		 xor	 edx, edx
  0005e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00063	f7 f1		 div	 ecx
  00065	8b ca		 mov	 ecx, edx
  00067	ba 01 00 00 00	 mov	 edx, 1
  0006c	d3 e2		 shl	 edx, cl
  0006e	f7 d2		 not	 edx
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 0c b0	 mov	 ecx, DWORD PTR [eax+esi*4]
  00076	23 ca		 and	 ecx, edx
  00078	8b 55 08	 mov	 edx, DWORD PTR __P$[ebp]
  0007b	c1 ea 05	 shr	 edx, 5
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx
$L150699:

; 125  : 		return (*this); }

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
?set@?$bitset@$05@std@@QAEAAV12@I_N@Z ENDP		; std::bitset<6>::set
_TEXT	ENDS
;	COMDAT ?SetDestructing@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_bValue$ = 8
_this$ = -12
$T156498 = -8
?SetDestructing@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetDestructing, COMDAT

; 126  : 	void SetDestructing ( bool bValue ) { m_state[sknWndDestructing] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T156498[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetDestructing@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetDestructing
_TEXT	ENDS
;	COMDAT ?GetAllowResize@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT
_this$ = -12
$T156500 = -8
?GetAllowResize@CSkinWnd@@IAE_NXZ PROC NEAR		; CSkinWnd::GetAllowResize, COMDAT

; 129  : 	bool GetAllowResize ( void ) { return m_state[sknWndAllowResize]; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	6a 02		 push	 2
  0000b	8d 45 f8	 lea	 eax, DWORD PTR $T156500[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00018	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ??Breference@?$bitset@$05@std@@QBE_NXZ ; std::bitset<6>::reference::operator bool
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetAllowResize@CSkinWnd@@IAE_NXZ ENDP			; CSkinWnd::GetAllowResize
_TEXT	ENDS
;	COMDAT ?SetAllowResize@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_bValue$ = 8
_this$ = -12
$T156502 = -8
?SetAllowResize@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetAllowResize, COMDAT

; 132  : 	void SetAllowResize ( bool bValue ) { m_state[sknWndAllowResize] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 02		 push	 2
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T156502[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetAllowResize@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetAllowResize
_TEXT	ENDS
;	COMDAT ?GetAllowMove@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT
_this$ = -12
$T156504 = -8
?GetAllowMove@CSkinWnd@@IAE_NXZ PROC NEAR		; CSkinWnd::GetAllowMove, COMDAT

; 135  : 	bool GetAllowMove( void ) { return m_state[sknWndAllowMove]; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	6a 03		 push	 3
  0000b	8d 45 f8	 lea	 eax, DWORD PTR $T156504[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00018	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ??Breference@?$bitset@$05@std@@QBE_NXZ ; std::bitset<6>::reference::operator bool
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetAllowMove@CSkinWnd@@IAE_NXZ ENDP			; CSkinWnd::GetAllowMove
_TEXT	ENDS
;	COMDAT ?SetAllowMove@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_bValue$ = 8
_this$ = -12
$T156506 = -8
?SetAllowMove@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetAllowMove, COMDAT

; 138  : 	void SetAllowMove ( bool bValue ) { m_state[sknWndAllowMove] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 03		 push	 3
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T156506[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetAllowMove@CSkinWnd@@IAEX_N@Z ENDP			; CSkinWnd::SetAllowMove
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT
_bValue$ = 8
_this$ = -12
$T156508 = -8
?SetProcessEvents@CSkinWnd@@IAEX_N@Z PROC NEAR		; CSkinWnd::SetProcessEvents, COMDAT

; 144  : 	void SetProcessEvents ( bool bValue ) { m_state[sknWndProcessEvents] = bValue; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8a 45 08	 mov	 al, BYTE PTR _bValue$[ebp]
  0000c	50		 push	 eax
  0000d	6a 01		 push	 1
  0000f	8d 4d f8	 lea	 ecx, DWORD PTR $T156508[ebp]
  00012	51		 push	 ecx
  00013	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0001c	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  00021	8b c8		 mov	 ecx, eax
  00023	e8 00 00 00 00	 call	 ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z ; std::bitset<6>::reference::operator=
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetProcessEvents@CSkinWnd@@IAEX_N@Z ENDP		; CSkinWnd::SetProcessEvents
_TEXT	ENDS
;	COMDAT ?GetDestructing@CSkinWnd@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -12
$T156510 = -8
?GetDestructing@CSkinWnd@@QAE_NXZ PROC NEAR		; CSkinWnd::GetDestructing, COMDAT

; 269  : 	bool GetDestructing ( void ) { return m_state[sknWndDestructing]; };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	6a 00		 push	 0
  0000b	8d 45 f8	 lea	 eax, DWORD PTR $T156510[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00018	e8 00 00 00 00	 call	 ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z ; std::bitset<6>::operator[]
  0001d	8b c8		 mov	 ecx, eax
  0001f	e8 00 00 00 00	 call	 ??Breference@?$bitset@$05@std@@QBE_NXZ ; std::bitset<6>::reference::operator bool
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetDestructing@CSkinWnd@@QAE_NXZ ENDP			; CSkinWnd::GetDestructing
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Next, COMDAT

; 275  : 	virtual void Next ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Next
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Previous, COMDAT

; 276  : 	virtual void Previous ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Previous
_TEXT	ENDS
PUBLIC	??0strstreambuf@std@@QAE@H@Z			; std::strstreambuf::strstreambuf
PUBLIC	??_7strstream@std@@6B@				; std::strstream::`vftable'
PUBLIC	??_8strstream@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::strstream::`vbtable'
PUBLIC	??_8strstream@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::strstream::`vbtable'
PUBLIC	??_Gstrstream@std@@UAEPAXI@Z			; std::strstream::`scalar deleting destructor'
PUBLIC	??_Estrstream@std@@UAEPAXI@Z			; std::strstream::`vector deleting destructor'
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:NEAR
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:NEAR
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ:NEAR
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:NEAR
;	COMDAT ??_7strstream@std@@6B@
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\strstream
CONST	SEGMENT
??_7strstream@std@@6B@ DD FLAT:??_Estrstream@std@@UAEPAXI@Z ; std::strstream::`vftable'
CONST	ENDS
;	COMDAT ??_8strstream@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8strstream@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::strstream::`vbtable'
	DD	05cH
CONST	ENDS
;	COMDAT ??_8strstream@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8strstream@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::strstream::`vbtable'
	DD	054H
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T156520 DD	019930520H
	DD	02H
	DD	FLAT:$T156522
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156522 DD	0ffffffffH
	DD	FLAT:$L156515
	DD	00H
	DD	FLAT:$L156517
xdata$x	ENDS
;	COMDAT ??0strstream@std@@QAE@XZ
_TEXT	SEGMENT
$T156514 = -16
__$EHRec$ = -12
_$initVBases$ = 8
_this$ = -20
??0strstream@std@@QAE@XZ PROC NEAR			; std::strstream::strstream, COMDAT

; 107  : 	strstream()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156521
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T156514[ebp], 0
  00025	83 7d 08 00	 cmp	 DWORD PTR _$initVBases$[ebp], 0
  00029	74 2f		 je	 SHORT $L146354
  0002b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_8strstream@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::strstream::`vbtable'
  00034	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], OFFSET FLAT:??_8strstream@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::strstream::`vbtable'
  0003e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
  0004a	8b 55 f0	 mov	 edx, DWORD PTR $T156514[ebp]
  0004d	83 ca 01	 or	 edx, 1
  00050	89 55 f0	 mov	 DWORD PTR $T156514[ebp], edx
  00053	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$L146354:
  0005a	6a 00		 push	 0
  0005c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00062	50		 push	 eax
  00063	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
  0006c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00073	6a 00		 push	 0
  00075	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0007b	e8 00 00 00 00	 call	 ??0strstreambuf@std@@QAE@H@Z ; std::strstreambuf::strstreambuf
  00080	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	8b 11		 mov	 edx, DWORD PTR [ecx]
  00085	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	c7 04 01 00 00
	00 00		 mov	 DWORD PTR [ecx+eax], OFFSET FLAT:??_7strstream@std@@6B@ ; std::strstream::`vftable'
  00092	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00099	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156515:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T156514[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	85 c0		 test	 eax, eax
  00008	0f 84 0c 00 00
	00		 je	 $L156516
  0000e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
$L156516:
  0001a	c3		 ret	 0
$L156517:
  0001b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  00027	c3		 ret	 0
$L156521:
  00028	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156520
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0strstream@std@@QAE@XZ ENDP				; std::strstream::strstream
PUBLIC	??_7strstreambuf@std@@6B@			; std::strstreambuf::`vftable'
PUBLIC	??_Gstrstreambuf@std@@UAEPAXI@Z			; std::strstreambuf::`scalar deleting destructor'
PUBLIC	??_Estrstreambuf@std@@UAEPAXI@Z			; std::strstreambuf::`vector deleting destructor'
EXTRN	__imp_?_Init@strstreambuf@std@@IAEXHPAD0H@Z:NEAR
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:NEAR
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:NEAR
EXTRN	?overflow@strstreambuf@std@@MAEHH@Z:NEAR	; std::strstreambuf::overflow
EXTRN	?pbackfail@strstreambuf@std@@MAEHH@Z:NEAR	; std::strstreambuf::pbackfail
EXTRN	?underflow@strstreambuf@std@@MAEHXZ:NEAR	; std::strstreambuf::underflow
EXTRN	?seekoff@strstreambuf@std@@MAE?AV?$fpos@H@2@JW4seekdir@ios_base@2@H@Z:NEAR ; std::strstreambuf::seekoff
EXTRN	?seekpos@strstreambuf@std@@MAE?AV?$fpos@H@2@V32@H@Z:NEAR ; std::strstreambuf::seekpos
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:NEAR ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:NEAR ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z:NEAR ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z:NEAR ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z:NEAR ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:NEAR ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:NEAR ; std::basic_streambuf<char,std::char_traits<char> >::imbue
;	COMDAT ??_7strstreambuf@std@@6B@
; File C:\Program Files\Microsoft Visual Studio\VC98\INCLUDE\strstream
CONST	SEGMENT
??_7strstreambuf@std@@6B@ DD FLAT:??_Estrstreambuf@std@@UAEPAXI@Z ; std::strstreambuf::`vftable'
	DD	FLAT:?overflow@strstreambuf@std@@MAEHH@Z
	DD	FLAT:?pbackfail@strstreambuf@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?underflow@strstreambuf@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
	DD	FLAT:?seekoff@strstreambuf@std@@MAE?AV?$fpos@H@2@JW4seekdir@ios_base@2@H@Z
	DD	FLAT:?seekpos@strstreambuf@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T156528 DD	019930520H
	DD	01H
	DD	FLAT:$T156530
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T156530 DD	0ffffffffH
	DD	FLAT:$L156526
xdata$x	ENDS
;	COMDAT ??0strstreambuf@std@@QAE@H@Z
_TEXT	SEGMENT
__N$ = 8
_this$ = -16
__$EHRec$ = -12
??0strstreambuf@std@@QAE@H@Z PROC NEAR			; std::strstreambuf::strstreambuf, COMDAT

; 21   : 	explicit strstreambuf(streamsize _N = 0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L156529
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7strstreambuf@std@@6B@ ; std::strstreambuf::`vftable'
  00035	6a 00		 push	 0
  00037	6a 00		 push	 0
  00039	6a 00		 push	 0
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR __N$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Init@strstreambuf@std@@IAEXHPAD0H@Z
  00048	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156526:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  00009	c3		 ret	 0
$L156529:
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156528
  0000f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0strstreambuf@std@@QAE@H@Z ENDP			; std::strstreambuf::strstreambuf
EXTRN	__imp_??1strstreambuf@std@@UAE@XZ:NEAR
;	COMDAT ??_Gstrstreambuf@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_Gstrstreambuf@std@@UAEPAXI@Z PROC NEAR		; std::strstreambuf::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1strstreambuf@std@@UAE@XZ
  00010	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00013	83 e0 01	 and	 eax, 1
  00016	85 c0		 test	 eax, eax
  00018	74 0c		 je	 SHORT $L146210
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00023	83 c4 04	 add	 esp, 4
$L146210:
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??_Gstrstreambuf@std@@UAEPAXI@Z ENDP			; std::strstreambuf::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?str@strstreambuf@std@@QAEPADXZ			; std::strstreambuf::str
;	COMDAT ?str@strstream@std@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4
?str@strstream@std@@QAEPADXZ PROC NEAR			; std::strstream::str, COMDAT

; 116  : 		{return (_Sb.str()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0000d	e8 00 00 00 00	 call	 ?str@strstreambuf@std@@QAEPADXZ ; std::strstreambuf::str
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?str@strstream@std@@QAEPADXZ ENDP			; std::strstream::str
_TEXT	ENDS
EXTRN	__imp_?freeze@strstreambuf@std@@QAEX_N@Z:NEAR
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:NEAR
;	COMDAT ?str@strstreambuf@std@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4
?str@strstreambuf@std@@QAEPADXZ PROC NEAR		; std::strstreambuf::str, COMDAT

; 38   : 		{freeze();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?freeze@strstreambuf@std@@QAEX_N@Z

; 39   : 		return (gptr()); }

  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?str@strstreambuf@std@@QAEPADXZ ENDP			; std::strstreambuf::str
_TEXT	ENDS
PUBLIC	?pcount@strstreambuf@std@@QBEHXZ		; std::strstreambuf::pcount
;	COMDAT ?pcount@strstream@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?pcount@strstream@std@@QBEHXZ PROC NEAR			; std::strstream::pcount, COMDAT

; 118  : 		{return (_Sb.pcount()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0000d	e8 00 00 00 00	 call	 ?pcount@strstreambuf@std@@QBEHXZ ; std::strstreambuf::pcount
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?pcount@strstream@std@@QBEHXZ ENDP			; std::strstream::pcount
_TEXT	ENDS
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:NEAR
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:NEAR
;	COMDAT ?pcount@strstreambuf@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?pcount@strstreambuf@std@@QBEHXZ PROC NEAR		; std::strstreambuf::pcount, COMDAT

; 41   : 		{return (pptr() == 0 ? 0 : pptr() - pbase()); } 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00013	85 c0		 test	 eax, eax
  00015	75 09		 jne	 SHORT $L156538
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  0001e	eb 19		 jmp	 SHORT $L156539
$L156538:
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00029	8b f0		 mov	 esi, eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00034	2b f0		 sub	 esi, eax
  00036	89 75 f8	 mov	 DWORD PTR -8+[ebp], esi
$L156539:
  00039	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  0003c	5e		 pop	 esi
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?pcount@strstreambuf@std@@QBEHXZ ENDP			; std::strstreambuf::pcount
_TEXT	ENDS
;	COMDAT ??_Gstrstream@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_Gstrstream@std@@UAEPAXI@Z PROC NEAR			; std::strstream::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 e9 5c	 sub	 ecx, 92			; 0000005cH
  0000d	e8 00 00 00 00	 call	 ??_Dstrstream@std@@QAEXXZ ; std::strstream::`vbase destructor'
  00012	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00015	83 e0 01	 and	 eax, 1
  00018	85 c0		 test	 eax, eax
  0001a	74 0f		 je	 SHORT $L146367
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 e9 5c	 sub	 ecx, 92			; 0000005cH
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00028	83 c4 04	 add	 esp, 4
$L146367:
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 e8 5c	 sub	 eax, 92			; 0000005cH
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
??_Gstrstream@std@@UAEPAXI@Z ENDP			; std::strstream::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??1strstream@std@@UAE@XZ:NEAR
;	COMDAT ??_Dstrstream@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
??_Dstrstream@std@@QAEXXZ PROC NEAR			; std::strstream::`vbase destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 5c	 add	 ecx, 92			; 0000005cH
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1strstream@std@@UAE@XZ
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??_Dstrstream@std@@QAEXXZ ENDP				; std::strstream::`vbase destructor'
_TEXT	ENDS
END
