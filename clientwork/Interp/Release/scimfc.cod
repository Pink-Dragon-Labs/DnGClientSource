	TITLE	\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\scimfc.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@LHED@Instructed?5to?5scale?5to?5zero?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsRectEmpty@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetRectEmpty@CRect@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OffsetRect@CRect@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWnd@@QAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PostMessageA@CWnd@@QAEHIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BringWindowToTop@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invalidate@CWnd@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnActivateApp@CWnd@@IAEXHPAUHTASK__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CWnd@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWnd@@IAEXIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_handsLevel@CSCI_Game@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGlobal@PMachine@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemBGColor@CSkinListCtrl@@MAEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPBI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Zconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Mconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Miterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_NV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@_NV?$allocator@I@std@@@std@@QAEXViterator@12@Vconst_iterator@12@1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@_NV?$allocator@I@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@_NV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nw@?$vector@_NV?$allocator@I@std@@@std@@KAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Trim@?$vector@_NV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@_NV?$allocator@I@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Refresh@CTabDlgBtn@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabDlgBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTabDlgBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSelectedTab@CTabDlg@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Spells@CMainPanelWnd@@QAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SelectTab@CMainPanelWnd@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SelectNextTab@CMainPanelWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SelectPreviousTab@CMainPanelWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDoubleButtonDlg@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDoubleButtonDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDoubleButtonDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDeferredClickHandler@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDeferredClickHandler@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSplashDlg@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSplashDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSplashDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckBounds@OCArray@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Data@OCArray@@QAEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ByteAt@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetByte@CPackedData@@QAEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetByte@CPackedData@@QAEXHE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutByte@CPackedData@@QAEXE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWord@CPackedData@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutWord@CPackedData@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LongAt@CPackedData@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCConfirmDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CConfirmDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveDlg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveDlg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Point@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SCI_Point@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@NN@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FPoint@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4SOL_Point@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Rect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_Rect@@QAE@AAVSOL_Point@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Set@SOL_Rect@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MakeEmpty@SOL_Rect@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Xlen@SOL_Rect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Ylen@SOL_Rect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Intersect@SOL_Rect@@QBEHVSOL_Point@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Intersect@SOL_Rect@@QBEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8SOL_Rect@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Rgb24@@QAE@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Rgb24@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8Rgb24F@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@HHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@VMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Bitmap@@QAE@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@Bitmap@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObj@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Skip@CelObj@@QBEEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemapState@CelObj@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Mirrored@CelObj@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjView@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjView@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjView@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjView@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjMem@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjMem@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjMem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjMem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Duplicate@CelObjColor@@UBEPAVCelObj@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CelObjColor@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCelObjColor@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CelObjColor@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Draw@ScreenItem@@QAEXABVBuffer@@ABVSOL_Rect@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4SOL_Rect@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TopPlane@Screen@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TopSCIPlane@Screen@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Xdim@Screen@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Ydim@Screen@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1KbdMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GKbdMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1TimeMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reset@TimeMgr@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GTimeMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Spell@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSpellListCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpellListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_AltEnter@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_TabDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLogOff@CToonSettings@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WEA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSpellListCtrl@@WLE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSciApp@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSciApp@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSciApp@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSingleInstance@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMainWindow@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMainWindow@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTabDlgBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7Buffer@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSplashDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObjColor@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CelObjView@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CConfirmDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CArchiveDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7TimeMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDeferredClickHandler@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CelObjMem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMainWindow@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSpellListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDoubleButtonDlg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpellListCtrl@@6BCListCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSciApp@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7KbdMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCA, CRT$XCU, CRT$XCL, CRT$XCC, CRT$XCZ, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	?g_MouseLocation@@3UtagPOINT@@A			; g_MouseLocation
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?g_hArrowCursor@@3PAUHICON__@@A			; g_hArrowCursor
PUBLIC	?g_hWaitCursor@@3PAUHICON__@@A			; g_hWaitCursor
PUBLIC	?g_hNoCursor@@3PAUHICON__@@A			; g_hNoCursor
PUBLIC	?g_hHandCursor@@3PAUHICON__@@A			; g_hHandCursor
PUBLIC	?g_hWalkCursor@@3PAUHICON__@@A			; g_hWalkCursor
PUBLIC	?g_hDropCursor@@3PAUHICON__@@A			; g_hDropCursor
PUBLIC	?g_hPutCursor@@3PAUHICON__@@A			; g_hPutCursor
PUBLIC	?g_hSwordCursor@@3PAUHICON__@@A			; g_hSwordCursor
PUBLIC	?g_hSpellCursor@@3PAUHICON__@@A			; g_hSpellCursor
PUBLIC	?g_hExitLeftCursor@@3PAUHICON__@@A		; g_hExitLeftCursor
PUBLIC	?g_hExitRightCursor@@3PAUHICON__@@A		; g_hExitRightCursor
PUBLIC	?g_hExitUpCursor@@3PAUHICON__@@A		; g_hExitUpCursor
PUBLIC	?g_hExitDownCursor@@3PAUHICON__@@A		; g_hExitDownCursor
PUBLIC	?g_hVerbCursor@@3PAUHICON__@@A			; g_hVerbCursor
PUBLIC	?g_sConfigDir@@3PADA				; g_sConfigDir
PUBLIC	?OnSetFocus@CMainWindow@@IAEXPAVCWnd@@@Z	; CMainWindow::OnSetFocus
PUBLIC	?OnChar@CMainWindow@@IAEXIII@Z			; CMainWindow::OnChar
PUBLIC	?OnGetMinMaxInfo@CMainWindow@@IAEXPAUtagMINMAXINFO@@@Z ; CMainWindow::OnGetMinMaxInfo
PUBLIC	?OnClose@CMainWindow@@IAEXXZ			; CMainWindow::OnClose
PUBLIC	?OnSysCommand@CMainWindow@@IAEXIJ@Z		; CMainWindow::OnSysCommand
PUBLIC	?OnActivateApp@CMainWindow@@IAEXHK@Z		; CMainWindow::OnActivateApp
PUBLIC	?OnDisplayChange@CMainWindow@@IAEJIJ@Z		; CMainWindow::OnDisplayChange
PUBLIC	?_messageEntries@CMainWindow@@0QBUAFX_MSGMAP_ENTRY@@B ; CMainWindow::_messageEntries
PUBLIC	?messageMap@CMainWindow@@1UAFX_MSGMAP@@B	; CMainWindow::messageMap
PUBLIC	?_GetBaseMessageMap@CMainWindow@@KGPBUAFX_MSGMAP@@XZ ; CMainWindow::_GetBaseMessageMap
PUBLIC	?g_pMainWindow@@3PAVCMainWindow@@A		; g_pMainWindow
PUBLIC	?gSCIApp@@3VCSciApp@@A				; gSCIApp
PUBLIC	?g_bExpectDisplayChange@@3_NA			; g_bExpectDisplayChange
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?g_bFatalMessage@@3_NA				; g_bFatalMessage
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	?g_bForceFullScreen@@3_NA			; g_bForceFullScreen
PUBLIC	?g_pCtrl@@3PAVCSkinListCtrl@@A			; g_pCtrl
PUBLIC	?g_Float@@3MA					; g_Float
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
_BSS	SEGMENT
?g_MouseLocation@@3UtagPOINT@@A DQ 01H DUP (?)		; g_MouseLocation
?g_hArrowCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hArrowCursor
?g_hWaitCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hWaitCursor
?g_hNoCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hNoCursor
?g_hHandCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hHandCursor
?g_hWalkCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hWalkCursor
?g_hDropCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hDropCursor
?g_hPutCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hPutCursor
?g_hSwordCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hSwordCursor
?g_hSpellCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hSpellCursor
?g_hExitLeftCursor@@3PAUHICON__@@A DD 01H DUP (?)	; g_hExitLeftCursor
?g_hExitRightCursor@@3PAUHICON__@@A DD 01H DUP (?)	; g_hExitRightCursor
?g_hExitUpCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hExitUpCursor
?g_hExitDownCursor@@3PAUHICON__@@A DD 01H DUP (?)	; g_hExitDownCursor
?g_hVerbCursor@@3PAUHICON__@@A DD 01H DUP (?)		; g_hVerbCursor
?g_sConfigDir@@3PADA DB 0400H DUP (?)			; g_sConfigDir
?g_pMainWindow@@3PAVCMainWindow@@A DD 01H DUP (?)	; g_pMainWindow
?gSCIApp@@3VCSciApp@@A DB 0c8H DUP (?)			; gSCIApp
?g_bExpectDisplayChange@@3_NA DB 01H DUP (?)		; g_bExpectDisplayChange
	ALIGN	4

?g_bFatalMessage@@3_NA DB 01H DUP (?)			; g_bFatalMessage
	ALIGN	4

?g_bForceFullScreen@@3_NA DB 01H DUP (?)		; g_bForceFullScreen
	ALIGN	4

?g_pCtrl@@3PAVCSkinListCtrl@@A DD 01H DUP (?)		; g_pCtrl
?g_Float@@3MA DD 01H DUP (?)				; g_Float
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
CRT$XCU	SEGMENT
_$S401	DD	FLAT:_$E400
CRT$XCU	ENDS
CONST	SEGMENT
?messageMap@CMainWindow@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CMainWindow@@KGPBUAFX_MSGMAP@@XZ ; CMainWindow::messageMap
	DD	FLAT:?_messageEntries@CMainWindow@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CMainWindow@@0QBUAFX_MSGMAP_ENTRY@@B DD 07H ; CMainWindow::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	017H
	DD	FLAT:?OnSetFocus@CMainWindow@@IAEXPAVCWnd@@@Z
	DD	0102H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnChar@CMainWindow@@IAEXIII@Z
	DD	024H
	DD	00H
	DD	00H
	DD	00H
	DD	01fH
	DD	FLAT:?OnGetMinMaxInfo@CMainWindow@@IAEXPAUtagMINMAXINFO@@@Z
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	0cH
	DD	FLAT:?OnClose@CMainWindow@@IAEXXZ
	DD	0112H
	DD	00H
	DD	00H
	DD	00H
	DD	012H
	DD	FLAT:?OnSysCommand@CMainWindow@@IAEXIJ@Z
	DD	01cH
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnActivateApp@CMainWindow@@IAEXHK@Z
	DD	07eH
	DD	00H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:?OnDisplayChange@CMainWindow@@IAEJIJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
_TEXT	SEGMENT
_$E400	PROC NEAR
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 _$E397
  00008	e8 00 00 00 00	 call	 _$E399
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
_$E400	ENDP
_TEXT	ENDS
PUBLIC	??0CSciApp@@QAE@XZ				; CSciApp::CSciApp
_TEXT	SEGMENT
_$E397	PROC NEAR

; 67   : CSciApp gSCIApp;

  0000f	55		 push	 ebp
  00010	8b ec		 mov	 ebp, esp
  00012	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?gSCIApp@@3VCSciApp@@A
  00017	e8 00 00 00 00	 call	 ??0CSciApp@@QAE@XZ	; CSciApp::CSciApp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
_$E397	ENDP
_TEXT	ENDS
EXTRN	_atexit:NEAR
_TEXT	SEGMENT
_$E399	PROC NEAR
  0001e	55		 push	 ebp
  0001f	8b ec		 mov	 ebp, esp
  00021	68 00 00 00 00	 push	 OFFSET FLAT:_$E398
  00026	e8 00 00 00 00	 call	 _atexit
  0002b	83 c4 04	 add	 esp, 4
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
_$E399	ENDP
_TEXT	ENDS
PUBLIC	??1CSciApp@@UAE@XZ				; CSciApp::~CSciApp
_TEXT	SEGMENT
_$E398	PROC NEAR
  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
  00033	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?gSCIApp@@3VCSciApp@@A
  00038	e8 00 00 00 00	 call	 ??1CSciApp@@UAE@XZ	; CSciApp::~CSciApp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
_$E398	ENDP
_TEXT	ENDS
EXTRN	??1CWinApp@@UAE@XZ:NEAR				; CWinApp::~CWinApp
;	COMDAT ??1CSciApp@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSciApp@@UAE@XZ PROC NEAR				; CSciApp::~CSciApp, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWinApp@@UAE@XZ	; CWinApp::~CWinApp
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSciApp@@UAE@XZ ENDP					; CSciApp::~CSciApp
_TEXT	ENDS
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	?Run@CSciApp@@UAEHXZ				; CSciApp::Run
PUBLIC	?InitInstance@CSciApp@@UAEHXZ			; CSciApp::InitInstance
PUBLIC	?ExitInstance@CSciApp@@UAEHXZ			; CSciApp::ExitInstance
PUBLIC	?OnIdle@CSciApp@@UAEHJ@Z			; CSciApp::OnIdle
PUBLIC	??_7CSciApp@@6B@				; CSciApp::`vftable'
PUBLIC	??_GCSciApp@@UAEPAXI@Z				; CSciApp::`scalar deleting destructor'
PUBLIC	??_ECSciApp@@UAEPAXI@Z				; CSciApp::`vector deleting destructor'
EXTRN	?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z:NEAR ; CWinThread::IsIdleMessage
EXTRN	?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z:NEAR ; CWinThread::ProcessMessageFilter
EXTRN	?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ:NEAR	; CWinThread::GetMainWnd
EXTRN	?Delete@CWinThread@@UAEXXZ:NEAR			; CWinThread::Delete
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?OnFinalRelease@CCmdTarget@@UAEXXZ:NEAR		; CCmdTarget::OnFinalRelease
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWinApp::GetRuntimeClass
EXTRN	??0CWinApp@@QAE@PBD@Z:NEAR			; CWinApp::CWinApp
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z:NEAR ; CWinApp::OpenDocumentFile
EXTRN	?AddToRecentFileList@CWinApp@@UAEXPBD@Z:NEAR	; CWinApp::AddToRecentFileList
EXTRN	?InitApplication@CWinApp@@UAEHXZ:NEAR		; CWinApp::InitApplication
EXTRN	?SaveAllModified@CWinApp@@UAEHXZ:NEAR		; CWinApp::SaveAllModified
EXTRN	?DoMessageBox@CWinApp@@UAEHPBDII@Z:NEAR		; CWinApp::DoMessageBox
EXTRN	?DoWaitCursor@CWinApp@@UAEXH@Z:NEAR		; CWinApp::DoWaitCursor
EXTRN	?OnDDECommand@CWinApp@@UAEHPAD@Z:NEAR		; CWinApp::OnDDECommand
EXTRN	?WinHelpA@CWinApp@@UAEXKI@Z:NEAR		; CWinApp::WinHelpA
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z:NEAR ; CWinApp::ProcessWndProcException
EXTRN	?GetMessageMap@CWinApp@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CWinApp::GetMessageMap
EXTRN	?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z:NEAR ; CWinThread::PreTranslateMessage
EXTRN	?PumpMessage@CWinThread@@UAEHXZ:NEAR		; CWinThread::PumpMessage
;	COMDAT ??_7CSciApp@@6B@
CONST	SEGMENT
??_7CSciApp@@6B@ DD FLAT:?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ ; CSciApp::`vftable'
	DD	FLAT:??_ECSciApp@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CCmdTarget@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWinApp@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?InitInstance@CSciApp@@UAEHXZ
	DD	FLAT:?Run@CSciApp@@UAEHXZ
	DD	FLAT:?PreTranslateMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?PumpMessage@CWinThread@@UAEHXZ
	DD	FLAT:?OnIdle@CSciApp@@UAEHJ@Z
	DD	FLAT:?IsIdleMessage@CWinThread@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?ExitInstance@CSciApp@@UAEHXZ
	DD	FLAT:?ProcessWndProcException@CWinApp@@UAEJPAVCException@@PBUtagMSG@@@Z
	DD	FLAT:?ProcessMessageFilter@CWinThread@@UAEHHPAUtagMSG@@@Z
	DD	FLAT:?GetMainWnd@CWinThread@@UAEPAVCWnd@@XZ
	DD	FLAT:?Delete@CWinThread@@UAEXXZ
	DD	FLAT:?OpenDocumentFile@CWinApp@@UAEPAVCDocument@@PBD@Z
	DD	FLAT:?AddToRecentFileList@CWinApp@@UAEXPBD@Z
	DD	FLAT:?InitApplication@CWinApp@@UAEHXZ
	DD	FLAT:?SaveAllModified@CWinApp@@UAEHXZ
	DD	FLAT:?DoMessageBox@CWinApp@@UAEHPBDII@Z
	DD	FLAT:?DoWaitCursor@CWinApp@@UAEXH@Z
	DD	FLAT:?OnDDECommand@CWinApp@@UAEHPAD@Z
	DD	FLAT:?WinHelpA@CWinApp@@UAEXKI@Z
CONST	ENDS
;	COMDAT ??0CSciApp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSciApp@@QAE@XZ PROC NEAR				; CSciApp::CSciApp, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CWinApp@@QAE@PBD@Z	; CWinApp::CWinApp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSciApp@@6B@ ; CSciApp::`vftable'
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??0CSciApp@@QAE@XZ ENDP					; CSciApp::CSciApp
_TEXT	ENDS
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
;	COMDAT ??_GCSciApp@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSciApp@@UAEPAXI@Z PROC NEAR			; CSciApp::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSciApp@@UAE@XZ	; CSciApp::~CSciApp
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L169755
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L169755:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCSciApp@@UAEPAXI@Z ENDP				; CSciApp::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ	; AfxGetInstanceHandle
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	??9@YG_NABVCString@@PBD@Z			; operator!=
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	??0CSplashDlg@@QAE@XZ				; CSplashDlg::CSplashDlg
PUBLIC	??0CMainWindow@@QAE@XZ				; CMainWindow::CMainWindow
PUBLIC	?PostMessageA@CWnd@@QAEHIIJ@Z			; CWnd::PostMessageA
PUBLIC	?UpdateWindow@CWnd@@QAEXXZ			; CWnd::UpdateWindow
PUBLIC	?Invalidate@CWnd@@QAEXH@Z			; CWnd::Invalidate
EXTRN	__except_list:DWORD
EXTRN	__imp__RegCloseKey@4:NEAR
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp__SendMessageA@16:NEAR
EXTRN	?g_pVerbList@@3PAVCVerbList@@A:DWORD		; g_pVerbList
EXTRN	__imp__LoadLibraryA@4:NEAR
EXTRN	__imp__RegOpenKeyExA@20:NEAR
EXTRN	__imp__LoadCursorA@8:NEAR
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__imp__GetEnvironmentVariableA@12:NEAR
EXTRN	__imp__RegQueryValueExA@24:NEAR
EXTRN	??YCString@@QAEABV0@PBD@Z:NEAR			; CString::operator+=
EXTRN	_fg_colors:NEAR
EXTRN	?Right@CString@@QBE?AV1@H@Z:NEAR		; CString::Right
EXTRN	?GetBuffer@CString@@QAEPADH@Z:NEAR		; CString::GetBuffer
EXTRN	?ReleaseBuffer@CString@@QAEXH@Z:NEAR		; CString::ReleaseBuffer
EXTRN	?RestoreLocation@CSkinWnd@@QAE_NXZ:NEAR		; CSkinWnd::RestoreLocation
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
EXTRN	??0CVerbList@@QAE@XZ:NEAR			; CVerbList::CVerbList
EXTRN	?AfxInitRichEdit@@YGHXZ:NEAR			; AfxInitRichEdit
EXTRN	??0CSingleInstance@@QAE@XZ:NEAR			; CSingleInstance::CSingleInstance
EXTRN	?Create@CSingleInstance@@QAEHPAD@Z:NEAR		; CSingleInstance::Create
EXTRN	??0SoundMgr@@QAE@XZ:NEAR			; SoundMgr::SoundMgr
EXTRN	__imp__AddFontResourceA@4:NEAR
EXTRN	?Create@CSplashDlg@@QAEHPAVCWnd@@@Z:NEAR	; CSplashDlg::Create
EXTRN	__imp__GetWindowsDirectoryA@8:NEAR
EXTRN	__imp__GetCurrentDirectoryA@8:NEAR
EXTRN	?Fatal@MsgMgr@@QAAXPADZZ:NEAR			; MsgMgr::Fatal
EXTRN	??0CWindowMgr@@QAE@XZ:NEAR			; CWindowMgr::CWindowMgr
EXTRN	?soundMgr@@3PAVSoundMgr@@A:DWORD		; soundMgr
EXTRN	?AfxEnableControlContainer@@YAXPAVCOccManager@@@Z:NEAR ; AfxEnableControlContainer
EXTRN	__imp__exit:NEAR
EXTRN	?LoadWindowPositions@CWindowMgr@@QAEHXZ:NEAR	; CWindowMgr::LoadWindowPositions
EXTRN	?g_pWindowMgr@@3PAVCWindowMgr@@A:DWORD		; g_pWindowMgr
EXTRN	?msgMgr@@3PAVMsgMgr@@A:DWORD			; msgMgr
EXTRN	__imp__GetFocus@0:NEAR
EXTRN	__imp__MessageBoxA@16:NEAR
EXTRN	_fg_modeset:NEAR
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:NEAR			; CWnd::ShowWindow
EXTRN	??0CDragDropMgr@@QAE@XZ:NEAR			; CDragDropMgr::CDragDropMgr
EXTRN	__imp__CopyFileA@12:NEAR
EXTRN	?g_pDragDropMgr@@3PAVCDragDropMgr@@A:DWORD	; g_pDragDropMgr
EXTRN	__imp__FreeLibrary@4:NEAR
EXTRN	__imp__GetProcAddress@8:NEAR
EXTRN	_WSAStartup@8:NEAR
EXTRN	??0CNameHealthDisplay@@QAE@XZ:NEAR		; CNameHealthDisplay::CNameHealthDisplay
EXTRN	?g_pNameHealthDisplay@@3PAVCNameHealthDisplay@@A:DWORD ; g_pNameHealthDisplay
EXTRN	??0CMinRestoreClose@@QAE@XZ:NEAR		; CMinRestoreClose::CMinRestoreClose
EXTRN	?g_pMinRestoreClose@@3PAVCMinRestoreClose@@A:DWORD ; g_pMinRestoreClose
EXTRN	__imp__strtok:NEAR
EXTRN	__imp__GetSystemMetrics@4:NEAR
EXTRN	?gArgc@@3HA:DWORD				; gArgc
EXTRN	?gArgv@@3PAPADA:DWORD				; gArgv
EXTRN	?GetScreenInfo@@YAXXZ:NEAR			; GetScreenInfo
EXTRN	?CheckConfig@@YAXXZ:NEAR			; CheckConfig
EXTRN	?scimain@@YAHHQAPAD@Z:NEAR			; scimain
_BSS	SEGMENT
$SG169929 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG169766 DB	'Software\Microsoft\Internet Explorer', 00H
	ORG $+3
$SG169771 DB	'Version', 00H
$SG169772 DB	'Old Internet Explorer Found', 00H
$SG169773 DB	'The Realm Online requires Microsoft''s Internet Explorer'
	DB	' version 4.0 or later to operate properly.  We have detected '
	DB	'a version of Internet Explorer that is too old to be used.  P'
	DB	'lease download and install the latest version of Internet Exp'
	DB	'lorer from Microsoft at http://www.microsoft.com/windows/ie b'
	DB	'efore playing The Realm Online.', 00H
	ORG $+1
$SG169775 DB	'Internet Explorer Not Found', 00H
$SG169776 DB	'The Realm Online requires Microsoft''s Internet Explorer'
	DB	' version 4.0 or later to operate properly.  We can not find a'
	DB	'ny version of Internet Explorer on your machine.  Please down'
	DB	'load and install Internet Explorer from Microsoft at http://w'
	DB	'ww.microsoft.com/windows/ie before playing The Realm Online.', 00H
	ORG $+1
$SG169782 DB	'RealmGame3', 00H
	ORG $+1
$SG169787 DB	'NETERR: The WINSOCK.DLL that you have is not suitable.  '
	DB	'You need a version 1.1 WINSOCK.DLL to use this application.  '
	DB	'You have version (0x%x, 0x%x) of the library.  Result code is'
	DB	' %d!', 00H
	ORG $+1
$SG169789 DB	'activeskin.ocx', 00H
	ORG $+1
$SG169793 DB	'DllRegisterServer', 00H
	ORG $+2
$SG169798 DB	' ', 00H
	ORG $+2
$SG169802 DB	' ', 00H
	ORG $+2
$SG169806 DB	'sciw.exe', 00H
	ORG $+3
$SG169818 DB	'\', 00H
	ORG $+2
$SG169819 DB	'\', 00H
	ORG $+2
$SG169820 DB	'Fonts\reale___.ttf', 00H
	ORG $+1
$SG169825 DB	'\', 00H
	ORG $+2
$SG169826 DB	'\', 00H
	ORG $+2
$SG169827 DB	'reale___.ttf', 00H
	ORG $+3
$SG169831 DB	'Unsupported Color Depth', 00H
$SG169832 DB	'Your desktop is currently set to support less than 16 bi'
	DB	't color.  The Realm Online requires that your desktop support'
	DB	' at least 16 bit color.  Would you like to change your deskto'
	DB	'p settings and continue playing?', 00H
	ORG $+1
$SG169837 DB	'Success', 00H
$SG169838 DB	'Your desktop has been reconfigured.  Click OK to continu'
	DB	'e playing.', 00H
	ORG $+1
$SG169841 DB	'Restart Required', 00H
	ORG $+3
$SG169842 DB	'Your desktop has been reconfigured, but you must restart'
	DB	' Windows for the new settings to take effect.  Please restart'
	DB	' Windows.', 00H
	ORG $+1
$SG169844 DB	'Error', 00H
	ORG $+2
$SG169845 DB	'Your desktop could not be reconfigured.  Please check yo'
	DB	'ur system settings and try again.', 00H
	ORG $+2
$SG169932 DB	'loadingwindow', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T176130 DD	019930520H
	DD	0dH
	DD	FLAT:$T176135
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T176135 DD	0ffffffffH
	DD	FLAT:$L176114
	DD	0ffffffffH
	DD	FLAT:$L176115
	DD	01H
	DD	FLAT:$L176116
	DD	01H
	DD	FLAT:$L176117
	DD	03H
	DD	FLAT:$L176118
	DD	03H
	DD	FLAT:$L176119
	DD	03H
	DD	FLAT:$L176120
	DD	03H
	DD	FLAT:$L176121
	DD	03H
	DD	FLAT:$L176122
	DD	03H
	DD	FLAT:$L176123
	DD	03H
	DD	FLAT:$L176124
	DD	03H
	DD	FLAT:$L176125
	DD	03H
	DD	FLAT:$L176126
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -1112
_hRegKey$ = -696
_achVersion$169767 = -980
_ulSize$169768 = -984
_wsaData$ = -432
_wVersion$ = -24
_nResult$ = -724
_hSkinLib$ = -712
_pSplash$ = -708
_lpfn$169792 = -988
_pToken$ = -720
_i$ = -700
_sWinDir$ = -692
_sCurDir$ = -716
_nColors$ = -704
_nScreenWidth$169833 = -996
_nScreenHeight$169834 = -992
_nResult$169835 = -1000
_nPosnsLoaded$ = -32
$T176068 = -1008
$T176069 = -1012
$T176072 = -1016
_key$ = -688
$T176073 = -1020
$T176074 = -1024
_nSplash$ = -20
$T176075 = -1028
$T176076 = -1032
$T176077 = -1036
_pValue$169933 = -1004
$T176078 = -1040
$T176081 = -1044
$T176082 = -1048
$T176085 = -1052
$T176086 = -1056
$T176089 = -1060
$T176090 = -1064
$T176093 = -1068
$T176094 = -1072
$T176097 = -1076
$T176098 = -1080
$T176101 = -1084
$T176102 = -1088
_nScreenWidth$ = -28
_nScreenHeight$ = -16
$T176105 = -1092
$T176106 = -1096
$T176109 = -1100
$T176110 = -1104
$T176113 = -1108
__$EHRec$ = -12
?InitInstance@CSciApp@@UAEHXZ PROC NEAR			; CSciApp::InitInstance

; 109  : {

  0003f	55		 push	 ebp
  00040	8b ec		 mov	 ebp, esp
  00042	6a ff		 push	 -1
  00044	68 00 00 00 00	 push	 $L176131
  00049	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0004f	50		 push	 eax
  00050	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00057	81 ec 88 04 00
	00		 sub	 esp, 1160		; 00000488H
  0005d	57		 push	 edi
  0005e	89 8d a8 fb ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 110  : 	// we need to check for internet explorer version 4.0 and above...
; 111  : 	HKEY hRegKey;
; 112  : 
; 113  : 	// if the version key exists in the registry, it's at least version 4.0...
; 114  : 	if ( RegOpenKeyEx ( HKEY_LOCAL_MACHINE, "Software\\Microsoft\\Internet Explorer", 0, KEY_QUERY_VALUE, &hRegKey ) == ERROR_SUCCESS ) {

  00064	8d 85 48 fd ff
	ff		 lea	 eax, DWORD PTR _hRegKey$[ebp]
  0006a	50		 push	 eax
  0006b	6a 01		 push	 1
  0006d	6a 00		 push	 0
  0006f	68 00 00 00 00	 push	 OFFSET FLAT:$SG169766
  00074	68 02 00 00 80	 push	 -2147483646		; 80000002H
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyExA@20
  0007f	85 c0		 test	 eax, eax
  00081	75 72		 jne	 SHORT $L169765

; 115  : 		// this string holds the current version of IE...
; 116  : 		char achVersion[256];
; 117  : 		DWORD ulSize = sizeof ( achVersion );

  00083	c7 85 28 fc ff
	ff 00 01 00 00	 mov	 DWORD PTR _ulSize$169768[ebp], 256 ; 00000100H

; 118  : 
; 119  : 		// get the version information...
; 120  : 		if ( RegQueryValueEx( hRegKey, "Version", NULL, NULL, (LPBYTE)achVersion, &ulSize ) != ERROR_SUCCESS ) {

  0008d	8d 8d 28 fc ff
	ff		 lea	 ecx, DWORD PTR _ulSize$169768[ebp]
  00093	51		 push	 ecx
  00094	8d 95 2c fc ff
	ff		 lea	 edx, DWORD PTR _achVersion$169767[ebp]
  0009a	52		 push	 edx
  0009b	6a 00		 push	 0
  0009d	6a 00		 push	 0
  0009f	68 00 00 00 00	 push	 OFFSET FLAT:$SG169771
  000a4	8b 85 48 fd ff
	ff		 mov	 eax, DWORD PTR _hRegKey$[ebp]
  000aa	50		 push	 eax
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegQueryValueExA@24
  000b1	85 c0		 test	 eax, eax
  000b3	74 31		 je	 SHORT $L169770

; 121  : 			RegCloseKey ( hRegKey );

  000b5	8b 8d 48 fd ff
	ff		 mov	 ecx, DWORD PTR _hRegKey$[ebp]
  000bb	51		 push	 ecx
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4

; 122  : 
; 123  : 			::MessageBox ( GetFocus(), "The Realm Online requires Microsoft's Internet Explorer version 4.0 or later to operate properly.  We have detected a version of Internet Explorer that is too old to be used.  Please download and install the latest version of Internet Explorer from Microsoft at http://www.microsoft.com/windows/ie before playing The Realm Online.", "Old Internet Explorer Found", MB_TASKMODAL );

  000c2	68 00 20 00 00	 push	 8192			; 00002000H
  000c7	68 00 00 00 00	 push	 OFFSET FLAT:$SG169772
  000cc	68 00 00 00 00	 push	 OFFSET FLAT:$SG169773
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  000d7	50		 push	 eax
  000d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 124  : 			exit ( 0 );

  000de	6a 00		 push	 0
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L169770:

; 126  : 
; 127  : 		// close the registry key...
; 128  : 		RegCloseKey ( hRegKey );

  000e6	8b 95 48 fd ff
	ff		 mov	 edx, DWORD PTR _hRegKey$[ebp]
  000ec	52		 push	 edx
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4

; 129  : 	} else {

  000f3	eb 24		 jmp	 SHORT $L169774
$L169765:

; 130  : 		::MessageBox ( GetFocus(), "The Realm Online requires Microsoft's Internet Explorer version 4.0 or later to operate properly.  We can not find any version of Internet Explorer on your machine.  Please download and install Internet Explorer from Microsoft at http://www.microsoft.com/windows/ie before playing The Realm Online.", "Internet Explorer Not Found", MB_TASKMODAL );

  000f5	68 00 20 00 00	 push	 8192			; 00002000H
  000fa	68 00 00 00 00	 push	 OFFSET FLAT:$SG169775
  000ff	68 00 00 00 00	 push	 OFFSET FLAT:$SG169776
  00104	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  0010a	50		 push	 eax
  0010b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 131  : 		exit ( 0 );

  00111	6a 00		 push	 0
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L169774:

; 133  : 
; 134  : 	// make sure only one instance of the game is running at a time...
; 135  :     m_pSingleInstance = new CSingleInstance();

  00119	6a 08		 push	 8
  0011b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00120	83 c4 04	 add	 esp, 4
  00123	89 85 0c fc ff
	ff		 mov	 DWORD PTR $T176069[ebp], eax
  00129	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00130	83 bd 0c fc ff
	ff 00		 cmp	 DWORD PTR $T176069[ebp], 0
  00137	74 13		 je	 SHORT $L176070
  00139	8b 8d 0c fc ff
	ff		 mov	 ecx, DWORD PTR $T176069[ebp]
  0013f	e8 00 00 00 00	 call	 ??0CSingleInstance@@QAE@XZ ; CSingleInstance::CSingleInstance
  00144	89 85 a4 fb ff
	ff		 mov	 DWORD PTR -1116+[ebp], eax
  0014a	eb 0a		 jmp	 SHORT $L176071
$L176070:
  0014c	c7 85 a4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1116+[ebp], 0
$L176071:
  00156	8b 85 a4 fb ff
	ff		 mov	 eax, DWORD PTR -1116+[ebp]
  0015c	89 85 10 fc ff
	ff		 mov	 DWORD PTR $T176068[ebp], eax
  00162	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00169	8b 8d a8 fb ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 95 10 fc ff
	ff		 mov	 edx, DWORD PTR $T176068[ebp]
  00175	89 91 c4 00 00
	00		 mov	 DWORD PTR [ecx+196], edx

; 136  : 
; 137  :     if ( !m_pSingleInstance->Create( "RealmGame3" ) ) 

  0017b	68 00 00 00 00	 push	 OFFSET FLAT:$SG169782
  00180	8b 85 a8 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00186	8b 88 c4 00 00
	00		 mov	 ecx, DWORD PTR [eax+196]
  0018c	e8 00 00 00 00	 call	 ?Create@CSingleInstance@@QAEHPAD@Z ; CSingleInstance::Create
  00191	85 c0		 test	 eax, eax
  00193	75 07		 jne	 SHORT $L169781

; 139  :         return FALSE;

  00195	33 c0		 xor	 eax, eax
  00197	e9 4b 0b 00 00	 jmp	 $L169762
$L169781:

; 143  : 	WORD wVersion = 0x0101;

  0019c	66 c7 45 e8 01
	01		 mov	 WORD PTR _wVersion$[ebp], 257 ; 00000101H

; 144  : 
; 145  : 	int nResult = WSAStartup ( wVersion, &wsaData );

  001a2	8d 8d 50 fe ff
	ff		 lea	 ecx, DWORD PTR _wsaData$[ebp]
  001a8	51		 push	 ecx
  001a9	66 8b 55 e8	 mov	 dx, WORD PTR _wVersion$[ebp]
  001ad	52		 push	 edx
  001ae	e8 00 00 00 00	 call	 _WSAStartup@8
  001b3	89 85 2c fd ff
	ff		 mov	 DWORD PTR _nResult$[ebp], eax

; 146  : 
; 147  : 	if ( nResult != 0 ) {

  001b9	83 bd 2c fd ff
	ff 00		 cmp	 DWORD PTR _nResult$[ebp], 0
  001c0	74 34		 je	 SHORT $L169786

; 148  : 		msgMgr->Fatal ( "NETERR: The WINSOCK.DLL that you have is not suitable.  You need a version 1.1 WINSOCK.DLL to use this application.  You have version (0x%x, 0x%x) of the library.  Result code is %d!", wsaData.wHighVersion, wsaData.wVersion, nResult );

  001c2	8b 85 2c fd ff
	ff		 mov	 eax, DWORD PTR _nResult$[ebp]
  001c8	50		 push	 eax
  001c9	8b 8d 50 fe ff
	ff		 mov	 ecx, DWORD PTR _wsaData$[ebp]
  001cf	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  001d5	51		 push	 ecx
  001d6	8b 95 52 fe ff
	ff		 mov	 edx, DWORD PTR _wsaData$[ebp+2]
  001dc	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  001e2	52		 push	 edx
  001e3	68 00 00 00 00	 push	 OFFSET FLAT:$SG169787
  001e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  001ed	50		 push	 eax
  001ee	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXPADZZ ; MsgMgr::Fatal
  001f3	83 c4 14	 add	 esp, 20			; 00000014H
$L169786:

; 150  : 
; 151  : 
; 152  : 	// register the activeskin ocx
; 153  : 	HINSTANCE hSkinLib = ::LoadLibrary ( "activeskin.ocx" );

  001f6	68 00 00 00 00	 push	 OFFSET FLAT:$SG169789
  001fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  00201	89 85 38 fd ff
	ff		 mov	 DWORD PTR _hSkinLib$[ebp], eax

; 154  : 	CSplashDlg *pSplash;
; 155  : 
; 156  : 	g_pMainWindow = NULL;

  00207	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A, 0 ; g_pMainWindow

; 157  : 
; 158  : 	if ( hSkinLib ) {

  00211	83 bd 38 fd ff
	ff 00		 cmp	 DWORD PTR _hSkinLib$[ebp], 0
  00218	74 34		 je	 SHORT $L169791

; 159  : 		FARPROC lpfn = ::GetProcAddress ( hSkinLib, "DllRegisterServer" );

  0021a	68 00 00 00 00	 push	 OFFSET FLAT:$SG169793
  0021f	8b 8d 38 fd ff
	ff		 mov	 ecx, DWORD PTR _hSkinLib$[ebp]
  00225	51		 push	 ecx
  00226	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0022c	89 85 24 fc ff
	ff		 mov	 DWORD PTR _lpfn$169792[ebp], eax

; 160  : 
; 161  : 		if ( lpfn )

  00232	83 bd 24 fc ff
	ff 00		 cmp	 DWORD PTR _lpfn$169792[ebp], 0
  00239	74 06		 je	 SHORT $L169794

; 162  : 			(*lpfn)();

  0023b	ff 95 24 fc ff
	ff		 call	 DWORD PTR _lpfn$169792[ebp]
$L169794:

; 163  : 
; 164  : 		::FreeLibrary ( hSkinLib );

  00241	8b 95 38 fd ff
	ff		 mov	 edx, DWORD PTR _hSkinLib$[ebp]
  00247	52		 push	 edx
  00248	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
$L169791:

; 168  : 	extern char **gArgv;
; 169  : 
; 170  : 	gArgc = 1;

  0024e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?gArgc@@3HA, 1 ; gArgc

; 171  : 
; 172  : 	char* pToken = strtok( m_lpCmdLine, " " );

  00258	68 00 00 00 00	 push	 OFFSET FLAT:$SG169798
  0025d	8b 85 a8 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00263	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  00266	51		 push	 ecx
  00267	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0026d	83 c4 08	 add	 esp, 8
  00270	89 85 30 fd ff
	ff		 mov	 DWORD PTR _pToken$[ebp], eax
$L169800:

; 173  : 
; 174  : 	while ( pToken ) {

  00276	83 bd 30 fd ff
	ff 00		 cmp	 DWORD PTR _pToken$[ebp], 0
  0027d	74 27		 je	 SHORT $L169801

; 175  : 		gArgc++;

  0027f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gArgc@@3HA ; gArgc
  00285	83 c2 01	 add	 edx, 1
  00288	89 15 00 00 00
	00		 mov	 DWORD PTR ?gArgc@@3HA, edx ; gArgc

; 176  : 
; 177  : 		pToken = strtok( NULL, " " );

  0028e	68 00 00 00 00	 push	 OFFSET FLAT:$SG169802
  00293	6a 00		 push	 0
  00295	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0029b	83 c4 08	 add	 esp, 8
  0029e	89 85 30 fd ff
	ff		 mov	 DWORD PTR _pToken$[ebp], eax

; 178  : 	}

  002a4	eb d0		 jmp	 SHORT $L169800
$L169801:

; 179  : 
; 180  : 	gArgv = (char**) new int[ gArgc ];

  002a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gArgc@@3HA ; gArgc
  002ab	c1 e0 02	 shl	 eax, 2
  002ae	50		 push	 eax
  002af	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  002b4	83 c4 04	 add	 esp, 4
  002b7	89 85 08 fc ff
	ff		 mov	 DWORD PTR $T176072[ebp], eax
  002bd	8b 8d 08 fc ff
	ff		 mov	 ecx, DWORD PTR $T176072[ebp]
  002c3	89 0d 00 00 00
	00		 mov	 DWORD PTR ?gArgv@@3PAPADA, ecx ; gArgv

; 181  : 
; 182  : 	gArgv[0] = "sciw.exe";

  002c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gArgv@@3PAPADA ; gArgv
  002cf	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET FLAT:$SG169806

; 183  : 
; 184  : 	pToken = m_lpCmdLine;

  002d5	8b 85 a8 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  002db	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  002de	89 8d 30 fd ff
	ff		 mov	 DWORD PTR _pToken$[ebp], ecx

; 185  : 
; 186  : 	for (int i = 1;i < gArgc;i++) {

  002e4	c7 85 44 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _i$[ebp], 1
  002ee	eb 0f		 jmp	 SHORT $L169808
$L169809:
  002f0	8b 95 44 fd ff
	ff		 mov	 edx, DWORD PTR _i$[ebp]
  002f6	83 c2 01	 add	 edx, 1
  002f9	89 95 44 fd ff
	ff		 mov	 DWORD PTR _i$[ebp], edx
$L169808:
  002ff	8b 85 44 fd ff
	ff		 mov	 eax, DWORD PTR _i$[ebp]
  00305	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gArgc@@3HA ; gArgc
  0030b	7d 44		 jge	 SHORT $L169810

; 187  : 		gArgv[i] = pToken;

  0030d	8b 8d 44 fd ff
	ff		 mov	 ecx, DWORD PTR _i$[ebp]
  00313	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gArgv@@3PAPADA ; gArgv
  00319	8b 85 30 fd ff
	ff		 mov	 eax, DWORD PTR _pToken$[ebp]
  0031f	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax
$L169812:

; 188  : 
; 189  : 		while ( *pToken ) pToken++;

  00322	8b 8d 30 fd ff
	ff		 mov	 ecx, DWORD PTR _pToken$[ebp]
  00328	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  0032b	85 d2		 test	 edx, edx
  0032d	74 11		 je	 SHORT $L169813
  0032f	8b 85 30 fd ff
	ff		 mov	 eax, DWORD PTR _pToken$[ebp]
  00335	83 c0 01	 add	 eax, 1
  00338	89 85 30 fd ff
	ff		 mov	 DWORD PTR _pToken$[ebp], eax
  0033e	eb e2		 jmp	 SHORT $L169812
$L169813:

; 190  : 
; 191  : 		pToken++;

  00340	8b 8d 30 fd ff
	ff		 mov	 ecx, DWORD PTR _pToken$[ebp]
  00346	83 c1 01	 add	 ecx, 1
  00349	89 8d 30 fd ff
	ff		 mov	 DWORD PTR _pToken$[ebp], ecx

; 192  : 	}

  0034f	eb 9f		 jmp	 SHORT $L169809
$L169810:

; 193  : 
; 194  : 
; 195  : 	CString sWinDir;

  00351	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR _sWinDir$[ebp]
  00357	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0035c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 196  : 
; 197  : 	GetWindowsDirectory( sWinDir.GetBuffer( 1024 ), 1023 );

  00363	68 ff 03 00 00	 push	 1023			; 000003ffH
  00368	68 00 04 00 00	 push	 1024			; 00000400H
  0036d	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR _sWinDir$[ebp]
  00373	e8 00 00 00 00	 call	 ?GetBuffer@CString@@QAEPADH@Z ; CString::GetBuffer
  00378	50		 push	 eax
  00379	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowsDirectoryA@8

; 198  : 	sWinDir.ReleaseBuffer();

  0037f	6a ff		 push	 -1
  00381	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR _sWinDir$[ebp]
  00387	e8 00 00 00 00	 call	 ?ReleaseBuffer@CString@@QAEXH@Z ; CString::ReleaseBuffer

; 199  : 
; 200  : 	if ( sWinDir.Right( 1 ) != "\\" ) {

  0038c	68 00 00 00 00	 push	 OFFSET FLAT:$SG169818
  00391	6a 01		 push	 1
  00393	8d 95 00 fc ff
	ff		 lea	 edx, DWORD PTR $T176074[ebp]
  00399	52		 push	 edx
  0039a	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR _sWinDir$[ebp]
  003a0	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  003a5	89 85 a0 fb ff
	ff		 mov	 DWORD PTR -1120+[ebp], eax
  003ab	8b 85 a0 fb ff
	ff		 mov	 eax, DWORD PTR -1120+[ebp]
  003b1	89 85 9c fb ff
	ff		 mov	 DWORD PTR -1124+[ebp], eax
  003b7	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  003bb	8b 8d 9c fb ff
	ff		 mov	 ecx, DWORD PTR -1124+[ebp]
  003c1	51		 push	 ecx
  003c2	e8 00 00 00 00	 call	 ??9@YG_NABVCString@@PBD@Z ; operator!=
  003c7	88 85 04 fc ff
	ff		 mov	 BYTE PTR $T176073[ebp], al
  003cd	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  003d1	8d 8d 00 fc ff
	ff		 lea	 ecx, DWORD PTR $T176074[ebp]
  003d7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  003dc	8b 95 04 fc ff
	ff		 mov	 edx, DWORD PTR $T176073[ebp]
  003e2	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  003e8	85 d2		 test	 edx, edx
  003ea	74 10		 je	 SHORT $L169816

; 201  : 		sWinDir += "\\";

  003ec	68 00 00 00 00	 push	 OFFSET FLAT:$SG169819
  003f1	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR _sWinDir$[ebp]
  003f7	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=
$L169816:

; 203  : 
; 204  : 	sWinDir += "Fonts\\reale___.ttf";

  003fc	68 00 00 00 00	 push	 OFFSET FLAT:$SG169820
  00401	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR _sWinDir$[ebp]
  00407	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=

; 205  : 
; 206  : 	CString sCurDir;

  0040c	8d 8d 34 fd ff
	ff		 lea	 ecx, DWORD PTR _sCurDir$[ebp]
  00412	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00417	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 207  : 
; 208  : 	GetCurrentDirectory( 1023, sCurDir.GetBuffer( 1024 ) );

  0041b	68 00 04 00 00	 push	 1024			; 00000400H
  00420	8d 8d 34 fd ff
	ff		 lea	 ecx, DWORD PTR _sCurDir$[ebp]
  00426	e8 00 00 00 00	 call	 ?GetBuffer@CString@@QAEPADH@Z ; CString::GetBuffer
  0042b	50		 push	 eax
  0042c	68 ff 03 00 00	 push	 1023			; 000003ffH
  00431	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentDirectoryA@8

; 209  : 	sCurDir.ReleaseBuffer();

  00437	6a ff		 push	 -1
  00439	8d 8d 34 fd ff
	ff		 lea	 ecx, DWORD PTR _sCurDir$[ebp]
  0043f	e8 00 00 00 00	 call	 ?ReleaseBuffer@CString@@QAEXH@Z ; CString::ReleaseBuffer

; 210  : 
; 211  : 	if ( sCurDir.Right( 1 ) != "\\" ) {

  00444	68 00 00 00 00	 push	 OFFSET FLAT:$SG169825
  00449	6a 01		 push	 1
  0044b	8d 85 f8 fb ff
	ff		 lea	 eax, DWORD PTR $T176076[ebp]
  00451	50		 push	 eax
  00452	8d 8d 34 fd ff
	ff		 lea	 ecx, DWORD PTR _sCurDir$[ebp]
  00458	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  0045d	89 85 98 fb ff
	ff		 mov	 DWORD PTR -1128+[ebp], eax
  00463	8b 8d 98 fb ff
	ff		 mov	 ecx, DWORD PTR -1128+[ebp]
  00469	89 8d 94 fb ff
	ff		 mov	 DWORD PTR -1132+[ebp], ecx
  0046f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00473	8b 95 94 fb ff
	ff		 mov	 edx, DWORD PTR -1132+[ebp]
  00479	52		 push	 edx
  0047a	e8 00 00 00 00	 call	 ??9@YG_NABVCString@@PBD@Z ; operator!=
  0047f	88 85 fc fb ff
	ff		 mov	 BYTE PTR $T176075[ebp], al
  00485	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00489	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR $T176076[ebp]
  0048f	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00494	8b 85 fc fb ff
	ff		 mov	 eax, DWORD PTR $T176075[ebp]
  0049a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0049f	85 c0		 test	 eax, eax
  004a1	74 10		 je	 SHORT $L169823

; 212  : 		sCurDir += "\\";

  004a3	68 00 00 00 00	 push	 OFFSET FLAT:$SG169826
  004a8	8d 8d 34 fd ff
	ff		 lea	 ecx, DWORD PTR _sCurDir$[ebp]
  004ae	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=
$L169823:

; 214  : 
; 215  : 	sCurDir += "reale___.ttf";

  004b3	68 00 00 00 00	 push	 OFFSET FLAT:$SG169827
  004b8	8d 8d 34 fd ff
	ff		 lea	 ecx, DWORD PTR _sCurDir$[ebp]
  004be	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@PBD@Z ; CString::operator+=

; 216  : 	
; 217  : 	CopyFile( sCurDir, sWinDir, TRUE );

  004c3	6a 01		 push	 1
  004c5	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR _sWinDir$[ebp]
  004cb	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  004d0	50		 push	 eax
  004d1	8d 8d 34 fd ff
	ff		 lea	 ecx, DWORD PTR _sCurDir$[ebp]
  004d7	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  004dc	50		 push	 eax
  004dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CopyFileA@12

; 218  : 
; 219  : 	AddFontResource( sWinDir );

  004e3	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR _sWinDir$[ebp]
  004e9	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  004ee	50		 push	 eax
  004ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AddFontResourceA@4

; 220  : 
; 221  : 	// enable ActiveX control containment...
; 222  : 	AfxEnableControlContainer();

  004f5	6a 00		 push	 0
  004f7	e8 00 00 00 00	 call	 ?AfxEnableControlContainer@@YAXPAVCOccManager@@@Z ; AfxEnableControlContainer
  004fc	83 c4 04	 add	 esp, 4

; 223  : 
; 224  : 	// init RichEdit controls...
; 225  : 	AfxInitRichEdit();

  004ff	e8 00 00 00 00	 call	 ?AfxInitRichEdit@@YGHXZ	; AfxInitRichEdit

; 226  : 
; 227  : 	// default location for global mouse point
; 228  : 	g_MouseLocation.x = 320;

  00504	c7 05 00 00 00
	00 40 01 00 00	 mov	 DWORD PTR ?g_MouseLocation@@3UtagPOINT@@A, 320 ; 00000140H

; 229  : 	g_MouseLocation.y = 240;

  0050e	c7 05 04 00 00
	00 f0 00 00 00	 mov	 DWORD PTR ?g_MouseLocation@@3UtagPOINT@@A+4, 240 ; 000000f0H

; 230  : 
; 231  : 	// check for at least 16-bit color and prompt for a automatic change...
; 232  : 	int nColors = fg_colors();

  00518	e8 00 00 00 00	 call	 _fg_colors
  0051d	89 85 40 fd ff
	ff		 mov	 DWORD PTR _nColors$[ebp], eax

; 233  : 
; 234  : 	if ( nColors < 16 ) {

  00523	83 bd 40 fd ff
	ff 10		 cmp	 DWORD PTR _nColors$[ebp], 16 ; 00000010H
  0052a	0f 8d e3 00 00
	00		 jge	 $L169846

; 235  : 		if ( IDYES == ::MessageBox ( ::GetFocus(), "Your desktop is currently set to support less than 16 bit color.  The Realm Online requires that your desktop support at least 16 bit color.  Would you like to change your desktop settings and continue playing?", "Unsupported Color Depth", MB_TASKMODAL | MB_YESNO ) ) {

  00530	68 04 20 00 00	 push	 8196			; 00002004H
  00535	68 00 00 00 00	 push	 OFFSET FLAT:$SG169831
  0053a	68 00 00 00 00	 push	 OFFSET FLAT:$SG169832
  0053f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  00545	50		 push	 eax
  00546	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
  0054c	83 f8 06	 cmp	 eax, 6
  0054f	0f 85 b6 00 00
	00		 jne	 $L169830

; 236  : 			int nScreenWidth = GetSystemMetrics ( SM_CXSCREEN );

  00555	6a 00		 push	 0
  00557	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  0055d	89 85 1c fc ff
	ff		 mov	 DWORD PTR _nScreenWidth$169833[ebp], eax

; 237  : 			int nScreenHeight = GetSystemMetrics ( SM_CYSCREEN );

  00563	6a 01		 push	 1
  00565	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  0056b	89 85 20 fc ff
	ff		 mov	 DWORD PTR _nScreenHeight$169834[ebp], eax

; 238  : 
; 239  : 			int nResult = fg_modeset ( nScreenWidth, nScreenHeight, 16, 1 );

  00571	6a 01		 push	 1
  00573	6a 10		 push	 16			; 00000010H
  00575	8b 8d 20 fc ff
	ff		 mov	 ecx, DWORD PTR _nScreenHeight$169834[ebp]
  0057b	51		 push	 ecx
  0057c	8b 95 1c fc ff
	ff		 mov	 edx, DWORD PTR _nScreenWidth$169833[ebp]
  00582	52		 push	 edx
  00583	e8 00 00 00 00	 call	 _fg_modeset
  00588	83 c4 10	 add	 esp, 16			; 00000010H
  0058b	89 85 18 fc ff
	ff		 mov	 DWORD PTR _nResult$169835[ebp], eax

; 240  : 
; 241  : 			if ( nResult == 0 ) {

  00591	83 bd 18 fc ff
	ff 00		 cmp	 DWORD PTR _nResult$169835[ebp], 0
  00598	75 1e		 jne	 SHORT $L169836

; 242  : 				::MessageBox ( ::GetFocus(), "Your desktop has been reconfigured.  Click OK to continue playing.", "Success", MB_TASKMODAL );

  0059a	68 00 20 00 00	 push	 8192			; 00002000H
  0059f	68 00 00 00 00	 push	 OFFSET FLAT:$SG169837
  005a4	68 00 00 00 00	 push	 OFFSET FLAT:$SG169838
  005a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  005af	50		 push	 eax
  005b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 244  : 
; 245  : 			else if ( nResult == 1 ) {

  005b6	eb 51		 jmp	 SHORT $L169843
$L169836:
  005b8	83 bd 18 fc ff
	ff 01		 cmp	 DWORD PTR _nResult$169835[ebp], 1
  005bf	75 24		 jne	 SHORT $L169840

; 246  : 				::MessageBox ( ::GetFocus(), "Your desktop has been reconfigured, but you must restart Windows for the new settings to take effect.  Please restart Windows.", "Restart Required", MB_TASKMODAL );

  005c1	68 00 20 00 00	 push	 8192			; 00002000H
  005c6	68 00 00 00 00	 push	 OFFSET FLAT:$SG169841
  005cb	68 00 00 00 00	 push	 OFFSET FLAT:$SG169842
  005d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  005d6	50		 push	 eax
  005d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 247  : 				exit ( 1 );

  005dd	6a 01		 push	 1
  005df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L169840:

; 251  : 				::MessageBox ( ::GetFocus(), "Your desktop could not be reconfigured.  Please check your system settings and try again.", "Error", MB_TASKMODAL );

  005e5	68 00 20 00 00	 push	 8192			; 00002000H
  005ea	68 00 00 00 00	 push	 OFFSET FLAT:$SG169844
  005ef	68 00 00 00 00	 push	 OFFSET FLAT:$SG169845
  005f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  005fa	50		 push	 eax
  005fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 252  : 				exit ( 1 );

  00601	6a 01		 push	 1
  00603	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L169843:

; 254  : 		} else {

  00609	eb 08		 jmp	 SHORT $L169846
$L169830:

; 255  : 		 	exit ( 1 );

  0060b	6a 01		 push	 1
  0060d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L169846:

; 261  : 	GetScreenInfo();

  00613	e8 00 00 00 00	 call	 ?GetScreenInfo@@YAXXZ	; GetScreenInfo

; 262  : 
; 263  : 	// allow SCI to check the configuration...
; 264  : 	extern void CheckConfig ( void );
; 265  : 	CheckConfig();

  00618	e8 00 00 00 00	 call	 ?CheckConfig@@YAXXZ	; CheckConfig

; 266  : 
; 267  : 	// create the global verb list
; 268  : 	g_pVerbList = new CVerbList;

  0061d	6a 14		 push	 20			; 00000014H
  0061f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00624	83 c4 04	 add	 esp, 4
  00627	89 85 f0 fb ff
	ff		 mov	 DWORD PTR $T176078[ebp], eax
  0062d	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00631	83 bd f0 fb ff
	ff 00		 cmp	 DWORD PTR $T176078[ebp], 0
  00638	74 13		 je	 SHORT $L176079
  0063a	8b 8d f0 fb ff
	ff		 mov	 ecx, DWORD PTR $T176078[ebp]
  00640	e8 00 00 00 00	 call	 ??0CVerbList@@QAE@XZ	; CVerbList::CVerbList
  00645	89 85 90 fb ff
	ff		 mov	 DWORD PTR -1136+[ebp], eax
  0064b	eb 0a		 jmp	 SHORT $L176080
$L176079:
  0064d	c7 85 90 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1136+[ebp], 0
$L176080:
  00657	8b 85 90 fb ff
	ff		 mov	 eax, DWORD PTR -1136+[ebp]
  0065d	89 85 f4 fb ff
	ff		 mov	 DWORD PTR $T176077[ebp], eax
  00663	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00667	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR $T176077[ebp]
  0066d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?g_pVerbList@@3PAVCVerbList@@A, ecx ; g_pVerbList

; 269  : 
; 270  : 	// create the global window manager
; 271  : 	g_pWindowMgr = new CWindowMgr;

  00673	6a 54		 push	 84			; 00000054H
  00675	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0067a	83 c4 04	 add	 esp, 4
  0067d	89 85 e8 fb ff
	ff		 mov	 DWORD PTR $T176082[ebp], eax
  00683	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00687	83 bd e8 fb ff
	ff 00		 cmp	 DWORD PTR $T176082[ebp], 0
  0068e	74 13		 je	 SHORT $L176083
  00690	8b 8d e8 fb ff
	ff		 mov	 ecx, DWORD PTR $T176082[ebp]
  00696	e8 00 00 00 00	 call	 ??0CWindowMgr@@QAE@XZ	; CWindowMgr::CWindowMgr
  0069b	89 85 8c fb ff
	ff		 mov	 DWORD PTR -1140+[ebp], eax
  006a1	eb 0a		 jmp	 SHORT $L176084
$L176083:
  006a3	c7 85 8c fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1140+[ebp], 0
$L176084:
  006ad	8b 95 8c fb ff
	ff		 mov	 edx, DWORD PTR -1140+[ebp]
  006b3	89 95 ec fb ff
	ff		 mov	 DWORD PTR $T176081[ebp], edx
  006b9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  006bd	8b 85 ec fb ff
	ff		 mov	 eax, DWORD PTR $T176081[ebp]
  006c3	a3 00 00 00 00	 mov	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, eax ; g_pWindowMgr

; 272  : 
; 273  : 	// create the main window...
; 274  : 	m_pMainWnd = g_pMainWindow = new CMainWindow;

  006c8	68 bc 00 00 00	 push	 188			; 000000bcH
  006cd	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  006d2	89 85 e0 fb ff
	ff		 mov	 DWORD PTR $T176086[ebp], eax
  006d8	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  006dc	83 bd e0 fb ff
	ff 00		 cmp	 DWORD PTR $T176086[ebp], 0
  006e3	74 13		 je	 SHORT $L176087
  006e5	8b 8d e0 fb ff
	ff		 mov	 ecx, DWORD PTR $T176086[ebp]
  006eb	e8 00 00 00 00	 call	 ??0CMainWindow@@QAE@XZ	; CMainWindow::CMainWindow
  006f0	89 85 88 fb ff
	ff		 mov	 DWORD PTR -1144+[ebp], eax
  006f6	eb 0a		 jmp	 SHORT $L176088
$L176087:
  006f8	c7 85 88 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1144+[ebp], 0
$L176088:
  00702	8b 8d 88 fb ff
	ff		 mov	 ecx, DWORD PTR -1144+[ebp]
  00708	89 8d e4 fb ff
	ff		 mov	 DWORD PTR $T176085[ebp], ecx
  0070e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00712	8b 95 e4 fb ff
	ff		 mov	 edx, DWORD PTR $T176085[ebp]
  00718	89 15 00 00 00
	00		 mov	 DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A, edx ; g_pMainWindow
  0071e	8b 85 a8 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00724	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  0072a	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 275  : 
; 276  : 	// create the global full-screen min/restore/close buttons...
; 277  : 	g_pMinRestoreClose = new CMinRestoreClose;

  0072d	68 94 00 00 00	 push	 148			; 00000094H
  00732	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00737	89 85 d8 fb ff
	ff		 mov	 DWORD PTR $T176090[ebp], eax
  0073d	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00741	83 bd d8 fb ff
	ff 00		 cmp	 DWORD PTR $T176090[ebp], 0
  00748	74 13		 je	 SHORT $L176091
  0074a	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T176090[ebp]
  00750	e8 00 00 00 00	 call	 ??0CMinRestoreClose@@QAE@XZ ; CMinRestoreClose::CMinRestoreClose
  00755	89 85 84 fb ff
	ff		 mov	 DWORD PTR -1148+[ebp], eax
  0075b	eb 0a		 jmp	 SHORT $L176092
$L176091:
  0075d	c7 85 84 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1148+[ebp], 0
$L176092:
  00767	8b 95 84 fb ff
	ff		 mov	 edx, DWORD PTR -1148+[ebp]
  0076d	89 95 dc fb ff
	ff		 mov	 DWORD PTR $T176089[ebp], edx
  00773	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00777	8b 85 dc fb ff
	ff		 mov	 eax, DWORD PTR $T176089[ebp]
  0077d	a3 00 00 00 00	 mov	 DWORD PTR ?g_pMinRestoreClose@@3PAVCMinRestoreClose@@A, eax ; g_pMinRestoreClose

; 278  : 
; 279  : 	// create the global name / health display...
; 280  : 	g_pNameHealthDisplay = new CNameHealthDisplay;

  00782	68 bc 00 00 00	 push	 188			; 000000bcH
  00787	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  0078c	89 85 d0 fb ff
	ff		 mov	 DWORD PTR $T176094[ebp], eax
  00792	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00796	83 bd d0 fb ff
	ff 00		 cmp	 DWORD PTR $T176094[ebp], 0
  0079d	74 13		 je	 SHORT $L176095
  0079f	8b 8d d0 fb ff
	ff		 mov	 ecx, DWORD PTR $T176094[ebp]
  007a5	e8 00 00 00 00	 call	 ??0CNameHealthDisplay@@QAE@XZ ; CNameHealthDisplay::CNameHealthDisplay
  007aa	89 85 80 fb ff
	ff		 mov	 DWORD PTR -1152+[ebp], eax
  007b0	eb 0a		 jmp	 SHORT $L176096
$L176095:
  007b2	c7 85 80 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1152+[ebp], 0
$L176096:
  007bc	8b 8d 80 fb ff
	ff		 mov	 ecx, DWORD PTR -1152+[ebp]
  007c2	89 8d d4 fb ff
	ff		 mov	 DWORD PTR $T176093[ebp], ecx
  007c8	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  007cc	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T176093[ebp]
  007d2	89 15 00 00 00
	00		 mov	 DWORD PTR ?g_pNameHealthDisplay@@3PAVCNameHealthDisplay@@A, edx ; g_pNameHealthDisplay

; 281  : 
; 282  : 	pSplash = new CSplashDlg;

  007d8	68 94 00 00 00	 push	 148			; 00000094H
  007dd	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  007e2	89 85 c8 fb ff
	ff		 mov	 DWORD PTR $T176098[ebp], eax
  007e8	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  007ec	83 bd c8 fb ff
	ff 00		 cmp	 DWORD PTR $T176098[ebp], 0
  007f3	74 13		 je	 SHORT $L176099
  007f5	8b 8d c8 fb ff
	ff		 mov	 ecx, DWORD PTR $T176098[ebp]
  007fb	e8 00 00 00 00	 call	 ??0CSplashDlg@@QAE@XZ	; CSplashDlg::CSplashDlg
  00800	89 85 7c fb ff
	ff		 mov	 DWORD PTR -1156+[ebp], eax
  00806	eb 0a		 jmp	 SHORT $L176100
$L176099:
  00808	c7 85 7c fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1156+[ebp], 0
$L176100:
  00812	8b 85 7c fb ff
	ff		 mov	 eax, DWORD PTR -1156+[ebp]
  00818	89 85 cc fb ff
	ff		 mov	 DWORD PTR $T176097[ebp], eax
  0081e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00822	8b 8d cc fb ff
	ff		 mov	 ecx, DWORD PTR $T176097[ebp]
  00828	89 8d 3c fd ff
	ff		 mov	 DWORD PTR _pSplash$[ebp], ecx

; 283  : 	pSplash->Create ( m_pMainWnd );	

  0082e	8b 95 a8 fb ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00834	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00837	50		 push	 eax
  00838	8b 8d 3c fd ff
	ff		 mov	 ecx, DWORD PTR _pSplash$[ebp]
  0083e	e8 00 00 00 00	 call	 ?Create@CSplashDlg@@QAEHPAVCWnd@@@Z ; CSplashDlg::Create

; 284  : 
; 285  : 	pSplash->UpdateWindow();

  00843	8b 8d 3c fd ff
	ff		 mov	 ecx, DWORD PTR _pSplash$[ebp]
  00849	e8 00 00 00 00	 call	 ?UpdateWindow@CWnd@@QAEXXZ ; CWnd::UpdateWindow

; 286  : 
; 287  : 	// create the global drag and drop manager
; 288  : 	g_pDragDropMgr = new CDragDropMgr;

  0084e	68 9c 00 00 00	 push	 156			; 0000009cH
  00853	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  00858	89 85 c0 fb ff
	ff		 mov	 DWORD PTR $T176102[ebp], eax
  0085e	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  00862	83 bd c0 fb ff
	ff 00		 cmp	 DWORD PTR $T176102[ebp], 0
  00869	74 13		 je	 SHORT $L176103
  0086b	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T176102[ebp]
  00871	e8 00 00 00 00	 call	 ??0CDragDropMgr@@QAE@XZ	; CDragDropMgr::CDragDropMgr
  00876	89 85 78 fb ff
	ff		 mov	 DWORD PTR -1160+[ebp], eax
  0087c	eb 0a		 jmp	 SHORT $L176104
$L176103:
  0087e	c7 85 78 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1160+[ebp], 0
$L176104:
  00888	8b 8d 78 fb ff
	ff		 mov	 ecx, DWORD PTR -1160+[ebp]
  0088e	89 8d c4 fb ff
	ff		 mov	 DWORD PTR $T176101[ebp], ecx
  00894	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00898	8b 95 c4 fb ff
	ff		 mov	 edx, DWORD PTR $T176101[ebp]
  0089e	89 15 00 00 00
	00		 mov	 DWORD PTR ?g_pDragDropMgr@@3PAVCDragDropMgr@@A, edx ; g_pDragDropMgr

; 289  : 
; 290  : 	pSplash->UpdateWindow();

  008a4	8b 8d 3c fd ff
	ff		 mov	 ecx, DWORD PTR _pSplash$[ebp]
  008aa	e8 00 00 00 00	 call	 ?UpdateWindow@CWnd@@QAEXXZ ; CWnd::UpdateWindow

; 291  : 
; 292  : 	// load the window positions
; 293  : 	int nPosnsLoaded = g_pWindowMgr->LoadWindowPositions();

  008af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  008b5	e8 00 00 00 00	 call	 ?LoadWindowPositions@CWindowMgr@@QAEHXZ ; CWindowMgr::LoadWindowPositions
  008ba	89 45 e0	 mov	 DWORD PTR _nPosnsLoaded$[ebp], eax

; 294  : 
; 295  : 	pSplash->UpdateWindow();

  008bd	8b 8d 3c fd ff
	ff		 mov	 ecx, DWORD PTR _pSplash$[ebp]
  008c3	e8 00 00 00 00	 call	 ?UpdateWindow@CWnd@@QAEXXZ ; CWnd::UpdateWindow

; 296  : 
; 297  : 	// reposition the main window if we loaded position information...
; 298  : 	if ( nPosnsLoaded )

  008c8	83 7d e0 00	 cmp	 DWORD PTR _nPosnsLoaded$[ebp], 0
  008cc	74 0b		 je	 SHORT $L169880

; 299  : 		g_pMainWindow->RestoreLocation();

  008ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  008d4	e8 00 00 00 00	 call	 ?RestoreLocation@CSkinWnd@@QAE_NXZ ; CSkinWnd::RestoreLocation
$L169880:

; 300  : 
; 301  : 	pSplash->UpdateWindow();

  008d9	8b 8d 3c fd ff
	ff		 mov	 ecx, DWORD PTR _pSplash$[ebp]
  008df	e8 00 00 00 00	 call	 ?UpdateWindow@CWnd@@QAEXXZ ; CWnd::UpdateWindow

; 302  : 
; 303  : 	GetCurrentDirectory( 1024, g_sConfigDir );

  008e4	68 00 00 00 00	 push	 OFFSET FLAT:?g_sConfigDir@@3PADA ; g_sConfigDir
  008e9	68 00 04 00 00	 push	 1024			; 00000400H
  008ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentDirectoryA@8

; 304  : 
; 305  : 	pSplash->UpdateWindow();

  008f4	8b 8d 3c fd ff
	ff		 mov	 ecx, DWORD PTR _pSplash$[ebp]
  008fa	e8 00 00 00 00	 call	 ?UpdateWindow@CWnd@@QAEXXZ ; CWnd::UpdateWindow

; 306  : 
; 307  : 	g_hArrowCursor = ::LoadCursor( NULL, IDC_ARROW );

  008ff	68 00 7f 00 00	 push	 32512			; 00007f00H
  00904	6a 00		 push	 0
  00906	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  0090c	a3 00 00 00 00	 mov	 DWORD PTR ?g_hArrowCursor@@3PAUHICON__@@A, eax ; g_hArrowCursor

; 308  : 	g_hWaitCursor = ::LoadCursor( NULL, IDC_WAIT );

  00911	68 02 7f 00 00	 push	 32514			; 00007f02H
  00916	6a 00		 push	 0
  00918	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  0091e	a3 00 00 00 00	 mov	 DWORD PTR ?g_hWaitCursor@@3PAUHICON__@@A, eax ; g_hWaitCursor

; 309  :     g_hNoCursor = ::LoadCursor( NULL, IDC_NO );

  00923	68 88 7f 00 00	 push	 32648			; 00007f88H
  00928	6a 00		 push	 0
  0092a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00930	a3 00 00 00 00	 mov	 DWORD PTR ?g_hNoCursor@@3PAUHICON__@@A, eax ; g_hNoCursor

; 310  : 	g_hHandCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_DO) );

  00935	6a 7b		 push	 123			; 0000007bH
  00937	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  0093c	50		 push	 eax
  0093d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00943	a3 00 00 00 00	 mov	 DWORD PTR ?g_hHandCursor@@3PAUHICON__@@A, eax ; g_hHandCursor

; 311  : 	g_hWalkCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_WALK) );

  00948	6a 77		 push	 119			; 00000077H
  0094a	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  0094f	50		 push	 eax
  00950	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00956	a3 00 00 00 00	 mov	 DWORD PTR ?g_hWalkCursor@@3PAUHICON__@@A, eax ; g_hWalkCursor

; 312  : 	g_hDropCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_DROP) );

  0095b	6a 79		 push	 121			; 00000079H
  0095d	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  00962	50		 push	 eax
  00963	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00969	a3 00 00 00 00	 mov	 DWORD PTR ?g_hDropCursor@@3PAUHICON__@@A, eax ; g_hDropCursor

; 313  : 	g_hExitLeftCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_EXITLEFT) );

  0096e	6a 7e		 push	 126			; 0000007eH
  00970	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  00975	50		 push	 eax
  00976	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  0097c	a3 00 00 00 00	 mov	 DWORD PTR ?g_hExitLeftCursor@@3PAUHICON__@@A, eax ; g_hExitLeftCursor

; 314  : 	g_hExitRightCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_EXITRIGHT) );

  00981	6a 7f		 push	 127			; 0000007fH
  00983	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  00988	50		 push	 eax
  00989	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  0098f	a3 00 00 00 00	 mov	 DWORD PTR ?g_hExitRightCursor@@3PAUHICON__@@A, eax ; g_hExitRightCursor

; 315  : 	g_hExitUpCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_EXITUP) );

  00994	68 80 00 00 00	 push	 128			; 00000080H
  00999	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  0099e	50		 push	 eax
  0099f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  009a5	a3 00 00 00 00	 mov	 DWORD PTR ?g_hExitUpCursor@@3PAUHICON__@@A, eax ; g_hExitUpCursor

; 316  : 	g_hExitDownCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_EXITDOWN) );

  009aa	68 81 00 00 00	 push	 129			; 00000081H
  009af	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  009b4	50		 push	 eax
  009b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  009bb	a3 00 00 00 00	 mov	 DWORD PTR ?g_hExitDownCursor@@3PAUHICON__@@A, eax ; g_hExitDownCursor

; 317  : 	g_hPutCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_PUTIN) );

  009c0	6a 78		 push	 120			; 00000078H
  009c2	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  009c7	50		 push	 eax
  009c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  009ce	a3 00 00 00 00	 mov	 DWORD PTR ?g_hPutCursor@@3PAUHICON__@@A, eax ; g_hPutCursor

; 318  : 	g_hSpellCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_SPELL) );

  009d3	6a 7c		 push	 124			; 0000007cH
  009d5	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  009da	50		 push	 eax
  009db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  009e1	a3 00 00 00 00	 mov	 DWORD PTR ?g_hSpellCursor@@3PAUHICON__@@A, eax ; g_hSpellCursor

; 319  : 	g_hSwordCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_SWORD) );

  009e6	6a 7d		 push	 125			; 0000007dH
  009e8	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  009ed	50		 push	 eax
  009ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  009f4	a3 00 00 00 00	 mov	 DWORD PTR ?g_hSwordCursor@@3PAUHICON__@@A, eax ; g_hSwordCursor

; 320  : 	g_hVerbCursor = ::LoadCursor( AfxGetInstanceHandle(), MAKEINTRESOURCE(IDC_VERB) );

  009f9	68 82 00 00 00	 push	 130			; 00000082H
  009fe	e8 00 00 00 00	 call	 ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ; AfxGetInstanceHandle
  00a03	50		 push	 eax
  00a04	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00a0a	a3 00 00 00 00	 mov	 DWORD PTR ?g_hVerbCursor@@3PAUHICON__@@A, eax ; g_hVerbCursor

; 321  : 
; 322  : 	// init the interpreter
; 323  : 	// more nasty SCI hook code...
; 324  : 	extern int scimain (int argc, char *argv[] );
; 325  : 	scimain ( gArgc, gArgv );

  00a0f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gArgv@@3PAPADA ; gArgv
  00a14	50		 push	 eax
  00a15	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gArgc@@3HA ; gArgc
  00a1b	51		 push	 ecx
  00a1c	e8 00 00 00 00	 call	 ?scimain@@YAHHQAPAD@Z	; scimain
  00a21	83 c4 08	 add	 esp, 8

; 326  : 
; 327  : 	pSplash->ShowWindow ( SW_HIDE );

  00a24	6a 00		 push	 0
  00a26	8b 8d 3c fd ff
	ff		 mov	 ecx, DWORD PTR _pSplash$[ebp]
  00a2c	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 328  : 	delete pSplash;

  00a31	8b 95 3c fd ff
	ff		 mov	 edx, DWORD PTR _pSplash$[ebp]
  00a37	89 95 b8 fb ff
	ff		 mov	 DWORD PTR $T176106[ebp], edx
  00a3d	8b 85 b8 fb ff
	ff		 mov	 eax, DWORD PTR $T176106[ebp]
  00a43	89 85 bc fb ff
	ff		 mov	 DWORD PTR $T176105[ebp], eax
  00a49	83 bd bc fb ff
	ff 00		 cmp	 DWORD PTR $T176105[ebp], 0
  00a50	74 1b		 je	 SHORT $L176107
  00a52	6a 01		 push	 1
  00a54	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR $T176105[ebp]
  00a5a	8b 11		 mov	 edx, DWORD PTR [ecx]
  00a5c	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR $T176105[ebp]
  00a62	ff 52 04	 call	 DWORD PTR [edx+4]
  00a65	89 85 74 fb ff
	ff		 mov	 DWORD PTR -1164+[ebp], eax
  00a6b	eb 0a		 jmp	 SHORT $L176108
$L176107:
  00a6d	c7 85 74 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1164+[ebp], 0
$L176108:

; 329  : 
; 330  : 	char key[256]="";

  00a77	a0 00 00 00 00	 mov	 al, BYTE PTR $SG169929
  00a7c	88 85 50 fd ff
	ff		 mov	 BYTE PTR _key$[ebp], al
  00a82	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00a87	33 c0		 xor	 eax, eax
  00a89	8d bd 51 fd ff
	ff		 lea	 edi, DWORD PTR _key$[ebp+1]
  00a8f	f3 ab		 rep stosd
  00a91	66 ab		 stosw
  00a93	aa		 stosb

; 331  : 	int nSplash = 0;

  00a94	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nSplash$[ebp], 0

; 332  : 
; 333  : 	if (GetEnvironmentVariable("loadingwindow", key, 255)) {

  00a9b	68 ff 00 00 00	 push	 255			; 000000ffH
  00aa0	8d 8d 50 fd ff
	ff		 lea	 ecx, DWORD PTR _key$[ebp]
  00aa6	51		 push	 ecx
  00aa7	68 00 00 00 00	 push	 OFFSET FLAT:$SG169932
  00aac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetEnvironmentVariableA@12
  00ab2	85 c0		 test	 eax, eax
  00ab4	0f 84 32 01 00
	00		 je	 $L169931

; 334  : 		char* pValue = key;

  00aba	8d 95 50 fd ff
	ff		 lea	 edx, DWORD PTR _key$[ebp]
  00ac0	89 95 14 fc ff
	ff		 mov	 DWORD PTR _pValue$169933[ebp], edx
$L169935:

; 335  : 
; 336  : 		while ( *pValue ) {

  00ac6	8b 85 14 fc ff
	ff		 mov	 eax, DWORD PTR _pValue$169933[ebp]
  00acc	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00acf	85 c9		 test	 ecx, ecx
  00ad1	0f 84 05 01 00
	00		 je	 $L169936

; 337  : 			nSplash *= 16;

  00ad7	8b 55 ec	 mov	 edx, DWORD PTR _nSplash$[ebp]
  00ada	c1 e2 04	 shl	 edx, 4
  00add	89 55 ec	 mov	 DWORD PTR _nSplash$[ebp], edx

; 338  : 
; 339  : 			switch ( *pValue ) {

  00ae0	8b 85 14 fc ff
	ff		 mov	 eax, DWORD PTR _pValue$169933[ebp]
  00ae6	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00ae9	89 8d 70 fb ff
	ff		 mov	 DWORD PTR -1168+[ebp], ecx
  00aef	8b 95 70 fb ff
	ff		 mov	 edx, DWORD PTR -1168+[ebp]
  00af5	83 ea 30	 sub	 edx, 48			; 00000030H
  00af8	89 95 70 fb ff
	ff		 mov	 DWORD PTR -1168+[ebp], edx
  00afe	83 bd 70 fb ff
	ff 36		 cmp	 DWORD PTR -1168+[ebp], 54 ; 00000036H
  00b05	0f 87 cc 00 00
	00		 ja	 $L169938
  00b0b	8b 8d 70 fb ff
	ff		 mov	 ecx, DWORD PTR -1168+[ebp]
  00b11	33 c0		 xor	 eax, eax
  00b13	8a 81 00 00 00
	00		 mov	 al, BYTE PTR $L176133[ecx]
  00b19	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L176134[eax*4]
$L169941:

; 340  : 				case '0':
; 341  : 					nSplash += 0;

  00b20	8b 55 ec	 mov	 edx, DWORD PTR _nSplash$[ebp]
  00b23	89 55 ec	 mov	 DWORD PTR _nSplash$[ebp], edx

; 342  : 					break;

  00b26	e9 ac 00 00 00	 jmp	 $L169938
$L169942:

; 343  : 				case '1':
; 344  : 					nSplash += 1;

  00b2b	8b 45 ec	 mov	 eax, DWORD PTR _nSplash$[ebp]
  00b2e	83 c0 01	 add	 eax, 1
  00b31	89 45 ec	 mov	 DWORD PTR _nSplash$[ebp], eax

; 345  : 					break;

  00b34	e9 9e 00 00 00	 jmp	 $L169938
$L169943:

; 346  : 				case '2':
; 347  : 					nSplash += 2;

  00b39	8b 4d ec	 mov	 ecx, DWORD PTR _nSplash$[ebp]
  00b3c	83 c1 02	 add	 ecx, 2
  00b3f	89 4d ec	 mov	 DWORD PTR _nSplash$[ebp], ecx

; 348  : 					break;

  00b42	e9 90 00 00 00	 jmp	 $L169938
$L169944:

; 349  : 				case '3':
; 350  : 					nSplash += 3;

  00b47	8b 55 ec	 mov	 edx, DWORD PTR _nSplash$[ebp]
  00b4a	83 c2 03	 add	 edx, 3
  00b4d	89 55 ec	 mov	 DWORD PTR _nSplash$[ebp], edx

; 351  : 					break;

  00b50	e9 82 00 00 00	 jmp	 $L169938
$L169945:

; 352  : 				case '4':
; 353  : 					nSplash += 4;

  00b55	8b 45 ec	 mov	 eax, DWORD PTR _nSplash$[ebp]
  00b58	83 c0 04	 add	 eax, 4
  00b5b	89 45 ec	 mov	 DWORD PTR _nSplash$[ebp], eax

; 354  : 					break;

  00b5e	eb 77		 jmp	 SHORT $L169938
$L169946:

; 355  : 				case '5':
; 356  : 					nSplash += 5;

  00b60	8b 4d ec	 mov	 ecx, DWORD PTR _nSplash$[ebp]
  00b63	83 c1 05	 add	 ecx, 5
  00b66	89 4d ec	 mov	 DWORD PTR _nSplash$[ebp], ecx

; 357  : 					break;

  00b69	eb 6c		 jmp	 SHORT $L169938
$L169947:

; 358  : 				case '6':
; 359  : 					nSplash += 6;

  00b6b	8b 55 ec	 mov	 edx, DWORD PTR _nSplash$[ebp]
  00b6e	83 c2 06	 add	 edx, 6
  00b71	89 55 ec	 mov	 DWORD PTR _nSplash$[ebp], edx

; 360  : 					break;

  00b74	eb 61		 jmp	 SHORT $L169938
$L169948:

; 361  : 				case '7':
; 362  : 					nSplash += 7;

  00b76	8b 45 ec	 mov	 eax, DWORD PTR _nSplash$[ebp]
  00b79	83 c0 07	 add	 eax, 7
  00b7c	89 45 ec	 mov	 DWORD PTR _nSplash$[ebp], eax

; 363  : 					break;

  00b7f	eb 56		 jmp	 SHORT $L169938
$L169949:

; 364  : 				case '8':
; 365  : 					nSplash += 8;

  00b81	8b 4d ec	 mov	 ecx, DWORD PTR _nSplash$[ebp]
  00b84	83 c1 08	 add	 ecx, 8
  00b87	89 4d ec	 mov	 DWORD PTR _nSplash$[ebp], ecx

; 366  : 					break;

  00b8a	eb 4b		 jmp	 SHORT $L169938
$L169950:

; 367  : 				case '9':
; 368  : 					nSplash += 9;

  00b8c	8b 55 ec	 mov	 edx, DWORD PTR _nSplash$[ebp]
  00b8f	83 c2 09	 add	 edx, 9
  00b92	89 55 ec	 mov	 DWORD PTR _nSplash$[ebp], edx

; 369  : 					break;

  00b95	eb 40		 jmp	 SHORT $L169938
$L169951:

; 370  : 				case 'a':
; 371  : 				case 'A':
; 372  : 					nSplash += 10;

  00b97	8b 45 ec	 mov	 eax, DWORD PTR _nSplash$[ebp]
  00b9a	83 c0 0a	 add	 eax, 10			; 0000000aH
  00b9d	89 45 ec	 mov	 DWORD PTR _nSplash$[ebp], eax

; 373  : 					break;

  00ba0	eb 35		 jmp	 SHORT $L169938
$L169952:

; 374  : 				case 'b':
; 375  : 				case 'B':
; 376  : 					nSplash += 11;

  00ba2	8b 4d ec	 mov	 ecx, DWORD PTR _nSplash$[ebp]
  00ba5	83 c1 0b	 add	 ecx, 11			; 0000000bH
  00ba8	89 4d ec	 mov	 DWORD PTR _nSplash$[ebp], ecx

; 377  : 					break;

  00bab	eb 2a		 jmp	 SHORT $L169938
$L169953:

; 378  : 				case 'c':
; 379  : 				case 'C':
; 380  : 					nSplash += 12;

  00bad	8b 55 ec	 mov	 edx, DWORD PTR _nSplash$[ebp]
  00bb0	83 c2 0c	 add	 edx, 12			; 0000000cH
  00bb3	89 55 ec	 mov	 DWORD PTR _nSplash$[ebp], edx

; 381  : 					break;

  00bb6	eb 1f		 jmp	 SHORT $L169938
$L169954:

; 382  : 				case 'd':
; 383  : 				case 'D':
; 384  : 					nSplash += 13;

  00bb8	8b 45 ec	 mov	 eax, DWORD PTR _nSplash$[ebp]
  00bbb	83 c0 0d	 add	 eax, 13			; 0000000dH
  00bbe	89 45 ec	 mov	 DWORD PTR _nSplash$[ebp], eax

; 385  : 					break;

  00bc1	eb 14		 jmp	 SHORT $L169938
$L169955:

; 386  : 				case 'e':
; 387  : 				case 'E':
; 388  : 					nSplash += 14;

  00bc3	8b 4d ec	 mov	 ecx, DWORD PTR _nSplash$[ebp]
  00bc6	83 c1 0e	 add	 ecx, 14			; 0000000eH
  00bc9	89 4d ec	 mov	 DWORD PTR _nSplash$[ebp], ecx

; 389  : 					break;

  00bcc	eb 09		 jmp	 SHORT $L169938
$L169956:

; 390  : 				case 'f':
; 391  : 				case 'F':
; 392  : 					nSplash += 15;

  00bce	8b 55 ec	 mov	 edx, DWORD PTR _nSplash$[ebp]
  00bd1	83 c2 0f	 add	 edx, 15			; 0000000fH
  00bd4	89 55 ec	 mov	 DWORD PTR _nSplash$[ebp], edx
$L169938:

; 395  : 		}

  00bd7	e9 ea fe ff ff	 jmp	 $L169935
$L169936:

; 396  : 
; 397  : 		::SendMessage( (HWND) nSplash, WM_CLOSE, 0, 0 );

  00bdc	6a 00		 push	 0
  00bde	6a 00		 push	 0
  00be0	6a 10		 push	 16			; 00000010H
  00be2	8b 45 ec	 mov	 eax, DWORD PTR _nSplash$[ebp]
  00be5	50		 push	 eax
  00be6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$L169931:

; 399  : 
; 400  : 
; 401  : 	m_pMainWnd->ShowWindow ( m_nCmdShow );

  00bec	8b 8d a8 fb ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00bf2	8b 51 78	 mov	 edx, DWORD PTR [ecx+120]
  00bf5	52		 push	 edx
  00bf6	8b 85 a8 fb ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00bfc	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00bff	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 402  : 	m_pMainWnd->Invalidate();

  00c04	6a 01		 push	 1
  00c06	8b 8d a8 fb ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00c0c	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  00c0f	e8 00 00 00 00	 call	 ?Invalidate@CWnd@@QAEXH@Z ; CWnd::Invalidate

; 403  : 
; 404  : 	// if the desktop resolution is 640x480, send a maximize to the main window...
; 405  : 	int nScreenWidth = GetSystemMetrics ( SM_CXSCREEN );

  00c14	6a 00		 push	 0
  00c16	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  00c1c	89 45 e4	 mov	 DWORD PTR _nScreenWidth$[ebp], eax

; 406  : 	int nScreenHeight = GetSystemMetrics ( SM_CYSCREEN );

  00c1f	6a 01		 push	 1
  00c21	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  00c27	89 45 f0	 mov	 DWORD PTR _nScreenHeight$[ebp], eax

; 407  : 
; 408  : 	if ( (nScreenWidth == 640) && (nScreenHeight == 480) ) {

  00c2a	81 7d e4 80 02
	00 00		 cmp	 DWORD PTR _nScreenWidth$[ebp], 640 ; 00000280H
  00c31	75 2a		 jne	 SHORT $L169960
  00c33	81 7d f0 e0 01
	00 00		 cmp	 DWORD PTR _nScreenHeight$[ebp], 480 ; 000001e0H
  00c3a	75 21		 jne	 SHORT $L169960

; 409  : 		m_pMainWnd->PostMessage( WM_SYSCOMMAND, SC_MAXIMIZE, 0 );

  00c3c	6a 00		 push	 0
  00c3e	68 30 f0 00 00	 push	 61488			; 0000f030H
  00c43	68 12 01 00 00	 push	 274			; 00000112H
  00c48	8b 95 a8 fb ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00c4e	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  00c51	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 410  : 		g_bForceFullScreen = true;

  00c56	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?g_bForceFullScreen@@3_NA, 1 ; g_bForceFullScreen
$L169960:

; 412  : 
; 413  : 	// init the sound system
; 414  : 	soundMgr = new SoundMgr;

  00c5d	68 14 35 00 00	 push	 13588			; 00003514H
  00c62	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c67	83 c4 04	 add	 esp, 4
  00c6a	89 85 b0 fb ff
	ff		 mov	 DWORD PTR $T176110[ebp], eax
  00c70	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00c74	83 bd b0 fb ff
	ff 00		 cmp	 DWORD PTR $T176110[ebp], 0
  00c7b	74 13		 je	 SHORT $L176111
  00c7d	8b 8d b0 fb ff
	ff		 mov	 ecx, DWORD PTR $T176110[ebp]
  00c83	e8 00 00 00 00	 call	 ??0SoundMgr@@QAE@XZ	; SoundMgr::SoundMgr
  00c88	89 85 6c fb ff
	ff		 mov	 DWORD PTR -1172+[ebp], eax
  00c8e	eb 0a		 jmp	 SHORT $L176112
$L176111:
  00c90	c7 85 6c fb ff
	ff 00 00 00 00	 mov	 DWORD PTR -1172+[ebp], 0
$L176112:
  00c9a	8b 85 6c fb ff
	ff		 mov	 eax, DWORD PTR -1172+[ebp]
  00ca0	89 85 b4 fb ff
	ff		 mov	 DWORD PTR $T176109[ebp], eax
  00ca6	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00caa	8b 8d b4 fb ff
	ff		 mov	 ecx, DWORD PTR $T176109[ebp]
  00cb0	89 0d 00 00 00
	00		 mov	 DWORD PTR ?soundMgr@@3PAVSoundMgr@@A, ecx ; soundMgr

; 415  : 
; 416  : 	return TRUE;

  00cb6	c7 85 ac fb ff
	ff 01 00 00 00	 mov	 DWORD PTR $T176113[ebp], 1
  00cc0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00cc4	8d 8d 34 fd ff
	ff		 lea	 ecx, DWORD PTR _sCurDir$[ebp]
  00cca	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00ccf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00cd6	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR _sWinDir$[ebp]
  00cdc	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00ce1	8b 85 ac fb ff
	ff		 mov	 eax, DWORD PTR $T176113[ebp]
$L169762:

; 417  : }

  00ce7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00cea	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00cf1	5f		 pop	 edi
  00cf2	8b e5		 mov	 esp, ebp
  00cf4	5d		 pop	 ebp
  00cf5	c3		 ret	 0
$L176134:
  00cf6	00 00 00 00	 DD	 $L169941
  00cfa	00 00 00 00	 DD	 $L169942
  00cfe	00 00 00 00	 DD	 $L169943
  00d02	00 00 00 00	 DD	 $L169944
  00d06	00 00 00 00	 DD	 $L169945
  00d0a	00 00 00 00	 DD	 $L169946
  00d0e	00 00 00 00	 DD	 $L169947
  00d12	00 00 00 00	 DD	 $L169948
  00d16	00 00 00 00	 DD	 $L169949
  00d1a	00 00 00 00	 DD	 $L169950
  00d1e	00 00 00 00	 DD	 $L169951
  00d22	00 00 00 00	 DD	 $L169952
  00d26	00 00 00 00	 DD	 $L169953
  00d2a	00 00 00 00	 DD	 $L169954
  00d2e	00 00 00 00	 DD	 $L169955
  00d32	00 00 00 00	 DD	 $L169956
  00d36	00 00 00 00	 DD	 $L169938
$L176133:
  00d3a	00		 DB	 0
  00d3b	01		 DB	 1
  00d3c	02		 DB	 2
  00d3d	03		 DB	 3
  00d3e	04		 DB	 4
  00d3f	05		 DB	 5
  00d40	06		 DB	 6
  00d41	07		 DB	 7
  00d42	08		 DB	 8
  00d43	09		 DB	 9
  00d44	10		 DB	 16			; 00000010H
  00d45	10		 DB	 16			; 00000010H
  00d46	10		 DB	 16			; 00000010H
  00d47	10		 DB	 16			; 00000010H
  00d48	10		 DB	 16			; 00000010H
  00d49	10		 DB	 16			; 00000010H
  00d4a	10		 DB	 16			; 00000010H
  00d4b	0a		 DB	 10			; 0000000aH
  00d4c	0b		 DB	 11			; 0000000bH
  00d4d	0c		 DB	 12			; 0000000cH
  00d4e	0d		 DB	 13			; 0000000dH
  00d4f	0e		 DB	 14			; 0000000eH
  00d50	0f		 DB	 15			; 0000000fH
  00d51	10		 DB	 16			; 00000010H
  00d52	10		 DB	 16			; 00000010H
  00d53	10		 DB	 16			; 00000010H
  00d54	10		 DB	 16			; 00000010H
  00d55	10		 DB	 16			; 00000010H
  00d56	10		 DB	 16			; 00000010H
  00d57	10		 DB	 16			; 00000010H
  00d58	10		 DB	 16			; 00000010H
  00d59	10		 DB	 16			; 00000010H
  00d5a	10		 DB	 16			; 00000010H
  00d5b	10		 DB	 16			; 00000010H
  00d5c	10		 DB	 16			; 00000010H
  00d5d	10		 DB	 16			; 00000010H
  00d5e	10		 DB	 16			; 00000010H
  00d5f	10		 DB	 16			; 00000010H
  00d60	10		 DB	 16			; 00000010H
  00d61	10		 DB	 16			; 00000010H
  00d62	10		 DB	 16			; 00000010H
  00d63	10		 DB	 16			; 00000010H
  00d64	10		 DB	 16			; 00000010H
  00d65	10		 DB	 16			; 00000010H
  00d66	10		 DB	 16			; 00000010H
  00d67	10		 DB	 16			; 00000010H
  00d68	10		 DB	 16			; 00000010H
  00d69	10		 DB	 16			; 00000010H
  00d6a	10		 DB	 16			; 00000010H
  00d6b	0a		 DB	 10			; 0000000aH
  00d6c	0b		 DB	 11			; 0000000bH
  00d6d	0c		 DB	 12			; 0000000cH
  00d6e	0d		 DB	 13			; 0000000dH
  00d6f	0e		 DB	 14			; 0000000eH
  00d70	0f		 DB	 15			; 0000000fH
_TEXT	ENDS
text$x	SEGMENT
$L176114:
  00000	8b 85 0c fc ff
	ff		 mov	 eax, DWORD PTR $T176069[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	59		 pop	 ecx
  0000d	c3		 ret	 0
$L176115:
  0000e	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR _sWinDir$[ebp]
  00014	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00019	c3		 ret	 0
$L176116:
  0001a	8d 8d 00 fc ff
	ff		 lea	 ecx, DWORD PTR $T176074[ebp]
  00020	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00025	c3		 ret	 0
$L176117:
  00026	8d 8d 34 fd ff
	ff		 lea	 ecx, DWORD PTR _sCurDir$[ebp]
  0002c	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00031	c3		 ret	 0
$L176118:
  00032	8d 8d f8 fb ff
	ff		 lea	 ecx, DWORD PTR $T176076[ebp]
  00038	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0003d	c3		 ret	 0
$L176119:
  0003e	8b 85 f0 fb ff
	ff		 mov	 eax, DWORD PTR $T176078[ebp]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004a	59		 pop	 ecx
  0004b	c3		 ret	 0
$L176120:
  0004c	8b 85 e8 fb ff
	ff		 mov	 eax, DWORD PTR $T176082[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00058	59		 pop	 ecx
  00059	c3		 ret	 0
$L176121:
  0005a	8b 85 e0 fb ff
	ff		 mov	 eax, DWORD PTR $T176086[ebp]
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00066	c3		 ret	 0
$L176122:
  00067	8b 85 d8 fb ff
	ff		 mov	 eax, DWORD PTR $T176090[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00073	c3		 ret	 0
$L176123:
  00074	8b 85 d0 fb ff
	ff		 mov	 eax, DWORD PTR $T176094[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00080	c3		 ret	 0
$L176124:
  00081	8b 85 c8 fb ff
	ff		 mov	 eax, DWORD PTR $T176098[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0008d	c3		 ret	 0
$L176125:
  0008e	8b 85 c0 fb ff
	ff		 mov	 eax, DWORD PTR $T176102[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0009a	c3		 ret	 0
$L176126:
  0009b	8b 85 b0 fb ff
	ff		 mov	 eax, DWORD PTR $T176110[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a7	59		 pop	 ecx
  000a8	c3		 ret	 0
$L176131:
  000a9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176130
  000ae	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?InitInstance@CSciApp@@UAEHXZ ENDP			; CSciApp::InitInstance
PUBLIC	??0CSCI_WorldObject@@QAE@G@Z			; CSCI_WorldObject::CSCI_WorldObject
PUBLIC	??_GCSingleInstance@@QAEPAXI@Z			; CSingleInstance::`scalar deleting destructor'
PUBLIC	?GetGlobal@PMachine@@QAEFH@Z			; PMachine::GetGlobal
PUBLIC	??BMemID@@QBEGXZ				; MemID::operator unsigned short
EXTRN	?GetFullScreen@CWindowMgr@@QAEHXZ:NEAR		; CWindowMgr::GetFullScreen
EXTRN	?SetFullScreen@CWindowMgr@@QAEXH@Z:NEAR		; CWindowMgr::SetFullScreen
EXTRN	?NetDisconnect@@YAHXZ:NEAR			; NetDisconnect
EXTRN	?NetTerminate@@YAXXZ:NEAR			; NetTerminate
EXTRN	?CNetSend@@YAHPADZZ:NEAR			; CNetSend
EXTRN	_WSACleanup@0:NEAR
EXTRN	?pm@@3VPMachine@@A:BYTE				; pm
_DATA	SEGMENT
	ORG $+2
$SG169972 DB	't', 00H
_DATA	ENDS
_TEXT	SEGMENT
$T176138 = -8
$T176139 = -12
$T176142 = -16
$T176143 = -20
$T176146 = -24
$T176147 = -28
$T176150 = -32
$T176151 = -36
$T176154 = -40
$T176155 = -44
_this$ = -48
_hEgo$169970 = -4
?ExitInstance@CSciApp@@UAEHXZ PROC NEAR			; CSciApp::ExitInstance

; 419  : int CSciApp::ExitInstance( ) {

  00d71	55		 push	 ebp
  00d72	8b ec		 mov	 ebp, esp
  00d74	83 ec 44	 sub	 esp, 68			; 00000044H
  00d77	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 420  : 	if ( !g_bFatalMessage ) {

  00d7a	33 c0		 xor	 eax, eax
  00d7c	a0 00 00 00 00	 mov	 al, BYTE PTR ?g_bFatalMessage@@3_NA ; g_bFatalMessage
  00d81	85 c0		 test	 eax, eax
  00d83	75 3f		 jne	 SHORT $L169971

; 421  : 		CSCI_WorldObject hEgo = pm.GetGlobal( gSCI_ego );

  00d85	6a 01		 push	 1
  00d87	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?pm@@3VPMachine@@A
  00d8c	e8 00 00 00 00	 call	 ?GetGlobal@PMachine@@QAEFH@Z ; PMachine::GetGlobal
  00d91	50		 push	 eax
  00d92	8d 4d fc	 lea	 ecx, DWORD PTR _hEgo$169970[ebp]
  00d95	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@G@Z ; CSCI_WorldObject::CSCI_WorldObject

; 422  : 
; 423  : 		if ( hEgo ) {

  00d9a	8d 4d fc	 lea	 ecx, DWORD PTR _hEgo$169970[ebp]
  00d9d	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  00da2	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00da7	85 c0		 test	 eax, eax
  00da9	74 19		 je	 SHORT $L169971

; 424  : 			CNetSend( "t", REALM_LOGOUT );

  00dab	6a 16		 push	 22			; 00000016H
  00dad	68 00 00 00 00	 push	 OFFSET FLAT:$SG169972
  00db2	e8 00 00 00 00	 call	 ?CNetSend@@YAHPADZZ	; CNetSend
  00db7	83 c4 08	 add	 esp, 8

; 425  : 
; 426  : 			NetTerminate();

  00dba	e8 00 00 00 00	 call	 ?NetTerminate@@YAXXZ	; NetTerminate

; 427  : 			NetDisconnect();

  00dbf	e8 00 00 00 00	 call	 ?NetDisconnect@@YAHXZ	; NetDisconnect
$L169971:

; 430  : 
; 431  : 	WSACleanup();

  00dc4	e8 00 00 00 00	 call	 _WSACleanup@0

; 432  : 
; 433  : 	if ( g_pWindowMgr && g_pWindowMgr->GetFullScreen() ) 

  00dc9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  00dd0	74 1c		 je	 SHORT $L169973
  00dd2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  00dd8	e8 00 00 00 00	 call	 ?GetFullScreen@CWindowMgr@@QAEHXZ ; CWindowMgr::GetFullScreen
  00ddd	85 c0		 test	 eax, eax
  00ddf	74 0d		 je	 SHORT $L169973

; 435  : 		g_pWindowMgr->SetFullScreen( false );

  00de1	6a 00		 push	 0
  00de3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  00de9	e8 00 00 00 00	 call	 ?SetFullScreen@CWindowMgr@@QAEXH@Z ; CWindowMgr::SetFullScreen
$L169973:

; 437  : 
; 438  :     if (g_pDragDropMgr)

  00dee	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pDragDropMgr@@3PAVCDragDropMgr@@A, 0 ; g_pDragDropMgr
  00df5	74 38		 je	 SHORT $L169974

; 440  :         delete g_pDragDropMgr;

  00df7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDragDropMgr@@3PAVCDragDropMgr@@A ; g_pDragDropMgr
  00dfd	89 4d f4	 mov	 DWORD PTR $T176139[ebp], ecx
  00e00	8b 55 f4	 mov	 edx, DWORD PTR $T176139[ebp]
  00e03	89 55 f8	 mov	 DWORD PTR $T176138[ebp], edx
  00e06	83 7d f8 00	 cmp	 DWORD PTR $T176138[ebp], 0
  00e0a	74 12		 je	 SHORT $L176140
  00e0c	6a 01		 push	 1
  00e0e	8b 45 f8	 mov	 eax, DWORD PTR $T176138[ebp]
  00e11	8b 10		 mov	 edx, DWORD PTR [eax]
  00e13	8b 4d f8	 mov	 ecx, DWORD PTR $T176138[ebp]
  00e16	ff 52 04	 call	 DWORD PTR [edx+4]
  00e19	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  00e1c	eb 07		 jmp	 SHORT $L176141
$L176140:
  00e1e	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR -52+[ebp], 0
$L176141:

; 441  :         g_pDragDropMgr = NULL;

  00e25	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pDragDropMgr@@3PAVCDragDropMgr@@A, 0 ; g_pDragDropMgr
$L169974:

; 443  : 
; 444  :     // Clear up a bit
; 445  :     if (g_pWindowMgr)

  00e2f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  00e36	74 36		 je	 SHORT $L169977

; 447  :         delete g_pWindowMgr;

  00e38	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  00e3d	89 45 ec	 mov	 DWORD PTR $T176143[ebp], eax
  00e40	8b 4d ec	 mov	 ecx, DWORD PTR $T176143[ebp]
  00e43	89 4d f0	 mov	 DWORD PTR $T176142[ebp], ecx
  00e46	83 7d f0 00	 cmp	 DWORD PTR $T176142[ebp], 0
  00e4a	74 11		 je	 SHORT $L176144
  00e4c	6a 01		 push	 1
  00e4e	8b 55 f0	 mov	 edx, DWORD PTR $T176142[ebp]
  00e51	8b 02		 mov	 eax, DWORD PTR [edx]
  00e53	8b 4d f0	 mov	 ecx, DWORD PTR $T176142[ebp]
  00e56	ff 10		 call	 DWORD PTR [eax]
  00e58	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  00e5b	eb 07		 jmp	 SHORT $L176145
$L176144:
  00e5d	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR -56+[ebp], 0
$L176145:

; 448  :         g_pWindowMgr = NULL;

  00e64	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
$L169977:

; 450  : 
; 451  :     // Sound stuff
; 452  :     if (soundMgr)

  00e6e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?soundMgr@@3PAVSoundMgr@@A, 0 ; soundMgr
  00e75	74 37		 je	 SHORT $L169980

; 454  :         delete soundMgr;

  00e77	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?soundMgr@@3PAVSoundMgr@@A ; soundMgr
  00e7d	89 4d e4	 mov	 DWORD PTR $T176147[ebp], ecx
  00e80	8b 55 e4	 mov	 edx, DWORD PTR $T176147[ebp]
  00e83	89 55 e8	 mov	 DWORD PTR $T176146[ebp], edx
  00e86	83 7d e8 00	 cmp	 DWORD PTR $T176146[ebp], 0
  00e8a	74 11		 je	 SHORT $L176148
  00e8c	6a 01		 push	 1
  00e8e	8b 45 e8	 mov	 eax, DWORD PTR $T176146[ebp]
  00e91	8b 10		 mov	 edx, DWORD PTR [eax]
  00e93	8b 4d e8	 mov	 ecx, DWORD PTR $T176146[ebp]
  00e96	ff 12		 call	 DWORD PTR [edx]
  00e98	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  00e9b	eb 07		 jmp	 SHORT $L176149
$L176148:
  00e9d	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR -60+[ebp], 0
$L176149:

; 455  :         soundMgr = NULL;

  00ea4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?soundMgr@@3PAVSoundMgr@@A, 0 ; soundMgr
$L169980:

; 457  : 
; 458  :     // Verb list
; 459  :     if (g_pVerbList)

  00eae	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pVerbList@@3PAVCVerbList@@A, 0 ; g_pVerbList
  00eb5	74 36		 je	 SHORT $L169983

; 461  :         delete g_pVerbList;

  00eb7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pVerbList@@3PAVCVerbList@@A ; g_pVerbList
  00ebc	89 45 dc	 mov	 DWORD PTR $T176151[ebp], eax
  00ebf	8b 4d dc	 mov	 ecx, DWORD PTR $T176151[ebp]
  00ec2	89 4d e0	 mov	 DWORD PTR $T176150[ebp], ecx
  00ec5	83 7d e0 00	 cmp	 DWORD PTR $T176150[ebp], 0
  00ec9	74 11		 je	 SHORT $L176152
  00ecb	6a 01		 push	 1
  00ecd	8b 55 e0	 mov	 edx, DWORD PTR $T176150[ebp]
  00ed0	8b 02		 mov	 eax, DWORD PTR [edx]
  00ed2	8b 4d e0	 mov	 ecx, DWORD PTR $T176150[ebp]
  00ed5	ff 10		 call	 DWORD PTR [eax]
  00ed7	89 45 c0	 mov	 DWORD PTR -64+[ebp], eax
  00eda	eb 07		 jmp	 SHORT $L176153
$L176152:
  00edc	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR -64+[ebp], 0
$L176153:

; 462  :         g_pVerbList = NULL;

  00ee3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pVerbList@@3PAVCVerbList@@A, 0 ; g_pVerbList
$L169983:

; 464  : 
; 465  :     // Single instance mutex - remove
; 466  :     if (m_pSingleInstance)

  00eed	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ef0	83 b9 c4 00 00
	00 00		 cmp	 DWORD PTR [ecx+196], 0
  00ef7	74 3b		 je	 SHORT $L169986

; 468  :         delete m_pSingleInstance;

  00ef9	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  00efc	8b 82 c4 00 00
	00		 mov	 eax, DWORD PTR [edx+196]
  00f02	89 45 d4	 mov	 DWORD PTR $T176155[ebp], eax
  00f05	8b 4d d4	 mov	 ecx, DWORD PTR $T176155[ebp]
  00f08	89 4d d8	 mov	 DWORD PTR $T176154[ebp], ecx
  00f0b	83 7d d8 00	 cmp	 DWORD PTR $T176154[ebp], 0
  00f0f	74 0f		 je	 SHORT $L176156
  00f11	6a 01		 push	 1
  00f13	8b 4d d8	 mov	 ecx, DWORD PTR $T176154[ebp]
  00f16	e8 00 00 00 00	 call	 ??_GCSingleInstance@@QAEPAXI@Z ; CSingleInstance::`scalar deleting destructor'
  00f1b	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
  00f1e	eb 07		 jmp	 SHORT $L176157
$L176156:
  00f20	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR -68+[ebp], 0
$L176157:

; 469  :         m_pSingleInstance = NULL;

  00f27	8b 55 d0	 mov	 edx, DWORD PTR _this$[ebp]
  00f2a	c7 82 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+196], 0
$L169986:

; 471  : 
; 472  : 	return 0;

  00f34	33 c0		 xor	 eax, eax

; 473  : }

  00f36	8b e5		 mov	 esp, ebp
  00f38	5d		 pop	 ebp
  00f39	c3		 ret	 0
?ExitInstance@CSciApp@@UAEHXZ ENDP			; CSciApp::ExitInstance
_TEXT	ENDS
EXTRN	??1CSingleInstance@@QAE@XZ:NEAR			; CSingleInstance::~CSingleInstance
;	COMDAT ??_GCSingleInstance@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSingleInstance@@QAEPAXI@Z PROC NEAR		; CSingleInstance::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSingleInstance@@QAE@XZ ; CSingleInstance::~CSingleInstance
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L169992
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L169992:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSingleInstance@@QAEPAXI@Z ENDP			; CSingleInstance::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?Spells@CMainPanelWnd@@QAE_NXZ			; CMainPanelWnd::Spells
PUBLIC	?SelectTab@CMainPanelWnd@@QAEXH@Z		; CMainPanelWnd::SelectTab
PUBLIC	?SelectNextTab@CMainPanelWnd@@QAEXXZ		; CMainPanelWnd::SelectNextTab
PUBLIC	?SelectPreviousTab@CMainPanelWnd@@QAEXXZ	; CMainPanelWnd::SelectPreviousTab
PUBLIC	??0CSCI_Object@@QAE@G@Z				; CSCI_Object::CSCI_Object
PUBLIC	??0CSCI_Object@@QAE@ABV0@@Z			; CSCI_Object::CSCI_Object
PUBLIC	??0CSCI_WorldObject@@QAE@ABV0@@Z		; CSCI_WorldObject::CSCI_WorldObject
PUBLIC	?get_AltEnter@CToonSettings@@QAEHXZ		; CToonSettings::get_AltEnter
PUBLIC	?get_TabDisplay@CToonSettings@@QAEHXZ		; CToonSettings::get_TabDisplay
PUBLIC	?SendMessageA@CWnd@@QAEJIIJ@Z			; CWnd::SendMessageA
PUBLIC	?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z	; CWnd::ScreenToClient
PUBLIC	??0CPoint@@QAE@HH@Z				; CPoint::CPoint
PUBLIC	??0CPoint@@QAE@UtagPOINT@@@Z			; CPoint::CPoint
EXTRN	?GetClassByName@@YAGPAD@Z:NEAR			; GetClassByName
EXTRN	?Create@CMailBox@@QAEXXZ:NEAR			; CMailBox::Create
EXTRN	__imp__PostQuitMessage@4:NEAR
EXTRN	?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A:DWORD	; g_pMainPanelWnd
EXTRN	__imp__IsWindow@4:NEAR
EXTRN	??0CSpellListDlg@@QAE@VCSCI_Object@@F@Z:NEAR	; CSpellListDlg::CSpellListDlg
EXTRN	?Create@CSpellListDlg@@QAEHPAVCWnd@@@Z:NEAR	; CSpellListDlg::Create
EXTRN	?doit@CSCI_Object@@QAEFXZ:NEAR			; CSCI_Object::doit
EXTRN	?SendToBack@CSCIWnd@@QAEHXZ:NEAR		; CSCIWnd::SendToBack
EXTRN	?GetObjectFromPoint@CSCIWnd@@QAE?AVCSCI_WorldObject@@AAVCPoint@@_N@Z:NEAR ; CSCIWnd::GetObjectFromPoint
EXTRN	?ShowFriends@CFriendMgr@@QAEXXZ:NEAR		; CFriendMgr::ShowFriends
EXTRN	?g_pSpellListDialog@@3PAVCSpellListDlg@@A:DWORD	; g_pSpellListDialog
EXTRN	?g_pFriendMgr@@3PAVCFriendMgr@@A:DWORD		; g_pFriendMgr
EXTRN	?g_pSCIWnd@@3PAVCSCIWnd@@A:DWORD		; g_pSCIWnd
EXTRN	?g_pTreasureDlg@@3PAVCTreasureDlg@@A:DWORD	; g_pTreasureDlg
EXTRN	?Show@CPrivateTellMgr@@QAEPAVCPrivateTellDlg@@XZ:NEAR ; CPrivateTellMgr::Show
EXTRN	?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A:DWORD ; g_pPrivateTellMgr
EXTRN	?g_pGossipWnd@@3PAVCGossipWnd@@A:DWORD		; g_pGossipWnd
EXTRN	__imp__GetNextDlgTabItem@12:NEAR
EXTRN	?g_pTrackingWindow@@3PAVCSkinWnd@@A:DWORD	; g_pTrackingWindow
EXTRN	?FromScreenPoint@CMouseWheelable@@SAPAV1@AAVCPoint@@@Z:NEAR ; CMouseWheelable::FromScreenPoint
EXTRN	?GetGameModal@CWindowMgr@@QAEHH@Z:NEAR		; CWindowMgr::GetGameModal
EXTRN	?CloseAllTransientWindows@CWindowMgr@@QAEXXZ:NEAR ; CWindowMgr::CloseAllTransientWindows
EXTRN	?DestroyDeadSkinWindows@CWindowMgr@@QAEXXZ:NEAR	; CWindowMgr::DestroyDeadSkinWindows
EXTRN	?g_pToonSettings@@3PAVCToonSettings@@A:DWORD	; g_pToonSettings
EXTRN	__imp__SetFocus@4:NEAR
EXTRN	__imp__GetKeyState@4:NEAR
EXTRN	?UpdateFastScroll@CDragDropMgr@@QAEPAUHICON__@@XZ:NEAR ; CDragDropMgr::UpdateFastScroll
EXTRN	?timeMgr@@3PAVTimeMgr@@A:DWORD			; timeMgr
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:NEAR			; CWnd::SetFocus
EXTRN	?g_pMailBox@@3PAVCMailBox@@A:DWORD		; g_pMailBox
EXTRN	__imp__ClientToScreen@8:NEAR
EXTRN	?invokeMethod@@YAJIIIPAX@Z:NEAR			; invokeMethod
EXTRN	?g_pModerator@@3PAVCModeratorDlg@@A:DWORD	; g_pModerator
EXTRN	?g_pGuide@@3PAVCGuideDlg@@A:DWORD		; g_pGuide
EXTRN	?g_pGroup@@3PAVCGroupDlg@@A:DWORD		; g_pGroup
EXTRN	?g_pGod@@3PAVCGodDlg@@A:DWORD			; g_pGod
EXTRN	?g_pEvent@@3PAVCEventDlg@@A:DWORD		; g_pEvent
EXTRN	?g_pHost@@3PAVCHostDlg@@A:DWORD			; g_pHost
EXTRN	?Update@CNameHealthDisplay@@QAEXVCSCI_WorldObject@@@Z:NEAR ; CNameHealthDisplay::Update
EXTRN	__imp__GetParent@4:NEAR
EXTRN	__imp__GetMessageA@16:NEAR
EXTRN	__imp__PeekMessageA@20:NEAR
_DATA	SEGMENT
	ORG $+2
$SG170071 DB	'MakeTreasureDialog', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T176170 DD	019930520H
	DD	01H
	DD	FLAT:$T176174
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T176174 DD	0ffffffffH
	DD	FLAT:$L176168
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -116
_lastDoitTime$ = -16
_m_msgCur$170001 = -44
_advanceDirection$170008 = -48
_theHwnd$170010 = -56
_parent$170011 = -52
_next$170012 = -60
$T176160 = -92
$T176161 = -96
$T176162 = -100
$T176163 = -104
$T176166 = -108
$T176167 = -112
__$EHRec$ = -12
_tDialog$170068 = -64
_point$170105 = -76
_pWheelable$170106 = -68
_point$170118 = -88
_hObject$170119 = -80
?Run@CSciApp@@UAEHXZ PROC NEAR				; CSciApp::Run

; 477  : {

  00f3a	55		 push	 ebp
  00f3b	8b ec		 mov	 ebp, esp
  00f3d	6a ff		 push	 -1
  00f3f	68 00 00 00 00	 push	 $L176171
  00f44	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00f4a	50		 push	 eax
  00f4b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00f52	83 ec 78	 sub	 esp, 120		; 00000078H
  00f55	89 4d 8c	 mov	 DWORD PTR _this$[ebp], ecx

; 478  : 	// track when to run the doit method...
; 479  : 	int lastDoitTime = timeMgr->GetMilliSec();

  00f58	a1 00 00 00 00	 mov	 eax, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  00f5d	8b 10		 mov	 edx, DWORD PTR [eax]
  00f5f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  00f65	ff 52 08	 call	 DWORD PTR [edx+8]
  00f68	89 45 f0	 mov	 DWORD PTR _lastDoitTime$[ebp], eax
$L169998:

; 483  : 		if ( g_pTrackingWindow ) {

  00f6b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pTrackingWindow@@3PAVCSkinWnd@@A, 0 ; g_pTrackingWindow
  00f72	74 13		 je	 SHORT $L170000

; 484  : 			g_pTrackingWindow->UpdateTracking();

  00f74	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pTrackingWindow@@3PAVCSkinWnd@@A ; g_pTrackingWindow
  00f79	8b 10		 mov	 edx, DWORD PTR [eax]
  00f7b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pTrackingWindow@@3PAVCSkinWnd@@A ; g_pTrackingWindow
  00f81	ff 92 e0 00 00
	00		 call	 DWORD PTR [edx+224]
$L170000:

; 487  : 		// pump message, but quit on WM_QUIT
; 488  : 		while ( ::PeekMessage ( &m_msgCur, NULL, NULL, NULL, PM_NOREMOVE ) ) {

  00f87	6a 00		 push	 0
  00f89	6a 00		 push	 0
  00f8b	6a 00		 push	 0
  00f8d	6a 00		 push	 0
  00f8f	8d 45 d4	 lea	 eax, DWORD PTR _m_msgCur$170001[ebp]
  00f92	50		 push	 eax
  00f93	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  00f99	85 c0		 test	 eax, eax
  00f9b	0f 84 02 06 00
	00		 je	 $L170004

; 489  : 			if ( m_msgCur.message == WM_KEYDOWN ) {

  00fa1	81 7d d8 00 01
	00 00		 cmp	 DWORD PTR _m_msgCur$170001[ebp+4], 256 ; 00000100H
  00fa8	0f 85 92 02 00
	00		 jne	 $L170005

; 490  : 
; 491  : 				// handle universal tab direction support...
; 492  : 				if ( m_msgCur.wParam == VK_TAB ) {

  00fae	83 7d dc 09	 cmp	 DWORD PTR _m_msgCur$170001[ebp+8], 9
  00fb2	0f 85 86 00 00
	00		 jne	 $L170006

; 493  : 					::GetMessage ( (LPMSG)&m_msgCur, NULL, 0, 0 );

  00fb8	6a 00		 push	 0
  00fba	6a 00		 push	 0
  00fbc	6a 00		 push	 0
  00fbe	8d 4d d4	 lea	 ecx, DWORD PTR _m_msgCur$170001[ebp]
  00fc1	51		 push	 ecx
  00fc2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16

; 494  : 
; 495  : 					int advanceDirection = (GetKeyState ( VK_SHIFT ) < 0)? TRUE : FALSE;

  00fc8	6a 10		 push	 16			; 00000010H
  00fca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetKeyState@4
  00fd0	0f bf d0	 movsx	 edx, ax
  00fd3	33 c0		 xor	 eax, eax
  00fd5	85 d2		 test	 edx, edx
  00fd7	0f 9c c0	 setl	 al
  00fda	89 45 d0	 mov	 DWORD PTR _advanceDirection$170008[ebp], eax

; 496  : 
; 497  : 					if ( advanceDirection != -1 ) {

  00fdd	83 7d d0 ff	 cmp	 DWORD PTR _advanceDirection$170008[ebp], -1
  00fe1	74 56		 je	 SHORT $L170009

; 498  : 						HWND theHwnd = m_msgCur.hwnd;

  00fe3	8b 4d d4	 mov	 ecx, DWORD PTR _m_msgCur$170001[ebp]
  00fe6	89 4d c8	 mov	 DWORD PTR _theHwnd$170010[ebp], ecx

; 499  : 						HWND parent = GetParent ( theHwnd );

  00fe9	8b 55 c8	 mov	 edx, DWORD PTR _theHwnd$170010[ebp]
  00fec	52		 push	 edx
  00fed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetParent@4
  00ff3	89 45 cc	 mov	 DWORD PTR _parent$170011[ebp], eax

; 500  : 						HWND next = GetNextDlgTabItem ( parent, m_msgCur.hwnd, advanceDirection );

  00ff6	8b 45 d0	 mov	 eax, DWORD PTR _advanceDirection$170008[ebp]
  00ff9	50		 push	 eax
  00ffa	8b 4d d4	 mov	 ecx, DWORD PTR _m_msgCur$170001[ebp]
  00ffd	51		 push	 ecx
  00ffe	8b 55 cc	 mov	 edx, DWORD PTR _parent$170011[ebp]
  01001	52		 push	 edx
  01002	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetNextDlgTabItem@12
  01008	89 45 c4	 mov	 DWORD PTR _next$170012[ebp], eax

; 501  : 
; 502  : 						// if the first check did not work, check for any available tabstop
; 503  : 						if ( NULL == next ) {

  0100b	83 7d c4 00	 cmp	 DWORD PTR _next$170012[ebp], 0
  0100f	75 13		 jne	 SHORT $L170013

; 504  : 							next = GetNextDlgTabItem ( m_msgCur.hwnd, NULL, advanceDirection );

  01011	8b 45 d0	 mov	 eax, DWORD PTR _advanceDirection$170008[ebp]
  01014	50		 push	 eax
  01015	6a 00		 push	 0
  01017	8b 4d d4	 mov	 ecx, DWORD PTR _m_msgCur$170001[ebp]
  0101a	51		 push	 ecx
  0101b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetNextDlgTabItem@12
  01021	89 45 c4	 mov	 DWORD PTR _next$170012[ebp], eax
$L170013:

; 506  : 
; 507  : 						if ( next )

  01024	83 7d c4 00	 cmp	 DWORD PTR _next$170012[ebp], 0
  01028	74 0a		 je	 SHORT $L170014

; 508  : 							SetFocus ( next );

  0102a	8b 55 c4	 mov	 edx, DWORD PTR _next$170012[ebp]
  0102d	52		 push	 edx
  0102e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFocus@4
$L170014:

; 509  : 
; 510  : 						continue;

  01034	e9 4e ff ff ff	 jmp	 $L170000
$L170009:

; 512  : 				} else {

  01039	e9 fd 01 00 00	 jmp	 $L170036
$L170006:

; 513  : 					if ( g_pToonSettings && g_pToonSettings->get_TabDisplay() ) {

  0103e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A, 0 ; g_pToonSettings
  01045	0f 84 e7 00 00
	00		 je	 $L170016
  0104b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  01051	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  01056	85 c0		 test	 eax, eax
  01058	0f 84 d4 00 00
	00		 je	 $L170016

; 514  : 						switch ( m_msgCur.wParam ) {

  0105e	8b 45 dc	 mov	 eax, DWORD PTR _m_msgCur$170001[ebp+8]
  01061	89 45 88	 mov	 DWORD PTR -120+[ebp], eax
  01064	8b 4d 88	 mov	 ecx, DWORD PTR -120+[ebp]
  01067	83 e9 70	 sub	 ecx, 112		; 00000070H
  0106a	89 4d 88	 mov	 DWORD PTR -120+[ebp], ecx
  0106d	83 7d 88 0b	 cmp	 DWORD PTR -120+[ebp], 11 ; 0000000bH
  01071	0f 87 b6 00 00
	00		 ja	 $L170018
  01077	8b 55 88	 mov	 edx, DWORD PTR -120+[ebp]
  0107a	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $L176172[edx*4]
$L170021:

; 515  : 							case VK_F1:
; 516  : 								g_pMainPanelWnd->SelectTab( TID_ROOM );

  01081	6a 00		 push	 0
  01083	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01089	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab

; 517  : 								break;

  0108e	e9 9a 00 00 00	 jmp	 $L170018
$L170022:

; 518  : 							case VK_F2:
; 519  : 								g_pMainPanelWnd->SelectTab( TID_GOSSIP );

  01093	6a 01		 push	 1
  01095	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  0109b	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab

; 520  : 								break;

  010a0	e9 88 00 00 00	 jmp	 $L170018
$L170023:

; 521  : 							case VK_F3:
; 522  : 								g_pMainPanelWnd->SelectTab( TID_GROUP );

  010a5	6a 02		 push	 2
  010a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  010ad	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab

; 523  : 								break;

  010b2	eb 79		 jmp	 SHORT $L170018
$L170024:

; 524  : 							case VK_F4:
; 525  : 								g_pMainPanelWnd->SelectTab( TID_FRIENDS );

  010b4	6a 03		 push	 3
  010b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  010bc	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab

; 526  : 								break;

  010c1	eb 6a		 jmp	 SHORT $L170018
$L170025:

; 527  : 							case VK_F5:
; 528  : 								g_pMainPanelWnd->SelectTab( TID_MAIL );

  010c3	6a 04		 push	 4
  010c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  010cb	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab

; 529  : 								break;

  010d0	eb 5b		 jmp	 SHORT $L170018
$L170026:

; 530  : 							case VK_F6:
; 531  : 								g_pMainPanelWnd->SelectTab( TID_TELL );

  010d2	6a 05		 push	 5
  010d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  010da	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab

; 532  : 								break;

  010df	eb 4c		 jmp	 SHORT $L170018
$L170027:

; 533  : 							case VK_F7:
; 534  : 								if ( g_pGod )

  010e1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGod@@3PAVCGodDlg@@A, 0 ; g_pGod
  010e8	74 0d		 je	 SHORT $L170028

; 535  : 									g_pMainPanelWnd->SelectTab( TID_BLANK );

  010ea	6a 06		 push	 6
  010ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  010f2	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab
$L170028:

; 536  : 
; 537  : 								break;

  010f7	eb 34		 jmp	 SHORT $L170018
$L170029:

; 538  : 							case VK_F8:
; 539  : 								if ( g_pEvent )

  010f9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A, 0 ; g_pEvent
  01100	74 0d		 je	 SHORT $L170030

; 540  : 									g_pMainPanelWnd->SelectTab( TID_EVENT );

  01102	6a 09		 push	 9
  01104	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  0110a	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab
$L170030:

; 541  : 
; 542  : 								break;

  0110f	eb 1c		 jmp	 SHORT $L170018
$L170032:

; 543  : 								// Future tabs - one of which should be classic mode.
; 544  : 							case VK_F9:
; 545  : 								// Future tabs - one of which should be classic mode.
; 546  : // Handled in SYSKEYDOWN 	case VK_F10:
; 547  : // Handled in SYSKEYDOWN		// Future tabs - one of which should be classic mode.
; 548  : 								break;
; 549  : 							case VK_F11:
; 550  : 								g_pMainPanelWnd->SelectTab( TID_GUIDE );

  01111	6a 07		 push	 7
  01113	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01119	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab

; 551  : 								break;

  0111e	eb 0d		 jmp	 SHORT $L170018
$L170033:

; 552  : 							case VK_F12:
; 553  : 								g_pMainPanelWnd->SelectTab( TID_MOD );

  01120	6a 08		 push	 8
  01122	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01128	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab
$L170018:

; 556  : 					} else {

  0112d	e9 09 01 00 00	 jmp	 $L170036
$L170016:

; 557  : 						switch ( m_msgCur.wParam ) {

  01132	8b 45 dc	 mov	 eax, DWORD PTR _m_msgCur$170001[ebp+8]
  01135	89 45 84	 mov	 DWORD PTR -124+[ebp], eax
  01138	8b 4d 84	 mov	 ecx, DWORD PTR -124+[ebp]
  0113b	83 e9 70	 sub	 ecx, 112		; 00000070H
  0113e	89 4d 84	 mov	 DWORD PTR -124+[ebp], ecx
  01141	83 7d 84 0b	 cmp	 DWORD PTR -124+[ebp], 11 ; 0000000bH
  01145	0f 87 f0 00 00
	00		 ja	 $L170036
  0114b	8b 55 84	 mov	 edx, DWORD PTR -124+[ebp]
  0114e	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $L176173[edx*4]
$L170039:

; 558  : 							case VK_F1:
; 559  : 								if ( g_pMainPanelWnd )

  01155	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A, 0 ; g_pMainPanelWnd
  0115c	74 0b		 je	 SHORT $L170040

; 560  : 									g_pMainPanelWnd->SetFocus();

  0115e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01164	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L170040:

; 561  : 								break;

  01169	e9 cd 00 00 00	 jmp	 $L170036
$L170041:

; 562  : 							case VK_F2:
; 563  : 								if ( g_pGossipWnd )

  0116e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A, 0 ; g_pGossipWnd
  01175	74 0b		 je	 SHORT $L170042

; 564  : 									g_pGossipWnd->SetFocus();

  01177	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGossipWnd@@3PAVCGossipWnd@@A ; g_pGossipWnd
  0117d	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L170042:

; 565  : 								break;

  01182	e9 b4 00 00 00	 jmp	 $L170036
$L170043:

; 566  : 							case VK_F3:
; 567  : 								if ( g_pGroup )

  01187	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGroup@@3PAVCGroupDlg@@A, 0 ; g_pGroup
  0118e	74 0b		 je	 SHORT $L170044

; 568  : 									g_pGroup->SetFocus();

  01190	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGroup@@3PAVCGroupDlg@@A ; g_pGroup
  01196	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L170044:

; 569  : 								break;

  0119b	e9 9b 00 00 00	 jmp	 $L170036
$L170045:

; 570  : 							case VK_F4:
; 571  : 								if ( g_pFriendMgr )

  011a0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A, 0 ; g_pFriendMgr
  011a7	74 0b		 je	 SHORT $L170046

; 572  : 									g_pFriendMgr->ShowFriends();

  011a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pFriendMgr@@3PAVCFriendMgr@@A ; g_pFriendMgr
  011af	e8 00 00 00 00	 call	 ?ShowFriends@CFriendMgr@@QAEXXZ ; CFriendMgr::ShowFriends
$L170046:

; 573  : 								break;

  011b4	e9 82 00 00 00	 jmp	 $L170036
$L170047:

; 574  : 							case VK_F5:
; 575  : 								if ( g_pMailBox )

  011b9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A, 0 ; g_pMailBox
  011c0	74 0b		 je	 SHORT $L170048

; 576  : 									g_pMailBox->Create();

  011c2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMailBox@@3PAVCMailBox@@A ; g_pMailBox
  011c8	e8 00 00 00 00	 call	 ?Create@CMailBox@@QAEXXZ ; CMailBox::Create
$L170048:

; 577  : 								break;

  011cd	eb 6c		 jmp	 SHORT $L170036
$L170049:

; 578  : 							case VK_F6:
; 579  : 								if ( g_pPrivateTellMgr )

  011cf	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A, 0 ; g_pPrivateTellMgr
  011d6	74 0b		 je	 SHORT $L170050

; 580  : 									g_pPrivateTellMgr->Show();

  011d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pPrivateTellMgr@@3PAVCPrivateTellMgr@@A ; g_pPrivateTellMgr
  011de	e8 00 00 00 00	 call	 ?Show@CPrivateTellMgr@@QAEPAVCPrivateTellDlg@@XZ ; CPrivateTellMgr::Show
$L170050:

; 581  : 								break;

  011e3	eb 56		 jmp	 SHORT $L170036
$L170051:

; 582  : 							case VK_F7:
; 583  : 								if ( g_pGod )

  011e5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGod@@3PAVCGodDlg@@A, 0 ; g_pGod
  011ec	74 0b		 je	 SHORT $L170052

; 584  : 									g_pGod->SetFocus();

  011ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGod@@3PAVCGodDlg@@A ; g_pGod
  011f4	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L170052:

; 585  : 
; 586  : 								break;

  011f9	eb 40		 jmp	 SHORT $L170036
$L170053:

; 587  : 							case VK_F8:
; 588  : 								if ( g_pEvent )

  011fb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A, 0 ; g_pEvent
  01202	74 0b		 je	 SHORT $L170054

; 589  : 									g_pEvent->SetFocus();

  01204	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pEvent@@3PAVCEventDlg@@A ; g_pEvent
  0120a	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L170054:

; 590  : 
; 591  : 								break;

  0120f	eb 2a		 jmp	 SHORT $L170036
$L170056:

; 592  : 							case VK_F9:
; 593  : 								// Future tabs - one of which should be classic mode.
; 594  : // Handled in SYSKEYDOWN 	case VK_F10:
; 595  : // Handled in SYSKEYDOWN		// Future tabs - one of which should be classic mode.
; 596  : 								break;
; 597  : 							case VK_F11:
; 598  : 								if ( g_pGuide )

  01211	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGuide@@3PAVCGuideDlg@@A, 0 ; g_pGuide
  01218	74 0b		 je	 SHORT $L170057

; 599  : 									g_pGuide->SetFocus();

  0121a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGuide@@3PAVCGuideDlg@@A ; g_pGuide
  01220	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L170057:

; 600  : 								break;

  01225	eb 14		 jmp	 SHORT $L170036
$L170058:

; 601  : 							case VK_F12:
; 602  : 								if ( g_pModerator )

  01227	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pModerator@@3PAVCModeratorDlg@@A, 0 ; g_pModerator
  0122e	74 0b		 je	 SHORT $L170059

; 603  : 									g_pModerator->SetFocus();

  01230	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pModerator@@3PAVCModeratorDlg@@A ; g_pModerator
  01236	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L170059:
$L170036:

; 609  : 			
; 610  : 			// handle special keys...
; 611  : 			else if ( m_msgCur.message == WM_SYSKEYDOWN ) {

  0123b	e9 25 03 00 00	 jmp	 $L170101
$L170005:
  01240	81 7d d8 04 01
	00 00		 cmp	 DWORD PTR _m_msgCur$170001[ebp+4], 260 ; 00000104H
  01247	0f 85 32 02 00
	00		 jne	 $L170061

; 612  : 				if ( m_msgCur.wParam == VK_RETURN ) {

  0124d	83 7d dc 0d	 cmp	 DWORD PTR _m_msgCur$170001[ebp+8], 13 ; 0000000dH
  01251	75 56		 jne	 SHORT $L170062

; 613  : 					::GetMessage ( &m_msgCur, NULL, 0, 0 );

  01253	6a 00		 push	 0
  01255	6a 00		 push	 0
  01257	6a 00		 push	 0
  01259	8d 45 d4	 lea	 eax, DWORD PTR _m_msgCur$170001[ebp]
  0125c	50		 push	 eax
  0125d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16

; 614  : 
; 615  : 					if ( ( m_msgCur.lParam & 0x20000000 ) && g_pToonSettings && g_pToonSettings->get_AltEnter() ) {

  01263	8b 4d e0	 mov	 ecx, DWORD PTR _m_msgCur$170001[ebp+12]
  01266	81 e1 00 00 00
	20		 and	 ecx, 536870912		; 20000000H
  0126c	85 c9		 test	 ecx, ecx
  0126e	74 34		 je	 SHORT $L170063
  01270	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A, 0 ; g_pToonSettings
  01277	74 2b		 je	 SHORT $L170063
  01279	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0127f	e8 00 00 00 00	 call	 ?get_AltEnter@CToonSettings@@QAEHXZ ; CToonSettings::get_AltEnter
  01284	85 c0		 test	 eax, eax
  01286	74 1c		 je	 SHORT $L170063

; 616  : 						m_pMainWnd->SendMessage( WM_SYSCOMMAND, SC_MAXIMIZE, 0 );

  01288	6a 00		 push	 0
  0128a	68 30 f0 00 00	 push	 61488			; 0000f030H
  0128f	68 12 01 00 00	 push	 274			; 00000112H
  01294	8b 55 8c	 mov	 edx, DWORD PTR _this$[ebp]
  01297	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  0129a	e8 00 00 00 00	 call	 ?SendMessageA@CWnd@@QAEJIIJ@Z ; CWnd::SendMessageA

; 617  : 						continue;

  0129f	e9 e3 fc ff ff	 jmp	 $L170000
$L170063:

; 619  : 				} else if ( m_msgCur.wParam == 'T' ) {

  012a4	e9 d1 01 00 00	 jmp	 $L170084
$L170062:
  012a9	83 7d dc 54	 cmp	 DWORD PTR _m_msgCur$170001[ebp+8], 84 ; 00000054H
  012ad	75 7c		 jne	 SHORT $L170065

; 620  : 					::GetMessage ( &m_msgCur, NULL, 0, 0 );

  012af	6a 00		 push	 0
  012b1	6a 00		 push	 0
  012b3	6a 00		 push	 0
  012b5	8d 45 d4	 lea	 eax, DWORD PTR _m_msgCur$170001[ebp]
  012b8	50		 push	 eax
  012b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16

; 621  : 
; 622  : 					if ( m_msgCur.lParam & 0x20000000 ) 

  012bf	8b 4d e0	 mov	 ecx, DWORD PTR _m_msgCur$170001[ebp+12]
  012c2	81 e1 00 00 00
	20		 and	 ecx, 536870912		; 20000000H
  012c8	85 c9		 test	 ecx, ecx
  012ca	74 5a		 je	 SHORT $L170066

; 625  :                              g_pWindowMgr->GetGameModal(gmCombatModal) == 0 )

  012cc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pTreasureDlg@@3PAVCTreasureDlg@@A, 0 ; g_pTreasureDlg
  012d3	75 4c		 jne	 SHORT $L170067
  012d5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  012dc	74 43		 je	 SHORT $L170067
  012de	6a 01		 push	 1
  012e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  012e6	e8 00 00 00 00	 call	 ?GetGameModal@CWindowMgr@@QAEHH@Z ; CWindowMgr::GetGameModal
  012eb	85 c0		 test	 eax, eax
  012ed	75 32		 jne	 SHORT $L170067

; 627  : 							g_pWindowMgr->CloseAllTransientWindows();

  012ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  012f5	e8 00 00 00 00	 call	 ?CloseAllTransientWindows@CWindowMgr@@QAEXXZ ; CWindowMgr::CloseAllTransientWindows

; 628  : 
; 629  : 							CSCI_Object	tDialog = (CSCI_Object) GetClassByName ( "MakeTreasureDialog" );

  012fa	68 00 00 00 00	 push	 OFFSET FLAT:$SG170071
  012ff	e8 00 00 00 00	 call	 ?GetClassByName@@YAGPAD@Z ; GetClassByName
  01304	83 c4 04	 add	 esp, 4
  01307	50		 push	 eax
  01308	8d 4d a4	 lea	 ecx, DWORD PTR $T176160[ebp]
  0130b	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  01310	50		 push	 eax
  01311	8d 4d c0	 lea	 ecx, DWORD PTR _tDialog$170068[ebp]
  01314	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object

; 630  : 							tDialog.doit();

  01319	8d 4d c0	 lea	 ecx, DWORD PTR _tDialog$170068[ebp]
  0131c	e8 00 00 00 00	 call	 ?doit@CSCI_Object@@QAEFXZ ; CSCI_Object::doit
$L170067:

; 632  : 						continue;

  01321	e9 61 fc ff ff	 jmp	 $L170000
$L170066:

; 634  : 				} else if ( m_msgCur.wParam == 'S' ) {

  01326	e9 4f 01 00 00	 jmp	 $L170084
$L170065:
  0132b	83 7d dc 53	 cmp	 DWORD PTR _m_msgCur$170001[ebp+8], 83 ; 00000053H
  0132f	0f 85 d7 00 00
	00		 jne	 $L170073

; 635  : 					::GetMessage ( &m_msgCur, NULL, 0, 0 );

  01335	6a 00		 push	 0
  01337	6a 00		 push	 0
  01339	6a 00		 push	 0
  0133b	8d 55 d4	 lea	 edx, DWORD PTR _m_msgCur$170001[ebp]
  0133e	52		 push	 edx
  0133f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16

; 636  : 
; 637  : 					if ( m_msgCur.lParam & 0x20000000 ) 

  01345	8b 45 e0	 mov	 eax, DWORD PTR _m_msgCur$170001[ebp+12]
  01348	25 00 00 00 20	 and	 eax, 536870912		; 20000000H
  0134d	85 c0		 test	 eax, eax
  0134f	0f 84 b5 00 00
	00		 je	 $L170074

; 639  : 						if ( g_pSpellListDialog == NULL &&  g_pWindowMgr && ( g_pWindowMgr->GetGameModal(gmCombatModal) == 0 ) && g_pMainPanelWnd && g_pMainPanelWnd->Spells() )

  01355	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSpellListDialog@@3PAVCSpellListDlg@@A, 0 ; g_pSpellListDialog
  0135c	0f 85 a3 00 00
	00		 jne	 $L170075
  01362	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  01369	0f 84 96 00 00
	00		 je	 $L170075
  0136f	6a 01		 push	 1
  01371	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  01377	e8 00 00 00 00	 call	 ?GetGameModal@CWindowMgr@@QAEHH@Z ; CWindowMgr::GetGameModal
  0137c	85 c0		 test	 eax, eax
  0137e	0f 85 81 00 00
	00		 jne	 $L170075
  01384	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A, 0 ; g_pMainPanelWnd
  0138b	74 78		 je	 SHORT $L170075
  0138d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01393	e8 00 00 00 00	 call	 ?Spells@CMainPanelWnd@@QAE_NXZ ; CMainPanelWnd::Spells
  01398	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0139d	85 c0		 test	 eax, eax
  0139f	74 64		 je	 SHORT $L170075

; 641  : 							g_pWindowMgr->CloseAllTransientWindows();

  013a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  013a7	e8 00 00 00 00	 call	 ?CloseAllTransientWindows@CWindowMgr@@QAEXXZ ; CWindowMgr::CloseAllTransientWindows

; 642  : 
; 643  : 							(new CSpellListDlg( 0, 0 ))->Create( m_pMainWnd );

  013ac	68 bc 00 00 00	 push	 188			; 000000bcH
  013b1	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  013b6	89 45 9c	 mov	 DWORD PTR $T176162[ebp], eax
  013b9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  013c0	83 7d 9c 00	 cmp	 DWORD PTR $T176162[ebp], 0
  013c4	74 1c		 je	 SHORT $L176164
  013c6	6a 00		 push	 0
  013c8	51		 push	 ecx
  013c9	8b cc		 mov	 ecx, esp
  013cb	89 65 98	 mov	 DWORD PTR $T176163[ebp], esp
  013ce	6a 00		 push	 0
  013d0	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  013d5	8b 4d 9c	 mov	 ecx, DWORD PTR $T176162[ebp]
  013d8	e8 00 00 00 00	 call	 ??0CSpellListDlg@@QAE@VCSCI_Object@@F@Z ; CSpellListDlg::CSpellListDlg
  013dd	89 45 80	 mov	 DWORD PTR -128+[ebp], eax
  013e0	eb 07		 jmp	 SHORT $L176165
$L176164:
  013e2	c7 45 80 00 00
	00 00		 mov	 DWORD PTR -128+[ebp], 0
$L176165:
  013e9	8b 4d 80	 mov	 ecx, DWORD PTR -128+[ebp]
  013ec	89 4d a0	 mov	 DWORD PTR $T176161[ebp], ecx
  013ef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  013f6	8b 55 8c	 mov	 edx, DWORD PTR _this$[ebp]
  013f9	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  013fc	50		 push	 eax
  013fd	8b 4d a0	 mov	 ecx, DWORD PTR $T176161[ebp]
  01400	e8 00 00 00 00	 call	 ?Create@CSpellListDlg@@QAEHPAVCWnd@@@Z ; CSpellListDlg::Create
$L170075:

; 645  : 
; 646  : 						continue;

  01405	e9 7d fb ff ff	 jmp	 $L170000
$L170074:

; 648  : 				} else if ( g_pToonSettings && g_pToonSettings->get_TabDisplay() ) {

  0140a	eb 6e		 jmp	 SHORT $L170084
$L170073:
  0140c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A, 0 ; g_pToonSettings
  01413	74 65		 je	 SHORT $L170084
  01415	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  0141b	e8 00 00 00 00	 call	 ?get_TabDisplay@CToonSettings@@QAEHXZ ; CToonSettings::get_TabDisplay
  01420	85 c0		 test	 eax, eax
  01422	74 56		 je	 SHORT $L170084

; 649  : 					switch ( m_msgCur.wParam ) {

  01424	8b 4d dc	 mov	 ecx, DWORD PTR _m_msgCur$170001[ebp+8]
  01427	89 8d 7c ff ff
	ff		 mov	 DWORD PTR -132+[ebp], ecx
  0142d	83 bd 7c ff ff
	ff 25		 cmp	 DWORD PTR -132+[ebp], 37 ; 00000025H
  01434	74 2c		 je	 SHORT $L170089
  01436	83 bd 7c ff ff
	ff 27		 cmp	 DWORD PTR -132+[ebp], 39 ; 00000027H
  0143d	74 30		 je	 SHORT $L170090
  0143f	83 bd 7c ff ff
	ff 79		 cmp	 DWORD PTR -132+[ebp], 121 ; 00000079H
  01446	74 02		 je	 SHORT $L170087
  01448	eb 30		 jmp	 SHORT $L170084
$L170087:

; 650  : 						case VK_F10:
; 651  : 							if ( g_pHost )

  0144a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pHost@@3PAVCHostDlg@@A, 0 ; g_pHost
  01451	74 0d		 je	 SHORT $L170088

; 652  : 								g_pMainPanelWnd->SelectTab( TID_HOST );

  01453	6a 0a		 push	 10			; 0000000aH
  01455	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  0145b	e8 00 00 00 00	 call	 ?SelectTab@CMainPanelWnd@@QAEXH@Z ; CMainPanelWnd::SelectTab
$L170088:

; 653  : 
; 654  : 							break;

  01460	eb 18		 jmp	 SHORT $L170084
$L170089:

; 655  : 						case VK_LEFT:
; 656  : 							g_pMainPanelWnd->SelectPreviousTab();

  01462	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01468	e8 00 00 00 00	 call	 ?SelectPreviousTab@CMainPanelWnd@@QAEXXZ ; CMainPanelWnd::SelectPreviousTab

; 657  : 							break;

  0146d	eb 0b		 jmp	 SHORT $L170084
$L170090:

; 658  : 						case VK_RIGHT:
; 659  : 							g_pMainPanelWnd->SelectNextTab();

  0146f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  01475	e8 00 00 00 00	 call	 ?SelectNextTab@CMainPanelWnd@@QAEXXZ ; CMainPanelWnd::SelectNextTab
$L170084:

; 664  : 
; 665  : 			// keep global point of mouse location up to date...
; 666  : 			else if ( m_msgCur.message == WM_MOUSEMOVE ) {

  0147a	e9 e6 00 00 00	 jmp	 $L170101
$L170061:
  0147f	81 7d d8 00 02
	00 00		 cmp	 DWORD PTR _m_msgCur$170001[ebp+4], 512 ; 00000200H
  01486	75 32		 jne	 SHORT $L170092

; 667  : 				g_MouseLocation.x = (short)LOWORD ( m_msgCur.lParam );

  01488	0f bf 55 e0	 movsx	 edx, WORD PTR _m_msgCur$170001[ebp+12]
  0148c	89 15 00 00 00
	00		 mov	 DWORD PTR ?g_MouseLocation@@3UtagPOINT@@A, edx

; 668  : 				g_MouseLocation.y = (short)HIWORD ( m_msgCur.lParam );

  01492	8b 45 e0	 mov	 eax, DWORD PTR _m_msgCur$170001[ebp+12]
  01495	c1 e8 10	 shr	 eax, 16			; 00000010H
  01498	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0149d	0f bf c8	 movsx	 ecx, ax
  014a0	89 0d 04 00 00
	00		 mov	 DWORD PTR ?g_MouseLocation@@3UtagPOINT@@A+4, ecx

; 669  : 
; 670  : 				::ClientToScreen ( m_msgCur.hwnd, &g_MouseLocation );

  014a6	68 00 00 00 00	 push	 OFFSET FLAT:?g_MouseLocation@@3UtagPOINT@@A ; g_MouseLocation
  014ab	8b 55 d4	 mov	 edx, DWORD PTR _m_msgCur$170001[ebp]
  014ae	52		 push	 edx
  014af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClientToScreen@8

; 672  : 
; 673  : 			// Eat double clicking in the caption to maximize the screen.
; 674  : 			else if ( m_msgCur.message == WM_NCLBUTTONDBLCLK ) {

  014b5	e9 ab 00 00 00	 jmp	 $L170101
$L170092:
  014ba	81 7d d8 a3 00
	00 00		 cmp	 DWORD PTR _m_msgCur$170001[ebp+4], 163 ; 000000a3H
  014c1	75 15		 jne	 SHORT $L170099

; 675  : 				::GetMessage ( &m_msgCur, NULL, 0, 0 );

  014c3	6a 00		 push	 0
  014c5	6a 00		 push	 0
  014c7	6a 00		 push	 0
  014c9	8d 45 d4	 lea	 eax, DWORD PTR _m_msgCur$170001[ebp]
  014cc	50		 push	 eax
  014cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16

; 676  : 				continue;

  014d3	e9 af fa ff ff	 jmp	 $L170000
$L170099:

; 678  : 
; 679  : 			// handle mouse wheel routing
; 680  : 			else if ( g_pMainWindow && (m_msgCur.message == WM_MOUSEWHEEL) ) {

  014d8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A, 0 ; g_pMainWindow
  014df	0f 84 80 00 00
	00		 je	 $L170101
  014e5	81 7d d8 0a 02
	00 00		 cmp	 DWORD PTR _m_msgCur$170001[ebp+4], 522 ; 0000020aH
  014ec	75 77		 jne	 SHORT $L170101

; 681  : 				CPoint point ( LOWORD ( m_msgCur.lParam ), HIWORD ( m_msgCur.lParam ) );	

  014ee	8b 4d e0	 mov	 ecx, DWORD PTR _m_msgCur$170001[ebp+12]
  014f1	c1 e9 10	 shr	 ecx, 16			; 00000010H
  014f4	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  014fa	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  01500	51		 push	 ecx
  01501	8b 55 e0	 mov	 edx, DWORD PTR _m_msgCur$170001[ebp+12]
  01504	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0150a	52		 push	 edx
  0150b	8d 4d b4	 lea	 ecx, DWORD PTR _point$170105[ebp]
  0150e	e8 00 00 00 00	 call	 ??0CPoint@@QAE@HH@Z	; CPoint::CPoint

; 682  : 
; 683  : 				// get the window that owns the mousewheel message
; 684  : 				CMouseWheelable *pWheelable = CMouseWheelable::FromScreenPoint ( point );

  01513	8d 45 b4	 lea	 eax, DWORD PTR _point$170105[ebp]
  01516	50		 push	 eax
  01517	e8 00 00 00 00	 call	 ?FromScreenPoint@CMouseWheelable@@SAPAV1@AAVCPoint@@@Z ; CMouseWheelable::FromScreenPoint
  0151c	83 c4 04	 add	 esp, 4
  0151f	89 45 bc	 mov	 DWORD PTR _pWheelable$170106[ebp], eax

; 685  : 
; 686  : 				if ( pWheelable ) {

  01522	83 7d bc 00	 cmp	 DWORD PTR _pWheelable$170106[ebp], 0
  01526	74 28		 je	 SHORT $L170107

; 687  : 					pWheelable->OnMouseWheel ( 0, ((short)HIWORD ( m_msgCur.wParam ) / 120) * 3 );

  01528	8b 4d dc	 mov	 ecx, DWORD PTR _m_msgCur$170001[ebp+8]
  0152b	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0152e	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  01534	0f bf c1	 movsx	 eax, cx
  01537	99		 cdq
  01538	b9 78 00 00 00	 mov	 ecx, 120		; 00000078H
  0153d	f7 f9		 idiv	 ecx
  0153f	6b c0 03	 imul	 eax, 3
  01542	50		 push	 eax
  01543	6a 00		 push	 0
  01545	8b 55 bc	 mov	 edx, DWORD PTR _pWheelable$170106[ebp]
  01548	8b 02		 mov	 eax, DWORD PTR [edx]
  0154a	8b 4d bc	 mov	 ecx, DWORD PTR _pWheelable$170106[ebp]
  0154d	ff 50 04	 call	 DWORD PTR [eax+4]
$L170107:

; 689  : 
; 690  : 				// eat the message
; 691  : 				::GetMessage ( &m_msgCur, NULL, 0, 0 );

  01550	6a 00		 push	 0
  01552	6a 00		 push	 0
  01554	6a 00		 push	 0
  01556	8d 4d d4	 lea	 ecx, DWORD PTR _m_msgCur$170001[ebp]
  01559	51		 push	 ecx
  0155a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16

; 692  : 				continue;

  01560	e9 22 fa ff ff	 jmp	 $L170000
$L170101:

; 694  : 
; 695  : 			if ( !PumpMessage() )

  01565	8b 55 8c	 mov	 edx, DWORD PTR _this$[ebp]
  01568	8b 02		 mov	 eax, DWORD PTR [edx]
  0156a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0156d	ff 50 64	 call	 DWORD PTR [eax+100]
  01570	85 c0		 test	 eax, eax
  01572	75 10		 jne	 SHORT $L170111

; 697  : 				return ExitInstance();

  01574	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  01577	8b 11		 mov	 edx, DWORD PTR [ecx]
  01579	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0157c	ff 52 70	 call	 DWORD PTR [edx+112]
  0157f	e9 41 01 00 00	 jmp	 $L169999
$L170111:

; 699  : 
; 700  : 			// stop processing messages if the game's doit has not been called lately
; 701  : 			if ( ( timeMgr->GetMilliSec() - lastDoitTime) > 9 ) {

  01584	a1 00 00 00 00	 mov	 eax, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  01589	8b 10		 mov	 edx, DWORD PTR [eax]
  0158b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  01591	ff 52 08	 call	 DWORD PTR [edx+8]
  01594	2b 45 f0	 sub	 eax, DWORD PTR _lastDoitTime$[ebp]
  01597	83 f8 09	 cmp	 eax, 9
  0159a	76 02		 jbe	 SHORT $L170112

; 702  : 				break;

  0159c	eb 05		 jmp	 SHORT $L170004
$L170112:

; 704  : 		}

  0159e	e9 e4 f9 ff ff	 jmp	 $L170000
$L170004:

; 705  : 
; 706  : 		// toss all dead windows...
; 707  : 		if (g_pWindowMgr) g_pWindowMgr->DestroyDeadSkinWindows();

  015a3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  015aa	74 0b		 je	 SHORT $L170113
  015ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  015b2	e8 00 00 00 00	 call	 ?DestroyDeadSkinWindows@CWindowMgr@@QAEXXZ ; CWindowMgr::DestroyDeadSkinWindows
$L170113:

; 708  : 
; 709  : 		// let SCI do it's thing...
; 710  : 		if ( pm.game && g_pMainWindow && ::IsWindow( g_pMainWindow->m_hWnd ) ) {

  015b7	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?pm@@3VPMachine@@A
  015be	85 c0		 test	 eax, eax
  015c0	0f 84 fa 00 00
	00		 je	 $L170115
  015c6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A, 0 ; g_pMainWindow
  015cd	0f 84 ed 00 00
	00		 je	 $L170115
  015d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainWindow@@3PAVCMainWindow@@A ; g_pMainWindow
  015d9	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  015dc	52		 push	 edx
  015dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  015e3	85 c0		 test	 eax, eax
  015e5	0f 84 d5 00 00
	00		 je	 $L170115

; 711  : 			g_pSCIWnd->SendToBack();

  015eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A ; g_pSCIWnd
  015f1	e8 00 00 00 00	 call	 ?SendToBack@CSCIWnd@@QAEHXZ ; CSCIWnd::SendToBack

; 712  : 
; 713  : 			if ( ( timeMgr->GetMilliSec() - lastDoitTime) > 9 ) {

  015f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  015fb	8b 10		 mov	 edx, DWORD PTR [eax]
  015fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  01603	ff 52 08	 call	 DWORD PTR [edx+8]
  01606	2b 45 f0	 sub	 eax, DWORD PTR _lastDoitTime$[ebp]
  01609	83 f8 09	 cmp	 eax, 9
  0160c	0f 86 ae 00 00
	00		 jbe	 $L170115

; 714  : 				invokeMethod ( pm.game, s_doit, 0, pm.StackPtr );

  01612	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?pm@@3VPMachine@@A+12
  01617	50		 push	 eax
  01618	6a 00		 push	 0
  0161a	6a 45		 push	 69			; 00000045H
  0161c	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?pm@@3VPMachine@@A
  01623	51		 push	 ecx
  01624	e8 00 00 00 00	 call	 ?invokeMethod@@YAJIIIPAX@Z ; invokeMethod
  01629	83 c4 10	 add	 esp, 16			; 00000010H

; 715  : 				
; 716  : 				if ( pm.acc ) {

  0162c	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?pm@@3VPMachine@@A+4, 0
  01633	74 08		 je	 SHORT $L170116

; 717  : 					PostQuitMessage ( 0 );

  01635	6a 00		 push	 0
  01637	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$L170116:

; 719  : 
; 720  : 				// update the fast scroll object for drag & drop
; 721  : 				if ( g_pDragDropMgr ) {

  0163d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pDragDropMgr@@3PAVCDragDropMgr@@A, 0 ; g_pDragDropMgr
  01644	74 0b		 je	 SHORT $L170117

; 722  : 					g_pDragDropMgr->UpdateFastScroll();

  01646	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDragDropMgr@@3PAVCDragDropMgr@@A ; g_pDragDropMgr
  0164c	e8 00 00 00 00	 call	 ?UpdateFastScroll@CDragDropMgr@@QAEPAUHICON__@@XZ ; CDragDropMgr::UpdateFastScroll
$L170117:

; 724  : 				
; 725  : 				// get the object we are over...
; 726  : 				CPoint point ( g_MouseLocation );

  01651	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?g_MouseLocation@@3UtagPOINT@@A+4
  01657	52		 push	 edx
  01658	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_MouseLocation@@3UtagPOINT@@A
  0165d	50		 push	 eax
  0165e	8d 4d a8	 lea	 ecx, DWORD PTR _point$170118[ebp]
  01661	e8 00 00 00 00	 call	 ??0CPoint@@QAE@UtagPOINT@@@Z ; CPoint::CPoint

; 727  : 
; 728  : 				// convert the given coordinate to local coordinates
; 729  : 				g_pSCIWnd->ScreenToClient ( &point );

  01666	8d 4d a8	 lea	 ecx, DWORD PTR _point$170118[ebp]
  01669	51		 push	 ecx
  0166a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A ; g_pSCIWnd
  01670	e8 00 00 00 00	 call	 ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ScreenToClient

; 730  : 
; 731  : 				CSCI_WorldObject hObject = g_pSCIWnd->GetObjectFromPoint ( point ); 

  01675	6a 01		 push	 1
  01677	8d 55 a8	 lea	 edx, DWORD PTR _point$170118[ebp]
  0167a	52		 push	 edx
  0167b	8d 45 94	 lea	 eax, DWORD PTR $T176166[ebp]
  0167e	50		 push	 eax
  0167f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSCIWnd@@3PAVCSCIWnd@@A ; g_pSCIWnd
  01685	e8 00 00 00 00	 call	 ?GetObjectFromPoint@CSCIWnd@@QAE?AVCSCI_WorldObject@@AAVCPoint@@_N@Z ; CSCIWnd::GetObjectFromPoint
  0168a	50		 push	 eax
  0168b	8d 4d b0	 lea	 ecx, DWORD PTR _hObject$170119[ebp]
  0168e	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject

; 732  : 	
; 733  : 				// update the name / health display...
; 734  : 				g_pNameHealthDisplay->Update ( hObject );

  01693	51		 push	 ecx
  01694	8b cc		 mov	 ecx, esp
  01696	89 65 90	 mov	 DWORD PTR $T176167[ebp], esp
  01699	8d 55 b0	 lea	 edx, DWORD PTR _hObject$170119[ebp]
  0169c	52		 push	 edx
  0169d	e8 00 00 00 00	 call	 ??0CSCI_WorldObject@@QAE@ABV0@@Z ; CSCI_WorldObject::CSCI_WorldObject
  016a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pNameHealthDisplay@@3PAVCNameHealthDisplay@@A ; g_pNameHealthDisplay
  016a8	e8 00 00 00 00	 call	 ?Update@CNameHealthDisplay@@QAEXVCSCI_WorldObject@@@Z ; CNameHealthDisplay::Update

; 735  : 
; 736  : 				// keep track of when doits are called
; 737  : 				lastDoitTime = timeMgr->GetMilliSec();

  016ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  016b2	8b 10		 mov	 edx, DWORD PTR [eax]
  016b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?timeMgr@@3PAVTimeMgr@@A ; timeMgr
  016ba	ff 52 08	 call	 DWORD PTR [edx+8]
  016bd	89 45 f0	 mov	 DWORD PTR _lastDoitTime$[ebp], eax
$L170115:

; 740  : 	}

  016c0	e9 a6 f8 ff ff	 jmp	 $L169998
$L169999:

; 741  : }

  016c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  016c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  016cf	8b e5		 mov	 esp, ebp
  016d1	5d		 pop	 ebp
  016d2	c3		 ret	 0
$L176172:
  016d3	00 00 00 00	 DD	 $L170021
  016d7	00 00 00 00	 DD	 $L170022
  016db	00 00 00 00	 DD	 $L170023
  016df	00 00 00 00	 DD	 $L170024
  016e3	00 00 00 00	 DD	 $L170025
  016e7	00 00 00 00	 DD	 $L170026
  016eb	00 00 00 00	 DD	 $L170027
  016ef	00 00 00 00	 DD	 $L170029
  016f3	00 00 00 00	 DD	 $L170018
  016f7	00 00 00 00	 DD	 $L170018
  016fb	00 00 00 00	 DD	 $L170032
  016ff	00 00 00 00	 DD	 $L170033
$L176173:
  01703	00 00 00 00	 DD	 $L170039
  01707	00 00 00 00	 DD	 $L170041
  0170b	00 00 00 00	 DD	 $L170043
  0170f	00 00 00 00	 DD	 $L170045
  01713	00 00 00 00	 DD	 $L170047
  01717	00 00 00 00	 DD	 $L170049
  0171b	00 00 00 00	 DD	 $L170051
  0171f	00 00 00 00	 DD	 $L170053
  01723	00 00 00 00	 DD	 $L170036
  01727	00 00 00 00	 DD	 $L170036
  0172b	00 00 00 00	 DD	 $L170056
  0172f	00 00 00 00	 DD	 $L170058
_TEXT	ENDS
text$x	SEGMENT
$L176168:
  000b3	8b 45 9c	 mov	 eax, DWORD PTR $T176162[ebp]
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000bc	c3		 ret	 0
$L176171:
  000bd	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176170
  000c2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Run@CSciApp@@UAEHXZ ENDP				; CSciApp::Run
PUBLIC	??0CSCI_Actor@@QAE@ABV0@@Z			; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_WorldObject@@QAE@ABV0@@Z PROC NEAR		; CSCI_WorldObject::CSCI_WorldObject, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@ABV0@@Z ; CSCI_Actor::CSCI_Actor
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@ABV0@@Z ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@ABV0@@Z			; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@ABV0@@Z PROC NEAR			; CSCI_Actor::CSCI_Actor, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@ABV0@@Z ; CSCI_Prop::CSCI_Prop
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@ABV0@@Z ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@ABV0@@Z			; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@ABV0@@Z PROC NEAR			; CSCI_Prop::CSCI_Prop, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@ABV0@@Z ; CSCI_View::CSCI_View
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@ABV0@@Z ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@ABV0@@Z			; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_View@@QAE@ABV0@@Z PROC NEAR			; CSCI_View::CSCI_View, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@ABV0@@Z ; CSCI_Feature::CSCI_Feature
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_View@@QAE@ABV0@@Z ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@ABV0@@Z			; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@ABV0@@Z PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@ABV0@@Z ; CSCI_BitMap::CSCI_BitMap
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@ABV0@@Z ENDP			; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
EXTRN	?OnIdle@CWinApp@@UAEHJ@Z:NEAR			; CWinApp::OnIdle
_TEXT	SEGMENT
_lCount$ = 8
_this$ = -4
?OnIdle@CSciApp@@UAEHJ@Z PROC NEAR			; CSciApp::OnIdle

; 744  : {

  01733	55		 push	 ebp
  01734	8b ec		 mov	 ebp, esp
  01736	51		 push	 ecx
  01737	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 745  : 	// call the game's doit method
; 746  : 	#define S_doit	69
; 747  : 
; 748  : 	if ( pm.game ) {

  0173a	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?pm@@3VPMachine@@A
  01741	85 c0		 test	 eax, eax
  01743	74 2c		 je	 SHORT $L170143

; 749  : 		invokeMethod ( pm.game, S_doit, 0, pm.StackPtr );

  01745	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR ?pm@@3VPMachine@@A+12
  0174b	51		 push	 ecx
  0174c	6a 00		 push	 0
  0174e	6a 45		 push	 69			; 00000045H
  01750	0f bf 15 00 00
	00 00		 movsx	 edx, WORD PTR ?pm@@3VPMachine@@A
  01757	52		 push	 edx
  01758	e8 00 00 00 00	 call	 ?invokeMethod@@YAJIIIPAX@Z ; invokeMethod
  0175d	83 c4 10	 add	 esp, 16			; 00000010H

; 750  : 
; 751  : 		if ( pm.acc ) {

  01760	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?pm@@3VPMachine@@A+4, 0
  01767	74 08		 je	 SHORT $L170143

; 752  : 			PostQuitMessage ( 0 );

  01769	6a 00		 push	 0
  0176b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$L170143:

; 755  : 
; 756  : 	return CWinApp::OnIdle ( lCount );

  01771	8b 45 08	 mov	 eax, DWORD PTR _lCount$[ebp]
  01774	50		 push	 eax
  01775	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01778	e8 00 00 00 00	 call	 ?OnIdle@CWinApp@@UAEHJ@Z ; CWinApp::OnIdle

; 757  : }

  0177d	8b e5		 mov	 esp, ebp
  0177f	5d		 pop	 ebp
  01780	c2 04 00	 ret	 4
?OnIdle@CSciApp@@UAEHJ@Z ENDP				; CSciApp::OnIdle
_TEXT	ENDS
EXTRN	?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B:QWORD	; CSkinWnd::messageMap
_TEXT	SEGMENT
?_GetBaseMessageMap@CMainWindow@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CMainWindow::_GetBaseMessageMap

; 763  : BEGIN_MESSAGE_MAP ( CMainWindow, CSkinWnd )

  01783	55		 push	 ebp
  01784	8b ec		 mov	 ebp, esp
  01786	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinWnd@@1UAFX_MSGMAP@@B ; CSkinWnd::messageMap
  0178b	5d		 pop	 ebp
  0178c	c3		 ret	 0
?_GetBaseMessageMap@CMainWindow@@KGPBUAFX_MSGMAP@@XZ ENDP ; CMainWindow::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CMainWindow@@MBEPBUAFX_MSGMAP@@XZ ; CMainWindow::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CMainWindow@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CMainWindow::GetMessageMap

; 763  : BEGIN_MESSAGE_MAP ( CMainWindow, CSkinWnd )

  0178d	55		 push	 ebp
  0178e	8b ec		 mov	 ebp, esp
  01790	51		 push	 ecx
  01791	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  01794	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CMainWindow@@1UAFX_MSGMAP@@B ; CMainWindow::messageMap
  01799	8b e5		 mov	 esp, ebp
  0179b	5d		 pop	 ebp
  0179c	c3		 ret	 0
?GetMessageMap@CMainWindow@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CMainWindow::GetMessageMap
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	?Width@CRect@@QBEHXZ				; CRect::Width
PUBLIC	?Height@CRect@@QBEHXZ				; CRect::Height
PUBLIC	??BCRect@@QAEPAUtagRECT@@XZ			; CRect::operator tagRECT *
PUBLIC	?SetRectEmpty@CRect@@QAEXXZ			; CRect::SetRectEmpty
PUBLIC	?AfxGetApp@@YGPAVCWinApp@@XZ			; AfxGetApp
PUBLIC	?OffsetRect@CRect@@QAEXHH@Z			; CRect::OffsetRect
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	?Next@CSkinWnd@@UAEXXZ				; CSkinWnd::Next
PUBLIC	?Previous@CSkinWnd@@UAEXXZ			; CSkinWnd::Previous
PUBLIC	?CenterOnDisplay@CMainWindow@@QAEXXZ		; CMainWindow::CenterOnDisplay
PUBLIC	?Enable@CMainWindow@@UAEXXZ			; CMainWindow::Enable
PUBLIC	?Disable@CMainWindow@@UAEXXZ			; CMainWindow::Disable
PUBLIC	?OnSkinPaint@CMainWindow@@MAEXVCSkinObj@@@Z	; CMainWindow::OnSkinPaint
PUBLIC	??_7CMainWindow@@6B@				; CMainWindow::`vftable'
PUBLIC	??_GCMainWindow@@UAEPAXI@Z			; CMainWindow::`scalar deleting destructor'
PUBLIC	??_ECMainWindow@@UAEPAXI@Z			; CMainWindow::`vector deleting destructor'
PUBLIC	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetWindowRect
PUBLIC	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetClientRect
EXTRN	?GetProcessEvents@CSkinWnd@@MAE_NXZ:NEAR	; CSkinWnd::GetProcessEvents
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	??0CSkinWnd@@QAE@XZ:NEAR			; CSkinWnd::CSkinWnd
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	??1CSkinWnd@@UAE@XZ:NEAR			; CSkinWnd::~CSkinWnd
EXTRN	?CloseSelf@CSkinWnd@@UAEX_N@Z:NEAR		; CSkinWnd::CloseSelf
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?EnableGameModal@CSkinWnd@@UAEXHPAH@Z:NEAR	; CSkinWnd::EnableGameModal
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z:NEAR	; CSkinWnd::DisableGameModal
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	??0CSCIWnd@@QAE@XZ:NEAR				; CSCIWnd::CSCIWnd
EXTRN	?CreateClassPopup@CSkinWnd@@QAEHPBD00ABVCRect@@HHH@Z:NEAR ; CSkinWnd::CreateClassPopup
EXTRN	?Create@CSCIWnd@@QAEHPAVCWnd@@AAVCRect@@@Z:NEAR	; CSCIWnd::Create
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z:NEAR ; CSkinWnd::MakeSkinCtrl
EXTRN	?ProcessRefreshList@CSkinWnd@@UAEHXZ:NEAR	; CSkinWnd::ProcessRefreshList
EXTRN	?UpdateTracking@CSkinWnd@@UAEXXZ:NEAR		; CSkinWnd::UpdateTracking
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?SetPriority@CSkinWnd@@QAEXH@Z:NEAR		; CSkinWnd::SetPriority
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CSkinWnd::GetEventSinkMap
EXTRN	?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ:NEAR ; CWnd::GetRuntimeClass
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?GetClassNameA@CSingleInstance@@QBE?AVCString@@XZ:NEAR ; CSingleInstance::GetClassNameA
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z:NEAR	; CWnd::ClientToScreen
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?GetObjectRect@CSkinForm@@QAEHPBDPAUtagRECT@@@Z:NEAR ; CSkinForm::GetObjectRect
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
;	COMDAT ??_7CMainWindow@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\scimfc.cpp
CONST	SEGMENT
??_7CMainWindow@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CMainWindow::`vftable'
	DD	FLAT:??_ECMainWindow@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CMainWindow@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CSkinWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CMainWindow@@UAEXXZ
	DD	FLAT:?Enable@CMainWindow@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
	DD	FLAT:?OnSkinPaint@CMainWindow@@MAEXVCSkinObj@@@Z
CONST	ENDS
_DATA	SEGMENT
	ORG $+1
$SG170191 DB	'The Realm Online', 00H
	ORG $+3
$SG170192 DB	'MP_Frame.skn', 00H
	ORG $+3
$SG170199 DB	'form', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T176195 DD	019930520H
	DD	03H
	DD	FLAT:$T176197
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T176197 DD	0ffffffffH
	DD	FLAT:$L176191
	DD	00H
	DD	FLAT:$L176192
	DD	00H
	DD	FLAT:$L176193
xdata$x	ENDS
_TEXT	SEGMENT
$T176184 = -48
$T176185 = -52
$T176186 = -56
$T176187 = -60
$T176190 = -76
__$EHRec$ = -12
_this$ = -80
_app$ = -32
_myRect$ = -28
??0CMainWindow@@QAE@XZ PROC NEAR			; CMainWindow::CMainWindow

; 778  : {

  0179d	55		 push	 ebp
  0179e	8b ec		 mov	 ebp, esp
  017a0	6a ff		 push	 -1
  017a2	68 00 00 00 00	 push	 $L176196
  017a7	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  017ad	50		 push	 eax
  017ae	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  017b5	83 ec 50	 sub	 esp, 80			; 00000050H
  017b8	89 4d b0	 mov	 DWORD PTR _this$[ebp], ecx
  017bb	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  017be	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  017c3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  017ca	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  017cd	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  017d3	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect
  017d8	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  017db	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  017e1	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect
  017e6	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  017e9	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMainWindow@@6B@ ; CMainWindow::`vftable'

; 779  : 	// set our window priority
; 780  : 	SetPriority ( swPriMainWindow );

  017ef	6a 00		 push	 0
  017f1	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  017f4	e8 00 00 00 00	 call	 ?SetPriority@CSkinWnd@@QAEXH@Z ; CSkinWnd::SetPriority

; 781  : 
; 782  : 	// set the original window rect to default...
; 783  : 	m_OriginalWindowRect.SetRectEmpty();

  017f9	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  017fc	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  01802	e8 00 00 00 00	 call	 ?SetRectEmpty@CRect@@QAEXXZ ; CRect::SetRectEmpty

; 784  : 
; 785  : 	// Set the class name to be the app'ssingle instance class name
; 786  :     CSciApp *app = (CSciApp *)AfxGetApp();

  01807	e8 00 00 00 00	 call	 ?AfxGetApp@@YGPAVCWinApp@@XZ ; AfxGetApp
  0180c	89 45 e0	 mov	 DWORD PTR _app$[ebp], eax

; 787  : 	assert(app != NULL);
; 788  : 
; 789  : 	CreateClassPopup ( app->m_pSingleInstance->GetClassName(), "MP_Frame.skn", "The Realm Online", CRect ( 0, 0, 640, 480 ), FALSE, TRUE );

  0180f	6a 00		 push	 0
  01811	6a 01		 push	 1
  01813	6a 00		 push	 0
  01815	68 e0 01 00 00	 push	 480			; 000001e0H
  0181a	68 80 02 00 00	 push	 640			; 00000280H
  0181f	6a 00		 push	 0
  01821	6a 00		 push	 0
  01823	8d 4d d0	 lea	 ecx, DWORD PTR $T176184[ebp]
  01826	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  0182b	50		 push	 eax
  0182c	68 00 00 00 00	 push	 OFFSET FLAT:$SG170191
  01831	68 00 00 00 00	 push	 OFFSET FLAT:$SG170192
  01836	8d 4d cc	 lea	 ecx, DWORD PTR $T176185[ebp]
  01839	51		 push	 ecx
  0183a	8b 55 e0	 mov	 edx, DWORD PTR _app$[ebp]
  0183d	8b 8a c4 00 00
	00		 mov	 ecx, DWORD PTR [edx+196]
  01843	e8 00 00 00 00	 call	 ?GetClassNameA@CSingleInstance@@QBE?AVCString@@XZ ; CSingleInstance::GetClassNameA
  01848	89 45 ac	 mov	 DWORD PTR -84+[ebp], eax
  0184b	8b 45 ac	 mov	 eax, DWORD PTR -84+[ebp]
  0184e	89 45 a8	 mov	 DWORD PTR -88+[ebp], eax
  01851	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01855	8b 4d a8	 mov	 ecx, DWORD PTR -88+[ebp]
  01858	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0185d	50		 push	 eax
  0185e	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  01861	e8 00 00 00 00	 call	 ?CreateClassPopup@CSkinWnd@@QAEHPBD00ABVCRect@@HHH@Z ; CSkinWnd::CreateClassPopup
  01866	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0186a	8d 4d cc	 lea	 ecx, DWORD PTR $T176185[ebp]
  0186d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 790  : 
; 791  : 	m_pSCIWnd = new CSCIWnd;

  01872	6a 50		 push	 80			; 00000050H
  01874	e8 00 00 00 00	 call	 ??2CObject@@SGPAXI@Z	; CObject::operator new
  01879	89 45 c4	 mov	 DWORD PTR $T176187[ebp], eax
  0187c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  01880	83 7d c4 00	 cmp	 DWORD PTR $T176187[ebp], 0
  01884	74 0d		 je	 SHORT $L176188
  01886	8b 4d c4	 mov	 ecx, DWORD PTR $T176187[ebp]
  01889	e8 00 00 00 00	 call	 ??0CSCIWnd@@QAE@XZ	; CSCIWnd::CSCIWnd
  0188e	89 45 a4	 mov	 DWORD PTR -92+[ebp], eax
  01891	eb 07		 jmp	 SHORT $L176189
$L176188:
  01893	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR -92+[ebp], 0
$L176189:
  0189a	8b 4d a4	 mov	 ecx, DWORD PTR -92+[ebp]
  0189d	89 4d c8	 mov	 DWORD PTR $T176186[ebp], ecx
  018a0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  018a4	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  018a7	8b 45 c8	 mov	 eax, DWORD PTR $T176186[ebp]
  018aa	89 82 94 00 00
	00		 mov	 DWORD PTR [edx+148], eax

; 792  : 	m_pSCIWnd->Create ( this, CRect ( 0, 0, 640, 480 ) );

  018b0	68 e0 01 00 00	 push	 480			; 000001e0H
  018b5	68 80 02 00 00	 push	 640			; 00000280H
  018ba	6a 00		 push	 0
  018bc	6a 00		 push	 0
  018be	8d 4d b4	 lea	 ecx, DWORD PTR $T176190[ebp]
  018c1	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect
  018c6	50		 push	 eax
  018c7	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  018ca	51		 push	 ecx
  018cb	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  018ce	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  018d4	e8 00 00 00 00	 call	 ?Create@CSCIWnd@@QAEHPAVCWnd@@AAVCRect@@@Z ; CSCIWnd::Create

; 793  : 
; 794  : 	// get the client rectangle of our window
; 795  : 	CRect myRect;

  018d9	8d 4d e4	 lea	 ecx, DWORD PTR _myRect$[ebp]
  018dc	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 796  : 	GetClientRect ( &myRect );

  018e1	8d 45 e4	 lea	 eax, DWORD PTR _myRect$[ebp]
  018e4	50		 push	 eax
  018e5	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  018e8	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 797  : 	ClientToScreen( &myRect );

  018ed	8d 4d e4	 lea	 ecx, DWORD PTR _myRect$[ebp]
  018f0	51		 push	 ecx
  018f1	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  018f4	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::ClientToScreen

; 798  : 
; 799  : 	// get the current rectangle of this window
; 800  : 	GetWindowRect ( &m_finalRect );

  018f9	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  018fc	81 c2 ac 00 00
	00		 add	 edx, 172		; 000000acH
  01902	52		 push	 edx
  01903	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  01906	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 801  : 
; 802  : 	// grow our window by the difference
; 803  : 	m_finalRect.bottom += 480 - myRect.Height();

  0190b	8d 4d e4	 lea	 ecx, DWORD PTR _myRect$[ebp]
  0190e	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  01913	b9 e0 01 00 00	 mov	 ecx, 480		; 000001e0H
  01918	2b c8		 sub	 ecx, eax
  0191a	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  0191d	8b 82 b8 00 00
	00		 mov	 eax, DWORD PTR [edx+184]
  01923	03 c1		 add	 eax, ecx
  01925	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  01928	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 804  : 	m_finalRect.right += 640 - myRect.Width();

  0192e	8d 4d e4	 lea	 ecx, DWORD PTR _myRect$[ebp]
  01931	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  01936	ba 80 02 00 00	 mov	 edx, 640		; 00000280H
  0193b	2b d0		 sub	 edx, eax
  0193d	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  01940	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  01946	03 ca		 add	 ecx, edx
  01948	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  0194b	89 8a b4 00 00
	00		 mov	 DWORD PTR [edx+180], ecx

; 805  : 	m_finalRect.OffsetRect( -myRect.left, -myRect.top );

  01951	8b 45 e8	 mov	 eax, DWORD PTR _myRect$[ebp+4]
  01954	f7 d8		 neg	 eax
  01956	50		 push	 eax
  01957	8b 4d e4	 mov	 ecx, DWORD PTR _myRect$[ebp]
  0195a	f7 d9		 neg	 ecx
  0195c	51		 push	 ecx
  0195d	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  01960	81 c1 ac 00 00
	00		 add	 ecx, 172		; 000000acH
  01966	e8 00 00 00 00	 call	 ?OffsetRect@CRect@@QAEXHH@Z ; CRect::OffsetRect

; 806  : 
; 807  : 	// restore this window to its previous location
; 808  : 	CenterOnDisplay();

  0196b	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  0196e	e8 00 00 00 00	 call	 ?CenterOnDisplay@CMainWindow@@QAEXXZ ; CMainWindow::CenterOnDisplay

; 809  : 
; 810  : 	m_pSCIWnd->ShowWindow ( SW_SHOW );

  01973	6a 05		 push	 5
  01975	8b 55 b0	 mov	 edx, DWORD PTR _this$[ebp]
  01978	8b 8a 94 00 00
	00		 mov	 ecx, DWORD PTR [edx+148]
  0197e	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 811  : 
; 812  : 	m_pSkinForm->GetObjectRect ( "form", m_OriginalWindowRect );

  01983	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  01986	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  0198c	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  01991	50		 push	 eax
  01992	68 00 00 00 00	 push	 OFFSET FLAT:$SG170199
  01997	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  0199a	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0199d	e8 00 00 00 00	 call	 ?GetObjectRect@CSkinForm@@QAEHPBDPAUtagRECT@@@Z ; CSkinForm::GetObjectRect

; 813  : }

  019a2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  019a9	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  019ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  019af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  019b6	8b e5		 mov	 esp, ebp
  019b8	5d		 pop	 ebp
  019b9	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L176191:
  000c7	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  000cf	c3		 ret	 0
$L176192:
  000d0	8d 4d cc	 lea	 ecx, DWORD PTR $T176185[ebp]
  000d3	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000d8	c3		 ret	 0
$L176193:
  000d9	8b 45 c4	 mov	 eax, DWORD PTR $T176187[ebp]
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  000e2	c3		 ret	 0
$L176196:
  000e3	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176195
  000e8	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CMainWindow@@QAE@XZ ENDP				; CMainWindow::CMainWindow
PUBLIC	??1CMainWindow@@UAE@XZ				; CMainWindow::~CMainWindow
;	COMDAT ??_GCMainWindow@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMainWindow@@UAEPAXI@Z PROC NEAR			; CMainWindow::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMainWindow@@UAE@XZ	; CMainWindow::~CMainWindow
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L170203
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L170203:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCMainWindow@@UAEPAXI@Z ENDP				; CMainWindow::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CMainWindow@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CMainWindow@@UAE@XZ PROC NEAR			; CMainWindow::~CMainWindow, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CMainWindow@@UAE@XZ ENDP				; CMainWindow::~CMainWindow
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnSetFocus@CMainWindow@@IAEXPAVCWnd@@@Z PROC NEAR	; CMainWindow::OnSetFocus

; 816  : {

  019ba	55		 push	 ebp
  019bb	8b ec		 mov	 ebp, esp
  019bd	51		 push	 ecx
  019be	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 817  : 	// set focus on the main panel at all times
; 818  : 	if ( NULL != g_pMainPanelWnd ) {

  019c1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A, 0 ; g_pMainPanelWnd
  019c8	74 0b		 je	 SHORT $L170210

; 819  : 		g_pMainPanelWnd->SetFocus();

  019ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pMainPanelWnd@@3PAVCMainPanelWnd@@A ; g_pMainPanelWnd
  019d0	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus
$L170210:

; 821  : }

  019d5	8b e5		 mov	 esp, ebp
  019d7	5d		 pop	 ebp
  019d8	c2 04 00	 ret	 4
?OnSetFocus@CMainWindow@@IAEXPAVCWnd@@@Z ENDP		; CMainWindow::OnSetFocus
_TEXT	ENDS
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
_TEXT	SEGMENT
_obj$ = 8
_this$ = -4
?OnSkinPaint@CMainWindow@@MAEXVCSkinObj@@@Z PROC NEAR	; CMainWindow::OnSkinPaint

; 824  : {

  019db	55		 push	 ebp
  019dc	8b ec		 mov	 ebp, esp
  019de	51		 push	 ecx
  019df	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 825  : }

  019e2	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  019e5	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  019ea	8b e5		 mov	 esp, ebp
  019ec	5d		 pop	 ebp
  019ed	c2 08 00	 ret	 8
?OnSkinPaint@CMainWindow@@MAEXVCSkinObj@@@Z ENDP	; CMainWindow::OnSkinPaint
_this$ = -4
?OnChar@CMainWindow@@IAEXIII@Z PROC NEAR		; CMainWindow::OnChar

; 829  : {

  019f0	55		 push	 ebp
  019f1	8b ec		 mov	 ebp, esp
  019f3	51		 push	 ecx
  019f4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 833  : 
; 834  : //	KbdMgrWin *kbd = (KbdMgrWin *)kbdMgr;
; 835  : //	kbd->HandleKey ( WM_CHAR, nChar, nFlags );
; 836  : }

  019f7	8b e5		 mov	 esp, ebp
  019f9	5d		 pop	 ebp
  019fa	c2 0c 00	 ret	 12			; 0000000cH
?OnChar@CMainWindow@@IAEXIII@Z ENDP			; CMainWindow::OnChar
_TEXT	ENDS
PUBLIC	?SetLogOff@CToonSettings@@QAEXH@Z		; CToonSettings::SetLogOff
PUBLIC	?OnClose@CWnd@@IAEXXZ				; CWnd::OnClose
EXTRN	?SaveWindowPositions@CWindowMgr@@QAEXXZ:NEAR	; CWindowMgr::SaveWindowPositions
EXTRN	?CloseAllWindows@CWindowMgr@@QAEXXZ:NEAR	; CWindowMgr::CloseAllWindows
_TEXT	SEGMENT
_this$ = -4
?OnClose@CMainWindow@@IAEXXZ PROC NEAR			; CMainWindow::OnClose

; 840  : {

  019fd	55		 push	 ebp
  019fe	8b ec		 mov	 ebp, esp
  01a00	51		 push	 ecx
  01a01	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 841  : 	if ( g_pWindowMgr )

  01a04	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  01a0b	74 2c		 je	 SHORT $L170226

; 843  : 		g_pWindowMgr->SaveWindowPositions();

  01a0d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  01a13	e8 00 00 00 00	 call	 ?SaveWindowPositions@CWindowMgr@@QAEXXZ ; CWindowMgr::SaveWindowPositions

; 844  :         if (g_pToonSettings) g_pToonSettings->SetLogOff( true );

  01a18	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A, 0 ; g_pToonSettings
  01a1f	74 0d		 je	 SHORT $L170227
  01a21	6a 01		 push	 1
  01a23	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pToonSettings@@3PAVCToonSettings@@A ; g_pToonSettings
  01a29	e8 00 00 00 00	 call	 ?SetLogOff@CToonSettings@@QAEXH@Z ; CToonSettings::SetLogOff
$L170227:

; 845  :         g_pWindowMgr->CloseAllWindows();

  01a2e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  01a34	e8 00 00 00 00	 call	 ?CloseAllWindows@CWindowMgr@@QAEXXZ ; CWindowMgr::CloseAllWindows
$L170226:

; 847  : 
; 848  : 	CWnd::OnClose();

  01a39	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a3c	e8 00 00 00 00	 call	 ?OnClose@CWnd@@IAEXXZ	; CWnd::OnClose

; 849  : }

  01a41	8b e5		 mov	 esp, ebp
  01a43	5d		 pop	 ebp
  01a44	c3		 ret	 0
?OnClose@CMainWindow@@IAEXXZ ENDP			; CMainWindow::OnClose
_TEXT	ENDS
PUBLIC	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z		; CWnd::MoveWindow
_TEXT	SEGMENT
_this$ = -28
_nScreenWidth$ = -8
_nScreenHeight$ = -4
_centerRect$ = -24
?CenterOnDisplay@CMainWindow@@QAEXXZ PROC NEAR		; CMainWindow::CenterOnDisplay

; 853  : {

  01a45	55		 push	 ebp
  01a46	8b ec		 mov	 ebp, esp
  01a48	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01a4b	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 854  : 	// get the width and height of the screen
; 855  : 	int nScreenWidth = GetSystemMetrics ( SM_CXSCREEN );

  01a4e	6a 00		 push	 0
  01a50	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  01a56	89 45 f8	 mov	 DWORD PTR _nScreenWidth$[ebp], eax

; 856  : 	int nScreenHeight = GetSystemMetrics ( SM_CYSCREEN );

  01a59	6a 01		 push	 1
  01a5b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  01a61	89 45 fc	 mov	 DWORD PTR _nScreenHeight$[ebp], eax

; 857  : 
; 858  : 	// create a centered rectangle
; 859  : 	CRect centerRect = m_finalRect;

  01a64	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  01a67	05 ac 00 00 00	 add	 eax, 172		; 000000acH
  01a6c	8b 08		 mov	 ecx, DWORD PTR [eax]
  01a6e	89 4d e8	 mov	 DWORD PTR _centerRect$[ebp], ecx
  01a71	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01a74	89 55 ec	 mov	 DWORD PTR _centerRect$[ebp+4], edx
  01a77	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01a7a	89 4d f0	 mov	 DWORD PTR _centerRect$[ebp+8], ecx
  01a7d	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  01a80	89 55 f4	 mov	 DWORD PTR _centerRect$[ebp+12], edx

; 860  : 
; 861  : 	centerRect.OffsetRect( 
; 862  : 		( ( nScreenWidth - 640 ) / 2 ),
; 863  : 		( ( nScreenHeight - 480 ) / 2 )
; 864  : 	);

  01a83	8b 45 fc	 mov	 eax, DWORD PTR _nScreenHeight$[ebp]
  01a86	2d e0 01 00 00	 sub	 eax, 480		; 000001e0H
  01a8b	99		 cdq
  01a8c	2b c2		 sub	 eax, edx
  01a8e	d1 f8		 sar	 eax, 1
  01a90	50		 push	 eax
  01a91	8b 45 f8	 mov	 eax, DWORD PTR _nScreenWidth$[ebp]
  01a94	2d 80 02 00 00	 sub	 eax, 640		; 00000280H
  01a99	99		 cdq
  01a9a	2b c2		 sub	 eax, edx
  01a9c	d1 f8		 sar	 eax, 1
  01a9e	50		 push	 eax
  01a9f	8d 4d e8	 lea	 ecx, DWORD PTR _centerRect$[ebp]
  01aa2	e8 00 00 00 00	 call	 ?OffsetRect@CRect@@QAEXHH@Z ; CRect::OffsetRect

; 865  : 
; 866  : 	// update the window position
; 867  : 	MoveWindow ( &centerRect );

  01aa7	6a 01		 push	 1
  01aa9	8d 45 e8	 lea	 eax, DWORD PTR _centerRect$[ebp]
  01aac	50		 push	 eax
  01aad	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  01ab0	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow

; 868  : }

  01ab5	8b e5		 mov	 esp, ebp
  01ab7	5d		 pop	 ebp
  01ab8	c3		 ret	 0
?CenterOnDisplay@CMainWindow@@QAEXXZ ENDP		; CMainWindow::CenterOnDisplay
_TEXT	ENDS
PUBLIC	?IsRectEmpty@CRect@@QBEHXZ			; CRect::IsRectEmpty
_TEXT	SEGMENT
_pMMI$ = 8
_this$ = -4
?OnGetMinMaxInfo@CMainWindow@@IAEXPAUtagMINMAXINFO@@@Z PROC NEAR ; CMainWindow::OnGetMinMaxInfo

; 874  : {

  01ab9	55		 push	 ebp
  01aba	8b ec		 mov	 ebp, esp
  01abc	51		 push	 ecx
  01abd	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 875  : 	if ( !m_OriginalWindowRect.IsRectEmpty() ) {

  01ac0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ac3	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  01ac9	e8 00 00 00 00	 call	 ?IsRectEmpty@CRect@@QBEHXZ ; CRect::IsRectEmpty
  01ace	85 c0		 test	 eax, eax
  01ad0	75 28		 jne	 SHORT $L170239

; 876  : 		pMMI->ptMaxTrackSize.x = m_OriginalWindowRect.Width();

  01ad2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ad5	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  01adb	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  01ae0	8b 4d 08	 mov	 ecx, DWORD PTR _pMMI$[ebp]
  01ae3	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 877  : 		pMMI->ptMaxTrackSize.y = m_OriginalWindowRect.Height();

  01ae6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01ae9	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  01aef	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  01af4	8b 55 08	 mov	 edx, DWORD PTR _pMMI$[ebp]
  01af7	89 42 24	 mov	 DWORD PTR [edx+36], eax
$L170239:

; 879  : }

  01afa	8b e5		 mov	 esp, ebp
  01afc	5d		 pop	 ebp
  01afd	c2 04 00	 ret	 4
?OnGetMinMaxInfo@CMainWindow@@IAEXPAUtagMINMAXINFO@@@Z ENDP ; CMainWindow::OnGetMinMaxInfo
_TEXT	ENDS
PUBLIC	?OnSysCommand@CWnd@@IAEXIJ@Z			; CWnd::OnSysCommand
_TEXT	SEGMENT
_nID$ = 8
_lParam$ = 12
_this$ = -8
_bPassCommandUp$ = -4
?OnSysCommand@CMainWindow@@IAEXIJ@Z PROC NEAR		; CMainWindow::OnSysCommand

; 882  : {

  01b00	55		 push	 ebp
  01b01	8b ec		 mov	 ebp, esp
  01b03	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01b06	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 883  : 	bool bPassCommandUp = true;

  01b09	c6 45 fc 01	 mov	 BYTE PTR _bPassCommandUp$[ebp], 1

; 884  : 
; 885  : 	if ( g_pWindowMgr ) {

  01b0d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A, 0 ; g_pWindowMgr
  01b14	74 74		 je	 SHORT $L170248

; 886  : 		switch ( nID ) {

  01b16	8b 45 08	 mov	 eax, DWORD PTR _nID$[ebp]
  01b19	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  01b1c	81 7d f4 20 f0
	00 00		 cmp	 DWORD PTR -12+[ebp], 61472 ; 0000f020H
  01b23	74 58		 je	 SHORT $L170254
  01b25	81 7d f4 30 f0
	00 00		 cmp	 DWORD PTR -12+[ebp], 61488 ; 0000f030H
  01b2c	74 0b		 je	 SHORT $L170251
  01b2e	81 7d f4 20 f1
	00 00		 cmp	 DWORD PTR -12+[ebp], 61728 ; 0000f120H
  01b35	74 24		 je	 SHORT $L170252
  01b37	eb 51		 jmp	 SHORT $L170248
$L170251:

; 888  : 				g_pWindowMgr->SetFullScreen ( !g_pWindowMgr->GetFullScreen() );

  01b39	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  01b3f	e8 00 00 00 00	 call	 ?GetFullScreen@CWindowMgr@@QAEHXZ ; CWindowMgr::GetFullScreen
  01b44	f7 d8		 neg	 eax
  01b46	1b c0		 sbb	 eax, eax
  01b48	40		 inc	 eax
  01b49	50		 push	 eax
  01b4a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  01b50	e8 00 00 00 00	 call	 ?SetFullScreen@CWindowMgr@@QAEXH@Z ; CWindowMgr::SetFullScreen

; 889  : 				bPassCommandUp = false;

  01b55	c6 45 fc 00	 mov	 BYTE PTR _bPassCommandUp$[ebp], 0

; 891  : 
; 892  : 			break;

  01b59	eb 2f		 jmp	 SHORT $L170248
$L170252:

; 895  : 				if ( g_pWindowMgr->GetFullScreen() ) {

  01b5b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  01b61	e8 00 00 00 00	 call	 ?GetFullScreen@CWindowMgr@@QAEHXZ ; CWindowMgr::GetFullScreen
  01b66	85 c0		 test	 eax, eax
  01b68	74 11		 je	 SHORT $L170253

; 896  : 					g_pWindowMgr->SetFullScreen ( false );

  01b6a	6a 00		 push	 0
  01b6c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  01b72	e8 00 00 00 00	 call	 ?SetFullScreen@CWindowMgr@@QAEXH@Z ; CWindowMgr::SetFullScreen

; 897  : 					bPassCommandUp = false;

  01b77	c6 45 fc 00	 mov	 BYTE PTR _bPassCommandUp$[ebp], 0
$L170253:

; 900  : 
; 901  : 			break;

  01b7b	eb 0d		 jmp	 SHORT $L170248
$L170254:

; 904  : 				g_pWindowMgr->SetFullScreen ( false );

  01b7d	6a 00		 push	 0
  01b7f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  01b85	e8 00 00 00 00	 call	 ?SetFullScreen@CWindowMgr@@QAEXH@Z ; CWindowMgr::SetFullScreen
$L170248:

; 910  : 
; 911  : 	if ( bPassCommandUp )

  01b8a	8b 4d fc	 mov	 ecx, DWORD PTR _bPassCommandUp$[ebp]
  01b8d	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  01b93	85 c9		 test	 ecx, ecx
  01b95	74 10		 je	 SHORT $L170255

; 912  : 		CWnd::OnSysCommand ( nID, lParam );

  01b97	8b 55 0c	 mov	 edx, DWORD PTR _lParam$[ebp]
  01b9a	52		 push	 edx
  01b9b	8b 45 08	 mov	 eax, DWORD PTR _nID$[ebp]
  01b9e	50		 push	 eax
  01b9f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01ba2	e8 00 00 00 00	 call	 ?OnSysCommand@CWnd@@IAEXIJ@Z ; CWnd::OnSysCommand
$L170255:

; 913  : }

  01ba7	8b e5		 mov	 esp, ebp
  01ba9	5d		 pop	 ebp
  01baa	c2 08 00	 ret	 8
?OnSysCommand@CMainWindow@@IAEXIJ@Z ENDP		; CMainWindow::OnSysCommand
_TEXT	ENDS
PUBLIC	??0CSCI_Game@@QAE@G@Z				; CSCI_Game::CSCI_Game
PUBLIC	?get_handsLevel@CSCI_Game@@QAEFXZ		; CSCI_Game::get_handsLevel
PUBLIC	??0CSCI_Game@@QAE@ABV0@@Z			; CSCI_Game::CSCI_Game
PUBLIC	?HandsAreOff@@YA_NXZ				; HandsAreOff
PUBLIC	?IsObject@ObjectID@@QBEHXZ			; ObjectID::IsObject
_TEXT	SEGMENT
$T176210 = -8
_hGame$ = -4
?HandsAreOff@@YA_NXZ PROC NEAR				; HandsAreOff

; 917  : {

  01bad	55		 push	 ebp
  01bae	8b ec		 mov	 ebp, esp
  01bb0	83 ec 08	 sub	 esp, 8

; 918  : 	CSCI_Game hGame = (CSCI_Game)pm.game;

  01bb3	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?pm@@3VPMachine@@A
  01bb9	50		 push	 eax
  01bba	8d 4d f8	 lea	 ecx, DWORD PTR $T176210[ebp]
  01bbd	e8 00 00 00 00	 call	 ??0CSCI_Game@@QAE@G@Z	; CSCI_Game::CSCI_Game
  01bc2	50		 push	 eax
  01bc3	8d 4d fc	 lea	 ecx, DWORD PTR _hGame$[ebp]
  01bc6	e8 00 00 00 00	 call	 ??0CSCI_Game@@QAE@ABV0@@Z ; CSCI_Game::CSCI_Game

; 919  : 
; 920  : 	if ( hGame.IsObject() && hGame.get_handsLevel() )

  01bcb	8d 4d fc	 lea	 ecx, DWORD PTR _hGame$[ebp]
  01bce	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  01bd3	85 c0		 test	 eax, eax
  01bd5	74 13		 je	 SHORT $L170262
  01bd7	8d 4d fc	 lea	 ecx, DWORD PTR _hGame$[ebp]
  01bda	e8 00 00 00 00	 call	 ?get_handsLevel@CSCI_Game@@QAEFXZ ; CSCI_Game::get_handsLevel
  01bdf	0f bf c8	 movsx	 ecx, ax
  01be2	85 c9		 test	 ecx, ecx
  01be4	74 04		 je	 SHORT $L170262

; 921  : 		return true;

  01be6	b0 01		 mov	 al, 1
  01be8	eb 02		 jmp	 SHORT $L170258
$L170262:

; 922  : 
; 923  : 	return false;

  01bea	32 c0		 xor	 al, al
$L170258:

; 924  : }

  01bec	8b e5		 mov	 esp, ebp
  01bee	5d		 pop	 ebp
  01bef	c3		 ret	 0
?HandsAreOff@@YA_NXZ ENDP				; HandsAreOff
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Game@@QAE@ABV0@@Z PROC NEAR			; CSCI_Game::CSCI_Game, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Game@@QAE@ABV0@@Z ENDP				; CSCI_Game::CSCI_Game
_TEXT	ENDS
PUBLIC	?OnActivateApp@CWnd@@IAEXHPAUHTASK__@@@Z	; CWnd::OnActivateApp
_TEXT	SEGMENT
_bActive$ = 8
_hTask$ = 12
_this$ = -4
?OnActivateApp@CMainWindow@@IAEXHK@Z PROC NEAR		; CMainWindow::OnActivateApp

; 927  : {

  01bf0	55		 push	 ebp
  01bf1	8b ec		 mov	 ebp, esp
  01bf3	51		 push	 ecx
  01bf4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 928  : 	if (!bActive) {

  01bf7	83 7d 08 00	 cmp	 DWORD PTR _bActive$[ebp], 0
  01bfb	75 1c		 jne	 SHORT $L170272

; 929  : 		if (g_pWindowMgr->GetFullScreen()) {

  01bfd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  01c03	e8 00 00 00 00	 call	 ?GetFullScreen@CWindowMgr@@QAEHXZ ; CWindowMgr::GetFullScreen
  01c08	85 c0		 test	 eax, eax
  01c0a	74 0d		 je	 SHORT $L170272

; 930  : 			g_pWindowMgr->SetFullScreen(false);

  01c0c	6a 00		 push	 0
  01c0e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pWindowMgr@@3PAVCWindowMgr@@A ; g_pWindowMgr
  01c14	e8 00 00 00 00	 call	 ?SetFullScreen@CWindowMgr@@QAEXH@Z ; CWindowMgr::SetFullScreen
$L170272:

; 933  : 
; 934  : 	CWnd::OnActivateApp(bActive, reinterpret_cast<HTASK__ *>(hTask));

  01c19	8b 45 0c	 mov	 eax, DWORD PTR _hTask$[ebp]
  01c1c	50		 push	 eax
  01c1d	8b 4d 08	 mov	 ecx, DWORD PTR _bActive$[ebp]
  01c20	51		 push	 ecx
  01c21	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01c24	e8 00 00 00 00	 call	 ?OnActivateApp@CWnd@@IAEXHPAUHTASK__@@@Z ; CWnd::OnActivateApp

; 935  : }

  01c29	8b e5		 mov	 esp, ebp
  01c2b	5d		 pop	 ebp
  01c2c	c2 08 00	 ret	 8
?OnActivateApp@CMainWindow@@IAEXHK@Z ENDP		; CMainWindow::OnActivateApp
_TEXT	ENDS
EXTRN	?Enable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Enable
_TEXT	SEGMENT
_this$ = -4
?Enable@CMainWindow@@UAEXXZ PROC NEAR			; CMainWindow::Enable

; 939  : {

  01c2f	55		 push	 ebp
  01c30	8b ec		 mov	 ebp, esp
  01c32	51		 push	 ecx
  01c33	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 940  : 	CSkinWnd::Enable();

  01c36	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01c39	e8 00 00 00 00	 call	 ?Enable@CSkinWnd@@UAEXXZ ; CSkinWnd::Enable

; 941  : }

  01c3e	8b e5		 mov	 esp, ebp
  01c40	5d		 pop	 ebp
  01c41	c3		 ret	 0
?Enable@CMainWindow@@UAEXXZ ENDP			; CMainWindow::Enable
_TEXT	ENDS
EXTRN	?Disable@CSkinWnd@@UAEXXZ:NEAR			; CSkinWnd::Disable
_TEXT	SEGMENT
_this$ = -4
?Disable@CMainWindow@@UAEXXZ PROC NEAR			; CMainWindow::Disable

; 944  : {

  01c42	55		 push	 ebp
  01c43	8b ec		 mov	 ebp, esp
  01c45	51		 push	 ecx
  01c46	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 945  : 	CSkinWnd::Disable();

  01c49	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01c4c	e8 00 00 00 00	 call	 ?Disable@CSkinWnd@@UAEXXZ ; CSkinWnd::Disable

; 946  : }

  01c51	8b e5		 mov	 esp, ebp
  01c53	5d		 pop	 ebp
  01c54	c3		 ret	 0
?Disable@CMainWindow@@UAEXXZ ENDP			; CMainWindow::Disable
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+3
$SG170288 DB	'Display Changed', 00H
$SG170289 DB	'Your display settings have been changed.  The Realm Onli'
	DB	'ne must be restarted to handle this.  Restart the game to con'
	DB	'tinue playing with your new settings.', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnDisplayChange@CMainWindow@@IAEJIJ@Z PROC NEAR	; CMainWindow::OnDisplayChange

; 948  : {

  01c55	55		 push	 ebp
  01c56	8b ec		 mov	 ebp, esp
  01c58	51		 push	 ecx
  01c59	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 949  : 	if (g_bExpectDisplayChange == false) {

  01c5c	33 c0		 xor	 eax, eax
  01c5e	a0 00 00 00 00	 mov	 al, BYTE PTR ?g_bExpectDisplayChange@@3_NA ; g_bExpectDisplayChange
  01c63	85 c0		 test	 eax, eax
  01c65	75 2c		 jne	 SHORT $L170287

; 950  : 		::MessageBox(::GetFocus(), "Your display settings have been changed.  The Realm Online must be restarted to handle this.  Restart the game to continue playing with your new settings.", "Display Changed", MB_TASKMODAL);

  01c67	68 00 20 00 00	 push	 8192			; 00002000H
  01c6c	68 00 00 00 00	 push	 OFFSET FLAT:$SG170288
  01c71	68 00 00 00 00	 push	 OFFSET FLAT:$SG170289
  01c76	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  01c7c	50		 push	 eax
  01c7d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 951  : 		CloseSelf();

  01c83	6a 00		 push	 0
  01c85	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01c88	8b 11		 mov	 edx, DWORD PTR [ecx]
  01c8a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01c8d	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]
$L170287:

; 953  : 
; 954  : 	g_bExpectDisplayChange = false;

  01c93	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?g_bExpectDisplayChange@@3_NA, 0 ; g_bExpectDisplayChange

; 955  : 	return 1;

  01c9a	b8 01 00 00 00	 mov	 eax, 1

; 956  : }

  01c9f	8b e5		 mov	 esp, ebp
  01ca1	5d		 pop	 ebp
  01ca2	c2 08 00	 ret	 8
?OnDisplayChange@CMainWindow@@IAEJIJ@Z ENDP		; CMainWindow::OnDisplayChange
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
PUBLIC	?Compare@CString@@QBEHPBD@Z			; CString::Compare
;	COMDAT ??9@YG_NABVCString@@PBD@Z
_TEXT	SEGMENT
_s1$ = 8
_s2$ = 12
??9@YG_NABVCString@@PBD@Z PROC NEAR			; operator!=, COMDAT

; 189  : 	{ return s1.Compare(s2) != 0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _s1$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Compare@CString@@QBEHPBD@Z ; CString::Compare
  0000f	f7 d8		 neg	 eax
  00011	1b c0		 sbb	 eax, eax
  00013	f7 d8		 neg	 eax
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
??9@YG_NABVCString@@PBD@Z ENDP				; operator!=
_TEXT	ENDS
PUBLIC	__tcscmp
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8
_this$ = -4
?Compare@CString@@QBEHPBD@Z PROC NEAR			; CString::Compare, COMDAT

; 157  : 	{ ASSERT(AfxIsValidString(lpsz)); return _tcscmp(m_pchData, lpsz); }    // MBCS/Unicode aware

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpsz$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 __tcscmp
  00016	83 c4 08	 add	 esp, 8
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?Compare@CString@@QBEHPBD@Z ENDP			; CString::Compare
_TEXT	ENDS
EXTRN	__imp___mbscmp:NEAR
;	COMDAT __tcscmp
_TEXT	SEGMENT
__s1$ = 8
__s2$ = 12
__tcscmp PROC NEAR					; COMDAT

; 797  : __inline int _tcscmp(_CPC _s1,_CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __s2$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __s1$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbscmp
  00011	83 c4 08	 add	 esp, 8
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
__tcscmp ENDP
_TEXT	ENDS
EXTRN	?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ:NEAR ; AfxGetModuleState
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT
?AfxGetApp@@YGPAVCWinApp@@XZ PROC NEAR			; AfxGetApp, COMDAT

; 17   : 	{ return afxCurrentWinApp; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00008	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?AfxGetApp@@YGPAVCWinApp@@XZ ENDP			; AfxGetApp
_TEXT	ENDS
;	COMDAT ?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ PROC NEAR	; AfxGetInstanceHandle, COMDAT

; 19   : 	{ ASSERT(afxCurrentInstanceHandle != NULL);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 20   : 		return afxCurrentInstanceHandle; }

  00003	e8 00 00 00 00	 call	 ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ ; AfxGetModuleState
  00008	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?AfxGetInstanceHandle@@YGPAUHINSTANCE__@@XZ ENDP	; AfxGetInstanceHandle
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT
_initX$ = 8
_initY$ = 12
_this$ = -4
??0CPoint@@QAE@HH@Z PROC NEAR				; CPoint::CPoint, COMDAT

; 85   : 	{ x = initX; y = initY; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _initX$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _initY$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0CPoint@@QAE@HH@Z ENDP				; CPoint::CPoint
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT
_initPt$ = 8
_this$ = -4
??0CPoint@@QAE@UtagPOINT@@@Z PROC NEAR			; CPoint::CPoint, COMDAT

; 88   : 	{ *(POINT*)this = initPt; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _initPt$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 0c	 mov	 edx, DWORD PTR _initPt$[ebp+4]
  00012	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
??0CPoint@@QAE@UtagPOINT@@@Z ENDP			; CPoint::CPoint
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT

; 132  : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?Width@CRect@@QBEHXZ PROC NEAR				; CRect::Width, COMDAT

; 145  : 	{ return right - left; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00010	2b 01		 sub	 eax, DWORD PTR [ecx]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?Width@CRect@@QBEHXZ ENDP				; CRect::Width
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?Height@CRect@@QBEHXZ PROC NEAR				; CRect::Height, COMDAT

; 147  : 	{ return bottom - top; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00010	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCRect@@QAEPAUtagRECT@@XZ PROC NEAR			; CRect::operator tagRECT *, COMDAT

; 165  : 	{ return this; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??BCRect@@QAEPAUtagRECT@@XZ ENDP			; CRect::operator tagRECT *
_TEXT	ENDS
EXTRN	__imp__IsRectEmpty@4:NEAR
;	COMDAT ?IsRectEmpty@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsRectEmpty@CRect@@QBEHXZ PROC NEAR			; CRect::IsRectEmpty, COMDAT

; 169  : 	{ return ::IsRectEmpty(this); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsRectEmpty@4
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?IsRectEmpty@CRect@@QBEHXZ ENDP				; CRect::IsRectEmpty
_TEXT	ENDS
EXTRN	__imp__SetRectEmpty@4:NEAR
;	COMDAT ?SetRectEmpty@CRect@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?SetRectEmpty@CRect@@QAEXXZ PROC NEAR			; CRect::SetRectEmpty, COMDAT

; 179  : 	{ ::SetRectEmpty(this); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetRectEmpty@4
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?SetRectEmpty@CRect@@QAEXXZ ENDP			; CRect::SetRectEmpty
_TEXT	ENDS
EXTRN	__imp__OffsetRect@12:NEAR
;	COMDAT ?OffsetRect@CRect@@QAEXHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_this$ = -4
?OffsetRect@CRect@@QAEXHH@Z PROC NEAR			; CRect::OffsetRect, COMDAT

; 193  : 	{ ::OffsetRect(this, x, y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	52		 push	 edx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?OffsetRect@CRect@@QAEXHH@Z ENDP			; CRect::OffsetRect
_TEXT	ENDS
;	COMDAT ?SendMessageA@CWnd@@QAEJIIJ@Z
_TEXT	SEGMENT
_message$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?SendMessageA@CWnd@@QAEJIIJ@Z PROC NEAR			; CWnd::SendMessageA, COMDAT

; 39   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::SendMessage(m_hWnd, message, wParam, lParam); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _message$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?SendMessageA@CWnd@@QAEJIIJ@Z ENDP			; CWnd::SendMessageA
_TEXT	ENDS
EXTRN	__imp__PostMessageA@16:NEAR
;	COMDAT ?PostMessageA@CWnd@@QAEHIIJ@Z
_TEXT	SEGMENT
_message$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?PostMessageA@CWnd@@QAEHIIJ@Z PROC NEAR			; CWnd::PostMessageA, COMDAT

; 41   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::PostMessage(m_hWnd, message, wParam, lParam); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR _lParam$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _message$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?PostMessageA@CWnd@@QAEHIIJ@Z ENDP			; CWnd::PostMessageA
_TEXT	ENDS
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:NEAR		; CWnd::MoveWindow
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT
_lpRect$ = 8
_bRepaint$ = 12
_this$ = -4
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z PROC NEAR		; CWnd::MoveWindow, COMDAT

; 80   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 		lpRect->bottom - lpRect->top, bRepaint); }

  00007	8b 45 0c	 mov	 eax, DWORD PTR _bRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ENDP		; CWnd::MoveWindow
_TEXT	ENDS
EXTRN	__imp__GetWindowRect@8:NEAR
;	COMDAT ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8
_this$ = -4
?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetWindowRect, COMDAT

; 96   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetWindowRect(m_hWnd, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetWindowRect
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8
_this$ = -4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetClientRect, COMDAT

; 98   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetClientRect
_TEXT	ENDS
EXTRN	__imp__ScreenToClient@8:NEAR
;	COMDAT ?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT
_lpPoint$ = 8
_this$ = -4
?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z PROC NEAR	; CWnd::ScreenToClient, COMDAT

; 106  : 	{ ASSERT(::IsWindow(m_hWnd)); ::ScreenToClient(m_hWnd, lpPoint); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpPoint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ScreenToClient@CWnd@@QBEXPAUtagPOINT@@@Z ENDP		; CWnd::ScreenToClient
_TEXT	ENDS
EXTRN	__imp__UpdateWindow@4:NEAR
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?UpdateWindow@CWnd@@QAEXXZ PROC NEAR			; CWnd::UpdateWindow, COMDAT

; 118  : 	{ ASSERT(::IsWindow(m_hWnd)); ::UpdateWindow(m_hWnd); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000d	51		 push	 ecx
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UpdateWindow@4
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?UpdateWindow@CWnd@@QAEXXZ ENDP				; CWnd::UpdateWindow
_TEXT	ENDS
EXTRN	__imp__InvalidateRect@12:NEAR
;	COMDAT ?Invalidate@CWnd@@QAEXH@Z
_TEXT	SEGMENT
_bErase$ = 8
_this$ = -4
?Invalidate@CWnd@@QAEXH@Z PROC NEAR			; CWnd::Invalidate, COMDAT

; 126  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _bErase$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00013	52		 push	 edx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?Invalidate@CWnd@@QAEXH@Z ENDP				; CWnd::Invalidate
_TEXT	ENDS
EXTRN	?Default@CWnd@@IAEJXZ:NEAR			; CWnd::Default
;	COMDAT ?OnActivateApp@CWnd@@IAEXHPAUHTASK__@@@Z
_TEXT	SEGMENT
_this$ = -4
?OnActivateApp@CWnd@@IAEXHPAUHTASK__@@@Z PROC NEAR	; CWnd::OnActivateApp, COMDAT

; 324  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?OnActivateApp@CWnd@@IAEXHPAUHTASK__@@@Z ENDP		; CWnd::OnActivateApp
_TEXT	ENDS
;	COMDAT ?OnClose@CWnd@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4
?OnClose@CWnd@@IAEXXZ PROC NEAR				; CWnd::OnClose, COMDAT

; 332  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?OnClose@CWnd@@IAEXXZ ENDP				; CWnd::OnClose
_TEXT	ENDS
;	COMDAT ?OnSysCommand@CWnd@@IAEXIJ@Z
_TEXT	SEGMENT
_this$ = -4
?OnSysCommand@CWnd@@IAEXIJ@Z PROC NEAR			; CWnd::OnSysCommand, COMDAT

; 418  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?OnSysCommand@CWnd@@IAEXIJ@Z ENDP			; CWnd::OnSysCommand
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT
_this$ = -4
??BMemID@@QBEGXZ PROC NEAR				; MemID::operator unsigned short, COMDAT

; 93   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : 		return handle;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 00	 mov	 ax, WORD PTR [eax]

; 95   : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??BMemID@@QBEGXZ ENDP					; MemID::operator unsigned short
_TEXT	ENDS
PUBLIC	?IsValid@MemID@@QBEHXZ				; MemID::IsValid
EXTRN	?GetMemType@MemID@@QBE?AW4MemType@@XZ:NEAR	; MemID::GetMemType
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsObject@ObjectID@@QBEHXZ PROC NEAR			; ObjectID::IsObject, COMDAT

; 247  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 248  : 		return IsValid() && GetMemType() == MemObject;

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?IsValid@MemID@@QBEHXZ	; MemID::IsValid
  00011	85 c0		 test	 eax, eax
  00013	74 16		 je	 SHORT $L176253
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?GetMemType@MemID@@QBE?AW4MemType@@XZ ; MemID::GetMemType
  0001d	83 f8 34	 cmp	 eax, 52			; 00000034H
  00020	75 09		 jne	 SHORT $L176253
  00022	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR -8+[ebp], 1
  00029	eb 07		 jmp	 SHORT $L176254
$L176253:
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
$L176254:
  00032	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]

; 249  : 	}

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?IsObject@ObjectID@@QBEHXZ ENDP				; ObjectID::IsObject
_TEXT	ENDS
PUBLIC	?IsValid@MemoryMgr@@QAEHG@Z			; MemoryMgr::IsValid
EXTRN	_memMgr:DWORD
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsValid@MemID@@QBEHXZ PROC NEAR			; MemID::IsValid, COMDAT

; 62   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 		return memMgr->IsValid(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?IsValid@MemoryMgr@@QAEHG@Z ; MemoryMgr::IsValid

; 64   : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?IsValid@MemID@@QBEHXZ ENDP				; MemID::IsValid
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -8
_tempID$ = -4
?IsValid@MemoryMgr@@QAEHG@Z PROC NEAR			; MemoryMgr::IsValid, COMDAT

; 475  : 	inline Bool MemoryMgr::IsValid(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 		unsigned short tempID = (unsigned short)theID;

  00009	66 8b 45 08	 mov	 ax, WORD PTR _theID$[ebp]
  0000d	66 89 45 fc	 mov	 WORD PTR _tempID$[ebp], ax

; 477  : 
; 478  : 		return(
; 479  : 				(tempID)															&&
; 480  : 				(tempID < maxDescriptors)									&&
; 481  : 				(desc[tempID].memInfo.bits.freeDescriptor == False)	&&
; 482  : 				(desc[tempID].memInfo.bits.freeMemory == False)
; 483  : 				);

  00011	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00014	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 58		 je	 SHORT $L176257
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00021	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00027	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  0002d	73 47		 jae	 SHORT $L176257
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _tempID$[ebp]
  00032	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00038	c1 e1 04	 shl	 ecx, 4
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00041	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00044	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  00047	c1 f9 1f	 sar	 ecx, 31			; 0000001fH
  0004a	85 c9		 test	 ecx, ecx
  0004c	75 28		 jne	 SHORT $L176257
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _tempID$[ebp]
  00051	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00057	c1 e2 04	 shl	 edx, 4
  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00060	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00063	c1 e2 14	 shl	 edx, 20			; 00000014H
  00066	c1 fa 1f	 sar	 edx, 31			; 0000001fH
  00069	85 d2		 test	 edx, edx
  0006b	75 09		 jne	 SHORT $L176257
  0006d	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR -12+[ebp], 1
  00074	eb 07		 jmp	 SHORT $L176258
$L176257:
  00076	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR -12+[ebp], 0
$L176258:
  0007d	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]

; 484  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?IsValid@MemoryMgr@@QAEHG@Z ENDP			; MemoryMgr::IsValid
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@G@Z				; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Object@@QAE@G@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT

; 13   : 	CSCI_Object(SOL_Handle h) : ObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@G@Z	; ObjectID::ObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@G@Z ENDP				; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@G@Z			; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4
_h$ = 8
??0ObjectID@@QAE@G@Z PROC NEAR				; ObjectID::ObjectID, COMDAT

; 230  : 	ObjectID(SOL_Handle h) : FakeObjectID(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@G@Z ; FakeObjectID::FakeObjectID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0ObjectID@@QAE@G@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@G@Z				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0FakeObjectID@@QAE@G@Z PROC NEAR			; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0MemID@@QAE@G@Z	; MemID::MemID
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@G@Z ENDP				; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4
_h$ = 8
??0MemID@@QAE@G@Z PROC NEAR				; MemID::MemID, COMDAT

; 23   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 4d 08	 mov	 cx, WORD PTR _h$[ebp]
  0000e	66 89 08	 mov	 WORD PTR [eax], cx

; 24   : 	}

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0MemID@@QAE@G@Z ENDP					; MemID::MemID
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Game@@QAE@G@Z PROC NEAR				; CSCI_Game::CSCI_Game, COMDAT

; 2667 : 	CSCI_Game(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Game@@QAE@G@Z ENDP				; CSCI_Game::CSCI_Game
_TEXT	ENDS
PUBLIC	?GetProperty@ObjectID@@QBEFG@Z			; ObjectID::GetProperty
;	COMDAT ?get_handsLevel@CSCI_Game@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4
?get_handsLevel@CSCI_Game@@QAEFXZ PROC NEAR		; CSCI_Game::get_handsLevel, COMDAT

; 2684 : 	Property get_handsLevel() { return GetProperty ( s_handsLevel ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	68 71 02 00 00	 push	 625			; 00000271H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetProperty@ObjectID@@QBEFG@Z ; ObjectID::GetProperty
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?get_handsLevel@CSCI_Game@@QAEFXZ ENDP			; CSCI_Game::get_handsLevel
_TEXT	ENDS
PUBLIC	?GetProperty@Object@@QAEFG@Z			; Object::GetProperty
PUBLIC	??CFakeObjectID@@QBEPAUObject@@XZ		; FakeObjectID::operator->
PUBLIC	?AssureValid@ObjectID@@QBEXXZ			; ObjectID::AssureValid
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT
_this$ = -4
_selector$ = 8
?GetProperty@ObjectID@@QBEFG@Z PROC NEAR		; ObjectID::GetProperty, COMDAT

; 290  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 291  : 		//	get a property given a selector
; 292  : 		AssureValid();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?AssureValid@ObjectID@@QBEXXZ ; ObjectID::AssureValid

; 293  : 		return (*this)->GetProperty(selector);

  0000f	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??CFakeObjectID@@QBEPAUObject@@XZ ; FakeObjectID::operator->
  0001c	8b c8		 mov	 ecx, eax
  0001e	e8 00 00 00 00	 call	 ?GetProperty@Object@@QAEFG@Z ; Object::GetProperty

; 294  : 	}

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetProperty@ObjectID@@QBEFG@Z ENDP			; ObjectID::GetProperty
_TEXT	ENDS
PUBLIC	?GetPropAddrCheck@Object@@QAEPAFG@Z		; Object::GetPropAddrCheck
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -4
?GetProperty@Object@@QAEFG@Z PROC NEAR			; Object::GetProperty, COMDAT

; 170  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 171  : 		//	get a property given a selector
; 172  : 		return *GetPropAddrCheck(selector);

  00007	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetPropAddrCheck@Object@@QAEPAFG@Z ; Object::GetPropAddrCheck
  00014	66 8b 00	 mov	 ax, WORD PTR [eax]

; 173  : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?GetProperty@Object@@QAEFG@Z ENDP			; Object::GetProperty
_TEXT	ENDS
PUBLIC	?GetPropAddr@Object@@QAEPAFG@Z			; Object::GetPropAddr
EXTRN	?Fatal@MsgMgr@@QAAXHZZ:NEAR			; MsgMgr::Fatal
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_property$ = -4
?GetPropAddrCheck@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddrCheck, COMDAT

; 153  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 154  : 		//	get a property's address, checking for valid property
; 155  : 		Property* property = GetPropAddr(selector);

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?GetPropAddr@Object@@QAEPAFG@Z ; Object::GetPropAddr
  00016	89 45 fc	 mov	 DWORD PTR _property$[ebp], eax

; 156  : 		if (!property)

  00019	83 7d fc 00	 cmp	 DWORD PTR _property$[ebp], 0
  0001d	75 1b		 jne	 SHORT $L117613

; 157  : 			msgMgr->Fatal(Msg_InvalidProperty, selector);

  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _selector$[ebp]
  00022	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00028	51		 push	 ecx
  00029	6a 29		 push	 41			; 00000029H
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$L117613:

; 158  : 		return property;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _property$[ebp]

; 159  : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?GetPropAddrCheck@Object@@QAEPAFG@Z ENDP		; Object::GetPropAddrCheck
_TEXT	ENDS
PUBLIC	?selectorDict@Object@@QAEPAVSelectorDict@@XZ	; Object::selectorDict
PUBLIC	??AObject@@QAEAAFH@Z				; Object::operator[]
EXTRN	?get@SelectorDict@@QAEHG@Z:NEAR			; SelectorDict::get
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT
_selector$ = 8
_this$ = -8
_index$ = -4
?GetPropAddr@Object@@QAEPAFG@Z PROC NEAR		; Object::GetPropAddr, COMDAT

; 127  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 128  : 		int index = selectorDict()->get ( selector );

  00009	66 8b 45 08	 mov	 ax, WORD PTR _selector$[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?get@SelectorDict@@QAEHG@Z ; SelectorDict::get
  0001d	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 129  : 
; 130  : 		if ( index != -1 && !selectorDict()->script )

  00020	83 7d fc ff	 cmp	 DWORD PTR _index$[ebp], -1
  00024	74 2b		 je	 SHORT $L117604
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  0002e	33 c9		 xor	 ecx, ecx
  00030	66 8b 48 16	 mov	 cx, WORD PTR [eax+22]
  00034	85 c9		 test	 ecx, ecx
  00036	75 19		 jne	 SHORT $L117604

; 131  : 			return &(*this)[selectorDict()->offset]; 

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?selectorDict@Object@@QAEPAVSelectorDict@@XZ ; Object::selectorDict
  00040	33 d2		 xor	 edx, edx
  00042	66 8b 50 14	 mov	 dx, WORD PTR [eax+20]
  00046	52		 push	 edx
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??AObject@@QAEAAFH@Z	; Object::operator[]
  0004f	eb 02		 jmp	 SHORT $L117602
$L117604:

; 132  : 
; 133  : 		return 0;

  00051	33 c0		 xor	 eax, eax
$L117602:

; 134  : 	}

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?GetPropAddr@Object@@QAEPAFG@Z ENDP			; Object::GetPropAddr
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT
_this$ = -4
?selectorDict@Object@@QAEPAVSelectorDict@@XZ PROC NEAR	; Object::selectorDict, COMDAT

; 102  : 	SelectorDict *selectorDict ( void ) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 		return _selectorDict;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 104  : 	};

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?selectorDict@Object@@QAEPAVSelectorDict@@XZ ENDP	; Object::selectorDict
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT
_index$ = 8
_this$ = -4
??AObject@@QAEAAFH@Z PROC NEAR				; Object::operator[], COMDAT

; 117  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 		//	get a reference to a property given the number of the property
; 119  : 		return ((Property*) this)[index];

  00007	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]

; 120  : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??AObject@@QAEAAFH@Z ENDP				; Object::operator[]
_TEXT	ENDS
PUBLIC	??DMemID@@QBEPAXXZ				; MemID::operator*
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT
_this$ = -4
??CFakeObjectID@@QBEPAUObject@@XZ PROC NEAR		; FakeObjectID::operator->, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??DMemID@@QBEPAXXZ	; MemID::operator*
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??CFakeObjectID@@QBEPAUObject@@XZ ENDP			; FakeObjectID::operator->
_TEXT	ENDS
PUBLIC	?GetAddr@MemoryMgr@@QAEPAXG@Z			; MemoryMgr::GetAddr
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4
??DMemID@@QBEPAXXZ PROC NEAR				; MemID::operator*, COMDAT

; 98   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		return memMgr->GetAddr(handle);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0000d	51		 push	 ecx
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _memMgr
  00014	e8 00 00 00 00	 call	 ?GetAddr@MemoryMgr@@QAEPAXG@Z ; MemoryMgr::GetAddr

; 100  : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??DMemID@@QBEPAXXZ ENDP					; MemID::operator*
_TEXT	ENDS
EXTRN	__descPtrTable:BYTE
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT
_theID$ = 8
_this$ = -4
?GetAddr@MemoryMgr@@QAEPAXG@Z PROC NEAR			; MemoryMgr::GetAddr, COMDAT

; 462  : 	inline void* MemoryMgr::GetAddr(SOL_Handle theID) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : //		CheckValid(theID);
; 464  : 		return _descPtrTable[(unsigned int)((unsigned short)theID)];

  00007	8b 45 08	 mov	 eax, DWORD PTR _theID$[ebp]
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR __descPtrTable[eax*4]

; 465  : 	}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?GetAddr@MemoryMgr@@QAEPAXG@Z ENDP			; MemoryMgr::GetAddr
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssureValid@ObjectID@@QBEXXZ PROC NEAR			; ObjectID::AssureValid, COMDAT

; 238  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 239  : 		if (!IsObject())

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?IsObject@ObjectID@@QBEHXZ ; ObjectID::IsObject
  0000f	85 c0		 test	 eax, eax
  00011	75 1e		 jne	 SHORT $L117772

; 240  : 			msgMgr->Fatal(Msg_NotObject, (int) *this);

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ??BMemID@@QBEGXZ	; MemID::operator unsigned short
  0001b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00020	50		 push	 eax
  00021	6a 2f		 push	 47			; 0000002fH
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgMgr@@3PAVMsgMgr@@A ; msgMgr
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?Fatal@MsgMgr@@QAAXHZZ	; MsgMgr::Fatal
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
$L117772:

; 241  : 	}

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?AssureValid@ObjectID@@QBEXXZ ENDP			; ObjectID::AssureValid
_TEXT	ENDS
PUBLIC	??0CSCI_Actor@@QAE@G@Z				; CSCI_Actor::CSCI_Actor
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_WorldObject@@QAE@G@Z PROC NEAR			; CSCI_WorldObject::CSCI_WorldObject, COMDAT

; 4475 : 	CSCI_WorldObject(SOL_Handle h) : CSCI_Actor(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Actor@@QAE@G@Z	; CSCI_Actor::CSCI_Actor
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_WorldObject@@QAE@G@Z ENDP			; CSCI_WorldObject::CSCI_WorldObject
_TEXT	ENDS
PUBLIC	??0CSCI_Prop@@QAE@G@Z				; CSCI_Prop::CSCI_Prop
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Actor@@QAE@G@Z PROC NEAR			; CSCI_Actor::CSCI_Actor, COMDAT

; 1596 : 	CSCI_Actor(SOL_Handle h) : CSCI_Prop(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Prop@@QAE@G@Z	; CSCI_Prop::CSCI_Prop
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Actor@@QAE@G@Z ENDP				; CSCI_Actor::CSCI_Actor
_TEXT	ENDS
PUBLIC	??0CSCI_View@@QAE@G@Z				; CSCI_View::CSCI_View
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Prop@@QAE@G@Z PROC NEAR				; CSCI_Prop::CSCI_Prop, COMDAT

; 1560 : 	CSCI_Prop(SOL_Handle h) : CSCI_View(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_View@@QAE@G@Z	; CSCI_View::CSCI_View
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Prop@@QAE@G@Z ENDP				; CSCI_Prop::CSCI_Prop
_TEXT	ENDS
PUBLIC	??0CSCI_Feature@@QAE@G@Z			; CSCI_Feature::CSCI_Feature
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_View@@QAE@G@Z PROC NEAR				; CSCI_View::CSCI_View, COMDAT

; 1515 : 	CSCI_View(SOL_Handle h) : CSCI_Feature(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Feature@@QAE@G@Z ; CSCI_Feature::CSCI_Feature
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_View@@QAE@G@Z ENDP				; CSCI_View::CSCI_View
_TEXT	ENDS
PUBLIC	??0CSCI_BitMap@@QAE@G@Z				; CSCI_BitMap::CSCI_BitMap
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Feature@@QAE@G@Z PROC NEAR			; CSCI_Feature::CSCI_Feature, COMDAT

; 1437 : 	CSCI_Feature(SOL_Handle h) : CSCI_BitMap(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_BitMap@@QAE@G@Z	; CSCI_BitMap::CSCI_BitMap
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Feature@@QAE@G@Z ENDP				; CSCI_Feature::CSCI_Feature
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@G@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@G@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT

; 1358 : 	CSCI_BitMap(SOL_Handle h) : CSCI_Rectangle(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@G@Z ; CSCI_Rectangle::CSCI_Rectangle
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@G@Z ENDP				; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT
_h$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@G@Z PROC NEAR			; CSCI_Rectangle::CSCI_Rectangle, COMDAT

; 517  : 	CSCI_Rectangle(SOL_Handle h) : CSCI_Object(h) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	66 8b 45 08	 mov	 ax, WORD PTR _h$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@G@Z	; CSCI_Object::CSCI_Object
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@G@Z ENDP				; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
;	COMDAT ?GetGlobal@PMachine@@QAEFH@Z
_TEXT	SEGMENT
_nGlobal$ = 8
_this$ = -4
?GetGlobal@PMachine@@QAEFH@Z PROC NEAR			; PMachine::GetGlobal, COMDAT

; 74   : 	Property	GetGlobal( int nGlobal ) { return GlobalPtr[ nGlobal ]; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0000d	8b 55 08	 mov	 edx, DWORD PTR _nGlobal$[ebp]
  00010	66 8b 04 51	 mov	 ax, WORD PTR [ecx+edx*2]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?GetGlobal@PMachine@@QAEFH@Z ENDP			; PMachine::GetGlobal
_TEXT	ENDS
;	COMDAT ?Next@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Next@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Next, COMDAT

; 275  : 	virtual void Next ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Next@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Next
_TEXT	ENDS
;	COMDAT ?Previous@CSkinWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Previous@CSkinWnd@@UAEXXZ PROC NEAR			; CSkinWnd::Previous, COMDAT

; 276  : 	virtual void Previous ( void ) {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Previous@CSkinWnd@@UAEXXZ ENDP				; CSkinWnd::Previous
_TEXT	ENDS
;	COMDAT ?Spells@CMainPanelWnd@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4
?Spells@CMainPanelWnd@@QAE_NXZ PROC NEAR		; CMainPanelWnd::Spells, COMDAT

; 257  : 	bool Spells() { return !m_pSpell->IsDisabled(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  00010	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00013	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	ff 52 10	 call	 DWORD PTR [edx+16]
  0001e	f7 d8		 neg	 eax
  00020	1b c0		 sbb	 eax, eax
  00022	40		 inc	 eax
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?Spells@CMainPanelWnd@@QAE_NXZ ENDP			; CMainPanelWnd::Spells
_TEXT	ENDS
EXTRN	?SelectTab@CTabDlg@@QAEXH@Z:NEAR		; CTabDlg::SelectTab
;	COMDAT ?SelectTab@CMainPanelWnd@@QAEXH@Z
_TEXT	SEGMENT
_nID$ = 8
_this$ = -4
?SelectTab@CMainPanelWnd@@QAEXH@Z PROC NEAR		; CMainPanelWnd::SelectTab, COMDAT

; 261  :     void SelectTab( int nID )                   { if (m_pTabDlg) m_pTabDlg->SelectTab( nID ); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 12		 je	 SHORT $L151675
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _nID$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 8a b0 00 00
	00		 mov	 ecx, DWORD PTR [edx+176]
  00020	e8 00 00 00 00	 call	 ?SelectTab@CTabDlg@@QAEXH@Z ; CTabDlg::SelectTab
$L151675:
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?SelectTab@CMainPanelWnd@@QAEXH@Z ENDP			; CMainPanelWnd::SelectTab
_TEXT	ENDS
EXTRN	?SelectNextTab@CTabDlg@@QAEXXZ:NEAR		; CTabDlg::SelectNextTab
;	COMDAT ?SelectNextTab@CMainPanelWnd@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?SelectNextTab@CMainPanelWnd@@QAEXXZ PROC NEAR		; CMainPanelWnd::SelectNextTab, COMDAT

; 265  : 	void SelectNextTab()						{ if (m_pTabDlg) m_pTabDlg->SelectNextTab(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 0e		 je	 SHORT $L151687
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 89 b0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+176]
  0001c	e8 00 00 00 00	 call	 ?SelectNextTab@CTabDlg@@QAEXXZ ; CTabDlg::SelectNextTab
$L151687:
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?SelectNextTab@CMainPanelWnd@@QAEXXZ ENDP		; CMainPanelWnd::SelectNextTab
_TEXT	ENDS
EXTRN	?SelectPreviousTab@CTabDlg@@QAEXXZ:NEAR		; CTabDlg::SelectPreviousTab
;	COMDAT ?SelectPreviousTab@CMainPanelWnd@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?SelectPreviousTab@CMainPanelWnd@@QAEXXZ PROC NEAR	; CMainPanelWnd::SelectPreviousTab, COMDAT

; 266  : 	void SelectPreviousTab()					{ if (m_pTabDlg) m_pTabDlg->SelectPreviousTab(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 b0 00 00
	00 00		 cmp	 DWORD PTR [eax+176], 0
  00011	74 0e		 je	 SHORT $L151690
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 89 b0 00 00
	00		 mov	 ecx, DWORD PTR [ecx+176]
  0001c	e8 00 00 00 00	 call	 ?SelectPreviousTab@CTabDlg@@QAEXXZ ; CTabDlg::SelectPreviousTab
$L151690:
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?SelectPreviousTab@CMainPanelWnd@@QAEXXZ ENDP		; CMainPanelWnd::SelectPreviousTab
_TEXT	ENDS
PUBLIC	??0ObjectID@@QAE@ABV0@@Z			; ObjectID::ObjectID
;	COMDAT ??0CSCI_Object@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Object@@QAE@ABV0@@Z PROC NEAR			; CSCI_Object::CSCI_Object, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0ObjectID@@QAE@ABV0@@Z ; ObjectID::ObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Object@@QAE@ABV0@@Z ENDP			; CSCI_Object::CSCI_Object
_TEXT	ENDS
PUBLIC	??0FakeObjectID@@QAE@ABVMemID@@@Z		; FakeObjectID::FakeObjectID
;	COMDAT ??0ObjectID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4
_id$ = 8
??0ObjectID@@QAE@ABV0@@Z PROC NEAR			; ObjectID::ObjectID, COMDAT

; 229  : 	ObjectID(const ObjectID& id) : FakeObjectID((MemID&) id) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0FakeObjectID@@QAE@ABVMemID@@@Z ; FakeObjectID::FakeObjectID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0ObjectID@@QAE@ABV0@@Z ENDP				; ObjectID::ObjectID
_TEXT	ENDS
PUBLIC	??0MemID@@QAE@ABV0@@Z				; MemID::MemID
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT
_id$ = 8
_this$ = -4
??0FakeObjectID@@QAE@ABVMemID@@@Z PROC NEAR		; FakeObjectID::FakeObjectID, COMDAT

; 224  : FakeTemplateID(FakeObjectID, Object, MemObject)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0MemID@@QAE@ABV0@@Z	; MemID::MemID
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0FakeObjectID@@QAE@ABVMemID@@@Z ENDP			; FakeObjectID::FakeObjectID
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4
_id$ = 8
??0MemID@@QAE@ABV0@@Z PROC NEAR				; MemID::MemID, COMDAT

; 19   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  0000d	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00010	66 89 10	 mov	 WORD PTR [eax], dx

; 20   : 	}

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0MemID@@QAE@ABV0@@Z ENDP				; MemID::MemID
_TEXT	ENDS
PUBLIC	??_7CSplashDlg@@6B@				; CSplashDlg::`vftable'
PUBLIC	??_GCSplashDlg@@UAEPAXI@Z			; CSplashDlg::`scalar deleting destructor'
PUBLIC	??_ECSplashDlg@@UAEPAXI@Z			; CSplashDlg::`vector deleting destructor'
EXTRN	?GetMessageMap@CSplashDlg@@MBEPBUAFX_MSGMAP@@XZ:NEAR ; CSplashDlg::GetMessageMap
;	COMDAT ??_7CSplashDlg@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\LogInDlg.hpp
CONST	SEGMENT
??_7CSplashDlg@@6B@ DD FLAT:?GetRuntimeClass@CWnd@@UBEPAUCRuntimeClass@@XZ ; CSplashDlg::`vftable'
	DD	FLAT:??_ECSplashDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSplashDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CSkinWnd@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetProcessEvents@CSkinWnd@@MAE_NXZ
	DD	FLAT:?CloseSelf@CSkinWnd@@UAEX_N@Z
	DD	FLAT:?Disable@CSkinWnd@@UAEXXZ
	DD	FLAT:?Enable@CSkinWnd@@UAEXXZ
	DD	FLAT:?EnableGameModal@CSkinWnd@@UAEXHPAH@Z
	DD	FLAT:?DisableGameModal@CSkinWnd@@UAEXHPAH_N@Z
	DD	FLAT:?MakeSkinCtrl@CSkinWnd@@UAEPAVCSkinCtrl@@VCSkinObj@@@Z
	DD	FLAT:?ProcessRefreshList@CSkinWnd@@UAEHXZ
	DD	FLAT:?UpdateTracking@CSkinWnd@@UAEXXZ
	DD	FLAT:?Next@CSkinWnd@@UAEXXZ
	DD	FLAT:?Previous@CSkinWnd@@UAEXXZ
CONST	ENDS
;	COMDAT ??0CSplashDlg@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CSplashDlg@@QAE@XZ PROC NEAR				; CSplashDlg::CSplashDlg, COMDAT

; 46   : 	CSplashDlg() {};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CSkinWnd@@QAE@XZ	; CSkinWnd::CSkinWnd
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSplashDlg@@6B@ ; CSplashDlg::`vftable'
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CSplashDlg@@QAE@XZ ENDP				; CSplashDlg::CSplashDlg
_TEXT	ENDS
PUBLIC	??1CSplashDlg@@UAE@XZ				; CSplashDlg::~CSplashDlg
;	COMDAT ??_GCSplashDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSplashDlg@@UAEPAXI@Z PROC NEAR			; CSplashDlg::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSplashDlg@@UAE@XZ	; CSplashDlg::~CSplashDlg
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L154155
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L154155:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCSplashDlg@@UAEPAXI@Z ENDP				; CSplashDlg::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSplashDlg@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSplashDlg@@UAE@XZ PROC NEAR				; CSplashDlg::~CSplashDlg, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinWnd@@UAE@XZ	; CSkinWnd::~CSkinWnd
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSplashDlg@@UAE@XZ ENDP				; CSplashDlg::~CSplashDlg
_TEXT	ENDS
PUBLIC	??0CSCI_Rectangle@@QAE@ABV0@@Z			; CSCI_Rectangle::CSCI_Rectangle
;	COMDAT ??0CSCI_BitMap@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_BitMap@@QAE@ABV0@@Z PROC NEAR			; CSCI_BitMap::CSCI_BitMap, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Rectangle@@QAE@ABV0@@Z ; CSCI_Rectangle::CSCI_Rectangle
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_BitMap@@QAE@ABV0@@Z ENDP			; CSCI_BitMap::CSCI_BitMap
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSCI_Rectangle@@QAE@ABV0@@Z PROC NEAR		; CSCI_Rectangle::CSCI_Rectangle, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ??0CSCI_Object@@QAE@ABV0@@Z ; CSCI_Object::CSCI_Object
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0CSCI_Rectangle@@QAE@ABV0@@Z ENDP			; CSCI_Rectangle::CSCI_Rectangle
_TEXT	ENDS
;	COMDAT ?get_AltEnter@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?get_AltEnter@CToonSettings@@QAEHXZ PROC NEAR		; CToonSettings::get_AltEnter, COMDAT

; 78   : 	BOOL	get_AltEnter() { return m_bAltEnter; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 5c	 mov	 eax, DWORD PTR [eax+92]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?get_AltEnter@CToonSettings@@QAEHXZ ENDP		; CToonSettings::get_AltEnter
_TEXT	ENDS
;	COMDAT ?get_TabDisplay@CToonSettings@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?get_TabDisplay@CToonSettings@@QAEHXZ PROC NEAR		; CToonSettings::get_TabDisplay, COMDAT

; 81   : 	BOOL	get_TabDisplay() { return m_bTabDisplay; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 40	 mov	 eax, DWORD PTR [eax+64]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?get_TabDisplay@CToonSettings@@QAEHXZ ENDP		; CToonSettings::get_TabDisplay
_TEXT	ENDS
;	COMDAT ?SetLogOff@CToonSettings@@QAEXH@Z
_TEXT	SEGMENT
_bLog$ = 8
_this$ = -4
?SetLogOff@CToonSettings@@QAEXH@Z PROC NEAR		; CToonSettings::SetLogOff, COMDAT

; 115  :     void	SetLogOff( BOOL bLog ) { m_bLogOff = bLog; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _bLog$[ebp]
  0000d	89 48 44	 mov	 DWORD PTR [eax+68], ecx
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?SetLogOff@CToonSettings@@QAEXH@Z ENDP			; CToonSettings::SetLogOff
_TEXT	ENDS
END
