	TITLE	\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinobj.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CenterPoint@CRect@@QBE?AVCPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OffsetRect@CRect@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBitmap@CBitmap@@QAEHPAUtagBITMAP@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateCompatibleDC@CDC@@QAEHPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Ratio@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
PUBLIC	??0CSkinObj@@QAE@PAUISkinObjectDisp@@@Z		; CSkinObj::CSkinObj
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinobj.cpp
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
_TEXT	SEGMENT
_obj$ = 8
_this$ = -4
??0CSkinObj@@QAE@PAUISkinObjectDisp@@@Z PROC NEAR	; CSkinObj::CSkinObj

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'

; 20   : 	p_obj = obj;

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00016	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 21   : }

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CSkinObj@@QAE@PAUISkinObjectDisp@@@Z ENDP		; CSkinObj::CSkinObj
_TEXT	ENDS
PUBLIC	??1CSkinObj@@UAE@XZ				; CSkinObj::~CSkinObj
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L113283
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L113283:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0CSkinObj@@QAE@PAUIDispatch@@@Z		; CSkinObj::CSkinObj
PUBLIC	??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::~_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
PUBLIC	??B?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator ISkinObjectDisp *
PUBLIC	??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
_TEXT	SEGMENT
_disp$ = 8
_this$ = -8
_ptr$ = -4
??0CSkinObj@@QAE@PAUIDispatch@@@Z PROC NEAR		; CSkinObj::CSkinObj

; 24   : {

  00022	55		 push	 ebp
  00023	8b ec		 mov	 ebp, esp
  00025	83 ec 08	 sub	 esp, 8
  00028	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'

; 25   : 	ISkinObjectDispPtr ptr ( disp );

  00034	8d 4d 08	 lea	 ecx, DWORD PTR _disp$[ebp]
  00037	51		 push	 ecx
  00038	8d 4d fc	 lea	 ecx, DWORD PTR _ptr$[ebp]
  0003b	e8 00 00 00 00	 call	 ??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >

; 26   : 	p_obj = ptr;

  00040	8d 4d fc	 lea	 ecx, DWORD PTR _ptr$[ebp]
  00043	e8 00 00 00 00	 call	 ??B?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator ISkinObjectDisp *
  00048	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 27   : }

  0004e	8d 4d fc	 lea	 ecx, DWORD PTR _ptr$[ebp]
  00051	e8 00 00 00 00	 call	 ??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::~_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
  00056	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
??0CSkinObj@@QAE@PAUIDispatch@@@Z ENDP			; CSkinObj::CSkinObj
_TEXT	ENDS
PUBLIC	??0CSkinObj@@QAE@XZ				; CSkinObj::CSkinObj
_TEXT	SEGMENT
_this$ = -4
??0CSkinObj@@QAE@XZ PROC NEAR				; CSkinObj::CSkinObj

; 30   : {

  0005f	55		 push	 ebp
  00060	8b ec		 mov	 ebp, esp
  00062	51		 push	 ecx
  00063	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'

; 31   : 	p_obj = NULL;

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 32   : }

  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
??0CSkinObj@@QAE@XZ ENDP				; CSkinObj::CSkinObj
_this$ = -4
??1CSkinObj@@UAE@XZ PROC NEAR				; CSkinObj::~CSkinObj

; 35   : {

  00080	55		 push	 ebp
  00081	8b ec		 mov	 ebp, esp
  00083	51		 push	 ecx
  00084	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'

; 36   : 	p_obj = NULL;

  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 37   : }

  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
??1CSkinObj@@UAE@XZ ENDP				; CSkinObj::~CSkinObj
_TEXT	ENDS
PUBLIC	?AddRef@CSkinObj@@QAEHXZ			; CSkinObj::AddRef
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
xdata$x	SEGMENT
$T118678 DD	019930520H
	DD	01H
	DD	FLAT:$T118681
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118681 DD	0ffffffffH
	DD	00H
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -28
__$EHRec$ = -12
?AddRef@CSkinObj@@QAEHXZ PROC NEAR			; CSkinObj::AddRef

; 40   : {

  0009e	55		 push	 ebp
  0009f	8b ec		 mov	 ebp, esp
  000a1	6a ff		 push	 -1
  000a3	68 00 00 00 00	 push	 $L118679
  000a8	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  000ae	50		 push	 eax
  000af	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  000b6	83 ec 10	 sub	 esp, 16			; 00000010H
  000b9	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 	return 0;

  000bc	33 c0		 xor	 eax, eax

; 47   : }

  000be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L118679:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118678
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddRef@CSkinObj@@QAEHXZ ENDP				; CSkinObj::AddRef
PUBLIC	?DecRef@CSkinObj@@QAEHXZ			; CSkinObj::DecRef
_TEXT	SEGMENT
_this$ = -4
?DecRef@CSkinObj@@QAEHXZ PROC NEAR			; CSkinObj::DecRef

; 50   : {

  000cc	55		 push	 ebp
  000cd	8b ec		 mov	 ebp, esp
  000cf	51		 push	 ecx
  000d0	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 51   : 	if ( NULL == p_obj ) {

  000d3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d6	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000da	75 05		 jne	 SHORT $L113481

; 52   : 		return -1;

  000dc	83 c8 ff	 or	 eax, -1
  000df	eb 12		 jmp	 SHORT $L113480
$L113481:

; 54   : 
; 55   : 	return p_obj->Release();

  000e1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000e7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ea	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ed	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ef	52		 push	 edx
  000f0	ff 50 08	 call	 DWORD PTR [eax+8]
$L113480:

; 56   : }

  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c3		 ret	 0
?DecRef@CSkinObj@@QAEHXZ ENDP				; CSkinObj::DecRef
_TEXT	ENDS
PUBLIC	?FindObject@CSkinObj@@QAE?AV1@PBD@Z		; CSkinObj::FindObject
PUBLIC	?IsValid@CSkinObj@@QAEHXZ			; CSkinObj::IsValid
PUBLIC	??1CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::~CComBSTR
PUBLIC	??BCComBSTR@ATL@@QBEPAGXZ			; ATL::CComBSTR::operator unsigned short *
PUBLIC	??0CComBSTR@ATL@@QAE@PBD@Z			; ATL::CComBSTR::CComBSTR
PUBLIC	??BCSkinObj@@QAEPAPAUISkinObjectDisp@@XZ	; CSkinObj::operator ISkinObjectDisp * *
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
xdata$x	SEGMENT
$T118691 DD	019930520H
	DD	03H
	DD	FLAT:$T118693
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118693 DD	0ffffffffH
	DD	FLAT:$L118685
	DD	00H
	DD	FLAT:$L118688
	DD	01H
	DD	FLAT:$L118689
xdata$x	ENDS
_TEXT	SEGMENT
_lpszName$ = 12
___$ReturnUdt$ = 8
_this$ = -32
_retVal$ = -20
_name$ = -24
$T118686 = -28
__$EHRec$ = -12
?FindObject@CSkinObj@@QAE?AV1@PBD@Z PROC NEAR		; CSkinObj::FindObject

; 60   : {

  000f7	55		 push	 ebp
  000f8	8b ec		 mov	 ebp, esp
  000fa	6a ff		 push	 -1
  000fc	68 00 00 00 00	 push	 $L118692
  00101	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00107	50		 push	 eax
  00108	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0010f	83 ec 14	 sub	 esp, 20			; 00000014H
  00112	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
  00115	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T118686[ebp], 0

; 61   : 	if ( !IsValid() ) {

  0011c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00124	85 c0		 test	 eax, eax
  00126	75 15		 jne	 SHORT $L113487

; 62   : 		return CSkinObj();

  00128	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0012b	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  00130	8b 45 e4	 mov	 eax, DWORD PTR $T118686[ebp]
  00133	0c 01		 or	 al, 1
  00135	89 45 e4	 mov	 DWORD PTR $T118686[ebp], eax
  00138	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0013b	eb 7d		 jmp	 SHORT $L113486
$L113487:

; 64   : 
; 65   : 	CSkinObj retVal;

  0013d	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00140	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  00145	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 66   : 	CComBSTR name ( lpszName );

  0014c	8b 4d 0c	 mov	 ecx, DWORD PTR _lpszName$[ebp]
  0014f	51		 push	 ecx
  00150	8d 4d e8	 lea	 ecx, DWORD PTR _name$[ebp]
  00153	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR
  00158	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 67   : 	p_obj->FindObject ( name, retVal );

  0015c	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  0015f	e8 00 00 00 00	 call	 ??BCSkinObj@@QAEPAPAUISkinObjectDisp@@XZ ; CSkinObj::operator ISkinObjectDisp * *
  00164	50		 push	 eax
  00165	8d 4d e8	 lea	 ecx, DWORD PTR _name$[ebp]
  00168	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPAGXZ ; ATL::CComBSTR::operator unsigned short *
  0016d	50		 push	 eax
  0016e	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00171	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00174	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0017a	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0017c	50		 push	 eax
  0017d	ff 91 ac 00 00
	00		 call	 DWORD PTR [ecx+172]

; 68   : 	retVal.DecRef();

  00183	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00186	e8 00 00 00 00	 call	 ?DecRef@CSkinObj@@QAEHXZ ; CSkinObj::DecRef

; 69   : 
; 70   : 	return retVal;

  0018b	8d 55 ec	 lea	 edx, DWORD PTR _retVal$[ebp]
  0018e	52		 push	 edx
  0018f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00192	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00197	8b 45 e4	 mov	 eax, DWORD PTR $T118686[ebp]
  0019a	0c 01		 or	 al, 1
  0019c	89 45 e4	 mov	 DWORD PTR $T118686[ebp], eax
  0019f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001a3	8d 4d e8	 lea	 ecx, DWORD PTR _name$[ebp]
  001a6	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  001ab	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001af	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  001b2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  001b7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L113486:

; 71   : }

  001ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001c4	8b e5		 mov	 esp, ebp
  001c6	5d		 pop	 ebp
  001c7	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L118685:
  0000a	8b 45 e4	 mov	 eax, DWORD PTR $T118686[ebp]
  0000d	83 e0 01	 and	 eax, 1
  00010	85 c0		 test	 eax, eax
  00012	0f 84 08 00 00
	00		 je	 $L118687
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001b	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L118687:
  00020	c3		 ret	 0
$L118688:
  00021	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00024	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00029	c3		 ret	 0
$L118689:
  0002a	8d 4d e8	 lea	 ecx, DWORD PTR _name$[ebp]
  0002d	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00032	c3		 ret	 0
$L118692:
  00033	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118691
  00038	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?FindObject@CSkinObj@@QAE?AV1@PBD@Z ENDP		; CSkinObj::FindObject
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?IsValid@CSkinObj@@QAEHXZ PROC NEAR			; CSkinObj::IsValid

; 75   : {

  001ca	55		 push	 ebp
  001cb	8b ec		 mov	 ebp, esp
  001cd	51		 push	 ecx
  001ce	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 76   : 	return (p_obj != NULL);

  001d1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001d4	33 c9		 xor	 ecx, ecx
  001d6	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  001da	0f 95 c1	 setne	 cl
  001dd	8b c1		 mov	 eax, ecx

; 77   : }

  001df	8b e5		 mov	 esp, ebp
  001e1	5d		 pop	 ebp
  001e2	c3		 ret	 0
?IsValid@CSkinObj@@QAEHXZ ENDP				; CSkinObj::IsValid
_TEXT	ENDS
PUBLIC	?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z		; CSkinObj::GetRect
_TEXT	SEGMENT
_rect$ = 8
_this$ = -4
?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z PROC NEAR		; CSkinObj::GetRect

; 81   : {

  001e3	55		 push	 ebp
  001e4	8b ec		 mov	 ebp, esp
  001e6	51		 push	 ecx
  001e7	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	if ( !IsValid() ) {

  001ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ed	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  001f2	85 c0		 test	 eax, eax
  001f4	75 07		 jne	 SHORT $L113502

; 83   : 		return FALSE;

  001f6	33 c0		 xor	 eax, eax
  001f8	e9 95 00 00 00	 jmp	 $L113501
$L113502:

; 85   : 
; 86   : 	p_obj->get_Left ( &rect->left );

  001fd	8b 45 08	 mov	 eax, DWORD PTR _rect$[ebp]
  00200	50		 push	 eax
  00201	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00204	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00207	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0020a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0020d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0020f	52		 push	 edx
  00210	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 87   : 	p_obj->get_Top ( &rect->top );

  00216	8b 4d 08	 mov	 ecx, DWORD PTR _rect$[ebp]
  00219	83 c1 04	 add	 ecx, 4
  0021c	51		 push	 ecx
  0021d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00220	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00223	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00226	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00229	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0022b	50		 push	 eax
  0022c	ff 91 b8 00 00
	00		 call	 DWORD PTR [ecx+184]

; 88   : 	p_obj->get_Width ( &rect->right );

  00232	8b 55 08	 mov	 edx, DWORD PTR _rect$[ebp]
  00235	83 c2 08	 add	 edx, 8
  00238	52		 push	 edx
  00239	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0023c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0023f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00242	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00245	8b 10		 mov	 edx, DWORD PTR [eax]
  00247	51		 push	 ecx
  00248	ff 92 c0 00 00
	00		 call	 DWORD PTR [edx+192]

; 89   : 	p_obj->get_Height ( &rect->bottom );

  0024e	8b 45 08	 mov	 eax, DWORD PTR _rect$[ebp]
  00251	83 c0 0c	 add	 eax, 12			; 0000000cH
  00254	50		 push	 eax
  00255	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00258	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0025b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0025e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00261	8b 01		 mov	 eax, DWORD PTR [ecx]
  00263	52		 push	 edx
  00264	ff 90 c8 00 00
	00		 call	 DWORD PTR [eax+200]

; 90   : 
; 91   : 	// adjust bottom and right because they are currently height and width
; 92   : 	rect->bottom += rect->top;

  0026a	8b 4d 08	 mov	 ecx, DWORD PTR _rect$[ebp]
  0026d	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00270	8b 45 08	 mov	 eax, DWORD PTR _rect$[ebp]
  00273	03 50 04	 add	 edx, DWORD PTR [eax+4]
  00276	8b 4d 08	 mov	 ecx, DWORD PTR _rect$[ebp]
  00279	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 93   : 	rect->right += rect->left;

  0027c	8b 55 08	 mov	 edx, DWORD PTR _rect$[ebp]
  0027f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00282	8b 4d 08	 mov	 ecx, DWORD PTR _rect$[ebp]
  00285	03 01		 add	 eax, DWORD PTR [ecx]
  00287	8b 55 08	 mov	 edx, DWORD PTR _rect$[ebp]
  0028a	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 94   : 
; 95   : 	return TRUE;

  0028d	b8 01 00 00 00	 mov	 eax, 1
$L113501:

; 96   : }

  00292	8b e5		 mov	 esp, ebp
  00294	5d		 pop	 ebp
  00295	c2 04 00	 ret	 4
?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ENDP		; CSkinObj::GetRect
_TEXT	ENDS
PUBLIC	?MoveTo@CSkinObj@@QAEHHH@Z			; CSkinObj::MoveTo
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_this$ = -4
?MoveTo@CSkinObj@@QAEHHH@Z PROC NEAR			; CSkinObj::MoveTo

; 100  : {

  00298	55		 push	 ebp
  00299	8b ec		 mov	 ebp, esp
  0029b	51		 push	 ecx
  0029c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 101  : 	if ( !IsValid() ) {

  0029f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002a2	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  002a7	85 c0		 test	 eax, eax
  002a9	75 04		 jne	 SHORT $L113508

; 102  : 		return FALSE;

  002ab	33 c0		 xor	 eax, eax
  002ad	eb 37		 jmp	 SHORT $L113507
$L113508:

; 104  : 
; 105  : 	p_obj->put_Left ( x );

  002af	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  002b2	50		 push	 eax
  002b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  002b9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  002bc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  002bf	8b 01		 mov	 eax, DWORD PTR [ecx]
  002c1	52		 push	 edx
  002c2	ff 90 b4 00 00
	00		 call	 DWORD PTR [eax+180]

; 106  : 	p_obj->put_Top ( y );

  002c8	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  002cb	51		 push	 ecx
  002cc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002cf	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  002d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  002d8	8b 0a		 mov	 ecx, DWORD PTR [edx]
  002da	50		 push	 eax
  002db	ff 91 bc 00 00
	00		 call	 DWORD PTR [ecx+188]

; 107  : 
; 108  : 	return TRUE;

  002e1	b8 01 00 00 00	 mov	 eax, 1
$L113507:

; 109  : }

  002e6	8b e5		 mov	 esp, ebp
  002e8	5d		 pop	 ebp
  002e9	c2 08 00	 ret	 8
?MoveTo@CSkinObj@@QAEHHH@Z ENDP				; CSkinObj::MoveTo
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	??BCRect@@QAEPAUtagRECT@@XZ			; CRect::operator tagRECT *
PUBLIC	?MoveTo@CSkinObj@@QAEHV1@@Z			; CSkinObj::MoveTo
xdata$x	SEGMENT
$T118703 DD	019930520H
	DD	01H
	DD	FLAT:$T118705
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118705 DD	0ffffffffH
	DD	FLAT:$L118701
xdata$x	ENDS
_TEXT	SEGMENT
_obj$ = 8
_this$ = -40
_objRect$ = -28
$T118699 = -32
$T118700 = -36
__$EHRec$ = -12
?MoveTo@CSkinObj@@QAEHV1@@Z PROC NEAR			; CSkinObj::MoveTo

; 113  : {

  002ec	55		 push	 ebp
  002ed	8b ec		 mov	 ebp, esp
  002ef	6a ff		 push	 -1
  002f1	68 00 00 00 00	 push	 $L118704
  002f6	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  002fc	50		 push	 eax
  002fd	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00304	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00307	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx
  0030a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 114  : 	CRect objRect;

  00311	8d 4d e4	 lea	 ecx, DWORD PTR _objRect$[ebp]
  00314	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 115  : 	
; 116  : 	if ( FALSE == obj.GetRect ( objRect ) ) {

  00319	8d 4d e4	 lea	 ecx, DWORD PTR _objRect$[ebp]
  0031c	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00321	50		 push	 eax
  00322	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00325	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect
  0032a	85 c0		 test	 eax, eax
  0032c	75 1b		 jne	 SHORT $L113514

; 117  : 		return FALSE;

  0032e	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T118699[ebp], 0
  00335	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0033c	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  0033f	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00344	8b 45 e0	 mov	 eax, DWORD PTR $T118699[ebp]
  00347	eb 25		 jmp	 SHORT $L113512
$L113514:

; 119  : 
; 120  : 	return MoveTo ( objRect.left, objRect.top );

  00349	8b 45 e8	 mov	 eax, DWORD PTR _objRect$[ebp+4]
  0034c	50		 push	 eax
  0034d	8b 4d e4	 mov	 ecx, DWORD PTR _objRect$[ebp]
  00350	51		 push	 ecx
  00351	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00354	e8 00 00 00 00	 call	 ?MoveTo@CSkinObj@@QAEHHH@Z ; CSkinObj::MoveTo
  00359	89 45 dc	 mov	 DWORD PTR $T118700[ebp], eax
  0035c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00363	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00366	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0036b	8b 45 dc	 mov	 eax, DWORD PTR $T118700[ebp]
$L113512:

; 121  : }

  0036e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00371	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00378	8b e5		 mov	 esp, ebp
  0037a	5d		 pop	 ebp
  0037b	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L118701:
  0003d	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00040	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00045	c3		 ret	 0
$L118704:
  00046	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118703
  0004b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?MoveTo@CSkinObj@@QAEHV1@@Z ENDP			; CSkinObj::MoveTo
PUBLIC	??0CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::CComBSTR
PUBLIC	?GetName@CSkinObj@@QAE?AVCString@@XZ		; CSkinObj::GetName
PUBLIC	??ICComBSTR@ATL@@QAEPAPAGXZ			; ATL::CComBSTR::operator&
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
EXTRN	??0CString@@QAE@PBG@Z:NEAR			; CString::CString
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
xdata$x	SEGMENT
$T118712 DD	019930520H
	DD	02H
	DD	FLAT:$T118714
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118714 DD	0ffffffffH
	DD	FLAT:$L118707
	DD	00H
	DD	FLAT:$L118710
xdata$x	ENDS
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -24
_className$ = -16
$T118708 = -20
__$EHRec$ = -12
?GetName@CSkinObj@@QAE?AVCString@@XZ PROC NEAR		; CSkinObj::GetName

; 125  : {

  0037e	55		 push	 ebp
  0037f	8b ec		 mov	 ebp, esp
  00381	6a ff		 push	 -1
  00383	68 00 00 00 00	 push	 $L118713
  00388	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0038e	50		 push	 eax
  0038f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00396	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00399	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  0039c	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T118708[ebp], 0

; 126  : 	if ( !IsValid() ) {

  003a3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  003a6	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  003ab	85 c0		 test	 eax, eax
  003ad	75 15		 jne	 SHORT $L113522

; 127  : 		return CString();

  003af	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  003b2	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  003b7	8b 45 ec	 mov	 eax, DWORD PTR $T118708[ebp]
  003ba	0c 01		 or	 al, 1
  003bc	89 45 ec	 mov	 DWORD PTR $T118708[ebp], eax
  003bf	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  003c2	eb 56		 jmp	 SHORT $L113521
$L113522:

; 129  : 
; 130  : 	CComBSTR className;

  003c4	8d 4d f0	 lea	 ecx, DWORD PTR _className$[ebp]
  003c7	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR
  003cc	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 131  : 	p_obj->get_Class(&className);

  003d3	8d 4d f0	 lea	 ecx, DWORD PTR _className$[ebp]
  003d6	e8 00 00 00 00	 call	 ??ICComBSTR@ATL@@QAEPAPAGXZ ; ATL::CComBSTR::operator&
  003db	50		 push	 eax
  003dc	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  003df	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  003e2	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  003e5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003e8	8b 01		 mov	 eax, DWORD PTR [ecx]
  003ea	52		 push	 edx
  003eb	ff 90 90 00 00
	00		 call	 DWORD PTR [eax+144]

; 132  : 
; 133  : 	return CString ( className );

  003f1	8d 4d f0	 lea	 ecx, DWORD PTR _className$[ebp]
  003f4	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPAGXZ ; ATL::CComBSTR::operator unsigned short *
  003f9	50		 push	 eax
  003fa	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  003fd	e8 00 00 00 00	 call	 ??0CString@@QAE@PBG@Z	; CString::CString
  00402	8b 4d ec	 mov	 ecx, DWORD PTR $T118708[ebp]
  00405	83 c9 01	 or	 ecx, 1
  00408	89 4d ec	 mov	 DWORD PTR $T118708[ebp], ecx
  0040b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0040f	8d 4d f0	 lea	 ecx, DWORD PTR _className$[ebp]
  00412	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00417	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L113521:

; 134  : }

  0041a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0041d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00424	8b e5		 mov	 esp, ebp
  00426	5d		 pop	 ebp
  00427	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118707:
  00050	8b 45 ec	 mov	 eax, DWORD PTR $T118708[ebp]
  00053	83 e0 01	 and	 eax, 1
  00056	85 c0		 test	 eax, eax
  00058	0f 84 08 00 00
	00		 je	 $L118709
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00061	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L118709:
  00066	c3		 ret	 0
$L118710:
  00067	8d 4d f0	 lea	 ecx, DWORD PTR _className$[ebp]
  0006a	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  0006f	c3		 ret	 0
$L118713:
  00070	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118712
  00075	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetName@CSkinObj@@QAE?AVCString@@XZ ENDP		; CSkinObj::GetName
PUBLIC	?SetName@CSkinObj@@QAEHPBD@Z			; CSkinObj::SetName
xdata$x	SEGMENT
$T118719 DD	019930520H
	DD	01H
	DD	FLAT:$T118721
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118721 DD	0ffffffffH
	DD	FLAT:$L118717
xdata$x	ENDS
_TEXT	SEGMENT
_lpszName$ = 8
_this$ = -24
_className$ = -16
$T118716 = -20
__$EHRec$ = -12
?SetName@CSkinObj@@QAEHPBD@Z PROC NEAR			; CSkinObj::SetName

; 138  : {

  0042a	55		 push	 ebp
  0042b	8b ec		 mov	 ebp, esp
  0042d	6a ff		 push	 -1
  0042f	68 00 00 00 00	 push	 $L118720
  00434	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0043a	50		 push	 eax
  0043b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00442	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00445	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 139  : 	if ( !IsValid() ) {

  00448	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0044b	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00450	85 c0		 test	 eax, eax
  00452	75 04		 jne	 SHORT $L113530

; 140  : 		return FALSE;

  00454	33 c0		 xor	 eax, eax
  00456	eb 4a		 jmp	 SHORT $L113529
$L113530:

; 142  : 
; 143  : 	CComBSTR className ( lpszName );

  00458	8b 45 08	 mov	 eax, DWORD PTR _lpszName$[ebp]
  0045b	50		 push	 eax
  0045c	8d 4d f0	 lea	 ecx, DWORD PTR _className$[ebp]
  0045f	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR
  00464	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 144  : 	p_obj->put_Class ( className );

  0046b	8d 4d f0	 lea	 ecx, DWORD PTR _className$[ebp]
  0046e	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPAGXZ ; ATL::CComBSTR::operator unsigned short *
  00473	50		 push	 eax
  00474	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00477	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0047a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0047d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00480	8b 01		 mov	 eax, DWORD PTR [ecx]
  00482	52		 push	 edx
  00483	ff 90 94 00 00
	00		 call	 DWORD PTR [eax+148]

; 145  : 
; 146  : 	return TRUE;

  00489	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR $T118716[ebp], 1
  00490	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00497	8d 4d f0	 lea	 ecx, DWORD PTR _className$[ebp]
  0049a	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  0049f	8b 45 ec	 mov	 eax, DWORD PTR $T118716[ebp]
$L113529:

; 147  : }

  004a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  004ac	8b e5		 mov	 esp, ebp
  004ae	5d		 pop	 ebp
  004af	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118717:
  0007a	8d 4d f0	 lea	 ecx, DWORD PTR _className$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00082	c3		 ret	 0
$L118720:
  00083	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118719
  00088	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetName@CSkinObj@@QAEHPBD@Z ENDP			; CSkinObj::SetName
PUBLIC	?SetKind@CSkinObj@@QAEHW4tagSkinKind@@@Z	; CSkinObj::SetKind
_TEXT	SEGMENT
_kind$ = 8
_this$ = -4
?SetKind@CSkinObj@@QAEHW4tagSkinKind@@@Z PROC NEAR	; CSkinObj::SetKind

; 151  : {

  004b2	55		 push	 ebp
  004b3	8b ec		 mov	 ebp, esp
  004b5	51		 push	 ecx
  004b6	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 	if ( !IsValid() ) {

  004b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004bc	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  004c1	85 c0		 test	 eax, eax
  004c3	75 04		 jne	 SHORT $L113537

; 153  : 		return FALSE;

  004c5	33 c0		 xor	 eax, eax
  004c7	eb 1e		 jmp	 SHORT $L113536
$L113537:

; 155  : 
; 156  : 	p_obj->put_Kind ( kind );

  004c9	8b 45 08	 mov	 eax, DWORD PTR _kind$[ebp]
  004cc	50		 push	 eax
  004cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004d0	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  004d3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  004d6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  004d9	8b 01		 mov	 eax, DWORD PTR [ecx]
  004db	52		 push	 edx
  004dc	ff 90 d4 00 00
	00		 call	 DWORD PTR [eax+212]

; 157  : 	return TRUE;

  004e2	b8 01 00 00 00	 mov	 eax, 1
$L113536:

; 158  : }

  004e7	8b e5		 mov	 esp, ebp
  004e9	5d		 pop	 ebp
  004ea	c2 04 00	 ret	 4
?SetKind@CSkinObj@@QAEHW4tagSkinKind@@@Z ENDP		; CSkinObj::SetKind
_TEXT	ENDS
PUBLIC	?GetKind@CSkinObj@@QAE?AW4tagSkinKind@@XZ	; CSkinObj::GetKind
_TEXT	SEGMENT
_this$ = -8
_kind$ = -4
?GetKind@CSkinObj@@QAE?AW4tagSkinKind@@XZ PROC NEAR	; CSkinObj::GetKind

; 162  : {

  004ed	55		 push	 ebp
  004ee	8b ec		 mov	 ebp, esp
  004f0	83 ec 08	 sub	 esp, 8
  004f3	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 163  : 	if ( !IsValid() ) {

  004f6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004f9	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  004fe	85 c0		 test	 eax, eax
  00500	75 04		 jne	 SHORT $L113542

; 164  : 		return kndNone;

  00502	33 c0		 xor	 eax, eax
  00504	eb 1c		 jmp	 SHORT $L113541
$L113542:

; 168  : 	p_obj->get_Kind ( &kind );

  00506	8d 45 fc	 lea	 eax, DWORD PTR _kind$[ebp]
  00509	50		 push	 eax
  0050a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0050d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00510	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00513	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00516	8b 01		 mov	 eax, DWORD PTR [ecx]
  00518	52		 push	 edx
  00519	ff 90 d0 00 00
	00		 call	 DWORD PTR [eax+208]

; 169  : 
; 170  : 	return kind;

  0051f	8b 45 fc	 mov	 eax, DWORD PTR _kind$[ebp]
$L113541:

; 171  : }

  00522	8b e5		 mov	 esp, ebp
  00524	5d		 pop	 ebp
  00525	c3		 ret	 0
?GetKind@CSkinObj@@QAE?AW4tagSkinKind@@XZ ENDP		; CSkinObj::GetKind
_TEXT	ENDS
PUBLIC	?SetHint@CSkinObj@@QAEHAAVCString@@@Z		; CSkinObj::SetHint
PUBLIC	?SetHint@CSkinObj@@QAEHPBD@Z			; CSkinObj::SetHint
EXTRN	??0CString@@QAE@PBD@Z:NEAR			; CString::CString
xdata$x	SEGMENT
$T118729 DD	019930520H
	DD	01H
	DD	FLAT:$T118731
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118731 DD	0ffffffffH
	DD	FLAT:$L118727
xdata$x	ENDS
_TEXT	SEGMENT
_str$ = 8
_this$ = -24
$T118725 = -16
$T118726 = -20
__$EHRec$ = -12
?SetHint@CSkinObj@@QAEHPBD@Z PROC NEAR			; CSkinObj::SetHint

; 175  : {

  00526	55		 push	 ebp
  00527	8b ec		 mov	 ebp, esp
  00529	6a ff		 push	 -1
  0052b	68 00 00 00 00	 push	 $L118730
  00530	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00536	50		 push	 eax
  00537	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0053e	83 ec 14	 sub	 esp, 20			; 00000014H
  00541	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 176  : 	return SetHint ( CString ( str ) );

  00544	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  00547	50		 push	 eax
  00548	8d 4d ec	 lea	 ecx, DWORD PTR $T118726[ebp]
  0054b	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  00550	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  00553	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  00556	89 4d e0	 mov	 DWORD PTR -32+[ebp], ecx
  00559	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00560	8b 55 e0	 mov	 edx, DWORD PTR -32+[ebp]
  00563	52		 push	 edx
  00564	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00567	e8 00 00 00 00	 call	 ?SetHint@CSkinObj@@QAEHAAVCString@@@Z ; CSkinObj::SetHint
  0056c	89 45 f0	 mov	 DWORD PTR $T118725[ebp], eax
  0056f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00576	8d 4d ec	 lea	 ecx, DWORD PTR $T118726[ebp]
  00579	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0057e	8b 45 f0	 mov	 eax, DWORD PTR $T118725[ebp]

; 177  : }

  00581	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00584	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0058b	8b e5		 mov	 esp, ebp
  0058d	5d		 pop	 ebp
  0058e	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118727:
  0008d	8d 4d ec	 lea	 ecx, DWORD PTR $T118726[ebp]
  00090	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00095	c3		 ret	 0
$L118730:
  00096	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118729
  0009b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetHint@CSkinObj@@QAEHPBD@Z ENDP			; CSkinObj::SetHint
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
xdata$x	SEGMENT
$T118736 DD	019930520H
	DD	01H
	DD	FLAT:$T118738
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118738 DD	0ffffffffH
	DD	FLAT:$L118734
xdata$x	ENDS
_TEXT	SEGMENT
_str$ = 8
_this$ = -24
_bstr$ = -16
$T118733 = -20
__$EHRec$ = -12
?SetHint@CSkinObj@@QAEHAAVCString@@@Z PROC NEAR		; CSkinObj::SetHint

; 181  : {

  00591	55		 push	 ebp
  00592	8b ec		 mov	 ebp, esp
  00594	6a ff		 push	 -1
  00596	68 00 00 00 00	 push	 $L118737
  0059b	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  005a1	50		 push	 eax
  005a2	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  005a9	83 ec 0c	 sub	 esp, 12			; 0000000cH
  005ac	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 182  : 	if ( !IsValid() ) {

  005af	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  005b2	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  005b7	85 c0		 test	 eax, eax
  005b9	75 04		 jne	 SHORT $L113554

; 183  : 		return FALSE;

  005bb	33 c0		 xor	 eax, eax
  005bd	eb 4f		 jmp	 SHORT $L113553
$L113554:

; 185  : 
; 186  : 	CComBSTR bstr ( str );

  005bf	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  005c2	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  005c7	50		 push	 eax
  005c8	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  005cb	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR
  005d0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 187  : 	p_obj->put_Hint ( bstr );

  005d7	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  005da	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPAGXZ ; ATL::CComBSTR::operator unsigned short *
  005df	50		 push	 eax
  005e0	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  005e3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  005e6	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  005e9	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  005ec	8b 10		 mov	 edx, DWORD PTR [eax]
  005ee	51		 push	 ecx
  005ef	ff 92 90 01 00
	00		 call	 DWORD PTR [edx+400]

; 188  : 
; 189  : 	return TRUE;

  005f5	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR $T118733[ebp], 1
  005fc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00603	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  00606	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  0060b	8b 45 ec	 mov	 eax, DWORD PTR $T118733[ebp]
$L113553:

; 190  : }

  0060e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00611	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00618	8b e5		 mov	 esp, ebp
  0061a	5d		 pop	 ebp
  0061b	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118734:
  000a0	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  000a3	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  000a8	c3		 ret	 0
$L118737:
  000a9	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118736
  000ae	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetHint@CSkinObj@@QAEHAAVCString@@@Z ENDP		; CSkinObj::SetHint
PUBLIC	?SetText@CSkinObj@@QAEHAAVCString@@@Z		; CSkinObj::SetText
PUBLIC	?SetText@CSkinObj@@QAAHPADZZ			; CSkinObj::SetText
EXTRN	__imp__vsprintf:NEAR
EXTRN	__chkstk:NEAR
xdata$x	SEGMENT
$T118744 DD	019930520H
	DD	01H
	DD	FLAT:$T118747
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118747 DD	0ffffffffH
	DD	FLAT:$L118742
xdata$x	ENDS
_TEXT	SEGMENT
_fmt$ = 12
_this$ = 8
_buf$ = -10256
_args$ = -16
$T118740 = -10260
$T118741 = -10264
__$EHRec$ = -12
?SetText@CSkinObj@@QAAHPADZZ PROC NEAR			; CSkinObj::SetText

; 193  : {

  0061e	55		 push	 ebp
  0061f	8b ec		 mov	 ebp, esp
  00621	6a ff		 push	 -1
  00623	68 00 00 00 00	 push	 $L118745
  00628	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0062e	50		 push	 eax
  0062f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00636	b8 14 28 00 00	 mov	 eax, 10260		; 00002814H
  0063b	e8 00 00 00 00	 call	 __chkstk

; 194  : 	char buf[10240];
; 195  : 
; 196  : 	va_list args;
; 197  : 	va_start(args, fmt);

  00640	8d 45 10	 lea	 eax, DWORD PTR _fmt$[ebp+4]
  00643	89 45 f0	 mov	 DWORD PTR _args$[ebp], eax

; 198  : 
; 199  : 	vsprintf(buf, fmt, args);

  00646	8b 4d f0	 mov	 ecx, DWORD PTR _args$[ebp]
  00649	51		 push	 ecx
  0064a	8b 55 0c	 mov	 edx, DWORD PTR _fmt$[ebp]
  0064d	52		 push	 edx
  0064e	8d 85 f0 d7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00654	50		 push	 eax
  00655	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__vsprintf
  0065b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 200  : 
; 201  : 	va_end(args);

  0065e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _args$[ebp], 0

; 202  : 	
; 203  : 	return SetText ( CString ( buf ) );

  00665	8d 8d f0 d7 ff
	ff		 lea	 ecx, DWORD PTR _buf$[ebp]
  0066b	51		 push	 ecx
  0066c	8d 8d e8 d7 ff
	ff		 lea	 ecx, DWORD PTR $T118741[ebp]
  00672	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  00677	89 85 e4 d7 ff
	ff		 mov	 DWORD PTR -10268+[ebp], eax
  0067d	8b 95 e4 d7 ff
	ff		 mov	 edx, DWORD PTR -10268+[ebp]
  00683	89 95 e0 d7 ff
	ff		 mov	 DWORD PTR -10272+[ebp], edx
  00689	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00690	8b 85 e0 d7 ff
	ff		 mov	 eax, DWORD PTR -10272+[ebp]
  00696	50		 push	 eax
  00697	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0069a	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAEHAAVCString@@@Z ; CSkinObj::SetText
  0069f	89 85 ec d7 ff
	ff		 mov	 DWORD PTR $T118740[ebp], eax
  006a5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  006ac	8d 8d e8 d7 ff
	ff		 lea	 ecx, DWORD PTR $T118741[ebp]
  006b2	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  006b7	8b 85 ec d7 ff
	ff		 mov	 eax, DWORD PTR $T118740[ebp]

; 204  : }

  006bd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  006c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  006c7	8b e5		 mov	 esp, ebp
  006c9	5d		 pop	 ebp
  006ca	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L118742:
  000b3	8d 8d e8 d7 ff
	ff		 lea	 ecx, DWORD PTR $T118741[ebp]
  000b9	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000be	c3		 ret	 0
$L118745:
  000bf	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118744
  000c4	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetText@CSkinObj@@QAAHPADZZ ENDP			; CSkinObj::SetText
PUBLIC	?SetText@CSkinObj@@QAEHPBD@Z			; CSkinObj::SetText
xdata$x	SEGMENT
$T118753 DD	019930520H
	DD	01H
	DD	FLAT:$T118755
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118755 DD	0ffffffffH
	DD	FLAT:$L118751
xdata$x	ENDS
_TEXT	SEGMENT
_str$ = 8
_this$ = -24
$T118749 = -16
$T118750 = -20
__$EHRec$ = -12
?SetText@CSkinObj@@QAEHPBD@Z PROC NEAR			; CSkinObj::SetText

; 208  : {

  006cb	55		 push	 ebp
  006cc	8b ec		 mov	 ebp, esp
  006ce	6a ff		 push	 -1
  006d0	68 00 00 00 00	 push	 $L118754
  006d5	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  006db	50		 push	 eax
  006dc	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  006e3	83 ec 14	 sub	 esp, 20			; 00000014H
  006e6	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 209  : 	return SetText ( CString ( str ) );

  006e9	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  006ec	50		 push	 eax
  006ed	8d 4d ec	 lea	 ecx, DWORD PTR $T118750[ebp]
  006f0	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  006f5	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  006f8	8b 4d e4	 mov	 ecx, DWORD PTR -28+[ebp]
  006fb	89 4d e0	 mov	 DWORD PTR -32+[ebp], ecx
  006fe	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00705	8b 55 e0	 mov	 edx, DWORD PTR -32+[ebp]
  00708	52		 push	 edx
  00709	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0070c	e8 00 00 00 00	 call	 ?SetText@CSkinObj@@QAEHAAVCString@@@Z ; CSkinObj::SetText
  00711	89 45 f0	 mov	 DWORD PTR $T118749[ebp], eax
  00714	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0071b	8d 4d ec	 lea	 ecx, DWORD PTR $T118750[ebp]
  0071e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00723	8b 45 f0	 mov	 eax, DWORD PTR $T118749[ebp]

; 210  : }

  00726	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00729	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00730	8b e5		 mov	 esp, ebp
  00732	5d		 pop	 ebp
  00733	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118751:
  000c9	8d 4d ec	 lea	 ecx, DWORD PTR $T118750[ebp]
  000cc	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000d1	c3		 ret	 0
$L118754:
  000d2	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118753
  000d7	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetText@CSkinObj@@QAEHPBD@Z ENDP			; CSkinObj::SetText
xdata$x	SEGMENT
$T118760 DD	019930520H
	DD	01H
	DD	FLAT:$T118762
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118762 DD	0ffffffffH
	DD	FLAT:$L118758
xdata$x	ENDS
_TEXT	SEGMENT
_str$ = 8
_this$ = -24
_bstr$ = -16
$T118757 = -20
__$EHRec$ = -12
?SetText@CSkinObj@@QAEHAAVCString@@@Z PROC NEAR		; CSkinObj::SetText

; 214  : {

  00736	55		 push	 ebp
  00737	8b ec		 mov	 ebp, esp
  00739	6a ff		 push	 -1
  0073b	68 00 00 00 00	 push	 $L118761
  00740	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00746	50		 push	 eax
  00747	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0074e	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00751	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 215  : 	if ( !IsValid() ) {

  00754	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00757	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  0075c	85 c0		 test	 eax, eax
  0075e	75 04		 jne	 SHORT $L113580

; 216  : 		return FALSE;

  00760	33 c0		 xor	 eax, eax
  00762	eb 4c		 jmp	 SHORT $L113579
$L113580:

; 218  : 
; 219  : 	CComBSTR bstr ( str );

  00764	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  00767	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  0076c	50		 push	 eax
  0076d	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  00770	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR
  00775	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 220  : 	p_obj->put_Text ( bstr );

  0077c	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  0077f	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPAGXZ ; ATL::CComBSTR::operator unsigned short *
  00784	50		 push	 eax
  00785	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00788	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0078b	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0078e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00791	8b 10		 mov	 edx, DWORD PTR [eax]
  00793	51		 push	 ecx
  00794	ff 52 38	 call	 DWORD PTR [edx+56]

; 221  : 
; 222  : 	return TRUE;

  00797	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR $T118757[ebp], 1
  0079e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  007a5	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  007a8	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  007ad	8b 45 ec	 mov	 eax, DWORD PTR $T118757[ebp]
$L113579:

; 223  : }

  007b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  007b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  007ba	8b e5		 mov	 esp, ebp
  007bc	5d		 pop	 ebp
  007bd	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118758:
  000dc	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  000df	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  000e4	c3		 ret	 0
$L118761:
  000e5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118760
  000ea	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SetText@CSkinObj@@QAEHAAVCString@@@Z ENDP		; CSkinObj::SetText
PUBLIC	?GetText@CSkinObj@@QAE?AVCString@@XZ		; CSkinObj::GetText
xdata$x	SEGMENT
$T118769 DD	019930520H
	DD	02H
	DD	FLAT:$T118771
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118771 DD	0ffffffffH
	DD	FLAT:$L118764
	DD	00H
	DD	FLAT:$L118767
xdata$x	ENDS
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -24
_text$ = -16
$T118765 = -20
__$EHRec$ = -12
?GetText@CSkinObj@@QAE?AVCString@@XZ PROC NEAR		; CSkinObj::GetText

; 227  : {

  007c0	55		 push	 ebp
  007c1	8b ec		 mov	 ebp, esp
  007c3	6a ff		 push	 -1
  007c5	68 00 00 00 00	 push	 $L118770
  007ca	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  007d0	50		 push	 eax
  007d1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  007d8	83 ec 0c	 sub	 esp, 12			; 0000000cH
  007db	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  007de	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T118765[ebp], 0

; 228  : 	if ( !IsValid() ) {

  007e5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  007e8	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  007ed	85 c0		 test	 eax, eax
  007ef	75 15		 jne	 SHORT $L113588

; 229  : 		return CString();

  007f1	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  007f4	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  007f9	8b 45 ec	 mov	 eax, DWORD PTR $T118765[ebp]
  007fc	0c 01		 or	 al, 1
  007fe	89 45 ec	 mov	 DWORD PTR $T118765[ebp], eax
  00801	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00804	eb 53		 jmp	 SHORT $L113587
$L113588:

; 231  : 
; 232  : 	CComBSTR text;

  00806	8d 4d f0	 lea	 ecx, DWORD PTR _text$[ebp]
  00809	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::CComBSTR
  0080e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 233  : 	p_obj->get_Text ( &text );

  00815	8d 4d f0	 lea	 ecx, DWORD PTR _text$[ebp]
  00818	e8 00 00 00 00	 call	 ??ICComBSTR@ATL@@QAEPAPAGXZ ; ATL::CComBSTR::operator&
  0081d	50		 push	 eax
  0081e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00821	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00824	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00827	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0082a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0082c	52		 push	 edx
  0082d	ff 50 3c	 call	 DWORD PTR [eax+60]

; 234  : 
; 235  : 	return CString ( text );

  00830	8d 4d f0	 lea	 ecx, DWORD PTR _text$[ebp]
  00833	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPAGXZ ; ATL::CComBSTR::operator unsigned short *
  00838	50		 push	 eax
  00839	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0083c	e8 00 00 00 00	 call	 ??0CString@@QAE@PBG@Z	; CString::CString
  00841	8b 4d ec	 mov	 ecx, DWORD PTR $T118765[ebp]
  00844	83 c9 01	 or	 ecx, 1
  00847	89 4d ec	 mov	 DWORD PTR $T118765[ebp], ecx
  0084a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0084e	8d 4d f0	 lea	 ecx, DWORD PTR _text$[ebp]
  00851	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00856	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L113587:

; 236  : }

  00859	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0085c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00863	8b e5		 mov	 esp, ebp
  00865	5d		 pop	 ebp
  00866	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118764:
  000ef	8b 45 ec	 mov	 eax, DWORD PTR $T118765[ebp]
  000f2	83 e0 01	 and	 eax, 1
  000f5	85 c0		 test	 eax, eax
  000f7	0f 84 08 00 00
	00		 je	 $L118766
  000fd	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00100	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L118766:
  00105	c3		 ret	 0
$L118767:
  00106	8d 4d f0	 lea	 ecx, DWORD PTR _text$[ebp]
  00109	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  0010e	c3		 ret	 0
$L118770:
  0010f	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118769
  00114	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetText@CSkinObj@@QAE?AVCString@@XZ ENDP		; CSkinObj::GetText
PUBLIC	?ExecuteScript@CSkinObj@@QAEHPBD@Z		; CSkinObj::ExecuteScript
xdata$x	SEGMENT
$T118776 DD	019930520H
	DD	01H
	DD	FLAT:$T118778
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118778 DD	0ffffffffH
	DD	FLAT:$L118774
xdata$x	ENDS
_TEXT	SEGMENT
_script$ = 8
_this$ = -24
_bstr$ = -16
$T118773 = -20
__$EHRec$ = -12
?ExecuteScript@CSkinObj@@QAEHPBD@Z PROC NEAR		; CSkinObj::ExecuteScript

; 240  : {

  00869	55		 push	 ebp
  0086a	8b ec		 mov	 ebp, esp
  0086c	6a ff		 push	 -1
  0086e	68 00 00 00 00	 push	 $L118777
  00873	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00879	50		 push	 eax
  0087a	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00881	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00884	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 241  : 	if ( !IsValid() ) {

  00887	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0088a	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  0088f	85 c0		 test	 eax, eax
  00891	75 04		 jne	 SHORT $L113596

; 242  : 		return FALSE;

  00893	33 c0		 xor	 eax, eax
  00895	eb 4a		 jmp	 SHORT $L113595
$L113596:

; 244  : 
; 245  : 	CComBSTR bstr ( script );

  00897	8b 45 08	 mov	 eax, DWORD PTR _script$[ebp]
  0089a	50		 push	 eax
  0089b	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  0089e	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR
  008a3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 246  : 	p_obj->ExecuteScript ( bstr );

  008aa	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  008ad	e8 00 00 00 00	 call	 ??BCComBSTR@ATL@@QBEPAGXZ ; ATL::CComBSTR::operator unsigned short *
  008b2	50		 push	 eax
  008b3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  008b6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  008b9	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  008bc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  008bf	8b 01		 mov	 eax, DWORD PTR [ecx]
  008c1	52		 push	 edx
  008c2	ff 90 f4 00 00
	00		 call	 DWORD PTR [eax+244]

; 247  : 
; 248  : 	return TRUE;

  008c8	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR $T118773[ebp], 1
  008cf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008d6	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  008d9	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  008de	8b 45 ec	 mov	 eax, DWORD PTR $T118773[ebp]
$L113595:

; 249  : }

  008e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  008e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  008eb	8b e5		 mov	 esp, ebp
  008ed	5d		 pop	 ebp
  008ee	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118774:
  00119	8d 4d f0	 lea	 ecx, DWORD PTR _bstr$[ebp]
  0011c	e8 00 00 00 00	 call	 ??1CComBSTR@ATL@@QAE@XZ	; ATL::CComBSTR::~CComBSTR
  00121	c3		 ret	 0
$L118777:
  00122	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118776
  00127	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ExecuteScript@CSkinObj@@QAEHPBD@Z ENDP			; CSkinObj::ExecuteScript
PUBLIC	?GetParentObj@CSkinObj@@QAE?AV1@XZ		; CSkinObj::GetParentObj
xdata$x	SEGMENT
$T118785 DD	019930520H
	DD	02H
	DD	FLAT:$T118787
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118787 DD	0ffffffffH
	DD	FLAT:$L118780
	DD	00H
	DD	FLAT:$L118783
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -28
_retVal$ = -20
$T118781 = -24
?GetParentObj@CSkinObj@@QAE?AV1@XZ PROC NEAR		; CSkinObj::GetParentObj

; 253  : {

  008f1	55		 push	 ebp
  008f2	8b ec		 mov	 ebp, esp
  008f4	6a ff		 push	 -1
  008f6	68 00 00 00 00	 push	 $L118786
  008fb	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00901	50		 push	 eax
  00902	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00909	83 ec 10	 sub	 esp, 16			; 00000010H
  0090c	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  0090f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T118781[ebp], 0

; 254  : 	if ( !IsValid() ) {

  00916	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00919	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  0091e	85 c0		 test	 eax, eax
  00920	75 15		 jne	 SHORT $L113604

; 255  : 		return CSkinObj();

  00922	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00925	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  0092a	8b 45 e8	 mov	 eax, DWORD PTR $T118781[ebp]
  0092d	0c 01		 or	 al, 1
  0092f	89 45 e8	 mov	 DWORD PTR $T118781[ebp], eax
  00932	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00935	eb 59		 jmp	 SHORT $L113603
$L113604:

; 257  : 
; 258  : 	CSkinObj retVal;

  00937	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  0093a	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  0093f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 259  : 	p_obj->get_Parent ( retVal );

  00946	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00949	e8 00 00 00 00	 call	 ??BCSkinObj@@QAEPAPAUISkinObjectDisp@@XZ ; CSkinObj::operator ISkinObjectDisp * *
  0094e	50		 push	 eax
  0094f	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00952	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00955	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00958	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0095b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0095d	52		 push	 edx
  0095e	ff 90 80 00 00
	00		 call	 DWORD PTR [eax+128]

; 260  : 	retVal.DecRef();

  00964	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00967	e8 00 00 00 00	 call	 ?DecRef@CSkinObj@@QAEHXZ ; CSkinObj::DecRef

; 261  : 
; 262  : 	return retVal;

  0096c	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  0096f	51		 push	 ecx
  00970	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00973	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00978	8b 55 e8	 mov	 edx, DWORD PTR $T118781[ebp]
  0097b	83 ca 01	 or	 edx, 1
  0097e	89 55 e8	 mov	 DWORD PTR $T118781[ebp], edx
  00981	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00985	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00988	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0098d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L113603:

; 263  : }

  00990	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00993	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0099a	8b e5		 mov	 esp, ebp
  0099c	5d		 pop	 ebp
  0099d	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118780:
  0012c	8b 45 e8	 mov	 eax, DWORD PTR $T118781[ebp]
  0012f	83 e0 01	 and	 eax, 1
  00132	85 c0		 test	 eax, eax
  00134	0f 84 08 00 00
	00		 je	 $L118782
  0013a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0013d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L118782:
  00142	c3		 ret	 0
$L118783:
  00143	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00146	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0014b	c3		 ret	 0
$L118786:
  0014c	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118785
  00151	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetParentObj@CSkinObj@@QAE?AV1@XZ ENDP			; CSkinObj::GetParentObj
PUBLIC	?GetFirstChildObj@CSkinObj@@QAE?AV1@XZ		; CSkinObj::GetFirstChildObj
xdata$x	SEGMENT
$T118794 DD	019930520H
	DD	02H
	DD	FLAT:$T118796
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118796 DD	0ffffffffH
	DD	FLAT:$L118789
	DD	00H
	DD	FLAT:$L118792
xdata$x	ENDS
_TEXT	SEGMENT
$T118790 = -24
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -28
_retVal$ = -20
?GetFirstChildObj@CSkinObj@@QAE?AV1@XZ PROC NEAR	; CSkinObj::GetFirstChildObj

; 267  : {

  009a0	55		 push	 ebp
  009a1	8b ec		 mov	 ebp, esp
  009a3	6a ff		 push	 -1
  009a5	68 00 00 00 00	 push	 $L118795
  009aa	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  009b0	50		 push	 eax
  009b1	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  009b8	83 ec 10	 sub	 esp, 16			; 00000010H
  009bb	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  009be	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T118790[ebp], 0

; 268  : 	if ( !IsValid() ) {

  009c5	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  009c8	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  009cd	85 c0		 test	 eax, eax
  009cf	75 15		 jne	 SHORT $L113612

; 269  : 		return CSkinObj();

  009d1	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  009d4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  009d9	8b 45 e8	 mov	 eax, DWORD PTR $T118790[ebp]
  009dc	0c 01		 or	 al, 1
  009de	89 45 e8	 mov	 DWORD PTR $T118790[ebp], eax
  009e1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  009e4	eb 59		 jmp	 SHORT $L113611
$L113612:

; 271  : 
; 272  : 	CSkinObj retVal;

  009e6	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  009e9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  009ee	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 273  : 	p_obj->get_FirstChild ( retVal );

  009f5	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  009f8	e8 00 00 00 00	 call	 ??BCSkinObj@@QAEPAPAUISkinObjectDisp@@XZ ; CSkinObj::operator ISkinObjectDisp * *
  009fd	50		 push	 eax
  009fe	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00a01	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00a04	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00a07	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a0a	8b 01		 mov	 eax, DWORD PTR [ecx]
  00a0c	52		 push	 edx
  00a0d	ff 90 84 00 00
	00		 call	 DWORD PTR [eax+132]

; 274  : 	retVal.DecRef();

  00a13	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00a16	e8 00 00 00 00	 call	 ?DecRef@CSkinObj@@QAEHXZ ; CSkinObj::DecRef

; 275  : 
; 276  : 	return retVal;

  00a1b	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00a1e	51		 push	 ecx
  00a1f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00a22	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00a27	8b 55 e8	 mov	 edx, DWORD PTR $T118790[ebp]
  00a2a	83 ca 01	 or	 edx, 1
  00a2d	89 55 e8	 mov	 DWORD PTR $T118790[ebp], edx
  00a30	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00a34	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00a37	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00a3c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L113611:

; 277  : }

  00a3f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00a42	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00a49	8b e5		 mov	 esp, ebp
  00a4b	5d		 pop	 ebp
  00a4c	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118789:
  00156	8b 45 e8	 mov	 eax, DWORD PTR $T118790[ebp]
  00159	83 e0 01	 and	 eax, 1
  0015c	85 c0		 test	 eax, eax
  0015e	0f 84 08 00 00
	00		 je	 $L118791
  00164	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00167	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L118791:
  0016c	c3		 ret	 0
$L118792:
  0016d	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00170	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00175	c3		 ret	 0
$L118795:
  00176	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118794
  0017b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetFirstChildObj@CSkinObj@@QAE?AV1@XZ ENDP		; CSkinObj::GetFirstChildObj
PUBLIC	?GetNextSiblingObj@CSkinObj@@QAE?AV1@XZ		; CSkinObj::GetNextSiblingObj
xdata$x	SEGMENT
$T118803 DD	019930520H
	DD	02H
	DD	FLAT:$T118805
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118805 DD	0ffffffffH
	DD	FLAT:$L118798
	DD	00H
	DD	FLAT:$L118801
xdata$x	ENDS
_TEXT	SEGMENT
$T118799 = -24
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -28
_retVal$ = -20
?GetNextSiblingObj@CSkinObj@@QAE?AV1@XZ PROC NEAR	; CSkinObj::GetNextSiblingObj

; 281  : {

  00a4f	55		 push	 ebp
  00a50	8b ec		 mov	 ebp, esp
  00a52	6a ff		 push	 -1
  00a54	68 00 00 00 00	 push	 $L118804
  00a59	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00a5f	50		 push	 eax
  00a60	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00a67	83 ec 10	 sub	 esp, 16			; 00000010H
  00a6a	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00a6d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T118799[ebp], 0

; 282  : 	if ( !IsValid() ) {

  00a74	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00a77	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00a7c	85 c0		 test	 eax, eax
  00a7e	75 15		 jne	 SHORT $L113620

; 283  : 		return CSkinObj();

  00a80	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00a83	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  00a88	8b 45 e8	 mov	 eax, DWORD PTR $T118799[ebp]
  00a8b	0c 01		 or	 al, 1
  00a8d	89 45 e8	 mov	 DWORD PTR $T118799[ebp], eax
  00a90	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00a93	eb 59		 jmp	 SHORT $L113619
$L113620:

; 285  : 
; 286  : 	CSkinObj retVal;

  00a95	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00a98	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  00a9d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 287  : 	p_obj->get_NextSibling ( retVal );

  00aa4	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00aa7	e8 00 00 00 00	 call	 ??BCSkinObj@@QAEPAPAUISkinObjectDisp@@XZ ; CSkinObj::operator ISkinObjectDisp * *
  00aac	50		 push	 eax
  00aad	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00ab0	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00ab3	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00ab6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ab9	8b 01		 mov	 eax, DWORD PTR [ecx]
  00abb	52		 push	 edx
  00abc	ff 90 8c 00 00
	00		 call	 DWORD PTR [eax+140]

; 288  : 	retVal.DecRef();

  00ac2	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00ac5	e8 00 00 00 00	 call	 ?DecRef@CSkinObj@@QAEHXZ ; CSkinObj::DecRef

; 289  : 
; 290  : 	return retVal;

  00aca	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00acd	51		 push	 ecx
  00ace	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00ad1	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00ad6	8b 55 e8	 mov	 edx, DWORD PTR $T118799[ebp]
  00ad9	83 ca 01	 or	 edx, 1
  00adc	89 55 e8	 mov	 DWORD PTR $T118799[ebp], edx
  00adf	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00ae3	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00ae6	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00aeb	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L113619:

; 291  : }

  00aee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00af1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00af8	8b e5		 mov	 esp, ebp
  00afa	5d		 pop	 ebp
  00afb	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118798:
  00180	8b 45 e8	 mov	 eax, DWORD PTR $T118799[ebp]
  00183	83 e0 01	 and	 eax, 1
  00186	85 c0		 test	 eax, eax
  00188	0f 84 08 00 00
	00		 je	 $L118800
  0018e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00191	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L118800:
  00196	c3		 ret	 0
$L118801:
  00197	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  0019a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0019f	c3		 ret	 0
$L118804:
  001a0	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118803
  001a5	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetNextSiblingObj@CSkinObj@@QAE?AV1@XZ ENDP		; CSkinObj::GetNextSiblingObj
PUBLIC	?GetPrevSiblingObj@CSkinObj@@QAE?AV1@XZ		; CSkinObj::GetPrevSiblingObj
xdata$x	SEGMENT
$T118812 DD	019930520H
	DD	02H
	DD	FLAT:$T118814
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118814 DD	0ffffffffH
	DD	FLAT:$L118807
	DD	00H
	DD	FLAT:$L118810
xdata$x	ENDS
_TEXT	SEGMENT
$T118808 = -24
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -28
_retVal$ = -20
?GetPrevSiblingObj@CSkinObj@@QAE?AV1@XZ PROC NEAR	; CSkinObj::GetPrevSiblingObj

; 295  : {

  00afe	55		 push	 ebp
  00aff	8b ec		 mov	 ebp, esp
  00b01	6a ff		 push	 -1
  00b03	68 00 00 00 00	 push	 $L118813
  00b08	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00b0e	50		 push	 eax
  00b0f	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00b16	83 ec 10	 sub	 esp, 16			; 00000010H
  00b19	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00b1c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T118808[ebp], 0

; 296  : 	if ( !IsValid() ) {

  00b23	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00b26	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00b2b	85 c0		 test	 eax, eax
  00b2d	75 15		 jne	 SHORT $L113628

; 297  : 		return CSkinObj();

  00b2f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00b32	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  00b37	8b 45 e8	 mov	 eax, DWORD PTR $T118808[ebp]
  00b3a	0c 01		 or	 al, 1
  00b3c	89 45 e8	 mov	 DWORD PTR $T118808[ebp], eax
  00b3f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00b42	eb 59		 jmp	 SHORT $L113627
$L113628:

; 299  : 
; 300  : 	CSkinObj retVal;

  00b44	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00b47	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  00b4c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 301  : 	p_obj->get_PreviousSibling ( retVal );

  00b53	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00b56	e8 00 00 00 00	 call	 ??BCSkinObj@@QAEPAPAUISkinObjectDisp@@XZ ; CSkinObj::operator ISkinObjectDisp * *
  00b5b	50		 push	 eax
  00b5c	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00b5f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00b62	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00b65	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00b68	8b 01		 mov	 eax, DWORD PTR [ecx]
  00b6a	52		 push	 edx
  00b6b	ff 90 88 00 00
	00		 call	 DWORD PTR [eax+136]

; 302  : 	retVal.DecRef();

  00b71	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00b74	e8 00 00 00 00	 call	 ?DecRef@CSkinObj@@QAEHXZ ; CSkinObj::DecRef

; 303  : 
; 304  : 	return retVal;

  00b79	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00b7c	51		 push	 ecx
  00b7d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00b80	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00b85	8b 55 e8	 mov	 edx, DWORD PTR $T118808[ebp]
  00b88	83 ca 01	 or	 edx, 1
  00b8b	89 55 e8	 mov	 DWORD PTR $T118808[ebp], edx
  00b8e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00b92	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00b95	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00b9a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L113627:

; 305  : }

  00b9d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00ba0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00ba7	8b e5		 mov	 esp, ebp
  00ba9	5d		 pop	 ebp
  00baa	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118807:
  001aa	8b 45 e8	 mov	 eax, DWORD PTR $T118808[ebp]
  001ad	83 e0 01	 and	 eax, 1
  001b0	85 c0		 test	 eax, eax
  001b2	0f 84 08 00 00
	00		 je	 $L118809
  001b8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001bb	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L118809:
  001c0	c3		 ret	 0
$L118810:
  001c1	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  001c4	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  001c9	c3		 ret	 0
$L118813:
  001ca	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118812
  001cf	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetPrevSiblingObj@CSkinObj@@QAE?AV1@XZ ENDP		; CSkinObj::GetPrevSiblingObj
PUBLIC	?Cut@CSkinObj@@QAEHXZ				; CSkinObj::Cut
_TEXT	SEGMENT
_this$ = -8
_result$ = -4
?Cut@CSkinObj@@QAEHXZ PROC NEAR				; CSkinObj::Cut

; 309  : {

  00bad	55		 push	 ebp
  00bae	8b ec		 mov	 ebp, esp
  00bb0	83 ec 08	 sub	 esp, 8
  00bb3	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 310  : 	if ( !IsValid() ) {

  00bb6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00bb9	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00bbe	85 c0		 test	 eax, eax
  00bc0	75 04		 jne	 SHORT $L113635

; 311  : 		return FALSE;

  00bc2	33 c0		 xor	 eax, eax
  00bc4	eb 27		 jmp	 SHORT $L113634
$L113635:

; 313  : 
; 314  : 	HRESULT result = p_obj->Cut();

  00bc6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00bc9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00bcc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00bcf	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00bd2	8b 10		 mov	 edx, DWORD PTR [eax]
  00bd4	51		 push	 ecx
  00bd5	ff 92 e4 00 00
	00		 call	 DWORD PTR [edx+228]
  00bdb	89 45 fc	 mov	 DWORD PTR _result$[ebp], eax

; 315  : 
; 316  : 	if ( 0 == result ) {

  00bde	83 7d fc 00	 cmp	 DWORD PTR _result$[ebp], 0
  00be2	75 07		 jne	 SHORT $L113637

; 317  : 		return TRUE;

  00be4	b8 01 00 00 00	 mov	 eax, 1
  00be9	eb 02		 jmp	 SHORT $L113634
$L113637:

; 319  : 
; 320  : 	return FALSE;

  00beb	33 c0		 xor	 eax, eax
$L113634:

; 321  : }

  00bed	8b e5		 mov	 esp, ebp
  00bef	5d		 pop	 ebp
  00bf0	c3		 ret	 0
?Cut@CSkinObj@@QAEHXZ ENDP				; CSkinObj::Cut
_TEXT	ENDS
PUBLIC	?Insert@CSkinObj@@QAEHV1@W4SkinInsert@@@Z	; CSkinObj::Insert
PUBLIC	??BCSkinObj@@QAEPAUISkinObjectDisp@@XZ		; CSkinObj::operator ISkinObjectDisp *
xdata$x	SEGMENT
$T118823 DD	019930520H
	DD	01H
	DD	FLAT:$T118825
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118825 DD	0ffffffffH
	DD	FLAT:$L118821
xdata$x	ENDS
_TEXT	SEGMENT
$T118817 = -20
$T118818 = -24
$T118819 = -28
$T118820 = -32
__$EHRec$ = -12
_obj$ = 8
_relation$ = 16
_this$ = -36
_result$ = -16
?Insert@CSkinObj@@QAEHV1@W4SkinInsert@@@Z PROC NEAR	; CSkinObj::Insert

; 325  : {

  00bf1	55		 push	 ebp
  00bf2	8b ec		 mov	 ebp, esp
  00bf4	6a ff		 push	 -1
  00bf6	68 00 00 00 00	 push	 $L118824
  00bfb	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00c01	50		 push	 eax
  00c02	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00c09	83 ec 18	 sub	 esp, 24			; 00000018H
  00c0c	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx
  00c0f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 326  : 	if ( !IsValid() ) {

  00c16	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c19	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00c1e	85 c0		 test	 eax, eax
  00c20	75 1e		 jne	 SHORT $L113643

; 327  : 		return FALSE;

  00c22	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T118817[ebp], 0
  00c29	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c30	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00c33	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00c38	8b 45 ec	 mov	 eax, DWORD PTR $T118817[ebp]
  00c3b	e9 86 00 00 00	 jmp	 $L113642
$L113643:

; 329  : 
; 330  : 	if ( !obj.IsValid() ) {

  00c40	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00c43	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00c48	85 c0		 test	 eax, eax
  00c4a	75 1b		 jne	 SHORT $L113645

; 331  : 		return FALSE;

  00c4c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T118818[ebp], 0
  00c53	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c5a	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00c5d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00c62	8b 45 e8	 mov	 eax, DWORD PTR $T118818[ebp]
  00c65	eb 5f		 jmp	 SHORT $L113642
$L113645:

; 333  : 
; 334  : 	HRESULT result = p_obj->Insert ( obj, relation );

  00c67	8b 45 10	 mov	 eax, DWORD PTR _relation$[ebp]
  00c6a	50		 push	 eax
  00c6b	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00c6e	e8 00 00 00 00	 call	 ??BCSkinObj@@QAEPAUISkinObjectDisp@@XZ ; CSkinObj::operator ISkinObjectDisp *
  00c73	50		 push	 eax
  00c74	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c77	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00c7a	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  00c7d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00c80	8b 01		 mov	 eax, DWORD PTR [ecx]
  00c82	52		 push	 edx
  00c83	ff 90 e8 00 00
	00		 call	 DWORD PTR [eax+232]
  00c89	89 45 f0	 mov	 DWORD PTR _result$[ebp], eax

; 335  : 
; 336  : 	if ( 0 == result ) {

  00c8c	83 7d f0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00c90	75 1b		 jne	 SHORT $L113648

; 337  : 		return TRUE;

  00c92	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR $T118819[ebp], 1
  00c99	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ca0	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00ca3	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00ca8	8b 45 e4	 mov	 eax, DWORD PTR $T118819[ebp]
  00cab	eb 19		 jmp	 SHORT $L113642
$L113648:

; 339  : 
; 340  : 	return FALSE;

  00cad	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T118820[ebp], 0
  00cb4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00cbb	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  00cbe	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00cc3	8b 45 e0	 mov	 eax, DWORD PTR $T118820[ebp]
$L113642:

; 341  : }

  00cc6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00cc9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00cd0	8b e5		 mov	 esp, ebp
  00cd2	5d		 pop	 ebp
  00cd3	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L118821:
  001d4	8d 4d 08	 lea	 ecx, DWORD PTR _obj$[ebp]
  001d7	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  001dc	c3		 ret	 0
$L118824:
  001dd	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118823
  001e2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Insert@CSkinObj@@QAEHV1@W4SkinInsert@@@Z ENDP		; CSkinObj::Insert
PUBLIC	?Refresh@CSkinObj@@QAEHXZ			; CSkinObj::Refresh
_TEXT	SEGMENT
_this$ = -4
?Refresh@CSkinObj@@QAEHXZ PROC NEAR			; CSkinObj::Refresh

; 345  : {

  00cd6	55		 push	 ebp
  00cd7	8b ec		 mov	 ebp, esp
  00cd9	51		 push	 ecx
  00cda	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 346  : 	if ( !IsValid() ) {

  00cdd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ce0	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00ce5	85 c0		 test	 eax, eax
  00ce7	75 04		 jne	 SHORT $L113655

; 347  : 		return FALSE;

  00ce9	33 c0		 xor	 eax, eax
  00ceb	eb 1c		 jmp	 SHORT $L113654
$L113655:

; 349  : 
; 350  : 	p_obj->Refresh ( TRUE );

  00ced	6a 01		 push	 1
  00cef	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00cf2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00cf5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00cf8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00cfb	8b 10		 mov	 edx, DWORD PTR [eax]
  00cfd	51		 push	 ecx
  00cfe	ff 92 40 01 00
	00		 call	 DWORD PTR [edx+320]

; 351  : 	return TRUE;

  00d04	b8 01 00 00 00	 mov	 eax, 1
$L113654:

; 352  : }

  00d09	8b e5		 mov	 esp, ebp
  00d0b	5d		 pop	 ebp
  00d0c	c3		 ret	 0
?Refresh@CSkinObj@@QAEHXZ ENDP				; CSkinObj::Refresh
_TEXT	ENDS
PUBLIC	?Clone@CSkinObj@@QAE?AV1@XZ			; CSkinObj::Clone
xdata$x	SEGMENT
$T118833 DD	019930520H
	DD	02H
	DD	FLAT:$T118835
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118835 DD	0ffffffffH
	DD	FLAT:$L118828
	DD	00H
	DD	FLAT:$L118831
xdata$x	ENDS
_TEXT	SEGMENT
$T118829 = -24
__$EHRec$ = -12
___$ReturnUdt$ = 8
_this$ = -28
_retVal$ = -20
?Clone@CSkinObj@@QAE?AV1@XZ PROC NEAR			; CSkinObj::Clone

; 356  : {

  00d0d	55		 push	 ebp
  00d0e	8b ec		 mov	 ebp, esp
  00d10	6a ff		 push	 -1
  00d12	68 00 00 00 00	 push	 $L118834
  00d17	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00d1d	50		 push	 eax
  00d1e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00d25	83 ec 10	 sub	 esp, 16			; 00000010H
  00d28	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  00d2b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T118829[ebp], 0

; 357  : 	if ( !IsValid() ) {

  00d32	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d35	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00d3a	85 c0		 test	 eax, eax
  00d3c	75 15		 jne	 SHORT $L113661

; 358  : 		return CSkinObj();

  00d3e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00d41	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  00d46	8b 45 e8	 mov	 eax, DWORD PTR $T118829[ebp]
  00d49	0c 01		 or	 al, 1
  00d4b	89 45 e8	 mov	 DWORD PTR $T118829[ebp], eax
  00d4e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00d51	eb 51		 jmp	 SHORT $L113660
$L113661:

; 360  : 
; 361  : 	CSkinObj retVal;

  00d53	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00d56	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  00d5b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 362  : 	p_obj->Clone ( retVal );

  00d62	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00d65	e8 00 00 00 00	 call	 ??BCSkinObj@@QAEPAPAUISkinObjectDisp@@XZ ; CSkinObj::operator ISkinObjectDisp * *
  00d6a	50		 push	 eax
  00d6b	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00d6e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00d71	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00d74	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00d77	8b 01		 mov	 eax, DWORD PTR [ecx]
  00d79	52		 push	 edx
  00d7a	ff 90 94 01 00
	00		 call	 DWORD PTR [eax+404]

; 363  : 
; 364  : 	return retVal;

  00d80	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00d83	51		 push	 ecx
  00d84	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00d87	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00d8c	8b 55 e8	 mov	 edx, DWORD PTR $T118829[ebp]
  00d8f	83 ca 01	 or	 edx, 1
  00d92	89 55 e8	 mov	 DWORD PTR $T118829[ebp], edx
  00d95	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00d99	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00d9c	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00da1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L113660:

; 365  : }

  00da4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00da7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00dae	8b e5		 mov	 esp, ebp
  00db0	5d		 pop	 ebp
  00db1	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118828:
  001e7	8b 45 e8	 mov	 eax, DWORD PTR $T118829[ebp]
  001ea	83 e0 01	 and	 eax, 1
  001ed	85 c0		 test	 eax, eax
  001ef	0f 84 08 00 00
	00		 je	 $L118830
  001f5	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001f8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L118830:
  001fd	c3		 ret	 0
$L118831:
  001fe	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00201	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00206	c3		 ret	 0
$L118834:
  00207	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118833
  0020c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?Clone@CSkinObj@@QAE?AV1@XZ ENDP			; CSkinObj::Clone
PUBLIC	?ReleaseObjPtr@CSkinObj@@QAEXXZ			; CSkinObj::ReleaseObjPtr
_TEXT	SEGMENT
_this$ = -4
?ReleaseObjPtr@CSkinObj@@QAEXXZ PROC NEAR		; CSkinObj::ReleaseObjPtr

; 369  : {

  00db4	55		 push	 ebp
  00db5	8b ec		 mov	 ebp, esp
  00db7	51		 push	 ecx
  00db8	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 370  : 	p_obj = NULL;

  00dbb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00dbe	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 371  : }

  00dc5	8b e5		 mov	 esp, ebp
  00dc7	5d		 pop	 ebp
  00dc8	c3		 ret	 0
?ReleaseObjPtr@CSkinObj@@QAEXXZ ENDP			; CSkinObj::ReleaseObjPtr
_TEXT	ENDS
PUBLIC	?GetBitmapHandle@CSkinObj@@QAEPAUHBITMAP__@@XZ	; CSkinObj::GetBitmapHandle
_TEXT	SEGMENT
_this$ = -8
_result$ = -4
?GetBitmapHandle@CSkinObj@@QAEPAUHBITMAP__@@XZ PROC NEAR ; CSkinObj::GetBitmapHandle

; 375  : {

  00dc9	55		 push	 ebp
  00dca	8b ec		 mov	 ebp, esp
  00dcc	83 ec 08	 sub	 esp, 8
  00dcf	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 376  : 	if ( FALSE == IsValid() ) {

  00dd2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00dd5	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00dda	85 c0		 test	 eax, eax
  00ddc	75 04		 jne	 SHORT $L113672

; 377  : 		return (HBITMAP)0;

  00dde	33 c0		 xor	 eax, eax
  00de0	eb 23		 jmp	 SHORT $L113671
$L113672:

; 379  : 
; 380  : 	long result = 0;

  00de2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 381  : 	p_obj->get_hEntireBitmap ( &result );

  00de9	8d 45 fc	 lea	 eax, DWORD PTR _result$[ebp]
  00dec	50		 push	 eax
  00ded	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00df0	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00df3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00df6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00df9	8b 01		 mov	 eax, DWORD PTR [ecx]
  00dfb	52		 push	 edx
  00dfc	ff 90 3c 01 00
	00		 call	 DWORD PTR [eax+316]

; 382  : 
; 383  : 	return (HBITMAP)result;

  00e02	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]
$L113671:

; 384  : }

  00e05	8b e5		 mov	 esp, ebp
  00e07	5d		 pop	 ebp
  00e08	c3		 ret	 0
?GetBitmapHandle@CSkinObj@@QAEPAUHBITMAP__@@XZ ENDP	; CSkinObj::GetBitmapHandle
_TEXT	ENDS
PUBLIC	?SetTransparency@CSkinObj@@QAEHH@Z		; CSkinObj::SetTransparency
_TEXT	SEGMENT
_nVal$ = 8
_this$ = -4
?SetTransparency@CSkinObj@@QAEHH@Z PROC NEAR		; CSkinObj::SetTransparency

; 388  : {

  00e09	55		 push	 ebp
  00e0a	8b ec		 mov	 ebp, esp
  00e0c	51		 push	 ecx
  00e0d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 389  : 	if ( FALSE == IsValid() ) {

  00e10	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e13	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00e18	85 c0		 test	 eax, eax
  00e1a	75 04		 jne	 SHORT $L113680

; 390  : 		return FALSE;

  00e1c	33 c0		 xor	 eax, eax
  00e1e	eb 1e		 jmp	 SHORT $L113679
$L113680:

; 392  : 
; 393  : 	p_obj->put_Transparency ( nVal );

  00e20	8b 45 08	 mov	 eax, DWORD PTR _nVal$[ebp]
  00e23	50		 push	 eax
  00e24	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e27	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00e2a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00e2d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00e30	8b 01		 mov	 eax, DWORD PTR [ecx]
  00e32	52		 push	 edx
  00e33	ff 90 f0 00 00
	00		 call	 DWORD PTR [eax+240]

; 394  : 	return TRUE;

  00e39	b8 01 00 00 00	 mov	 eax, 1
$L113679:

; 395  : }

  00e3e	8b e5		 mov	 esp, ebp
  00e40	5d		 pop	 ebp
  00e41	c2 04 00	 ret	 4
?SetTransparency@CSkinObj@@QAEHH@Z ENDP			; CSkinObj::SetTransparency
_TEXT	ENDS
PUBLIC	?SetColorKey@CSkinObj@@QAEHK@Z			; CSkinObj::SetColorKey
_TEXT	SEGMENT
_clr$ = 8
_this$ = -4
?SetColorKey@CSkinObj@@QAEHK@Z PROC NEAR		; CSkinObj::SetColorKey

; 399  : {

  00e44	55		 push	 ebp
  00e45	8b ec		 mov	 ebp, esp
  00e47	51		 push	 ecx
  00e48	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 400  : 	if ( FALSE == IsValid() ) {

  00e4b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e4e	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00e53	85 c0		 test	 eax, eax
  00e55	75 04		 jne	 SHORT $L113685

; 401  : 		return FALSE;

  00e57	33 c0		 xor	 eax, eax
  00e59	eb 1e		 jmp	 SHORT $L113684
$L113685:

; 403  : 
; 404  : 	p_obj->put_ColorKey ( clr );

  00e5b	8b 45 08	 mov	 eax, DWORD PTR _clr$[ebp]
  00e5e	50		 push	 eax
  00e5f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00e62	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00e65	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00e68	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00e6b	8b 01		 mov	 eax, DWORD PTR [ecx]
  00e6d	52		 push	 edx
  00e6e	ff 90 b0 01 00
	00		 call	 DWORD PTR [eax+432]

; 405  : 	return TRUE;

  00e74	b8 01 00 00 00	 mov	 eax, 1
$L113684:

; 406  : }

  00e79	8b e5		 mov	 esp, ebp
  00e7b	5d		 pop	 ebp
  00e7c	c2 04 00	 ret	 4
?SetColorKey@CSkinObj@@QAEHK@Z ENDP			; CSkinObj::SetColorKey
_TEXT	ENDS
PUBLIC	?GetBGColor@CSkinObj@@QAEKXZ			; CSkinObj::GetBGColor
_TEXT	SEGMENT
_this$ = -8
_Color$ = -4
?GetBGColor@CSkinObj@@QAEKXZ PROC NEAR			; CSkinObj::GetBGColor

; 410  : {

  00e7f	55		 push	 ebp
  00e80	8b ec		 mov	 ebp, esp
  00e82	83 ec 08	 sub	 esp, 8
  00e85	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 411  : 	OLE_COLOR Color;
; 412  : 
; 413  : 	if ( FALSE == IsValid() ) {

  00e88	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00e8b	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00e90	85 c0		 test	 eax, eax
  00e92	75 04		 jne	 SHORT $L113691

; 414  : 		return FALSE;

  00e94	33 c0		 xor	 eax, eax
  00e96	eb 19		 jmp	 SHORT $L113689
$L113691:

; 416  : 
; 417  : 	p_obj->get_BgColor( &Color );

  00e98	8d 45 fc	 lea	 eax, DWORD PTR _Color$[ebp]
  00e9b	50		 push	 eax
  00e9c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00e9f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00ea2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00ea5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ea8	8b 01		 mov	 eax, DWORD PTR [ecx]
  00eaa	52		 push	 edx
  00eab	ff 50 20	 call	 DWORD PTR [eax+32]

; 418  : 	return (COLORREF)Color;

  00eae	8b 45 fc	 mov	 eax, DWORD PTR _Color$[ebp]
$L113689:

; 419  : }

  00eb1	8b e5		 mov	 esp, ebp
  00eb3	5d		 pop	 ebp
  00eb4	c3		 ret	 0
?GetBGColor@CSkinObj@@QAEKXZ ENDP			; CSkinObj::GetBGColor
_TEXT	ENDS
PUBLIC	?GetColor@CSkinObj@@QAEKXZ			; CSkinObj::GetColor
_TEXT	SEGMENT
_this$ = -8
_Color$ = -4
?GetColor@CSkinObj@@QAEKXZ PROC NEAR			; CSkinObj::GetColor

; 423  : {

  00eb5	55		 push	 ebp
  00eb6	8b ec		 mov	 ebp, esp
  00eb8	83 ec 08	 sub	 esp, 8
  00ebb	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 424  : 	OLE_COLOR Color;
; 425  : 
; 426  : 	if ( FALSE == IsValid() ) {

  00ebe	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ec1	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00ec6	85 c0		 test	 eax, eax
  00ec8	75 04		 jne	 SHORT $L113698

; 427  : 		return FALSE;

  00eca	33 c0		 xor	 eax, eax
  00ecc	eb 19		 jmp	 SHORT $L113696
$L113698:

; 429  : 
; 430  : 	p_obj->get_Color( &Color );

  00ece	8d 45 fc	 lea	 eax, DWORD PTR _Color$[ebp]
  00ed1	50		 push	 eax
  00ed2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ed5	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00ed8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00edb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ede	8b 01		 mov	 eax, DWORD PTR [ecx]
  00ee0	52		 push	 edx
  00ee1	ff 50 34	 call	 DWORD PTR [eax+52]

; 431  : 	return (COLORREF)Color;

  00ee4	8b 45 fc	 mov	 eax, DWORD PTR _Color$[ebp]
$L113696:

; 432  : }

  00ee7	8b e5		 mov	 esp, ebp
  00ee9	5d		 pop	 ebp
  00eea	c3		 ret	 0
?GetColor@CSkinObj@@QAEKXZ ENDP				; CSkinObj::GetColor
_TEXT	ENDS
PUBLIC	?SetBGColor@CSkinObj@@QAEHK@Z			; CSkinObj::SetBGColor
_TEXT	SEGMENT
_clr$ = 8
_this$ = -4
?SetBGColor@CSkinObj@@QAEHK@Z PROC NEAR			; CSkinObj::SetBGColor

; 436  : {

  00eeb	55		 push	 ebp
  00eec	8b ec		 mov	 ebp, esp
  00eee	51		 push	 ecx
  00eef	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 437  : 	if ( FALSE == IsValid() ) {

  00ef2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00ef5	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00efa	85 c0		 test	 eax, eax
  00efc	75 04		 jne	 SHORT $L113704

; 438  : 		return FALSE;

  00efe	33 c0		 xor	 eax, eax
  00f00	eb 1b		 jmp	 SHORT $L113703
$L113704:

; 440  : 
; 441  : 	p_obj->put_BgColor ( clr );

  00f02	8b 45 08	 mov	 eax, DWORD PTR _clr$[ebp]
  00f05	50		 push	 eax
  00f06	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f09	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00f0c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00f0f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00f12	8b 01		 mov	 eax, DWORD PTR [ecx]
  00f14	52		 push	 edx
  00f15	ff 50 1c	 call	 DWORD PTR [eax+28]

; 442  : 	return TRUE;

  00f18	b8 01 00 00 00	 mov	 eax, 1
$L113703:

; 443  : }

  00f1d	8b e5		 mov	 esp, ebp
  00f1f	5d		 pop	 ebp
  00f20	c2 04 00	 ret	 4
?SetBGColor@CSkinObj@@QAEHK@Z ENDP			; CSkinObj::SetBGColor
_TEXT	ENDS
PUBLIC	?SetColor@CSkinObj@@QAEHK@Z			; CSkinObj::SetColor
_TEXT	SEGMENT
_clr$ = 8
_this$ = -4
?SetColor@CSkinObj@@QAEHK@Z PROC NEAR			; CSkinObj::SetColor

; 447  : {

  00f23	55		 push	 ebp
  00f24	8b ec		 mov	 ebp, esp
  00f26	51		 push	 ecx
  00f27	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 448  : 	if ( FALSE == IsValid() ) {

  00f2a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f2d	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00f32	85 c0		 test	 eax, eax
  00f34	75 04		 jne	 SHORT $L113709

; 449  : 		return FALSE;

  00f36	33 c0		 xor	 eax, eax
  00f38	eb 1b		 jmp	 SHORT $L113708
$L113709:

; 451  : 
; 452  : 	p_obj->put_Color ( clr );

  00f3a	8b 45 08	 mov	 eax, DWORD PTR _clr$[ebp]
  00f3d	50		 push	 eax
  00f3e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00f41	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00f44	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00f47	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00f4a	8b 01		 mov	 eax, DWORD PTR [ecx]
  00f4c	52		 push	 edx
  00f4d	ff 50 30	 call	 DWORD PTR [eax+48]

; 453  : 	return TRUE;

  00f50	b8 01 00 00 00	 mov	 eax, 1
$L113708:

; 454  : }

  00f55	8b e5		 mov	 esp, ebp
  00f57	5d		 pop	 ebp
  00f58	c2 04 00	 ret	 4
?SetColor@CSkinObj@@QAEHK@Z ENDP			; CSkinObj::SetColor
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@HHHH@Z				; CRect::CRect
PUBLIC	?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z			; CDC::BitBlt
PUBLIC	?OffsetRect@CRect@@QAEXHH@Z			; CRect::OffsetRect
PUBLIC	?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z	; CSkinObj::DrawBitmap
PUBLIC	?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z	; CBitmap::FromHandle
PUBLIC	?GetBitmap@CBitmap@@QAEHPAUtagBITMAP@@@Z	; CBitmap::GetBitmap
PUBLIC	?CreateCompatibleDC@CDC@@QAEHPAV1@@Z		; CDC::CreateCompatibleDC
PUBLIC	?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z	; CDC::SelectObject
PUBLIC	??0CPoint@@QAE@XZ				; CPoint::CPoint
EXTRN	??1CDC@@UAE@XZ:NEAR				; CDC::~CDC
EXTRN	__imp__exit:NEAR
EXTRN	?GetOrigin@CSkinBitmap@@QAEXPAVCPoint@@@Z:NEAR	; CSkinBitmap::GetOrigin
EXTRN	?GetSkipColor@CSkinBitmap@@QAEKXZ:NEAR		; CSkinBitmap::GetSkipColor
EXTRN	?GetHBitmap@CSkinBitmap@@QAEPAUHBITMAP__@@XZ:NEAR ; CSkinBitmap::GetHBitmap
EXTRN	??0CDC@@QAE@XZ:NEAR				; CDC::CDC
EXTRN	__imp__GetFocus@0:NEAR
EXTRN	__imp__MessageBoxA@16:NEAR
_DATA	SEGMENT
$SG113726 DB	'GDI Resources Exhausted', 00H
$SG113727 DB	'Windows has run out of GDI bitmap resources.  The Realm '
	DB	'Online will be forced to close now.  Please close any other r'
	DB	'unning programs to free up GDI resources and try again.', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T118849 DD	019930520H
	DD	02H
	DD	FLAT:$T118851
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118851 DD	0ffffffffH
	DD	FLAT:$L118846
	DD	00H
	DD	FLAT:$L118847
xdata$x	ENDS
_TEXT	SEGMENT
_pBitmap$ = 8
_destX$ = 12
_destY$ = 16
_this$ = -132
_skipColor$ = -80
_srcBmpHdr$ = -108
_bitmap$ = -16
_srcRect$ = -32
_dstRect$ = -48
_srcDC$ = -76
_originPoint$ = -56
_hBitmap$ = -84
$T118845 = -128
__$EHRec$ = -12
_bmp$ = -60
_destDC$113730 = -124
?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z PROC NEAR ; CSkinObj::DrawBitmap

; 458  : {

  00f5b	55		 push	 ebp
  00f5c	8b ec		 mov	 ebp, esp
  00f5e	6a ff		 push	 -1
  00f60	68 00 00 00 00	 push	 $L118850
  00f65	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00f6b	50		 push	 eax
  00f6c	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00f73	83 ec 78	 sub	 esp, 120		; 00000078H
  00f76	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 459  : 	if ( FALSE == IsValid() ) {

  00f7c	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00f82	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  00f87	85 c0		 test	 eax, eax
  00f89	75 07		 jne	 SHORT $L113716

; 460  : 		return FALSE;

  00f8b	33 c0		 xor	 eax, eax
  00f8d	e9 88 01 00 00	 jmp	 $L113715
$L113716:

; 462  : 
; 463  : 	// get the skip color of the bitmap
; 464  : 	COLORREF skipColor = pBitmap->GetSkipColor();

  00f92	8b 4d 08	 mov	 ecx, DWORD PTR _pBitmap$[ebp]
  00f95	e8 00 00 00 00	 call	 ?GetSkipColor@CSkinBitmap@@QAEKXZ ; CSkinBitmap::GetSkipColor
  00f9a	89 45 b0	 mov	 DWORD PTR _skipColor$[ebp], eax

; 465  : 
; 466  : 	// prepare this skin object for display
; 467  : 	SetTransparency ( 0 );

  00f9d	6a 00		 push	 0
  00f9f	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00fa5	e8 00 00 00 00	 call	 ?SetTransparency@CSkinObj@@QAEHH@Z ; CSkinObj::SetTransparency

; 468  : 	SetBGColor ( skipColor );

  00faa	8b 45 b0	 mov	 eax, DWORD PTR _skipColor$[ebp]
  00fad	50		 push	 eax
  00fae	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00fb4	e8 00 00 00 00	 call	 ?SetBGColor@CSkinObj@@QAEHK@Z ; CSkinObj::SetBGColor

; 469  : 	SetColorKey ( skipColor );

  00fb9	8b 4d b0	 mov	 ecx, DWORD PTR _skipColor$[ebp]
  00fbc	51		 push	 ecx
  00fbd	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00fc3	e8 00 00 00 00	 call	 ?SetColorKey@CSkinObj@@QAEHK@Z ; CSkinObj::SetColorKey

; 470  : 
; 471  : 	BITMAP srcBmpHdr;
; 472  : 
; 473  : 	// create a bitmap for the source data
; 474  : 	CBitmap *bitmap = CBitmap::FromHandle ( pBitmap->GetHBitmap() );

  00fc8	8b 4d 08	 mov	 ecx, DWORD PTR _pBitmap$[ebp]
  00fcb	e8 00 00 00 00	 call	 ?GetHBitmap@CSkinBitmap@@QAEPAUHBITMAP__@@XZ ; CSkinBitmap::GetHBitmap
  00fd0	50		 push	 eax
  00fd1	e8 00 00 00 00	 call	 ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z ; CBitmap::FromHandle
  00fd6	89 45 f0	 mov	 DWORD PTR _bitmap$[ebp], eax

; 475  : 	bitmap->GetBitmap ( &srcBmpHdr );

  00fd9	8d 55 94	 lea	 edx, DWORD PTR _srcBmpHdr$[ebp]
  00fdc	52		 push	 edx
  00fdd	8b 4d f0	 mov	 ecx, DWORD PTR _bitmap$[ebp]
  00fe0	e8 00 00 00 00	 call	 ?GetBitmap@CBitmap@@QAEHPAUtagBITMAP@@@Z ; CBitmap::GetBitmap

; 476  : 
; 477  : 	// center the source rectangle in the dest rectangle horizontally
; 478  : 	CRect srcRect ( 0, 0, srcBmpHdr.bmWidth, srcBmpHdr.bmHeight );

  00fe5	8b 45 9c	 mov	 eax, DWORD PTR _srcBmpHdr$[ebp+8]
  00fe8	50		 push	 eax
  00fe9	8b 4d 98	 mov	 ecx, DWORD PTR _srcBmpHdr$[ebp+4]
  00fec	51		 push	 ecx
  00fed	6a 00		 push	 0
  00fef	6a 00		 push	 0
  00ff1	8d 4d e0	 lea	 ecx, DWORD PTR _srcRect$[ebp]
  00ff4	e8 00 00 00 00	 call	 ??0CRect@@QAE@HHHH@Z	; CRect::CRect

; 479  : 
; 480  : 	CRect dstRect;

  00ff9	8d 4d d0	 lea	 ecx, DWORD PTR _dstRect$[ebp]
  00ffc	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 481  : 	GetRect ( dstRect );

  01001	8d 4d d0	 lea	 ecx, DWORD PTR _dstRect$[ebp]
  01004	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  01009	50		 push	 eax
  0100a	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  01010	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 482  : 
; 483  : 	CDC srcDC;

  01015	8d 4d b4	 lea	 ecx, DWORD PTR _srcDC$[ebp]
  01018	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC
  0101d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 484  : 	srcDC.CreateCompatibleDC ( NULL );

  01024	6a 00		 push	 0
  01026	8d 4d b4	 lea	 ecx, DWORD PTR _srcDC$[ebp]
  01029	e8 00 00 00 00	 call	 ?CreateCompatibleDC@CDC@@QAEHPAV1@@Z ; CDC::CreateCompatibleDC

; 485  : 	srcDC.SelectObject ( bitmap );

  0102e	8b 55 f0	 mov	 edx, DWORD PTR _bitmap$[ebp]
  01031	52		 push	 edx
  01032	8d 4d b4	 lea	 ecx, DWORD PTR _srcDC$[ebp]
  01035	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z ; CDC::SelectObject

; 486  : 
; 487  : 	// adjust the source rectangle by the origin of the bitmap
; 488  : 	CPoint originPoint;

  0103a	8d 4d c8	 lea	 ecx, DWORD PTR _originPoint$[ebp]
  0103d	e8 00 00 00 00	 call	 ??0CPoint@@QAE@XZ	; CPoint::CPoint

; 489  : 	pBitmap->GetOrigin ( &originPoint );

  01042	8d 45 c8	 lea	 eax, DWORD PTR _originPoint$[ebp]
  01045	50		 push	 eax
  01046	8b 4d 08	 mov	 ecx, DWORD PTR _pBitmap$[ebp]
  01049	e8 00 00 00 00	 call	 ?GetOrigin@CSkinBitmap@@QAEXPAVCPoint@@@Z ; CSkinBitmap::GetOrigin

; 490  : 	srcRect.OffsetRect( destX - originPoint.x, destY - originPoint.y );

  0104e	8b 4d 10	 mov	 ecx, DWORD PTR _destY$[ebp]
  01051	2b 4d cc	 sub	 ecx, DWORD PTR _originPoint$[ebp+4]
  01054	51		 push	 ecx
  01055	8b 55 0c	 mov	 edx, DWORD PTR _destX$[ebp]
  01058	2b 55 c8	 sub	 edx, DWORD PTR _originPoint$[ebp]
  0105b	52		 push	 edx
  0105c	8d 4d e0	 lea	 ecx, DWORD PTR _srcRect$[ebp]
  0105f	e8 00 00 00 00	 call	 ?OffsetRect@CRect@@QAEXHH@Z ; CRect::OffsetRect

; 491  : 
; 492  : 	// get this CSkinObject's bitmap so we can draw on it
; 493  : 	HBITMAP hBitmap = GetBitmapHandle();

  01064	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0106a	e8 00 00 00 00	 call	 ?GetBitmapHandle@CSkinObj@@QAEPAUHBITMAP__@@XZ ; CSkinObj::GetBitmapHandle
  0106f	89 45 ac	 mov	 DWORD PTR _hBitmap$[ebp], eax

; 494  : 
; 495  : 	if ( hBitmap == 0 ) {

  01072	83 7d ac 00	 cmp	 DWORD PTR _hBitmap$[ebp], 0
  01076	75 24		 jne	 SHORT $L113725

; 496  : 		::MessageBox ( GetFocus(), "Windows has run out of GDI bitmap resources.  The Realm Online will be forced to close now.  Please close any other running programs to free up GDI resources and try again.", "GDI Resources Exhausted", MB_TASKMODAL );

  01078	68 00 20 00 00	 push	 8192			; 00002000H
  0107d	68 00 00 00 00	 push	 OFFSET FLAT:$SG113726
  01082	68 00 00 00 00	 push	 OFFSET FLAT:$SG113727
  01087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFocus@0
  0108d	50		 push	 eax
  0108e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 497  : 		exit ( 0 );

  01094	6a 00		 push	 0
  01096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__exit
$L113725:

; 499  : 
; 500  : 	CBitmap *bmp = CBitmap::FromHandle ( hBitmap );

  0109c	8b 45 ac	 mov	 eax, DWORD PTR _hBitmap$[ebp]
  0109f	50		 push	 eax
  010a0	e8 00 00 00 00	 call	 ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z ; CBitmap::FromHandle
  010a5	89 45 c4	 mov	 DWORD PTR _bmp$[ebp], eax

; 501  : 
; 502  : 	if ( bmp ) {

  010a8	83 7d c4 00	 cmp	 DWORD PTR _bmp$[ebp], 0
  010ac	74 53		 je	 SHORT $L113729

; 503  : 		CDC destDC;

  010ae	8d 4d 84	 lea	 ecx, DWORD PTR _destDC$113730[ebp]
  010b1	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC
  010b6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 504  : 		destDC.CreateCompatibleDC ( NULL );

  010ba	6a 00		 push	 0
  010bc	8d 4d 84	 lea	 ecx, DWORD PTR _destDC$113730[ebp]
  010bf	e8 00 00 00 00	 call	 ?CreateCompatibleDC@CDC@@QAEHPAV1@@Z ; CDC::CreateCompatibleDC

; 505  : 		destDC.SelectObject ( bmp );

  010c4	8b 4d c4	 mov	 ecx, DWORD PTR _bmp$[ebp]
  010c7	51		 push	 ecx
  010c8	8d 4d 84	 lea	 ecx, DWORD PTR _destDC$113730[ebp]
  010cb	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z ; CDC::SelectObject

; 506  : 	
; 507  : 		destDC.BitBlt ( srcRect.left, srcRect.top, srcBmpHdr.bmWidth, srcBmpHdr.bmHeight, &srcDC, 0, 0, SRCCOPY );

  010d0	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  010d5	6a 00		 push	 0
  010d7	6a 00		 push	 0
  010d9	8d 55 b4	 lea	 edx, DWORD PTR _srcDC$[ebp]
  010dc	52		 push	 edx
  010dd	8b 45 9c	 mov	 eax, DWORD PTR _srcBmpHdr$[ebp+8]
  010e0	50		 push	 eax
  010e1	8b 4d 98	 mov	 ecx, DWORD PTR _srcBmpHdr$[ebp+4]
  010e4	51		 push	 ecx
  010e5	8b 55 e4	 mov	 edx, DWORD PTR _srcRect$[ebp+4]
  010e8	52		 push	 edx
  010e9	8b 45 e0	 mov	 eax, DWORD PTR _srcRect$[ebp]
  010ec	50		 push	 eax
  010ed	8d 4d 84	 lea	 ecx, DWORD PTR _destDC$113730[ebp]
  010f0	e8 00 00 00 00	 call	 ?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z ; CDC::BitBlt

; 508  : 	}

  010f5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  010f9	8d 4d 84	 lea	 ecx, DWORD PTR _destDC$113730[ebp]
  010fc	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
$L113729:

; 509  : 
; 510  : 	return TRUE;

  01101	c7 45 80 01 00
	00 00		 mov	 DWORD PTR $T118845[ebp], 1
  01108	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0110f	8d 4d b4	 lea	 ecx, DWORD PTR _srcDC$[ebp]
  01112	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  01117	8b 45 80	 mov	 eax, DWORD PTR $T118845[ebp]
$L113715:

; 511  : }

  0111a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0111d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01124	8b e5		 mov	 esp, ebp
  01126	5d		 pop	 ebp
  01127	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L118846:
  00211	8d 4d b4	 lea	 ecx, DWORD PTR _srcDC$[ebp]
  00214	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  00219	c3		 ret	 0
$L118847:
  0021a	8d 4d 84	 lea	 ecx, DWORD PTR _destDC$113730[ebp]
  0021d	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  00222	c3		 ret	 0
$L118850:
  00223	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118849
  00228	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?DrawBitmap@CSkinObj@@QAEHPAVCSkinBitmap@@HH@Z ENDP	; CSkinObj::DrawBitmap
PUBLIC	?HitTest@CSkinObj@@QAE?AV1@HH@Z			; CSkinObj::HitTest
xdata$x	SEGMENT
$T118858 DD	019930520H
	DD	02H
	DD	FLAT:$T118860
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118860 DD	0ffffffffH
	DD	FLAT:$L118853
	DD	00H
	DD	FLAT:$L118856
xdata$x	ENDS
_TEXT	SEGMENT
_nX$ = 12
$T118854 = -24
_nY$ = 16
___$ReturnUdt$ = 8
__$EHRec$ = -12
_this$ = -28
_retVal$ = -20
?HitTest@CSkinObj@@QAE?AV1@HH@Z PROC NEAR		; CSkinObj::HitTest

; 515  : {

  0112a	55		 push	 ebp
  0112b	8b ec		 mov	 ebp, esp
  0112d	6a ff		 push	 -1
  0112f	68 00 00 00 00	 push	 $L118859
  01134	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0113a	50		 push	 eax
  0113b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01142	83 ec 10	 sub	 esp, 16			; 00000010H
  01145	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
  01148	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T118854[ebp], 0

; 516  : 	if ( !IsValid() ) {

  0114f	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  01152	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  01157	85 c0		 test	 eax, eax
  01159	75 15		 jne	 SHORT $L113739

; 517  : 		return CSkinObj();

  0115b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0115e	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  01163	8b 45 e8	 mov	 eax, DWORD PTR $T118854[ebp]
  01166	0c 01		 or	 al, 1
  01168	89 45 e8	 mov	 DWORD PTR $T118854[ebp], eax
  0116b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0116e	eb 61		 jmp	 SHORT $L113738
$L113739:

; 519  : 
; 520  : 	CSkinObj retVal;

  01170	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  01173	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  01178	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 521  : 	p_obj->HitTest ( nX, nY, retVal );

  0117f	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  01182	e8 00 00 00 00	 call	 ??BCSkinObj@@QAEPAPAUISkinObjectDisp@@XZ ; CSkinObj::operator ISkinObjectDisp * *
  01187	50		 push	 eax
  01188	8b 4d 10	 mov	 ecx, DWORD PTR _nY$[ebp]
  0118b	51		 push	 ecx
  0118c	8b 55 0c	 mov	 edx, DWORD PTR _nX$[ebp]
  0118f	52		 push	 edx
  01190	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  01193	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01196	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  01199	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0119c	8b 10		 mov	 edx, DWORD PTR [eax]
  0119e	51		 push	 ecx
  0119f	ff 92 d8 00 00
	00		 call	 DWORD PTR [edx+216]

; 522  : 	retVal.DecRef();

  011a5	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  011a8	e8 00 00 00 00	 call	 ?DecRef@CSkinObj@@QAEHXZ ; CSkinObj::DecRef

; 523  : 
; 524  : 	return retVal;

  011ad	8d 45 ec	 lea	 eax, DWORD PTR _retVal$[ebp]
  011b0	50		 push	 eax
  011b1	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  011b4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  011b9	8b 4d e8	 mov	 ecx, DWORD PTR $T118854[ebp]
  011bc	83 c9 01	 or	 ecx, 1
  011bf	89 4d e8	 mov	 DWORD PTR $T118854[ebp], ecx
  011c2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  011c6	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  011c9	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  011ce	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$L113738:

; 525  : }

  011d1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  011d4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  011db	8b e5		 mov	 esp, ebp
  011dd	5d		 pop	 ebp
  011de	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L118853:
  0022d	8b 45 e8	 mov	 eax, DWORD PTR $T118854[ebp]
  00230	83 e0 01	 and	 eax, 1
  00233	85 c0		 test	 eax, eax
  00235	0f 84 08 00 00
	00		 je	 $L118855
  0023b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0023e	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
$L118855:
  00243	c3		 ret	 0
$L118856:
  00244	8d 4d ec	 lea	 ecx, DWORD PTR _retVal$[ebp]
  00247	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0024c	c3		 ret	 0
$L118859:
  0024d	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118858
  00252	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?HitTest@CSkinObj@@QAE?AV1@HH@Z ENDP			; CSkinObj::HitTest
PUBLIC	?SetSize@CSkinObj@@QAEXHH@Z			; CSkinObj::SetSize
_TEXT	SEGMENT
_nWidth$ = 8
_nHeight$ = 12
_this$ = -4
?SetSize@CSkinObj@@QAEXHH@Z PROC NEAR			; CSkinObj::SetSize

; 529  : {

  011e1	55		 push	 ebp
  011e2	8b ec		 mov	 ebp, esp
  011e4	51		 push	 ecx
  011e5	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 530  : 	if ( !IsValid() )

  011e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011eb	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  011f0	85 c0		 test	 eax, eax
  011f2	75 02		 jne	 SHORT $L113747

; 531  : 		return;

  011f4	eb 32		 jmp	 SHORT $L113746
$L113747:

; 532  : 
; 533  : 	p_obj->put_Width ( nWidth );

  011f6	8b 45 08	 mov	 eax, DWORD PTR _nWidth$[ebp]
  011f9	50		 push	 eax
  011fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  011fd	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  01200	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01203	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01206	8b 01		 mov	 eax, DWORD PTR [ecx]
  01208	52		 push	 edx
  01209	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]

; 534  : 	p_obj->put_Height ( nHeight );

  0120f	8b 4d 0c	 mov	 ecx, DWORD PTR _nHeight$[ebp]
  01212	51		 push	 ecx
  01213	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01216	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01219	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0121c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0121f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  01221	50		 push	 eax
  01222	ff 91 cc 00 00
	00		 call	 DWORD PTR [ecx+204]
$L113746:

; 535  : }

  01228	8b e5		 mov	 esp, ebp
  0122a	5d		 pop	 ebp
  0122b	c2 08 00	 ret	 8
?SetSize@CSkinObj@@QAEXHH@Z ENDP			; CSkinObj::SetSize
_TEXT	ENDS
PUBLIC	?SetWidth@CSkinObj@@QAEXH@Z			; CSkinObj::SetWidth
_TEXT	SEGMENT
_nWidth$ = 8
_this$ = -4
?SetWidth@CSkinObj@@QAEXH@Z PROC NEAR			; CSkinObj::SetWidth

; 539  : {

  0122e	55		 push	 ebp
  0122f	8b ec		 mov	 ebp, esp
  01231	51		 push	 ecx
  01232	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 540  : 	if ( !IsValid() )

  01235	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01238	e8 00 00 00 00	 call	 ?IsValid@CSkinObj@@QAEHXZ ; CSkinObj::IsValid
  0123d	85 c0		 test	 eax, eax
  0123f	75 02		 jne	 SHORT $L113752

; 541  : 		return;

  01241	eb 19		 jmp	 SHORT $L113751
$L113752:

; 542  : 
; 543  : 	p_obj->put_Width ( nWidth );

  01243	8b 45 08	 mov	 eax, DWORD PTR _nWidth$[ebp]
  01246	50		 push	 eax
  01247	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0124a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0124d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01250	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01253	8b 01		 mov	 eax, DWORD PTR [ecx]
  01255	52		 push	 edx
  01256	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]
$L113751:

; 544  : }

  0125c	8b e5		 mov	 esp, ebp
  0125e	5d		 pop	 ebp
  0125f	c2 04 00	 ret	 4
?SetWidth@CSkinObj@@QAEXH@Z ENDP			; CSkinObj::SetWidth
_TEXT	ENDS
PUBLIC	?CenterPoint@CRect@@QBE?AVCPoint@@XZ		; CRect::CenterPoint
PUBLIC	?GetCenterPoint@CSkinObj@@QAEHAAVCPoint@@@Z	; CSkinObj::GetCenterPoint
_TEXT	SEGMENT
$T118864 = -24
_point$ = 8
_this$ = -28
_rect$ = -16
?GetCenterPoint@CSkinObj@@QAEHAAVCPoint@@@Z PROC NEAR	; CSkinObj::GetCenterPoint

; 548  : {

  01262	55		 push	 ebp
  01263	8b ec		 mov	 ebp, esp
  01265	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01268	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 549  : 	CRect rect;

  0126b	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  0126e	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 550  : 	GetRect ( rect );

  01273	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  01276	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  0127b	50		 push	 eax
  0127c	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0127f	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 551  : 	point = rect.CenterPoint();

  01284	8d 45 e8	 lea	 eax, DWORD PTR $T118864[ebp]
  01287	50		 push	 eax
  01288	8d 4d f0	 lea	 ecx, DWORD PTR _rect$[ebp]
  0128b	e8 00 00 00 00	 call	 ?CenterPoint@CRect@@QBE?AVCPoint@@XZ ; CRect::CenterPoint
  01290	8b 08		 mov	 ecx, DWORD PTR [eax]
  01292	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01295	8b 45 08	 mov	 eax, DWORD PTR _point$[ebp]
  01298	89 08		 mov	 DWORD PTR [eax], ecx
  0129a	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 552  : 
; 553  : 	return TRUE;

  0129d	b8 01 00 00 00	 mov	 eax, 1

; 554  : }

  012a2	8b e5		 mov	 esp, ebp
  012a4	5d		 pop	 ebp
  012a5	c2 04 00	 ret	 4
?GetCenterPoint@CSkinObj@@QAEHAAVCPoint@@@Z ENDP	; CSkinObj::GetCenterPoint
_TEXT	ENDS
PUBLIC	?ConvertToParent@CSkinObj@@QAEHAAVCPoint@@@Z	; CSkinObj::ConvertToParent
PUBLIC	?ConvertToParent@CSkinObj@@QAEHAAVCPoint@@V1@@Z	; CSkinObj::ConvertToParent
xdata$x	SEGMENT
$T118871 DD	019930520H
	DD	01H
	DD	FLAT:$T118873
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118873 DD	0ffffffffH
	DD	FLAT:$L118868
xdata$x	ENDS
_TEXT	SEGMENT
$T118866 = -24
$T118867 = -28
__$EHRec$ = -12
_point$ = 8
_this$ = -32
_tempObj$ = -20
?ConvertToParent@CSkinObj@@QAEHAAVCPoint@@@Z PROC NEAR	; CSkinObj::ConvertToParent

; 558  : {

  012a8	55		 push	 ebp
  012a9	8b ec		 mov	 ebp, esp
  012ab	6a ff		 push	 -1
  012ad	68 00 00 00 00	 push	 $L118872
  012b2	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  012b8	50		 push	 eax
  012b9	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  012c0	83 ec 1c	 sub	 esp, 28			; 0000001cH
  012c3	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 559  : 	CSkinObj tempObj;

  012c6	8d 4d ec	 lea	 ecx, DWORD PTR _tempObj$[ebp]
  012c9	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@XZ	; CSkinObj::CSkinObj
  012ce	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 560  : 	return ConvertToParent ( point, tempObj );

  012d5	83 ec 08	 sub	 esp, 8
  012d8	8b cc		 mov	 ecx, esp
  012da	89 65 e4	 mov	 DWORD PTR $T118867[ebp], esp
  012dd	8d 45 ec	 lea	 eax, DWORD PTR _tempObj$[ebp]
  012e0	50		 push	 eax
  012e1	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  012e6	89 45 dc	 mov	 DWORD PTR -36+[ebp], eax
  012e9	8b 4d 08	 mov	 ecx, DWORD PTR _point$[ebp]
  012ec	51		 push	 ecx
  012ed	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  012f0	e8 00 00 00 00	 call	 ?ConvertToParent@CSkinObj@@QAEHAAVCPoint@@V1@@Z ; CSkinObj::ConvertToParent
  012f5	89 45 d8	 mov	 DWORD PTR -40+[ebp], eax
  012f8	8b 55 d8	 mov	 edx, DWORD PTR -40+[ebp]
  012fb	89 55 e8	 mov	 DWORD PTR $T118866[ebp], edx
  012fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01305	8d 4d ec	 lea	 ecx, DWORD PTR _tempObj$[ebp]
  01308	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0130d	8b 45 e8	 mov	 eax, DWORD PTR $T118866[ebp]

; 561  : }

  01310	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01313	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0131a	8b e5		 mov	 esp, ebp
  0131c	5d		 pop	 ebp
  0131d	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L118868:
  00257	8d 4d ec	 lea	 ecx, DWORD PTR _tempObj$[ebp]
  0025a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0025f	c3		 ret	 0
$L118872:
  00260	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118871
  00265	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ConvertToParent@CSkinObj@@QAEHAAVCPoint@@@Z ENDP	; CSkinObj::ConvertToParent
xdata$x	SEGMENT
$T118878 DD	019930520H
	DD	01H
	DD	FLAT:$T118880
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T118880 DD	0ffffffffH
	DD	FLAT:$L118876
xdata$x	ENDS
_TEXT	SEGMENT
$T118875 = -16
__$EHRec$ = -12
_point$ = 8
_parent$ = 12
_this$ = -20
?ConvertToParent@CSkinObj@@QAEHAAVCPoint@@V1@@Z PROC NEAR ; CSkinObj::ConvertToParent

; 564  : {

  01320	55		 push	 ebp
  01321	8b ec		 mov	 ebp, esp
  01323	6a ff		 push	 -1
  01325	68 00 00 00 00	 push	 $L118879
  0132a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01330	50		 push	 eax
  01331	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01338	83 ec 08	 sub	 esp, 8
  0133b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  0133e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 565  : 	p_obj->ConvertXToParent( point.x, parent, &point.x );

  01345	8b 45 08	 mov	 eax, DWORD PTR _point$[ebp]
  01348	50		 push	 eax
  01349	8d 4d 0c	 lea	 ecx, DWORD PTR _parent$[ebp]
  0134c	e8 00 00 00 00	 call	 ??BCSkinObj@@QAEPAUISkinObjectDisp@@XZ ; CSkinObj::operator ISkinObjectDisp *
  01351	50		 push	 eax
  01352	8b 4d 08	 mov	 ecx, DWORD PTR _point$[ebp]
  01355	8b 11		 mov	 edx, DWORD PTR [ecx]
  01357	52		 push	 edx
  01358	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0135b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0135e	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  01361	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01364	8b 10		 mov	 edx, DWORD PTR [eax]
  01366	51		 push	 ecx
  01367	ff 92 dc 00 00
	00		 call	 DWORD PTR [edx+220]

; 566  : 	p_obj->ConvertYToParent( point.y, parent, &point.y );

  0136d	8b 45 08	 mov	 eax, DWORD PTR _point$[ebp]
  01370	83 c0 04	 add	 eax, 4
  01373	50		 push	 eax
  01374	8d 4d 0c	 lea	 ecx, DWORD PTR _parent$[ebp]
  01377	e8 00 00 00 00	 call	 ??BCSkinObj@@QAEPAUISkinObjectDisp@@XZ ; CSkinObj::operator ISkinObjectDisp *
  0137c	50		 push	 eax
  0137d	8b 4d 08	 mov	 ecx, DWORD PTR _point$[ebp]
  01380	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  01383	52		 push	 edx
  01384	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01387	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0138a	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0138d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01390	8b 10		 mov	 edx, DWORD PTR [eax]
  01392	51		 push	 ecx
  01393	ff 92 e0 00 00
	00		 call	 DWORD PTR [edx+224]

; 567  : 
; 568  : 	return TRUE;

  01399	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T118875[ebp], 1
  013a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  013a7	8d 4d 0c	 lea	 ecx, DWORD PTR _parent$[ebp]
  013aa	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  013af	8b 45 f0	 mov	 eax, DWORD PTR $T118875[ebp]

; 569  : }

  013b2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  013b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  013bc	8b e5		 mov	 esp, ebp
  013be	5d		 pop	 ebp
  013bf	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L118876:
  0026a	8d 4d 0c	 lea	 ecx, DWORD PTR _parent$[ebp]
  0026d	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00272	c3		 ret	 0
$L118879:
  00273	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T118878
  00278	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ConvertToParent@CSkinObj@@QAEHAAVCPoint@@V1@@Z ENDP	; CSkinObj::ConvertToParent
_TEXT	SEGMENT
_this$ = -4
??BCSkinObj@@QAEPAPAUISkinObjectDisp@@XZ PROC NEAR	; CSkinObj::operator ISkinObjectDisp * *

; 573  : {

  013c2	55		 push	 ebp
  013c3	8b ec		 mov	 ebp, esp
  013c5	51		 push	 ecx
  013c6	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 574  : 	return &p_obj;

  013c9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  013cc	83 c0 04	 add	 eax, 4

; 575  : }

  013cf	8b e5		 mov	 esp, ebp
  013d1	5d		 pop	 ebp
  013d2	c3		 ret	 0
??BCSkinObj@@QAEPAPAUISkinObjectDisp@@XZ ENDP		; CSkinObj::operator ISkinObjectDisp * *
_this$ = -4
??BCSkinObj@@QAEPAUISkinObjectDisp@@XZ PROC NEAR	; CSkinObj::operator ISkinObjectDisp *

; 579  : {

  013d3	55		 push	 ebp
  013d4	8b ec		 mov	 ebp, esp
  013d6	51		 push	 ecx
  013d7	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 580  : 	return p_obj;

  013da	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  013dd	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 581  : }

  013e0	8b e5		 mov	 esp, ebp
  013e2	5d		 pop	 ebp
  013e3	c3		 ret	 0
??BCSkinObj@@QAEPAUISkinObjectDisp@@XZ ENDP		; CSkinObj::operator ISkinObjectDisp *
_TEXT	ENDS
PUBLIC	??M@YA_NABVCSkinObj@@0@Z			; operator<
_TEXT	SEGMENT
_a$ = 8
_b$ = 12
??M@YA_NABVCSkinObj@@0@Z PROC NEAR			; operator<

; 585  : {

  013e4	55		 push	 ebp
  013e5	8b ec		 mov	 ebp, esp

; 586  : 	return a.p_obj < b.p_obj;

  013e7	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  013ea	8b 4d 0c	 mov	 ecx, DWORD PTR _b$[ebp]
  013ed	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  013f0	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  013f3	1b c0		 sbb	 eax, eax
  013f5	f7 d8		 neg	 eax

; 587  : }

  013f7	5d		 pop	 ebp
  013f8	c3		 ret	 0
??M@YA_NABVCSkinObj@@0@Z ENDP				; operator<
_TEXT	ENDS
PUBLIC	??O@YA_NABVCSkinObj@@0@Z			; operator>
_TEXT	SEGMENT
_a$ = 8
_b$ = 12
??O@YA_NABVCSkinObj@@0@Z PROC NEAR			; operator>

; 590  : {

  013f9	55		 push	 ebp
  013fa	8b ec		 mov	 ebp, esp

; 591  : 	return a.p_obj > b.p_obj;

  013fc	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  013ff	8b 4d 0c	 mov	 ecx, DWORD PTR _b$[ebp]
  01402	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  01405	39 51 04	 cmp	 DWORD PTR [ecx+4], edx
  01408	1b c0		 sbb	 eax, eax
  0140a	f7 d8		 neg	 eax

; 592  : }

  0140c	5d		 pop	 ebp
  0140d	c3		 ret	 0
??O@YA_NABVCSkinObj@@0@Z ENDP				; operator>
_TEXT	ENDS
PUBLIC	??8@YA_NABVCSkinObj@@0@Z			; operator==
_TEXT	SEGMENT
_a$ = 8
_b$ = 12
??8@YA_NABVCSkinObj@@0@Z PROC NEAR			; operator==

; 595  : {

  0140e	55		 push	 ebp
  0140f	8b ec		 mov	 ebp, esp

; 596  : 	return a.p_obj == b.p_obj;

  01411	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  01414	8b 4d 0c	 mov	 ecx, DWORD PTR _b$[ebp]
  01417	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0141a	33 c0		 xor	 eax, eax
  0141c	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  0141f	0f 94 c0	 sete	 al

; 597  : }

  01422	5d		 pop	 ebp
  01423	c3		 ret	 0
??8@YA_NABVCSkinObj@@0@Z ENDP				; operator==
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CPoint@@QAE@XZ PROC NEAR				; CPoint::CPoint, COMDAT

; 83   : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CPoint@@QAE@XZ ENDP					; CPoint::CPoint
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT

; 132  : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT
_l$ = 8
_t$ = 12
_r$ = 16
_b$ = 20
_this$ = -4
??0CRect@@QAE@HHHH@Z PROC NEAR				; CRect::CRect, COMDAT

; 134  : 	{ left = l; top = t; right = r; bottom = b; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _l$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _r$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@HHHH@Z ENDP				; CRect::CRect
_TEXT	ENDS
PUBLIC	?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_Release
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::~_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >, COMDAT

; 260  : 	{ 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 261  : 		_Release(); 

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_Release

; 262  : 	}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@XZ ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::~_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
_TEXT	ENDS
;	COMDAT ??B?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ
_TEXT	SEGMENT
_this$ = -4
??B?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator ISkinObjectDisp *, COMDAT

; 300  : 	{ 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 301  : 		return m_pInterface; 

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 302  : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??B?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QBEPAUISkinObjectDisp@@XZ ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator ISkinObjectDisp *
_TEXT	ENDS
PUBLIC	??0CPoint@@QAE@HH@Z				; CPoint::CPoint
;	COMDAT ?CenterPoint@CRect@@QBE?AVCPoint@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8
_this$ = -12
$T118893 = -8
?CenterPoint@CRect@@QBE?AVCPoint@@XZ PROC NEAR		; CRect::CenterPoint, COMDAT

; 159  : 	{ return CPoint((left+right)/2, (top+bottom)/2); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	03 41 0c	 add	 eax, DWORD PTR [ecx+12]
  00015	99		 cdq
  00016	2b c2		 sub	 eax, edx
  00018	d1 f8		 sar	 eax, 1
  0001a	50		 push	 eax
  0001b	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  00026	99		 cdq
  00027	2b c2		 sub	 eax, edx
  00029	d1 f8		 sar	 eax, 1
  0002b	50		 push	 eax
  0002c	8d 4d f8	 lea	 ecx, DWORD PTR $T118893[ebp]
  0002f	e8 00 00 00 00	 call	 ??0CPoint@@QAE@HH@Z	; CPoint::CPoint
  00034	8b 10		 mov	 edx, DWORD PTR [eax]
  00036	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00039	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	89 11		 mov	 DWORD PTR [ecx], edx
  0003e	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?CenterPoint@CRect@@QBE?AVCPoint@@XZ ENDP		; CRect::CenterPoint
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT
_initX$ = 8
_initY$ = 12
_this$ = -4
??0CPoint@@QAE@HH@Z PROC NEAR				; CPoint::CPoint, COMDAT

; 85   : 	{ x = initX; y = initY; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _initX$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _initY$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0CPoint@@QAE@HH@Z ENDP				; CPoint::CPoint
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCRect@@QAEPAUtagRECT@@XZ PROC NEAR			; CRect::operator tagRECT *, COMDAT

; 165  : 	{ return this; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??BCRect@@QAEPAUtagRECT@@XZ ENDP			; CRect::operator tagRECT *
_TEXT	ENDS
EXTRN	__imp__OffsetRect@12:NEAR
;	COMDAT ?OffsetRect@CRect@@QAEXHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_this$ = -4
?OffsetRect@CRect@@QAEXHH@Z PROC NEAR			; CRect::OffsetRect, COMDAT

; 193  : 	{ ::OffsetRect(this, x, y); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _y$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	52		 push	 edx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OffsetRect@12
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?OffsetRect@CRect@@QAEXHH@Z ENDP			; CRect::OffsetRect
_TEXT	ENDS
EXTRN	?FromHandle@CGdiObject@@SGPAV1@PAX@Z:NEAR	; CGdiObject::FromHandle
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT
_hBitmap$ = 8
?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z PROC NEAR	; CBitmap::FromHandle, COMDAT

; 372  : 	{ return (CBitmap*) CGdiObject::FromHandle(hBitmap); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _hBitmap$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?FromHandle@CGdiObject@@SGPAV1@PAX@Z ; CGdiObject::FromHandle
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z ENDP	; CBitmap::FromHandle
_TEXT	ENDS
EXTRN	__imp__GetObjectA@12:NEAR
;	COMDAT ?GetBitmap@CBitmap@@QAEHPAUtagBITMAP@@@Z
_TEXT	SEGMENT
_pBitMap$ = 8
_this$ = -4
?GetBitmap@CBitmap@@QAEHPAUtagBITMAP@@@Z PROC NEAR	; CBitmap::GetBitmap, COMDAT

; 418  : 	{ ASSERT(m_hObject != NULL);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 419  : 		return ::GetObject(m_hObject, sizeof(BITMAP), pBitMap); }

  00007	8b 45 08	 mov	 eax, DWORD PTR _pBitMap$[ebp]
  0000a	50		 push	 eax
  0000b	6a 18		 push	 24			; 00000018H
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00013	52		 push	 edx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetObjectA@12
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?GetBitmap@CBitmap@@QAEHPAUtagBITMAP@@@Z ENDP		; CBitmap::GetBitmap
_TEXT	ENDS
PUBLIC	?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ		; CDC::GetSafeHdc
EXTRN	?Attach@CDC@@QAEHPAUHDC__@@@Z:NEAR		; CDC::Attach
EXTRN	__imp__CreateCompatibleDC@4:NEAR
;	COMDAT ?CreateCompatibleDC@CDC@@QAEHPAV1@@Z
_TEXT	SEGMENT
_pDC$ = 8
_this$ = -4
?CreateCompatibleDC@CDC@@QAEHPAV1@@Z PROC NEAR		; CDC::CreateCompatibleDC, COMDAT

; 527  : 	{ return Attach(::CreateCompatibleDC(pDC->GetSafeHdc())); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ ; CDC::GetSafeHdc
  0000f	50		 push	 eax
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateCompatibleDC@4
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?Attach@CDC@@QAEHPAUHDC__@@@Z ; CDC::Attach
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?CreateCompatibleDC@CDC@@QAEHPAV1@@Z ENDP		; CDC::CreateCompatibleDC
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ PROC NEAR		; CDC::GetSafeHdc, COMDAT

; 513  : 	{ return this == NULL ? NULL : m_hDC; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L118901
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00016	eb 09		 jmp	 SHORT $L118902
$L118901:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001e	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
$L118902:
  00021	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ ENDP			; CDC::GetSafeHdc
_TEXT	ENDS
PUBLIC	?GetSafeHandle@CGdiObject@@QBEPAXXZ		; CGdiObject::GetSafeHandle
EXTRN	?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z:NEAR ; CDC::SelectGdiObject
;	COMDAT ?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z
_TEXT	SEGMENT
_pBitmap$ = 8
_this$ = -4
?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z PROC NEAR	; CDC::SelectObject, COMDAT

; 558  : 	{ ASSERT(m_hDC != NULL); return (CBitmap*) SelectGdiObject(m_hDC, pBitmap->GetSafeHandle()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pBitmap$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetSafeHandle@CGdiObject@@QBEPAXXZ ; CGdiObject::GetSafeHandle
  0000f	50		 push	 eax
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z ; CDC::SelectGdiObject
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?SelectObject@CDC@@QAEPAVCBitmap@@PAV2@@Z ENDP		; CDC::SelectObject
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4
?GetSafeHandle@CGdiObject@@QBEPAXXZ PROC NEAR		; CGdiObject::GetSafeHandle, COMDAT

; 277  : 	{ return this == NULL ? NULL : m_hObject; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	75 09		 jne	 SHORT $L118905
  0000f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR -8+[ebp], 0
  00016	eb 09		 jmp	 SHORT $L118906
$L118905:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001e	89 4d f8	 mov	 DWORD PTR -8+[ebp], ecx
$L118906:
  00021	8b 45 f8	 mov	 eax, DWORD PTR -8+[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetSafeHandle@CGdiObject@@QBEPAXXZ ENDP		; CGdiObject::GetSafeHandle
_TEXT	ENDS
EXTRN	__imp__BitBlt@36:NEAR
;	COMDAT ?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_nWidth$ = 16
_nHeight$ = 20
_pSrcDC$ = 24
_xSrc$ = 28
_ySrc$ = 32
_dwRop$ = 36
_this$ = -4
?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z PROC NEAR		; CDC::BitBlt, COMDAT

; 747  : 	{ ASSERT(m_hDC != NULL); return ::BitBlt(m_hDC, x, y, nWidth, nHeight,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 748  : 		pSrcDC->GetSafeHdc(), xSrc, ySrc, dwRop); }

  00007	8b 45 24	 mov	 eax, DWORD PTR _dwRop$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 20	 mov	 ecx, DWORD PTR _ySrc$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 1c	 mov	 edx, DWORD PTR _xSrc$[ebp]
  00012	52		 push	 edx
  00013	8b 4d 18	 mov	 ecx, DWORD PTR _pSrcDC$[ebp]
  00016	e8 00 00 00 00	 call	 ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ ; CDC::GetSafeHdc
  0001b	50		 push	 eax
  0001c	8b 45 14	 mov	 eax, DWORD PTR _nHeight$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 10	 mov	 ecx, DWORD PTR _nWidth$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 0c	 mov	 edx, DWORD PTR _y$[ebp]
  00027	52		 push	 edx
  00028	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	52		 push	 edx
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BitBlt@36
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 20 00	 ret	 32			; 00000020H
?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z ENDP			; CDC::BitBlt
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4
?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_Release, COMDAT

; 660  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 661  : 		if (m_pInterface != NULL) {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 10		 je	 SHORT $L115981

; 662  : 			m_pInterface->Release();

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 11		 mov	 edx, DWORD PTR [ecx]
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	52		 push	 edx
  0001c	ff 50 08	 call	 DWORD PTR [eax+8]
$L115981:

; 664  : 	}

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_Release
_TEXT	ENDS
PUBLIC	?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_QueryInterface
EXTRN	?_com_issue_error@@YGXJ@Z:NEAR			; _com_issue_error
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z
_TEXT	SEGMENT
_this$ = -8
_hr$116365 = -4
_p$ = 8
??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >, COMDAT

; 73   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 74   : 		if (p) {

  00012	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00015	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00018	74 27		 je	 SHORT $L116372

; 75   : 			HRESULT hr = _QueryInterface(p);

  0001a	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0001d	52		 push	 edx
  0001e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_QueryInterface
  00026	89 45 fc	 mov	 DWORD PTR _hr$116365[ebp], eax

; 76   : 
; 77   : 			if (FAILED(hr) && (hr != E_NOINTERFACE)) {

  00029	83 7d fc 00	 cmp	 DWORD PTR _hr$116365[ebp], 0
  0002d	7d 12		 jge	 SHORT $L116372
  0002f	81 7d fc 02 40
	00 80		 cmp	 DWORD PTR _hr$116365[ebp], -2147467262 ; 80004002H
  00036	74 09		 je	 SHORT $L116372

; 78   : 				_com_issue_error(hr);

  00038	8b 45 fc	 mov	 eax, DWORD PTR _hr$116365[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$L116372:

; 81   : 	}

  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
??0?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAE@ABQAUIDispatch@@@Z ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >
_TEXT	ENDS
PUBLIC	?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::GetIID
PUBLIC	??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator=
PUBLIC	?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::Attach
;	COMDAT ?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z
_TEXT	SEGMENT
_p$ = 8
_this$ = -12
_hr$ = -4
_pInterface$116689 = -8
?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_QueryInterface, COMDAT

; 680  : 	template<typename _InterfacePtr> HRESULT _QueryInterface(const _InterfacePtr& p) throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 681  : 	{
; 682  : 		HRESULT hr;
; 683  : 
; 684  : 		// Can't QI NULL
; 685  : 		//
; 686  : 		if (p) {

  00009	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	74 3f		 je	 SHORT $L116688

; 687  : 			// Query for this interface
; 688  : 			//
; 689  : 			Interface* pInterface;
; 690  : 			hr = p->QueryInterface(GetIID(), reinterpret_cast<void**>(&pInterface));

  00011	8d 4d f8	 lea	 ecx, DWORD PTR _pInterface$116689[ebp]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::GetIID
  0001a	50		 push	 eax
  0001b	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00027	50		 push	 eax
  00028	ff 11		 call	 DWORD PTR [ecx]
  0002a	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 691  : 
; 692  : 			if (FAILED(hr)) {

  0002d	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00031	7d 0f		 jge	 SHORT $L116692

; 693  : 				// If failed initialize interface to NULL and return HRESULT.
; 694  : 				//
; 695  : 				Attach(NULL);

  00033	6a 00		 push	 0
  00035	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::Attach

; 696  : 				return hr;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
  00040	eb 22		 jmp	 SHORT $L116686
$L116692:

; 698  : 
; 699  : 			// Save the interface without AddRef()ing.
; 700  : 			//
; 701  : 			Attach(pInterface);

  00042	8b 55 f8	 mov	 edx, DWORD PTR _pInterface$116689[ebp]
  00045	52		 push	 edx
  00046	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::Attach

; 703  : 		else {

  0004e	eb 11		 jmp	 SHORT $L116693
$L116688:

; 704  : 			operator=(static_cast<Interface*>(NULL));

  00050	6a 00		 push	 0
  00052	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator=

; 705  : 			hr = E_NOINTERFACE;

  0005a	c7 45 fc 02 40
	00 80		 mov	 DWORD PTR _hr$[ebp], -2147467262 ; 80004002H
$L116693:

; 707  : 
; 708  : 		return hr;

  00061	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$L116686:

; 709  : 	}

  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
?_QueryInterface@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEJABQAUIDispatch@@@Z ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_QueryInterface
_TEXT	ENDS
PUBLIC	?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ ; _com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d>::GetIID
;	COMDAT ?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ
_TEXT	SEGMENT
?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::GetIID, COMDAT

; 65   : 	{ 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 66   : 		return ThisIIID::GetIID(); 

  00003	e8 00 00 00 00	 call	 ?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ ; _com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d>::GetIID

; 67   : 	}

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetIID@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@SAABU_GUID@@XZ ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::GetIID
_TEXT	ENDS
PUBLIC	?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_AddRef
;	COMDAT ??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z
_TEXT	SEGMENT
_pInterface$ = 8
_this$ = -8
_pOldInterface$116732 = -4
??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator=, COMDAT

; 207  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 208  : 		if (m_pInterface != pInterface) {

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	3b 4d 08	 cmp	 ecx, DWORD PTR _pInterface$[ebp]
  00011	74 2a		 je	 SHORT $L116733

; 209  : 			Interface* pOldInterface = m_pInterface;

  00013	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00016	8b 02		 mov	 eax, DWORD PTR [edx]
  00018	89 45 fc	 mov	 DWORD PTR _pOldInterface$116732[ebp], eax

; 210  : 
; 211  : 			m_pInterface = pInterface;

  0001b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 55 08	 mov	 edx, DWORD PTR _pInterface$[ebp]
  00021	89 11		 mov	 DWORD PTR [ecx], edx

; 212  : 
; 213  : 			_AddRef();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_AddRef

; 214  : 
; 215  : 			if (pOldInterface != NULL) {

  0002b	83 7d fc 00	 cmp	 DWORD PTR _pOldInterface$116732[ebp], 0
  0002f	74 0c		 je	 SHORT $L116733

; 216  : 				pOldInterface->Release();

  00031	8b 45 fc	 mov	 eax, DWORD PTR _pOldInterface$116732[ebp]
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	8b 55 fc	 mov	 edx, DWORD PTR _pOldInterface$116732[ebp]
  00039	52		 push	 edx
  0003a	ff 51 08	 call	 DWORD PTR [ecx+8]
$L116733:

; 219  : 
; 220  : 		return *this;

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 221  : 	}

  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
??4?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEAAV0@PAUISkinObjectDisp@@@Z ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::operator=
_TEXT	ENDS
;	COMDAT ?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z
_TEXT	SEGMENT
_pInterface$ = 8
_this$ = -4
?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::Attach, COMDAT

; 268  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 269  : 		_Release();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Release@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_Release

; 270  : 		m_pInterface = pInterface;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _pInterface$[ebp]
  00015	89 08		 mov	 DWORD PTR [eax], ecx

; 271  : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?Attach@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@QAEXPAUISkinObjectDisp@@@Z ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::Attach
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4
?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ PROC NEAR ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_AddRef, COMDAT

; 669  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 670  : 		if (m_pInterface != NULL) {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 10		 je	 SHORT $L116738

; 671  : 			m_pInterface->AddRef();

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 11		 mov	 edx, DWORD PTR [ecx]
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001b	52		 push	 edx
  0001c	ff 50 04	 call	 DWORD PTR [eax+4]
$L116738:

; 673  : 	}

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?_AddRef@?$_com_ptr_t@V?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@@@AAEXXZ ENDP ; _com_ptr_t<_com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d> >::_AddRef
_TEXT	ENDS
PUBLIC	__GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\INCLUDE\comip.h
_DATA	SEGMENT
__GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
_DATA	ENDS
;	COMDAT ?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ
_TEXT	SEGMENT
?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ PROC NEAR ; _com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d>::GetIID, COMDAT

; 46   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 		return *_IID;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:__GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d

; 48   : 	}

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetIID@?$_com_IIID@UISkinObjectDisp@@$1?_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d@@3U__s_GUID@@A@@SAABU_GUID@@XZ ENDP ; _com_IIID<ISkinObjectDisp,&_GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d>::GetIID
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::CComBSTR, COMDAT

; 3892 : 	CComBSTR()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3893 : 	{
; 3894 : 		m_str = NULL;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 3895 : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::CComBSTR
_TEXT	ENDS
EXTRN	__imp__SysFreeString@4:NEAR
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::~CComBSTR, COMDAT

; 3938 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3939 : 		::SysFreeString(m_str);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4

; 3940 : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??1CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::~CComBSTR
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT
_this$ = -4
??BCComBSTR@ATL@@QBEPAGXZ PROC NEAR			; ATL::CComBSTR::operator unsigned short *, COMDAT

; 3946 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3947 : 		return m_str;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 3948 : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCComBSTR@ATL@@QBEPAGXZ ENDP				; ATL::CComBSTR::operator unsigned short *
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT
_this$ = -4
??ICComBSTR@ATL@@QAEPAPAGXZ PROC NEAR			; ATL::CComBSTR::operator&, COMDAT

; 3950 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 3951 : 		return &m_str;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 3952 : 	}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??ICComBSTR@ATL@@QAEPAPAGXZ ENDP			; ATL::CComBSTR::operator&
_TEXT	ENDS
PUBLIC	?A2WBSTR@@YAPAGPBDH@Z				; A2WBSTR
;	COMDAT ??0CComBSTR@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_pSrc$ = 8
_this$ = -4
??0CComBSTR@ATL@@QAE@PBD@Z PROC NEAR			; ATL::CComBSTR::CComBSTR, COMDAT

; 4102 : 	CComBSTR(LPCSTR pSrc)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 4103 : 	{
; 4104 : 		m_str = A2WBSTR(pSrc);

  00007	6a ff		 push	 -1
  00009	8b 45 08	 mov	 eax, DWORD PTR _pSrc$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?A2WBSTR@@YAPAGPBDH@Z	; A2WBSTR
  00012	83 c4 08	 add	 esp, 8
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	89 01		 mov	 DWORD PTR [ecx], eax

; 4105 : 	}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??0CComBSTR@ATL@@QAE@PBD@Z ENDP				; ATL::CComBSTR::CComBSTR
_TEXT	ENDS
EXTRN	__imp__MultiByteToWideChar@24:NEAR
EXTRN	__imp__SysAllocStringLen@8:NEAR
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT
_lp$ = 8
_nLen$ = 12
__acp$ = -12
_str$ = -4
_nConvertedLen$ = -16
?A2WBSTR@@YAPAGPBDH@Z PROC NEAR				; A2WBSTR, COMDAT

; 195  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 196  : 	USES_CONVERSION;

  00006	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __acp$[ebp], 0

; 197  : 	BSTR str = NULL;

  0000d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _str$[ebp], 0

; 198  : 	int nConvertedLen = MultiByteToWideChar(_acp, 0, lp,
; 199  : 		nLen, NULL, NULL)-1;

  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	8b 45 0c	 mov	 eax, DWORD PTR _nLen$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _lp$[ebp]
  0001f	51		 push	 ecx
  00020	6a 00		 push	 0
  00022	8b 55 f4	 mov	 edx, DWORD PTR __acp$[ebp]
  00025	52		 push	 edx
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  0002c	83 e8 01	 sub	 eax, 1
  0002f	89 45 f0	 mov	 DWORD PTR _nConvertedLen$[ebp], eax

; 200  : 	str = ::SysAllocStringLen(NULL, nConvertedLen);

  00032	8b 45 f0	 mov	 eax, DWORD PTR _nConvertedLen$[ebp]
  00035	50		 push	 eax
  00036	6a 00		 push	 0
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocStringLen@8
  0003e	89 45 fc	 mov	 DWORD PTR _str$[ebp], eax

; 201  : 	if (str != NULL)

  00041	83 7d fc 00	 cmp	 DWORD PTR _str$[ebp], 0
  00045	74 1a		 je	 SHORT $L87242

; 203  : 		MultiByteToWideChar(_acp, 0, lp, -1,
; 204  : 			str, nConvertedLen);

  00047	8b 4d f0	 mov	 ecx, DWORD PTR _nConvertedLen$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 55 fc	 mov	 edx, DWORD PTR _str$[ebp]
  0004e	52		 push	 edx
  0004f	6a ff		 push	 -1
  00051	8b 45 08	 mov	 eax, DWORD PTR _lp$[ebp]
  00054	50		 push	 eax
  00055	6a 00		 push	 0
  00057	8b 4d f4	 mov	 ecx, DWORD PTR __acp$[ebp]
  0005a	51		 push	 ecx
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
$L87242:

; 206  : 	return str;

  00061	8b 45 fc	 mov	 eax, DWORD PTR _str$[ebp]

; 207  : }

  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
?A2WBSTR@@YAPAGPBDH@Z ENDP				; A2WBSTR
_TEXT	ENDS
END
