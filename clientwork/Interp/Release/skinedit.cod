	TITLE	\\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinedit.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@EDBF@Object?5created?5on?5thread?5?$DN?5?$CFd?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05FGFK@CLSID?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03DMDD@?5?9?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09MOFL@Interface?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@FNJL@?$CICLSID?$DP?$DP?$DP?$CJ?5?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09DLIL@?5?9?5failed?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01BJG@?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@NKPL@Unknown?5Error?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1O@HOAP@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_1BC@BJHN@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04MDHG@?4tlb?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@JLHD@oleaut32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BC@FJNM@UnRegisterTypeLib?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0O@CDEE@DllGetVersion?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0N@FDEG@comctl32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0M@IKNA@shell32?4dll?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0FG@ILEN@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0IH@JLLA@?3Jan?3January?3Feb?3February?3Mar?3Ma@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_05NAGO@false?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_04NCCD@true?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02ELCB@no?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_03LGKI@yes?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01FKHJ@C?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BE@OPIO@IDispatch?5error?5?$CD?$CFd?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@NADL@Unknown?5error?50x?$CF0lX?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02MHAC@?$CFp?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BH@CFAI@0123456789abcdefABCDEF?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KFAL@E?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01PHOL@e?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_01KMAE@?0?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BL@HMNC@invalid?5bitset?$DMN?$DO?5position?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@MMAA@missing?5locale?5facet?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __tcscmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcscoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsicoll
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextWindow@@YAPAUHWND__@@PAU1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawState@@YGHPAUHDC__@@PAUHBRUSH__@@P6GH0JIHH@ZJIHHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxTrace@@YAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextPtr@CSimpleList@@QBEPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CByteArray@@QBEEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CByteArray@@QAEAAEH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CWordArray@@QBEGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CWordArray@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CDWordArray@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CDWordArray@@QAEAAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CUIntArray@@QBEIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CUIntArray@@QAEAAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CPtrArray@@QAEAAPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CObArray@@QBEPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CObArray@@QAEAAPAVCObject@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CStringArray@@QBE?AVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSimpleException@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CString@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CString@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CString@@QBEDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACString@@QBEDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTimeSpan@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDays@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalHours@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalMinutes@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTotalSeconds@CTimeSpan@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??6CArchive@@QAEAAV0@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??5CArchive@@QAEAAV0@AAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetApp@@YGPAVCWinApp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSize@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@HHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@PBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SwapLeftRight@CRect@@SAXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IntersectRect@CRect@@QAEHPBUtagRECT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GCRect@@QBE?AV0@UtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CGdiObject@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CGdiObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPen@@SGPAV1@PAUHPEN__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CFont@@SGPAV1@PAUHFONT__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CBitmap@@SGPAV1@PAUHBITMAP__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CBitmap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FromHandle@CPalette@@SGPAV1@PAUHPALETTE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMenu@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreatePopupMenu@CMenu@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHmenu@CMenu@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendMenuA@CMenu@@QAEHIIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWnd@@QBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSetFocus@CWnd@@IAEXPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnChar@CWnd@@IAEXIII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnKeyDown@CWnd@@IAEXIII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CListBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CListBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComboBox@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemData@CComboBox@@QBEKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetItemData@CComboBox@@QAEHHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintSelection@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrintRange@CPrintDialog@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorders@CStatusBar@@QAEXHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualGUID@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleCurrency@@QAEXW4CurrencyStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4COleDateTime@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTime@@QAEXW4DateTimeStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0COleDateTimeSpan@@QAE@N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatus@COleDateTimeSpan@@QAEXW4DateTimeSpanStatus@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@COleSafeArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextItem@CListCtrl@@QBEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSafeHandle@CImageList@@QBEPAU_IMAGELIST@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRichEditCtrl@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLineCount@CRichEditCtrl@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCharPos@CRichEditCtrl@@QBE?AVCPoint@@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Cut@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Paste@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetReadOnly@CRichEditCtrl@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFirstVisibleLine@CRichEditCtrl@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LineFromChar@CRichEditCtrl@@QBEJJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSel@CRichEditCtrl@@QAEXAAU_charrange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetEventMask@CRichEditCtrl@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLimitText@CRichEditCtrl@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HideSelection@CRichEditCtrl@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetEventMask@CRichEditCtrl@@QAEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTextLength@CRichEditCtrl@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OLE2BSTR@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?T2BSTR@@YAPAGPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlTrace2@ATL@@YAXKIPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualGUID@ATL@@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YAHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReplaceSingleQuote@CComModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@CComBSTR@ATL@@QAE_NPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalClear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_NextObjectMapEntry@ATL@@YAPAU_ATL_OBJMAP_ENTRY@1@PAU_ATL_MODULE@1@PAU21@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterClassObjects@ATL@@YGJPAU_ATL_MODULE@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRevokeClassObjects@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServerEx@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUpdateRegistryFromResourceD@ATL@@YGJPAU_ATL_MODULE@1@PBGHPAU_ATL_REGMAP_ENTRY@1@PAUIRegistrar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleLoadTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleUnRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddCreateWndData@ATL@@YGXPAU_ATL_MODULE@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_MODULE@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DllVersionInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YAGDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@failure@ios_base@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0failure@ios_base@std@@QAE@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Assign@Data_t@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleDataObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDocument@COleServerItem@@QBEPAVCOleServerDoc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemInfo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MemoryMgr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAddr@MemoryMgr@@QAEPAXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckValid@MemoryMgr@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemoryMgr@@QAEHG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMemoryMgr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@IIIPAUMemClient@@DW4ReservedHandle@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@MemID@@QAEXW4MemType@@V1@III@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValid@MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BMemID@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DMemID@@QBEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AMemID@@QBEAADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8MemID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7MemID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeArrayID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeArrayID@@QBEPAUArrayHeader@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ArrayID@@QAE@HW4ArrayType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get@ArrayID@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAE?AVMemID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?dataID@Array@@QAEXVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0SOL_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@SOL_List@@QAEAAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeSOL_ListID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeDispatchTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeDispatchTblID@@QBEPAUDispatchTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DispatchTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeScriptEntryID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeScriptEntryID@@QBEPAUScriptEntry@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntry@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ScriptEntryID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeVariableID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeVariableID@@QBEPAUVariable@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VariableID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGraphicsUpdate@Object@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?selectorDict@Object@@QAEPAVSelectorDict@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??AObject@@QAEAAFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddr@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedPropAddr@Object@@QAEPBFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIndexedProperty@Object@@QAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAddrCheck@Object@@QAEPAFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@Object@@QAEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPropOffset@Object@@QAEIG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetIndexedProperty@Object@@QAEXHF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPropAtOffset@Object@@QAEAAFI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@Object@@QAEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??CFakeObjectID@@QBEPAUObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjectID@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AssureValid@ObjectID@@QBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsObject@ObjectID@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@ObjectID@@QBEFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProperty@ObjectID@@QBEXGF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FakeClassTblID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DFakeClassTblID@@QBEPAUClassTbl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DTextID@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0StringID@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Object@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Code@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Collection@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_List@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Set@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Dialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Script@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DemonsScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EventHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Array@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IntArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IDArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ByteArray@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Rectangle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_String@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Timer@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Clut@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_LongInt@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_lowWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_lowWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_hiWord@CSCI_LongInt@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_hiWord@CSCI_LongInt@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PackedData@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Sound@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Scaler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Motion@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_MoveTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Cycle@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Forward@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CycleTo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Chase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_PolyPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Jump@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BitMap@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Feature@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_View@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Prop@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Actor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Plane@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Window@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Item@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_TextItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_EditItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Button@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Selector@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_FancyDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WinDialogHandler@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_IconBar@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_User@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Game@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_File@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_DPath@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ManagedRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_Server@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_RealmRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_NetRoom@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObjectBase@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_BWearable@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldObject@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDLo@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDLo@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_pServIDHi@CSCI_WorldObject@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set_pServIDHi@CSCI_WorldObject@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldActor@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WorldEgo@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WAScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_WANetScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectSourceTarget@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SpecialEffectArea@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_SoundEffect@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_ShadowText@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GroupMember@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_StoreItem@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_GSActionScript@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharButton@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CharLookDialog@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@ABVMemID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSCI_CWindowPage@@QAE@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetProcessEvents@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTransient@CSkinWnd@@IAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTransient@CSkinWnd@@IAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSkinSingleEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSkinSingleEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtr@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIRegistrar@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UIRegistrar@@@ATL@@QAEPAPAUIRegistrar@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UIRegistrar@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIRegistrar@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIRegistrar@@@ATL@@QAEPAUIRegistrar@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtr@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtr@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtr@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$bitset@$05@std@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$bitset@$05@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$bitset@$05@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@D@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$numpunct@G@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBEABDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?set@?$bitset@$05@std@@QAEAAV12@I_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?test@?$bitset@$05@std@@QBE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$bitset@$05@std@@AAE@AAV12@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@AAEDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Peek@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@AAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??D?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??E?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$bitset@$05@std@@ABEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$ctype@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@D@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@DU?$char_traits@D@std@@@1@0IPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Widen@std@@YADDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?use_facet@std@@YAABV?$numpunct@G@1@ABVlocale@1@PBV21@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getloctxt@std@@YAHAAV?$istreambuf_iterator@GU?$char_traits@G@std@@@1@0IPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@DU?$char_traits@D@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Narrow@std@@YAHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?isdigit@std@@YA_NDABVlocale@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9std@@YA_NABV?$istreambuf_iterator@GU?$char_traits@G@std@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@G@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAGHPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@D@std@@@std@@SAPAV?$ctype@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$ctype@G@std@@@std@@SAPAV?$ctype@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAPAV?$numpunct@D@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Save@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAPAV?$numpunct@G@2@PAV32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$ctype@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@D@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tidyfac@V?$numpunct@G@std@@@std@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPADPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Maklocstr@std@@YAPAGPBDPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSkinSingleEdit@@WGA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSkinSingleEdit@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSkinEdit@@WGA@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECSkinEdit@@WHE@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_eab22ac1_30c1_11cf_a7eb_0000c05bae0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d66d6f98_cdaa_11d0_b822_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1f8352c0_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMonthCalCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f220_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f208_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc9_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa5_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000192_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000140_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_920ff31f_ca25_451a_9738_3444fc206bcc
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CScrollBar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CProgressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b722bcc7_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CTabCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CStatic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d49_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_85cb6900_4d95_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4f7ae600_0142_11d3_9dcf_89be4efb591e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBoxEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f203_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1ac3d9f0_175c_11d1_95be_00609797ea4f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_012dd920_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHotKeyCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214e2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f311_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1008c4a0_7613_11cf_9af1_0020af6e72f4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f23b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3d7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2aa_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1de_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d8_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc40bec1_c493_11d0_831b_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd21_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ee11629b_36df_11d3_9dd0_89d6dbbba800
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_63cdbcb0_c1b1_11d0_9336_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_bb1a2ae1_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65ce_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cb5bdc81_93c1_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f218_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f230_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSimpleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f377_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_000214e1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ca478da0_3920_11d3_9dd0_8067e4a06603
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eae1ba61_a4ed_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f35f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3fd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d24acd23_ba72_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a3ccedf3_2de2_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d10f6761_83e9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1ff_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f240_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinSingleEdit@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1da_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCommonDialog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f32d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88a05c00_f000_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CToolBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_08ec3e00_50b0_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020d03_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_85bd8e82_0fba_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3fc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d40_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_359f3441_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QAE@ABV012@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f28b_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_afa0dc11_c313_11d0_831a_00c04fd5ae38
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000023_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e0e270c1_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CComboBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_typeid@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSkinEdit@@6BCRichEditCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c5_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f2c2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fbf23b80_e3f0_101b_8488_00aa003e56f8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1d9_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f1_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b722bcc5_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSliderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e5_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f1_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000190_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CDragListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020d00_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000191_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_f77459a0_bf9a_11cf_ba4e_00c04fd70816
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f322_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f266_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a41_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4425_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9cb_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@D@std@@@std@@0PAV?$numpunct@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$numpunct@G@std@@@std@@0PAV?$numpunct@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@D@std@@@std@@0PAV?$ctype@D@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_S?$numpunct@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_S?$numpunct@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Facsav@?$_Tidyfac@V?$ctype@G@std@@@std@@0PAV?$ctype@G@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e3_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f29c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVfailure@ios_base@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CNoTrackObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_359f3443_bd4a_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc8_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f206_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f212_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ed_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f490eb00_1240_11d1_9888_006097deacf9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_typeid@std@@@8??0bad_typeid@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CBitmapButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSkinEdit@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f1dd_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f373_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214ea_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f25f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fac32c80_cbe4_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23d_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_eb0fe172_1a3a_11d0_89b3_00a0c90a90ac
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_729fe2f8_1ea8_11d1_8f85_00c04fc2fbe1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f202_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_ac60f6a0_0fd9_11d0_99cb_00c04fd64497
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2bc_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bccb_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f216_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_04598fc6_866c_11cf_ab7c_00aa00c08fcf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_332c4426_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ee_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$ctype@D@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f313_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_88e39e80_3578_11cf_ae69_08002b2e1262
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7MemoryMgr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAnimateCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f37e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c7_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_e7a1af80_4d96_11cf_960c_0080c7f4ee85
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000013d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSpinButtonCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ca04b7e6_0d21_11d1_8cc5_00c04fc2b085
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_163bb1e0_6e00_11cf_837a_48dc04c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_2a342fc2_7b26_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d8f015c0_c278_11ce_a49e_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_744129e0_cbe5_11ce_8350_444553540000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_68284faa_6a48_11d0_8c78_00c04fd918b4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CStatusBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f3d5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_626fc520_a41e_11cf_a731_00a0c9082637
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_91a565c1_e38f_11d0_94bf_00a0c9055cbf
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2ad_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53fa8d31_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1e0_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f35c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b8da6310_e19b_11d0_933c_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_db01a1e3_a42b_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinSingleEdit@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CSkinEdit@@6BCScrollable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_539698a0_cdca_11cf_a5eb_00aa0047a063
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3dc39d1d_c030_11d0_b81b_00c04fc9b31f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d46_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_37deb787_2d9b_11d3_9dd0_c423e6542e10
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CReBarCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3050f3cf_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinSingleEdit@@6BCRichEditCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_d9f1e15a_ccdb_11d0_9c0c_00c04fc99c8e
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_feceaaa2_8405_11cf_8ba1_00aa00476da6
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002df05_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRectTracker@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f209_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f319_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f375_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f369_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3e7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_baa342a0_2ded_11d0_86f4_00a0c913f750
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f23a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f315_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f265_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_085fb2c0_0df8_11d1_8f4b_00a0c905413f
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55dd814e_a1b7_4808_9625_4f75a3fad8a7
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2e5_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000214ee_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214fa_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f361_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214eb_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c6c4200_c589_11d0_999a_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f7_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f372_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f5be2ee1_bfd7_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRichEditCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CButton@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CDateTimeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f376_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f401_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d9e89500_30fa_11d0_b724_00aa006c1a01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f357_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f360_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c01387a_6ac2_4ef1_bda2_ec5d26e3b065
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_322982e0_0855_11d3_9dcf_ddfb3ab09e18
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_cabb0da0_da57_11cf_9974_0020afd79762
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_c04d65d2_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7d688a70_c613_11d0_999b_00c04fd655e1
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f378_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f7_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f383_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_1cff0050_6fdd_11d0_9328_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bb1a2ae2_a4f9_11cf_8f20_00805f2cd064
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2a6_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2b2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f2_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_6cfc9ba1_fe87_11d2_9dcf_ed29fafe371d
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_9ba05970_f6a8_11cf_a442_00a0c90a8f39
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcca_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f20a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_83c2d7a0_0de6_11d3_9dcf_9423f1b2561c
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinEdit@@6BCSkinCtrl@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMonikerFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f25e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?1??use_facet@std@@YAABV?$numpunct@G@2@ABVlocale@2@PBV32@_N@Z@4PBVfacet@42@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e3_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_typeid@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f207_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CListCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSkinSingleEdit@@6BCMouseWheelable@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_53fa8d4c_2cdd_11d3_9dd0_d3cd4078982a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9c6_baf9_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f4_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f21e_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CCheckListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_332c4427_26cb_11d0_b483_00c04fd90119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_aa5b6a80_b834_11d0_932f_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CTreeCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0e270c0_c0be_11d0_8fe4_00a0c90a6341
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e6_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f2_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a4c65425_0f82_11d1_90c3_00c04fc2f568
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CIPAddressCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a6ef9861_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6ef9862_c720_11d0_9337_00a0c90dcaa9
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38c_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000193_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000024_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1IK@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3050f200_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_dce47f78_8a6c_4c6d_a6f7_8be4427127c4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f204_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f38a_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ea_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f0_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3c374a42_bae4_11cf_bf7d_00aa006946ee
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f24f_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f1f3_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f9_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000194_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CHeaderCtrl@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_47d2657a_7b27_11d0_8ca9_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f3ec_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f211_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f205_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214e8_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_000214f4_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00021500_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b722bcc6_4e68_101b_a2bc_00aa00404770
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_89bcb740_6119_101a_bcb7_00dd010655af
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_bcfce0a0_ec17_11d0_8d10_00a0c90f2719
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_c04d65d0_b70d_11d0_b188_00aa0038c969
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_972de6c1_8b09_11d2_b652_a1fd6cc34260
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f244_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013e_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_275c23e1_3747_11d0_9fea_00aa003f8646
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f1db8392_7331_11d0_8c99_00a0c92dbfe8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_c4d244b0_d43e_11cf_893b_00aa00bdce1a
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_3050f2eb_98b5_11cf_bb82_00aa00bdce0b
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
FLAT	GROUP _DATA, CONST, _BSS, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?defaultFont@@3PADA				; defaultFont
PUBLIC	?wingdingFont@@3PADA				; wingdingFont
PUBLIC	?EmoteToChar@@3PADA				; EmoteToChar
PUBLIC	?CharToEmote@@3PADA				; CharToEmote
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?GUID_ATLVer30@ATL@@3U_GUID@@A			; ATL::GUID_ATLVer30
PUBLIC	?m_libid@CComModule@ATL@@2U_GUID@@A		; ATL::CComModule::m_libid
PUBLIC	_LIBID_ATLLib
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_LIBID_ACTIVESKINLib
PUBLIC	_IID_ISkinForm
PUBLIC	_IID_ISkinObjectDisp
PUBLIC	_IID_ISkinSource
PUBLIC	_DIID__ISkinFormEvents
PUBLIC	_IID_ISkinFormEvents_Sink
PUBLIC	_CLSID_SkinForm
PUBLIC	_DIID__ISkinObjectDispEvents
PUBLIC	_IID_ICOMScript
PUBLIC	_IID_IComMorph
PUBLIC	_IID_IComMoveSize
PUBLIC	_IID_ISkinButton
PUBLIC	_CLSID_SkinObject
PUBLIC	_CLSID_COMScript
PUBLIC	_CLSID_ComMorph
PUBLIC	_CLSID_ComMoveSize
PUBLIC	_DIID__ISkinButtonEvents
PUBLIC	_CLSID_SkinButton
PUBLIC	_IID_ISkinPanel
PUBLIC	_DIID__ISkinPanelEvents
PUBLIC	_IID_ISkinLabel
PUBLIC	_CLSID_SkinPanel
PUBLIC	_DIID__ISkinLabelEvents
PUBLIC	_IID_ISkinScrollBar
PUBLIC	_CLSID_SkinLabel
PUBLIC	_DIID__ISkinScrollBarEvents
PUBLIC	_CLSID_SkinScrollBar
PUBLIC	_DIID__ISkinSourceEvents
PUBLIC	_IID_ISkinStorage
PUBLIC	_IID_ISkinPopup
PUBLIC	_IID_IComTransitions
PUBLIC	_IID_ISkinEvent
PUBLIC	_IID_IComProcTextures
PUBLIC	_IID_IComFilters
PUBLIC	_CLSID_SkinSource
PUBLIC	_CLSID_SkinStorage
PUBLIC	_CLSID_SkinPopup
PUBLIC	_CLSID_ComTransitions
PUBLIC	_CLSID_SkinEvent
PUBLIC	_CLSID_ComProcTextures
PUBLIC	_CLSID_ComFilters
PUBLIC	?m_nColors@CSkinEdit@@1PAKA			; CSkinEdit::m_nColors
PUBLIC	?OnRButtonDown@CSkinEdit@@QAEXIVCPoint@@@Z	; CSkinEdit::OnRButtonDown
PUBLIC	?OnChar@CSkinEdit@@QAEXIII@Z			; CSkinEdit::OnChar
PUBLIC	?OnSysChar@CSkinEdit@@QAEXIII@Z			; CSkinEdit::OnSysChar
PUBLIC	?OnKeyDown@CSkinEdit@@QAEXIII@Z			; CSkinEdit::OnKeyDown
PUBLIC	?OnSetFocus@CSkinEdit@@QAEXPAVCWnd@@@Z		; CSkinEdit::OnSetFocus
PUBLIC	?OnMsgFilter@CSkinEdit@@QAEXPAUtagNMHDR@@PAJ@Z	; CSkinEdit::OnMsgFilter
PUBLIC	?OnPaste@CSkinEdit@@QAEXXZ			; CSkinEdit::OnPaste
PUBLIC	?OnCut@CSkinEdit@@QAEXXZ			; CSkinEdit::OnCut
PUBLIC	?OnCopy@CSkinEdit@@QAEXXZ			; CSkinEdit::OnCopy
PUBLIC	?_messageEntries@CSkinEdit@@0QBUAFX_MSGMAP_ENTRY@@B ; CSkinEdit::_messageEntries
PUBLIC	?messageMap@CSkinEdit@@1UAFX_MSGMAP@@B		; CSkinEdit::messageMap
PUBLIC	?_GetBaseMessageMap@CSkinEdit@@KGPBUAFX_MSGMAP@@XZ ; CSkinEdit::_GetBaseMessageMap
PUBLIC	_IID_IInternalConnection
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?m_libid@CComModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CComModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CComModule::m_libid
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?GUID_ATLVer30@ATL@@3U_GUID@@A
_DATA	SEGMENT
?GUID_ATLVer30@ATL@@3U_GUID@@A DD 0b62f5910H		; ATL::GUID_ATLVer30
	DW	06528H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
_DATA	ENDS
;	COMDAT _LIBID_ACTIVESKINLib
CONST	SEGMENT
_LIBID_ACTIVESKINLib DD 0972de6b5H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinForm
CONST	SEGMENT
_IID_ISkinForm DD 0972de6c1H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinObjectDisp
CONST	SEGMENT
_IID_ISkinObjectDisp DD 06cfc9ba1H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ISkinSource
CONST	SEGMENT
_IID_ISkinSource DD 037deb787H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _DIID__ISkinFormEvents
CONST	SEGMENT
_DIID__ISkinFormEvents DD 0972de6c3H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _IID_ISkinFormEvents_Sink
CONST	SEGMENT
_IID_ISkinFormEvents_Sink DD 053fa8d31H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinForm
CONST	SEGMENT
_CLSID_SkinForm DD 0972de6c2H
	DW	08b09H
	DW	011d2H
	DB	0b6H
	DB	052H
	DB	0a1H
	DB	0fdH
	DB	06cH
	DB	0c3H
	DB	042H
	DB	060H
CONST	ENDS
;	COMDAT _DIID__ISkinObjectDispEvents
CONST	SEGMENT
_DIID__ISkinObjectDispEvents DD 06cfc9ba3H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _IID_ICOMScript
CONST	SEGMENT
_IID_ICOMScript DD 04f7ae600H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _IID_IComMorph
CONST	SEGMENT
_IID_IComMorph DD 0322982e0H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _IID_IComMoveSize
CONST	SEGMENT
_IID_IComMoveSize DD 083c2d7a0H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _IID_ISkinButton
CONST	SEGMENT
_IID_ISkinButton DD 053fa8d40H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinObject
CONST	SEGMENT
_CLSID_SkinObject DD 06cfc9ba2H
	DW	0fe87H
	DW	011d2H
	DB	09dH
	DB	0cfH
	DB	0edH
	DB	029H
	DB	0faH
	DB	0feH
	DB	037H
	DB	01dH
CONST	ENDS
;	COMDAT _CLSID_COMScript
CONST	SEGMENT
_CLSID_COMScript DD 04f7ae601H
	DW	0142H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	089H
	DB	0beH
	DB	04eH
	DB	0fbH
	DB	059H
	DB	01eH
CONST	ENDS
;	COMDAT _CLSID_ComMorph
CONST	SEGMENT
_CLSID_ComMorph DD 0322982e1H
	DW	0855H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	0ddH
	DB	0fbH
	DB	03aH
	DB	0b0H
	DB	09eH
	DB	018H
CONST	ENDS
;	COMDAT _CLSID_ComMoveSize
CONST	SEGMENT
_CLSID_ComMoveSize DD 083c2d7a1H
	DW	0de6H
	DW	011d3H
	DB	09dH
	DB	0cfH
	DB	094H
	DB	023H
	DB	0f1H
	DB	0b2H
	DB	056H
	DB	01cH
CONST	ENDS
;	COMDAT _DIID__ISkinButtonEvents
CONST	SEGMENT
_DIID__ISkinButtonEvents DD 053fa8d42H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinButton
CONST	SEGMENT
_CLSID_SkinButton DD 053fa8d41H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinPanel
CONST	SEGMENT
_IID_ISkinPanel DD 053fa8d46H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinPanelEvents
CONST	SEGMENT
_DIID__ISkinPanelEvents DD 053fa8d48H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinLabel
CONST	SEGMENT
_IID_ISkinLabel DD 053fa8d49H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinPanel
CONST	SEGMENT
_CLSID_SkinPanel DD 053fa8d47H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinLabelEvents
CONST	SEGMENT
_DIID__ISkinLabelEvents DD 053fa8d4bH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _IID_ISkinScrollBar
CONST	SEGMENT
_IID_ISkinScrollBar DD 053fa8d4cH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinLabel
CONST	SEGMENT
_CLSID_SkinLabel DD 053fa8d4aH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinScrollBarEvents
CONST	SEGMENT
_DIID__ISkinScrollBarEvents DD 053fa8d4eH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinScrollBar
CONST	SEGMENT
_CLSID_SkinScrollBar DD 053fa8d4dH
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _DIID__ISkinSourceEvents
CONST	SEGMENT
_DIID__ISkinSourceEvents DD 037deb788H
	DW	02d9bH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0c4H
	DB	023H
	DB	0e6H
	DB	054H
	DB	02eH
	DB	010H
CONST	ENDS
;	COMDAT _IID_ISkinStorage
CONST	SEGMENT
_IID_ISkinStorage DD 0ee11629bH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _IID_ISkinPopup
CONST	SEGMENT
_IID_ISkinPopup DD 0ca478da0H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _IID_IComTransitions
CONST	SEGMENT
_IID_IComTransitions DD 03c01387aH
	DW	06ac2H
	DW	04ef1H
	DB	0bdH
	DB	0a2H
	DB	0ecH
	DB	05dH
	DB	026H
	DB	0e3H
	DB	0b0H
	DB	065H
CONST	ENDS
;	COMDAT _IID_ISkinEvent
CONST	SEGMENT
_IID_ISkinEvent DD 055dd814eH
	DW	0a1b7H
	DW	04808H
	DB	096H
	DB	025H
	DB	04fH
	DB	075H
	DB	0a3H
	DB	0faH
	DB	0d8H
	DB	0a7H
CONST	ENDS
;	COMDAT _IID_IComProcTextures
CONST	SEGMENT
_IID_IComProcTextures DD 0dce47f78H
	DW	08a6cH
	DW	04c6dH
	DB	0a6H
	DB	0f7H
	DB	08bH
	DB	0e4H
	DB	042H
	DB	071H
	DB	027H
	DB	0c4H
CONST	ENDS
;	COMDAT _IID_IComFilters
CONST	SEGMENT
_IID_IComFilters DD 0920ff31fH
	DW	0ca25H
	DW	0451aH
	DB	097H
	DB	038H
	DB	034H
	DB	044H
	DB	0fcH
	DB	020H
	DB	06bH
	DB	0ccH
CONST	ENDS
;	COMDAT _CLSID_SkinSource
CONST	SEGMENT
_CLSID_SkinSource DD 053fa8d44H
	DW	02cddH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	0d3H
	DB	0cdH
	DB	040H
	DB	078H
	DB	098H
	DB	02aH
CONST	ENDS
;	COMDAT _CLSID_SkinStorage
CONST	SEGMENT
_CLSID_SkinStorage DD 0ee11629cH
	DW	036dfH
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	089H
	DB	0d6H
	DB	0dbH
	DB	0bbH
	DB	0a8H
	DB	00H
CONST	ENDS
;	COMDAT _CLSID_SkinPopup
CONST	SEGMENT
_CLSID_SkinPopup DD 0ca478da1H
	DW	03920H
	DW	011d3H
	DB	09dH
	DB	0d0H
	DB	080H
	DB	067H
	DB	0e4H
	DB	0a0H
	DB	066H
	DB	03H
CONST	ENDS
;	COMDAT _CLSID_ComTransitions
CONST	SEGMENT
_CLSID_ComTransitions DD 03c6d21d6H
	DW	07470H
	DW	04555H
	DB	0a8H
	DB	0fbH
	DB	06cH
	DB	022H
	DB	092H
	DB	0b3H
	DB	09cH
	DB	046H
CONST	ENDS
;	COMDAT _CLSID_SkinEvent
CONST	SEGMENT
_CLSID_SkinEvent DD 08f59c2a4H
	DW	04c01H
	DW	04451H
	DB	0beH
	DB	05bH
	DB	09H
	DB	078H
	DB	07bH
	DB	012H
	DB	03aH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComProcTextures
CONST	SEGMENT
_CLSID_ComProcTextures DD 0bf1b5d50H
	DW	03c5cH
	DW	048ceH
	DB	0b9H
	DB	091H
	DB	0eH
	DB	086H
	DB	0d2H
	DB	06fH
	DB	06fH
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_ComFilters
CONST	SEGMENT
_CLSID_ComFilters DD 0c4d7e3c7H
	DW	03c26H
	DW	04052H
	DB	0a9H
	DB	093H
	DB	071H
	DB	0e5H
	DB	00H
	DB	0eaH
	DB	08cH
	DB	05H
CONST	ENDS
CONST	SEGMENT
?messageMap@CSkinEdit@@1UAFX_MSGMAP@@B DD FLAT:?_GetBaseMessageMap@CSkinEdit@@KGPBUAFX_MSGMAP@@XZ ; CSkinEdit::messageMap
	DD	FLAT:?_messageEntries@CSkinEdit@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CSkinEdit@@0QBUAFX_MSGMAP_ENTRY@@B DD 0204H ; CSkinEdit::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	031H
	DD	FLAT:?OnRButtonDown@CSkinEdit@@QAEXIVCPoint@@@Z
	DD	0102H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnChar@CSkinEdit@@QAEXIII@Z
	DD	0106H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnSysChar@CSkinEdit@@QAEXIII@Z
	DD	07H
	DD	00H
	DD	00H
	DD	00H
	DD	017H
	DD	FLAT:?OnSetFocus@CSkinEdit@@QAEXPAVCWnd@@@Z
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	FLAT:?OnKeyDown@CSkinEdit@@QAEXIII@Z
	DD	0bc4eH
	DD	0700H
	DD	00H
	DD	00H
	DD	026H
	DD	FLAT:?OnMsgFilter@CSkinEdit@@QAEXPAUtagNMHDR@@PAJ@Z
	DD	0111H
	DD	00H
	DD	0302H
	DD	0302H
	DD	0cH
	DD	FLAT:?OnPaste@CSkinEdit@@QAEXXZ
	DD	0111H
	DD	00H
	DD	0300H
	DD	0300H
	DD	0cH
	DD	FLAT:?OnCut@CSkinEdit@@QAEXXZ
	DD	0111H
	DD	00H
	DD	0301H
	DD	0301H
	DD	0cH
	DD	FLAT:?OnCopy@CSkinEdit@@QAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
_DATA	SEGMENT
?defaultFont@@3PADA DB 'Verdana', 00H			; defaultFont
	ORG $+22
	ORG $+2
?wingdingFont@@3PADA DB 'RealmEmotes', 00H		; wingdingFont
	ORG $+18
	ORG $+2
?EmoteToChar@@3PADA DB 031H				; EmoteToChar
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	030H
	DB	02dH
	DB	069H
	DB	06aH
	DB	067H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
?CharToEmote@@3PADA DB 00H				; CharToEmote
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08aH
	DB	00H
	DB	00H
	DB	089H
	DB	080H
	DB	081H
	DB	082H
	DB	083H
	DB	084H
	DB	085H
	DB	086H
	DB	087H
	DB	088H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08dH
	DB	00H
	DB	08bH
	DB	08cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08dH
	DB	00H
	DB	08bH
	DB	08cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
?m_nColors@CSkinEdit@@1PAKA DD 00H			; CSkinEdit::m_nColors
	DD	0ffffH
	DD	0ffccH
	DD	0cc66ffH
	DD	0ff99ffH
	DD	0ff99ccH
	DD	0ff6699H
	DD	0ff6666H
	DD	0ffcc33H
	DD	0ffcc99H
	DD	0ffff99H
	DD	099ff99H
	DD	066ccffH
	DD	03399ffH
	DD	03366ffH
	DD	09900ffH
	DD	0ff00ccH
	DD	0ff0099H
	DD	0ff0033H
	DD	0ff6600H
	DD	0cc9900H
	DD	0ccff33H
	DD	033ff33H
	DD	033cc66H
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0fbfffbH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	09babH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0a36347H
	DD	0cfa383H
	DD	0ffe7cbH
	DD	0ffffffH
	DD	0ffffffH
	DD	03333e7H
	DD	0ffffffH
	DD	09f9fffH
	DD	0ffffffH
	DD	0ffffffH
	DD	037b3f7H
	DD	0ffffffH
	DD	09bf3ffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0a763e7H
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0c7cb83H
	DD	0ffffcfH
	DD	0ffffffH
	DD	0ffffffH
	DD	05fab37H
	DD	08fd060H
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0b37fbfH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0c3c3c3H
	DD	0c6ce84H
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0577fbbH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	051d6H
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0ffffffH
	DD	0fffffaH
_DATA	ENDS
EXTRN	__imp_?messageMap@CWnd@@1UAFX_MSGMAP@@B:QWORD
_TEXT	SEGMENT
?_GetBaseMessageMap@CSkinEdit@@KGPBUAFX_MSGMAP@@XZ PROC NEAR ; CSkinEdit::_GetBaseMessageMap

; 10   : BEGIN_MESSAGE_MAP ( CSkinEdit, CWnd )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?messageMap@CWnd@@1UAFX_MSGMAP@@B
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_GetBaseMessageMap@CSkinEdit@@KGPBUAFX_MSGMAP@@XZ ENDP	; CSkinEdit::_GetBaseMessageMap
_TEXT	ENDS
PUBLIC	?GetMessageMap@CSkinEdit@@MBEPBUAFX_MSGMAP@@XZ	; CSkinEdit::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CSkinEdit@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CSkinEdit::GetMessageMap

; 10   : BEGIN_MESSAGE_MAP ( CSkinEdit, CWnd )

  0000a	55		 push	 ebp
  0000b	8b ec		 mov	 ebp, esp
  0000d	51		 push	 ecx
  0000e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?messageMap@CSkinEdit@@1UAFX_MSGMAP@@B ; CSkinEdit::messageMap
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetMessageMap@CSkinEdit@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CSkinEdit::GetMessageMap
_TEXT	ENDS
PUBLIC	?ValidTextColor@CSkinEdit@@SAHH@Z		; CSkinEdit::ValidTextColor
_TEXT	SEGMENT
_nColor$ = 8
?ValidTextColor@CSkinEdit@@SAHH@Z PROC NEAR		; CSkinEdit::ValidTextColor

; 108  : {

  0001a	55		 push	 ebp
  0001b	8b ec		 mov	 ebp, esp

; 109  : 	if ( m_nColors[ nColor ] != 0x00ffffff )

  0001d	8b 45 08	 mov	 eax, DWORD PTR _nColor$[ebp]
  00020	81 3c 85 00 00
	00 00 ff ff ff
	00		 cmp	 DWORD PTR ?m_nColors@CSkinEdit@@1PAKA[eax*4], 16777215 ; 00ffffffH
  0002b	74 07		 je	 SHORT $L144405

; 110  : 		return 1;

  0002d	b8 01 00 00 00	 mov	 eax, 1
  00032	eb 02		 jmp	 SHORT $L144404
$L144405:

; 111  : 
; 112  : 	return 0;

  00034	33 c0		 xor	 eax, eax
$L144404:

; 113  : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?ValidTextColor@CSkinEdit@@SAHH@Z ENDP			; CSkinEdit::ValidTextColor
_TEXT	ENDS
PUBLIC	??0CRect@@QAE@XZ				; CRect::CRect
PUBLIC	?Height@CRect@@QBEHXZ				; CRect::Height
PUBLIC	??BCRect@@QAEPAUtagRECT@@XZ			; CRect::operator tagRECT *
PUBLIC	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z	; CWnd::DoDataExchange
PUBLIC	?BeginModalState@CWnd@@UAEXXZ			; CWnd::BeginModalState
PUBLIC	?EndModalState@CWnd@@UAEXXZ			; CWnd::EndModalState
PUBLIC	??_ECSkinEdit@@WGA@AEPAXI@Z			; CSkinEdit::`vector deleting destructor'
PUBLIC	??_ECSkinEdit@@WHE@AEPAXI@Z			; CSkinEdit::`vector deleting destructor'
PUBLIC	??0CSkinObj@@QAE@ABV0@@Z			; CSkinObj::CSkinObj
PUBLIC	?Serialize@CObject@@UAEXAAVCArchive@@@Z		; CObject::Serialize
PUBLIC	?AssertValid@CObject@@UBEXXZ			; CObject::AssertValid
PUBLIC	?Dump@CObject@@UBEXAAVCDumpContext@@@Z		; CObject::Dump
PUBLIC	??0CRichEditCtrl@@QAE@XZ			; CRichEditCtrl::CRichEditCtrl
PUBLIC	??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
PUBLIC	?GetCharPos@CRichEditCtrl@@QBE?AVCPoint@@J@Z	; CRichEditCtrl::GetCharPos
PUBLIC	?UpdateMe@CSkinEdit@@UAEXXZ			; CSkinEdit::UpdateMe
PUBLIC	?GetEventMask@CRichEditCtrl@@QBEJXZ		; CRichEditCtrl::GetEventMask
PUBLIC	?SetRange@CSkinEdit@@UAEXHH@Z			; CSkinEdit::SetRange
PUBLIC	?OnReturn@CSkinEdit@@UAEXXZ			; CSkinEdit::OnReturn
PUBLIC	?OnEscape@CSkinEdit@@UAEXXZ			; CSkinEdit::OnEscape
PUBLIC	?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z	; CRichEditCtrl::SetBackgroundColor
PUBLIC	?SetEventMask@CRichEditCtrl@@QAEKK@Z		; CRichEditCtrl::SetEventMask
PUBLIC	?OnMouseWheel@CSkinEdit@@UAEXIF@Z		; CSkinEdit::OnMouseWheel
PUBLIC	??_7CSkinEdit@@6BCRichEditCtrl@@@		; CSkinEdit::`vftable'
PUBLIC	??_7CSkinEdit@@6BCScrollable@@@			; CSkinEdit::`vftable'
PUBLIC	??_7CSkinEdit@@6BCSkinCtrl@@@			; CSkinEdit::`vftable'
PUBLIC	??_7CSkinEdit@@6BCMouseWheelable@@@		; CSkinEdit::`vftable'
PUBLIC	??_GCSkinEdit@@UAEPAXI@Z			; CSkinEdit::`scalar deleting destructor'
PUBLIC	??_ECSkinEdit@@UAEPAXI@Z			; CSkinEdit::`vector deleting destructor'
PUBLIC	??0CPoint@@QAE@XZ				; CPoint::CPoint
EXTRN	?OnMouseDown@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseDown
EXTRN	?OnMouseUp@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseUp
EXTRN	?OnActivate@CSkinCtrl@@UAEXFF@Z:NEAR		; CSkinCtrl::OnActivate
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	??0CScrollable@@QAE@XZ:NEAR			; CScrollable::CScrollable
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?SetLocation@CScrollable@@UAEXM@Z:NEAR		; CScrollable::SetLocation
EXTRN	?ChangeLocation@CScrollable@@UAEXH@Z:NEAR	; CScrollable::ChangeLocation
EXTRN	?ChangePage@CScrollable@@UAEXH@Z:NEAR		; CScrollable::ChangePage
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?UpdateScrollBar@CScrollable@@UAEXXZ:NEAR	; CScrollable::UpdateScrollBar
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	?LinkToWindow@CMouseWheelable@@IAEXPAUHWND__@@@Z:NEAR ; CMouseWheelable::LinkToWindow
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:NEAR ; CWnd::GetSuperWndProcAddr
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:NEAR ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:NEAR ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:NEAR		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:NEAR		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:NEAR		; CWnd::OnChildNotify
EXTRN	??1CSkinObj@@UAE@XZ:NEAR			; CSkinObj::~CSkinObj
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:NEAR		; CWnd::CheckAutoCenter
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z:NEAR	; CSkinObj::GetRect
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:NEAR			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:NEAR		; CWnd::OnFinalRelease
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:NEAR ; CWnd::SetOccDialogInfo
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:NEAR		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:NEAR ; CWnd::Create
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:NEAR		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:NEAR ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:NEAR	; CWnd::CalcWindowRect
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	?SetWindowTextA@CWnd@@QAEXPBD@Z:NEAR		; CWnd::SetWindowTextA
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:NEAR ; CWnd::OnToolHitTest
EXTRN	??0CMouseWheelable@@QAE@XZ:NEAR			; CMouseWheelable::CMouseWheelable
EXTRN	??1CMouseWheelable@@UAE@XZ:NEAR			; CMouseWheelable::~CMouseWheelable
EXTRN	?GetRuntimeClass@CRichEditCtrl@@UBEPAUCRuntimeClass@@XZ:NEAR ; CRichEditCtrl::GetRuntimeClass
EXTRN	?Create@CRichEditCtrl@@QAEHKABUtagRECT@@PAVCWnd@@I@Z:NEAR ; CRichEditCtrl::Create
EXTRN	_strcpy:NEAR
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:NEAR ; CWnd::GetScrollBarCtrl
EXTRN	?SetDefaultCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z:NEAR ; CRichEditCtrl::SetDefaultCharFormat
EXTRN	??1CRichEditCtrl@@UAE@XZ:NEAR			; CRichEditCtrl::~CRichEditCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:NEAR			; CWnd::WinHelpA
EXTRN	?ContinueModal@CWnd@@UAEHXZ:NEAR		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:NEAR		; CWnd::EndModalLoop
EXTRN	??0CSkinCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z:NEAR ; CSkinCtrl::CSkinCtrl
EXTRN	??1CSkinCtrl@@UAE@XZ:NEAR			; CSkinCtrl::~CSkinCtrl
EXTRN	?UpdateTracking@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::UpdateTracking
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:NEAR			; CWnd::OnCommand
EXTRN	?Refresh@CSkinCtrl@@UAEXXZ:NEAR			; CSkinCtrl::Refresh
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:NEAR		; CWnd::OnNotify
EXTRN	?Disable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Disable
EXTRN	?IsDisabled@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::IsDisabled
EXTRN	?Enable@CSkinCtrl@@UAEHXZ:NEAR			; CSkinCtrl::Enable
EXTRN	?Activate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Activate
EXTRN	?Deactivate@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Deactivate
EXTRN	?Highlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Highlight
EXTRN	?Unhighlight@CSkinCtrl@@UAEHXZ:NEAR		; CSkinCtrl::Unhighlight
EXTRN	?ShowNormal@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowNormal
EXTRN	?ShowDisabled@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowDisabled
EXTRN	?ShowPressed@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowPressed
EXTRN	?ShowHighlighted@CSkinCtrl@@UAEXXZ:NEAR		; CSkinCtrl::ShowHighlighted
EXTRN	?OnMouseMove@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseMove
EXTRN	?OnMouseIn@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseIn
EXTRN	?OnMouseOut@CSkinCtrl@@UAEXHFF@Z:NEAR		; CSkinCtrl::OnMouseOut
_BSS	SEGMENT
$SG144438 DB	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_7CSkinEdit@@6BCRichEditCtrl@@@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinedit.cpp
CONST	SEGMENT
??_7CSkinEdit@@6BCRichEditCtrl@@@ DD FLAT:?GetRuntimeClass@CRichEditCtrl@@UBEPAUCRuntimeClass@@XZ ; CSkinEdit::`vftable'
	DD	FLAT:??_ECSkinEdit@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinEdit@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?OnReturn@CSkinEdit@@UAEXXZ
	DD	FLAT:?OnEscape@CSkinEdit@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CSkinEdit@@6BCScrollable@@@
CONST	SEGMENT
??_7CSkinEdit@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinEdit@@UAEXXZ ; CSkinEdit::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CSkinEdit@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CScrollable@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CSkinEdit@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CSkinEdit@@6BCSkinCtrl@@@ DD FLAT:??_ECSkinEdit@@WGA@AEPAXI@Z ; CSkinEdit::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CSkinEdit@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CSkinEdit@@6BCMouseWheelable@@@ DD FLAT:??_ECSkinEdit@@WHE@AEPAXI@Z ; CSkinEdit::`vftable'
	DD	FLAT:?OnMouseWheel@CSkinEdit@@UAEXIF@Z
CONST	ENDS
_DATA	SEGMENT
$SG144433 DB	'W', 0aH, 'W', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T150087 DD	019930520H
	DD	04H
	DD	FLAT:$T150090
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150090 DD	0ffffffffH
	DD	FLAT:$L150079
	DD	00H
	DD	FLAT:$L150080
	DD	01H
	DD	FLAT:$L150082
	DD	02H
	DD	FLAT:$L150083
xdata$x	ENDS
_TEXT	SEGMENT
_linkObj$ = 8
_pParent$ = 16
_nID$ = 20
_dwStyle$ = 24
_bEmotes$ = 28
_bHiliteOnFocus$ = 32
_bCloseFocusLost$ = 36
_this$ = -68
_rect$ = -28
_Char1$144434 = -36
_Char2$144435 = -44
$T150076 = -48
$T150077 = -56
$T150078 = -64
__$EHRec$ = -12
??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z PROC NEAR ; CSkinEdit::CSkinEdit

; 117  : {

  00038	55		 push	 ebp
  00039	8b ec		 mov	 ebp, esp
  0003b	6a ff		 push	 -1
  0003d	68 00 00 00 00	 push	 $L150088
  00042	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00048	50		 push	 eax
  00049	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00050	83 ec 40	 sub	 esp, 64			; 00000040H
  00053	89 4d bc	 mov	 DWORD PTR _this$[ebp], ecx
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ??0CRichEditCtrl@@QAE@XZ ; CRichEditCtrl::CRichEditCtrl
  00065	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00069	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	83 c1 40	 add	 ecx, 64			; 00000040H
  0006f	e8 00 00 00 00	 call	 ??0CScrollable@@QAE@XZ	; CScrollable::CScrollable
  00074	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  00077	50		 push	 eax
  00078	83 ec 08	 sub	 esp, 8
  0007b	8b cc		 mov	 ecx, esp
  0007d	89 65 d0	 mov	 DWORD PTR $T150076[ebp], esp
  00080	8d 55 08	 lea	 edx, DWORD PTR _linkObj$[ebp]
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  00089	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  0008c	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	83 c1 60	 add	 ecx, 96			; 00000060H
  00092	e8 00 00 00 00	 call	 ??0CSkinCtrl@@QAE@VCSkinObj@@PAVCSkinWnd@@@Z ; CSkinCtrl::CSkinCtrl
  00097	89 45 b4	 mov	 DWORD PTR -76+[ebp], eax
  0009a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0009e	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	83 c1 74	 add	 ecx, 116		; 00000074H
  000a4	e8 00 00 00 00	 call	 ??0CMouseWheelable@@QAE@XZ ; CMouseWheelable::CMouseWheelable
  000a9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000ad	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinEdit@@6BCRichEditCtrl@@@ ; CSkinEdit::`vftable'
  000b6	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CSkinEdit@@6BCScrollable@@@ ; CSkinEdit::`vftable'
  000c0	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  000c3	c7 42 60 00 00
	00 00		 mov	 DWORD PTR [edx+96], OFFSET FLAT:??_7CSkinEdit@@6BCSkinCtrl@@@ ; CSkinEdit::`vftable'
  000ca	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CSkinEdit@@6BCMouseWheelable@@@ ; CSkinEdit::`vftable'

; 118  : 	m_bShown = true;

  000d4	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	c7 81 94 00 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+148], 1

; 119  : 	m_bFocusBottom = true;

  000e1	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  000e4	c7 42 5c 01 00
	00 00		 mov	 DWORD PTR [edx+92], 1

; 120  : 
; 121  : 	m_Format.cbSize = sizeof ( CHARFORMAT );

  000eb	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	c7 80 98 00 00
	00 3c 00 00 00	 mov	 DWORD PTR [eax+152], 60	; 0000003cH

; 122  : 	m_Format.dwMask = CFM_FACE | CFM_SIZE | CFM_COLOR | CFM_CHARSET | CFM_BOLD | CFE_ITALIC;

  000f8	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	c7 81 9c 00 00
	00 03 00 00 e8	 mov	 DWORD PTR [ecx+156], -402653181 ; e8000003H

; 123  : 	m_Format.dwEffects = 0;

  00105	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  00108	c7 82 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+160], 0

; 124  : 	m_Format.yHeight = 160;

  00112	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  00115	c7 80 a4 00 00
	00 a0 00 00 00	 mov	 DWORD PTR [eax+164], 160 ; 000000a0H

; 125  : 	m_Format.bCharSet = ANSI_CHARSET;

  0011f	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	c6 81 b0 00 00
	00 00		 mov	 BYTE PTR [ecx+176], 0

; 126  : 	m_Format.bPitchAndFamily = 2;

  00129	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  0012c	c6 82 b1 00 00
	00 02		 mov	 BYTE PTR [edx+177], 2

; 127  : 	strcpy ( m_Format.szFaceName, defaultFont );

  00133	68 00 00 00 00	 push	 OFFSET FLAT:?defaultFont@@3PADA ; defaultFont
  00138	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  0013b	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 _strcpy
  00146	83 c4 08	 add	 esp, 8

; 128  : 	m_Format.crTextColor = RGB(255,255,255);

  00149	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	c7 81 ac 00 00
	00 ff ff ff 00	 mov	 DWORD PTR [ecx+172], 16777215 ; 00ffffffH

; 129  : 	
; 130  : 	CRect rect;

  00156	8d 4d e4	 lea	 ecx, DWORD PTR _rect$[ebp]
  00159	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 131  : 	linkObj.GetRect ( rect );

  0015e	8d 4d e4	 lea	 ecx, DWORD PTR _rect$[ebp]
  00161	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  00166	50		 push	 eax
  00167	8d 4d 08	 lea	 ecx, DWORD PTR _linkObj$[ebp]
  0016a	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 132  : 
; 133  : 	dwStyle |= WS_VISIBLE;

  0016f	8b 55 18	 mov	 edx, DWORD PTR _dwStyle$[ebp]
  00172	81 ca 00 00 00
	10		 or	 edx, 268435456		; 10000000H
  00178	89 55 18	 mov	 DWORD PTR _dwStyle$[ebp], edx

; 134  : 
; 135  : 	m_dwStyle = dwStyle;

  0017b	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  0017e	8b 4d 18	 mov	 ecx, DWORD PTR _dwStyle$[ebp]
  00181	89 48 7c	 mov	 DWORD PTR [eax+124], ecx

; 136  : 
; 137  : 	CRichEditCtrl::Create ( dwStyle, rect, (CWnd*) pParent, nID );

  00184	8b 55 14	 mov	 edx, DWORD PTR _nID$[ebp]
  00187	52		 push	 edx
  00188	8b 45 10	 mov	 eax, DWORD PTR _pParent$[ebp]
  0018b	50		 push	 eax
  0018c	8d 4d e4	 lea	 ecx, DWORD PTR _rect$[ebp]
  0018f	51		 push	 ecx
  00190	8b 55 18	 mov	 edx, DWORD PTR _dwStyle$[ebp]
  00193	52		 push	 edx
  00194	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	e8 00 00 00 00	 call	 ?Create@CRichEditCtrl@@QAEHKABUtagRECT@@PAVCWnd@@I@Z ; CRichEditCtrl::Create

; 138  : 
; 139  : 	SetDefaultCharFormat ( m_Format );

  0019c	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  0019f	05 98 00 00 00	 add	 eax, 152		; 00000098H
  001a4	50		 push	 eax
  001a5	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a8	e8 00 00 00 00	 call	 ?SetDefaultCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z ; CRichEditCtrl::SetDefaultCharFormat

; 140  : 	this->SetBackgroundColor ( FALSE, RGB(0,0,0) );

  001ad	6a 00		 push	 0
  001af	6a 00		 push	 0
  001b1	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b4	e8 00 00 00 00	 call	 ?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z ; CRichEditCtrl::SetBackgroundColor

; 141  : 
; 142  : 	m_bEmotes = bEmotes;

  001b9	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  001bc	8a 55 1c	 mov	 dl, BYTE PTR _bEmotes$[ebp]
  001bf	88 91 80 00 00
	00		 mov	 BYTE PTR [ecx+128], dl

; 143  : 	m_bHiliteOnFocus = bHiliteOnFocus;

  001c5	8b 45 20	 mov	 eax, DWORD PTR _bHiliteOnFocus$[ebp]
  001c8	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001cd	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d0	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 144  : 	m_bCloseOnFocusLoss = bCloseFocusLost;

  001d6	8b 55 24	 mov	 edx, DWORD PTR _bCloseFocusLost$[ebp]
  001d9	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  001df	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  001e2	89 90 88 00 00
	00		 mov	 DWORD PTR [eax+136], edx

; 145  : 	m_bIsAlnum = false;

  001e8	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  001eb	c7 81 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+140], 0

; 146  : 	m_bIsSpace = true;

  001f5	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  001f8	c7 82 90 00 00
	00 01 00 00 00	 mov	 DWORD PTR [edx+144], 1

; 147  : 
; 148  : 	if ( m_dwStyle & MULTILINE ) {

  00202	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  00205	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00208	83 e1 04	 and	 ecx, 4
  0020b	85 c9		 test	 ecx, ecx
  0020d	0f 84 8a 00 00
	00		 je	 $L144432

; 149  : 		SetWindowText( "W\nW" );

  00213	68 00 00 00 00	 push	 OFFSET FLAT:$SG144433
  00218	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021b	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 150  : 
; 151  : 		CPoint	Char1;

  00220	8d 4d dc	 lea	 ecx, DWORD PTR _Char1$144434[ebp]
  00223	e8 00 00 00 00	 call	 ??0CPoint@@QAE@XZ	; CPoint::CPoint

; 152  : 		CPoint	Char2;

  00228	8d 4d d4	 lea	 ecx, DWORD PTR _Char2$144435[ebp]
  0022b	e8 00 00 00 00	 call	 ??0CPoint@@QAE@XZ	; CPoint::CPoint

; 153  : 
; 154  : 		Char1 = GetCharPos( 0 );

  00230	6a 00		 push	 0
  00232	8d 55 c8	 lea	 edx, DWORD PTR $T150077[ebp]
  00235	52		 push	 edx
  00236	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00239	e8 00 00 00 00	 call	 ?GetCharPos@CRichEditCtrl@@QBE?AVCPoint@@J@Z ; CRichEditCtrl::GetCharPos
  0023e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00240	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00243	89 4d dc	 mov	 DWORD PTR _Char1$144434[ebp], ecx
  00246	89 55 e0	 mov	 DWORD PTR _Char1$144434[ebp+4], edx

; 155  : 		Char2 = GetCharPos( 2 );

  00249	6a 02		 push	 2
  0024b	8d 45 c0	 lea	 eax, DWORD PTR $T150078[ebp]
  0024e	50		 push	 eax
  0024f	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00252	e8 00 00 00 00	 call	 ?GetCharPos@CRichEditCtrl@@QBE?AVCPoint@@J@Z ; CRichEditCtrl::GetCharPos
  00257	8b 08		 mov	 ecx, DWORD PTR [eax]
  00259	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0025c	89 4d d4	 mov	 DWORD PTR _Char2$144435[ebp], ecx
  0025f	89 55 d8	 mov	 DWORD PTR _Char2$144435[ebp+4], edx

; 156  : 
; 157  : 		m_nLineSize = Char2.y - Char1.y;

  00262	8b 45 d8	 mov	 eax, DWORD PTR _Char2$144435[ebp+4]
  00265	2b 45 e0	 sub	 eax, DWORD PTR _Char1$144434[ebp+4]
  00268	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0026b	89 81 d4 00 00
	00		 mov	 DWORD PTR [ecx+212], eax

; 158  : 
; 159  : 		m_nPageSize = ( rect.Height() - 2 * Char1.y ) / m_nLineSize;

  00271	8d 4d e4	 lea	 ecx, DWORD PTR _rect$[ebp]
  00274	e8 00 00 00 00	 call	 ?Height@CRect@@QBEHXZ	; CRect::Height
  00279	8b 55 e0	 mov	 edx, DWORD PTR _Char1$144434[ebp+4]
  0027c	d1 e2		 shl	 edx, 1
  0027e	2b c2		 sub	 eax, edx
  00280	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00283	99		 cdq
  00284	f7 b9 d4 00 00
	00		 idiv	 DWORD PTR [ecx+212]
  0028a	8b 55 bc	 mov	 edx, DWORD PTR _this$[ebp]
  0028d	89 42 58	 mov	 DWORD PTR [edx+88], eax

; 160  : 
; 161  : 		SetWindowText( "" );

  00290	68 00 00 00 00	 push	 OFFSET FLAT:$SG144438
  00295	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00298	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA
$L144432:

; 163  : 
; 164  : 	LinkToWindow( CRichEditCtrl::m_hWnd );

  0029d	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  002a0	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  002a3	51		 push	 ecx
  002a4	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  002a7	83 c1 74	 add	 ecx, 116		; 00000074H
  002aa	e8 00 00 00 00	 call	 ?LinkToWindow@CMouseWheelable@@IAEXPAUHWND__@@@Z ; CMouseWheelable::LinkToWindow

; 165  : 
; 166  : 	// enable keyboard event filtering...
; 167  : 	SetEventMask ( GetEventMask() | ENM_KEYEVENTS );

  002af	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b2	e8 00 00 00 00	 call	 ?GetEventMask@CRichEditCtrl@@QBEJXZ ; CRichEditCtrl::GetEventMask
  002b7	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  002bc	50		 push	 eax
  002bd	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  002c0	e8 00 00 00 00	 call	 ?SetEventMask@CRichEditCtrl@@QAEKK@Z ; CRichEditCtrl::SetEventMask

; 168  : }

  002c5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002cc	8d 4d 08	 lea	 ecx, DWORD PTR _linkObj$[ebp]
  002cf	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  002d4	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  002d7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002da	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002e1	8b e5		 mov	 esp, ebp
  002e3	5d		 pop	 ebp
  002e4	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
text$x	SEGMENT
$L150079:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _linkObj$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  00008	c3		 ret	 0
$L150080:
  00009	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??1CRichEditCtrl@@UAE@XZ ; CRichEditCtrl::~CRichEditCtrl
  00011	c3		 ret	 0
$L150082:
  00012	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 60	 add	 ecx, 96			; 00000060H
  00018	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  0001d	c3		 ret	 0
$L150083:
  0001e	8b 4d bc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 74	 add	 ecx, 116		; 00000074H
  00024	e8 00 00 00 00	 call	 ??1CMouseWheelable@@UAE@XZ ; CMouseWheelable::~CMouseWheelable
  00029	c3		 ret	 0
$L150088:
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150087
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ENDP	; CSkinEdit::CSkinEdit
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
PUBLIC	??1CSkinEdit@@UAE@XZ				; CSkinEdit::~CSkinEdit
;	COMDAT ??_GCSkinEdit@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinEdit@@UAEPAXI@Z PROC NEAR			; CSkinEdit::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinEdit@@UAE@XZ	; CSkinEdit::~CSkinEdit
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L144443
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L144443:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCSkinEdit@@UAEPAXI@Z ENDP				; CSkinEdit::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7CSkinObj@@6B@				; CSkinObj::`vftable'
PUBLIC	??_GCSkinObj@@UAEPAXI@Z				; CSkinObj::`scalar deleting destructor'
PUBLIC	??_ECSkinObj@@UAEPAXI@Z				; CSkinObj::`vector deleting destructor'
;	COMDAT ??_7CSkinObj@@6B@
CONST	SEGMENT
??_7CSkinObj@@6B@ DD FLAT:??_ECSkinObj@@UAEPAXI@Z	; CSkinObj::`vftable'
CONST	ENDS
;	COMDAT ??0CSkinObj@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8
_this$ = -4
??0CSkinObj@@QAE@ABV0@@Z PROC NEAR			; CSkinObj::CSkinObj, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinObj@@6B@ ; CSkinObj::`vftable'
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CSkinObj@@QAE@ABV0@@Z ENDP				; CSkinObj::CSkinObj
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T150107 DD	019930520H
	DD	02H
	DD	FLAT:$T150109
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150109 DD	0ffffffffH
	DD	FLAT:$L150099
	DD	00H
	DD	FLAT:$L150102
xdata$x	ENDS
;	COMDAT ??1CSkinEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??1CSkinEdit@@UAE@XZ PROC NEAR				; CSkinEdit::~CSkinEdit, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L150108
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00025	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  00029	74 0b		 je	 SHORT $L150097
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c0 74	 add	 eax, 116		; 00000074H
  00031	89 45 ec	 mov	 DWORD PTR -20+[ebp], eax
  00034	eb 07		 jmp	 SHORT $L150098
$L150097:
  00036	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR -20+[ebp], 0
$L150098:
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR -20+[ebp]
  00040	e8 00 00 00 00	 call	 ??1CMouseWheelable@@UAE@XZ ; CMouseWheelable::~CMouseWheelable
  00045	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00049	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  0004d	74 0b		 je	 SHORT $L150095
  0004f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	83 c1 60	 add	 ecx, 96			; 00000060H
  00055	89 4d e8	 mov	 DWORD PTR -24+[ebp], ecx
  00058	eb 07		 jmp	 SHORT $L150096
$L150095:
  0005a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L150096:
  00061	8b 4d e8	 mov	 ecx, DWORD PTR -24+[ebp]
  00064	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ??1CRichEditCtrl@@UAE@XZ ; CRichEditCtrl::~CRichEditCtrl
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L150099:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CRichEditCtrl@@UAE@XZ ; CRichEditCtrl::~CRichEditCtrl
  00008	c3		 ret	 0
$L150102:
  00009	83 7d f0 00	 cmp	 DWORD PTR _this$[ebp], 0
  0000d	0f 84 0e 00 00
	00		 je	 $L150100
  00013	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00016	83 c0 60	 add	 eax, 96			; 00000060H
  00019	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  0001c	e9 07 00 00 00	 jmp	 $L150101
$L150100:
  00021	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR -24+[ebp], 0
$L150101:
  00028	8b 4d e8	 mov	 ecx, DWORD PTR -24+[ebp]
  0002b	e8 00 00 00 00	 call	 ??1CSkinCtrl@@UAE@XZ	; CSkinCtrl::~CSkinCtrl
  00030	c3		 ret	 0
$L150108:
  00031	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150107
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CSkinEdit@@UAE@XZ ENDP				; CSkinEdit::~CSkinEdit
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??_GCSkinObj@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinObj@@UAEPAXI@Z PROC NEAR			; CSkinObj::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 0c		 je	 SHORT $L144451
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00022	83 c4 04	 add	 esp, 4
$L144451:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCSkinObj@@UAEPAXI@Z ENDP				; CSkinObj::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__real@4@00000000000000000000
PUBLIC	__real@4@4003a000000000000000
PUBLIC	?SetFont@CSkinEdit@@IAEJPBDM@Z			; CSkinEdit::SetFont
EXTRN	__ftol:NEAR
EXTRN	__fltused:NEAR
EXTRN	?GetSel@CRichEditCtrl@@QBEXAAJ0@Z:NEAR		; CRichEditCtrl::GetSel
;	COMDAT __real@4@00000000000000000000
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinedit.cpp
CONST	SEGMENT
__real@4@00000000000000000000 DD 000000000r	; 0
CONST	ENDS
;	COMDAT __real@4@4003a000000000000000
CONST	SEGMENT
__real@4@4003a000000000000000 DD 041a00000r	; 20
CONST	ENDS
_TEXT	SEGMENT
_lpszFaceName$ = 8
_pointSize$ = 12
_this$ = -12
_nStart$ = -8
_nEnd$ = -4
?SetFont@CSkinEdit@@IAEJPBDM@Z PROC NEAR		; CSkinEdit::SetFont

; 172  : {

  002e7	55		 push	 ebp
  002e8	8b ec		 mov	 ebp, esp
  002ea	83 ec 0c	 sub	 esp, 12			; 0000000cH
  002ed	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 173  : 	LONG nStart, nEnd;
; 174  : 
; 175  : 	GetSel ( nStart, nEnd );

  002f0	8d 45 fc	 lea	 eax, DWORD PTR _nEnd$[ebp]
  002f3	50		 push	 eax
  002f4	8d 4d f8	 lea	 ecx, DWORD PTR _nStart$[ebp]
  002f7	51		 push	 ecx
  002f8	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002fb	e8 00 00 00 00	 call	 ?GetSel@CRichEditCtrl@@QBEXAAJ0@Z ; CRichEditCtrl::GetSel

; 176  : 
; 177  : 	if (pointSize) {

  00300	d9 45 0c	 fld	 DWORD PTR _pointSize$[ebp]
  00303	d8 1d 00 00 00
	00		 fcomp	 DWORD PTR __real@4@00000000000000000000
  00309	df e0		 fnstsw	 ax
  0030b	f6 c4 40	 test	 ah, 64			; 00000040H
  0030e	75 17		 jne	 SHORT $L144459

; 178  : 		m_Format.yHeight = pointSize * 20;

  00310	d9 45 0c	 fld	 DWORD PTR _pointSize$[ebp]
  00313	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@4@4003a000000000000000
  00319	e8 00 00 00 00	 call	 __ftol
  0031e	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00321	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
$L144459:

; 180  : 
; 181  : 	strcpy ( m_Format.szFaceName, lpszFaceName );

  00327	8b 45 08	 mov	 eax, DWORD PTR _lpszFaceName$[ebp]
  0032a	50		 push	 eax
  0032b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0032e	81 c1 b2 00 00
	00		 add	 ecx, 178		; 000000b2H
  00334	51		 push	 ecx
  00335	e8 00 00 00 00	 call	 _strcpy
  0033a	83 c4 08	 add	 esp, 8

; 182  : 	
; 183  : 	return nStart;

  0033d	8b 45 f8	 mov	 eax, DWORD PTR _nStart$[ebp]

; 184  : }

  00340	8b e5		 mov	 esp, ebp
  00342	5d		 pop	 ebp
  00343	c2 08 00	 ret	 8
?SetFont@CSkinEdit@@IAEJPBDM@Z ENDP			; CSkinEdit::SetFont
_TEXT	ENDS
PUBLIC	?SetFontSelection@CSkinEdit@@IAEHH@Z		; CSkinEdit::SetFontSelection
PUBLIC	?HideSelection@CRichEditCtrl@@QAEXHH@Z		; CRichEditCtrl::HideSelection
EXTRN	?SetSel@CRichEditCtrl@@QAEXJJ@Z:NEAR		; CRichEditCtrl::SetSel
EXTRN	?SetSelectionCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z:NEAR ; CRichEditCtrl::SetSelectionCharFormat
_TEXT	SEGMENT
_nStart$ = 8
_this$ = -12
_nJunk$ = -8
_nEnd$ = -4
?SetFontSelection@CSkinEdit@@IAEHH@Z PROC NEAR		; CSkinEdit::SetFontSelection

; 188  : {

  00346	55		 push	 ebp
  00347	8b ec		 mov	 ebp, esp
  00349	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0034c	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 189  : 	LONG nJunk, nEnd;
; 190  : 
; 191  : 	GetSel ( nJunk, nEnd );

  0034f	8d 45 fc	 lea	 eax, DWORD PTR _nEnd$[ebp]
  00352	50		 push	 eax
  00353	8d 4d f8	 lea	 ecx, DWORD PTR _nJunk$[ebp]
  00356	51		 push	 ecx
  00357	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0035a	e8 00 00 00 00	 call	 ?GetSel@CRichEditCtrl@@QBEXAAJ0@Z ; CRichEditCtrl::GetSel

; 192  : 
; 193  : 	HideSelection( true, false );

  0035f	6a 00		 push	 0
  00361	6a 01		 push	 1
  00363	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00366	e8 00 00 00 00	 call	 ?HideSelection@CRichEditCtrl@@QAEXHH@Z ; CRichEditCtrl::HideSelection

; 194  : 	SetSel ( nStart, nEnd );

  0036b	8b 55 fc	 mov	 edx, DWORD PTR _nEnd$[ebp]
  0036e	52		 push	 edx
  0036f	8b 45 08	 mov	 eax, DWORD PTR _nStart$[ebp]
  00372	50		 push	 eax
  00373	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00376	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 195  : 
; 196  : 	m_Format.dwMask = CFM_FACE | CFM_SIZE;

  0037b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0037e	c7 81 9c 00 00
	00 00 00 00 a0	 mov	 DWORD PTR [ecx+156], -1610612736 ; a0000000H

; 197  : 	
; 198  : 	SetSelectionCharFormat ( m_Format );

  00388	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0038b	81 c2 98 00 00
	00		 add	 edx, 152		; 00000098H
  00391	52		 push	 edx
  00392	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00395	e8 00 00 00 00	 call	 ?SetSelectionCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z ; CRichEditCtrl::SetSelectionCharFormat

; 199  : 
; 200  : 	HideSelection( false, false );

  0039a	6a 00		 push	 0
  0039c	6a 00		 push	 0
  0039e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  003a1	e8 00 00 00 00	 call	 ?HideSelection@CRichEditCtrl@@QAEXHH@Z ; CRichEditCtrl::HideSelection

; 201  : 	SetSel ( nEnd, nEnd );

  003a6	8b 45 fc	 mov	 eax, DWORD PTR _nEnd$[ebp]
  003a9	50		 push	 eax
  003aa	8b 4d fc	 mov	 ecx, DWORD PTR _nEnd$[ebp]
  003ad	51		 push	 ecx
  003ae	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  003b1	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 202  : 
; 203  : 	return true;

  003b6	b8 01 00 00 00	 mov	 eax, 1

; 204  : }

  003bb	8b e5		 mov	 esp, ebp
  003bd	5d		 pop	 ebp
  003be	c2 04 00	 ret	 4
?SetFontSelection@CSkinEdit@@IAEHH@Z ENDP		; CSkinEdit::SetFontSelection
_TEXT	ENDS
PUBLIC	?SetTextColor@CSkinEdit@@QAEJK@Z		; CSkinEdit::SetTextColor
_TEXT	SEGMENT
_color$ = 8
_this$ = -12
_nStart$ = -8
_nEnd$ = -4
?SetTextColor@CSkinEdit@@QAEJK@Z PROC NEAR		; CSkinEdit::SetTextColor

; 209  : {

  003c1	55		 push	 ebp
  003c2	8b ec		 mov	 ebp, esp
  003c4	83 ec 0c	 sub	 esp, 12			; 0000000cH
  003c7	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 210  : 	LONG nStart, nEnd;
; 211  : 
; 212  : 	GetSel ( nStart, nEnd );

  003ca	8d 45 fc	 lea	 eax, DWORD PTR _nEnd$[ebp]
  003cd	50		 push	 eax
  003ce	8d 4d f8	 lea	 ecx, DWORD PTR _nStart$[ebp]
  003d1	51		 push	 ecx
  003d2	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  003d5	e8 00 00 00 00	 call	 ?GetSel@CRichEditCtrl@@QBEXAAJ0@Z ; CRichEditCtrl::GetSel

; 213  : 
; 214  : 	m_Format.crTextColor = color; 

  003da	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  003dd	8b 45 08	 mov	 eax, DWORD PTR _color$[ebp]
  003e0	89 82 ac 00 00
	00		 mov	 DWORD PTR [edx+172], eax

; 215  : 
; 216  : 	return nStart;

  003e6	8b 45 f8	 mov	 eax, DWORD PTR _nStart$[ebp]

; 217  : }

  003e9	8b e5		 mov	 esp, ebp
  003eb	5d		 pop	 ebp
  003ec	c2 04 00	 ret	 4
?SetTextColor@CSkinEdit@@QAEJK@Z ENDP			; CSkinEdit::SetTextColor
_TEXT	ENDS
PUBLIC	?SetTextColorSelection@CSkinEdit@@QAEHH@Z	; CSkinEdit::SetTextColorSelection
_TEXT	SEGMENT
_nStart$ = 8
_this$ = -16
_bRet$ = -4
_nJunk$ = -12
_nEnd$ = -8
?SetTextColorSelection@CSkinEdit@@QAEHH@Z PROC NEAR	; CSkinEdit::SetTextColorSelection

; 221  : {

  003ef	55		 push	 ebp
  003f0	8b ec		 mov	 ebp, esp
  003f2	83 ec 10	 sub	 esp, 16			; 00000010H
  003f5	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 222  : 	BOOL bRet;
; 223  : 	LONG nJunk, nEnd;
; 224  : 
; 225  : 	GetSel ( nJunk, nEnd );

  003f8	8d 45 f8	 lea	 eax, DWORD PTR _nEnd$[ebp]
  003fb	50		 push	 eax
  003fc	8d 4d f4	 lea	 ecx, DWORD PTR _nJunk$[ebp]
  003ff	51		 push	 ecx
  00400	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00403	e8 00 00 00 00	 call	 ?GetSel@CRichEditCtrl@@QBEXAAJ0@Z ; CRichEditCtrl::GetSel

; 226  : 
; 227  : 	HideSelection( true, false );

  00408	6a 00		 push	 0
  0040a	6a 01		 push	 1
  0040c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0040f	e8 00 00 00 00	 call	 ?HideSelection@CRichEditCtrl@@QAEXHH@Z ; CRichEditCtrl::HideSelection

; 228  : 	SetSel ( nStart, nEnd );

  00414	8b 55 f8	 mov	 edx, DWORD PTR _nEnd$[ebp]
  00417	52		 push	 edx
  00418	8b 45 08	 mov	 eax, DWORD PTR _nStart$[ebp]
  0041b	50		 push	 eax
  0041c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0041f	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 229  : 
; 230  : 	m_Format.dwMask = CFM_COLOR;

  00424	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00427	c7 81 9c 00 00
	00 00 00 00 40	 mov	 DWORD PTR [ecx+156], 1073741824 ; 40000000H

; 231  : 	
; 232  : 	bRet = SetSelectionCharFormat ( m_Format );

  00431	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00434	81 c2 98 00 00
	00		 add	 edx, 152		; 00000098H
  0043a	52		 push	 edx
  0043b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0043e	e8 00 00 00 00	 call	 ?SetSelectionCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z ; CRichEditCtrl::SetSelectionCharFormat
  00443	89 45 fc	 mov	 DWORD PTR _bRet$[ebp], eax

; 233  : 
; 234  : 	HideSelection( false, false );

  00446	6a 00		 push	 0
  00448	6a 00		 push	 0
  0044a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0044d	e8 00 00 00 00	 call	 ?HideSelection@CRichEditCtrl@@QAEXHH@Z ; CRichEditCtrl::HideSelection

; 235  : 	SetSel ( -1, -1 );

  00452	6a ff		 push	 -1
  00454	6a ff		 push	 -1
  00456	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00459	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 236  : 
; 237  : 	return bRet;

  0045e	8b 45 fc	 mov	 eax, DWORD PTR _bRet$[ebp]

; 238  : }

  00461	8b e5		 mov	 esp, ebp
  00463	5d		 pop	 ebp
  00464	c2 04 00	 ret	 4
?SetTextColorSelection@CSkinEdit@@QAEHH@Z ENDP		; CSkinEdit::SetTextColorSelection
_TEXT	ENDS
PUBLIC	?SetTextColorDefault@CSkinEdit@@QAEHK@Z		; CSkinEdit::SetTextColorDefault
_TEXT	SEGMENT
_color$ = 8
_this$ = -4
?SetTextColorDefault@CSkinEdit@@QAEHK@Z PROC NEAR	; CSkinEdit::SetTextColorDefault

; 242  : {

  00467	55		 push	 ebp
  00468	8b ec		 mov	 ebp, esp
  0046a	51		 push	 ecx
  0046b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 243  : 	m_Format.crTextColor = color; 

  0046e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00471	8b 4d 08	 mov	 ecx, DWORD PTR _color$[ebp]
  00474	89 88 ac 00 00
	00		 mov	 DWORD PTR [eax+172], ecx

; 244  : 
; 245  : 	return SetDefaultCharFormat ( m_Format );

  0047a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0047d	81 c2 98 00 00
	00		 add	 edx, 152		; 00000098H
  00483	52		 push	 edx
  00484	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00487	e8 00 00 00 00	 call	 ?SetDefaultCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z ; CRichEditCtrl::SetDefaultCharFormat

; 246  : }

  0048c	8b e5		 mov	 esp, ebp
  0048e	5d		 pop	 ebp
  0048f	c2 04 00	 ret	 4
?SetTextColorDefault@CSkinEdit@@QAEHK@Z ENDP		; CSkinEdit::SetTextColorDefault
_TEXT	ENDS
PUBLIC	?SetTextEffects@CSkinEdit@@IAEHK@Z		; CSkinEdit::SetTextEffects
_TEXT	SEGMENT
_effects$ = 8
_this$ = -4
?SetTextEffects@CSkinEdit@@IAEHK@Z PROC NEAR		; CSkinEdit::SetTextEffects

; 250  : {

  00492	55		 push	 ebp
  00493	8b ec		 mov	 ebp, esp
  00495	51		 push	 ecx
  00496	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 251  : 	m_Format.dwEffects = effects;

  00499	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0049c	8b 4d 08	 mov	 ecx, DWORD PTR _effects$[ebp]
  0049f	89 88 a0 00 00
	00		 mov	 DWORD PTR [eax+160], ecx

; 252  : 	return SetSelectionCharFormat ( m_Format );

  004a5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  004a8	81 c2 98 00 00
	00		 add	 edx, 152		; 00000098H
  004ae	52		 push	 edx
  004af	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  004b2	e8 00 00 00 00	 call	 ?SetSelectionCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z ; CRichEditCtrl::SetSelectionCharFormat

; 253  : }

  004b7	8b e5		 mov	 esp, ebp
  004b9	5d		 pop	 ebp
  004ba	c2 04 00	 ret	 4
?SetTextEffects@CSkinEdit@@IAEHK@Z ENDP			; CSkinEdit::SetTextEffects
_TEXT	ENDS
PUBLIC	?GetLineCount@CRichEditCtrl@@QBEHXZ		; CRichEditCtrl::GetLineCount
PUBLIC	?AddText@CSkinEdit@@QAEHPBD@Z			; CSkinEdit::AddText
PUBLIC	?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z		; CRichEditCtrl::ReplaceSel
_TEXT	SEGMENT
_text$ = 8
_this$ = -20
_pBase$ = -4
_pPtr$ = -8
_specialChar$ = -12
_nStart$ = -16
?AddText@CSkinEdit@@QAEHPBD@Z PROC NEAR			; CSkinEdit::AddText

; 257  : {

  004bd	55		 push	 ebp
  004be	8b ec		 mov	 ebp, esp
  004c0	83 ec 14	 sub	 esp, 20			; 00000014H
  004c3	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 258  : 	char*	pBase = (char*) text;

  004c6	8b 45 08	 mov	 eax, DWORD PTR _text$[ebp]
  004c9	89 45 fc	 mov	 DWORD PTR _pBase$[ebp], eax

; 259  : 	char*	pPtr = (char*) text;

  004cc	8b 4d 08	 mov	 ecx, DWORD PTR _text$[ebp]
  004cf	89 4d f8	 mov	 DWORD PTR _pPtr$[ebp], ecx
$L144498:

; 260  : 	char	specialChar;
; 261  : 		
; 262  : 	LONG	nStart;
; 263  : 
; 264  : 	while (*pPtr) {

  004d2	8b 55 f8	 mov	 edx, DWORD PTR _pPtr$[ebp]
  004d5	0f be 02	 movsx	 eax, BYTE PTR [edx]
  004d8	85 c0		 test	 eax, eax
  004da	0f 84 f5 00 00
	00		 je	 $L144499
$L144501:

; 265  : 		while ( (*pPtr) && !(*pPtr & 0x80) ) {

  004e0	8b 4d f8	 mov	 ecx, DWORD PTR _pPtr$[ebp]
  004e3	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  004e6	85 d2		 test	 edx, edx
  004e8	74 1b		 je	 SHORT $L144502
  004ea	8b 45 f8	 mov	 eax, DWORD PTR _pPtr$[ebp]
  004ed	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  004f0	81 e1 80 00 00
	00		 and	 ecx, 128		; 00000080H
  004f6	85 c9		 test	 ecx, ecx
  004f8	75 0b		 jne	 SHORT $L144502

; 266  : 			pPtr++;

  004fa	8b 55 f8	 mov	 edx, DWORD PTR _pPtr$[ebp]
  004fd	83 c2 01	 add	 edx, 1
  00500	89 55 f8	 mov	 DWORD PTR _pPtr$[ebp], edx

; 267  : 		}

  00503	eb db		 jmp	 SHORT $L144501
$L144502:

; 268  : 
; 269  : 		specialChar = *pPtr;

  00505	8b 45 f8	 mov	 eax, DWORD PTR _pPtr$[ebp]
  00508	8a 08		 mov	 cl, BYTE PTR [eax]
  0050a	88 4d f4	 mov	 BYTE PTR _specialChar$[ebp], cl

; 270  : 		*pPtr = 0;

  0050d	8b 55 f8	 mov	 edx, DWORD PTR _pPtr$[ebp]
  00510	c6 02 00	 mov	 BYTE PTR [edx], 0

; 271  : 
; 272  : 		nStart = SetFont ( defaultFont );

  00513	6a 00		 push	 0
  00515	68 00 00 00 00	 push	 OFFSET FLAT:?defaultFont@@3PADA ; defaultFont
  0051a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0051d	e8 00 00 00 00	 call	 ?SetFont@CSkinEdit@@IAEJPBDM@Z ; CSkinEdit::SetFont
  00522	89 45 f0	 mov	 DWORD PTR _nStart$[ebp], eax

; 273  : 
; 274  : 		// add the text...
; 275  : 		ReplaceSel ( pBase );

  00525	6a 00		 push	 0
  00527	8b 45 fc	 mov	 eax, DWORD PTR _pBase$[ebp]
  0052a	50		 push	 eax
  0052b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0052e	e8 00 00 00 00	 call	 ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z ; CRichEditCtrl::ReplaceSel

; 276  : 
; 277  : 		SetFontSelection ( nStart );

  00533	8b 4d f0	 mov	 ecx, DWORD PTR _nStart$[ebp]
  00536	51		 push	 ecx
  00537	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0053a	e8 00 00 00 00	 call	 ?SetFontSelection@CSkinEdit@@IAEHH@Z ; CSkinEdit::SetFontSelection

; 278  : 
; 279  : 		if (specialChar) {

  0053f	0f be 55 f4	 movsx	 edx, BYTE PTR _specialChar$[ebp]
  00543	85 d2		 test	 edx, edx
  00545	0f 84 85 00 00
	00		 je	 $L144503

; 280  : 			*pPtr = specialChar;

  0054b	8b 45 f8	 mov	 eax, DWORD PTR _pPtr$[ebp]
  0054e	8a 4d f4	 mov	 cl, BYTE PTR _specialChar$[ebp]
  00551	88 08		 mov	 BYTE PTR [eax], cl

; 281  : 			pBase = pPtr;

  00553	8b 55 f8	 mov	 edx, DWORD PTR _pPtr$[ebp]
  00556	89 55 fc	 mov	 DWORD PTR _pBase$[ebp], edx
$L144505:

; 282  : 
; 283  : 			while ( (*pPtr & 0x80) ) {

  00559	8b 45 f8	 mov	 eax, DWORD PTR _pPtr$[ebp]
  0055c	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0055f	81 e1 80 00 00
	00		 and	 ecx, 128		; 00000080H
  00565	85 c9		 test	 ecx, ecx
  00567	74 1f		 je	 SHORT $L144506

; 284  : 				*pPtr = EmoteToChar[ ( *pPtr & 0x7f ) ];

  00569	8b 55 f8	 mov	 edx, DWORD PTR _pPtr$[ebp]
  0056c	0f be 02	 movsx	 eax, BYTE PTR [edx]
  0056f	83 e0 7f	 and	 eax, 127		; 0000007fH
  00572	8b 4d f8	 mov	 ecx, DWORD PTR _pPtr$[ebp]
  00575	8a 90 00 00 00
	00		 mov	 dl, BYTE PTR ?EmoteToChar@@3PADA[eax]
  0057b	88 11		 mov	 BYTE PTR [ecx], dl

; 285  : 				pPtr++;

  0057d	8b 45 f8	 mov	 eax, DWORD PTR _pPtr$[ebp]
  00580	83 c0 01	 add	 eax, 1
  00583	89 45 f8	 mov	 DWORD PTR _pPtr$[ebp], eax

; 286  : 			}

  00586	eb d1		 jmp	 SHORT $L144505
$L144506:

; 287  : 
; 288  : 			specialChar = *pPtr;

  00588	8b 4d f8	 mov	 ecx, DWORD PTR _pPtr$[ebp]
  0058b	8a 11		 mov	 dl, BYTE PTR [ecx]
  0058d	88 55 f4	 mov	 BYTE PTR _specialChar$[ebp], dl

; 289  : 			*pPtr = 0;

  00590	8b 45 f8	 mov	 eax, DWORD PTR _pPtr$[ebp]
  00593	c6 00 00	 mov	 BYTE PTR [eax], 0

; 290  : 
; 291  : 			nStart = SetFont ( wingdingFont );

  00596	6a 00		 push	 0
  00598	68 00 00 00 00	 push	 OFFSET FLAT:?wingdingFont@@3PADA ; wingdingFont
  0059d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005a0	e8 00 00 00 00	 call	 ?SetFont@CSkinEdit@@IAEJPBDM@Z ; CSkinEdit::SetFont
  005a5	89 45 f0	 mov	 DWORD PTR _nStart$[ebp], eax

; 292  : 
; 293  : 			// add the text...
; 294  : 			ReplaceSel ( pBase );

  005a8	6a 00		 push	 0
  005aa	8b 4d fc	 mov	 ecx, DWORD PTR _pBase$[ebp]
  005ad	51		 push	 ecx
  005ae	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005b1	e8 00 00 00 00	 call	 ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z ; CRichEditCtrl::ReplaceSel

; 295  : 
; 296  : 			SetFontSelection ( nStart );

  005b6	8b 55 f0	 mov	 edx, DWORD PTR _nStart$[ebp]
  005b9	52		 push	 edx
  005ba	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005bd	e8 00 00 00 00	 call	 ?SetFontSelection@CSkinEdit@@IAEHH@Z ; CSkinEdit::SetFontSelection

; 297  :   
; 298  : 			*pPtr = specialChar;

  005c2	8b 45 f8	 mov	 eax, DWORD PTR _pPtr$[ebp]
  005c5	8a 4d f4	 mov	 cl, BYTE PTR _specialChar$[ebp]
  005c8	88 08		 mov	 BYTE PTR [eax], cl

; 299  : 			pBase = pPtr;

  005ca	8b 55 f8	 mov	 edx, DWORD PTR _pPtr$[ebp]
  005cd	89 55 fc	 mov	 DWORD PTR _pBase$[ebp], edx
$L144503:

; 301  : 	}

  005d0	e9 fd fe ff ff	 jmp	 $L144498
$L144499:

; 302  : 
; 303  : 	SetRange( 0, GetLineCount() );

  005d5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005d8	e8 00 00 00 00	 call	 ?GetLineCount@CRichEditCtrl@@QBEHXZ ; CRichEditCtrl::GetLineCount
  005dd	50		 push	 eax
  005de	6a 00		 push	 0
  005e0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005e3	83 c1 40	 add	 ecx, 64			; 00000040H
  005e6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005e9	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  005ec	ff 52 10	 call	 DWORD PTR [edx+16]

; 304  : 
; 305  : 	return TRUE;

  005ef	b8 01 00 00 00	 mov	 eax, 1

; 306  : }

  005f4	8b e5		 mov	 esp, ebp
  005f6	5d		 pop	 ebp
  005f7	c2 04 00	 ret	 4
?AddText@CSkinEdit@@QAEHPBD@Z ENDP			; CSkinEdit::AddText
_TEXT	ENDS
PUBLIC	?SetText@CSkinEdit@@QAEHPBD@Z			; CSkinEdit::SetText
_BSS	SEGMENT
	ALIGN	4

$SG144511 DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_text$ = 8
_this$ = -4
?SetText@CSkinEdit@@QAEHPBD@Z PROC NEAR			; CSkinEdit::SetText

; 310  : {

  005fa	55		 push	 ebp
  005fb	8b ec		 mov	 ebp, esp
  005fd	51		 push	 ecx
  005fe	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 311  : 	// add the text...
; 312  : 	SetWindowText( "" );

  00601	68 00 00 00 00	 push	 OFFSET FLAT:$SG144511
  00606	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00609	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 313  : 
; 314  : 	AddText ( text );

  0060e	8b 45 08	 mov	 eax, DWORD PTR _text$[ebp]
  00611	50		 push	 eax
  00612	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00615	e8 00 00 00 00	 call	 ?AddText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::AddText

; 315  : 
; 316  : 	return TRUE;

  0061a	b8 01 00 00 00	 mov	 eax, 1

; 317  : }

  0061f	8b e5		 mov	 esp, ebp
  00621	5d		 pop	 ebp
  00622	c2 04 00	 ret	 4
?SetText@CSkinEdit@@QAEHPBD@Z ENDP			; CSkinEdit::SetText
_TEXT	ENDS
PUBLIC	?SetFormattedText@CSkinEdit@@QAAHPADZZ		; CSkinEdit::SetFormattedText
EXTRN	__imp__vsprintf:NEAR
EXTRN	__chkstk:NEAR
_BSS	SEGMENT
	ALIGN	4

$SG144523 DB	01H DUP (?)
_BSS	ENDS
_TEXT	SEGMENT
_fmt$ = 12
_this$ = 8
_buf$ = -10244
_args$ = -4
?SetFormattedText@CSkinEdit@@QAAHPADZZ PROC NEAR	; CSkinEdit::SetFormattedText

; 321  : {

  00625	55		 push	 ebp
  00626	8b ec		 mov	 ebp, esp
  00628	b8 04 28 00 00	 mov	 eax, 10244		; 00002804H
  0062d	e8 00 00 00 00	 call	 __chkstk

; 322  : 	char buf[10240];
; 323  : 
; 324  : 	va_list args;
; 325  : 	va_start(args, fmt);

  00632	8d 45 10	 lea	 eax, DWORD PTR _fmt$[ebp+4]
  00635	89 45 fc	 mov	 DWORD PTR _args$[ebp], eax

; 326  : 	vsprintf(buf, fmt, args);

  00638	8b 4d fc	 mov	 ecx, DWORD PTR _args$[ebp]
  0063b	51		 push	 ecx
  0063c	8b 55 0c	 mov	 edx, DWORD PTR _fmt$[ebp]
  0063f	52		 push	 edx
  00640	8d 85 fc d7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00646	50		 push	 eax
  00647	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__vsprintf
  0064d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 327  : 	va_end(args);

  00650	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _args$[ebp], 0

; 328  : 
; 329  : 	// add the text...
; 330  : 	SetWindowText( "" );

  00657	68 00 00 00 00	 push	 OFFSET FLAT:$SG144523
  0065c	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0065f	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA

; 331  : 
; 332  : 	AddText ( buf );

  00664	8d 8d fc d7 ff
	ff		 lea	 ecx, DWORD PTR _buf$[ebp]
  0066a	51		 push	 ecx
  0066b	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  0066e	e8 00 00 00 00	 call	 ?AddText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::AddText

; 333  : 
; 334  : 	return TRUE;

  00673	b8 01 00 00 00	 mov	 eax, 1

; 335  : }

  00678	8b e5		 mov	 esp, ebp
  0067a	5d		 pop	 ebp
  0067b	c3		 ret	 0
?SetFormattedText@CSkinEdit@@QAAHPADZZ ENDP		; CSkinEdit::SetFormattedText
_TEXT	ENDS
PUBLIC	?GetColorIndex@CSkinEdit@@QAEHK@Z		; CSkinEdit::GetColorIndex
_TEXT	SEGMENT
_color$ = 8
_this$ = -8
_nL0$ = -4
?GetColorIndex@CSkinEdit@@QAEHK@Z PROC NEAR		; CSkinEdit::GetColorIndex

; 339  : {

  0067c	55		 push	 ebp
  0067d	8b ec		 mov	 ebp, esp
  0067f	83 ec 08	 sub	 esp, 8
  00682	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 340  :     for (int nL0=0; nL0<256; nL0++)

  00685	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _nL0$[ebp], 0
  0068c	eb 09		 jmp	 SHORT $L144529
$L144530:
  0068e	8b 45 fc	 mov	 eax, DWORD PTR _nL0$[ebp]
  00691	83 c0 01	 add	 eax, 1
  00694	89 45 fc	 mov	 DWORD PTR _nL0$[ebp], eax
$L144529:
  00697	81 7d fc 00 01
	00 00		 cmp	 DWORD PTR _nL0$[ebp], 256 ; 00000100H
  0069e	7d 16		 jge	 SHORT $L144531

; 342  :         if (color == m_nColors[nL0])

  006a0	8b 4d fc	 mov	 ecx, DWORD PTR _nL0$[ebp]
  006a3	8b 55 08	 mov	 edx, DWORD PTR _color$[ebp]
  006a6	3b 14 8d 00 00
	00 00		 cmp	 edx, DWORD PTR ?m_nColors@CSkinEdit@@1PAKA[ecx*4]
  006ad	75 05		 jne	 SHORT $L144532

; 343  :             return nL0;

  006af	8b 45 fc	 mov	 eax, DWORD PTR _nL0$[ebp]
  006b2	eb 07		 jmp	 SHORT $L144527
$L144532:

; 344  :     }

  006b4	eb d8		 jmp	 SHORT $L144530
$L144531:

; 345  : 
; 346  :     // Standard white colour
; 347  :     return 43; 

  006b6	b8 2b 00 00 00	 mov	 eax, 43			; 0000002bH
$L144527:

; 348  : }

  006bb	8b e5		 mov	 esp, ebp
  006bd	5d		 pop	 ebp
  006be	c2 04 00	 ret	 4
?GetColorIndex@CSkinEdit@@QAEHK@Z ENDP			; CSkinEdit::GetColorIndex
_TEXT	ENDS
PUBLIC	?AfxTrace@@YAXPBDZZ				; AfxTrace
PUBLIC	?GetLength@CString@@QBEHXZ			; CString::GetLength
PUBLIC	??ACString@@QBEDH@Z				; CString::operator[]
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	?ParseText@CSkinEdit@@QAEHPBD_N@Z		; CSkinEdit::ParseText
EXTRN	??0CString@@QAE@PBD@Z:NEAR			; CString::CString
EXTRN	??4CString@@QAEABV0@ABV0@@Z:NEAR		; CString::operator=
EXTRN	?Left@CString@@QBE?AV1@H@Z:NEAR			; CString::Left
EXTRN	?Right@CString@@QBE?AV1@H@Z:NEAR		; CString::Right
EXTRN	?Find@CString@@QBEHD@Z:NEAR			; CString::Find
EXTRN	?Find@CString@@QBEHDH@Z:NEAR			; CString::Find
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
EXTRN	__imp__strtoul:NEAR
_BSS	SEGMENT
	ALIGN	4

$SG144542 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG144554 DB	'Error: invalid |''s', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T150142 DD	019930520H
	DD	04H
	DD	FLAT:$T150144
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150144 DD	0ffffffffH
	DD	FLAT:$L150137
	DD	00H
	DD	FLAT:$L150138
	DD	00H
	DD	FLAT:$L150139
	DD	00H
	DD	FLAT:$L150140
xdata$x	ENDS
_TEXT	SEGMENT
_text$ = 8
_bClear$ = 12
_this$ = -48
_sText$ = -16
_nPos$ = -24
_nColor$ = -20
_nStart$ = -28
$T150131 = -32
$T150132 = -36
$T150135 = -40
$T150136 = -44
__$EHRec$ = -12
?ParseText@CSkinEdit@@QAEHPBD_N@Z PROC NEAR		; CSkinEdit::ParseText

; 352  : {

  006c1	55		 push	 ebp
  006c2	8b ec		 mov	 ebp, esp
  006c4	6a ff		 push	 -1
  006c6	68 00 00 00 00	 push	 $L150143
  006cb	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  006d1	50		 push	 eax
  006d2	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  006d9	83 ec 40	 sub	 esp, 64			; 00000040H
  006dc	89 4d d0	 mov	 DWORD PTR _this$[ebp], ecx

; 353  : 	CString sText = text;

  006df	8b 45 08	 mov	 eax, DWORD PTR _text$[ebp]
  006e2	50		 push	 eax
  006e3	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  006e6	e8 00 00 00 00	 call	 ??0CString@@QAE@PBD@Z	; CString::CString
  006eb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 354  : 	int		nPos;
; 355  : 	int		nColor;
; 356  : 
; 357  :     // Remove all current text
; 358  : 	if ( bClear ) 

  006f2	8b 4d 0c	 mov	 ecx, DWORD PTR _bClear$[ebp]
  006f5	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  006fb	85 c9		 test	 ecx, ecx
  006fd	74 0d		 je	 SHORT $L144541

; 360  : 		SetWindowText( "" );

  006ff	68 00 00 00 00	 push	 OFFSET FLAT:$SG144542
  00704	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00707	e8 00 00 00 00	 call	 ?SetWindowTextA@CWnd@@QAEXPBD@Z ; CWnd::SetWindowTextA
$L144541:

; 364  : 	nStart = SetTextColor( 0x00ffffff );

  0070c	68 ff ff ff 00	 push	 16777215		; 00ffffffH
  00711	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00714	e8 00 00 00 00	 call	 ?SetTextColor@CSkinEdit@@QAEJK@Z ; CSkinEdit::SetTextColor
  00719	89 45 e4	 mov	 DWORD PTR _nStart$[ebp], eax
$L144545:

; 365  : 
; 366  : 	while ( (nPos = sText.Find ( '|' )) != -1) 

  0071c	6a 7c		 push	 124			; 0000007cH
  0071e	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  00721	e8 00 00 00 00	 call	 ?Find@CString@@QBEHD@Z	; CString::Find
  00726	89 45 e8	 mov	 DWORD PTR _nPos$[ebp], eax
  00729	83 7d e8 ff	 cmp	 DWORD PTR _nPos$[ebp], -1
  0072d	0f 84 49 01 00
	00		 je	 $L144546

; 368  : 		if (nPos) 

  00733	83 7d e8 00	 cmp	 DWORD PTR _nPos$[ebp], 0
  00737	0f 84 83 00 00
	00		 je	 $L144547

; 370  : 			AddText ( sText.Left( nPos ) );

  0073d	8b 55 e8	 mov	 edx, DWORD PTR _nPos$[ebp]
  00740	52		 push	 edx
  00741	8d 45 e0	 lea	 eax, DWORD PTR $T150131[ebp]
  00744	50		 push	 eax
  00745	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  00748	e8 00 00 00 00	 call	 ?Left@CString@@QBE?AV1@H@Z ; CString::Left
  0074d	89 45 cc	 mov	 DWORD PTR -52+[ebp], eax
  00750	8b 4d cc	 mov	 ecx, DWORD PTR -52+[ebp]
  00753	89 4d c8	 mov	 DWORD PTR -56+[ebp], ecx
  00756	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0075a	8b 4d c8	 mov	 ecx, DWORD PTR -56+[ebp]
  0075d	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00762	50		 push	 eax
  00763	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00766	e8 00 00 00 00	 call	 ?AddText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::AddText
  0076b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0076f	8d 4d e0	 lea	 ecx, DWORD PTR $T150131[ebp]
  00772	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 371  : 			SetTextColorSelection ( nStart );

  00777	8b 55 e4	 mov	 edx, DWORD PTR _nStart$[ebp]
  0077a	52		 push	 edx
  0077b	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0077e	e8 00 00 00 00	 call	 ?SetTextColorSelection@CSkinEdit@@QAEHH@Z ; CSkinEdit::SetTextColorSelection

; 372  : 			sText = sText.Right ( sText.GetLength () - nPos );

  00783	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  00786	e8 00 00 00 00	 call	 ?GetLength@CString@@QBEHXZ ; CString::GetLength
  0078b	2b 45 e8	 sub	 eax, DWORD PTR _nPos$[ebp]
  0078e	50		 push	 eax
  0078f	8d 45 dc	 lea	 eax, DWORD PTR $T150132[ebp]
  00792	50		 push	 eax
  00793	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  00796	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  0079b	89 45 c4	 mov	 DWORD PTR -60+[ebp], eax
  0079e	8b 4d c4	 mov	 ecx, DWORD PTR -60+[ebp]
  007a1	89 4d c0	 mov	 DWORD PTR -64+[ebp], ecx
  007a4	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  007a8	8b 55 c0	 mov	 edx, DWORD PTR -64+[ebp]
  007ab	52		 push	 edx
  007ac	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  007af	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@ABV0@@Z ; CString::operator=
  007b4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  007b8	8d 4d dc	 lea	 ecx, DWORD PTR $T150132[ebp]
  007bb	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L144547:

; 374  : 
; 375  : 		if ( sText[1] == 'c' ) 

  007c0	6a 01		 push	 1
  007c2	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  007c5	e8 00 00 00 00	 call	 ??ACString@@QBEDH@Z	; CString::operator[]
  007ca	0f be c0	 movsx	 eax, al
  007cd	83 f8 63	 cmp	 eax, 99			; 00000063H
  007d0	75 34		 jne	 SHORT $L144550

; 377  : 			nColor = strtoul ( &(( (LPCTSTR ) sText)[2]), NULL, 0 );

  007d2	6a 00		 push	 0
  007d4	6a 00		 push	 0
  007d6	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  007d9	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  007de	83 c0 02	 add	 eax, 2
  007e1	50		 push	 eax
  007e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtoul
  007e8	83 c4 0c	 add	 esp, 12			; 0000000cH
  007eb	89 45 ec	 mov	 DWORD PTR _nColor$[ebp], eax

; 378  : 			nStart = SetTextColor ( m_nColors[nColor] );

  007ee	8b 4d ec	 mov	 ecx, DWORD PTR _nColor$[ebp]
  007f1	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?m_nColors@CSkinEdit@@1PAKA[ecx*4]
  007f8	52		 push	 edx
  007f9	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  007fc	e8 00 00 00 00	 call	 ?SetTextColor@CSkinEdit@@QAEJK@Z ; CSkinEdit::SetTextColor
  00801	89 45 e4	 mov	 DWORD PTR _nStart$[ebp], eax

; 379  : 
; 380  :             #ifdef DEBUG
; 381  : 			if (m_nColors[nColor] == 0x00ffffff)
; 382  : 				TRACE("Possible unmapped color at location #%d.\n", nColor);
; 383  :             #endif
; 384  : 		} else {

  00804	eb 22		 jmp	 SHORT $L150134
$L144550:

; 385  : 			TRACE( "Error: invalid |'s" );

  00806	b8 01 00 00 00	 mov	 eax, 1
  0080b	85 c0		 test	 eax, eax
  0080d	74 09		 je	 SHORT $L150133
  0080f	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR -68+[ebp], 0
  00816	eb 10		 jmp	 SHORT $L150134
$L150133:
  00818	68 00 00 00 00	 push	 OFFSET FLAT:$SG144554
  0081d	e8 00 00 00 00	 call	 ?AfxTrace@@YAXPBDZZ	; AfxTrace
  00822	83 c4 04	 add	 esp, 4
  00825	89 45 bc	 mov	 DWORD PTR -68+[ebp], eax
$L150134:

; 387  : 
; 388  : 		nPos = sText.Find ( '|', 1 );

  00828	6a 01		 push	 1
  0082a	6a 7c		 push	 124			; 0000007cH
  0082c	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  0082f	e8 00 00 00 00	 call	 ?Find@CString@@QBEHDH@Z	; CString::Find
  00834	89 45 e8	 mov	 DWORD PTR _nPos$[ebp], eax

; 389  : 		sText = sText.Right ( sText.GetLength () - nPos - 1 );

  00837	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  0083a	e8 00 00 00 00	 call	 ?GetLength@CString@@QBEHXZ ; CString::GetLength
  0083f	2b 45 e8	 sub	 eax, DWORD PTR _nPos$[ebp]
  00842	83 e8 01	 sub	 eax, 1
  00845	50		 push	 eax
  00846	8d 4d d8	 lea	 ecx, DWORD PTR $T150135[ebp]
  00849	51		 push	 ecx
  0084a	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  0084d	e8 00 00 00 00	 call	 ?Right@CString@@QBE?AV1@H@Z ; CString::Right
  00852	89 45 b8	 mov	 DWORD PTR -72+[ebp], eax
  00855	8b 55 b8	 mov	 edx, DWORD PTR -72+[ebp]
  00858	89 55 b4	 mov	 DWORD PTR -76+[ebp], edx
  0085b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0085f	8b 45 b4	 mov	 eax, DWORD PTR -76+[ebp]
  00862	50		 push	 eax
  00863	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  00866	e8 00 00 00 00	 call	 ??4CString@@QAEABV0@ABV0@@Z ; CString::operator=
  0086b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0086f	8d 4d d8	 lea	 ecx, DWORD PTR $T150135[ebp]
  00872	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString

; 390  : 	}

  00877	e9 a0 fe ff ff	 jmp	 $L144545
$L144546:

; 391  : 
; 392  : 	// add the text...
; 393  : 	AddText ( sText );

  0087c	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  0087f	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00884	50		 push	 eax
  00885	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00888	e8 00 00 00 00	 call	 ?AddText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::AddText

; 394  : 	SetTextColorSelection ( nStart );

  0088d	8b 4d e4	 mov	 ecx, DWORD PTR _nStart$[ebp]
  00890	51		 push	 ecx
  00891	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  00894	e8 00 00 00 00	 call	 ?SetTextColorSelection@CSkinEdit@@QAEHH@Z ; CSkinEdit::SetTextColorSelection

; 395  : 
; 396  : 	if ( bClear )

  00899	8b 55 0c	 mov	 edx, DWORD PTR _bClear$[ebp]
  0089c	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  008a2	85 d2		 test	 edx, edx
  008a4	74 11		 je	 SHORT $L144556

; 397  : 		SetLocation( 0 );

  008a6	6a 00		 push	 0
  008a8	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  008ab	83 c1 40	 add	 ecx, 64			; 00000040H
  008ae	8b 45 d0	 mov	 eax, DWORD PTR _this$[ebp]
  008b1	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  008b4	ff 52 04	 call	 DWORD PTR [edx+4]
$L144556:

; 398  : 
; 399  : 	return TRUE;

  008b7	c7 45 d4 01 00
	00 00		 mov	 DWORD PTR $T150136[ebp], 1
  008be	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008c5	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  008c8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  008cd	8b 45 d4	 mov	 eax, DWORD PTR $T150136[ebp]

; 400  : }

  008d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  008d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  008da	8b e5		 mov	 esp, ebp
  008dc	5d		 pop	 ebp
  008dd	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
$L150137:
  00034	8d 4d f0	 lea	 ecx, DWORD PTR _sText$[ebp]
  00037	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0003c	c3		 ret	 0
$L150138:
  0003d	8d 4d e0	 lea	 ecx, DWORD PTR $T150131[ebp]
  00040	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00045	c3		 ret	 0
$L150139:
  00046	8d 4d dc	 lea	 ecx, DWORD PTR $T150132[ebp]
  00049	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0004e	c3		 ret	 0
$L150140:
  0004f	8d 4d d8	 lea	 ecx, DWORD PTR $T150135[ebp]
  00052	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00057	c3		 ret	 0
$L150143:
  00058	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150142
  0005d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?ParseText@CSkinEdit@@QAEHPBD_N@Z ENDP			; CSkinEdit::ParseText
;	COMDAT ?AfxTrace@@YAXPBDZZ
_TEXT	SEGMENT
?AfxTrace@@YAXPBDZZ PROC NEAR				; AfxTrace, COMDAT

; 249  : inline void AFX_CDECL AfxTrace(LPCTSTR, ...) { }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?AfxTrace@@YAXPBDZZ ENDP				; AfxTrace
_TEXT	ENDS
PUBLIC	?SetPageSize@CSkinEdit@@QAEXH@Z			; CSkinEdit::SetPageSize
EXTRN	?Resize@CSkinScrollBar@@QAEXXZ:NEAR		; CSkinScrollBar::Resize
_TEXT	SEGMENT
_nSize$ = 8
_this$ = -4
?SetPageSize@CSkinEdit@@QAEXH@Z PROC NEAR		; CSkinEdit::SetPageSize

; 402  : void CSkinEdit::SetPageSize( int nSize ) {

  008e0	55		 push	 ebp
  008e1	8b ec		 mov	 ebp, esp
  008e3	51		 push	 ecx
  008e4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 403  : 	if ( m_nPageSize == ( nSize / m_nLineSize ) )

  008e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  008ea	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  008ed	99		 cdq
  008ee	f7 b9 d4 00 00
	00		 idiv	 DWORD PTR [ecx+212]
  008f4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  008f7	39 42 58	 cmp	 DWORD PTR [edx+88], eax
  008fa	75 02		 jne	 SHORT $L144562

; 404  : 		return;

  008fc	eb 38		 jmp	 SHORT $L144561
$L144562:

; 405  : 
; 406  : 	m_nPageSize = nSize / m_nLineSize; 

  008fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00901	8b 45 08	 mov	 eax, DWORD PTR _nSize$[ebp]
  00904	99		 cdq
  00905	f7 b9 d4 00 00
	00		 idiv	 DWORD PTR [ecx+212]
  0090b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0090e	89 42 58	 mov	 DWORD PTR [edx+88], eax

; 407  : 
; 408  : 	if ( m_pBar )

  00911	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00914	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  00918	74 0b		 je	 SHORT $L144563

; 409  : 		m_pBar->Resize();

  0091a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0091d	8b 49 44	 mov	 ecx, DWORD PTR [ecx+68]
  00920	e8 00 00 00 00	 call	 ?Resize@CSkinScrollBar@@QAEXXZ ; CSkinScrollBar::Resize
$L144563:

; 410  : 
; 411  : 	SetLocation( 0 );

  00925	6a 00		 push	 0
  00927	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0092a	83 c1 40	 add	 ecx, 64			; 00000040H
  0092d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00930	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00933	ff 50 04	 call	 DWORD PTR [eax+4]
$L144561:

; 412  : }

  00936	8b e5		 mov	 esp, ebp
  00938	5d		 pop	 ebp
  00939	c2 04 00	 ret	 4
?SetPageSize@CSkinEdit@@QAEXH@Z ENDP			; CSkinEdit::SetPageSize
_TEXT	ENDS
PUBLIC	?GetText@CSkinEdit@@QAEXAAVCString@@@Z		; CSkinEdit::GetText
EXTRN	?GetWindowTextA@CWnd@@QBEXAAVCString@@@Z:NEAR	; CWnd::GetWindowTextA
_TEXT	SEGMENT
_sText$ = 8
_this$ = -4
?GetText@CSkinEdit@@QAEXAAVCString@@@Z PROC NEAR	; CSkinEdit::GetText

; 416  : {

  0093c	55		 push	 ebp
  0093d	8b ec		 mov	 ebp, esp
  0093f	51		 push	 ecx
  00940	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 417  : 	GetWindowText ( sText );

  00943	8b 45 08	 mov	 eax, DWORD PTR _sText$[ebp]
  00946	50		 push	 eax
  00947	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0094a	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAVCString@@@Z ; CWnd::GetWindowTextA

; 418  : }

  0094f	8b e5		 mov	 esp, ebp
  00951	5d		 pop	 ebp
  00952	c2 04 00	 ret	 4
?GetText@CSkinEdit@@QAEXAAVCString@@@Z ENDP		; CSkinEdit::GetText
_TEXT	ENDS
PUBLIC	?GetAt@CString@@QBEDH@Z				; CString::GetAt
PUBLIC	?GetSCIText@CSkinEdit@@QAEXAAVCString@@@Z	; CSkinEdit::GetSCIText
PUBLIC	?GetTextLength@CRichEditCtrl@@QBEJXZ		; CRichEditCtrl::GetTextLength
EXTRN	??0CString@@QAE@XZ:NEAR				; CString::CString
EXTRN	?SetAt@CString@@QAEXHD@Z:NEAR			; CString::SetAt
EXTRN	?Insert@CString@@QAEHHPBD@Z:NEAR		; CString::Insert
EXTRN	?Format@CString@@QAAXPBDZZ:NEAR			; CString::Format
EXTRN	_strcmp:NEAR
EXTRN	?GetSelectionCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z:NEAR ; CRichEditCtrl::GetSelectionCharFormat
_DATA	SEGMENT
	ORG $+1
$SG144586 DB	'|c%d|', 00H
	ORG $+2
$SG144591 DB	'|c%d|', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T150152 DD	019930520H
	DD	02H
	DD	FLAT:$T150154
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150154 DD	0ffffffffH
	DD	FLAT:$L150149
	DD	00H
	DD	FLAT:$L150150
xdata$x	ENDS
_TEXT	SEGMENT
_sText$ = 8
_this$ = -108
_sValue$ = -20
_sSelect$ = -36
_cf$ = -96
_nSize$ = -16
_nPos$ = -100
_c$ = -28
_dwMask$ = -32
_textColor$ = -24
_nValue$144590 = -104
__$EHRec$ = -12
?GetSCIText@CSkinEdit@@QAEXAAVCString@@@Z PROC NEAR	; CSkinEdit::GetSCIText

; 422  : {

  00955	55		 push	 ebp
  00956	8b ec		 mov	 ebp, esp
  00958	6a ff		 push	 -1
  0095a	68 00 00 00 00	 push	 $L150153
  0095f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00965	50		 push	 eax
  00966	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  0096d	83 ec 60	 sub	 esp, 96			; 00000060H
  00970	89 4d 94	 mov	 DWORD PTR _this$[ebp], ecx

; 423  : 	CString		sValue, sSelect;

  00973	8d 4d ec	 lea	 ecx, DWORD PTR _sValue$[ebp]
  00976	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0097b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00982	8d 4d dc	 lea	 ecx, DWORD PTR _sSelect$[ebp]
  00985	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  0098a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 424  : 	CHARFORMAT	cf;
; 425  : 
; 426  : 	GetWindowText ( sText );

  0098e	8b 45 08	 mov	 eax, DWORD PTR _sText$[ebp]
  00991	50		 push	 eax
  00992	8b 4d 94	 mov	 ecx, DWORD PTR _this$[ebp]
  00995	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAVCString@@@Z ; CWnd::GetWindowTextA

; 427  : 
; 428  : 	int nSize = GetTextLength();

  0099a	8b 4d 94	 mov	 ecx, DWORD PTR _this$[ebp]
  0099d	e8 00 00 00 00	 call	 ?GetTextLength@CRichEditCtrl@@QBEJXZ ; CRichEditCtrl::GetTextLength
  009a2	89 45 f0	 mov	 DWORD PTR _nSize$[ebp], eax

; 429  :     int nPos  = nSize;

  009a5	8b 4d f0	 mov	 ecx, DWORD PTR _nSize$[ebp]
  009a8	89 4d 9c	 mov	 DWORD PTR _nPos$[ebp], ecx

; 430  :     char c;
; 431  : 
; 432  : 	SetSel( nPos, nPos );

  009ab	8b 55 9c	 mov	 edx, DWORD PTR _nPos$[ebp]
  009ae	52		 push	 edx
  009af	8b 45 9c	 mov	 eax, DWORD PTR _nPos$[ebp]
  009b2	50		 push	 eax
  009b3	8b 4d 94	 mov	 ecx, DWORD PTR _this$[ebp]
  009b6	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 433  : 
; 434  : 	DWORD dwMask = GetSelectionCharFormat( cf );

  009bb	8d 4d a0	 lea	 ecx, DWORD PTR _cf$[ebp]
  009be	51		 push	 ecx
  009bf	8b 4d 94	 mov	 ecx, DWORD PTR _this$[ebp]
  009c2	e8 00 00 00 00	 call	 ?GetSelectionCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z ; CRichEditCtrl::GetSelectionCharFormat
  009c7	89 45 e0	 mov	 DWORD PTR _dwMask$[ebp], eax

; 435  : 	COLORREF textColor = cf.crTextColor;

  009ca	8b 55 b4	 mov	 edx, DWORD PTR _cf$[ebp+20]
  009cd	89 55 e8	 mov	 DWORD PTR _textColor$[ebp], edx

; 436  : 
; 437  : 	for (;nPos > 0;nPos--)

  009d0	eb 09		 jmp	 SHORT $L144580
$L144581:
  009d2	8b 45 9c	 mov	 eax, DWORD PTR _nPos$[ebp]
  009d5	83 e8 01	 sub	 eax, 1
  009d8	89 45 9c	 mov	 DWORD PTR _nPos$[ebp], eax
$L144580:
  009db	83 7d 9c 00	 cmp	 DWORD PTR _nPos$[ebp], 0
  009df	0f 8e 03 01 00
	00		 jle	 $L144582

; 439  : 		SetSel( nPos, nPos );

  009e5	8b 4d 9c	 mov	 ecx, DWORD PTR _nPos$[ebp]
  009e8	51		 push	 ecx
  009e9	8b 55 9c	 mov	 edx, DWORD PTR _nPos$[ebp]
  009ec	52		 push	 edx
  009ed	8b 4d 94	 mov	 ecx, DWORD PTR _this$[ebp]
  009f0	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 440  : 
; 441  :         if (nPos < nSize)

  009f5	8b 45 9c	 mov	 eax, DWORD PTR _nPos$[ebp]
  009f8	3b 45 f0	 cmp	 eax, DWORD PTR _nSize$[ebp]
  009fb	7d 11		 jge	 SHORT $L144583

; 442  :             c = sText[nPos];

  009fd	8b 4d 9c	 mov	 ecx, DWORD PTR _nPos$[ebp]
  00a00	51		 push	 ecx
  00a01	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00a04	e8 00 00 00 00	 call	 ??ACString@@QBEDH@Z	; CString::operator[]
  00a09	88 45 e4	 mov	 BYTE PTR _c$[ebp], al

; 443  :         else

  00a0c	eb 04		 jmp	 SHORT $L144584
$L144583:

; 444  :             c = 0;

  00a0e	c6 45 e4 00	 mov	 BYTE PTR _c$[ebp], 0
$L144584:

; 445  : 
; 446  : 		dwMask = GetSelectionCharFormat( cf );

  00a12	8d 55 a0	 lea	 edx, DWORD PTR _cf$[ebp]
  00a15	52		 push	 edx
  00a16	8b 4d 94	 mov	 ecx, DWORD PTR _this$[ebp]
  00a19	e8 00 00 00 00	 call	 ?GetSelectionCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z ; CRichEditCtrl::GetSelectionCharFormat
  00a1e	89 45 e0	 mov	 DWORD PTR _dwMask$[ebp], eax

; 447  : 
; 448  : 		if ((dwMask & CFM_COLOR) && (textColor != cf.crTextColor)) 

  00a21	8b 45 e0	 mov	 eax, DWORD PTR _dwMask$[ebp]
  00a24	25 00 00 00 40	 and	 eax, 1073741824		; 40000000H
  00a29	85 c0		 test	 eax, eax
  00a2b	74 64		 je	 SHORT $L144585
  00a2d	8b 4d e8	 mov	 ecx, DWORD PTR _textColor$[ebp]
  00a30	3b 4d b4	 cmp	 ecx, DWORD PTR _cf$[ebp+20]
  00a33	74 5c		 je	 SHORT $L144585

; 450  : 			sValue.Format("|c%d|", GetColorIndex(textColor));

  00a35	8b 55 e8	 mov	 edx, DWORD PTR _textColor$[ebp]
  00a38	52		 push	 edx
  00a39	8b 4d 94	 mov	 ecx, DWORD PTR _this$[ebp]
  00a3c	e8 00 00 00 00	 call	 ?GetColorIndex@CSkinEdit@@QAEHK@Z ; CSkinEdit::GetColorIndex
  00a41	50		 push	 eax
  00a42	68 00 00 00 00	 push	 OFFSET FLAT:$SG144586
  00a47	8d 45 ec	 lea	 eax, DWORD PTR _sValue$[ebp]
  00a4a	50		 push	 eax
  00a4b	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  00a50	83 c4 0c	 add	 esp, 12			; 0000000cH

; 451  :             if (c == '\n')

  00a53	0f be 4d e4	 movsx	 ecx, BYTE PTR _c$[ebp]
  00a57	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  00a5a	75 1a		 jne	 SHORT $L144587

; 452  : 			    sText.Insert( nPos+1, sValue );

  00a5c	8d 4d ec	 lea	 ecx, DWORD PTR _sValue$[ebp]
  00a5f	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00a64	50		 push	 eax
  00a65	8b 55 9c	 mov	 edx, DWORD PTR _nPos$[ebp]
  00a68	83 c2 01	 add	 edx, 1
  00a6b	52		 push	 edx
  00a6c	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00a6f	e8 00 00 00 00	 call	 ?Insert@CString@@QAEHHPBD@Z ; CString::Insert

; 453  :             else

  00a74	eb 15		 jmp	 SHORT $L144588
$L144587:

; 454  :                 sText.Insert( nPos, sValue );

  00a76	8d 4d ec	 lea	 ecx, DWORD PTR _sValue$[ebp]
  00a79	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00a7e	50		 push	 eax
  00a7f	8b 45 9c	 mov	 eax, DWORD PTR _nPos$[ebp]
  00a82	50		 push	 eax
  00a83	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00a86	e8 00 00 00 00	 call	 ?Insert@CString@@QAEHHPBD@Z ; CString::Insert
$L144588:

; 455  : 
; 456  : 			textColor = cf.crTextColor;

  00a8b	8b 4d b4	 mov	 ecx, DWORD PTR _cf$[ebp+20]
  00a8e	89 4d e8	 mov	 DWORD PTR _textColor$[ebp], ecx
$L144585:

; 458  : 
; 459  : 		if ( !strcmp( cf.szFaceName, wingdingFont ) ) {

  00a91	68 00 00 00 00	 push	 OFFSET FLAT:?wingdingFont@@3PADA ; wingdingFont
  00a96	8d 55 ba	 lea	 edx, DWORD PTR _cf$[ebp+26]
  00a99	52		 push	 edx
  00a9a	e8 00 00 00 00	 call	 _strcmp
  00a9f	83 c4 08	 add	 esp, 8
  00aa2	85 c0		 test	 eax, eax
  00aa4	75 3d		 jne	 SHORT $L144589

; 460  : 			int nValue = (sText[(nPos - 1)] + 79);

  00aa6	8b 45 9c	 mov	 eax, DWORD PTR _nPos$[ebp]
  00aa9	83 e8 01	 sub	 eax, 1
  00aac	50		 push	 eax
  00aad	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00ab0	e8 00 00 00 00	 call	 ??ACString@@QBEDH@Z	; CString::operator[]
  00ab5	0f be c8	 movsx	 ecx, al
  00ab8	83 c1 4f	 add	 ecx, 79			; 0000004fH
  00abb	89 4d 98	 mov	 DWORD PTR _nValue$144590[ebp], ecx

; 461  : 			sText.SetAt((nPos - 1), (sText[(nPos - 1)] + 79));

  00abe	8b 55 9c	 mov	 edx, DWORD PTR _nPos$[ebp]
  00ac1	83 ea 01	 sub	 edx, 1
  00ac4	52		 push	 edx
  00ac5	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00ac8	e8 00 00 00 00	 call	 ??ACString@@QBEDH@Z	; CString::operator[]
  00acd	0f be c0	 movsx	 eax, al
  00ad0	83 c0 4f	 add	 eax, 79			; 0000004fH
  00ad3	50		 push	 eax
  00ad4	8b 4d 9c	 mov	 ecx, DWORD PTR _nPos$[ebp]
  00ad7	83 e9 01	 sub	 ecx, 1
  00ada	51		 push	 ecx
  00adb	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00ade	e8 00 00 00 00	 call	 ?SetAt@CString@@QAEXHD@Z ; CString::SetAt
$L144589:

; 463  : 	}

  00ae3	e9 ea fe ff ff	 jmp	 $L144581
$L144582:

; 464  : 
; 465  : 	sValue.Format("|c%d|", GetColorIndex(textColor));

  00ae8	8b 55 e8	 mov	 edx, DWORD PTR _textColor$[ebp]
  00aeb	52		 push	 edx
  00aec	8b 4d 94	 mov	 ecx, DWORD PTR _this$[ebp]
  00aef	e8 00 00 00 00	 call	 ?GetColorIndex@CSkinEdit@@QAEHK@Z ; CSkinEdit::GetColorIndex
  00af4	50		 push	 eax
  00af5	68 00 00 00 00	 push	 OFFSET FLAT:$SG144591
  00afa	8d 45 ec	 lea	 eax, DWORD PTR _sValue$[ebp]
  00afd	50		 push	 eax
  00afe	e8 00 00 00 00	 call	 ?Format@CString@@QAAXPBDZZ ; CString::Format
  00b03	83 c4 0c	 add	 esp, 12			; 0000000cH

; 466  : 
; 467  : 	if ( sText.GetLength() > 0 ) {

  00b06	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00b09	e8 00 00 00 00	 call	 ?GetLength@CString@@QBEHXZ ; CString::GetLength
  00b0e	85 c0		 test	 eax, eax
  00b10	7e 25		 jle	 SHORT $L144593

; 468  : 		if ( sText.GetAt ( 0 ) != '/' ) 

  00b12	6a 00		 push	 0
  00b14	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00b17	e8 00 00 00 00	 call	 ?GetAt@CString@@QBEDH@Z	; CString::GetAt
  00b1c	0f be c8	 movsx	 ecx, al
  00b1f	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  00b22	74 13		 je	 SHORT $L144593

; 469  : 			sText.Insert( 0, sValue );

  00b24	8d 4d ec	 lea	 ecx, DWORD PTR _sValue$[ebp]
  00b27	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00b2c	50		 push	 eax
  00b2d	6a 00		 push	 0
  00b2f	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00b32	e8 00 00 00 00	 call	 ?Insert@CString@@QAEHHPBD@Z ; CString::Insert
$L144593:

; 471  : }

  00b37	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00b3b	8d 4d dc	 lea	 ecx, DWORD PTR _sSelect$[ebp]
  00b3e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00b43	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b4a	8d 4d ec	 lea	 ecx, DWORD PTR _sValue$[ebp]
  00b4d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00b52	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00b55	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00b5c	8b e5		 mov	 esp, ebp
  00b5e	5d		 pop	 ebp
  00b5f	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L150149:
  00062	8d 4d ec	 lea	 ecx, DWORD PTR _sValue$[ebp]
  00065	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0006a	c3		 ret	 0
$L150150:
  0006b	8d 4d dc	 lea	 ecx, DWORD PTR _sSelect$[ebp]
  0006e	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00073	c3		 ret	 0
$L150153:
  00074	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150152
  00079	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetSCIText@CSkinEdit@@QAEXAAVCString@@@Z ENDP		; CSkinEdit::GetSCIText
PUBLIC	?GetEmoteText@CSkinEdit@@QAEXAAVCString@@@Z	; CSkinEdit::GetEmoteText
xdata$x	SEGMENT
$T150158 DD	019930520H
	DD	01H
	DD	FLAT:$T150160
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150160 DD	0ffffffffH
	DD	FLAT:$L150156
xdata$x	ENDS
_TEXT	SEGMENT
_sText$ = 8
_this$ = -92
_sValue$ = -16
_cf$ = -84
_nPos$ = -88
_dwMask$ = -24
_textColor$ = -20
__$EHRec$ = -12
?GetEmoteText@CSkinEdit@@QAEXAAVCString@@@Z PROC NEAR	; CSkinEdit::GetEmoteText

; 475  : {

  00b62	55		 push	 ebp
  00b63	8b ec		 mov	 ebp, esp
  00b65	6a ff		 push	 -1
  00b67	68 00 00 00 00	 push	 $L150159
  00b6c	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00b72	50		 push	 eax
  00b73	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00b7a	83 ec 50	 sub	 esp, 80			; 00000050H
  00b7d	89 4d a4	 mov	 DWORD PTR _this$[ebp], ecx

; 476  : 	CString		sValue;

  00b80	8d 4d f0	 lea	 ecx, DWORD PTR _sValue$[ebp]
  00b83	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00b88	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 477  : 	CHARFORMAT	cf;
; 478  : 
; 479  : 	GetWindowText ( sText );

  00b8f	8b 45 08	 mov	 eax, DWORD PTR _sText$[ebp]
  00b92	50		 push	 eax
  00b93	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00b96	e8 00 00 00 00	 call	 ?GetWindowTextA@CWnd@@QBEXAAVCString@@@Z ; CWnd::GetWindowTextA

; 480  : 
; 481  : 	int nPos = GetTextLength();

  00b9b	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00b9e	e8 00 00 00 00	 call	 ?GetTextLength@CRichEditCtrl@@QBEJXZ ; CRichEditCtrl::GetTextLength
  00ba3	89 45 a8	 mov	 DWORD PTR _nPos$[ebp], eax

; 482  : 
; 483  : 	SetSel( nPos, nPos );

  00ba6	8b 4d a8	 mov	 ecx, DWORD PTR _nPos$[ebp]
  00ba9	51		 push	 ecx
  00baa	8b 55 a8	 mov	 edx, DWORD PTR _nPos$[ebp]
  00bad	52		 push	 edx
  00bae	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00bb1	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 484  : 
; 485  : 	DWORD dwMask = GetSelectionCharFormat( cf );

  00bb6	8d 45 ac	 lea	 eax, DWORD PTR _cf$[ebp]
  00bb9	50		 push	 eax
  00bba	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00bbd	e8 00 00 00 00	 call	 ?GetSelectionCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z ; CRichEditCtrl::GetSelectionCharFormat
  00bc2	89 45 e8	 mov	 DWORD PTR _dwMask$[ebp], eax

; 486  : 	COLORREF textColor = cf.crTextColor;

  00bc5	8b 4d c0	 mov	 ecx, DWORD PTR _cf$[ebp+20]
  00bc8	89 4d ec	 mov	 DWORD PTR _textColor$[ebp], ecx

; 487  : 
; 488  : 	for (;nPos > 0;nPos--) {

  00bcb	eb 09		 jmp	 SHORT $L144603
$L144604:
  00bcd	8b 55 a8	 mov	 edx, DWORD PTR _nPos$[ebp]
  00bd0	83 ea 01	 sub	 edx, 1
  00bd3	89 55 a8	 mov	 DWORD PTR _nPos$[ebp], edx
$L144603:
  00bd6	83 7d a8 00	 cmp	 DWORD PTR _nPos$[ebp], 0
  00bda	7e 5e		 jle	 SHORT $L144605

; 489  : 		SetSel( nPos, nPos );

  00bdc	8b 45 a8	 mov	 eax, DWORD PTR _nPos$[ebp]
  00bdf	50		 push	 eax
  00be0	8b 4d a8	 mov	 ecx, DWORD PTR _nPos$[ebp]
  00be3	51		 push	 ecx
  00be4	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00be7	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 490  : 		dwMask = GetSelectionCharFormat( cf );

  00bec	8d 55 ac	 lea	 edx, DWORD PTR _cf$[ebp]
  00bef	52		 push	 edx
  00bf0	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  00bf3	e8 00 00 00 00	 call	 ?GetSelectionCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z ; CRichEditCtrl::GetSelectionCharFormat
  00bf8	89 45 e8	 mov	 DWORD PTR _dwMask$[ebp], eax

; 491  : 
; 492  : 		if ( !strcmp( cf.szFaceName, wingdingFont ) ) {

  00bfb	68 00 00 00 00	 push	 OFFSET FLAT:?wingdingFont@@3PADA ; wingdingFont
  00c00	8d 45 c6	 lea	 eax, DWORD PTR _cf$[ebp+26]
  00c03	50		 push	 eax
  00c04	e8 00 00 00 00	 call	 _strcmp
  00c09	83 c4 08	 add	 esp, 8
  00c0c	85 c0		 test	 eax, eax
  00c0e	75 28		 jne	 SHORT $L144606

; 493  : 			sText.SetAt((nPos - 1), CharToEmote[ sText.GetAt( (nPos - 1) ) ] );

  00c10	8b 4d a8	 mov	 ecx, DWORD PTR _nPos$[ebp]
  00c13	83 e9 01	 sub	 ecx, 1
  00c16	51		 push	 ecx
  00c17	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00c1a	e8 00 00 00 00	 call	 ?GetAt@CString@@QBEDH@Z	; CString::GetAt
  00c1f	0f be d0	 movsx	 edx, al
  00c22	8a 82 00 00 00
	00		 mov	 al, BYTE PTR ?CharToEmote@@3PADA[edx]
  00c28	50		 push	 eax
  00c29	8b 4d a8	 mov	 ecx, DWORD PTR _nPos$[ebp]
  00c2c	83 e9 01	 sub	 ecx, 1
  00c2f	51		 push	 ecx
  00c30	8b 4d 08	 mov	 ecx, DWORD PTR _sText$[ebp]
  00c33	e8 00 00 00 00	 call	 ?SetAt@CString@@QAEXHD@Z ; CString::SetAt
$L144606:

; 495  : 	}

  00c38	eb 93		 jmp	 SHORT $L144604
$L144605:

; 496  : }

  00c3a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c41	8d 4d f0	 lea	 ecx, DWORD PTR _sValue$[ebp]
  00c44	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00c49	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00c4c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00c53	8b e5		 mov	 esp, ebp
  00c55	5d		 pop	 ebp
  00c56	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
$L150156:
  0007e	8d 4d f0	 lea	 ecx, DWORD PTR _sValue$[ebp]
  00081	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00086	c3		 ret	 0
$L150159:
  00087	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150158
  0008c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?GetEmoteText@CSkinEdit@@QAEXAAVCString@@@Z ENDP	; CSkinEdit::GetEmoteText
PUBLIC	?EnableEditing@CSkinEdit@@QAEXXZ		; CSkinEdit::EnableEditing
PUBLIC	?SetReadOnly@CRichEditCtrl@@QAEHH@Z		; CRichEditCtrl::SetReadOnly
_TEXT	SEGMENT
_this$ = -4
?EnableEditing@CSkinEdit@@QAEXXZ PROC NEAR		; CSkinEdit::EnableEditing

; 500  : {

  00c59	55		 push	 ebp
  00c5a	8b ec		 mov	 ebp, esp
  00c5c	51		 push	 ecx
  00c5d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 501  : 	SetReadOnly(false);

  00c60	6a 00		 push	 0
  00c62	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c65	e8 00 00 00 00	 call	 ?SetReadOnly@CRichEditCtrl@@QAEHH@Z ; CRichEditCtrl::SetReadOnly

; 502  : 	m_dwStyle &= ~READONLY;

  00c6a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c6d	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00c70	80 e5 f7	 and	 ch, -9			; fffffff7H
  00c73	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00c76	89 4a 7c	 mov	 DWORD PTR [edx+124], ecx

; 503  : }

  00c79	8b e5		 mov	 esp, ebp
  00c7b	5d		 pop	 ebp
  00c7c	c3		 ret	 0
?EnableEditing@CSkinEdit@@QAEXXZ ENDP			; CSkinEdit::EnableEditing
_TEXT	ENDS
PUBLIC	?DisableEditing@CSkinEdit@@QAEXXZ		; CSkinEdit::DisableEditing
_TEXT	SEGMENT
_this$ = -4
?DisableEditing@CSkinEdit@@QAEXXZ PROC NEAR		; CSkinEdit::DisableEditing

; 507  : {

  00c7d	55		 push	 ebp
  00c7e	8b ec		 mov	 ebp, esp
  00c80	51		 push	 ecx
  00c81	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 508  : 	SetReadOnly(true);

  00c84	6a 01		 push	 1
  00c86	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00c89	e8 00 00 00 00	 call	 ?SetReadOnly@CRichEditCtrl@@QAEHH@Z ; CRichEditCtrl::SetReadOnly

; 509  : 	m_dwStyle |= READONLY;

  00c8e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00c91	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00c94	80 cd 08	 or	 ch, 8
  00c97	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00c9a	89 4a 7c	 mov	 DWORD PTR [edx+124], ecx

; 510  : }

  00c9d	8b e5		 mov	 esp, ebp
  00c9f	5d		 pop	 ebp
  00ca0	c3		 ret	 0
?DisableEditing@CSkinEdit@@QAEXXZ ENDP			; CSkinEdit::DisableEditing
_TEXT	ENDS
PUBLIC	?EnableEmotes@CSkinEdit@@QAEXXZ			; CSkinEdit::EnableEmotes
_TEXT	SEGMENT
_this$ = -4
?EnableEmotes@CSkinEdit@@QAEXXZ PROC NEAR		; CSkinEdit::EnableEmotes

; 514  : {

  00ca1	55		 push	 ebp
  00ca2	8b ec		 mov	 ebp, esp
  00ca4	51		 push	 ecx
  00ca5	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 515  : 	m_bEmotes = true;

  00ca8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00cab	c6 80 80 00 00
	00 01		 mov	 BYTE PTR [eax+128], 1

; 516  : }

  00cb2	8b e5		 mov	 esp, ebp
  00cb4	5d		 pop	 ebp
  00cb5	c3		 ret	 0
?EnableEmotes@CSkinEdit@@QAEXXZ ENDP			; CSkinEdit::EnableEmotes
_TEXT	ENDS
PUBLIC	?DisableEmotes@CSkinEdit@@QAEXXZ		; CSkinEdit::DisableEmotes
_TEXT	SEGMENT
_this$ = -4
?DisableEmotes@CSkinEdit@@QAEXXZ PROC NEAR		; CSkinEdit::DisableEmotes

; 520  : {

  00cb6	55		 push	 ebp
  00cb7	8b ec		 mov	 ebp, esp
  00cb9	51		 push	 ecx
  00cba	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 521  : 	m_bEmotes = false;

  00cbd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00cc0	c6 80 80 00 00
	00 00		 mov	 BYTE PTR [eax+128], 0

; 522  : }

  00cc7	8b e5		 mov	 esp, ebp
  00cc9	5d		 pop	 ebp
  00cca	c3		 ret	 0
?DisableEmotes@CSkinEdit@@QAEXXZ ENDP			; CSkinEdit::DisableEmotes
_TEXT	ENDS
PUBLIC	?OnChar@CWnd@@IAEXIII@Z				; CWnd::OnChar
PUBLIC	?GetLimitText@CRichEditCtrl@@QBEJXZ		; CRichEditCtrl::GetLimitText
EXTRN	??YCString@@QAEABV0@D@Z:NEAR			; CString::operator+=
EXTRN	__imp__isalnum:NEAR
EXTRN	__imp__isprint:NEAR
EXTRN	__imp__MessageBeep@4:NEAR
EXTRN	?SkinMessage@@YA_NPAD0H@Z:NEAR			; SkinMessage
_DATA	SEGMENT
	ORG $+2
$SG144636 DB	'You have reached the maximum size for this field, to add'
	DB	' anymore you must first delete some.', 00H
	ORG $+3
$SG144637 DB	'Alert', 00H
	ORG $+2
$SG144657 DB	'You have reached the maximum size for this field, to add'
	DB	' anymore you must first delete some.', 00H
	ORG $+3
$SG144658 DB	'Alert', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T150168 DD	019930520H
	DD	01H
	DD	FLAT:$T150172
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150172 DD	0ffffffffH
	DD	FLAT:$L150166
xdata$x	ENDS
_TEXT	SEGMENT
_nChar$ = 8
_nRepCnt$ = 12
_nFlags$ = 16
_this$ = -32
_nLimit$ = -20
_nLength$ = -16
_string$144630 = -24
_i$144631 = -28
__$EHRec$ = -12
?OnChar@CSkinEdit@@QAEXIII@Z PROC NEAR			; CSkinEdit::OnChar

; 526  : {

  00ccb	55		 push	 ebp
  00ccc	8b ec		 mov	 ebp, esp
  00cce	6a ff		 push	 -1
  00cd0	68 00 00 00 00	 push	 $L150169
  00cd5	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00cdb	50		 push	 eax
  00cdc	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00ce3	83 ec 18	 sub	 esp, 24			; 00000018H
  00ce6	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 527  : 	int nLimit = GetLimitText();

  00ce9	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00cec	e8 00 00 00 00	 call	 ?GetLimitText@CRichEditCtrl@@QBEJXZ ; CRichEditCtrl::GetLimitText
  00cf1	89 45 ec	 mov	 DWORD PTR _nLimit$[ebp], eax

; 528  : 	int nLength = GetTextLength();

  00cf4	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00cf7	e8 00 00 00 00	 call	 ?GetTextLength@CRichEditCtrl@@QBEJXZ ; CRichEditCtrl::GetTextLength
  00cfc	89 45 f0	 mov	 DWORD PTR _nLength$[ebp], eax

; 529  : 
; 530  : 	if ( m_dwStyle & READONLY ) {

  00cff	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00d02	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00d05	81 e1 00 08 00
	00		 and	 ecx, 2048		; 00000800H
  00d0b	85 c9		 test	 ecx, ecx
  00d0d	74 0d		 je	 SHORT $L144627

; 531  : 		MessageBeep ( 0 );

  00d0f	6a 00		 push	 0
  00d11	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4

; 532  : 		return;

  00d17	e9 f0 01 00 00	 jmp	 $L144624
$L144627:

; 534  : 
; 535  : 	if ( isprint ( nChar ) ) {

  00d1c	8b 55 08	 mov	 edx, DWORD PTR _nChar$[ebp]
  00d1f	52		 push	 edx
  00d20	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isprint
  00d26	83 c4 04	 add	 esp, 4
  00d29	85 c0		 test	 eax, eax
  00d2b	0f 84 0f 01 00
	00		 je	 $L144628

; 536  : 		if ( nChar == '|' ) {

  00d31	83 7d 08 7c	 cmp	 DWORD PTR _nChar$[ebp], 124 ; 0000007cH
  00d35	75 0d		 jne	 SHORT $L144629

; 537  : 			MessageBeep( 0 );

  00d37	6a 00		 push	 0
  00d39	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4

; 538  : 			return;

  00d3f	e9 c8 01 00 00	 jmp	 $L144624
$L144629:

; 540  : 
; 541  : 		CString string;

  00d44	8d 4d e8	 lea	 ecx, DWORD PTR _string$144630[ebp]
  00d47	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00d4c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 542  : 
; 543  : 		for (int i = 0;i < nRepCnt;i++) {

  00d53	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$144631[ebp], 0
  00d5a	eb 09		 jmp	 SHORT $L144632
$L144633:
  00d5c	8b 45 e4	 mov	 eax, DWORD PTR _i$144631[ebp]
  00d5f	83 c0 01	 add	 eax, 1
  00d62	89 45 e4	 mov	 DWORD PTR _i$144631[ebp], eax
$L144632:
  00d65	8b 4d e4	 mov	 ecx, DWORD PTR _i$144631[ebp]
  00d68	3b 4d 0c	 cmp	 ecx, DWORD PTR _nRepCnt$[ebp]
  00d6b	0f 83 aa 00 00
	00		 jae	 $L144634

; 544  : 			if ( nLength >= nLimit ) {

  00d71	8b 55 f0	 mov	 edx, DWORD PTR _nLength$[ebp]
  00d74	3b 55 ec	 cmp	 edx, DWORD PTR _nLimit$[ebp]
  00d77	7c 19		 jl	 SHORT $L144635

; 545  : 				SkinMessage( "Alert", "You have reached the maximum size for this field, to add anymore you must first delete some." );

  00d79	6a 00		 push	 0
  00d7b	68 00 00 00 00	 push	 OFFSET FLAT:$SG144636
  00d80	68 00 00 00 00	 push	 OFFSET FLAT:$SG144637
  00d85	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  00d8a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 546  : 				break;

  00d8d	e9 89 00 00 00	 jmp	 $L144634
$L144635:

; 548  : 
; 549  : 			if ( m_bIsAlnum ) {

  00d92	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00d95	83 b8 8c 00 00
	00 00		 cmp	 DWORD PTR [eax+140], 0
  00d9c	74 3a		 je	 SHORT $L144638

; 550  : 				if ( isalnum ( nChar ) || ( m_bIsSpace && nChar == ' ' ) ) {

  00d9e	8b 4d 08	 mov	 ecx, DWORD PTR _nChar$[ebp]
  00da1	51		 push	 ecx
  00da2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isalnum
  00da8	83 c4 04	 add	 esp, 4
  00dab	85 c0		 test	 eax, eax
  00dad	75 12		 jne	 SHORT $L144640
  00daf	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00db2	83 ba 90 00 00
	00 00		 cmp	 DWORD PTR [edx+144], 0
  00db9	74 1b		 je	 SHORT $L144639
  00dbb	83 7d 08 20	 cmp	 DWORD PTR _nChar$[ebp], 32 ; 00000020H
  00dbf	75 15		 jne	 SHORT $L144639
$L144640:

; 551  : 					string += (char)nChar;

  00dc1	8a 45 08	 mov	 al, BYTE PTR _nChar$[ebp]
  00dc4	50		 push	 eax
  00dc5	8d 4d e8	 lea	 ecx, DWORD PTR _string$144630[ebp]
  00dc8	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@D@Z	; CString::operator+=

; 552  : 					nLength++;

  00dcd	8b 4d f0	 mov	 ecx, DWORD PTR _nLength$[ebp]
  00dd0	83 c1 01	 add	 ecx, 1
  00dd3	89 4d f0	 mov	 DWORD PTR _nLength$[ebp], ecx
$L144639:

; 554  : 			} else {

  00dd6	eb 3e		 jmp	 SHORT $L144646
$L144638:

; 555  : 				if (  nChar == ' ' ) {

  00dd8	83 7d 08 20	 cmp	 DWORD PTR _nChar$[ebp], 32 ; 00000020H
  00ddc	75 23		 jne	 SHORT $L144643

; 556  : 					if ( m_bIsSpace ) {

  00dde	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00de1	83 ba 90 00 00
	00 00		 cmp	 DWORD PTR [edx+144], 0
  00de8	74 15		 je	 SHORT $L144644

; 557  : 						string += (char)nChar;

  00dea	8a 45 08	 mov	 al, BYTE PTR _nChar$[ebp]
  00ded	50		 push	 eax
  00dee	8d 4d e8	 lea	 ecx, DWORD PTR _string$144630[ebp]
  00df1	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@D@Z	; CString::operator+=

; 558  : 						nLength++;

  00df6	8b 4d f0	 mov	 ecx, DWORD PTR _nLength$[ebp]
  00df9	83 c1 01	 add	 ecx, 1
  00dfc	89 4d f0	 mov	 DWORD PTR _nLength$[ebp], ecx
$L144644:

; 560  : 				} else {

  00dff	eb 15		 jmp	 SHORT $L144646
$L144643:

; 561  : 					string += (char)nChar;

  00e01	8a 55 08	 mov	 dl, BYTE PTR _nChar$[ebp]
  00e04	52		 push	 edx
  00e05	8d 4d e8	 lea	 ecx, DWORD PTR _string$144630[ebp]
  00e08	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@D@Z	; CString::operator+=

; 562  : 					nLength++;

  00e0d	8b 45 f0	 mov	 eax, DWORD PTR _nLength$[ebp]
  00e10	83 c0 01	 add	 eax, 1
  00e13	89 45 f0	 mov	 DWORD PTR _nLength$[ebp], eax
$L144646:

; 565  : 		}

  00e16	e9 41 ff ff ff	 jmp	 $L144633
$L144634:

; 566  : 
; 567  : 		AddText ( string );

  00e1b	8d 4d e8	 lea	 ecx, DWORD PTR _string$144630[ebp]
  00e1e	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  00e23	50		 push	 eax
  00e24	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00e27	e8 00 00 00 00	 call	 ?AddText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::AddText

; 568  : 	} else {

  00e2c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e33	8d 4d e8	 lea	 ecx, DWORD PTR _string$144630[ebp]
  00e36	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00e3b	e9 cc 00 00 00	 jmp	 $L144648
$L144628:

; 569  : 		switch ( nChar ) {

  00e40	8b 4d 08	 mov	 ecx, DWORD PTR _nChar$[ebp]
  00e43	89 4d dc	 mov	 DWORD PTR -36+[ebp], ecx
  00e46	8b 55 dc	 mov	 edx, DWORD PTR -36+[ebp]
  00e49	83 ea 01	 sub	 edx, 1
  00e4c	89 55 dc	 mov	 DWORD PTR -36+[ebp], edx
  00e4f	83 7d dc 1a	 cmp	 DWORD PTR -36+[ebp], 26	; 0000001aH
  00e53	0f 87 8c 00 00
	00		 ja	 $L144662
  00e59	8b 4d dc	 mov	 ecx, DWORD PTR -36+[ebp]
  00e5c	33 c0		 xor	 eax, eax
  00e5e	8a 81 00 00 00
	00		 mov	 al, BYTE PTR $L150170[ecx]
  00e64	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L150171[eax*4]
$L144653:

; 570  : 			case 0x1b:			//	Escape
; 571  : 				OnEscape();

  00e6b	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00e6e	8b 02		 mov	 eax, DWORD PTR [edx]
  00e70	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00e73	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]

; 572  : 				break;

  00e79	eb 74		 jmp	 SHORT $L144650
$L144654:

; 573  : 
; 574  : 			case 0x0d:			//	Return
; 575  : 				if ( m_dwStyle & MULTILINE ) {

  00e7b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00e7e	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00e81	83 e2 04	 and	 edx, 4
  00e84	85 d2		 test	 edx, edx
  00e86	74 37		 je	 SHORT $L144655

; 576  : 					if ( ( nLength + nRepCnt ) >= nLimit ) {

  00e88	8b 45 f0	 mov	 eax, DWORD PTR _nLength$[ebp]
  00e8b	03 45 0c	 add	 eax, DWORD PTR _nRepCnt$[ebp]
  00e8e	3b 45 ec	 cmp	 eax, DWORD PTR _nLimit$[ebp]
  00e91	72 16		 jb	 SHORT $L144656

; 577  : 						SkinMessage( "Alert", "You have reached the maximum size for this field, to add anymore you must first delete some." );

  00e93	6a 00		 push	 0
  00e95	68 00 00 00 00	 push	 OFFSET FLAT:$SG144657
  00e9a	68 00 00 00 00	 push	 OFFSET FLAT:$SG144658
  00e9f	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  00ea4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 578  : 					} else {

  00ea7	eb 14		 jmp	 SHORT $L144659
$L144656:

; 579  : 						CRichEditCtrl::OnChar ( nChar, nRepCnt, nFlags );

  00ea9	8b 4d 10	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  00eac	51		 push	 ecx
  00ead	8b 55 0c	 mov	 edx, DWORD PTR _nRepCnt$[ebp]
  00eb0	52		 push	 edx
  00eb1	8b 45 08	 mov	 eax, DWORD PTR _nChar$[ebp]
  00eb4	50		 push	 eax
  00eb5	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00eb8	e8 00 00 00 00	 call	 ?OnChar@CWnd@@IAEXIII@Z	; CWnd::OnChar
$L144659:

; 581  : 				} else

  00ebd	eb 0e		 jmp	 SHORT $L144660
$L144655:

; 582  : 					OnReturn();

  00ebf	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ec2	8b 11		 mov	 edx, DWORD PTR [ecx]
  00ec4	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ec7	ff 92 c0 00 00
	00		 call	 DWORD PTR [edx+192]
$L144660:

; 583  : 				break;

  00ecd	eb 20		 jmp	 SHORT $L144650
$L144661:

; 584  : 
; 585  : 			case 0x01:
; 586  : 			case 0x03:
; 587  : 			case 0x08:
; 588  : 			case 0x16:
; 589  : 			case 0x18:
; 590  : 				CRichEditCtrl::OnChar ( nChar, nRepCnt, nFlags );

  00ecf	8b 45 10	 mov	 eax, DWORD PTR _nFlags$[ebp]
  00ed2	50		 push	 eax
  00ed3	8b 4d 0c	 mov	 ecx, DWORD PTR _nRepCnt$[ebp]
  00ed6	51		 push	 ecx
  00ed7	8b 55 08	 mov	 edx, DWORD PTR _nChar$[ebp]
  00eda	52		 push	 edx
  00edb	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ede	e8 00 00 00 00	 call	 ?OnChar@CWnd@@IAEXIII@Z	; CWnd::OnChar

; 591  : 
; 592  : 				break;

  00ee3	eb 0a		 jmp	 SHORT $L144650
$L144662:

; 593  : 			default:
; 594  : 				MessageBeep( 0 );

  00ee5	6a 00		 push	 0
  00ee7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4

; 595  : 				return;

  00eed	eb 1d		 jmp	 SHORT $L144624
$L144650:

; 597  : 
; 598  : 		SetRange( 0, GetLineCount() - 1 );

  00eef	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00ef2	e8 00 00 00 00	 call	 ?GetLineCount@CRichEditCtrl@@QBEHXZ ; CRichEditCtrl::GetLineCount
  00ef7	83 e8 01	 sub	 eax, 1
  00efa	50		 push	 eax
  00efb	6a 00		 push	 0
  00efd	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00f00	83 c1 40	 add	 ecx, 64			; 00000040H
  00f03	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00f06	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  00f09	ff 52 10	 call	 DWORD PTR [edx+16]
$L144648:
$L144624:

; 600  : }

  00f0c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00f0f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00f16	8b e5		 mov	 esp, ebp
  00f18	5d		 pop	 ebp
  00f19	c2 0c 00	 ret	 12			; 0000000cH
$L150171:
  00f1c	00 00 00 00	 DD	 $L144661
  00f20	00 00 00 00	 DD	 $L144654
  00f24	00 00 00 00	 DD	 $L144653
  00f28	00 00 00 00	 DD	 $L144662
$L150170:
  00f2c	00		 DB	 0
  00f2d	03		 DB	 3
  00f2e	00		 DB	 0
  00f2f	03		 DB	 3
  00f30	03		 DB	 3
  00f31	03		 DB	 3
  00f32	03		 DB	 3
  00f33	00		 DB	 0
  00f34	03		 DB	 3
  00f35	03		 DB	 3
  00f36	03		 DB	 3
  00f37	03		 DB	 3
  00f38	01		 DB	 1
  00f39	03		 DB	 3
  00f3a	03		 DB	 3
  00f3b	03		 DB	 3
  00f3c	03		 DB	 3
  00f3d	03		 DB	 3
  00f3e	03		 DB	 3
  00f3f	03		 DB	 3
  00f40	03		 DB	 3
  00f41	00		 DB	 0
  00f42	03		 DB	 3
  00f43	00		 DB	 0
  00f44	03		 DB	 3
  00f45	03		 DB	 3
  00f46	02		 DB	 2
_TEXT	ENDS
text$x	SEGMENT
$L150166:
  00091	8d 4d e8	 lea	 ecx, DWORD PTR _string$144630[ebp]
  00094	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  00099	c3		 ret	 0
$L150169:
  0009a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150168
  0009f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnChar@CSkinEdit@@QAEXIII@Z ENDP			; CSkinEdit::OnChar
_TEXT	SEGMENT
_this$ = -4
?OnReturn@CSkinEdit@@UAEXXZ PROC NEAR			; CSkinEdit::OnReturn

; 603  : {

  00f47	55		 push	 ebp
  00f48	8b ec		 mov	 ebp, esp
  00f4a	51		 push	 ecx
  00f4b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 604  : }

  00f4e	8b e5		 mov	 esp, ebp
  00f50	5d		 pop	 ebp
  00f51	c3		 ret	 0
?OnReturn@CSkinEdit@@UAEXXZ ENDP			; CSkinEdit::OnReturn
_this$ = -4
?OnEscape@CSkinEdit@@UAEXXZ PROC NEAR			; CSkinEdit::OnEscape

; 607  : {

  00f52	55		 push	 ebp
  00f53	8b ec		 mov	 ebp, esp
  00f55	51		 push	 ecx
  00f56	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 608  : }

  00f59	8b e5		 mov	 esp, ebp
  00f5b	5d		 pop	 ebp
  00f5c	c3		 ret	 0
?OnEscape@CSkinEdit@@UAEXXZ ENDP			; CSkinEdit::OnEscape
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+2
$SG144685 DB	'You have reached the maximum size for this field, to add'
	DB	' anymore you must first delete some.', 00H
	ORG $+3
$SG144686 DB	'Alert', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T150178 DD	019930520H
	DD	01H
	DD	FLAT:$T150180
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150180 DD	0ffffffffH
	DD	FLAT:$L150176
xdata$x	ENDS
_TEXT	SEGMENT
_nChar$ = 8
_nRepCnt$ = 12
_this$ = -32
_string$144677 = -20
_nLimit$144678 = -28
_nLength$144679 = -16
_i$144680 = -24
__$EHRec$ = -12
?OnSysChar@CSkinEdit@@QAEXIII@Z PROC NEAR		; CSkinEdit::OnSysChar

; 612  : {

  00f5d	55		 push	 ebp
  00f5e	8b ec		 mov	 ebp, esp
  00f60	6a ff		 push	 -1
  00f62	68 00 00 00 00	 push	 $L150179
  00f67	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00f6d	50		 push	 eax
  00f6e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00f75	83 ec 14	 sub	 esp, 20			; 00000014H
  00f78	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 613  : 	if (m_bEmotes) {

  00f7b	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00f7e	33 c9		 xor	 ecx, ecx
  00f80	8a 88 80 00 00
	00		 mov	 cl, BYTE PTR [eax+128]
  00f86	85 c9		 test	 ecx, ecx
  00f88	0f 84 ac 00 00
	00		 je	 $L144676

; 614  : 		if ( CharToEmote [ nChar ] ) {

  00f8e	8b 55 08	 mov	 edx, DWORD PTR _nChar$[ebp]
  00f91	0f be 82 00 00
	00 00		 movsx	 eax, BYTE PTR ?CharToEmote@@3PADA[edx]
  00f98	85 c0		 test	 eax, eax
  00f9a	0f 84 9a 00 00
	00		 je	 $L144676

; 615  : 			CString string;

  00fa0	8d 4d ec	 lea	 ecx, DWORD PTR _string$144677[ebp]
  00fa3	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  00fa8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 616  : 
; 617  : 			int nLimit = GetLimitText();

  00faf	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00fb2	e8 00 00 00 00	 call	 ?GetLimitText@CRichEditCtrl@@QBEJXZ ; CRichEditCtrl::GetLimitText
  00fb7	89 45 e4	 mov	 DWORD PTR _nLimit$144678[ebp], eax

; 618  : 			int nLength = GetTextLength();

  00fba	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00fbd	e8 00 00 00 00	 call	 ?GetTextLength@CRichEditCtrl@@QBEJXZ ; CRichEditCtrl::GetTextLength
  00fc2	89 45 f0	 mov	 DWORD PTR _nLength$144679[ebp], eax

; 619  : 
; 620  : 			for (int i = 0;i < nRepCnt;i++) {

  00fc5	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$144680[ebp], 0
  00fcc	eb 09		 jmp	 SHORT $L144681
$L144682:
  00fce	8b 4d e8	 mov	 ecx, DWORD PTR _i$144680[ebp]
  00fd1	83 c1 01	 add	 ecx, 1
  00fd4	89 4d e8	 mov	 DWORD PTR _i$144680[ebp], ecx
$L144681:
  00fd7	8b 55 e8	 mov	 edx, DWORD PTR _i$144680[ebp]
  00fda	3b 55 0c	 cmp	 edx, DWORD PTR _nRepCnt$[ebp]
  00fdd	73 3b		 jae	 SHORT $L144683

; 621  : 				if ( nLength >= nLimit ) {

  00fdf	8b 45 f0	 mov	 eax, DWORD PTR _nLength$144679[ebp]
  00fe2	3b 45 e4	 cmp	 eax, DWORD PTR _nLimit$144678[ebp]
  00fe5	7c 16		 jl	 SHORT $L144684

; 622  : 					SkinMessage( "Alert", "You have reached the maximum size for this field, to add anymore you must first delete some." );

  00fe7	6a 00		 push	 0
  00fe9	68 00 00 00 00	 push	 OFFSET FLAT:$SG144685
  00fee	68 00 00 00 00	 push	 OFFSET FLAT:$SG144686
  00ff3	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  00ff8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 623  : 					break;

  00ffb	eb 1d		 jmp	 SHORT $L144683
$L144684:

; 625  : 
; 626  : 				string += CharToEmote[ nChar ];

  00ffd	8b 4d 08	 mov	 ecx, DWORD PTR _nChar$[ebp]
  01000	8a 91 00 00 00
	00		 mov	 dl, BYTE PTR ?CharToEmote@@3PADA[ecx]
  01006	52		 push	 edx
  01007	8d 4d ec	 lea	 ecx, DWORD PTR _string$144677[ebp]
  0100a	e8 00 00 00 00	 call	 ??YCString@@QAEABV0@D@Z	; CString::operator+=

; 627  : 				nLength++;

  0100f	8b 45 f0	 mov	 eax, DWORD PTR _nLength$144679[ebp]
  01012	83 c0 01	 add	 eax, 1
  01015	89 45 f0	 mov	 DWORD PTR _nLength$144679[ebp], eax

; 628  : 			}

  01018	eb b4		 jmp	 SHORT $L144682
$L144683:

; 629  : 
; 630  : 			AddText ( string );

  0101a	8d 4d ec	 lea	 ecx, DWORD PTR _string$144677[ebp]
  0101d	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  01022	50		 push	 eax
  01023	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  01026	e8 00 00 00 00	 call	 ?AddText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::AddText

; 631  : 		}

  0102b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01032	8d 4d ec	 lea	 ecx, DWORD PTR _string$144677[ebp]
  01035	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
$L144676:

; 633  : }

  0103a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0103d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01044	8b e5		 mov	 esp, ebp
  01046	5d		 pop	 ebp
  01047	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L150176:
  000a4	8d 4d ec	 lea	 ecx, DWORD PTR _string$144677[ebp]
  000a7	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000ac	c3		 ret	 0
$L150179:
  000ad	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150178
  000b2	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnSysChar@CSkinEdit@@QAEXIII@Z ENDP			; CSkinEdit::OnSysChar
PUBLIC	??0CMenu@@QAE@XZ				; CMenu::CMenu
PUBLIC	?CreatePopupMenu@CMenu@@QAEHXZ			; CMenu::CreatePopupMenu
PUBLIC	?AppendMenuA@CMenu@@QAEHIIPBD@Z			; CMenu::AppendMenuA
PUBLIC	??1CMenu@@UAE@XZ				; CMenu::~CMenu
PUBLIC	?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z	; CWnd::ClientToScreen
EXTRN	?TrackPopupMenu@CMenu@@QAEHIHHPAVCWnd@@PBUtagRECT@@@Z:NEAR ; CMenu::TrackPopupMenu
EXTRN	?CanPaste@CRichEditCtrl@@QBEHI@Z:NEAR		; CRichEditCtrl::CanPaste
_DATA	SEGMENT
	ORG $+2
$SG144697 DB	'Cu&t', 00H
	ORG $+3
$SG144699 DB	'&Copy', 00H
	ORG $+2
$SG144701 DB	'&Copy', 00H
	ORG $+2
$SG144702 DB	'&Paste', 00H
	ORG $+1
$SG144705 DB	'Cu&t', 00H
	ORG $+3
$SG144706 DB	'&Copy', 00H
	ORG $+2
$SG144708 DB	'Cu&t', 00H
	ORG $+3
$SG144709 DB	'&Copy', 00H
	ORG $+2
$SG144711 DB	'&Paste', 00H
	ORG $+1
$SG144713 DB	'&Paste', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T150184 DD	019930520H
	DD	01H
	DD	FLAT:$T150186
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150186 DD	0ffffffffH
	DD	FLAT:$L150182
xdata$x	ENDS
_TEXT	SEGMENT
_point$ = 12
_this$ = -92
_pMenu$ = -24
_nStart$ = -88
_nEnd$ = -16
_format$ = -84
__$EHRec$ = -12
?OnRButtonDown@CSkinEdit@@QAEXIVCPoint@@@Z PROC NEAR	; CSkinEdit::OnRButtonDown

; 637  : {

  0104a	55		 push	 ebp
  0104b	8b ec		 mov	 ebp, esp
  0104d	6a ff		 push	 -1
  0104f	68 00 00 00 00	 push	 $L150185
  01054	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0105a	50		 push	 eax
  0105b	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01062	83 ec 50	 sub	 esp, 80			; 00000050H
  01065	89 4d a4	 mov	 DWORD PTR _this$[ebp], ecx

; 638  : 	CMenu	pMenu;

  01068	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  0106b	e8 00 00 00 00	 call	 ??0CMenu@@QAE@XZ	; CMenu::CMenu
  01070	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 639  : 	long	nStart, nEnd;
; 640  : 	CHARFORMAT format;
; 641  : 
; 642  : 	GetSelectionCharFormat( format );

  01077	8d 45 ac	 lea	 eax, DWORD PTR _format$[ebp]
  0107a	50		 push	 eax
  0107b	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  0107e	e8 00 00 00 00	 call	 ?GetSelectionCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z ; CRichEditCtrl::GetSelectionCharFormat

; 643  : 
; 644  : 	GetSel(nStart, nEnd);

  01083	8d 4d f0	 lea	 ecx, DWORD PTR _nEnd$[ebp]
  01086	51		 push	 ecx
  01087	8d 55 a8	 lea	 edx, DWORD PTR _nStart$[ebp]
  0108a	52		 push	 edx
  0108b	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  0108e	e8 00 00 00 00	 call	 ?GetSel@CRichEditCtrl@@QBEXAAJ0@Z ; CRichEditCtrl::GetSel

; 645  : 
; 646  : 	ClientToScreen ( &point );

  01093	8d 45 0c	 lea	 eax, DWORD PTR _point$[ebp]
  01096	50		 push	 eax
  01097	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  0109a	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ClientToScreen

; 647  : 
; 648  : 	pMenu.CreatePopupMenu();

  0109f	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  010a2	e8 00 00 00 00	 call	 ?CreatePopupMenu@CMenu@@QAEHXZ ; CMenu::CreatePopupMenu

; 649  : 
; 650  : 	if ( m_dwStyle & READONLY ) {

  010a7	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  010aa	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  010ad	81 e2 00 08 00
	00		 and	 edx, 2048		; 00000800H
  010b3	85 d2		 test	 edx, edx
  010b5	74 5f		 je	 SHORT $L144696

; 651  : 		pMenu.AppendMenu ( MF_GRAYED, WM_CUT, "Cu&t" );

  010b7	68 00 00 00 00	 push	 OFFSET FLAT:$SG144697
  010bc	68 00 03 00 00	 push	 768			; 00000300H
  010c1	6a 01		 push	 1
  010c3	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  010c6	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 652  : 
; 653  : 		if (nStart == nEnd) {

  010cb	8b 45 a8	 mov	 eax, DWORD PTR _nStart$[ebp]
  010ce	3b 45 f0	 cmp	 eax, DWORD PTR _nEnd$[ebp]
  010d1	75 16		 jne	 SHORT $L144698

; 654  : 			pMenu.AppendMenu ( MF_GRAYED, WM_COPY, "&Copy" );

  010d3	68 00 00 00 00	 push	 OFFSET FLAT:$SG144699
  010d8	68 01 03 00 00	 push	 769			; 00000301H
  010dd	6a 01		 push	 1
  010df	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  010e2	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 655  : 		} else {

  010e7	eb 14		 jmp	 SHORT $L144700
$L144698:

; 656  : 			pMenu.AppendMenu ( MF_ENABLED, WM_COPY, "&Copy" );

  010e9	68 00 00 00 00	 push	 OFFSET FLAT:$SG144701
  010ee	68 01 03 00 00	 push	 769			; 00000301H
  010f3	6a 00		 push	 0
  010f5	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  010f8	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA
$L144700:

; 658  : 
; 659  : 		pMenu.AppendMenu ( MF_GRAYED, WM_PASTE, "&Paste" );

  010fd	68 00 00 00 00	 push	 OFFSET FLAT:$SG144702
  01102	68 02 03 00 00	 push	 770			; 00000302H
  01107	6a 01		 push	 1
  01109	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  0110c	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 660  : 	} else {

  01111	e9 92 00 00 00	 jmp	 $L144712
$L144696:

; 661  : 		if (nStart == nEnd) {

  01116	8b 4d a8	 mov	 ecx, DWORD PTR _nStart$[ebp]
  01119	3b 4d f0	 cmp	 ecx, DWORD PTR _nEnd$[ebp]
  0111c	75 2a		 jne	 SHORT $L144704

; 662  : 			pMenu.AppendMenu ( MF_GRAYED, WM_CUT, "Cu&t" );

  0111e	68 00 00 00 00	 push	 OFFSET FLAT:$SG144705
  01123	68 00 03 00 00	 push	 768			; 00000300H
  01128	6a 01		 push	 1
  0112a	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  0112d	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 663  : 			pMenu.AppendMenu ( MF_GRAYED, WM_COPY, "&Copy" );

  01132	68 00 00 00 00	 push	 OFFSET FLAT:$SG144706
  01137	68 01 03 00 00	 push	 769			; 00000301H
  0113c	6a 01		 push	 1
  0113e	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  01141	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 664  : 		} else {

  01146	eb 28		 jmp	 SHORT $L144707
$L144704:

; 665  : 			pMenu.AppendMenu ( MF_ENABLED, WM_CUT, "Cu&t" );

  01148	68 00 00 00 00	 push	 OFFSET FLAT:$SG144708
  0114d	68 00 03 00 00	 push	 768			; 00000300H
  01152	6a 00		 push	 0
  01154	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  01157	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 666  : 			pMenu.AppendMenu ( MF_ENABLED, WM_COPY, "&Copy" );

  0115c	68 00 00 00 00	 push	 OFFSET FLAT:$SG144709
  01161	68 01 03 00 00	 push	 769			; 00000301H
  01166	6a 00		 push	 0
  01168	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  0116b	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA
$L144707:

; 668  : 
; 669  : 		if (CanPaste()) {

  01170	6a 00		 push	 0
  01172	8b 4d a4	 mov	 ecx, DWORD PTR _this$[ebp]
  01175	e8 00 00 00 00	 call	 ?CanPaste@CRichEditCtrl@@QBEHI@Z ; CRichEditCtrl::CanPaste
  0117a	85 c0		 test	 eax, eax
  0117c	74 16		 je	 SHORT $L144710

; 670  : 			pMenu.AppendMenu ( MF_ENABLED, WM_PASTE, "&Paste" );

  0117e	68 00 00 00 00	 push	 OFFSET FLAT:$SG144711
  01183	68 02 03 00 00	 push	 770			; 00000302H
  01188	6a 00		 push	 0
  0118a	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  0118d	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 671  : 		} else {

  01192	eb 14		 jmp	 SHORT $L144712
$L144710:

; 672  : 			pMenu.AppendMenu ( MF_GRAYED, WM_PASTE, "&Paste" );

  01194	68 00 00 00 00	 push	 OFFSET FLAT:$SG144713
  01199	68 02 03 00 00	 push	 770			; 00000302H
  0119e	6a 01		 push	 1
  011a0	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  011a3	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA
$L144712:

; 675  : 
; 676  : 	pMenu.TrackPopupMenu( TPM_CENTERALIGN, point.x, point.y, this );

  011a8	6a 00		 push	 0
  011aa	8b 55 a4	 mov	 edx, DWORD PTR _this$[ebp]
  011ad	52		 push	 edx
  011ae	8b 45 10	 mov	 eax, DWORD PTR _point$[ebp+4]
  011b1	50		 push	 eax
  011b2	8b 4d 0c	 mov	 ecx, DWORD PTR _point$[ebp]
  011b5	51		 push	 ecx
  011b6	6a 04		 push	 4
  011b8	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  011bb	e8 00 00 00 00	 call	 ?TrackPopupMenu@CMenu@@QAEHIHHPAVCWnd@@PBUtagRECT@@@Z ; CMenu::TrackPopupMenu

; 677  : }

  011c0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  011c7	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  011ca	e8 00 00 00 00	 call	 ??1CMenu@@UAE@XZ	; CMenu::~CMenu
  011cf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  011d2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  011d9	8b e5		 mov	 esp, ebp
  011db	5d		 pop	 ebp
  011dc	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L150182:
  000b7	8d 4d e8	 lea	 ecx, DWORD PTR _pMenu$[ebp]
  000ba	e8 00 00 00 00	 call	 ??1CMenu@@UAE@XZ	; CMenu::~CMenu
  000bf	c3		 ret	 0
$L150185:
  000c0	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150184
  000c5	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnRButtonDown@CSkinEdit@@QAEXIVCPoint@@@Z ENDP		; CSkinEdit::OnRButtonDown
EXTRN	?OnMouseWheel@CSkinScrollBar@@QAEXIF@Z:NEAR	; CSkinScrollBar::OnMouseWheel
_TEXT	SEGMENT
_nFlags$ = 8
_zDelta$ = 12
_this$ = -4
?OnMouseWheel@CSkinEdit@@UAEXIF@Z PROC NEAR		; CSkinEdit::OnMouseWheel

; 681  : {

  011df	55		 push	 ebp
  011e0	8b ec		 mov	 ebp, esp
  011e2	51		 push	 ecx
  011e3	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 682  : 	if ( m_pBar )

  011e6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  011e9	83 78 d0 00	 cmp	 DWORD PTR [eax-48], 0
  011ed	74 14		 je	 SHORT $L144719

; 683  : 		m_pBar->OnMouseWheel ( nFlags, zDelta );

  011ef	66 8b 4d 0c	 mov	 cx, WORD PTR _zDelta$[ebp]
  011f3	51		 push	 ecx
  011f4	8b 55 08	 mov	 edx, DWORD PTR _nFlags$[ebp]
  011f7	52		 push	 edx
  011f8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  011fb	8b 48 d0	 mov	 ecx, DWORD PTR [eax-48]
  011fe	e8 00 00 00 00	 call	 ?OnMouseWheel@CSkinScrollBar@@QAEXIF@Z ; CSkinScrollBar::OnMouseWheel
$L144719:

; 684  : }

  01203	8b e5		 mov	 esp, ebp
  01205	5d		 pop	 ebp
  01206	c2 08 00	 ret	 8
?OnMouseWheel@CSkinEdit@@UAEXIF@Z ENDP			; CSkinEdit::OnMouseWheel
_TEXT	ENDS
PUBLIC	?OnSetFocus@CWnd@@IAEXPAV1@@Z			; CWnd::OnSetFocus
_TEXT	SEGMENT
_pOldWnd$ = 8
_this$ = -4
?OnSetFocus@CSkinEdit@@QAEXPAVCWnd@@@Z PROC NEAR	; CSkinEdit::OnSetFocus

; 688  : {

  01209	55		 push	 ebp
  0120a	8b ec		 mov	 ebp, esp
  0120c	51		 push	 ecx
  0120d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 689  : 	if ( m_bHiliteOnFocus ) {

  01210	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01213	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [eax+132], 0
  0121a	74 0c		 je	 SHORT $L144724

; 690  : 		SetSel ( 0, -1 );

  0121c	6a ff		 push	 -1
  0121e	6a 00		 push	 0
  01220	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01223	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel
$L144724:

; 692  : 
; 693  : 	CRichEditCtrl::OnSetFocus ( pOldWnd );

  01228	8b 4d 08	 mov	 ecx, DWORD PTR _pOldWnd$[ebp]
  0122b	51		 push	 ecx
  0122c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0122f	e8 00 00 00 00	 call	 ?OnSetFocus@CWnd@@IAEXPAV1@@Z ; CWnd::OnSetFocus

; 694  : }

  01234	8b e5		 mov	 esp, ebp
  01236	5d		 pop	 ebp
  01237	c2 04 00	 ret	 4
?OnSetFocus@CSkinEdit@@QAEXPAVCWnd@@@Z ENDP		; CSkinEdit::OnSetFocus
_TEXT	ENDS
PUBLIC	?OnKillFocus@CSkinEdit@@QAEXPAVCWnd@@@Z		; CSkinEdit::OnKillFocus
_TEXT	SEGMENT
_this$ = -4
?OnKillFocus@CSkinEdit@@QAEXPAVCWnd@@@Z PROC NEAR	; CSkinEdit::OnKillFocus

; 698  : {

  0123a	55		 push	 ebp
  0123b	8b ec		 mov	 ebp, esp
  0123d	51		 push	 ecx
  0123e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 699  : 	if ( m_bCloseOnFocusLoss && m_pParentWnd )

  01241	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01244	83 b8 88 00 00
	00 00		 cmp	 DWORD PTR [eax+136], 0
  0124b	74 1f		 je	 SHORT $L144729
  0124d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01250	83 79 70 00	 cmp	 DWORD PTR [ecx+112], 0
  01254	74 16		 je	 SHORT $L144729

; 700  : 		m_pParentWnd->CloseSelf( true );

  01256	6a 01		 push	 1
  01258	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0125b	8b 4a 70	 mov	 ecx, DWORD PTR [edx+112]
  0125e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01261	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  01264	8b 02		 mov	 eax, DWORD PTR [edx]
  01266	ff 90 c4 00 00
	00		 call	 DWORD PTR [eax+196]
$L144729:

; 701  : }

  0126c	8b e5		 mov	 esp, ebp
  0126e	5d		 pop	 ebp
  0126f	c2 04 00	 ret	 4
?OnKillFocus@CSkinEdit@@QAEXPAVCWnd@@@Z ENDP		; CSkinEdit::OnKillFocus
_TEXT	ENDS
PUBLIC	?Width@CRect@@QBEHXZ				; CRect::Width
PUBLIC	?IntersectRect@CRect@@QAEHPBUtagRECT@@0@Z	; CRect::IntersectRect
PUBLIC	?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z		; CWnd::MoveWindow
PUBLIC	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z		; CWnd::GetClientRect
PUBLIC	?GetFirstVisibleLine@CRichEditCtrl@@QBEHXZ	; CRichEditCtrl::GetFirstVisibleLine
EXTRN	?NormalizeRect@CRect@@QAEXXZ:NEAR		; CRect::NormalizeRect
EXTRN	?SetWidth@CSkinObj@@QAEXH@Z:NEAR		; CSkinObj::SetWidth
EXTRN	?LineScroll@CRichEditCtrl@@QAEXHH@Z:NEAR	; CRichEditCtrl::LineScroll
_TEXT	SEGMENT
_this$ = -56
_myRect$144734 = -52
_barRect$144735 = -20
_interRect$144736 = -36
_nVisible$ = -4
?UpdateMe@CSkinEdit@@UAEXXZ PROC NEAR			; CSkinEdit::UpdateMe

; 705  : {

  01272	55		 push	 ebp
  01273	8b ec		 mov	 ebp, esp
  01275	83 ec 38	 sub	 esp, 56			; 00000038H
  01278	56		 push	 esi
  01279	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx

; 706  : 	if ( !m_bShown && m_pBar && ( m_nPageSize < m_nMax ) ) {

  0127c	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  0127f	83 78 54 00	 cmp	 DWORD PTR [eax+84], 0
  01283	0f 85 f9 00 00
	00		 jne	 $L144737
  01289	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  0128c	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  01290	0f 84 ec 00 00
	00		 je	 $L144737
  01296	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  01299	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  0129c	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  0129f	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  012a2	0f 8d da 00 00
	00		 jge	 $L144737

; 707  : 		CRect myRect;

  012a8	8d 4d cc	 lea	 ecx, DWORD PTR _myRect$144734[ebp]
  012ab	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 708  : 		CRect barRect;

  012b0	8d 4d ec	 lea	 ecx, DWORD PTR _barRect$144735[ebp]
  012b3	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 709  : 		CRect interRect;

  012b8	8d 4d dc	 lea	 ecx, DWORD PTR _interRect$144736[ebp]
  012bb	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 710  : 
; 711  : 		GetClientRect( myRect );

  012c0	8d 4d cc	 lea	 ecx, DWORD PTR _myRect$144734[ebp]
  012c3	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  012c8	50		 push	 eax
  012c9	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  012cc	83 e9 40	 sub	 ecx, 64			; 00000040H
  012cf	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 712  : 		m_pBar->GetRect( barRect );

  012d4	8d 4d ec	 lea	 ecx, DWORD PTR _barRect$144735[ebp]
  012d7	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  012dc	50		 push	 eax
  012dd	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  012e0	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  012e3	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 713  : 
; 714  : 		myRect.NormalizeRect();

  012e8	8d 4d cc	 lea	 ecx, DWORD PTR _myRect$144734[ebp]
  012eb	e8 00 00 00 00	 call	 ?NormalizeRect@CRect@@QAEXXZ ; CRect::NormalizeRect

; 715  : 		barRect.NormalizeRect();

  012f0	8d 4d ec	 lea	 ecx, DWORD PTR _barRect$144735[ebp]
  012f3	e8 00 00 00 00	 call	 ?NormalizeRect@CRect@@QAEXXZ ; CRect::NormalizeRect

; 716  : 
; 717  : 		if ( interRect.IntersectRect( myRect, barRect ) ) {

  012f8	8d 4d ec	 lea	 ecx, DWORD PTR _barRect$144735[ebp]
  012fb	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  01300	50		 push	 eax
  01301	8d 4d cc	 lea	 ecx, DWORD PTR _myRect$144734[ebp]
  01304	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  01309	50		 push	 eax
  0130a	8d 4d dc	 lea	 ecx, DWORD PTR _interRect$144736[ebp]
  0130d	e8 00 00 00 00	 call	 ?IntersectRect@CRect@@QAEHPBUtagRECT@@0@Z ; CRect::IntersectRect
  01312	85 c0		 test	 eax, eax
  01314	74 6c		 je	 SHORT $L144737

; 718  : 			myRect.right -= barRect.Width();

  01316	8d 4d ec	 lea	 ecx, DWORD PTR _barRect$144735[ebp]
  01319	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  0131e	8b 4d d4	 mov	 ecx, DWORD PTR _myRect$144734[ebp+8]
  01321	2b c8		 sub	 ecx, eax
  01323	89 4d d4	 mov	 DWORD PTR _myRect$144734[ebp+8], ecx

; 719  : 
; 720  : 			MoveWindow( myRect );

  01326	6a 01		 push	 1
  01328	8d 4d cc	 lea	 ecx, DWORD PTR _myRect$144734[ebp]
  0132b	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  01330	50		 push	 eax
  01331	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  01334	83 e9 40	 sub	 ecx, 64			; 00000040H
  01337	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ; CWnd::MoveWindow

; 721  : 			SetWidth( myRect.Width() - barRect.Width() );

  0133c	8d 4d cc	 lea	 ecx, DWORD PTR _myRect$144734[ebp]
  0133f	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  01344	8b f0		 mov	 esi, eax
  01346	8d 4d ec	 lea	 ecx, DWORD PTR _barRect$144735[ebp]
  01349	e8 00 00 00 00	 call	 ?Width@CRect@@QBEHXZ	; CRect::Width
  0134e	2b f0		 sub	 esi, eax
  01350	56		 push	 esi
  01351	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  01354	83 c1 20	 add	 ecx, 32			; 00000020H
  01357	e8 00 00 00 00	 call	 ?SetWidth@CSkinObj@@QAEXH@Z ; CSkinObj::SetWidth

; 722  : 
; 723  : 			m_bShown = true;

  0135c	8b 55 c8	 mov	 edx, DWORD PTR _this$[ebp]
  0135f	c7 42 54 01 00
	00 00		 mov	 DWORD PTR [edx+84], 1

; 724  : 			SetRange( 0, ( GetLineCount() - 1 ) );

  01366	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  01369	83 e9 40	 sub	 ecx, 64			; 00000040H
  0136c	e8 00 00 00 00	 call	 ?GetLineCount@CRichEditCtrl@@QBEHXZ ; CRichEditCtrl::GetLineCount
  01371	83 e8 01	 sub	 eax, 1
  01374	50		 push	 eax
  01375	6a 00		 push	 0
  01377	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  0137a	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  0137d	8b 10		 mov	 edx, DWORD PTR [eax]
  0137f	ff 52 10	 call	 DWORD PTR [edx+16]
$L144737:

; 727  : 
; 728  : 	int nVisible = GetFirstVisibleLine();

  01382	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  01385	83 e9 40	 sub	 ecx, 64			; 00000040H
  01388	e8 00 00 00 00	 call	 ?GetFirstVisibleLine@CRichEditCtrl@@QBEHXZ ; CRichEditCtrl::GetFirstVisibleLine
  0138d	89 45 fc	 mov	 DWORD PTR _nVisible$[ebp], eax

; 729  : 
; 730  : 	if ( m_pBar && m_nFirstVisibleLine != nVisible ) {

  01390	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  01393	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  01397	74 22		 je	 SHORT $L144739
  01399	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  0139c	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0139f	3b 55 fc	 cmp	 edx, DWORD PTR _nVisible$[ebp]
  013a2	74 17		 je	 SHORT $L144739

; 731  : 		LineScroll ( m_nFirstVisibleLine - nVisible );

  013a4	6a 00		 push	 0
  013a6	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  013a9	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  013ac	2b 4d fc	 sub	 ecx, DWORD PTR _nVisible$[ebp]
  013af	51		 push	 ecx
  013b0	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  013b3	83 e9 40	 sub	 ecx, 64			; 00000040H
  013b6	e8 00 00 00 00	 call	 ?LineScroll@CRichEditCtrl@@QAEXHH@Z ; CRichEditCtrl::LineScroll
$L144739:

; 733  : }

  013bb	5e		 pop	 esi
  013bc	8b e5		 mov	 esp, ebp
  013be	5d		 pop	 ebp
  013bf	c3		 ret	 0
?UpdateMe@CSkinEdit@@UAEXXZ ENDP			; CSkinEdit::UpdateMe
_TEXT	ENDS
PUBLIC	?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z	; CRichEditCtrl::GetSel
PUBLIC	?LineFromChar@CRichEditCtrl@@QBEJJ@Z		; CRichEditCtrl::LineFromChar
PUBLIC	?SetSel@CRichEditCtrl@@QAEXAAU_charrange@@@Z	; CRichEditCtrl::SetSel
PUBLIC	?Clear@CRichEditCtrl@@QAEXXZ			; CRichEditCtrl::Clear
EXTRN	?PositionThumb@CSkinScrollBar@@QAEXHH@Z:NEAR	; CSkinScrollBar::PositionThumb
EXTRN	?LineIndex@CRichEditCtrl@@QBEHH@Z:NEAR		; CRichEditCtrl::LineIndex
_TEXT	SEGMENT
_nStart$ = 8
_nEnd$ = 12
_this$ = -28
_nSize$ = -4
_nNewSize$ = -8
_nLoc$144754 = -12
_cr$144759 = -20
_nPos$144761 = -24
?SetRange@CSkinEdit@@UAEXHH@Z PROC NEAR			; CSkinEdit::SetRange

; 736  : {

  013c0	55		 push	 ebp
  013c1	8b ec		 mov	 ebp, esp
  013c3	83 ec 24	 sub	 esp, 36			; 00000024H
  013c6	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 737  : 	int nSize = max ( m_nMin, ( m_nMax - m_nMin - m_nPageSize ) );

  013c9	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  013cc	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  013cf	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  013d2	2b 51 08	 sub	 edx, DWORD PTR [ecx+8]
  013d5	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  013d8	2b 50 18	 sub	 edx, DWORD PTR [eax+24]
  013db	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  013de	39 51 08	 cmp	 DWORD PTR [ecx+8], edx
  013e1	7e 0b		 jle	 SHORT $L150192
  013e3	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  013e6	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  013e9	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
  013ec	eb 15		 jmp	 SHORT $L150193
$L150192:
  013ee	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  013f1	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  013f4	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  013f7	2b 42 08	 sub	 eax, DWORD PTR [edx+8]
  013fa	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  013fd	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  01400	89 45 e0	 mov	 DWORD PTR -32+[ebp], eax
$L150193:
  01403	8b 55 e0	 mov	 edx, DWORD PTR -32+[ebp]
  01406	89 55 fc	 mov	 DWORD PTR _nSize$[ebp], edx

; 738  : 	int nNewSize = max ( m_nMin, ( nEnd - nStart - m_nPageSize ) );

  01409	8b 45 0c	 mov	 eax, DWORD PTR _nEnd$[ebp]
  0140c	2b 45 08	 sub	 eax, DWORD PTR _nStart$[ebp]
  0140f	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  01412	2b 41 18	 sub	 eax, DWORD PTR [ecx+24]
  01415	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  01418	39 42 08	 cmp	 DWORD PTR [edx+8], eax
  0141b	7e 0b		 jle	 SHORT $L150194
  0141d	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  01420	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01423	89 4d dc	 mov	 DWORD PTR -36+[ebp], ecx
  01426	eb 0f		 jmp	 SHORT $L150195
$L150194:
  01428	8b 55 0c	 mov	 edx, DWORD PTR _nEnd$[ebp]
  0142b	2b 55 08	 sub	 edx, DWORD PTR _nStart$[ebp]
  0142e	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  01431	2b 50 18	 sub	 edx, DWORD PTR [eax+24]
  01434	89 55 dc	 mov	 DWORD PTR -36+[ebp], edx
$L150195:
  01437	8b 4d dc	 mov	 ecx, DWORD PTR -36+[ebp]
  0143a	89 4d f8	 mov	 DWORD PTR _nNewSize$[ebp], ecx

; 739  : 
; 740  : 	if ( m_nFirstVisibleLine == nSize ) {

  0143d	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  01440	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  01443	3b 45 fc	 cmp	 eax, DWORD PTR _nSize$[ebp]
  01446	75 14		 jne	 SHORT $L144747

; 741  : 		if ( m_bFocusBottom )

  01448	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0144b	83 79 1c 00	 cmp	 DWORD PTR [ecx+28], 0
  0144f	74 09		 je	 SHORT $L144748

; 742  : 			m_nFirstVisibleLine = nNewSize;

  01451	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  01454	8b 45 f8	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  01457	89 42 10	 mov	 DWORD PTR [edx+16], eax
$L144748:

; 743  : 	} else if ( nEnd < m_nMax ) {

  0145a	eb 79		 jmp	 SHORT $L144755
$L144747:
  0145c	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0145f	8b 55 0c	 mov	 edx, DWORD PTR _nEnd$[ebp]
  01462	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  01465	7d 33		 jge	 SHORT $L144750

; 744  : 		m_nFirstVisibleLine += nEnd - m_nMax;

  01467	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0146a	8b 4d 0c	 mov	 ecx, DWORD PTR _nEnd$[ebp]
  0146d	2b 48 0c	 sub	 ecx, DWORD PTR [eax+12]
  01470	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  01473	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  01476	03 c1		 add	 eax, ecx
  01478	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0147b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 745  : 
; 746  : 		if ( m_nFirstVisibleLine < m_nMin )

  0147e	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  01481	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  01484	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  01487	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0148a	7d 0c		 jge	 SHORT $L144751

; 747  : 			m_nFirstVisibleLine = m_nMin;

  0148c	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  0148f	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  01492	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  01495	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$L144751:

; 748  : 	} else if ( nEnd > m_nMax ) {

  01498	eb 3b		 jmp	 SHORT $L144755
$L144750:
  0149a	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  0149d	8b 45 0c	 mov	 eax, DWORD PTR _nEnd$[ebp]
  014a0	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  014a3	7e 30		 jle	 SHORT $L144755

; 749  : 		long nLoc = LineFromChar( -1 );

  014a5	6a ff		 push	 -1
  014a7	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  014aa	83 e9 40	 sub	 ecx, 64			; 00000040H
  014ad	e8 00 00 00 00	 call	 ?LineFromChar@CRichEditCtrl@@QBEJJ@Z ; CRichEditCtrl::LineFromChar
  014b2	89 45 f4	 mov	 DWORD PTR _nLoc$144754[ebp], eax

; 750  : 
; 751  : 		if ( ( nLoc - m_nFirstVisibleLine ) > m_nPageSize )

  014b5	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  014b8	8b 55 f4	 mov	 edx, DWORD PTR _nLoc$144754[ebp]
  014bb	2b 51 10	 sub	 edx, DWORD PTR [ecx+16]
  014be	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  014c1	3b 50 18	 cmp	 edx, DWORD PTR [eax+24]
  014c4	7e 0f		 jle	 SHORT $L144755

; 752  : 			m_nFirstVisibleLine ++;

  014c6	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  014c9	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  014cc	83 c2 01	 add	 edx, 1
  014cf	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  014d2	89 50 10	 mov	 DWORD PTR [eax+16], edx
$L144755:

; 754  : 
; 755  : 	m_nMin = nStart;

  014d5	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  014d8	8b 55 08	 mov	 edx, DWORD PTR _nStart$[ebp]
  014db	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 756  : 	m_nMax = nEnd;

  014de	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  014e1	8b 4d 0c	 mov	 ecx, DWORD PTR _nEnd$[ebp]
  014e4	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 757  : 
; 758  : 	UpdateMe();

  014e7	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  014ea	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  014ed	8b 02		 mov	 eax, DWORD PTR [edx]
  014ef	ff 10		 call	 DWORD PTR [eax]

; 759  : 
; 760  : 	if ( m_pBar )

  014f1	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  014f4	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  014f8	74 1b		 je	 SHORT $L144756

; 761  : 		m_pBar->PositionThumb ( m_nFirstVisibleLine, nNewSize );

  014fa	8b 55 f8	 mov	 edx, DWORD PTR _nNewSize$[ebp]
  014fd	52		 push	 edx
  014fe	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  01501	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  01504	51		 push	 ecx
  01505	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  01508	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0150b	e8 00 00 00 00	 call	 ?PositionThumb@CSkinScrollBar@@QAEXHH@Z ; CSkinScrollBar::PositionThumb

; 762  : 	else if ( ( m_dwStyle & MULTILINE ) && ! ( m_dwStyle & READONLY ) ) {

  01510	e9 86 00 00 00	 jmp	 $L144760
$L144756:
  01515	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  01518	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0151b	83 e1 04	 and	 ecx, 4
  0151e	85 c9		 test	 ecx, ecx
  01520	74 79		 je	 SHORT $L144760
  01522	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  01525	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  01528	25 00 08 00 00	 and	 eax, 2048		; 00000800H
  0152d	85 c0		 test	 eax, eax
  0152f	75 6a		 jne	 SHORT $L144760

; 763  : 		CHARRANGE cr;
; 764  : 
; 765  : 		GetSel( cr );

  01531	8d 4d ec	 lea	 ecx, DWORD PTR _cr$144759[ebp]
  01534	51		 push	 ecx
  01535	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  01538	83 e9 40	 sub	 ecx, 64			; 00000040H
  0153b	e8 00 00 00 00	 call	 ?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z ; CRichEditCtrl::GetSel

; 766  : 
; 767  : 		if ( GetLineCount() > m_nPageSize ) {

  01540	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  01543	83 e9 40	 sub	 ecx, 64			; 00000040H
  01546	e8 00 00 00 00	 call	 ?GetLineCount@CRichEditCtrl@@QBEHXZ ; CRichEditCtrl::GetLineCount
  0154b	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  0154e	3b 42 18	 cmp	 eax, DWORD PTR [edx+24]
  01551	7e 48		 jle	 SHORT $L144760

; 768  : 			int nPos = LineIndex( m_nPageSize );

  01553	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  01556	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  01559	51		 push	 ecx
  0155a	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0155d	83 e9 40	 sub	 ecx, 64			; 00000040H
  01560	e8 00 00 00 00	 call	 ?LineIndex@CRichEditCtrl@@QBEHH@Z ; CRichEditCtrl::LineIndex
  01565	89 45 e8	 mov	 DWORD PTR _nPos$144761[ebp], eax

; 769  : 												
; 770  : 			SetSel( nPos, -1 );

  01568	6a ff		 push	 -1
  0156a	8b 55 e8	 mov	 edx, DWORD PTR _nPos$144761[ebp]
  0156d	52		 push	 edx
  0156e	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  01571	83 e9 40	 sub	 ecx, 64			; 00000040H
  01574	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 771  : 			Clear();

  01579	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0157c	83 e9 40	 sub	 ecx, 64			; 00000040H
  0157f	e8 00 00 00 00	 call	 ?Clear@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::Clear

; 772  : 			SetSel( cr );

  01584	8d 45 ec	 lea	 eax, DWORD PTR _cr$144759[ebp]
  01587	50		 push	 eax
  01588	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0158b	83 e9 40	 sub	 ecx, 64			; 00000040H
  0158e	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXAAU_charrange@@@Z ; CRichEditCtrl::SetSel

; 773  : 
; 774  : 			MessageBeep ( 0 );

  01593	6a 00		 push	 0
  01595	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4
$L144760:

; 777  : }

  0159b	8b e5		 mov	 esp, ebp
  0159d	5d		 pop	 ebp
  0159e	c2 08 00	 ret	 8
?SetRange@CSkinEdit@@UAEXHH@Z ENDP			; CSkinEdit::SetRange
_TEXT	ENDS
PUBLIC	?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z ; CSkinEdit::SetScrollBar
EXTRN	?SetScrollObj@CSkinScrollBar@@QAEXPAVCScrollable@@@Z:NEAR ; CSkinScrollBar::SetScrollObj
_TEXT	SEGMENT
_pBar$ = 8
_this$ = -52
_myRect$ = -48
_barRect$ = -16
_interRect$ = -32
?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z PROC NEAR ; CSkinEdit::SetScrollBar

; 780  : {

  015a1	55		 push	 ebp
  015a2	8b ec		 mov	 ebp, esp
  015a4	83 ec 38	 sub	 esp, 56			; 00000038H
  015a7	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 781  : 	m_pBar = pBar;

  015aa	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  015ad	8b 4d 08	 mov	 ecx, DWORD PTR _pBar$[ebp]
  015b0	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 782  : 
; 783  :     if ( !m_pBar )

  015b3	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  015b6	83 7a 44 00	 cmp	 DWORD PTR [edx+68], 0
  015ba	75 05		 jne	 SHORT $L144766

; 784  :         return;

  015bc	e9 9c 00 00 00	 jmp	 $L144765
$L144766:

; 785  : 
; 786  : 	m_pBar->SetScrollObj( this );

  015c1	83 7d cc 00	 cmp	 DWORD PTR _this$[ebp], 0
  015c5	74 0b		 je	 SHORT $L150197
  015c7	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  015ca	83 c0 40	 add	 eax, 64			; 00000040H
  015cd	89 45 c8	 mov	 DWORD PTR -56+[ebp], eax
  015d0	eb 07		 jmp	 SHORT $L150198
$L150197:
  015d2	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR -56+[ebp], 0
$L150198:
  015d9	8b 4d c8	 mov	 ecx, DWORD PTR -56+[ebp]
  015dc	51		 push	 ecx
  015dd	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  015e0	8b 4a 44	 mov	 ecx, DWORD PTR [edx+68]
  015e3	e8 00 00 00 00	 call	 ?SetScrollObj@CSkinScrollBar@@QAEXPAVCScrollable@@@Z ; CSkinScrollBar::SetScrollObj

; 787  : 
; 788  : 	CRect myRect;

  015e8	8d 4d d0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  015eb	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 789  : 	CRect barRect;

  015f0	8d 4d f0	 lea	 ecx, DWORD PTR _barRect$[ebp]
  015f3	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 790  : 	CRect interRect;

  015f8	8d 4d e0	 lea	 ecx, DWORD PTR _interRect$[ebp]
  015fb	e8 00 00 00 00	 call	 ??0CRect@@QAE@XZ	; CRect::CRect

; 791  : 
; 792  : 	GetClientRect( myRect );

  01600	8d 4d d0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  01603	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  01608	50		 push	 eax
  01609	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0160c	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 793  : 	m_pBar->GetRect( barRect );

  01611	8d 4d f0	 lea	 ecx, DWORD PTR _barRect$[ebp]
  01614	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  01619	50		 push	 eax
  0161a	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  0161d	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  01620	e8 00 00 00 00	 call	 ?GetRect@CSkinObj@@QAEHPAUtagRECT@@@Z ; CSkinObj::GetRect

; 794  : 
; 795  : 	myRect.NormalizeRect();

  01625	8d 4d d0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  01628	e8 00 00 00 00	 call	 ?NormalizeRect@CRect@@QAEXXZ ; CRect::NormalizeRect

; 796  : 	barRect.NormalizeRect();

  0162d	8d 4d f0	 lea	 ecx, DWORD PTR _barRect$[ebp]
  01630	e8 00 00 00 00	 call	 ?NormalizeRect@CRect@@QAEXXZ ; CRect::NormalizeRect

; 797  : 
; 798  : 	m_bShown = ! interRect.IntersectRect( myRect, barRect );

  01635	8d 4d f0	 lea	 ecx, DWORD PTR _barRect$[ebp]
  01638	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  0163d	50		 push	 eax
  0163e	8d 4d d0	 lea	 ecx, DWORD PTR _myRect$[ebp]
  01641	e8 00 00 00 00	 call	 ??BCRect@@QAEPAUtagRECT@@XZ ; CRect::operator tagRECT *
  01646	50		 push	 eax
  01647	8d 4d e0	 lea	 ecx, DWORD PTR _interRect$[ebp]
  0164a	e8 00 00 00 00	 call	 ?IntersectRect@CRect@@QAEHPBUtagRECT@@0@Z ; CRect::IntersectRect
  0164f	f7 d8		 neg	 eax
  01651	1b c0		 sbb	 eax, eax
  01653	40		 inc	 eax
  01654	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  01657	89 81 94 00 00
	00		 mov	 DWORD PTR [ecx+148], eax
$L144765:

; 799  : }

  0165d	8b e5		 mov	 esp, ebp
  0165f	5d		 pop	 ebp
  01660	c2 04 00	 ret	 4
?SetScrollBar@CSkinEdit@@QAEXPAVCSkinScrollBar@@@Z ENDP	; CSkinEdit::SetScrollBar
_TEXT	ENDS
EXTRN	__imp__GetAsyncKeyState@4:NEAR
_TEXT	SEGMENT
_pNotifyStruct$ = 8
_pResult$ = 12
_this$ = -8
_pFilter$ = -4
?OnMsgFilter@CSkinEdit@@QAEXPAUtagNMHDR@@PAJ@Z PROC NEAR ; CSkinEdit::OnMsgFilter

; 803  : {

  01663	55		 push	 ebp
  01664	8b ec		 mov	 ebp, esp
  01666	83 ec 08	 sub	 esp, 8
  01669	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 804  : 	MSGFILTER *pFilter = (MSGFILTER *)pNotifyStruct;

  0166c	8b 45 08	 mov	 eax, DWORD PTR _pNotifyStruct$[ebp]
  0166f	89 45 fc	 mov	 DWORD PTR _pFilter$[ebp], eax

; 805  : 	*pResult = 0;

  01672	8b 4d 0c	 mov	 ecx, DWORD PTR _pResult$[ebp]
  01675	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 806  : 
; 807  : 	// intercept CTRL-V...
; 808  : 	if ( (pFilter->msg == WM_KEYDOWN) && (pFilter->wParam == 'V') && (GetAsyncKeyState ( VK_CONTROL ) < 0) ) {

  0167b	8b 55 fc	 mov	 edx, DWORD PTR _pFilter$[ebp]
  0167e	81 7a 0c 00 01
	00 00		 cmp	 DWORD PTR [edx+12], 256	; 00000100H
  01685	75 33		 jne	 SHORT $L144777
  01687	8b 45 fc	 mov	 eax, DWORD PTR _pFilter$[ebp]
  0168a	83 78 10 56	 cmp	 DWORD PTR [eax+16], 86	; 00000056H
  0168e	75 2a		 jne	 SHORT $L144777
  01690	6a 11		 push	 17			; 00000011H
  01692	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetAsyncKeyState@4
  01698	0f bf c8	 movsx	 ecx, ax
  0169b	85 c9		 test	 ecx, ecx
  0169d	7d 1b		 jge	 SHORT $L144777

; 809  : 		// alter the message so that it is nonsensical...
; 810  : 		pFilter->wParam = 0;

  0169f	8b 55 fc	 mov	 edx, DWORD PTR _pFilter$[ebp]
  016a2	c7 42 10 00 00
	00 00		 mov	 DWORD PTR [edx+16], 0

; 811  : 
; 812  : 		OnPaste();

  016a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  016ac	e8 00 00 00 00	 call	 ?OnPaste@CSkinEdit@@QAEXXZ ; CSkinEdit::OnPaste

; 813  : 
; 814  : 		*pResult = 1;

  016b1	8b 45 0c	 mov	 eax, DWORD PTR _pResult$[ebp]
  016b4	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
$L144777:

; 816  : }

  016ba	8b e5		 mov	 esp, ebp
  016bc	5d		 pop	 ebp
  016bd	c2 08 00	 ret	 8
?OnMsgFilter@CSkinEdit@@QAEXPAUtagNMHDR@@PAJ@Z ENDP	; CSkinEdit::OnMsgFilter
_TEXT	ENDS
PUBLIC	?SetAlnum@CSkinEdit@@QAEXH@Z			; CSkinEdit::SetAlnum
_TEXT	SEGMENT
_bState$ = 8
_this$ = -4
?SetAlnum@CSkinEdit@@QAEXH@Z PROC NEAR			; CSkinEdit::SetAlnum

; 820  : {

  016c0	55		 push	 ebp
  016c1	8b ec		 mov	 ebp, esp
  016c3	51		 push	 ecx
  016c4	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 821  : 	m_bIsAlnum = bState;

  016c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  016ca	8b 4d 08	 mov	 ecx, DWORD PTR _bState$[ebp]
  016cd	89 88 8c 00 00
	00		 mov	 DWORD PTR [eax+140], ecx

; 822  : }

  016d3	8b e5		 mov	 esp, ebp
  016d5	5d		 pop	 ebp
  016d6	c2 04 00	 ret	 4
?SetAlnum@CSkinEdit@@QAEXH@Z ENDP			; CSkinEdit::SetAlnum
_TEXT	ENDS
PUBLIC	?SetSpace@CSkinEdit@@QAEXH@Z			; CSkinEdit::SetSpace
_TEXT	SEGMENT
_bState$ = 8
_this$ = -4
?SetSpace@CSkinEdit@@QAEXH@Z PROC NEAR			; CSkinEdit::SetSpace

; 826  : {

  016d9	55		 push	 ebp
  016da	8b ec		 mov	 ebp, esp
  016dc	51		 push	 ecx
  016dd	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 827  : 	m_bIsSpace = bState;

  016e0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  016e3	8b 4d 08	 mov	 ecx, DWORD PTR _bState$[ebp]
  016e6	89 88 90 00 00
	00		 mov	 DWORD PTR [eax+144], ecx

; 828  : }

  016ec	8b e5		 mov	 esp, ebp
  016ee	5d		 pop	 ebp
  016ef	c2 04 00	 ret	 4
?SetSpace@CSkinEdit@@QAEXH@Z ENDP			; CSkinEdit::SetSpace
_TEXT	ENDS
PUBLIC	?SetHiliteOnFocus@CSkinEdit@@QAEXH@Z		; CSkinEdit::SetHiliteOnFocus
_TEXT	SEGMENT
_bState$ = 8
_this$ = -4
?SetHiliteOnFocus@CSkinEdit@@QAEXH@Z PROC NEAR		; CSkinEdit::SetHiliteOnFocus

; 832  : {

  016f2	55		 push	 ebp
  016f3	8b ec		 mov	 ebp, esp
  016f5	51		 push	 ecx
  016f6	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 833  : 	m_bHiliteOnFocus = bState;

  016f9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  016fc	8b 4d 08	 mov	 ecx, DWORD PTR _bState$[ebp]
  016ff	89 88 84 00 00
	00		 mov	 DWORD PTR [eax+132], ecx

; 834  : }

  01705	8b e5		 mov	 esp, ebp
  01707	5d		 pop	 ebp
  01708	c2 04 00	 ret	 4
?SetHiliteOnFocus@CSkinEdit@@QAEXH@Z ENDP		; CSkinEdit::SetHiliteOnFocus
_TEXT	ENDS
PUBLIC	?OnKeyDown@CWnd@@IAEXIII@Z			; CWnd::OnKeyDown
_TEXT	SEGMENT
_nChar$ = 8
_nRepCnt$ = 12
_nFlags$ = 16
_this$ = -8
_nPos$144801 = -4
?OnKeyDown@CSkinEdit@@QAEXIII@Z PROC NEAR		; CSkinEdit::OnKeyDown

; 837  : {

  0170b	55		 push	 ebp
  0170c	8b ec		 mov	 ebp, esp
  0170e	83 ec 0c	 sub	 esp, 12			; 0000000cH
  01711	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 838  : 	CWnd::OnKeyDown( nChar, nRepCnt, nFlags );

  01714	8b 45 10	 mov	 eax, DWORD PTR _nFlags$[ebp]
  01717	50		 push	 eax
  01718	8b 4d 0c	 mov	 ecx, DWORD PTR _nRepCnt$[ebp]
  0171b	51		 push	 ecx
  0171c	8b 55 08	 mov	 edx, DWORD PTR _nChar$[ebp]
  0171f	52		 push	 edx
  01720	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01723	e8 00 00 00 00	 call	 ?OnKeyDown@CWnd@@IAEXIII@Z ; CWnd::OnKeyDown

; 839  : 
; 840  : 	switch ( nChar ) {

  01728	8b 45 08	 mov	 eax, DWORD PTR _nChar$[ebp]
  0172b	89 45 f4	 mov	 DWORD PTR -12+[ebp], eax
  0172e	8b 4d f4	 mov	 ecx, DWORD PTR -12+[ebp]
  01731	83 e9 21	 sub	 ecx, 33			; 00000021H
  01734	89 4d f4	 mov	 DWORD PTR -12+[ebp], ecx
  01737	83 7d f4 07	 cmp	 DWORD PTR -12+[ebp], 7
  0173b	77 73		 ja	 SHORT $L144797
  0173d	8b 45 f4	 mov	 eax, DWORD PTR -12+[ebp]
  01740	33 d2		 xor	 edx, edx
  01742	8a 90 00 00 00
	00		 mov	 dl, BYTE PTR $L150204[eax]
  01748	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $L150205[edx*4]
$L144800:

; 848  : 				int nPos = LineFromChar( -1 );

  0174f	6a ff		 push	 -1
  01751	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01754	e8 00 00 00 00	 call	 ?LineFromChar@CRichEditCtrl@@QBEJJ@Z ; CRichEditCtrl::LineFromChar
  01759	89 45 fc	 mov	 DWORD PTR _nPos$144801[ebp], eax

; 849  : 
; 850  : 				if ( nPos < m_nFirstVisibleLine ) {

  0175c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0175f	8b 55 fc	 mov	 edx, DWORD PTR _nPos$144801[ebp]
  01762	3b 51 50	 cmp	 edx, DWORD PTR [ecx+80]
  01765	7d 19		 jge	 SHORT $L144802

; 851  : 					ChangeLocation( nPos - m_nFirstVisibleLine );

  01767	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0176a	8b 4d fc	 mov	 ecx, DWORD PTR _nPos$144801[ebp]
  0176d	2b 48 50	 sub	 ecx, DWORD PTR [eax+80]
  01770	51		 push	 ecx
  01771	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01774	83 c1 40	 add	 ecx, 64			; 00000040H
  01777	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0177a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0177d	ff 50 08	 call	 DWORD PTR [eax+8]
$L144802:

; 853  : 
; 854  : 				if ( nPos > ( m_nFirstVisibleLine + m_nPageSize ) ) {

  01780	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01783	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  01786	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  01789	03 50 58	 add	 edx, DWORD PTR [eax+88]
  0178c	39 55 fc	 cmp	 DWORD PTR _nPos$144801[ebp], edx
  0178f	7e 1f		 jle	 SHORT $L144803

; 855  : 					ChangeLocation( nPos - m_nFirstVisibleLine - m_nPageSize );

  01791	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  01794	8b 55 fc	 mov	 edx, DWORD PTR _nPos$144801[ebp]
  01797	2b 51 50	 sub	 edx, DWORD PTR [ecx+80]
  0179a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0179d	2b 50 58	 sub	 edx, DWORD PTR [eax+88]
  017a0	52		 push	 edx
  017a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  017a4	83 c1 40	 add	 ecx, 64			; 00000040H
  017a7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  017aa	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  017ad	ff 50 08	 call	 DWORD PTR [eax+8]
$L144803:
$L144797:

; 861  : }

  017b0	8b e5		 mov	 esp, ebp
  017b2	5d		 pop	 ebp
  017b3	c2 0c 00	 ret	 12			; 0000000cH
$L150205:
  017b6	00 00 00 00	 DD	 $L144800
  017ba	00 00 00 00	 DD	 $L144797
$L150204:
  017be	00		 DB	 0
  017bf	00		 DB	 0
  017c0	01		 DB	 1
  017c1	01		 DB	 1
  017c2	00		 DB	 0
  017c3	00		 DB	 0
  017c4	00		 DB	 0
  017c5	00		 DB	 0
?OnKeyDown@CSkinEdit@@QAEXIII@Z ENDP			; CSkinEdit::OnKeyDown
_TEXT	ENDS
PUBLIC	??1COleDataObject@@QAE@XZ			; COleDataObject::~COleDataObject
PUBLIC	?Paste@CRichEditCtrl@@QAEXXZ			; CRichEditCtrl::Paste
EXTRN	??0COleDataObject@@QAE@XZ:NEAR			; COleDataObject::COleDataObject
EXTRN	?AttachClipboard@COleDataObject@@QAEHXZ:NEAR	; COleDataObject::AttachClipboard
EXTRN	?GetGlobalData@COleDataObject@@QAEPAXGPAUtagFORMATETC@@@Z:NEAR ; COleDataObject::GetGlobalData
EXTRN	?IsDataAvailable@COleDataObject@@QAEHGPAUtagFORMATETC@@@Z:NEAR ; COleDataObject::IsDataAvailable
EXTRN	?Remove@CString@@QAEHD@Z:NEAR			; CString::Remove
EXTRN	?GetBufferSetLength@CString@@QAEPADH@Z:NEAR	; CString::GetBufferSetLength
EXTRN	__imp__GlobalSize@4:NEAR
EXTRN	__imp__GlobalLock@4:NEAR
EXTRN	__imp__GlobalUnlock@4:NEAR
EXTRN	??0CMemFile@@QAE@PAEII@Z:NEAR			; CMemFile::CMemFile
EXTRN	??1CMemFile@@UAE@XZ:NEAR			; CMemFile::~CMemFile
EXTRN	?Read@CMemFile@@UAEIPAXI@Z:NEAR			; CMemFile::Read
_BSS	SEGMENT
	ALIGN	4

$SG144829 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+1
$SG144830 DB	'You have reached the maximum size for this field, to add'
	DB	' anymore you must first delete some.', 00H
	ORG $+3
$SG144831 DB	'Alert', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T150211 DD	019930520H
	DD	03H
	DD	FLAT:$T150213
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150213 DD	0ffffffffH
	DD	FLAT:$L150207
	DD	00H
	DD	FLAT:$L150208
	DD	01H
	DD	FLAT:$L150209
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -96
_obj$ = -28
_nLimit$144810 = -40
_hMem$144811 = -36
_sf$144814 = -84
_buffer$144815 = -88
_str$144816 = -44
_nPos$144821 = -92
_nLength$144827 = -32
__$EHRec$ = -12
?OnPaste@CSkinEdit@@QAEXXZ PROC NEAR			; CSkinEdit::OnPaste

; 864  : {

  017c6	55		 push	 ebp
  017c7	8b ec		 mov	 ebp, esp
  017c9	6a ff		 push	 -1
  017cb	68 00 00 00 00	 push	 $L150212
  017d0	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  017d6	50		 push	 eax
  017d7	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  017de	83 ec 54	 sub	 esp, 84			; 00000054H
  017e1	89 4d a0	 mov	 DWORD PTR _this$[ebp], ecx

; 865  : 	// Paste text only.
; 866  : 	COleDataObject	obj;

  017e4	8d 4d e4	 lea	 ecx, DWORD PTR _obj$[ebp]
  017e7	e8 00 00 00 00	 call	 ??0COleDataObject@@QAE@XZ ; COleDataObject::COleDataObject
  017ec	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 867  : 
; 868  : 	if (obj.AttachClipboard()) {

  017f3	8d 4d e4	 lea	 ecx, DWORD PTR _obj$[ebp]
  017f6	e8 00 00 00 00	 call	 ?AttachClipboard@COleDataObject@@QAEHXZ ; COleDataObject::AttachClipboard
  017fb	85 c0		 test	 eax, eax
  017fd	0f 84 27 02 00
	00		 je	 $L144828

; 869  : 		if (obj.IsDataAvailable(CF_TEXT)) {

  01803	6a 00		 push	 0
  01805	6a 01		 push	 1
  01807	8d 4d e4	 lea	 ecx, DWORD PTR _obj$[ebp]
  0180a	e8 00 00 00 00	 call	 ?IsDataAvailable@COleDataObject@@QAEHGPAUtagFORMATETC@@@Z ; COleDataObject::IsDataAvailable
  0180f	85 c0		 test	 eax, eax
  01811	0f 84 13 02 00
	00		 je	 $L144828

; 870  : 			int nLimit = GetLimitText();

  01817	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  0181a	e8 00 00 00 00	 call	 ?GetLimitText@CRichEditCtrl@@QBEJXZ ; CRichEditCtrl::GetLimitText
  0181f	89 45 d8	 mov	 DWORD PTR _nLimit$144810[ebp], eax

; 871  : 
; 872  : 			HGLOBAL hMem = obj.GetGlobalData(CF_TEXT);

  01822	6a 00		 push	 0
  01824	6a 01		 push	 1
  01826	8d 4d e4	 lea	 ecx, DWORD PTR _obj$[ebp]
  01829	e8 00 00 00 00	 call	 ?GetGlobalData@COleDataObject@@QAEPAXGPAUtagFORMATETC@@@Z ; COleDataObject::GetGlobalData
  0182e	89 45 dc	 mov	 DWORD PTR _hMem$144811[ebp], eax

; 873  : 
; 874  : 			if ( hMem ) {

  01831	83 7d dc 00	 cmp	 DWORD PTR _hMem$144811[ebp], 0
  01835	0f 84 a0 01 00
	00		 je	 $L144812

; 875  : 				CMemFile sf((BYTE*) ::GlobalLock(hMem), ::GlobalSize(hMem));

  0183b	6a 00		 push	 0
  0183d	8b 45 dc	 mov	 eax, DWORD PTR _hMem$144811[ebp]
  01840	50		 push	 eax
  01841	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalSize@4
  01847	50		 push	 eax
  01848	8b 4d dc	 mov	 ecx, DWORD PTR _hMem$144811[ebp]
  0184b	51		 push	 ecx
  0184c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalLock@4
  01852	50		 push	 eax
  01853	8d 4d ac	 lea	 ecx, DWORD PTR _sf$144814[ebp]
  01856	e8 00 00 00 00	 call	 ??0CMemFile@@QAE@PAEII@Z ; CMemFile::CMemFile
  0185b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 876  : 				CString buffer;

  0185f	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  01862	e8 00 00 00 00	 call	 ??0CString@@QAE@XZ	; CString::CString
  01867	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 877  : 
; 878  : 				LPSTR str = buffer.GetBufferSetLength(::GlobalSize(hMem));

  0186b	8b 55 dc	 mov	 edx, DWORD PTR _hMem$144811[ebp]
  0186e	52		 push	 edx
  0186f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalSize@4
  01875	50		 push	 eax
  01876	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  01879	e8 00 00 00 00	 call	 ?GetBufferSetLength@CString@@QAEPADH@Z ; CString::GetBufferSetLength
  0187e	89 45 d4	 mov	 DWORD PTR _str$144816[ebp], eax

; 879  : 				sf.Read(str, ::GlobalSize(hMem));

  01881	8b 45 dc	 mov	 eax, DWORD PTR _hMem$144811[ebp]
  01884	50		 push	 eax
  01885	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalSize@4
  0188b	50		 push	 eax
  0188c	8b 4d d4	 mov	 ecx, DWORD PTR _str$144816[ebp]
  0188f	51		 push	 ecx
  01890	8d 4d ac	 lea	 ecx, DWORD PTR _sf$144814[ebp]
  01893	e8 00 00 00 00	 call	 ?Read@CMemFile@@UAEIPAXI@Z ; CMemFile::Read

; 880  : 				::GlobalUnlock(hMem);

  01898	8b 55 dc	 mov	 edx, DWORD PTR _hMem$144811[ebp]
  0189b	52		 push	 edx
  0189c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalUnlock@4

; 881  : 
; 882  : 				if ( buffer.Remove( '|' ) ) {

  018a2	6a 7c		 push	 124			; 0000007cH
  018a4	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  018a7	e8 00 00 00 00	 call	 ?Remove@CString@@QAEHD@Z ; CString::Remove
  018ac	85 c0		 test	 eax, eax
  018ae	74 34		 je	 SHORT $L144817

; 883  : 					MessageBeep( 0 );

  018b0	6a 00		 push	 0
  018b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4

; 884  : 
; 885  : 					return;

  018b8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  018bc	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  018bf	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  018c4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  018c8	8d 4d ac	 lea	 ecx, DWORD PTR _sf$144814[ebp]
  018cb	e8 00 00 00 00	 call	 ??1CMemFile@@UAE@XZ	; CMemFile::~CMemFile
  018d0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  018d7	8d 4d e4	 lea	 ecx, DWORD PTR _obj$[ebp]
  018da	e8 00 00 00 00	 call	 ??1COleDataObject@@QAE@XZ ; COleDataObject::~COleDataObject
  018df	e9 55 01 00 00	 jmp	 $L144806
$L144817:

; 887  : 
; 888  : 				if ( !m_bIsSpace )

  018e4	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  018e7	83 b8 90 00 00
	00 00		 cmp	 DWORD PTR [eax+144], 0
  018ee	75 42		 jne	 SHORT $L144819

; 889  : 					if ( buffer.Remove( ' ' ) ) {

  018f0	6a 20		 push	 32			; 00000020H
  018f2	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  018f5	e8 00 00 00 00	 call	 ?Remove@CString@@QAEHD@Z ; CString::Remove
  018fa	85 c0		 test	 eax, eax
  018fc	74 34		 je	 SHORT $L144819

; 890  : 						MessageBeep( 0 );

  018fe	6a 00		 push	 0
  01900	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4

; 891  : 						return;

  01906	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0190a	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  0190d	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  01912	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01916	8d 4d ac	 lea	 ecx, DWORD PTR _sf$144814[ebp]
  01919	e8 00 00 00 00	 call	 ??1CMemFile@@UAE@XZ	; CMemFile::~CMemFile
  0191e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01925	8d 4d e4	 lea	 ecx, DWORD PTR _obj$[ebp]
  01928	e8 00 00 00 00	 call	 ??1COleDataObject@@QAE@XZ ; COleDataObject::~COleDataObject
  0192d	e9 07 01 00 00	 jmp	 $L144806
$L144819:

; 893  : 
; 894  : 				if ( m_bIsAlnum ) {

  01932	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  01935	83 b9 8c 00 00
	00 00		 cmp	 DWORD PTR [ecx+140], 0
  0193c	74 72		 je	 SHORT $L144824

; 895  : 					for (int nPos = 0;nPos < buffer.GetLength(); nPos++ ) {

  0193e	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _nPos$144821[ebp], 0
  01945	eb 09		 jmp	 SHORT $L144822
$L144823:
  01947	8b 55 a4	 mov	 edx, DWORD PTR _nPos$144821[ebp]
  0194a	83 c2 01	 add	 edx, 1
  0194d	89 55 a4	 mov	 DWORD PTR _nPos$144821[ebp], edx
$L144822:
  01950	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  01953	e8 00 00 00 00	 call	 ?GetLength@CString@@QBEHXZ ; CString::GetLength
  01958	39 45 a4	 cmp	 DWORD PTR _nPos$144821[ebp], eax
  0195b	7d 53		 jge	 SHORT $L144824

; 896  : 						if ( !isalnum( buffer.GetAt( nPos ) ) ) {

  0195d	8b 45 a4	 mov	 eax, DWORD PTR _nPos$144821[ebp]
  01960	50		 push	 eax
  01961	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  01964	e8 00 00 00 00	 call	 ?GetAt@CString@@QBEDH@Z	; CString::GetAt
  01969	0f be c8	 movsx	 ecx, al
  0196c	51		 push	 ecx
  0196d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isalnum
  01973	83 c4 04	 add	 esp, 4
  01976	85 c0		 test	 eax, eax
  01978	75 34		 jne	 SHORT $L144825

; 897  : 							MessageBeep( 0 );

  0197a	6a 00		 push	 0
  0197c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBeep@4

; 898  : 							return;

  01982	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  01986	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  01989	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  0198e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  01992	8d 4d ac	 lea	 ecx, DWORD PTR _sf$144814[ebp]
  01995	e8 00 00 00 00	 call	 ??1CMemFile@@UAE@XZ	; CMemFile::~CMemFile
  0199a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  019a1	8d 4d e4	 lea	 ecx, DWORD PTR _obj$[ebp]
  019a4	e8 00 00 00 00	 call	 ??1COleDataObject@@QAE@XZ ; COleDataObject::~COleDataObject
  019a9	e9 8b 00 00 00	 jmp	 $L144806
$L144825:

; 900  : 					}

  019ae	eb 97		 jmp	 SHORT $L144823
$L144824:

; 902  : 
; 903  : 				// Do something with the data in 'buffer'
; 904  : 				AddText( buffer);

  019b0	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  019b3	e8 00 00 00 00	 call	 ??BCString@@QBEPBDXZ	; CString::operator char const *
  019b8	50		 push	 eax
  019b9	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  019bc	e8 00 00 00 00	 call	 ?AddText@CSkinEdit@@QAEHPBD@Z ; CSkinEdit::AddText

; 905  : 			} else {

  019c1	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  019c5	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  019c8	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  019cd	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  019d1	8d 4d ac	 lea	 ecx, DWORD PTR _sf$144814[ebp]
  019d4	e8 00 00 00 00	 call	 ??1CMemFile@@UAE@XZ	; CMemFile::~CMemFile
  019d9	eb 08		 jmp	 SHORT $L144826
$L144812:

; 906  : 				CRichEditCtrl::Paste();

  019db	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  019de	e8 00 00 00 00	 call	 ?Paste@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::Paste
$L144826:

; 908  : 
; 909  : 			int nLength = GetTextLength();

  019e3	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  019e6	e8 00 00 00 00	 call	 ?GetTextLength@CRichEditCtrl@@QBEJXZ ; CRichEditCtrl::GetTextLength
  019eb	89 45 e0	 mov	 DWORD PTR _nLength$144827[ebp], eax

; 910  : 
; 911  : 			if ( nLength >= nLimit ) {

  019ee	8b 55 e0	 mov	 edx, DWORD PTR _nLength$144827[ebp]
  019f1	3b 55 d8	 cmp	 edx, DWORD PTR _nLimit$144810[ebp]
  019f4	7c 34		 jl	 SHORT $L144828

; 912  : 				SetSel( nLimit, 3000000 );

  019f6	68 c0 c6 2d 00	 push	 3000000			; 002dc6c0H
  019fb	8b 45 d8	 mov	 eax, DWORD PTR _nLimit$144810[ebp]
  019fe	50		 push	 eax
  019ff	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  01a02	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 913  : 				ReplaceSel( "" );

  01a07	6a 00		 push	 0
  01a09	68 00 00 00 00	 push	 OFFSET FLAT:$SG144829
  01a0e	8b 4d a0	 mov	 ecx, DWORD PTR _this$[ebp]
  01a11	e8 00 00 00 00	 call	 ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z ; CRichEditCtrl::ReplaceSel

; 914  : 
; 915  : 				SkinMessage( "Alert", "You have reached the maximum size for this field, to add anymore you must first delete some." );

  01a16	6a 00		 push	 0
  01a18	68 00 00 00 00	 push	 OFFSET FLAT:$SG144830
  01a1d	68 00 00 00 00	 push	 OFFSET FLAT:$SG144831
  01a22	e8 00 00 00 00	 call	 ?SkinMessage@@YA_NPAD0H@Z ; SkinMessage
  01a27	83 c4 0c	 add	 esp, 12			; 0000000cH
$L144828:

; 919  : }

  01a2a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01a31	8d 4d e4	 lea	 ecx, DWORD PTR _obj$[ebp]
  01a34	e8 00 00 00 00	 call	 ??1COleDataObject@@QAE@XZ ; COleDataObject::~COleDataObject
$L144806:
  01a39	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01a3c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01a43	8b e5		 mov	 esp, ebp
  01a45	5d		 pop	 ebp
  01a46	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
$L150207:
  000ca	8d 4d e4	 lea	 ecx, DWORD PTR _obj$[ebp]
  000cd	e8 00 00 00 00	 call	 ??1COleDataObject@@QAE@XZ ; COleDataObject::~COleDataObject
  000d2	c3		 ret	 0
$L150208:
  000d3	8d 4d ac	 lea	 ecx, DWORD PTR _sf$144814[ebp]
  000d6	e8 00 00 00 00	 call	 ??1CMemFile@@UAE@XZ	; CMemFile::~CMemFile
  000db	c3		 ret	 0
$L150209:
  000dc	8d 4d a8	 lea	 ecx, DWORD PTR _buffer$144815[ebp]
  000df	e8 00 00 00 00	 call	 ??1CString@@QAE@XZ	; CString::~CString
  000e4	c3		 ret	 0
$L150212:
  000e5	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150211
  000ea	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?OnPaste@CSkinEdit@@QAEXXZ ENDP				; CSkinEdit::OnPaste
PUBLIC	?Cut@CRichEditCtrl@@QAEXXZ			; CRichEditCtrl::Cut
_TEXT	SEGMENT
_this$ = -4
?OnCut@CSkinEdit@@QAEXXZ PROC NEAR			; CSkinEdit::OnCut

; 922  : {

  01a47	55		 push	 ebp
  01a48	8b ec		 mov	 ebp, esp
  01a4a	51		 push	 ecx
  01a4b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 923  : 	CRichEditCtrl::Cut();

  01a4e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a51	e8 00 00 00 00	 call	 ?Cut@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::Cut

; 924  : }

  01a56	8b e5		 mov	 esp, ebp
  01a58	5d		 pop	 ebp
  01a59	c3		 ret	 0
?OnCut@CSkinEdit@@QAEXXZ ENDP				; CSkinEdit::OnCut
_TEXT	ENDS
PUBLIC	?Copy@CRichEditCtrl@@QAEXXZ			; CRichEditCtrl::Copy
_TEXT	SEGMENT
_this$ = -4
?OnCopy@CSkinEdit@@QAEXXZ PROC NEAR			; CSkinEdit::OnCopy

; 927  : {

  01a5a	55		 push	 ebp
  01a5b	8b ec		 mov	 ebp, esp
  01a5d	51		 push	 ecx
  01a5e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 928  : 	CRichEditCtrl::Copy();

  01a61	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  01a64	e8 00 00 00 00	 call	 ?Copy@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::Copy

; 929  : }

  01a69	8b e5		 mov	 esp, ebp
  01a6b	5d		 pop	 ebp
  01a6c	c3		 ret	 0
?OnCopy@CSkinEdit@@QAEXXZ ENDP				; CSkinEdit::OnCopy
_TEXT	ENDS
PUBLIC	??_ECSkinSingleEdit@@WGA@AEPAXI@Z		; CSkinSingleEdit::`vector deleting destructor'
PUBLIC	??_ECSkinSingleEdit@@WHE@AEPAXI@Z		; CSkinSingleEdit::`vector deleting destructor'
PUBLIC	??0CSkinSingleEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N2@Z ; CSkinSingleEdit::CSkinSingleEdit
PUBLIC	?OnReturn@CSkinSingleEdit@@UAEXXZ		; CSkinSingleEdit::OnReturn
PUBLIC	?OnEscape@CSkinSingleEdit@@UAEXXZ		; CSkinSingleEdit::OnEscape
PUBLIC	??_7CSkinSingleEdit@@6BCRichEditCtrl@@@		; CSkinSingleEdit::`vftable'
PUBLIC	??_7CSkinSingleEdit@@6BCScrollable@@@		; CSkinSingleEdit::`vftable'
PUBLIC	??_7CSkinSingleEdit@@6BCSkinCtrl@@@		; CSkinSingleEdit::`vftable'
PUBLIC	??_7CSkinSingleEdit@@6BCMouseWheelable@@@	; CSkinSingleEdit::`vftable'
PUBLIC	??_GCSkinSingleEdit@@UAEPAXI@Z			; CSkinSingleEdit::`scalar deleting destructor'
PUBLIC	??_ECSkinSingleEdit@@UAEPAXI@Z			; CSkinSingleEdit::`vector deleting destructor'
;	COMDAT ??_7CSkinSingleEdit@@6BCRichEditCtrl@@@
; File \\vboxsrv\vagrant\DnGClientSource\clientwork\Interp\skinedit.cpp
CONST	SEGMENT
??_7CSkinSingleEdit@@6BCRichEditCtrl@@@ DD FLAT:?GetRuntimeClass@CRichEditCtrl@@UBEPAUCRuntimeClass@@XZ ; CSkinSingleEdit::`vftable'
	DD	FLAT:??_ECSkinSingleEdit@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CSkinEdit@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?OnReturn@CSkinSingleEdit@@UAEXXZ
	DD	FLAT:?OnEscape@CSkinSingleEdit@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CSkinSingleEdit@@6BCScrollable@@@
CONST	SEGMENT
??_7CSkinSingleEdit@@6BCScrollable@@@ DD FLAT:?UpdateMe@CSkinEdit@@UAEXXZ ; CSkinSingleEdit::`vftable'
	DD	FLAT:?SetLocation@CScrollable@@UAEXM@Z
	DD	FLAT:?ChangeLocation@CScrollable@@UAEXH@Z
	DD	FLAT:?ChangePage@CScrollable@@UAEXH@Z
	DD	FLAT:?SetRange@CSkinEdit@@UAEXHH@Z
	DD	FLAT:?UpdateScrollBar@CScrollable@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7CSkinSingleEdit@@6BCSkinCtrl@@@
CONST	SEGMENT
??_7CSkinSingleEdit@@6BCSkinCtrl@@@ DD FLAT:??_ECSkinSingleEdit@@WGA@AEPAXI@Z ; CSkinSingleEdit::`vftable'
	DD	FLAT:?UpdateTracking@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Refresh@CSkinCtrl@@UAEXXZ
	DD	FLAT:?Disable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?IsDisabled@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Enable@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Activate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Deactivate@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Highlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?Unhighlight@CSkinCtrl@@UAEHXZ
	DD	FLAT:?ShowNormal@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowDisabled@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowPressed@CSkinCtrl@@UAEXXZ
	DD	FLAT:?ShowHighlighted@CSkinCtrl@@UAEXXZ
	DD	FLAT:?OnMouseMove@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseIn@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseOut@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseDown@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnMouseUp@CSkinCtrl@@UAEXHFF@Z
	DD	FLAT:?OnActivate@CSkinCtrl@@UAEXFF@Z
CONST	ENDS
;	COMDAT ??_7CSkinSingleEdit@@6BCMouseWheelable@@@
CONST	SEGMENT
??_7CSkinSingleEdit@@6BCMouseWheelable@@@ DD FLAT:??_ECSkinSingleEdit@@WHE@AEPAXI@Z ; CSkinSingleEdit::`vftable'
	DD	FLAT:?OnMouseWheel@CSkinEdit@@UAEXIF@Z
CONST	ENDS
xdata$x	SEGMENT
$T150222 DD	019930520H
	DD	01H
	DD	FLAT:$T150224
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150224 DD	0ffffffffH
	DD	FLAT:$L150218
xdata$x	ENDS
_TEXT	SEGMENT
_linkObj$ = 8
_pParent$ = 16
_nID$ = 20
_dwStyle$ = 24
_bEmotes$ = 28
_bHiliteOnFocus$ = 32
_this$ = -20
$T150217 = -16
__$EHRec$ = -12
??0CSkinSingleEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N2@Z PROC NEAR ; CSkinSingleEdit::CSkinSingleEdit

; 933  : {

  01a6d	55		 push	 ebp
  01a6e	8b ec		 mov	 ebp, esp
  01a70	6a ff		 push	 -1
  01a72	68 00 00 00 00	 push	 $L150223
  01a77	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  01a7d	50		 push	 eax
  01a7e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  01a85	83 ec 10	 sub	 esp, 16			; 00000010H
  01a88	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  01a8b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  01a92	6a 00		 push	 0
  01a94	8a 45 20	 mov	 al, BYTE PTR _bHiliteOnFocus$[ebp]
  01a97	50		 push	 eax
  01a98	8a 4d 1c	 mov	 cl, BYTE PTR _bEmotes$[ebp]
  01a9b	51		 push	 ecx
  01a9c	8b 55 18	 mov	 edx, DWORD PTR _dwStyle$[ebp]
  01a9f	52		 push	 edx
  01aa0	8b 45 14	 mov	 eax, DWORD PTR _nID$[ebp]
  01aa3	50		 push	 eax
  01aa4	8b 4d 10	 mov	 ecx, DWORD PTR _pParent$[ebp]
  01aa7	51		 push	 ecx
  01aa8	83 ec 08	 sub	 esp, 8
  01aab	8b cc		 mov	 ecx, esp
  01aad	89 65 f0	 mov	 DWORD PTR $T150217[ebp], esp
  01ab0	8d 55 08	 lea	 edx, DWORD PTR _linkObj$[ebp]
  01ab3	52		 push	 edx
  01ab4	e8 00 00 00 00	 call	 ??0CSkinObj@@QAE@ABV0@@Z ; CSkinObj::CSkinObj
  01ab9	89 45 e8	 mov	 DWORD PTR -24+[ebp], eax
  01abc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  01abf	e8 00 00 00 00	 call	 ??0CSkinEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N22@Z ; CSkinEdit::CSkinEdit
  01ac4	89 45 e4	 mov	 DWORD PTR -28+[ebp], eax
  01ac7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01aca	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CSkinSingleEdit@@6BCRichEditCtrl@@@ ; CSkinSingleEdit::`vftable'
  01ad0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  01ad3	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], OFFSET FLAT:??_7CSkinSingleEdit@@6BCScrollable@@@ ; CSkinSingleEdit::`vftable'
  01ada	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  01add	c7 42 60 00 00
	00 00		 mov	 DWORD PTR [edx+96], OFFSET FLAT:??_7CSkinSingleEdit@@6BCSkinCtrl@@@ ; CSkinSingleEdit::`vftable'
  01ae4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01ae7	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], OFFSET FLAT:??_7CSkinSingleEdit@@6BCMouseWheelable@@@ ; CSkinSingleEdit::`vftable'

; 934  : }

  01aee	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01af5	8d 4d 08	 lea	 ecx, DWORD PTR _linkObj$[ebp]
  01af8	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  01afd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  01b00	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01b03	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  01b0a	8b e5		 mov	 esp, ebp
  01b0c	5d		 pop	 ebp
  01b0d	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
text$x	SEGMENT
$L150218:
  000ef	8d 4d 08	 lea	 ecx, DWORD PTR _linkObj$[ebp]
  000f2	e8 00 00 00 00	 call	 ??1CSkinObj@@UAE@XZ	; CSkinObj::~CSkinObj
  000f7	c3		 ret	 0
$L150223:
  000f8	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150222
  000fd	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSkinSingleEdit@@QAE@VCSkinObj@@PAVCSkinWnd@@IK_N2@Z ENDP ; CSkinSingleEdit::CSkinSingleEdit
PUBLIC	??1CSkinSingleEdit@@UAE@XZ			; CSkinSingleEdit::~CSkinSingleEdit
;	COMDAT ??_GCSkinSingleEdit@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCSkinSingleEdit@@UAEPAXI@Z PROC NEAR		; CSkinSingleEdit::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinSingleEdit@@UAE@XZ ; CSkinSingleEdit::~CSkinSingleEdit
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L144851
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L144851:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCSkinSingleEdit@@UAEPAXI@Z ENDP			; CSkinSingleEdit::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CSkinSingleEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CSkinSingleEdit@@UAE@XZ PROC NEAR			; CSkinSingleEdit::~CSkinSingleEdit, COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSkinEdit@@UAE@XZ	; CSkinEdit::~CSkinEdit
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1CSkinSingleEdit@@UAE@XZ ENDP				; CSkinSingleEdit::~CSkinSingleEdit
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnReturn@CSkinSingleEdit@@UAEXXZ PROC NEAR		; CSkinSingleEdit::OnReturn

; 937  : {

  01b10	55		 push	 ebp
  01b11	8b ec		 mov	 ebp, esp
  01b13	51		 push	 ecx
  01b14	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 938  : 	m_pParentWnd->Next();

  01b17	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01b1a	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  01b1d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01b20	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  01b23	8b 10		 mov	 edx, DWORD PTR [eax]
  01b25	ff 92 e4 00 00
	00		 call	 DWORD PTR [edx+228]

; 939  : }

  01b2b	8b e5		 mov	 esp, ebp
  01b2d	5d		 pop	 ebp
  01b2e	c3		 ret	 0
?OnReturn@CSkinSingleEdit@@UAEXXZ ENDP			; CSkinSingleEdit::OnReturn
_this$ = -4
?OnEscape@CSkinSingleEdit@@UAEXXZ PROC NEAR		; CSkinSingleEdit::OnEscape

; 942  : {

  01b2f	55		 push	 ebp
  01b30	8b ec		 mov	 ebp, esp
  01b32	51		 push	 ecx
  01b33	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 943  : 	m_pParentWnd->CloseSelf();

  01b36	6a 00		 push	 0
  01b38	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  01b3b	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  01b3e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  01b41	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  01b44	8b 10		 mov	 edx, DWORD PTR [eax]
  01b46	ff 92 c4 00 00
	00		 call	 DWORD PTR [edx+196]

; 944  : }

  01b4c	8b e5		 mov	 esp, ebp
  01b4e	5d		 pop	 ebp
  01b4f	c3		 ret	 0
?OnEscape@CSkinSingleEdit@@UAEXXZ ENDP			; CSkinSingleEdit::OnEscape
_TEXT	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_this$ = -4
?Serialize@CObject@@UAEXAAVCArchive@@@Z PROC NEAR	; CObject::Serialize, COMDAT

; 21   : 	{ /* CObject does not serialize anything by default */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Serialize@CObject@@UAEXAAVCArchive@@@Z ENDP		; CObject::Serialize
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
;	COMDAT ?AssertValid@CObject@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4
?AssertValid@CObject@@UBEXXZ PROC NEAR			; CObject::AssertValid, COMDAT

; 37   : 	{ /* no asserts in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?AssertValid@CObject@@UBEXXZ ENDP			; CObject::AssertValid
_TEXT	ENDS
;	COMDAT ?Dump@CObject@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_this$ = -4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z PROC NEAR	; CObject::Dump, COMDAT

; 39   : 	{ /* no dumping in release builds */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?Dump@CObject@@UBEXAAVCDumpContext@@@Z ENDP		; CObject::Dump
_TEXT	ENDS
PUBLIC	?GetData@CString@@IBEPAUCStringData@@XZ		; CString::GetData
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetLength@CString@@QBEHXZ PROC NEAR			; CString::GetLength, COMDAT

; 145  : 	{ return GetData()->nDataLength; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?GetData@CString@@IBEPAUCStringData@@XZ ; CString::GetData
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?GetLength@CString@@QBEHXZ ENDP				; CString::GetLength
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetData@CString@@IBEPAUCStringData@@XZ PROC NEAR	; CString::GetData, COMDAT

; 122  : 	{ ASSERT(m_pchData != NULL); return ((CStringData*)m_pchData)-1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	83 e8 0c	 sub	 eax, 12			; 0000000cH
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?GetData@CString@@IBEPAUCStringData@@XZ ENDP		; CString::GetData
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
;	COMDAT ?GetAt@CString@@QBEDH@Z
_TEXT	SEGMENT
_nIndex$ = 8
_this$ = -4
?GetAt@CString@@QBEDH@Z PROC NEAR			; CString::GetAt, COMDAT

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 169  : 	ASSERT(nIndex >= 0);
; 170  : 	ASSERT(nIndex < GetData()->nDataLength);
; 171  : 	return m_pchData[nIndex];

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  0000f	8a 04 11	 mov	 al, BYTE PTR [ecx+edx]

; 172  : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
?GetAt@CString@@QBEDH@Z ENDP				; CString::GetAt
_TEXT	ENDS
;	COMDAT ??ACString@@QBEDH@Z
_TEXT	SEGMENT
_nIndex$ = 8
_this$ = -4
??ACString@@QBEDH@Z PROC NEAR				; CString::operator[], COMDAT

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 175  : 	// same as GetAt
; 176  : 	ASSERT(nIndex >= 0);
; 177  : 	ASSERT(nIndex < GetData()->nDataLength);
; 178  : 	return m_pchData[nIndex];

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  0000f	8a 04 11	 mov	 al, BYTE PTR [ecx+edx]

; 179  : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??ACString@@QBEDH@Z ENDP				; CString::operator[]
_TEXT	ENDS
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CPoint@@QAE@XZ PROC NEAR				; CPoint::CPoint, COMDAT

; 83   : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CPoint@@QAE@XZ ENDP					; CPoint::CPoint
_TEXT	ENDS
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CRect@@QAE@XZ PROC NEAR				; CRect::CRect, COMDAT

; 132  : 	{ /* random filled */ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?Width@CRect@@QBEHXZ PROC NEAR				; CRect::Width, COMDAT

; 145  : 	{ return right - left; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00010	2b 01		 sub	 eax, DWORD PTR [ecx]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?Width@CRect@@QBEHXZ ENDP				; CRect::Width
_TEXT	ENDS
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?Height@CRect@@QBEHXZ PROC NEAR				; CRect::Height, COMDAT

; 147  : 	{ return bottom - top; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00010	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT
_this$ = -4
??BCRect@@QAEPAUtagRECT@@XZ PROC NEAR			; CRect::operator tagRECT *, COMDAT

; 165  : 	{ return this; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??BCRect@@QAEPAUtagRECT@@XZ ENDP			; CRect::operator tagRECT *
_TEXT	ENDS
EXTRN	__imp__IntersectRect@12:NEAR
;	COMDAT ?IntersectRect@CRect@@QAEHPBUtagRECT@@0@Z
_TEXT	SEGMENT
_lpRect1$ = 8
_lpRect2$ = 12
_this$ = -4
?IntersectRect@CRect@@QAEHPBUtagRECT@@0@Z PROC NEAR	; CRect::IntersectRect, COMDAT

; 199  : 	{ return ::IntersectRect(this, lpRect1, lpRect2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _lpRect2$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect1$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	52		 push	 edx
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IntersectRect@12
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?IntersectRect@CRect@@QAEHPBUtagRECT@@0@Z ENDP		; CRect::IntersectRect
_TEXT	ENDS
PUBLIC	??0CObject@@IAE@XZ				; CObject::CObject
PUBLIC	??_7CMenu@@6B@					; CMenu::`vftable'
PUBLIC	??_GCMenu@@UAEPAXI@Z				; CMenu::`scalar deleting destructor'
PUBLIC	??_ECMenu@@UAEPAXI@Z				; CMenu::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CMenu@@UBEPAUCRuntimeClass@@XZ:NEAR ; CMenu::GetRuntimeClass
EXTRN	?DrawItem@CMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z:NEAR ; CMenu::DrawItem
EXTRN	?MeasureItem@CMenu@@UAEXPAUtagMEASUREITEMSTRUCT@@@Z:NEAR ; CMenu::MeasureItem
;	COMDAT ??_7CMenu@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\MFC\INCLUDE\afxwin1.inl
CONST	SEGMENT
??_7CMenu@@6B@ DD FLAT:?GetRuntimeClass@CMenu@@UBEPAUCRuntimeClass@@XZ ; CMenu::`vftable'
	DD	FLAT:??_ECMenu@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?DrawItem@CMenu@@UAEXPAUtagDRAWITEMSTRUCT@@@Z
	DD	FLAT:?MeasureItem@CMenu@@UAEXPAUtagMEASUREITEMSTRUCT@@@Z
CONST	ENDS
;	COMDAT ??0CMenu@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CMenu@@QAE@XZ PROC NEAR				; CMenu::CMenu, COMDAT

; 1003 : 	{ m_hMenu = NULL; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMenu@@6B@ ; CMenu::`vftable'
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0CMenu@@QAE@XZ ENDP					; CMenu::CMenu
_TEXT	ENDS
PUBLIC	??_7CObject@@6B@				; CObject::`vftable'
PUBLIC	??_GCObject@@UAEPAXI@Z				; CObject::`scalar deleting destructor'
PUBLIC	??_ECObject@@UAEPAXI@Z				; CObject::`vector deleting destructor'
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:NEAR ; CObject::GetRuntimeClass
;	COMDAT ??_7CObject@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\MFC\INCLUDE\afx.inl
CONST	SEGMENT
??_7CObject@@6B@ DD FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ ; CObject::`vftable'
	DD	FLAT:??_ECObject@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CObject@@IAE@XZ PROC NEAR				; CObject::CObject, COMDAT

; 17   : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CObject@@6B@ ; CObject::`vftable'
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0CObject@@IAE@XZ ENDP					; CObject::CObject
_TEXT	ENDS
PUBLIC	??1CObject@@UAE@XZ				; CObject::~CObject
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCObject@@UAEPAXI@Z PROC NEAR			; CObject::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L34926
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L34926:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCObject@@UAEPAXI@Z ENDP				; CObject::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1CObject@@UAE@XZ PROC NEAR				; CObject::~CObject, COMDAT

; 19   : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CObject@@6B@ ; CObject::`vftable'
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??1CObject@@UAE@XZ ENDP					; CObject::~CObject
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCMenu@@UAEPAXI@Z PROC NEAR				; CMenu::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMenu@@UAE@XZ	; CMenu::~CMenu
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L44940
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L44940:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCMenu@@UAEPAXI@Z ENDP				; CMenu::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?DestroyMenu@CMenu@@QAEHXZ:NEAR			; CMenu::DestroyMenu
;	COMDAT xdata$x
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\MFC\INCLUDE\afxwin1.inl
xdata$x	SEGMENT
$T150254 DD	019930520H
	DD	01H
	DD	FLAT:$T150256
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T150256 DD	0ffffffffH
	DD	FLAT:$L150252
xdata$x	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??1CMenu@@UAE@XZ PROC NEAR				; CMenu::~CMenu, COMDAT

; 1005 : 	{ DestroyMenu(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 $L150255
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	51		 push	 ecx
  00019	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0001c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CMenu@@6B@ ; CMenu::`vftable'
  00025	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?DestroyMenu@CMenu@@QAEHXZ ; CMenu::DestroyMenu
  00034	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00043	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00046	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L150252:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00008	c3		 ret	 0
$L150255:
  00009	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150254
  0000e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CMenu@@UAE@XZ ENDP					; CMenu::~CMenu
EXTRN	?Attach@CMenu@@QAEHPAUHMENU__@@@Z:NEAR		; CMenu::Attach
EXTRN	__imp__CreatePopupMenu@0:NEAR
;	COMDAT ?CreatePopupMenu@CMenu@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4
?CreatePopupMenu@CMenu@@QAEHXZ PROC NEAR		; CMenu::CreatePopupMenu, COMDAT

; 1009 : 	{ return Attach(::CreatePopupMenu()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreatePopupMenu@0
  0000d	50		 push	 eax
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?Attach@CMenu@@QAEHPAUHMENU__@@@Z ; CMenu::Attach
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?CreatePopupMenu@CMenu@@QAEHXZ ENDP			; CMenu::CreatePopupMenu
_TEXT	ENDS
EXTRN	__imp__AppendMenuA@16:NEAR
;	COMDAT ?AppendMenuA@CMenu@@QAEHIIPBD@Z
_TEXT	SEGMENT
_nFlags$ = 8
_nIDNewItem$ = 12
_lpszNewItem$ = 16
_this$ = -4
?AppendMenuA@CMenu@@QAEHIIPBD@Z PROC NEAR		; CMenu::AppendMenuA, COMDAT

; 1023 : 	{ ASSERT(::IsMenu(m_hMenu)); return ::AppendMenu(m_hMenu, nFlags, nIDNewItem, lpszNewItem); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 10	 mov	 eax, DWORD PTR _lpszNewItem$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _nIDNewItem$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 08	 mov	 edx, DWORD PTR _nFlags$[ebp]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AppendMenuA@16
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
?AppendMenuA@CMenu@@QAEHIIPBD@Z ENDP			; CMenu::AppendMenuA
_TEXT	ENDS
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:NEAR		; CWnd::MoveWindow
;	COMDAT ?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z
_TEXT	SEGMENT
_lpRect$ = 8
_bRepaint$ = 12
_this$ = -4
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z PROC NEAR		; CWnd::MoveWindow, COMDAT

; 80   : 	{ MoveWindow(lpRect->left, lpRect->top, lpRect->right - lpRect->left,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 		lpRect->bottom - lpRect->top, bRepaint); }

  00007	8b 45 0c	 mov	 eax, DWORD PTR _bRepaint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  00011	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00014	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  0001b	8b 55 08	 mov	 edx, DWORD PTR _lpRect$[ebp]
  0001e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00021	2b 02		 sub	 eax, DWORD PTR [edx]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _lpRect$[ebp]
  00027	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002a	52		 push	 edx
  0002b	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	51		 push	 ecx
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?MoveWindow@CWnd@@QAEXPBUtagRECT@@H@Z ENDP		; CWnd::MoveWindow
_TEXT	ENDS
EXTRN	__imp__GetClientRect@8:NEAR
;	COMDAT ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z
_TEXT	SEGMENT
_lpRect$ = 8
_this$ = -4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z PROC NEAR	; CWnd::GetClientRect, COMDAT

; 98   : 	{ ASSERT(::IsWindow(m_hWnd)); ::GetClientRect(m_hWnd, lpRect); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpRect$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ENDP		; CWnd::GetClientRect
_TEXT	ENDS
EXTRN	__imp__ClientToScreen@8:NEAR
;	COMDAT ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z
_TEXT	SEGMENT
_lpPoint$ = 8
_this$ = -4
?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z PROC NEAR	; CWnd::ClientToScreen, COMDAT

; 104  : 	{ ASSERT(::IsWindow(m_hWnd)); ::ClientToScreen(m_hWnd, lpPoint); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpPoint$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00011	52		 push	 edx
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClientToScreen@8
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z ENDP		; CWnd::ClientToScreen
_TEXT	ENDS
EXTRN	?Default@CWnd@@IAEJXZ:NEAR			; CWnd::Default
;	COMDAT ?OnSetFocus@CWnd@@IAEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -4
?OnSetFocus@CWnd@@IAEXPAV1@@Z PROC NEAR			; CWnd::OnSetFocus, COMDAT

; 370  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?OnSetFocus@CWnd@@IAEXPAV1@@Z ENDP			; CWnd::OnSetFocus
_TEXT	ENDS
;	COMDAT ??_ECSkinSingleEdit@@WGA@AEPAXI@Z
_TEXT	SEGMENT
??_ECSkinSingleEdit@@WGA@AEPAXI@Z PROC NEAR		; CSkinSingleEdit::`vector deleting destructor', COMDAT
  00000	83 e9 60	 sub	 ecx, 96			; 00000060H
  00003	e9 00 00 00 00	 jmp	 ??_ECSkinSingleEdit@@UAEPAXI@Z ; CSkinSingleEdit::`vector deleting destructor'
??_ECSkinSingleEdit@@WGA@AEPAXI@Z ENDP			; CSkinSingleEdit::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECSkinSingleEdit@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECSkinSingleEdit@@WHE@AEPAXI@Z PROC NEAR		; CSkinSingleEdit::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECSkinSingleEdit@@UAEPAXI@Z ; CSkinSingleEdit::`vector deleting destructor'
??_ECSkinSingleEdit@@WHE@AEPAXI@Z ENDP			; CSkinSingleEdit::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECSkinEdit@@WGA@AEPAXI@Z
_TEXT	SEGMENT
??_ECSkinEdit@@WGA@AEPAXI@Z PROC NEAR			; CSkinEdit::`vector deleting destructor', COMDAT
  00000	83 e9 60	 sub	 ecx, 96			; 00000060H
  00003	e9 00 00 00 00	 jmp	 ??_ECSkinEdit@@UAEPAXI@Z ; CSkinEdit::`vector deleting destructor'
??_ECSkinEdit@@WGA@AEPAXI@Z ENDP			; CSkinEdit::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ??_ECSkinEdit@@WHE@AEPAXI@Z
_TEXT	SEGMENT
??_ECSkinEdit@@WHE@AEPAXI@Z PROC NEAR			; CSkinEdit::`vector deleting destructor', COMDAT
  00000	83 e9 74	 sub	 ecx, 116		; 00000074H
  00003	e9 00 00 00 00	 jmp	 ??_ECSkinEdit@@UAEPAXI@Z ; CSkinEdit::`vector deleting destructor'
??_ECSkinEdit@@WHE@AEPAXI@Z ENDP			; CSkinEdit::`vector deleting destructor'
_TEXT	ENDS
;	COMDAT ?OnChar@CWnd@@IAEXIII@Z
_TEXT	SEGMENT
_this$ = -4
?OnChar@CWnd@@IAEXIII@Z PROC NEAR			; CWnd::OnChar, COMDAT

; 436  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
?OnChar@CWnd@@IAEXIII@Z ENDP				; CWnd::OnChar
_TEXT	ENDS
;	COMDAT ?OnKeyDown@CWnd@@IAEXIII@Z
_TEXT	SEGMENT
_this$ = -4
?OnKeyDown@CWnd@@IAEXIII@Z PROC NEAR			; CWnd::OnKeyDown, COMDAT

; 440  : 	{ Default(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Default@CWnd@@IAEJXZ	; CWnd::Default
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 0c 00	 ret	 12			; 0000000cH
?OnKeyDown@CWnd@@IAEXIII@Z ENDP				; CWnd::OnKeyDown
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_this$ = -4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z PROC NEAR ; CWnd::DoDataExchange, COMDAT

; 519  : 	{ } // default does nothing

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ENDP	; CWnd::DoDataExchange
_TEXT	ENDS
EXTRN	__imp__EnableWindow@8:NEAR
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?BeginModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::BeginModalState, COMDAT

; 523  : 	{ ::EnableWindow(m_hWnd, FALSE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?BeginModalState@CWnd@@UAEXXZ ENDP			; CWnd::BeginModalState
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4
?EndModalState@CWnd@@UAEXXZ PROC NEAR			; CWnd::EndModalState, COMDAT

; 525  : 	{ ::EnableWindow(m_hWnd, TRUE); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 01		 push	 1
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0000f	51		 push	 ecx
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnableWindow@8
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?EndModalState@CWnd@@UAEXXZ ENDP			; CWnd::EndModalState
_TEXT	ENDS
PUBLIC	??_7CRichEditCtrl@@6B@				; CRichEditCtrl::`vftable'
PUBLIC	??_GCRichEditCtrl@@UAEPAXI@Z			; CRichEditCtrl::`scalar deleting destructor'
PUBLIC	??_ECRichEditCtrl@@UAEPAXI@Z			; CRichEditCtrl::`vector deleting destructor'
EXTRN	?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ:NEAR	; CWnd::GetMessageMap
EXTRN	??0CWnd@@QAE@XZ:NEAR				; CWnd::CWnd
;	COMDAT ??_7CRichEditCtrl@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\VC98\MFC\INCLUDE\afxcmn.inl
CONST	SEGMENT
??_7CRichEditCtrl@@6B@ DD FLAT:?GetRuntimeClass@CRichEditCtrl@@UBEPAUCRuntimeClass@@XZ ; CRichEditCtrl::`vftable'
	DD	FLAT:??_ECRichEditCtrl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CObject@@UBEXXZ
	DD	FLAT:?Dump@CObject@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWnd@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
CONST	ENDS
;	COMDAT ??0CRichEditCtrl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CRichEditCtrl@@QAE@XZ PROC NEAR			; CRichEditCtrl::CRichEditCtrl, COMDAT

; 601  : 	{ }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CWnd@@QAE@XZ		; CWnd::CWnd
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET FLAT:??_7CRichEditCtrl@@6B@ ; CRichEditCtrl::`vftable'
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CRichEditCtrl@@QAE@XZ ENDP				; CRichEditCtrl::CRichEditCtrl
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCRichEditCtrl@@UAEPAXI@Z PROC NEAR			; CRichEditCtrl::`scalar deleting destructor', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CRichEditCtrl@@UAE@XZ ; CRichEditCtrl::~CRichEditCtrl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	85 c0		 test	 eax, eax
  00017	74 09		 je	 SHORT $L84709
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
$L84709:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCRichEditCtrl@@UAEPAXI@Z ENDP			; CRichEditCtrl::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp__SendMessageA@16:NEAR
;	COMDAT ?GetLineCount@CRichEditCtrl@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetLineCount@CRichEditCtrl@@QBEHXZ PROC NEAR		; CRichEditCtrl::GetLineCount, COMDAT

; 605  : 	{ ASSERT(::IsWindow(m_hWnd)); return (int)::SendMessage(m_hWnd, EM_GETLINECOUNT, 0, 0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 ba 00 00 00	 push	 186			; 000000baH
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetLineCount@CRichEditCtrl@@QBEHXZ ENDP		; CRichEditCtrl::GetLineCount
_TEXT	ENDS
;	COMDAT ?GetCharPos@CRichEditCtrl@@QBE?AVCPoint@@J@Z
_TEXT	SEGMENT
_lChar$ = 12
___$ReturnUdt$ = 8
_this$ = -12
_pt$ = -8
?GetCharPos@CRichEditCtrl@@QBE?AVCPoint@@J@Z PROC NEAR	; CRichEditCtrl::GetCharPos, COMDAT

; 613  : 	{ ASSERT(::IsWindow(m_hWnd)); CPoint pt; ::SendMessage(m_hWnd, EM_POSFROMCHAR, (WPARAM)&pt, (LPARAM)lChar); return pt;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8d 4d f8	 lea	 ecx, DWORD PTR _pt$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CPoint@@QAE@XZ	; CPoint::CPoint
  00011	8b 45 0c	 mov	 eax, DWORD PTR _lChar$[ebp]
  00014	50		 push	 eax
  00015	8d 4d f8	 lea	 ecx, DWORD PTR _pt$[ebp]
  00018	51		 push	 ecx
  00019	68 d6 00 00 00	 push	 214			; 000000d6H
  0001e	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00021	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00024	50		 push	 eax
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0002e	8b 55 f8	 mov	 edx, DWORD PTR _pt$[ebp]
  00031	89 11		 mov	 DWORD PTR [ecx], edx
  00033	8b 45 fc	 mov	 eax, DWORD PTR _pt$[ebp+4]
  00036	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00039	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 08 00	 ret	 8
?GetCharPos@CRichEditCtrl@@QBE?AVCPoint@@J@Z ENDP	; CRichEditCtrl::GetCharPos
_TEXT	ENDS
;	COMDAT ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z
_TEXT	SEGMENT
_lpszNewText$ = 8
_bCanUndo$ = 12
_this$ = -4
?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z PROC NEAR		; CRichEditCtrl::ReplaceSel, COMDAT

; 619  : 	{ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_REPLACESEL, (WPARAM) bCanUndo, (LPARAM)lpszNewText); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _lpszNewText$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _bCanUndo$[ebp]
  0000e	51		 push	 ecx
  0000f	68 c2 00 00 00	 push	 194			; 000000c2H
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z ENDP		; CRichEditCtrl::ReplaceSel
_TEXT	ENDS
;	COMDAT ?Clear@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Clear@CRichEditCtrl@@QAEXXZ PROC NEAR			; CRichEditCtrl::Clear, COMDAT

; 625  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, WM_CLEAR, 0, 0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 03 03 00 00	 push	 771			; 00000303H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?Clear@CRichEditCtrl@@QAEXXZ ENDP			; CRichEditCtrl::Clear
_TEXT	ENDS
;	COMDAT ?Copy@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Copy@CRichEditCtrl@@QAEXXZ PROC NEAR			; CRichEditCtrl::Copy, COMDAT

; 627  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, WM_COPY, 0, 0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 01 03 00 00	 push	 769			; 00000301H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?Copy@CRichEditCtrl@@QAEXXZ ENDP			; CRichEditCtrl::Copy
_TEXT	ENDS
;	COMDAT ?Cut@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Cut@CRichEditCtrl@@QAEXXZ PROC NEAR			; CRichEditCtrl::Cut, COMDAT

; 629  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, WM_CUT, 0, 0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 00 03 00 00	 push	 768			; 00000300H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?Cut@CRichEditCtrl@@QAEXXZ ENDP				; CRichEditCtrl::Cut
_TEXT	ENDS
;	COMDAT ?Paste@CRichEditCtrl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?Paste@CRichEditCtrl@@QAEXXZ PROC NEAR			; CRichEditCtrl::Paste, COMDAT

; 631  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, WM_PASTE, 0, 0); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 02 03 00 00	 push	 770			; 00000302H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?Paste@CRichEditCtrl@@QAEXXZ ENDP			; CRichEditCtrl::Paste
_TEXT	ENDS
;	COMDAT ?SetReadOnly@CRichEditCtrl@@QAEHH@Z
_TEXT	SEGMENT
_bReadOnly$ = 8
_this$ = -4
?SetReadOnly@CRichEditCtrl@@QAEHH@Z PROC NEAR		; CRichEditCtrl::SetReadOnly, COMDAT

; 633  : 	{ ASSERT(::IsWindow(m_hWnd)); return (BOOL)::SendMessage(m_hWnd, EM_SETREADONLY, bReadOnly, 0L); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 45 08	 mov	 eax, DWORD PTR _bReadOnly$[ebp]
  0000c	50		 push	 eax
  0000d	68 cf 00 00 00	 push	 207			; 000000cfH
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?SetReadOnly@CRichEditCtrl@@QAEHH@Z ENDP		; CRichEditCtrl::SetReadOnly
_TEXT	ENDS
;	COMDAT ?GetFirstVisibleLine@CRichEditCtrl@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetFirstVisibleLine@CRichEditCtrl@@QBEHXZ PROC NEAR	; CRichEditCtrl::GetFirstVisibleLine, COMDAT

; 635  : 	{ ASSERT(::IsWindow(m_hWnd)); return (int)::SendMessage(m_hWnd, EM_GETFIRSTVISIBLELINE, 0, 0L); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 ce 00 00 00	 push	 206			; 000000ceH
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetFirstVisibleLine@CRichEditCtrl@@QBEHXZ ENDP		; CRichEditCtrl::GetFirstVisibleLine
_TEXT	ENDS
;	COMDAT ?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z
_TEXT	SEGMENT
_cr$ = 8
_this$ = -4
?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z PROC NEAR	; CRichEditCtrl::GetSel, COMDAT

; 639  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_EXGETSEL, 0, (LPARAM)&cr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _cr$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 34 04 00 00	 push	 1076			; 00000434H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z ENDP	; CRichEditCtrl::GetSel
_TEXT	ENDS
;	COMDAT ?LineFromChar@CRichEditCtrl@@QBEJJ@Z
_TEXT	SEGMENT
_nIndex$ = 8
_this$ = -4
?LineFromChar@CRichEditCtrl@@QBEJJ@Z PROC NEAR		; CRichEditCtrl::LineFromChar, COMDAT

; 645  : 	{ ASSERT(::IsWindow(m_hWnd)); return (long)::SendMessage(m_hWnd, EM_EXLINEFROMCHAR, 0, nIndex); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 36 04 00 00	 push	 1078			; 00000436H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?LineFromChar@CRichEditCtrl@@QBEJJ@Z ENDP		; CRichEditCtrl::LineFromChar
_TEXT	ENDS
;	COMDAT ?SetSel@CRichEditCtrl@@QAEXAAU_charrange@@@Z
_TEXT	SEGMENT
_cr$ = 8
_this$ = -4
?SetSel@CRichEditCtrl@@QAEXAAU_charrange@@@Z PROC NEAR	; CRichEditCtrl::SetSel, COMDAT

; 648  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_EXSETSEL, 0, (LPARAM)&cr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _cr$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 37 04 00 00	 push	 1079			; 00000437H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?SetSel@CRichEditCtrl@@QAEXAAU_charrange@@@Z ENDP	; CRichEditCtrl::SetSel
_TEXT	ENDS
;	COMDAT ?GetEventMask@CRichEditCtrl@@QBEJXZ
_TEXT	SEGMENT
_this$ = -4
?GetEventMask@CRichEditCtrl@@QBEJXZ PROC NEAR		; CRichEditCtrl::GetEventMask, COMDAT

; 657  : 	{ ASSERT(::IsWindow(m_hWnd)); return (long)::SendMessage(m_hWnd, EM_GETEVENTMASK, 0, 0L); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 3b 04 00 00	 push	 1083			; 0000043bH
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetEventMask@CRichEditCtrl@@QBEJXZ ENDP		; CRichEditCtrl::GetEventMask
_TEXT	ENDS
;	COMDAT ?GetLimitText@CRichEditCtrl@@QBEJXZ
_TEXT	SEGMENT
_this$ = -4
?GetLimitText@CRichEditCtrl@@QBEJXZ PROC NEAR		; CRichEditCtrl::GetLimitText, COMDAT

; 660  : 	{ ASSERT(::IsWindow(m_hWnd)); return (long)::SendMessage(m_hWnd, EM_GETLIMITTEXT, 0, 0L); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 d5 00 00 00	 push	 213			; 000000d5H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00016	51		 push	 ecx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetLimitText@CRichEditCtrl@@QBEJXZ ENDP		; CRichEditCtrl::GetLimitText
_TEXT	ENDS
;	COMDAT ?HideSelection@CRichEditCtrl@@QAEXHH@Z
_TEXT	SEGMENT
_bHide$ = 8
_bPerm$ = 12
_this$ = -4
?HideSelection@CRichEditCtrl@@QAEXHH@Z PROC NEAR	; CRichEditCtrl::HideSelection, COMDAT

; 666  : 	{ ASSERT(::IsWindow(m_hWnd)); ::SendMessage(m_hWnd, EM_HIDESELECTION, bHide, bPerm); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _bPerm$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _bHide$[ebp]
  0000e	51		 push	 ecx
  0000f	68 3f 04 00 00	 push	 1087			; 0000043fH
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?HideSelection@CRichEditCtrl@@QAEXHH@Z ENDP		; CRichEditCtrl::HideSelection
_TEXT	ENDS
;	COMDAT ?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z
_TEXT	SEGMENT
_bSysColor$ = 8
_cr$ = 12
_this$ = -4
?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z PROC NEAR	; CRichEditCtrl::SetBackgroundColor, COMDAT

; 675  : 	{ ASSERT(::IsWindow(m_hWnd)); return (COLORREF)::SendMessage(m_hWnd, EM_SETBKGNDCOLOR, bSysColor, cr); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 0c	 mov	 eax, DWORD PTR _cr$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _bSysColor$[ebp]
  0000e	51		 push	 ecx
  0000f	68 43 04 00 00	 push	 1091			; 00000443H
  00014	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00017	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z ENDP	; CRichEditCtrl::SetBackgroundColor
_TEXT	ENDS
;	COMDAT ?SetEventMask@CRichEditCtrl@@QAEKK@Z
_TEXT	SEGMENT
_dwEventMask$ = 8
_this$ = -4
?SetEventMask@CRichEditCtrl@@QAEKK@Z PROC NEAR		; CRichEditCtrl::SetEventMask, COMDAT

; 678  : 	{ ASSERT(::IsWindow(m_hWnd)); return (DWORD)::SendMessage(m_hWnd, EM_SETEVENTMASK, 0, dwEventMask); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR _dwEventMask$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	68 45 04 00 00	 push	 1093			; 00000445H
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00018	52		 push	 edx
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?SetEventMask@CRichEditCtrl@@QAEKK@Z ENDP		; CRichEditCtrl::SetEventMask
_TEXT	ENDS
;	COMDAT ?GetTextLength@CRichEditCtrl@@QBEJXZ
_TEXT	SEGMENT
_this$ = -4
?GetTextLength@CRichEditCtrl@@QBEJXZ PROC NEAR		; CRichEditCtrl::GetTextLength, COMDAT

; 696  : 	{ ASSERT(::IsWindow(m_hWnd)); return (long)::SendMessage(m_hWnd, WM_GETTEXTLENGTH, NULL, NULL); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	6a 0e		 push	 14			; 0000000eH
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00013	51		 push	 ecx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?GetTextLength@CRichEditCtrl@@QBEJXZ ENDP		; CRichEditCtrl::GetTextLength
_TEXT	ENDS
EXTRN	?Release@COleDataObject@@QAEXXZ:NEAR		; COleDataObject::Release
;	COMDAT ??1COleDataObject@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1COleDataObject@@QAE@XZ PROC NEAR			; COleDataObject::~COleDataObject, COMDAT

; 332  : 	{ Release(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Release@COleDataObject@@QAEXXZ ; COleDataObject::Release
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1COleDataObject@@QAE@XZ ENDP				; COleDataObject::~COleDataObject
_TEXT	ENDS
END
